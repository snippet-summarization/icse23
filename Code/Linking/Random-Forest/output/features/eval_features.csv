id,start,end,code,if,while,for,enhancedfor,try,decl,return,break,throw,num substatement,nested level,number lines,same method,same variable,previous blank,next blank,num tokens,num nouns,num verbs,next line blank,common keywords,cosine distance,line distance,statement distance
7366_1,1,1,"    public static void assign(PrintStream stream, AssignStmt assign) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.33,15,14
7366_2,2,2,VarOrFieldUse vfu = assign.getVar();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.4,14,13
7366_3,3,4,"boolean truncateNeeded
= vfu.getType().isIntType() && assign.getValue().getType().isRatType();",0,0,0,0,0,1,0,0,0,0,0,2,1,1,0,0,5,5,0,0,2,0.59,12,12
7366_5,5,5,boolean castNeeded = !assign.getVar().getType().isReferenceType();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,5,0,0,2,0.59,11,11
7366_6,6,29,"if (vfu instanceof FieldUse) {
stream.print(""thisP.setFieldValue(\"""" + vfu.getName() + ""\"", "");
if (truncateNeeded) stream.print(""("");
assign.getValue().generateJavaDynamic(stream);
if (truncateNeeded) stream.print("").truncate()"");
stream.println("");"");
} else {
vfu.generateJavaDynamic(stream);
stream.print("" = "");
if (truncateNeeded) stream.print(""("");
if (castNeeded) {
stream.print(""("");
stream.print(JavaBackend.getQualifiedString(assign.getVar().getType()));
stream.print("")("");
}
assign.getValue().generateJavaDynamic(stream);
if (castNeeded) {
stream.print("")"");
}
if (truncateNeeded) {
stream.print("").truncate()"");
}
stream.println("";"");
}",1,0,0,0,0,0,0,0,0,19,2,24,1,1,0,1,5,5,0,0,3,0.61,0,0
7366_7,7,7,"stream.print(""thisP.setFieldValue(\"""" + vfu.getName() + ""\"", "");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,5,0,0,1,0.48,9,9
7366_8,8,8,"if (truncateNeeded) stream.print(""("");",1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,5,0,0,0,0.28,8,8
7366_9,9,9,assign.getValue().generateJavaDynamic(stream);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.49,7,7
7366_10,10,10,"if (truncateNeeded) stream.print("").truncate()"");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.29,6,6
7366_11,11,11,"stream.println("");"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.33,5,5
7366_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.33,4,4
7366_13,13,13,vfu.generateJavaDynamic(stream);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.38,3,3
7366_14,14,14,"stream.print("" = "");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,5,0,0,0,0.25,2,2
7366_15,15,15,"if (truncateNeeded) stream.print(""("");",1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,5,0,0,0,0.28,1,1
7366_16,16,20,"if (castNeeded) {
stream.print(""("");
stream.print(JavaBackend.getQualifiedString(assign.getVar().getType()));
stream.print("")("");
}",1,0,0,0,0,0,0,0,0,3,1,5,1,0,0,0,5,5,0,0,2,0.54,0,0
7366_17,17,17,"stream.print(""("");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,5,0,0,0,0.25,0,0
7366_18,18,18,stream.print(JavaBackend.getQualifiedString(assign.getVar().getType()));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,5,0,0,1,0.48,1,0
7366_19,19,19,"stream.print("")("");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,5,0,0,0,0.25,2,1
7366_21,21,21,assign.getValue().generateJavaDynamic(stream);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.49,4,3
7366_22,22,24,"if (castNeeded) {
stream.print("")"");
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,5,5,0,0,1,0.4,5,3
7366_23,23,23,"stream.print("")"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.25,6,4
7366_25,25,27,"if (truncateNeeded) {
stream.print("").truncate()"");
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,5,5,0,0,0,0.29,8,6
7366_26,26,26,"stream.print("").truncate()"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.3,9,6
7366_28,28,28,"stream.println("";"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.33,11,8
7366_31,31,36,"if (assign.getVar() instanceof VarUse) {
stream.print(""if (thisP.__ABS_getRuntime().debuggingEnabled()) "");
stream.print(""thisP.__ABS_getRuntime().getCurrentTask().setLocalVariable(\"""" + assign.getVar().getName() + ""\"", "");
assign.getVar().generateJavaDynamic(stream);
stream.println("");"");
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,1,1,5,5,0,0,1,0.47,14,9
7366_32,32,32,"stream.print(""if (thisP.__ABS_getRuntime().debuggingEnabled()) "");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,5,0,0,1,0.45,15,9
7366_33,33,33,"stream.print(""thisP.__ABS_getRuntime().getCurrentTask().setLocalVariable(\"""" + assign.getVar().getName() + ""\"", "");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,5,0,0,1,0.44,16,10
7366_34,34,34,assign.getVar().generateJavaDynamic(stream);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,5,0,0,0,0.42,17,11
7366_35,35,35,"stream.println("");"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.33,18,12
7365_1,1,1,"    public static void generateAwaitStmt(AwaitStmt awaitStmt, PrintStream stream) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,2,0,2,0.73,2,2
7365_2,2,2,OutputStream exprOStream = new ByteArrayOutputStream();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,5,2,0,2,0.66,1,1
7365_3,3,3,PrintStream exprStream = JavaCodeStream.from(exprOStream);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,5,2,0,2,0.72,0,0
7365_4,4,4,"awaitStmt.getGuard().generateJavaGuardDynamic(stream, exprStream);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,5,2,0,3,0.7,0,0
7365_5,5,5,"stream.print(JavaBackendConstants.ABSRUNTIME + "".await("");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,5,2,0,2,0.7,1,0
7365_6,6,6,stream.print(exprOStream.toString());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,5,2,0,2,0.72,2,1
7365_7,7,7,"stream.println("");"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,2,0,1,0.66,3,2
7364_1,1,1,"private static void replaceVarUse(PrintStream beforeAwaitStream, VarUse v, TypedVarOrFieldDecl vDecl) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.57,6,6
7364_2,2,2,String name = JavaBackend.getVariableName(vDecl.getName());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,2,0.72,5,5
7364_3,3,3,"String tempName = ""temp$"" + tempCounter + ""$"" + name;",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,1,0.67,4,4
7364_4,4,4,"tempCounter = Math.max(tempCounter + 1, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.36,3,3
7364_5,5,5,"beforeAwaitStream.print(""final "");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.41,2,2
7364_6,6,6,vDecl.getTypeUse().generateJavaDynamic(beforeAwaitStream);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.38,1,1
7364_7,7,7,"beforeAwaitStream.print("" "" + tempName + "" = "" + name + "";"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,6,0,0,1,0.66,0,0
7364_8,8,8,v.setName(tempName);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,6,0,0,1,0.64,0,0
7363_1,1,1,"private static void replaceVarUse(PrintStream beforeAwaitStream, VarUse v, TypedVarOrFieldDecl vDecl) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.5,3,3
7363_2,2,2,String name = JavaBackend.getVariableName(vDecl.getName());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.48,2,2
7363_3,3,3,"String tempName = ""temp$"" + tempCounter + ""$"" + name;",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.47,1,1
7363_4,4,4,"tempCounter = Math.max(tempCounter + 1, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.41,0,0
7363_5,5,5,"beforeAwaitStream.print(""final "");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.57,0,0
7363_6,6,6,vDecl.getTypeUse().generateJavaDynamic(beforeAwaitStream);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.37,1,0
7363_7,7,7,"beforeAwaitStream.print("" "" + tempName + "" = "" + name + "";"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.46,2,1
7363_8,8,8,v.setName(tempName);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.4,3,2
7361_1,1,1,"    public static void generateField(PrintStream stream, final FieldDecl f) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,1,0,1,0.53,0,0
7361_2,2,2,"String name = JavaBackend.getVariableName(""field$"" + f.getName());",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,9,8,1,0,1,0.55,0,0
7361_3,3,3,"DynamicJavaGeneratorHelper.generateHelpLine(f, stream);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,1,0,0,0.41,1,0
7361_4,4,4,"stream.println(""public static class "" + name + "" extends "" + ABSField.class.getName() + "" {"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,8,1,0,2,0.59,2,1
7361_5,5,5,"stream.println(""private static "" + ABSField.class.getName() + "" instance;"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,8,1,0,2,0.59,3,2
7361_6,6,6,"stream.println(""public static "" + ABSField.class.getName() + "" singleton() {"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,8,1,0,2,0.6,4,3
7361_7,7,7,"stream.println(""if (instance == null) { instance = new "" + name + ""(); }"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,8,1,0,0,0.34,5,4
7361_8,8,8,"stream.println(""return instance;"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,8,1,0,0,0.34,6,5
7361_9,9,9,"stream.println(""}"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,9,8,1,0,0,0.37,7,6
7361_11,11,11,"stream.println(""public "" + ABSValue.class.getName() + "" init(final "" + ABSDynamicObject.class.getName() + "" thisP "" + "") {"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,8,1,0,1,0.52,9,8
7361_12,12,12,"stream.print(""return "");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,8,1,0,0,0.31,10,8
7361_13,13,17,"if (f.hasInitExp()) {
f.getInitExp().generateJavaDynamic(stream);
} else {
stream.print(""null"");
}",1,0,0,0,0,0,0,0,0,3,1,5,1,0,0,0,9,8,1,0,0,0.45,11,9
7361_14,14,14,f.getInitExp().generateJavaDynamic(stream);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,1,0,0,0.46,12,10
7361_15,15,15,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,1,0,0,0.27,13,11
7361_16,16,16,"stream.print(""null"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,1,0,0,0.3,14,12
7361_18,18,18,"stream.println("";"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,8,1,0,0,0.37,16,14
7361_19,19,19,"stream.println(""}"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,8,1,0,0,0.37,17,14
7361_20,20,20,"stream.println(""}"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,8,1,0,0,0.37,18,15
7120_1,1,1,"private SearchResult rbfs(Problem p, Node node, double node_f, double fLimit, int recursiveDepth) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.52,26,17
7120_2,2,2,updateMetrics(recursiveDepth);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.21,25,16
7120_4,4,5,"if (SearchUtils.isGoalState(p, node))
return getResult(null, node, fLimit);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,4,3,0,0,2,0.63,22,14
7120_5,5,5,"return getResult(null, node, fLimit);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,4,3,0,0,2,0.68,22,14
7120_7,7,7,"List<Node> successors = expandNode(node, p);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.21,20,13
7120_9,9,10,"if (successors.isEmpty())
return getResult(node, null, INFINITY);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,4,3,0,0,2,0.67,17,11
7120_10,10,10,"return getResult(node, null, INFINITY);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,4,3,0,0,2,0.72,17,11
7120_12,12,12,double[] f = new double[successors.size()];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,4,3,0,0,0,0.22,15,10
7120_13,13,13,int size = successors.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,3,0,0,0,0.2,14,9
7120_14,14,16,"for (int s = 0; s < size; s++) {
f[s] = Math.max(evaluationFunction.f(successors.get(s)), node_f);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,1,4,3,0,0,0,0.34,11,7
7120_15,15,15,"f[s] = Math.max(evaluationFunction.f(successors.get(s)), node_f);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.34,12,7
7120_18,18,30,"while (true) {
int bestIndex = getBestFValueIndex(f);
if (f[bestIndex] > fLimit) {
return getResult(node, null, f[bestIndex]);
}
int altIndex = getNextBestFValueIndex(f, bestIndex);
SearchResult sr = rbfs(p, successors.get(bestIndex), f[bestIndex], Math.min(fLimit, f[altIndex]),
recursiveDepth + 1);
f[bestIndex] = sr.getFCostLimit();
if (sr.hasSolution()) {
return getResult(node, sr.getSolutionNode(), sr.getFCostLimit());
}
}",0,1,0,0,0,0,0,0,0,8,2,13,0,0,1,0,4,3,0,0,2,0.58,0,0
7120_19,19,19,int bestIndex = getBestFValueIndex(f);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.28,8,5
7120_20,20,22,"if (f[bestIndex] > fLimit) {
return getResult(node, null, f[bestIndex]);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,2,0.62,5,3
7120_21,21,21,"return getResult(node, null, f[bestIndex]);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.65,6,3
7120_23,23,23,"int altIndex = getNextBestFValueIndex(f, bestIndex);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.29,4,2
7120_24,24,25,"SearchResult sr = rbfs(p, successors.get(bestIndex), f[bestIndex], Math.min(fLimit, f[altIndex]),
recursiveDepth + 1);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,3,0,0,1,0.49,2,1
7120_26,26,26,f[bestIndex] = sr.getFCostLimit();,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,0,0.29,1,0
7120_27,27,29,"if (sr.hasSolution()) {
return getResult(node, sr.getSolutionNode(), sr.getFCostLimit());
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,3,0,0,2,0.62,0,0
7120_28,28,28,"return getResult(node, sr.getSolutionNode(), sr.getFCostLimit());",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.62,1,0
7119_1,1,1,"private SearchResult rbfs(Problem p, Node node, double node_f, double fLimit, int recursiveDepth) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,2,0.67,19,12
7119_2,2,2,updateMetrics(recursiveDepth);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,5,0,0,0,0.46,18,11
7119_4,4,5,"if (SearchUtils.isGoalState(p, node))
return getResult(null, node, fLimit);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,8,5,0,0,3,0.68,15,9
7119_5,5,5,"return getResult(null, node, fLimit);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,8,5,0,0,3,0.73,15,9
7119_7,7,7,"List<Node> successors = expandNode(node, p);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,8,5,0,0,0,0.49,13,8
7119_9,9,10,"if (successors.isEmpty())
return getResult(node, null, INFINITY);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,8,5,0,0,1,0.52,10,6
7119_10,10,10,"return getResult(node, null, INFINITY);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,8,5,0,0,1,0.49,10,6
7119_12,12,12,double[] f = new double[successors.size()];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,8,5,0,0,1,0.6,8,5
7119_13,13,13,int size = successors.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,8,5,0,0,0,0.47,7,4
7119_14,14,16,"for (int s = 0; s < size; s++) {
f[s] = Math.max(evaluationFunction.f(successors.get(s)), node_f);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,1,8,5,0,0,1,0.67,4,2
7119_15,15,15,"f[s] = Math.max(evaluationFunction.f(successors.get(s)), node_f);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.69,5,2
7119_18,18,30,"while (true) {
int bestIndex = getBestFValueIndex(f);
if (f[bestIndex] > fLimit) {
return getResult(node, null, f[bestIndex]);
}
int altIndex = getNextBestFValueIndex(f, bestIndex);
SearchResult sr = rbfs(p, successors.get(bestIndex), f[bestIndex], Math.min(fLimit, f[altIndex]),
recursiveDepth + 1);
f[bestIndex] = sr.getFCostLimit();
if (sr.hasSolution()) {
return getResult(node, sr.getSolutionNode(), sr.getFCostLimit());
}
}",0,1,0,0,0,0,0,0,0,8,2,13,0,0,1,0,8,5,0,0,4,0.79,0,0
7119_19,19,19,int bestIndex = getBestFValueIndex(f);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,0,0,2,0.71,1,0
7119_20,20,22,"if (f[bestIndex] > fLimit) {
return getResult(node, null, f[bestIndex]);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,8,5,0,0,4,0.82,0,0
7119_21,21,21,"return getResult(node, null, f[bestIndex]);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,0,0,3,0.73,1,0
7119_23,23,23,"int altIndex = getNextBestFValueIndex(f, bestIndex);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,0,0,2,0.69,3,2
7119_24,24,25,"SearchResult sr = rbfs(p, successors.get(bestIndex), f[bestIndex], Math.min(fLimit, f[altIndex]),
recursiveDepth + 1);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,8,5,0,0,3,0.74,4,2
7119_26,26,26,f[bestIndex] = sr.getFCostLimit();,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,5,0,0,3,0.81,6,4
7119_27,27,29,"if (sr.hasSolution()) {
return getResult(node, sr.getSolutionNode(), sr.getFCostLimit());
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,8,5,0,0,3,0.72,7,4
7119_28,28,28,"return getResult(node, sr.getSolutionNode(), sr.getFCostLimit());",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,0,0,3,0.72,8,5
7118_1,1,1,"private SearchResult rbfs(Problem p, Node node, double node_f, double fLimit, int recursiveDepth) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,2,0.66,18,11
7118_2,2,2,updateMetrics(recursiveDepth);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,0,0,0,0.51,17,10
7118_4,4,5,"if (SearchUtils.isGoalState(p, node))
return getResult(null, node, fLimit);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,6,3,0,0,2,0.58,14,8
7118_5,5,5,"return getResult(null, node, fLimit);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,6,3,0,0,2,0.57,14,8
7118_7,7,7,"List<Node> successors = expandNode(node, p);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,3,0,0,2,0.73,12,7
7118_9,9,10,"if (successors.isEmpty())
return getResult(node, null, INFINITY);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,6,3,0,0,2,0.57,9,5
7118_10,10,10,"return getResult(node, null, INFINITY);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,6,3,0,0,1,0.48,9,5
7118_12,12,12,double[] f = new double[successors.size()];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,6,3,0,0,2,0.63,7,4
7118_13,13,13,int size = successors.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,3,0,0,1,0.56,6,3
7118_14,14,16,"for (int s = 0; s < size; s++) {
f[s] = Math.max(evaluationFunction.f(successors.get(s)), node_f);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,1,6,3,0,0,3,0.71,3,1
7118_15,15,15,"f[s] = Math.max(evaluationFunction.f(successors.get(s)), node_f);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,3,0.75,4,1
7118_18,18,30,"while (true) {
int bestIndex = getBestFValueIndex(f);
if (f[bestIndex] > fLimit) {
return getResult(node, null, f[bestIndex]);
}
int altIndex = getNextBestFValueIndex(f, bestIndex);
SearchResult sr = rbfs(p, successors.get(bestIndex), f[bestIndex], Math.min(fLimit, f[altIndex]),
recursiveDepth + 1);
f[bestIndex] = sr.getFCostLimit();
if (sr.hasSolution()) {
return getResult(node, sr.getSolutionNode(), sr.getFCostLimit());
}
}",0,1,0,0,0,0,0,0,0,8,2,13,0,0,1,0,6,3,0,0,5,0.79,0,0
7118_19,19,19,int bestIndex = getBestFValueIndex(f);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,3,0.77,0,0
7118_20,20,22,"if (f[bestIndex] > fLimit) {
return getResult(node, null, f[bestIndex]);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,0,0,3,0.71,1,0
7118_21,21,21,"return getResult(node, null, f[bestIndex]);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,0,0,3,0.67,2,1
7118_23,23,23,"int altIndex = getNextBestFValueIndex(f, bestIndex);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,3,0.73,4,3
7118_24,24,25,"SearchResult sr = rbfs(p, successors.get(bestIndex), f[bestIndex], Math.min(fLimit, f[altIndex]),
recursiveDepth + 1);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,6,3,0,0,3,0.68,5,3
7118_26,26,26,f[bestIndex] = sr.getFCostLimit();,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,0,0,2,0.68,7,5
7118_27,27,29,"if (sr.hasSolution()) {
return getResult(node, sr.getSolutionNode(), sr.getFCostLimit());
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,6,3,0,0,2,0.65,8,5
7118_28,28,28,"return getResult(node, sr.getSolutionNode(), sr.getFCostLimit());",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,0,0,2,0.65,9,6
7117_1,1,1,"private SearchResult rbfs(Problem p, Node node, double node_f, double fLimit, int recursiveDepth) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,2,0.58,12,7
7117_2,2,2,updateMetrics(recursiveDepth);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,5,0,0,1,0.59,11,6
7117_4,4,5,"if (SearchUtils.isGoalState(p, node))
return getResult(null, node, fLimit);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,6,5,0,0,2,0.53,8,4
7117_5,5,5,"return getResult(null, node, fLimit);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,6,5,0,0,1,0.44,8,4
7117_7,7,7,"List<Node> successors = expandNode(node, p);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,5,0,0,1,0.48,6,3
7117_9,9,10,"if (successors.isEmpty())
return getResult(node, null, INFINITY);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,6,5,0,0,1,0.42,3,1
7117_10,10,10,"return getResult(node, null, INFINITY);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,6,5,0,0,0,0.32,3,1
7117_12,12,12,double[] f = new double[successors.size()];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,6,5,0,0,2,0.56,1,0
7117_13,13,13,int size = successors.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,5,0,0,1,0.5,0,0
7117_14,14,16,"for (int s = 0; s < size; s++) {
f[s] = Math.max(evaluationFunction.f(successors.get(s)), node_f);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,1,6,5,0,0,2,0.58,1,0
7117_15,15,15,"f[s] = Math.max(evaluationFunction.f(successors.get(s)), node_f);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,2,0.61,2,1
7117_18,18,30,"while (true) {
int bestIndex = getBestFValueIndex(f);
if (f[bestIndex] > fLimit) {
return getResult(node, null, f[bestIndex]);
}
int altIndex = getNextBestFValueIndex(f, bestIndex);
SearchResult sr = rbfs(p, successors.get(bestIndex), f[bestIndex], Math.min(fLimit, f[altIndex]),
recursiveDepth + 1);
f[bestIndex] = sr.getFCostLimit();
if (sr.hasSolution()) {
return getResult(node, sr.getSolutionNode(), sr.getFCostLimit());
}
}",0,1,0,0,0,0,0,0,0,8,2,13,0,0,1,0,6,5,0,0,4,0.69,5,3
7117_19,19,19,int bestIndex = getBestFValueIndex(f);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.61,6,3
7117_20,20,22,"if (f[bestIndex] > fLimit) {
return getResult(node, null, f[bestIndex]);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,5,0,0,1,0.51,7,4
7117_21,21,21,"return getResult(node, null, f[bestIndex]);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.47,8,5
7117_23,23,23,"int altIndex = getNextBestFValueIndex(f, bestIndex);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.59,10,7
7117_24,24,25,"SearchResult sr = rbfs(p, successors.get(bestIndex), f[bestIndex], Math.min(fLimit, f[altIndex]),
recursiveDepth + 1);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,6,5,0,0,3,0.64,11,7
7117_26,26,26,f[bestIndex] = sr.getFCostLimit();,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,5,0,0,1,0.56,13,9
7117_27,27,29,"if (sr.hasSolution()) {
return getResult(node, sr.getSolutionNode(), sr.getFCostLimit());
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,6,5,0,0,1,0.48,14,9
7117_28,28,28,"return getResult(node, sr.getSolutionNode(), sr.getFCostLimit());",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.48,15,10
7116_1,1,1,"private SearchResult rbfs(Problem p, Node node, double node_f, double fLimit, int recursiveDepth) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.43,8,4
7116_2,2,2,updateMetrics(recursiveDepth);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,4,0,0,0,0.39,7,3
7116_4,4,5,"if (SearchUtils.isGoalState(p, node))
return getResult(null, node, fLimit);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,5,4,0,0,1,0.51,4,1
7116_5,5,5,"return getResult(null, node, fLimit);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,5,4,0,0,1,0.49,4,1
7116_7,7,7,"List<Node> successors = expandNode(node, p);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,4,0,0,1,0.46,2,0
7116_9,9,10,"if (successors.isEmpty())
return getResult(node, null, INFINITY);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,5,4,0,0,4,0.73,0,0
7116_10,10,10,"return getResult(node, null, INFINITY);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,5,4,0,0,2,0.51,1,0
7116_12,12,12,double[] f = new double[successors.size()];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,5,4,0,0,1,0.43,3,2
7116_13,13,13,int size = successors.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,4,0,0,1,0.47,4,2
7116_14,14,16,"for (int s = 0; s < size; s++) {
f[s] = Math.max(evaluationFunction.f(successors.get(s)), node_f);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,1,5,4,0,0,1,0.48,5,3
7116_15,15,15,"f[s] = Math.max(evaluationFunction.f(successors.get(s)), node_f);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.49,6,4
7116_18,18,30,"while (true) {
int bestIndex = getBestFValueIndex(f);
if (f[bestIndex] > fLimit) {
return getResult(node, null, f[bestIndex]);
}
int altIndex = getNextBestFValueIndex(f, bestIndex);
SearchResult sr = rbfs(p, successors.get(bestIndex), f[bestIndex], Math.min(fLimit, f[altIndex]),
recursiveDepth + 1);
f[bestIndex] = sr.getFCostLimit();
if (sr.hasSolution()) {
return getResult(node, sr.getSolutionNode(), sr.getFCostLimit());
}
}",0,1,0,0,0,0,0,0,0,8,2,13,0,0,1,0,5,4,0,0,2,0.57,9,6
7116_19,19,19,int bestIndex = getBestFValueIndex(f);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.39,10,6
7116_20,20,22,"if (f[bestIndex] > fLimit) {
return getResult(node, null, f[bestIndex]);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,4,0,0,1,0.53,11,7
7116_21,21,21,"return getResult(node, null, f[bestIndex]);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.53,12,8
7116_23,23,23,"int altIndex = getNextBestFValueIndex(f, bestIndex);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.41,14,10
7116_24,24,25,"SearchResult sr = rbfs(p, successors.get(bestIndex), f[bestIndex], Math.min(fLimit, f[altIndex]),
recursiveDepth + 1);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,4,0,0,1,0.48,15,10
7116_26,26,26,f[bestIndex] = sr.getFCostLimit();,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,4,0,0,0,0.41,17,12
7116_27,27,29,"if (sr.hasSolution()) {
return getResult(node, sr.getSolutionNode(), sr.getFCostLimit());
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,4,0,0,1,0.51,18,12
7116_28,28,28,"return getResult(node, sr.getSolutionNode(), sr.getFCostLimit());",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.51,19,13
7031_1,1,1,"protected int writeObject(STWriter out, InstanceScope scope, Object o, String[] options) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,2,0.57,10,8
7031_2,2,2,int n = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.29,9,7
7031_3,3,8,"if ( o == null ) {
if ( options!=null && options[Option.NULL.ordinal()]!=null ) {
o = options[Option.NULL.ordinal()];
}
else return 0;
}",1,0,0,0,0,0,0,0,0,3,2,6,1,0,0,0,7,3,2,0,0,0.36,3,3
7031_4,4,7,"if ( options!=null && options[Option.NULL.ordinal()]!=null ) {
o = options[Option.NULL.ordinal()];
}
else return 0;",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,7,3,2,0,0,0.36,4,3
7031_5,5,5,o = options[Option.NULL.ordinal()];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.37,6,4
7031_7,7,7,else return 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.25,4,3
7031_9,9,30,"if ( o instanceof ST ) {
scope = new InstanceScope(scope, (ST)o);
if ( options!=null && options[Option.WRAP.ordinal()]!=null ) {
try {
out.writeWrap(options[Option.WRAP.ordinal()]);
}
catch (IOException ioe) {
errMgr.IOError(scope.st, ErrorType.WRITE_IO_ERROR, ioe);
}
}
n = exec(out, scope);
}
else {
o = convertAnythingIteratableToIterator(scope, o);
try {
if ( o instanceof Iterator) n = writeIterator(out, scope, o, options);
else n = writePOJO(out, scope, o, options);
}
catch (IOException ioe) {
errMgr.IOError(scope.st, ErrorType.WRITE_IO_ERROR, ioe, o);
}
}",1,0,0,0,0,0,0,0,0,14,3,22,1,1,0,0,7,3,2,0,1,0.57,0,0
7031_10,10,10,"scope = new InstanceScope(scope, (ST)o);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.45,1,1
7031_11,11,18,"if ( options!=null && options[Option.WRAP.ordinal()]!=null ) {
try {
out.writeWrap(options[Option.WRAP.ordinal()]);
}
catch (IOException ioe) {
errMgr.IOError(scope.st, ErrorType.WRITE_IO_ERROR, ioe);
}
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,0,0,7,3,2,0,1,0.58,0,0
7031_12,12,17,"try {
out.writeWrap(options[Option.WRAP.ordinal()]);
}
catch (IOException ioe) {
errMgr.IOError(scope.st, ErrorType.WRITE_IO_ERROR, ioe);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,7,3,2,0,1,0.59,0,0
7031_13,13,13,out.writeWrap(options[Option.WRAP.ordinal()]);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,1,0.63,1,0
7031_15,15,15,catch (IOException ioe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.46,3,2
7031_16,16,16,"errMgr.IOError(scope.st, ErrorType.WRITE_IO_ERROR, ioe);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.49,4,2
7031_19,19,19,"n = exec(out, scope);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.38,7,4
7031_21,21,21,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.19,9,5
7031_22,22,22,"o = convertAnythingIteratableToIterator(scope, o);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.39,10,5
7031_23,23,29,"try {
if ( o instanceof Iterator) n = writeIterator(out, scope, o, options);
else n = writePOJO(out, scope, o, options);
}
catch (IOException ioe) {
errMgr.IOError(scope.st, ErrorType.WRITE_IO_ERROR, ioe, o);
}",0,0,0,0,1,0,0,0,0,4,1,7,0,0,0,0,7,3,2,0,0,0.48,11,6
7031_24,24,25,"if ( o instanceof Iterator) n = writeIterator(out, scope, o, options);
else n = writePOJO(out, scope, o, options);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,7,3,2,0,0,0.45,12,7
7031_25,25,25,"else n = writePOJO(out, scope, o, options);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.39,13,8
7031_27,27,27,catch (IOException ioe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.46,15,10
7031_28,28,28,"errMgr.IOError(scope.st, ErrorType.WRITE_IO_ERROR, ioe, o);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.49,16,10
7031_31,31,31,return n;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,7,3,2,0,0,0.31,19,12
7030_1,1,1,"void storeArgs(InstanceScope scope, Map<String,Object> attrs, ST st) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,0,0,1,0.51,53,31
7030_2,2,2,boolean noSuchAttributeReported = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,13,9,0,0,0,0.43,52,30
7030_3,3,33,"if (attrs != null) {
for (Map.Entry<String, Object> argument : attrs.entrySet()) {
if (!st.impl.hasFormalArgs) {
if (st.impl.formalArguments == null || !st.impl.formalArguments.containsKey(argument.getKey())) {
try {
st.impl = st.impl.clone();
st.add(argument.getKey(), argument.getValue());
} catch (CloneNotSupportedException ex) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
}
}
else {
st.rawSetAttribute(argument.getKey(), argument.getValue());
}
}
else {
if ( st.impl.formalArguments==null || !st.impl.formalArguments.containsKey(argument.getKey()) ) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
continue;
}

st.rawSetAttribute(argument.getKey(), argument.getValue());
}
}
}",1,0,0,0,0,0,0,0,0,17,5,31,0,1,0,1,13,9,0,0,1,0.53,21,12
7030_4,4,32,"for (Map.Entry<String, Object> argument : attrs.entrySet()) {
if (!st.impl.hasFormalArgs) {
if (st.impl.formalArguments == null || !st.impl.formalArguments.containsKey(argument.getKey())) {
try {
st.impl = st.impl.clone();
st.add(argument.getKey(), argument.getValue());
} catch (CloneNotSupportedException ex) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
}
}
else {
st.rawSetAttribute(argument.getKey(), argument.getValue());
}
}
else {
if ( st.impl.formalArguments==null || !st.impl.formalArguments.containsKey(argument.getKey()) ) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
continue;
}

st.rawSetAttribute(argument.getKey(), argument.getValue());
}
}",0,0,0,1,0,0,0,0,0,16,4,29,0,0,0,0,13,9,0,0,1,0.53,22,12
7030_5,5,31,"if (!st.impl.hasFormalArgs) {
if (st.impl.formalArguments == null || !st.impl.formalArguments.containsKey(argument.getKey())) {
try {
st.impl = st.impl.clone();
st.add(argument.getKey(), argument.getValue());
} catch (CloneNotSupportedException ex) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
}
}
else {
st.rawSetAttribute(argument.getKey(), argument.getValue());
}
}
else {
if ( st.impl.formalArguments==null || !st.impl.formalArguments.containsKey(argument.getKey()) ) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
continue;
}

st.rawSetAttribute(argument.getKey(), argument.getValue());
}",1,0,0,0,0,0,0,0,0,15,3,27,0,0,0,0,13,9,0,0,1,0.53,23,12
7030_6,6,19,"if (st.impl.formalArguments == null || !st.impl.formalArguments.containsKey(argument.getKey())) {
try {
st.impl = st.impl.clone();
st.add(argument.getKey(), argument.getValue());
} catch (CloneNotSupportedException ex) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
}
}
else {
st.rawSetAttribute(argument.getKey(), argument.getValue());
}",1,0,0,0,0,0,0,0,0,8,2,14,0,0,0,0,13,9,0,0,1,0.53,35,18
7030_7,7,15,"try {
st.impl = st.impl.clone();
st.add(argument.getKey(), argument.getValue());
} catch (CloneNotSupportedException ex) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
}",0,0,0,0,1,0,0,0,0,5,1,9,0,0,0,0,13,9,0,0,1,0.52,39,20
7030_8,8,8,st.impl = st.impl.clone();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,0,0,0,0.44,46,24
7030_9,9,9,"st.add(argument.getKey(), argument.getValue());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,0,0,1,0.51,45,23
7030_10,10,10,} catch (CloneNotSupportedException ex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,0,0,0,0.46,44,22
7030_11,11,11,noSuchAttributeReported = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,0,0,0,0.45,43,21
7030_12,12,14,"errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,13,9,0,0,1,0.48,40,20
7030_17,17,17,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,0,0,0,0.26,37,19
7030_18,18,18,"st.rawSetAttribute(argument.getKey(), argument.getValue());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,0,0,1,0.52,36,18
7030_21,21,21,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,0,0,0,0.26,33,17
7030_22,22,28,"if ( st.impl.formalArguments==null || !st.impl.formalArguments.containsKey(argument.getKey()) ) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
continue;
}",1,0,0,0,0,0,0,0,0,3,1,7,0,0,0,1,13,9,0,0,1,0.51,26,13
7030_23,23,23,noSuchAttributeReported = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,0,0,0,0.45,31,15
7030_24,24,26,"errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,13,9,0,0,1,0.48,28,14
7030_27,27,27,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,0,0,0,0.33,27,13
7030_30,30,30,"st.rawSetAttribute(argument.getKey(), argument.getValue());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,13,9,0,0,1,0.52,24,12
7030_35,35,68,"if (st.impl.hasFormalArgs) {
boolean argumentCountMismatch = false;
Map<String, FormalArgument> formalArguments = st.impl.formalArguments;
if (formalArguments == null) {
formalArguments = Collections.emptyMap();
}

if (!noSuchAttributeReported) {
for (Map.Entry<String, FormalArgument> formalArgument : formalArguments.entrySet()) {
if (formalArgument.getValue().defaultValueToken != null || formalArgument.getValue().defaultValue != null) {
continue;
}

if (attrs == null || !attrs.containsKey(formalArgument.getKey())) {
argumentCountMismatch = true;
break;
}
}
}

if (attrs != null && attrs.size() > formalArguments.size()) {
argumentCountMismatch = true;
}

if (argumentCountMismatch) {
int nargs = attrs != null ? attrs.size() : 0;
int nformalArgs = formalArguments.size();
errMgr.runTimeError(this, scope,
ErrorType.ARGUMENT_COUNT_MISMATCH,
nargs,
st.impl.name,
nformalArgs);
}
}",1,0,0,0,0,0,0,0,0,17,4,34,0,0,1,0,13,9,0,0,2,0.55,0,0
7030_36,36,36,boolean argumentCountMismatch = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,13,9,0,0,1,0.51,18,10
7030_37,37,37,"Map<String, FormalArgument> formalArguments = st.impl.formalArguments;",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,13,9,0,0,1,0.57,17,9
7030_38,38,40,"if (formalArguments == null) {
formalArguments = Collections.emptyMap();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,13,9,0,0,1,0.52,14,7
7030_39,39,39,formalArguments = Collections.emptyMap();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,0,0,1,0.5,15,7
7030_42,42,53,"if (!noSuchAttributeReported) {
for (Map.Entry<String, FormalArgument> formalArgument : formalArguments.entrySet()) {
if (formalArgument.getValue().defaultValueToken != null || formalArgument.getValue().defaultValue != null) {
continue;
}

if (attrs == null || !attrs.containsKey(formalArgument.getKey())) {
argumentCountMismatch = true;
break;
}
}
}",1,0,0,0,0,0,0,0,0,6,3,12,0,0,1,1,13,9,0,0,1,0.51,1,0
7030_43,43,52,"for (Map.Entry<String, FormalArgument> formalArgument : formalArguments.entrySet()) {
if (formalArgument.getValue().defaultValueToken != null || formalArgument.getValue().defaultValue != null) {
continue;
}

if (attrs == null || !attrs.containsKey(formalArgument.getKey())) {
argumentCountMismatch = true;
break;
}
}",0,0,0,1,0,0,0,0,0,5,2,10,0,0,0,0,13,9,0,0,1,0.5,2,0
7030_44,44,46,"if (formalArgument.getValue().defaultValueToken != null || formalArgument.getValue().defaultValue != null) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,13,9,0,0,1,0.46,8,3
7030_45,45,45,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,0,0,0,0.33,9,3
7030_48,48,51,"if (attrs == null || !attrs.containsKey(formalArgument.getKey())) {
argumentCountMismatch = true;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,13,9,0,0,1,0.48,3,0
7030_49,49,49,argumentCountMismatch = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,0,0,1,0.53,5,1
7030_50,50,50,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,13,9,0,0,0,0.3,4,0
7030_55,55,57,"if (attrs != null && attrs.size() > formalArguments.size()) {
argumentCountMismatch = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,13,9,0,0,1,0.49,0,0
7030_56,56,56,argumentCountMismatch = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,0,0,1,0.53,1,0
7030_59,59,67,"if (argumentCountMismatch) {
int nargs = attrs != null ? attrs.size() : 0;
int nformalArgs = formalArguments.size();
errMgr.runTimeError(this, scope,
ErrorType.ARGUMENT_COUNT_MISMATCH,
nargs,
st.impl.name,
nformalArgs);
}",1,0,0,0,0,0,0,0,0,3,1,9,0,0,1,0,13,9,0,0,2,0.54,4,2
7030_60,60,60,int nargs = attrs != null ? attrs.size() : 0;,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,13,9,0,0,0,0.33,5,2
7030_61,61,61,int nformalArgs = formalArguments.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,13,9,0,0,1,0.52,6,3
7030_62,62,66,"errMgr.runTimeError(this, scope,
ErrorType.ARGUMENT_COUNT_MISMATCH,
nargs,
st.impl.name,
nformalArgs);",0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,0,13,9,0,0,2,0.54,7,4
7029_1,1,1,"void storeArgs(InstanceScope scope, Map<String,Object> attrs, ST st) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,3,0,1,0.5,43,27
7029_2,2,2,boolean noSuchAttributeReported = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,3,0,0,0.36,42,26
7029_3,3,33,"if (attrs != null) {
for (Map.Entry<String, Object> argument : attrs.entrySet()) {
if (!st.impl.hasFormalArgs) {
if (st.impl.formalArguments == null || !st.impl.formalArguments.containsKey(argument.getKey())) {
try {
st.impl = st.impl.clone();
st.add(argument.getKey(), argument.getValue());
} catch (CloneNotSupportedException ex) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
}
}
else {
st.rawSetAttribute(argument.getKey(), argument.getValue());
}
}
else {
if ( st.impl.formalArguments==null || !st.impl.formalArguments.containsKey(argument.getKey()) ) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
continue;
}

st.rawSetAttribute(argument.getKey(), argument.getValue());
}
}
}",1,0,0,0,0,0,0,0,0,17,5,31,0,1,0,1,6,3,3,0,3,0.59,11,8
7029_4,4,32,"for (Map.Entry<String, Object> argument : attrs.entrySet()) {
if (!st.impl.hasFormalArgs) {
if (st.impl.formalArguments == null || !st.impl.formalArguments.containsKey(argument.getKey())) {
try {
st.impl = st.impl.clone();
st.add(argument.getKey(), argument.getValue());
} catch (CloneNotSupportedException ex) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
}
}
else {
st.rawSetAttribute(argument.getKey(), argument.getValue());
}
}
else {
if ( st.impl.formalArguments==null || !st.impl.formalArguments.containsKey(argument.getKey()) ) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
continue;
}

st.rawSetAttribute(argument.getKey(), argument.getValue());
}
}",0,0,0,1,0,0,0,0,0,16,4,29,0,0,0,0,6,3,3,0,3,0.59,12,8
7029_5,5,31,"if (!st.impl.hasFormalArgs) {
if (st.impl.formalArguments == null || !st.impl.formalArguments.containsKey(argument.getKey())) {
try {
st.impl = st.impl.clone();
st.add(argument.getKey(), argument.getValue());
} catch (CloneNotSupportedException ex) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
}
}
else {
st.rawSetAttribute(argument.getKey(), argument.getValue());
}
}
else {
if ( st.impl.formalArguments==null || !st.impl.formalArguments.containsKey(argument.getKey()) ) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
continue;
}

st.rawSetAttribute(argument.getKey(), argument.getValue());
}",1,0,0,0,0,0,0,0,0,15,3,27,0,0,0,0,6,3,3,0,2,0.55,13,8
7029_6,6,19,"if (st.impl.formalArguments == null || !st.impl.formalArguments.containsKey(argument.getKey())) {
try {
st.impl = st.impl.clone();
st.add(argument.getKey(), argument.getValue());
} catch (CloneNotSupportedException ex) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
}
}
else {
st.rawSetAttribute(argument.getKey(), argument.getValue());
}",1,0,0,0,0,0,0,0,0,8,2,14,0,0,0,0,6,3,3,0,2,0.56,25,14
7029_7,7,15,"try {
st.impl = st.impl.clone();
st.add(argument.getKey(), argument.getValue());
} catch (CloneNotSupportedException ex) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
}",0,0,0,0,1,0,0,0,0,5,1,9,0,0,0,0,6,3,3,0,2,0.54,29,16
7029_8,8,8,st.impl = st.impl.clone();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,3,0,0,0.42,36,20
7029_9,9,9,"st.add(argument.getKey(), argument.getValue());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,3,0,2,0.57,35,19
7029_10,10,10,} catch (CloneNotSupportedException ex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,3,0,0,0.43,34,18
7029_11,11,11,noSuchAttributeReported = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,3,0,0,0.36,33,17
7029_12,12,14,"errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,6,3,3,0,1,0.46,30,16
7029_17,17,17,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,3,0,0,0.21,27,15
7029_18,18,18,"st.rawSetAttribute(argument.getKey(), argument.getValue());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,3,0,2,0.55,26,14
7029_21,21,21,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,3,0,0,0.21,23,13
7029_22,22,28,"if ( st.impl.formalArguments==null || !st.impl.formalArguments.containsKey(argument.getKey()) ) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
continue;
}",1,0,0,0,0,0,0,0,0,3,1,7,0,0,0,1,6,3,3,0,1,0.48,16,9
7029_23,23,23,noSuchAttributeReported = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,3,0,0,0.36,21,11
7029_24,24,26,"errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,6,3,3,0,1,0.46,18,10
7029_27,27,27,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,3,0,0,0.28,17,9
7029_30,30,30,"st.rawSetAttribute(argument.getKey(), argument.getValue());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,3,0,2,0.55,14,8
7029_35,35,68,"if (st.impl.hasFormalArgs) {
boolean argumentCountMismatch = false;
Map<String, FormalArgument> formalArguments = st.impl.formalArguments;
if (formalArguments == null) {
formalArguments = Collections.emptyMap();
}

if (!noSuchAttributeReported) {
for (Map.Entry<String, FormalArgument> formalArgument : formalArguments.entrySet()) {
if (formalArgument.getValue().defaultValueToken != null || formalArgument.getValue().defaultValue != null) {
continue;
}

if (attrs == null || !attrs.containsKey(formalArgument.getKey())) {
argumentCountMismatch = true;
break;
}
}
}

if (attrs != null && attrs.size() > formalArguments.size()) {
argumentCountMismatch = true;
}

if (argumentCountMismatch) {
int nargs = attrs != null ? attrs.size() : 0;
int nformalArgs = formalArguments.size();
errMgr.runTimeError(this, scope,
ErrorType.ARGUMENT_COUNT_MISMATCH,
nargs,
st.impl.name,
nformalArgs);
}
}",1,0,0,0,0,0,0,0,0,17,4,34,0,0,1,0,6,3,3,0,4,0.68,0,0
7029_36,36,36,boolean argumentCountMismatch = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,3,0,1,0.47,8,6
7029_37,37,37,"Map<String, FormalArgument> formalArguments = st.impl.formalArguments;",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,3,0,1,0.55,7,5
7029_38,38,40,"if (formalArguments == null) {
formalArguments = Collections.emptyMap();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,6,3,3,0,1,0.5,4,3
7029_39,39,39,formalArguments = Collections.emptyMap();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,3,0,1,0.47,5,3
7029_42,42,53,"if (!noSuchAttributeReported) {
for (Map.Entry<String, FormalArgument> formalArgument : formalArguments.entrySet()) {
if (formalArgument.getValue().defaultValueToken != null || formalArgument.getValue().defaultValue != null) {
continue;
}

if (attrs == null || !attrs.containsKey(formalArgument.getKey())) {
argumentCountMismatch = true;
break;
}
}
}",1,0,0,0,0,0,0,0,0,6,3,12,0,0,1,1,6,3,3,0,4,0.68,0,0
7029_43,43,52,"for (Map.Entry<String, FormalArgument> formalArgument : formalArguments.entrySet()) {
if (formalArgument.getValue().defaultValueToken != null || formalArgument.getValue().defaultValue != null) {
continue;
}

if (attrs == null || !attrs.containsKey(formalArgument.getKey())) {
argumentCountMismatch = true;
break;
}
}",0,0,0,1,0,0,0,0,0,5,2,10,0,0,0,0,6,3,3,0,4,0.68,0,0
7029_44,44,46,"if (formalArgument.getValue().defaultValueToken != null || formalArgument.getValue().defaultValue != null) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,3,3,0,3,0.67,0,0
7029_45,45,45,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,3,0,0,0.28,0,0
7029_48,48,51,"if (attrs == null || !attrs.containsKey(formalArgument.getKey())) {
argumentCountMismatch = true;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,6,3,3,0,2,0.53,3,1
7029_49,49,49,argumentCountMismatch = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,3,0,1,0.48,4,1
7029_50,50,50,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,3,3,0,0,0.23,5,2
7029_55,55,57,"if (attrs != null && attrs.size() > formalArguments.size()) {
argumentCountMismatch = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,3,3,0,2,0.56,10,4
7029_56,56,56,argumentCountMismatch = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,3,0,1,0.48,11,4
7029_59,59,67,"if (argumentCountMismatch) {
int nargs = attrs != null ? attrs.size() : 0;
int nformalArgs = formalArguments.size();
errMgr.runTimeError(this, scope,
ErrorType.ARGUMENT_COUNT_MISMATCH,
nargs,
st.impl.name,
nformalArgs);
}",1,0,0,0,0,0,0,0,0,3,1,9,0,0,1,0,6,3,3,0,2,0.54,14,6
7029_60,60,60,int nargs = attrs != null ? attrs.size() : 0;,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,6,3,3,0,1,0.47,15,6
7029_61,61,61,int nformalArgs = formalArguments.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,3,3,0,1,0.49,16,7
7029_62,62,66,"errMgr.runTimeError(this, scope,
ErrorType.ARGUMENT_COUNT_MISMATCH,
nargs,
st.impl.name,
nformalArgs);",0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,0,6,3,3,0,1,0.48,17,8
7028_1,1,1,"void storeArgs(InstanceScope scope, Map<String,Object> attrs, ST st) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,1,0,0,0.46,40,24
7028_2,2,2,boolean noSuchAttributeReported = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,13,9,1,0,1,0.51,39,23
7028_3,3,33,"if (attrs != null) {
for (Map.Entry<String, Object> argument : attrs.entrySet()) {
if (!st.impl.hasFormalArgs) {
if (st.impl.formalArguments == null || !st.impl.formalArguments.containsKey(argument.getKey())) {
try {
st.impl = st.impl.clone();
st.add(argument.getKey(), argument.getValue());
} catch (CloneNotSupportedException ex) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
}
}
else {
st.rawSetAttribute(argument.getKey(), argument.getValue());
}
}
else {
if ( st.impl.formalArguments==null || !st.impl.formalArguments.containsKey(argument.getKey()) ) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
continue;
}

st.rawSetAttribute(argument.getKey(), argument.getValue());
}
}
}",1,0,0,0,0,0,0,0,0,17,5,31,0,1,0,1,13,9,1,0,3,0.58,8,5
7028_4,4,32,"for (Map.Entry<String, Object> argument : attrs.entrySet()) {
if (!st.impl.hasFormalArgs) {
if (st.impl.formalArguments == null || !st.impl.formalArguments.containsKey(argument.getKey())) {
try {
st.impl = st.impl.clone();
st.add(argument.getKey(), argument.getValue());
} catch (CloneNotSupportedException ex) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
}
}
else {
st.rawSetAttribute(argument.getKey(), argument.getValue());
}
}
else {
if ( st.impl.formalArguments==null || !st.impl.formalArguments.containsKey(argument.getKey()) ) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
continue;
}

st.rawSetAttribute(argument.getKey(), argument.getValue());
}
}",0,0,0,1,0,0,0,0,0,16,4,29,0,0,0,0,13,9,1,0,3,0.58,9,5
7028_5,5,31,"if (!st.impl.hasFormalArgs) {
if (st.impl.formalArguments == null || !st.impl.formalArguments.containsKey(argument.getKey())) {
try {
st.impl = st.impl.clone();
st.add(argument.getKey(), argument.getValue());
} catch (CloneNotSupportedException ex) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
}
}
else {
st.rawSetAttribute(argument.getKey(), argument.getValue());
}
}
else {
if ( st.impl.formalArguments==null || !st.impl.formalArguments.containsKey(argument.getKey()) ) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
continue;
}

st.rawSetAttribute(argument.getKey(), argument.getValue());
}",1,0,0,0,0,0,0,0,0,15,3,27,0,0,0,0,13,9,1,0,3,0.58,10,5
7028_6,6,19,"if (st.impl.formalArguments == null || !st.impl.formalArguments.containsKey(argument.getKey())) {
try {
st.impl = st.impl.clone();
st.add(argument.getKey(), argument.getValue());
} catch (CloneNotSupportedException ex) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
}
}
else {
st.rawSetAttribute(argument.getKey(), argument.getValue());
}",1,0,0,0,0,0,0,0,0,8,2,14,0,0,0,0,13,9,1,0,3,0.58,22,11
7028_7,7,15,"try {
st.impl = st.impl.clone();
st.add(argument.getKey(), argument.getValue());
} catch (CloneNotSupportedException ex) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
}",0,0,0,0,1,0,0,0,0,5,1,9,0,0,0,0,13,9,1,0,3,0.58,26,13
7028_8,8,8,st.impl = st.impl.clone();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,1,0,0,0.5,33,17
7028_9,9,9,"st.add(argument.getKey(), argument.getValue());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,1,0,1,0.49,32,16
7028_10,10,10,} catch (CloneNotSupportedException ex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,1,0,0,0.49,31,15
7028_11,11,11,noSuchAttributeReported = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,1,0,1,0.55,30,14
7028_12,12,14,"errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,13,9,1,0,3,0.57,27,13
7028_17,17,17,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,1,0,0,0.28,24,12
7028_18,18,18,"st.rawSetAttribute(argument.getKey(), argument.getValue());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,1,0,2,0.53,23,11
7028_21,21,21,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,1,0,0,0.28,20,10
7028_22,22,28,"if ( st.impl.formalArguments==null || !st.impl.formalArguments.containsKey(argument.getKey()) ) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
continue;
}",1,0,0,0,0,0,0,0,0,3,1,7,0,0,0,1,13,9,1,0,3,0.58,13,6
7028_23,23,23,noSuchAttributeReported = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,1,0,1,0.55,18,8
7028_24,24,26,"errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,13,9,1,0,3,0.57,15,7
7028_27,27,27,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,1,0,0,0.35,14,6
7028_30,30,30,"st.rawSetAttribute(argument.getKey(), argument.getValue());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,13,9,1,0,2,0.53,11,5
7028_35,35,68,"if (st.impl.hasFormalArgs) {
boolean argumentCountMismatch = false;
Map<String, FormalArgument> formalArguments = st.impl.formalArguments;
if (formalArguments == null) {
formalArguments = Collections.emptyMap();
}

if (!noSuchAttributeReported) {
for (Map.Entry<String, FormalArgument> formalArgument : formalArguments.entrySet()) {
if (formalArgument.getValue().defaultValueToken != null || formalArgument.getValue().defaultValue != null) {
continue;
}

if (attrs == null || !attrs.containsKey(formalArgument.getKey())) {
argumentCountMismatch = true;
break;
}
}
}

if (attrs != null && attrs.size() > formalArguments.size()) {
argumentCountMismatch = true;
}

if (argumentCountMismatch) {
int nargs = attrs != null ? attrs.size() : 0;
int nformalArgs = formalArguments.size();
errMgr.runTimeError(this, scope,
ErrorType.ARGUMENT_COUNT_MISMATCH,
nargs,
st.impl.name,
nformalArgs);
}
}",1,0,0,0,0,0,0,0,0,17,4,34,0,0,1,0,13,9,1,0,4,0.6,0,0
7028_36,36,36,boolean argumentCountMismatch = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,13,9,1,0,1,0.51,5,3
7028_37,37,37,"Map<String, FormalArgument> formalArguments = st.impl.formalArguments;",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,13,9,1,0,1,0.57,4,2
7028_38,38,40,"if (formalArguments == null) {
formalArguments = Collections.emptyMap();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,13,9,1,0,1,0.5,1,0
7028_39,39,39,formalArguments = Collections.emptyMap();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,1,0,1,0.47,2,0
7028_42,42,53,"if (!noSuchAttributeReported) {
for (Map.Entry<String, FormalArgument> formalArgument : formalArguments.entrySet()) {
if (formalArgument.getValue().defaultValueToken != null || formalArgument.getValue().defaultValue != null) {
continue;
}

if (attrs == null || !attrs.containsKey(formalArgument.getKey())) {
argumentCountMismatch = true;
break;
}
}
}",1,0,0,0,0,0,0,0,0,6,3,12,0,0,1,1,13,9,1,0,3,0.56,0,0
7028_43,43,52,"for (Map.Entry<String, FormalArgument> formalArgument : formalArguments.entrySet()) {
if (formalArgument.getValue().defaultValueToken != null || formalArgument.getValue().defaultValue != null) {
continue;
}

if (attrs == null || !attrs.containsKey(formalArgument.getKey())) {
argumentCountMismatch = true;
break;
}
}",0,0,0,1,0,0,0,0,0,5,2,10,0,0,0,0,13,9,1,0,2,0.53,1,0
7028_44,44,46,"if (formalArgument.getValue().defaultValueToken != null || formalArgument.getValue().defaultValue != null) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,13,9,1,0,2,0.53,2,1
7028_45,45,45,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,1,0,0,0.35,3,2
7028_48,48,51,"if (attrs == null || !attrs.containsKey(formalArgument.getKey())) {
argumentCountMismatch = true;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,13,9,1,0,1,0.46,6,4
7028_49,49,49,argumentCountMismatch = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,1,0,1,0.53,7,4
7028_50,50,50,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,13,9,1,0,0,0.3,8,5
7028_55,55,57,"if (attrs != null && attrs.size() > formalArguments.size()) {
argumentCountMismatch = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,13,9,1,0,1,0.48,13,7
7028_56,56,56,argumentCountMismatch = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,1,0,1,0.53,14,7
7028_59,59,67,"if (argumentCountMismatch) {
int nargs = attrs != null ? attrs.size() : 0;
int nformalArgs = formalArguments.size();
errMgr.runTimeError(this, scope,
ErrorType.ARGUMENT_COUNT_MISMATCH,
nargs,
st.impl.name,
nformalArgs);
}",1,0,0,0,0,0,0,0,0,3,1,9,0,0,1,0,13,9,1,0,2,0.55,17,9
7028_60,60,60,int nargs = attrs != null ? attrs.size() : 0;,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,13,9,1,0,0,0.33,18,9
7028_61,61,61,int nformalArgs = formalArguments.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,13,9,1,0,1,0.52,19,10
7028_62,62,66,"errMgr.runTimeError(this, scope,
ErrorType.ARGUMENT_COUNT_MISMATCH,
nargs,
st.impl.name,
nformalArgs);",0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,0,13,9,1,0,2,0.58,20,11
7027_1,1,1,"void storeArgs(InstanceScope scope, Map<String,Object> attrs, ST st) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,2,0.63,6,6
7027_2,2,2,boolean noSuchAttributeReported = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,7,1,0,0,0.41,5,5
7027_3,3,33,"if (attrs != null) {
for (Map.Entry<String, Object> argument : attrs.entrySet()) {
if (!st.impl.hasFormalArgs) {
if (st.impl.formalArguments == null || !st.impl.formalArguments.containsKey(argument.getKey())) {
try {
st.impl = st.impl.clone();
st.add(argument.getKey(), argument.getValue());
} catch (CloneNotSupportedException ex) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
}
}
else {
st.rawSetAttribute(argument.getKey(), argument.getValue());
}
}
else {
if ( st.impl.formalArguments==null || !st.impl.formalArguments.containsKey(argument.getKey()) ) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
continue;
}

st.rawSetAttribute(argument.getKey(), argument.getValue());
}
}
}",1,0,0,0,0,0,0,0,0,17,5,31,0,1,0,1,10,7,1,0,5,0.66,0,0
7027_4,4,32,"for (Map.Entry<String, Object> argument : attrs.entrySet()) {
if (!st.impl.hasFormalArgs) {
if (st.impl.formalArguments == null || !st.impl.formalArguments.containsKey(argument.getKey())) {
try {
st.impl = st.impl.clone();
st.add(argument.getKey(), argument.getValue());
} catch (CloneNotSupportedException ex) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
}
}
else {
st.rawSetAttribute(argument.getKey(), argument.getValue());
}
}
else {
if ( st.impl.formalArguments==null || !st.impl.formalArguments.containsKey(argument.getKey()) ) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
continue;
}

st.rawSetAttribute(argument.getKey(), argument.getValue());
}
}",0,0,0,1,0,0,0,0,0,16,4,29,0,0,0,0,10,7,1,0,5,0.66,0,0
7027_5,5,31,"if (!st.impl.hasFormalArgs) {
if (st.impl.formalArguments == null || !st.impl.formalArguments.containsKey(argument.getKey())) {
try {
st.impl = st.impl.clone();
st.add(argument.getKey(), argument.getValue());
} catch (CloneNotSupportedException ex) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
}
}
else {
st.rawSetAttribute(argument.getKey(), argument.getValue());
}
}
else {
if ( st.impl.formalArguments==null || !st.impl.formalArguments.containsKey(argument.getKey()) ) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
continue;
}

st.rawSetAttribute(argument.getKey(), argument.getValue());
}",1,0,0,0,0,0,0,0,0,15,3,27,0,0,0,0,10,7,1,0,4,0.62,0,0
7027_6,6,19,"if (st.impl.formalArguments == null || !st.impl.formalArguments.containsKey(argument.getKey())) {
try {
st.impl = st.impl.clone();
st.add(argument.getKey(), argument.getValue());
} catch (CloneNotSupportedException ex) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
}
}
else {
st.rawSetAttribute(argument.getKey(), argument.getValue());
}",1,0,0,0,0,0,0,0,0,8,2,14,0,0,0,0,10,7,1,0,4,0.63,0,0
7027_7,7,15,"try {
st.impl = st.impl.clone();
st.add(argument.getKey(), argument.getValue());
} catch (CloneNotSupportedException ex) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
}",0,0,0,0,1,0,0,0,0,5,1,9,0,0,0,0,10,7,1,0,3,0.63,0,0
7027_8,8,8,st.impl = st.impl.clone();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,2,0.69,0,0
7027_9,9,9,"st.add(argument.getKey(), argument.getValue());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,2,0.58,1,0
7027_10,10,10,} catch (CloneNotSupportedException ex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,1,0.6,2,1
7027_11,11,11,noSuchAttributeReported = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,0,0.43,3,2
7027_12,12,14,"errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,10,7,1,0,1,0.53,4,3
7027_17,17,17,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,0,0.27,9,5
7027_18,18,18,"st.rawSetAttribute(argument.getKey(), argument.getValue());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,2,0.57,10,5
7027_21,21,21,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,0,0.27,13,7
7027_22,22,28,"if ( st.impl.formalArguments==null || !st.impl.formalArguments.containsKey(argument.getKey()) ) {
noSuchAttributeReported = true;
errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());
continue;
}",1,0,0,0,0,0,0,0,0,3,1,7,0,0,0,1,10,7,1,0,3,0.58,14,7
7027_23,23,23,noSuchAttributeReported = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,0,0.43,15,8
7027_24,24,26,"errMgr.runTimeError(this, scope,
ErrorType.NO_SUCH_ATTRIBUTE,
argument.getKey());",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,10,7,1,0,1,0.53,16,9
7027_27,27,27,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,0,0.32,19,11
7027_30,30,30,"st.rawSetAttribute(argument.getKey(), argument.getValue());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,10,7,1,0,2,0.57,22,12
7027_35,35,68,"if (st.impl.hasFormalArgs) {
boolean argumentCountMismatch = false;
Map<String, FormalArgument> formalArguments = st.impl.formalArguments;
if (formalArguments == null) {
formalArguments = Collections.emptyMap();
}

if (!noSuchAttributeReported) {
for (Map.Entry<String, FormalArgument> formalArgument : formalArguments.entrySet()) {
if (formalArgument.getValue().defaultValueToken != null || formalArgument.getValue().defaultValue != null) {
continue;
}

if (attrs == null || !attrs.containsKey(formalArgument.getKey())) {
argumentCountMismatch = true;
break;
}
}
}

if (attrs != null && attrs.size() > formalArguments.size()) {
argumentCountMismatch = true;
}

if (argumentCountMismatch) {
int nargs = attrs != null ? attrs.size() : 0;
int nformalArgs = formalArguments.size();
errMgr.runTimeError(this, scope,
ErrorType.ARGUMENT_COUNT_MISMATCH,
nargs,
st.impl.name,
nformalArgs);
}
}",1,0,0,0,0,0,0,0,0,17,4,34,0,0,1,0,10,7,1,0,4,0.64,27,13
7027_36,36,36,boolean argumentCountMismatch = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,7,1,0,1,0.56,28,13
7027_37,37,37,"Map<String, FormalArgument> formalArguments = st.impl.formalArguments;",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,7,1,0,4,0.75,29,14
7027_38,38,40,"if (formalArguments == null) {
formalArguments = Collections.emptyMap();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,10,7,1,0,3,0.61,30,15
7027_39,39,39,formalArguments = Collections.emptyMap();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,3,0.62,31,16
7027_42,42,53,"if (!noSuchAttributeReported) {
for (Map.Entry<String, FormalArgument> formalArgument : formalArguments.entrySet()) {
if (formalArgument.getValue().defaultValueToken != null || formalArgument.getValue().defaultValue != null) {
continue;
}

if (attrs == null || !attrs.containsKey(formalArgument.getKey())) {
argumentCountMismatch = true;
break;
}
}
}",1,0,0,0,0,0,0,0,0,6,3,12,0,0,1,1,10,7,1,0,3,0.59,34,18
7027_43,43,52,"for (Map.Entry<String, FormalArgument> formalArgument : formalArguments.entrySet()) {
if (formalArgument.getValue().defaultValueToken != null || formalArgument.getValue().defaultValue != null) {
continue;
}

if (attrs == null || !attrs.containsKey(formalArgument.getKey())) {
argumentCountMismatch = true;
break;
}
}",0,0,0,1,0,0,0,0,0,5,2,10,0,0,0,0,10,7,1,0,3,0.59,35,18
7027_44,44,46,"if (formalArgument.getValue().defaultValueToken != null || formalArgument.getValue().defaultValue != null) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,10,7,1,0,2,0.46,36,19
7027_45,45,45,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,0,0.32,37,20
7027_48,48,51,"if (attrs == null || !attrs.containsKey(formalArgument.getKey())) {
argumentCountMismatch = true;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,10,7,1,0,2,0.53,40,22
7027_49,49,49,argumentCountMismatch = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,1,0.59,41,22
7027_50,50,50,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,10,7,1,0,0,0.34,42,23
7027_55,55,57,"if (attrs != null && attrs.size() > formalArguments.size()) {
argumentCountMismatch = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,10,7,1,0,2,0.54,47,25
7027_56,56,56,argumentCountMismatch = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,1,0.59,48,25
7027_59,59,67,"if (argumentCountMismatch) {
int nargs = attrs != null ? attrs.size() : 0;
int nformalArgs = formalArguments.size();
errMgr.runTimeError(this, scope,
ErrorType.ARGUMENT_COUNT_MISMATCH,
nargs,
st.impl.name,
nformalArgs);
}",1,0,0,0,0,0,0,0,0,3,1,9,0,0,1,0,10,7,1,0,3,0.6,51,27
7027_60,60,60,int nargs = attrs != null ? attrs.size() : 0;,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,10,7,1,0,0,0.36,52,27
7027_61,61,61,int nformalArgs = formalArguments.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,10,7,1,0,2,0.52,53,28
7027_62,62,66,"errMgr.runTimeError(this, scope,
ErrorType.ARGUMENT_COUNT_MISMATCH,
nargs,
st.impl.name,
nformalArgs);",0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,0,10,7,1,0,2,0.61,54,29
7026_1,1,1,"    void passthru(InstanceScope scope, String templateName, Map<String,Object> attrs) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,1,0.47,15,12
7026_2,2,2,CompiledST c = group.lookupTemplate(templateName);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,2,0,1,0.52,14,11
7026_3,3,3,if ( c==null ) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,2,0,0,0.3,13,10
7026_4,4,4,if ( c.formalArguments==null ) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,2,0,0,0.44,12,9
7026_5,5,23,"for (FormalArgument arg : c.formalArguments.values()) {
if ( !attrs.containsKey(arg.name) ) {
try {
Object o = getAttribute(scope, arg.name);
if ( o==ST.EMPTY_ATTR && arg.defaultValueToken==null ) {
attrs.put(arg.name, null);
}
else if ( o!=ST.EMPTY_ATTR ) {
attrs.put(arg.name, o);
}
}
catch (STNoSuchAttributeException nsae) {
if ( arg.defaultValueToken==null ) {
errMgr.runTimeError(this, scope, ErrorType.NO_SUCH_ATTRIBUTE_PASS_THROUGH, arg.name);
attrs.put(arg.name, null);
}
}
}
}",0,0,0,1,0,0,0,0,0,11,4,19,0,1,0,0,8,5,2,0,5,0.71,0,0
7026_6,6,22,"if ( !attrs.containsKey(arg.name) ) {
try {
Object o = getAttribute(scope, arg.name);
if ( o==ST.EMPTY_ATTR && arg.defaultValueToken==null ) {
attrs.put(arg.name, null);
}
else if ( o!=ST.EMPTY_ATTR ) {
attrs.put(arg.name, o);
}
}
catch (STNoSuchAttributeException nsae) {
if ( arg.defaultValueToken==null ) {
errMgr.runTimeError(this, scope, ErrorType.NO_SUCH_ATTRIBUTE_PASS_THROUGH, arg.name);
attrs.put(arg.name, null);
}
}
}",1,0,0,0,0,0,0,0,0,10,3,17,0,0,0,0,8,5,2,0,5,0.69,0,0
7026_7,7,21,"try {
Object o = getAttribute(scope, arg.name);
if ( o==ST.EMPTY_ATTR && arg.defaultValueToken==null ) {
attrs.put(arg.name, null);
}
else if ( o!=ST.EMPTY_ATTR ) {
attrs.put(arg.name, o);
}
}
catch (STNoSuchAttributeException nsae) {
if ( arg.defaultValueToken==null ) {
errMgr.runTimeError(this, scope, ErrorType.NO_SUCH_ATTRIBUTE_PASS_THROUGH, arg.name);
attrs.put(arg.name, null);
}
}",0,0,0,0,1,0,0,0,0,9,2,15,0,0,0,0,8,5,2,0,5,0.69,0,0
7026_8,8,8,"Object o = getAttribute(scope, arg.name);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,2,0,3,0.66,8,5
7026_9,9,14,"if ( o==ST.EMPTY_ATTR && arg.defaultValueToken==null ) {
attrs.put(arg.name, null);
}
else if ( o!=ST.EMPTY_ATTR ) {
attrs.put(arg.name, o);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,0,8,5,2,0,4,0.65,2,1
7026_10,10,10,"attrs.put(arg.name, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,2,0.58,6,3
7026_12,12,12,else if ( o!=ST.EMPTY_ATTR ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.37,4,2
7026_13,13,13,"attrs.put(arg.name, o);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,2,0.6,3,1
7026_16,16,16,catch (STNoSuchAttributeException nsae) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,1,0.5,0,0
7026_17,17,20,"if ( arg.defaultValueToken==null ) {
errMgr.runTimeError(this, scope, ErrorType.NO_SUCH_ATTRIBUTE_PASS_THROUGH, arg.name);
attrs.put(arg.name, null);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,8,5,2,0,5,0.69,0,0
7026_18,18,18,"errMgr.runTimeError(this, scope, ErrorType.NO_SUCH_ATTRIBUTE_PASS_THROUGH, arg.name);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,2,0,3,0.57,1,0
7026_19,19,19,"attrs.put(arg.name, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,2,0,2,0.58,2,1
7025_1,1,1,"    void passthru(InstanceScope scope, String templateName, Map<String,Object> attrs) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.4,10,9
7025_2,2,2,CompiledST c = group.lookupTemplate(templateName);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.47,9,8
7025_3,3,3,if ( c==null ) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.35,8,7
7025_4,4,4,if ( c.formalArguments==null ) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.47,7,6
7025_5,5,23,"for (FormalArgument arg : c.formalArguments.values()) {
if ( !attrs.containsKey(arg.name) ) {
try {
Object o = getAttribute(scope, arg.name);
if ( o==ST.EMPTY_ATTR && arg.defaultValueToken==null ) {
attrs.put(arg.name, null);
}
else if ( o!=ST.EMPTY_ATTR ) {
attrs.put(arg.name, o);
}
}
catch (STNoSuchAttributeException nsae) {
if ( arg.defaultValueToken==null ) {
errMgr.runTimeError(this, scope, ErrorType.NO_SUCH_ATTRIBUTE_PASS_THROUGH, arg.name);
attrs.put(arg.name, null);
}
}
}
}",0,0,0,1,0,0,0,0,0,11,4,19,0,1,0,0,6,3,2,0,4,0.68,0,0
7025_6,6,22,"if ( !attrs.containsKey(arg.name) ) {
try {
Object o = getAttribute(scope, arg.name);
if ( o==ST.EMPTY_ATTR && arg.defaultValueToken==null ) {
attrs.put(arg.name, null);
}
else if ( o!=ST.EMPTY_ATTR ) {
attrs.put(arg.name, o);
}
}
catch (STNoSuchAttributeException nsae) {
if ( arg.defaultValueToken==null ) {
errMgr.runTimeError(this, scope, ErrorType.NO_SUCH_ATTRIBUTE_PASS_THROUGH, arg.name);
attrs.put(arg.name, null);
}
}
}",1,0,0,0,0,0,0,0,0,10,3,17,0,0,0,0,6,3,2,0,4,0.67,0,0
7025_7,7,21,"try {
Object o = getAttribute(scope, arg.name);
if ( o==ST.EMPTY_ATTR && arg.defaultValueToken==null ) {
attrs.put(arg.name, null);
}
else if ( o!=ST.EMPTY_ATTR ) {
attrs.put(arg.name, o);
}
}
catch (STNoSuchAttributeException nsae) {
if ( arg.defaultValueToken==null ) {
errMgr.runTimeError(this, scope, ErrorType.NO_SUCH_ATTRIBUTE_PASS_THROUGH, arg.name);
attrs.put(arg.name, null);
}
}",0,0,0,0,1,0,0,0,0,9,2,15,0,0,0,0,6,3,2,0,4,0.67,0,0
7025_8,8,8,"Object o = getAttribute(scope, arg.name);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,2,0,2,0.6,3,2
7025_9,9,14,"if ( o==ST.EMPTY_ATTR && arg.defaultValueToken==null ) {
attrs.put(arg.name, null);
}
else if ( o!=ST.EMPTY_ATTR ) {
attrs.put(arg.name, o);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,0,6,3,2,0,3,0.63,0,0
7025_10,10,10,"attrs.put(arg.name, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.5,1,0
7025_12,12,12,else if ( o!=ST.EMPTY_ATTR ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.5,0,0
7025_13,13,13,"attrs.put(arg.name, o);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.5,1,0
7025_16,16,16,catch (STNoSuchAttributeException nsae) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.5,4,2
7025_17,17,20,"if ( arg.defaultValueToken==null ) {
errMgr.runTimeError(this, scope, ErrorType.NO_SUCH_ATTRIBUTE_PASS_THROUGH, arg.name);
attrs.put(arg.name, null);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,6,3,2,0,3,0.6,5,2
7025_18,18,18,"errMgr.runTimeError(this, scope, ErrorType.NO_SUCH_ATTRIBUTE_PASS_THROUGH, arg.name);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,2,0.53,6,3
7025_19,19,19,"attrs.put(arg.name, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,1,0.5,7,4
7024_1,1,1,"    void passthru(InstanceScope scope, String templateName, Map<String,Object> attrs) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.4,7,7
7024_2,2,2,CompiledST c = group.lookupTemplate(templateName);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,2,0,0,0.45,6,6
7024_3,3,3,if ( c==null ) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,5,2,0,1,0.47,5,5
7024_4,4,4,if ( c.formalArguments==null ) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,5,2,0,3,0.61,4,4
7024_5,5,23,"for (FormalArgument arg : c.formalArguments.values()) {
if ( !attrs.containsKey(arg.name) ) {
try {
Object o = getAttribute(scope, arg.name);
if ( o==ST.EMPTY_ATTR && arg.defaultValueToken==null ) {
attrs.put(arg.name, null);
}
else if ( o!=ST.EMPTY_ATTR ) {
attrs.put(arg.name, o);
}
}
catch (STNoSuchAttributeException nsae) {
if ( arg.defaultValueToken==null ) {
errMgr.runTimeError(this, scope, ErrorType.NO_SUCH_ATTRIBUTE_PASS_THROUGH, arg.name);
attrs.put(arg.name, null);
}
}
}
}",0,0,0,1,0,0,0,0,0,11,4,19,0,1,0,0,9,5,2,0,6,0.72,0,0
7024_6,6,22,"if ( !attrs.containsKey(arg.name) ) {
try {
Object o = getAttribute(scope, arg.name);
if ( o==ST.EMPTY_ATTR && arg.defaultValueToken==null ) {
attrs.put(arg.name, null);
}
else if ( o!=ST.EMPTY_ATTR ) {
attrs.put(arg.name, o);
}
}
catch (STNoSuchAttributeException nsae) {
if ( arg.defaultValueToken==null ) {
errMgr.runTimeError(this, scope, ErrorType.NO_SUCH_ATTRIBUTE_PASS_THROUGH, arg.name);
attrs.put(arg.name, null);
}
}
}",1,0,0,0,0,0,0,0,0,10,3,17,0,0,0,0,9,5,2,0,4,0.7,0,0
7024_7,7,21,"try {
Object o = getAttribute(scope, arg.name);
if ( o==ST.EMPTY_ATTR && arg.defaultValueToken==null ) {
attrs.put(arg.name, null);
}
else if ( o!=ST.EMPTY_ATTR ) {
attrs.put(arg.name, o);
}
}
catch (STNoSuchAttributeException nsae) {
if ( arg.defaultValueToken==null ) {
errMgr.runTimeError(this, scope, ErrorType.NO_SUCH_ATTRIBUTE_PASS_THROUGH, arg.name);
attrs.put(arg.name, null);
}
}",0,0,0,0,1,0,0,0,0,9,2,15,0,0,0,0,9,5,2,0,4,0.7,0,0
7024_8,8,8,"Object o = getAttribute(scope, arg.name);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,2,0,1,0.55,0,0
7024_9,9,14,"if ( o==ST.EMPTY_ATTR && arg.defaultValueToken==null ) {
attrs.put(arg.name, null);
}
else if ( o!=ST.EMPTY_ATTR ) {
attrs.put(arg.name, o);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,0,9,5,2,0,3,0.67,0,0
7024_10,10,10,"attrs.put(arg.name, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,1,0.56,1,0
7024_12,12,12,else if ( o!=ST.EMPTY_ATTR ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.4,3,2
7024_13,13,13,"attrs.put(arg.name, o);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.46,4,2
7024_16,16,16,catch (STNoSuchAttributeException nsae) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,1,0.56,7,4
7024_17,17,20,"if ( arg.defaultValueToken==null ) {
errMgr.runTimeError(this, scope, ErrorType.NO_SUCH_ATTRIBUTE_PASS_THROUGH, arg.name);
attrs.put(arg.name, null);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,9,5,2,0,4,0.7,8,4
7024_18,18,18,"errMgr.runTimeError(this, scope, ErrorType.NO_SUCH_ATTRIBUTE_PASS_THROUGH, arg.name);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,5,2,0,1,0.5,9,5
7024_19,19,19,"attrs.put(arg.name, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,5,2,0,1,0.56,10,6
7023_1,1,1,"    void super_new(InstanceScope scope, String name, int nargs) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.43,12,9
7023_2,2,2,final ST self = scope.st;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.55,11,8
7023_3,3,3,ST st = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.6,10,7
7023_4,4,4,CompiledST imported = self.impl.nativeGroup.lookupImportedTemplate(name);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.51,9,6
7023_5,5,13,"if ( imported==null ) {
errMgr.runTimeError(this, scope, ErrorType.NO_IMPORTED_TEMPLATE,
name);
st = self.groupThatCreatedThisInstance.createStringTemplateInternally(new CompiledST());
}
else {
st = imported.nativeGroup.getEmbeddedInstanceOf(this, scope, name);
st.groupThatCreatedThisInstance = group;
}",1,0,0,0,0,0,0,0,0,5,1,9,0,1,0,0,7,4,1,0,2,0.55,0,0
7023_6,6,7,"errMgr.runTimeError(this, scope, ErrorType.NO_IMPORTED_TEMPLATE,
name);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,4,1,0,0,0.48,6,4
7023_8,8,8,st = self.groupThatCreatedThisInstance.createStringTemplateInternally(new CompiledST());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.46,5,3
7023_10,10,10,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.24,3,2
7023_11,11,11,"st = imported.nativeGroup.getEmbeddedInstanceOf(this, scope, name);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,2,0.58,2,1
7023_12,12,12,st.groupThatCreatedThisInstance = group;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.44,1,0
7023_14,14,14,"storeArgs(scope, nargs, st);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,3,0.77,0,0
7023_15,15,15,sp -= nargs;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.55,1,0
7023_16,16,16,operands[++sp] = st;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.66,2,1
6935_1,1,2,"public Plan andSearch(Set<Object> states, NondeterministicProblem problem,
Path path) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,2,0,1,0.52,6,5
6935_3,3,3,this.expandedNodes++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,0,0.39,5,4
6935_4,4,4,Object[] _states = states.toArray();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,0,0.36,4,3
6935_5,5,5,Plan[] plans = new Plan[_states.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.57,3,2
6935_6,6,11,"for (int i = 0; i < _states.length; i++) {
plans[i] = this.orSearch(_states[i], problem, path);
if (plans[i] == null) {
return null;
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,1,0,0,4,2,2,0,2,0.62,0,0
6935_7,7,7,"plans[i] = this.orSearch(_states[i], problem, path);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.55,1,0
6935_8,8,10,"if (plans[i] == null) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,2,2,0,2,0.71,0,0
6935_9,9,9,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.61,1,0
6935_12,12,12,Object[] steps = new Object[plans.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.45,4,2
6935_13,13,18,"if (plans.length > 0) {
for (int i = 0; i < plans.length - 1; i++) {
steps[i] = new IfStateThenPlan(_states[i], plans[i]);
}
steps[steps.length-1] = plans[plans.length - 1];
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,1,4,2,2,0,1,0.48,5,2
6935_14,14,16,"for (int i = 0; i < plans.length - 1; i++) {
steps[i] = new IfStateThenPlan(_states[i], plans[i]);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,4,2,2,0,1,0.48,6,3
6935_15,15,15,"steps[i] = new IfStateThenPlan(_states[i], plans[i]);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.52,7,4
6935_17,17,17,steps[steps.length-1] = plans[plans.length - 1];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.44,9,6
6935_20,20,20,return new Plan(steps);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,2,0,2,0.64,12,7
6934_1,1,2,"public Plan andSearch(Set<Object> states, NondeterministicProblem problem,
Path path) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,4,0.88,5,4
6934_3,3,3,this.expandedNodes++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.4,4,3
6934_4,4,4,Object[] _states = states.toArray();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.35,3,2
6934_5,5,5,Plan[] plans = new Plan[_states.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.59,2,1
6934_6,6,11,"for (int i = 0; i < _states.length; i++) {
plans[i] = this.orSearch(_states[i], problem, path);
if (plans[i] == null) {
return null;
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,1,0,0,4,4,0,0,4,0.79,0,0
6934_7,7,7,"plans[i] = this.orSearch(_states[i], problem, path);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,4,0.94,0,0
6934_8,8,10,"if (plans[i] == null) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,4,0,0,1,0.56,1,0
6934_9,9,9,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.37,2,1
6934_12,12,12,Object[] steps = new Object[plans.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.49,5,3
6934_13,13,18,"if (plans.length > 0) {
for (int i = 0; i < plans.length - 1; i++) {
steps[i] = new IfStateThenPlan(_states[i], plans[i]);
}
steps[steps.length-1] = plans[plans.length - 1];
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,1,4,4,0,0,1,0.48,6,3
6934_14,14,16,"for (int i = 0; i < plans.length - 1; i++) {
steps[i] = new IfStateThenPlan(_states[i], plans[i]);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,4,4,0,0,1,0.48,7,4
6934_15,15,15,"steps[i] = new IfStateThenPlan(_states[i], plans[i]);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.52,8,5
6934_17,17,17,steps[steps.length-1] = plans[plans.length - 1];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.47,10,7
6934_20,20,20,return new Plan(steps);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.51,13,8
6933_1,1,2,"public Plan andSearch(Set<Object> states, NondeterministicProblem problem,
Path path) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,1,1,0,0,1,0.63,4,3
6933_3,3,3,this.expandedNodes++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.11,3,2
6933_4,4,4,Object[] _states = states.toArray();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,1,1,0,0,1,0.76,2,1
6933_5,5,5,Plan[] plans = new Plan[_states.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,1,1,0,0,1,0.64,1,0
6933_6,6,11,"for (int i = 0; i < _states.length; i++) {
plans[i] = this.orSearch(_states[i], problem, path);
if (plans[i] == null) {
return null;
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,1,0,0,1,1,0,0,1,0.63,0,0
6933_7,7,7,"plans[i] = this.orSearch(_states[i], problem, path);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,1,0.67,1,0
6933_8,8,10,"if (plans[i] == null) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,1,1,0,0,0,0.19,2,1
6933_9,9,9,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.13,3,2
6933_12,12,12,Object[] steps = new Object[plans.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.15,6,4
6933_13,13,18,"if (plans.length > 0) {
for (int i = 0; i < plans.length - 1; i++) {
steps[i] = new IfStateThenPlan(_states[i], plans[i]);
}
steps[steps.length-1] = plans[plans.length - 1];
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,1,1,1,0,0,1,0.58,7,4
6933_14,14,16,"for (int i = 0; i < plans.length - 1; i++) {
steps[i] = new IfStateThenPlan(_states[i], plans[i]);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,1,1,0,0,1,0.62,8,5
6933_15,15,15,"steps[i] = new IfStateThenPlan(_states[i], plans[i]);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,0.71,9,6
6933_17,17,17,steps[steps.length-1] = plans[plans.length - 1];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.15,11,8
6933_20,20,20,return new Plan(steps);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0.17,14,9
6932_1,1,2,"	public Plan orSearch(Object state, NondeterministicProblem problem,
Path path) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,2,0,1,0.56,12,7
6932_3,3,3,this.expandedNodes++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,2,0,0,0.45,11,6
6932_4,4,6,"if (problem.isGoalState(state)) {
return new Plan();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,3,2,0,2,0.67,8,4
6932_5,5,5,return new Plan();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,2,0,2,0.74,9,4
6932_7,7,9,"if (path.contains(state)) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,3,2,0,1,0.52,5,2
6932_8,8,8,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,2,0,1,0.58,6,2
6932_10,10,17,"for (Action action : problem.getActionsFunction().actions(state)) {
Plan plan = this.andSearch(
problem.getResultsFunction().results(state, action),
problem, path.prepend(state));
if (plan != null) {
return plan.prepend(action);
}
}",0,0,0,1,0,0,0,0,0,3,2,8,0,0,0,0,5,3,2,0,3,0.78,0,0
6932_11,11,13,"Plan plan = this.andSearch(
problem.getResultsFunction().results(state, action),
problem, path.prepend(state));",0,0,0,0,0,1,0,0,0,0,0,3,1,1,0,0,5,3,2,0,2,0.65,1,0
6932_14,14,16,"if (plan != null) {
return plan.prepend(action);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,3,2,0,3,0.86,0,0
6932_15,15,15,return plan.prepend(action);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,2,0,3,0.88,1,0
6932_18,18,18,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,2,0,1,0.58,4,2
6931_1,1,2,"	public Plan orSearch(Object state, NondeterministicProblem problem,
Path path) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,7,1,0,5,0.85,9,6
6931_3,3,3,this.expandedNodes++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,1,0,0,0.38,8,5
6931_4,4,6,"if (problem.isGoalState(state)) {
return new Plan();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,7,1,0,3,0.71,5,3
6931_5,5,5,return new Plan();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,7,1,0,1,0.48,6,3
6931_7,7,9,"if (path.contains(state)) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,7,1,0,2,0.63,2,1
6931_8,8,8,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,7,1,0,0,0.33,3,1
6931_10,10,17,"for (Action action : problem.getActionsFunction().actions(state)) {
Plan plan = this.andSearch(
problem.getResultsFunction().results(state, action),
problem, path.prepend(state));
if (plan != null) {
return plan.prepend(action);
}
}",0,0,0,1,0,0,0,0,0,3,2,8,0,0,0,0,8,7,1,0,7,0.92,0,0
6931_11,11,13,"Plan plan = this.andSearch(
problem.getResultsFunction().results(state, action),
problem, path.prepend(state));",0,0,0,0,0,1,0,0,0,0,0,3,1,1,0,0,8,7,1,0,7,0.95,0,0
6931_14,14,16,"if (plan != null) {
return plan.prepend(action);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,8,7,1,0,2,0.68,3,1
6931_15,15,15,return plan.prepend(action);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,7,1,0,2,0.68,4,1
6931_18,18,18,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,7,1,0,0,0.33,7,3
6930_1,1,2,"	public Plan orSearch(Object state, NondeterministicProblem problem,
Path path) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,2,0.66,8,5
6930_3,3,3,this.expandedNodes++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.36,7,4
6930_4,4,6,"if (problem.isGoalState(state)) {
return new Plan();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,4,0,0,2,0.69,4,2
6930_5,5,5,return new Plan();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.4,5,2
6930_7,7,9,"if (path.contains(state)) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,4,0,0,1,0.52,1,0
6930_8,8,8,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.29,2,0
6930_10,10,17,"for (Action action : problem.getActionsFunction().actions(state)) {
Plan plan = this.andSearch(
problem.getResultsFunction().results(state, action),
problem, path.prepend(state));
if (plan != null) {
return plan.prepend(action);
}
}",0,0,0,1,0,0,0,0,0,3,2,8,0,0,0,0,4,4,0,0,3,0.84,0,0
6930_11,11,13,"Plan plan = this.andSearch(
problem.getResultsFunction().results(state, action),
problem, path.prepend(state));",0,0,0,0,0,1,0,0,0,0,0,3,1,1,0,0,4,4,0,0,3,0.82,1,0
6930_14,14,16,"if (plan != null) {
return plan.prepend(action);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,4,0,0,1,0.68,4,2
6930_15,15,15,return plan.prepend(action);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.7,5,2
6930_18,18,18,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.29,8,4
6929_1,1,2,"	public Plan orSearch(Object state, NondeterministicProblem problem,
Path path) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,2,0.65,5,3
6929_3,3,3,this.expandedNodes++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.21,4,2
6929_4,4,6,"if (problem.isGoalState(state)) {
return new Plan();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,4,0,0,2,0.66,1,0
6929_5,5,5,return new Plan();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.48,2,0
6929_7,7,9,"if (path.contains(state)) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,4,0,0,3,0.79,0,0
6929_8,8,8,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.58,1,0
6929_10,10,17,"for (Action action : problem.getActionsFunction().actions(state)) {
Plan plan = this.andSearch(
problem.getResultsFunction().results(state, action),
problem, path.prepend(state));
if (plan != null) {
return plan.prepend(action);
}
}",0,0,0,1,0,0,0,0,0,3,2,8,0,0,0,0,4,4,0,0,3,0.69,3,2
6929_11,11,13,"Plan plan = this.andSearch(
problem.getResultsFunction().results(state, action),
problem, path.prepend(state));",0,0,0,0,0,1,0,0,0,0,0,3,1,1,0,0,4,4,0,0,2,0.62,4,2
6929_14,14,16,"if (plan != null) {
return plan.prepend(action);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,4,0,0,1,0.57,7,4
6929_15,15,15,return plan.prepend(action);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.59,8,4
6929_18,18,18,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.58,11,6
6928_1,1,2,"	public Plan orSearch(Object state, NondeterministicProblem problem,
Path path) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,7,0,0,3,0.68,2,1
6928_3,3,3,this.expandedNodes++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.37,1,0
6928_4,4,6,"if (problem.isGoalState(state)) {
return new Plan();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,7,0,0,5,0.87,0,0
6928_5,5,5,return new Plan();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,7,0,0,2,0.66,1,0
6928_7,7,9,"if (path.contains(state)) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,7,0,0,2,0.62,3,2
6928_8,8,8,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.58,4,2
6928_10,10,17,"for (Action action : problem.getActionsFunction().actions(state)) {
Plan plan = this.andSearch(
problem.getResultsFunction().results(state, action),
problem, path.prepend(state));
if (plan != null) {
return plan.prepend(action);
}
}",0,0,0,1,0,0,0,0,0,3,2,8,0,0,0,0,7,7,0,0,4,0.72,6,4
6928_11,11,13,"Plan plan = this.andSearch(
problem.getResultsFunction().results(state, action),
problem, path.prepend(state));",0,0,0,0,0,1,0,0,0,0,0,3,1,1,0,0,7,7,0,0,3,0.68,7,4
6928_14,14,16,"if (plan != null) {
return plan.prepend(action);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,7,7,0,0,2,0.7,10,6
6928_15,15,15,return plan.prepend(action);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,7,0,0,2,0.69,11,6
6928_18,18,18,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.58,14,8
6927_1,1,2,"protected Pair<PropositionSymbol, Boolean> findUnitClause(
Set<Clause> clauses, Model model) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,1,1,0,0,0.43,15,13
6927_3,3,3,"Pair<PropositionSymbol, Boolean> result = null;",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,1,1,0,0,0.38,14,12
6927_5,5,31,"for (Clause c : clauses) {
if (model.determineValue(c) == null) {
Literal unassigned = null;
if (c.isUnitClause()) {
unassigned = c.getLiterals().iterator().next();
} else {
for (Literal l : c.getLiterals()) {
Boolean value = model.getValue(l.getAtomicSentence());
if (value == null) {
if (unassigned == null) {
unassigned = l;
} else {
unassigned = null;
break;
}
}
}
}

if (unassigned != null) {
result = new Pair<PropositionSymbol, Boolean>(
unassigned.getAtomicSentence(),
unassigned.isPositiveLiteral());
break;
}
}
}",0,0,0,1,0,0,0,0,0,16,6,27,0,0,1,1,6,1,1,0,2,0.5,0,0
6927_6,6,30,"if (model.determineValue(c) == null) {
Literal unassigned = null;
if (c.isUnitClause()) {
unassigned = c.getLiterals().iterator().next();
} else {
for (Literal l : c.getLiterals()) {
Boolean value = model.getValue(l.getAtomicSentence());
if (value == null) {
if (unassigned == null) {
unassigned = l;
} else {
unassigned = null;
break;
}
}
}
}

if (unassigned != null) {
result = new Pair<PropositionSymbol, Boolean>(
unassigned.getAtomicSentence(),
unassigned.isPositiveLiteral());
break;
}
}",1,0,0,0,0,0,0,0,0,15,5,25,0,0,0,0,6,1,1,0,2,0.5,0,0
6927_7,7,7,Literal unassigned = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,1,1,0,2,0.58,10,9
6927_8,8,22,"if (c.isUnitClause()) {
unassigned = c.getLiterals().iterator().next();
} else {
for (Literal l : c.getLiterals()) {
Boolean value = model.getValue(l.getAtomicSentence());
if (value == null) {
if (unassigned == null) {
unassigned = l;
} else {
unassigned = null;
break;
}
}
}
}",1,0,0,0,0,0,0,0,0,10,4,15,0,1,0,1,6,1,1,0,2,0.5,0,0
6927_9,9,9,unassigned = c.getLiterals().iterator().next();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,1,0,2,0.47,8,7
6927_10,10,10,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,1,0,0,0.27,7,6
6927_11,11,21,"for (Literal l : c.getLiterals()) {
Boolean value = model.getValue(l.getAtomicSentence());
if (value == null) {
if (unassigned == null) {
unassigned = l;
} else {
unassigned = null;
break;
}
}
}",0,0,0,1,0,0,0,0,0,7,3,11,0,0,0,0,6,1,1,0,2,0.5,0,0
6927_12,12,12,Boolean value = model.getValue(l.getAtomicSentence());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,1,1,0,0,0.43,5,4
6927_13,13,20,"if (value == null) {
if (unassigned == null) {
unassigned = l;
} else {
unassigned = null;
break;
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,0,6,1,1,0,1,0.4,0,0
6927_14,14,19,"if (unassigned == null) {
unassigned = l;
} else {
unassigned = null;
break;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,6,1,1,0,1,0.41,0,0
6927_15,15,15,unassigned = l;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,1,0,1,0.41,2,1
6927_16,16,16,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,1,0,0,0.27,1,0
6927_17,17,17,unassigned = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,1,0,1,0.31,0,0
6927_18,18,18,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,1,1,0,0,0.38,1,0
6927_24,24,29,"if (unassigned != null) {
result = new Pair<PropositionSymbol, Boolean>(
unassigned.getAtomicSentence(),
unassigned.isPositiveLiteral());
break;
}",1,0,0,0,0,0,0,0,0,2,1,6,0,0,1,0,6,1,1,0,2,0.5,7,2
6927_25,25,27,"result = new Pair<PropositionSymbol, Boolean>(
unassigned.getAtomicSentence(),
unassigned.isPositiveLiteral());",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,6,1,1,0,2,0.48,8,2
6927_28,28,28,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,1,1,0,0,0.38,11,4
6927_33,33,33,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,1,1,0,0,0.29,16,5
6926_1,1,2,"protected Pair<PropositionSymbol, Boolean> findUnitClause(
Set<Clause> clauses, Model model) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,0,0,0,0.41,12,10
6926_3,3,3,"Pair<PropositionSymbol, Boolean> result = null;",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.39,11,9
6926_5,5,31,"for (Clause c : clauses) {
if (model.determineValue(c) == null) {
Literal unassigned = null;
if (c.isUnitClause()) {
unassigned = c.getLiterals().iterator().next();
} else {
for (Literal l : c.getLiterals()) {
Boolean value = model.getValue(l.getAtomicSentence());
if (value == null) {
if (unassigned == null) {
unassigned = l;
} else {
unassigned = null;
break;
}
}
}
}

if (unassigned != null) {
result = new Pair<PropositionSymbol, Boolean>(
unassigned.getAtomicSentence(),
unassigned.isPositiveLiteral());
break;
}
}
}",0,0,0,1,0,0,0,0,0,16,6,27,0,0,1,1,4,2,0,0,2,0.54,0,0
6926_6,6,30,"if (model.determineValue(c) == null) {
Literal unassigned = null;
if (c.isUnitClause()) {
unassigned = c.getLiterals().iterator().next();
} else {
for (Literal l : c.getLiterals()) {
Boolean value = model.getValue(l.getAtomicSentence());
if (value == null) {
if (unassigned == null) {
unassigned = l;
} else {
unassigned = null;
break;
}
}
}
}

if (unassigned != null) {
result = new Pair<PropositionSymbol, Boolean>(
unassigned.getAtomicSentence(),
unassigned.isPositiveLiteral());
break;
}
}",1,0,0,0,0,0,0,0,0,15,5,25,0,0,0,0,4,2,0,0,2,0.54,0,0
6926_7,7,7,Literal unassigned = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,2,0.66,7,6
6926_8,8,22,"if (c.isUnitClause()) {
unassigned = c.getLiterals().iterator().next();
} else {
for (Literal l : c.getLiterals()) {
Boolean value = model.getValue(l.getAtomicSentence());
if (value == null) {
if (unassigned == null) {
unassigned = l;
} else {
unassigned = null;
break;
}
}
}
}",1,0,0,0,0,0,0,0,0,10,4,15,0,1,0,1,4,2,0,0,2,0.54,0,0
6926_9,9,9,unassigned = c.getLiterals().iterator().next();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.54,5,4
6926_10,10,10,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.32,4,3
6926_11,11,21,"for (Literal l : c.getLiterals()) {
Boolean value = model.getValue(l.getAtomicSentence());
if (value == null) {
if (unassigned == null) {
unassigned = l;
} else {
unassigned = null;
break;
}
}
}",0,0,0,1,0,0,0,0,0,7,3,11,0,0,0,0,4,2,0,0,2,0.54,0,0
6926_12,12,12,Boolean value = model.getValue(l.getAtomicSentence());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.45,2,1
6926_13,13,20,"if (value == null) {
if (unassigned == null) {
unassigned = l;
} else {
unassigned = null;
break;
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,0,4,2,0,0,1,0.39,0,0
6926_14,14,19,"if (unassigned == null) {
unassigned = l;
} else {
unassigned = null;
break;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,4,2,0,0,1,0.4,0,0
6926_15,15,15,unassigned = l;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.4,1,0
6926_16,16,16,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.32,2,1
6926_17,17,17,unassigned = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.35,3,2
6926_18,18,18,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,2,0,0,0,0.24,4,3
6926_24,24,29,"if (unassigned != null) {
result = new Pair<PropositionSymbol, Boolean>(
unassigned.getAtomicSentence(),
unassigned.isPositiveLiteral());
break;
}",1,0,0,0,0,0,0,0,0,2,1,6,0,0,1,0,4,2,0,0,2,0.53,10,5
6926_25,25,27,"result = new Pair<PropositionSymbol, Boolean>(
unassigned.getAtomicSentence(),
unassigned.isPositiveLiteral());",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,4,2,0,0,2,0.54,11,5
6926_28,28,28,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,2,0,0,0,0.24,14,7
6926_33,33,33,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.28,19,8
6925_1,1,2,"protected Pair<PropositionSymbol, Boolean> findUnitClause(
Set<Clause> clauses, Model model) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,1,0,1,0.49,4,2
6925_3,3,3,"Pair<PropositionSymbol, Boolean> result = null;",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,5,1,0,0,0.39,3,1
6925_5,5,31,"for (Clause c : clauses) {
if (model.determineValue(c) == null) {
Literal unassigned = null;
if (c.isUnitClause()) {
unassigned = c.getLiterals().iterator().next();
} else {
for (Literal l : c.getLiterals()) {
Boolean value = model.getValue(l.getAtomicSentence());
if (value == null) {
if (unassigned == null) {
unassigned = l;
} else {
unassigned = null;
break;
}
}
}
}

if (unassigned != null) {
result = new Pair<PropositionSymbol, Boolean>(
unassigned.getAtomicSentence(),
unassigned.isPositiveLiteral());
break;
}
}
}",0,0,0,1,0,0,0,0,0,16,6,27,0,0,1,1,9,5,1,0,3,0.57,0,0
6925_6,6,30,"if (model.determineValue(c) == null) {
Literal unassigned = null;
if (c.isUnitClause()) {
unassigned = c.getLiterals().iterator().next();
} else {
for (Literal l : c.getLiterals()) {
Boolean value = model.getValue(l.getAtomicSentence());
if (value == null) {
if (unassigned == null) {
unassigned = l;
} else {
unassigned = null;
break;
}
}
}
}

if (unassigned != null) {
result = new Pair<PropositionSymbol, Boolean>(
unassigned.getAtomicSentence(),
unassigned.isPositiveLiteral());
break;
}
}",1,0,0,0,0,0,0,0,0,15,5,25,0,0,0,0,9,5,1,0,3,0.57,0,0
6925_7,7,7,Literal unassigned = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,1,0,1,0.58,1,0
6925_8,8,22,"if (c.isUnitClause()) {
unassigned = c.getLiterals().iterator().next();
} else {
for (Literal l : c.getLiterals()) {
Boolean value = model.getValue(l.getAtomicSentence());
if (value == null) {
if (unassigned == null) {
unassigned = l;
} else {
unassigned = null;
break;
}
}
}
}",1,0,0,0,0,0,0,0,0,10,4,15,0,1,0,1,9,5,1,0,3,0.58,2,1
6925_9,9,9,unassigned = c.getLiterals().iterator().next();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,1,0.46,3,2
6925_10,10,10,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,0,0.35,4,3
6925_11,11,21,"for (Literal l : c.getLiterals()) {
Boolean value = model.getValue(l.getAtomicSentence());
if (value == null) {
if (unassigned == null) {
unassigned = l;
} else {
unassigned = null;
break;
}
}
}",0,0,0,1,0,0,0,0,0,7,3,11,0,0,0,0,9,5,1,0,2,0.56,5,4
6925_12,12,12,Boolean value = model.getValue(l.getAtomicSentence());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,1,0,1,0.52,6,5
6925_13,13,20,"if (value == null) {
if (unassigned == null) {
unassigned = l;
} else {
unassigned = null;
break;
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,0,9,5,1,0,1,0.49,7,6
6925_14,14,19,"if (unassigned == null) {
unassigned = l;
} else {
unassigned = null;
break;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,9,5,1,0,0,0.4,8,7
6925_15,15,15,unassigned = l;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,0,0.39,9,8
6925_16,16,16,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,0,0.35,10,9
6925_17,17,17,unassigned = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,0,0.34,11,10
6925_18,18,18,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,9,5,1,0,0,0.22,12,11
6925_24,24,29,"if (unassigned != null) {
result = new Pair<PropositionSymbol, Boolean>(
unassigned.getAtomicSentence(),
unassigned.isPositiveLiteral());
break;
}",1,0,0,0,0,0,0,0,0,2,1,6,0,0,1,0,9,5,1,0,1,0.46,18,13
6925_25,25,27,"result = new Pair<PropositionSymbol, Boolean>(
unassigned.getAtomicSentence(),
unassigned.isPositiveLiteral());",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,9,5,1,0,1,0.47,19,13
6925_28,28,28,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,9,5,1,0,0,0.22,22,15
6925_33,33,33,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,9,5,1,0,0,0.38,27,16
6924_1,1,2,"protected Pair<PropositionSymbol, Boolean> findPureSymbol(
List<PropositionSymbol> symbols, Set<Clause> clauses, Model model) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,2,0.74,32,19
6924_3,3,3,"Pair<PropositionSymbol, Boolean> result = null;",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,1,0.56,31,18
6924_5,5,5,Set<PropositionSymbol> symbolsToKeep = new HashSet<PropositionSymbol>(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,0,0,1,0.63,29,17
6924_6,6,6,Set<PropositionSymbol> candidatePurePositiveSymbols = new HashSet<PropositionSymbol>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.75,28,16
6924_7,7,7,Set<PropositionSymbol> candidatePureNegativeSymbols = new HashSet<PropositionSymbol>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,3,0.83,27,15
6924_8,8,22,"for (Clause c : clauses) {
if (Boolean.TRUE.equals(model.determineValue(c))) {
continue;
}
for (PropositionSymbol p : c.getPositiveSymbols()) {
if (symbolsToKeep.contains(p)) {
candidatePurePositiveSymbols.add(p);
}
}
for (PropositionSymbol n : c.getNegativeSymbols()) {
if (symbolsToKeep.contains(n)) {
candidatePureNegativeSymbols.add(n);
}
}
}",0,0,0,1,0,0,0,0,0,8,3,15,0,1,0,1,3,2,0,0,3,0.78,12,6
6924_9,9,11,"if (Boolean.TRUE.equals(model.determineValue(c))) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,2,0,0,0,0.4,23,12
6924_10,10,10,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.32,24,12
6924_12,12,16,"for (PropositionSymbol p : c.getPositiveSymbols()) {
if (symbolsToKeep.contains(p)) {
candidatePurePositiveSymbols.add(p);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,1,1,0,0,3,2,0,0,2,0.75,18,9
6924_13,13,15,"if (symbolsToKeep.contains(p)) {
candidatePurePositiveSymbols.add(p);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,2,0.74,19,9
6924_14,14,14,candidatePurePositiveSymbols.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.75,20,9
6924_17,17,21,"for (PropositionSymbol n : c.getNegativeSymbols()) {
if (symbolsToKeep.contains(n)) {
candidatePureNegativeSymbols.add(n);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,1,1,0,0,3,2,0,0,3,0.83,13,6
6924_18,18,20,"if (symbolsToKeep.contains(n)) {
candidatePureNegativeSymbols.add(n);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,3,0.81,14,6
6924_19,19,19,candidatePureNegativeSymbols.add(n);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,3,0.84,15,6
6924_24,24,29,"for (PropositionSymbol s : symbolsToKeep) {
if (candidatePurePositiveSymbols.contains(s) && candidatePureNegativeSymbols.contains(s)) {
candidatePurePositiveSymbols.remove(s);
candidatePureNegativeSymbols.remove(s);
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,0,1,1,3,2,0,0,3,0.85,5,2
6924_25,25,28,"if (candidatePurePositiveSymbols.contains(s) && candidatePureNegativeSymbols.contains(s)) {
candidatePurePositiveSymbols.remove(s);
candidatePureNegativeSymbols.remove(s);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,3,2,0,0,3,0.84,6,2
6924_26,26,26,candidatePurePositiveSymbols.remove(s);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,2,0.76,8,3
6924_27,27,27,candidatePureNegativeSymbols.remove(s);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,3,0.87,7,2
6924_31,31,38,"if (candidatePurePositiveSymbols.size() > 0) {
result = new Pair<PropositionSymbol, Boolean>(
candidatePurePositiveSymbols.iterator().next(), true);
}
else if (candidatePureNegativeSymbols.size() > 0) {
result = new Pair<PropositionSymbol, Boolean>(
candidatePureNegativeSymbols.iterator().next(), false);
}",1,0,0,0,0,0,0,0,0,3,1,8,0,0,1,1,3,2,0,0,3,0.79,0,0
6924_32,32,33,"result = new Pair<PropositionSymbol, Boolean>(
candidatePurePositiveSymbols.iterator().next(), true);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,2,0.71,1,0
6924_35,35,35,else if (candidatePureNegativeSymbols.size() > 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,3,0.84,0,0
6924_36,36,37,"result = new Pair<PropositionSymbol, Boolean>(
candidatePureNegativeSymbols.iterator().next(), false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,3,0.78,1,0
6924_40,40,40,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.31,5,2
6923_1,1,2,"protected Pair<PropositionSymbol, Boolean> findPureSymbol(
List<PropositionSymbol> symbols, Set<Clause> clauses, Model model) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,2,0.65,23,14
6923_3,3,3,"Pair<PropositionSymbol, Boolean> result = null;",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.55,22,13
6923_5,5,5,Set<PropositionSymbol> symbolsToKeep = new HashSet<PropositionSymbol>(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.58,20,12
6923_6,6,6,Set<PropositionSymbol> candidatePurePositiveSymbols = new HashSet<PropositionSymbol>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.66,19,11
6923_7,7,7,Set<PropositionSymbol> candidatePureNegativeSymbols = new HashSet<PropositionSymbol>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,2,0.67,18,10
6923_8,8,22,"for (Clause c : clauses) {
if (Boolean.TRUE.equals(model.determineValue(c))) {
continue;
}
for (PropositionSymbol p : c.getPositiveSymbols()) {
if (symbolsToKeep.contains(p)) {
candidatePurePositiveSymbols.add(p);
}
}
for (PropositionSymbol n : c.getNegativeSymbols()) {
if (symbolsToKeep.contains(n)) {
candidatePureNegativeSymbols.add(n);
}
}
}",0,0,0,1,0,0,0,0,0,8,3,15,0,1,0,1,4,3,0,0,2,0.65,3,1
6923_9,9,11,"if (Boolean.TRUE.equals(model.determineValue(c))) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,0,0.38,14,7
6923_10,10,10,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.41,15,7
6923_12,12,16,"for (PropositionSymbol p : c.getPositiveSymbols()) {
if (symbolsToKeep.contains(p)) {
candidatePurePositiveSymbols.add(p);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,1,1,0,0,4,3,0,0,2,0.66,9,4
6923_13,13,15,"if (symbolsToKeep.contains(p)) {
candidatePurePositiveSymbols.add(p);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,2,0.65,10,4
6923_14,14,14,candidatePurePositiveSymbols.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.67,11,4
6923_17,17,21,"for (PropositionSymbol n : c.getNegativeSymbols()) {
if (symbolsToKeep.contains(n)) {
candidatePureNegativeSymbols.add(n);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,1,1,0,0,4,3,0,0,2,0.66,4,1
6923_18,18,20,"if (symbolsToKeep.contains(n)) {
candidatePureNegativeSymbols.add(n);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,2,0.65,5,1
6923_19,19,19,candidatePureNegativeSymbols.add(n);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.67,6,1
6923_24,24,29,"for (PropositionSymbol s : symbolsToKeep) {
if (candidatePurePositiveSymbols.contains(s) && candidatePureNegativeSymbols.contains(s)) {
candidatePurePositiveSymbols.remove(s);
candidatePureNegativeSymbols.remove(s);
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,0,1,1,4,3,0,0,3,0.82,0,0
6923_25,25,28,"if (candidatePurePositiveSymbols.contains(s) && candidatePureNegativeSymbols.contains(s)) {
candidatePurePositiveSymbols.remove(s);
candidatePureNegativeSymbols.remove(s);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,4,3,0,0,3,0.81,0,0
6923_26,26,26,candidatePurePositiveSymbols.remove(s);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.84,1,0
6923_27,27,27,candidatePureNegativeSymbols.remove(s);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.86,2,1
6923_31,31,38,"if (candidatePurePositiveSymbols.size() > 0) {
result = new Pair<PropositionSymbol, Boolean>(
candidatePurePositiveSymbols.iterator().next(), true);
}
else if (candidatePureNegativeSymbols.size() > 0) {
result = new Pair<PropositionSymbol, Boolean>(
candidatePureNegativeSymbols.iterator().next(), false);
}",1,0,0,0,0,0,0,0,0,3,1,8,0,0,1,1,4,3,0,0,2,0.66,6,3
6923_32,32,33,"result = new Pair<PropositionSymbol, Boolean>(
candidatePurePositiveSymbols.iterator().next(), true);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,2,0.64,7,3
6923_35,35,35,else if (candidatePureNegativeSymbols.size() > 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.67,10,5
6923_36,36,37,"result = new Pair<PropositionSymbol, Boolean>(
candidatePureNegativeSymbols.iterator().next(), false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,2,0.64,11,5
6923_40,40,40,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.22,15,7
6922_1,1,2,"protected Pair<PropositionSymbol, Boolean> findPureSymbol(
List<PropositionSymbol> symbols, Set<Clause> clauses, Model model) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,1,0,0,0.45,22,13
6922_3,3,3,"Pair<PropositionSymbol, Boolean> result = null;",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.38,21,12
6922_5,5,5,Set<PropositionSymbol> symbolsToKeep = new HashSet<PropositionSymbol>(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,4,1,0,0,0.41,19,11
6922_6,6,6,Set<PropositionSymbol> candidatePurePositiveSymbols = new HashSet<PropositionSymbol>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,1,0,2,0.64,18,10
6922_7,7,7,Set<PropositionSymbol> candidatePureNegativeSymbols = new HashSet<PropositionSymbol>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,2,0.63,17,9
6922_8,8,22,"for (Clause c : clauses) {
if (Boolean.TRUE.equals(model.determineValue(c))) {
continue;
}
for (PropositionSymbol p : c.getPositiveSymbols()) {
if (symbolsToKeep.contains(p)) {
candidatePurePositiveSymbols.add(p);
}
}
for (PropositionSymbol n : c.getNegativeSymbols()) {
if (symbolsToKeep.contains(n)) {
candidatePureNegativeSymbols.add(n);
}
}
}",0,0,0,1,0,0,0,0,0,8,3,15,0,1,0,1,6,4,1,0,4,0.7,2,0
6922_9,9,11,"if (Boolean.TRUE.equals(model.determineValue(c))) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,1,0,1,0.5,13,6
6922_10,10,10,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.29,14,6
6922_12,12,16,"for (PropositionSymbol p : c.getPositiveSymbols()) {
if (symbolsToKeep.contains(p)) {
candidatePurePositiveSymbols.add(p);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,1,1,0,0,6,4,1,0,2,0.64,8,3
6922_13,13,15,"if (symbolsToKeep.contains(p)) {
candidatePurePositiveSymbols.add(p);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,4,1,0,2,0.65,9,3
6922_14,14,14,candidatePurePositiveSymbols.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,2,0.69,10,3
6922_17,17,21,"for (PropositionSymbol n : c.getNegativeSymbols()) {
if (symbolsToKeep.contains(n)) {
candidatePureNegativeSymbols.add(n);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,1,1,0,0,6,4,1,0,2,0.62,3,0
6922_18,18,20,"if (symbolsToKeep.contains(n)) {
candidatePureNegativeSymbols.add(n);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,4,1,0,2,0.62,4,0
6922_19,19,19,candidatePureNegativeSymbols.add(n);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,2,0.67,5,0
6922_24,24,29,"for (PropositionSymbol s : symbolsToKeep) {
if (candidatePurePositiveSymbols.contains(s) && candidatePureNegativeSymbols.contains(s)) {
candidatePurePositiveSymbols.remove(s);
candidatePureNegativeSymbols.remove(s);
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,0,1,1,6,4,1,0,3,0.72,0,0
6922_25,25,28,"if (candidatePurePositiveSymbols.contains(s) && candidatePureNegativeSymbols.contains(s)) {
candidatePurePositiveSymbols.remove(s);
candidatePureNegativeSymbols.remove(s);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,6,4,1,0,3,0.73,1,0
6922_26,26,26,candidatePurePositiveSymbols.remove(s);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,1,0,2,0.68,2,1
6922_27,27,27,candidatePureNegativeSymbols.remove(s);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,1,0,2,0.67,3,2
6922_31,31,38,"if (candidatePurePositiveSymbols.size() > 0) {
result = new Pair<PropositionSymbol, Boolean>(
candidatePurePositiveSymbols.iterator().next(), true);
}
else if (candidatePureNegativeSymbols.size() > 0) {
result = new Pair<PropositionSymbol, Boolean>(
candidatePureNegativeSymbols.iterator().next(), false);
}",1,0,0,0,0,0,0,0,0,3,1,8,0,0,1,1,6,4,1,0,3,0.68,7,4
6922_32,32,33,"result = new Pair<PropositionSymbol, Boolean>(
candidatePurePositiveSymbols.iterator().next(), true);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,1,0,2,0.62,8,4
6922_35,35,35,else if (candidatePureNegativeSymbols.size() > 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,2,0.67,11,6
6922_36,36,37,"result = new Pair<PropositionSymbol, Boolean>(
candidatePureNegativeSymbols.iterator().next(), false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,1,0,2,0.61,12,6
6922_40,40,40,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,4,1,0,0,0.33,16,8
6921_1,1,2,"protected Pair<PropositionSymbol, Boolean> findPureSymbol(
List<PropositionSymbol> symbols, Set<Clause> clauses, Model model) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,8,0,0,2,0.57,10,7
6921_3,3,3,"Pair<PropositionSymbol, Boolean> result = null;",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,10,8,0,0,1,0.46,9,6
6921_5,5,5,Set<PropositionSymbol> symbolsToKeep = new HashSet<PropositionSymbol>(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,10,8,0,0,1,0.52,7,5
6921_6,6,6,Set<PropositionSymbol> candidatePurePositiveSymbols = new HashSet<PropositionSymbol>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,8,0,0,2,0.59,6,4
6921_7,7,7,Set<PropositionSymbol> candidatePureNegativeSymbols = new HashSet<PropositionSymbol>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,8,0,0,2,0.6,5,3
6921_8,8,22,"for (Clause c : clauses) {
if (Boolean.TRUE.equals(model.determineValue(c))) {
continue;
}
for (PropositionSymbol p : c.getPositiveSymbols()) {
if (symbolsToKeep.contains(p)) {
candidatePurePositiveSymbols.add(p);
}
}
for (PropositionSymbol n : c.getNegativeSymbols()) {
if (symbolsToKeep.contains(n)) {
candidatePureNegativeSymbols.add(n);
}
}
}",0,0,0,1,0,0,0,0,0,8,3,15,0,1,0,1,10,8,0,0,2,0.58,0,0
6921_9,9,11,"if (Boolean.TRUE.equals(model.determineValue(c))) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,10,8,0,0,0,0.4,1,0
6921_10,10,10,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,0,0,0,0.29,2,0
6921_12,12,16,"for (PropositionSymbol p : c.getPositiveSymbols()) {
if (symbolsToKeep.contains(p)) {
candidatePurePositiveSymbols.add(p);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,1,1,0,0,10,8,0,0,2,0.57,0,0
6921_13,13,15,"if (symbolsToKeep.contains(p)) {
candidatePurePositiveSymbols.add(p);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,8,0,0,2,0.57,1,0
6921_14,14,14,candidatePurePositiveSymbols.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,0,0,2,0.58,2,1
6921_17,17,21,"for (PropositionSymbol n : c.getNegativeSymbols()) {
if (symbolsToKeep.contains(n)) {
candidatePureNegativeSymbols.add(n);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,1,1,0,0,10,8,0,0,2,0.6,5,3
6921_18,18,20,"if (symbolsToKeep.contains(n)) {
candidatePureNegativeSymbols.add(n);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,8,0,0,2,0.59,6,3
6921_19,19,19,candidatePureNegativeSymbols.add(n);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,0,0,2,0.61,7,4
6921_24,24,29,"for (PropositionSymbol s : symbolsToKeep) {
if (candidatePurePositiveSymbols.contains(s) && candidatePureNegativeSymbols.contains(s)) {
candidatePurePositiveSymbols.remove(s);
candidatePureNegativeSymbols.remove(s);
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,0,1,1,10,8,0,0,3,0.69,12,6
6921_25,25,28,"if (candidatePurePositiveSymbols.contains(s) && candidatePureNegativeSymbols.contains(s)) {
candidatePurePositiveSymbols.remove(s);
candidatePureNegativeSymbols.remove(s);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,10,8,0,0,3,0.68,13,6
6921_26,26,26,candidatePurePositiveSymbols.remove(s);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,10,8,0,0,3,0.69,14,7
6921_27,27,27,candidatePureNegativeSymbols.remove(s);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,10,8,0,0,3,0.72,15,8
6921_31,31,38,"if (candidatePurePositiveSymbols.size() > 0) {
result = new Pair<PropositionSymbol, Boolean>(
candidatePurePositiveSymbols.iterator().next(), true);
}
else if (candidatePureNegativeSymbols.size() > 0) {
result = new Pair<PropositionSymbol, Boolean>(
candidatePureNegativeSymbols.iterator().next(), false);
}",1,0,0,0,0,0,0,0,0,3,1,8,0,0,1,1,10,8,0,0,2,0.6,19,10
6921_32,32,33,"result = new Pair<PropositionSymbol, Boolean>(
candidatePurePositiveSymbols.iterator().next(), true);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,8,0,0,2,0.57,20,10
6921_35,35,35,else if (candidatePureNegativeSymbols.size() > 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,0,0,2,0.61,23,12
6921_36,36,37,"result = new Pair<PropositionSymbol, Boolean>(
candidatePureNegativeSymbols.iterator().next(), false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,8,0,0,2,0.59,24,12
6921_40,40,40,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,10,8,0,0,0,0.26,28,14
6920_1,1,2,"protected Pair<PropositionSymbol, Boolean> findPureSymbol(
List<PropositionSymbol> symbols, Set<Clause> clauses, Model model) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,1,2,0,1,0.52,7,5
6920_3,3,3,"Pair<PropositionSymbol, Boolean> result = null;",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,1,2,0,0,0.38,6,4
6920_5,5,5,Set<PropositionSymbol> symbolsToKeep = new HashSet<PropositionSymbol>(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,1,2,0,0,0.39,4,3
6920_6,6,6,Set<PropositionSymbol> candidatePurePositiveSymbols = new HashSet<PropositionSymbol>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,1,2,0,0,0.42,3,2
6920_7,7,7,Set<PropositionSymbol> candidatePureNegativeSymbols = new HashSet<PropositionSymbol>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,1,2,0,0,0.44,2,1
6920_8,8,22,"for (Clause c : clauses) {
if (Boolean.TRUE.equals(model.determineValue(c))) {
continue;
}
for (PropositionSymbol p : c.getPositiveSymbols()) {
if (symbolsToKeep.contains(p)) {
candidatePurePositiveSymbols.add(p);
}
}
for (PropositionSymbol n : c.getNegativeSymbols()) {
if (symbolsToKeep.contains(n)) {
candidatePureNegativeSymbols.add(n);
}
}
}",0,0,0,1,0,0,0,0,0,8,3,15,0,1,0,1,6,1,2,0,2,0.55,0,0
6920_9,9,11,"if (Boolean.TRUE.equals(model.determineValue(c))) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,1,2,0,1,0.45,0,0
6920_10,10,10,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,2,0,0,0.26,1,0
6920_12,12,16,"for (PropositionSymbol p : c.getPositiveSymbols()) {
if (symbolsToKeep.contains(p)) {
candidatePurePositiveSymbols.add(p);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,1,1,0,0,6,1,2,0,0,0.43,3,2
6920_13,13,15,"if (symbolsToKeep.contains(p)) {
candidatePurePositiveSymbols.add(p);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,1,2,0,0,0.43,4,2
6920_14,14,14,candidatePurePositiveSymbols.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,2,0,0,0.43,5,3
6920_17,17,21,"for (PropositionSymbol n : c.getNegativeSymbols()) {
if (symbolsToKeep.contains(n)) {
candidatePureNegativeSymbols.add(n);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,1,1,0,0,6,1,2,0,0,0.44,8,5
6920_18,18,20,"if (symbolsToKeep.contains(n)) {
candidatePureNegativeSymbols.add(n);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,1,2,0,0,0.43,9,5
6920_19,19,19,candidatePureNegativeSymbols.add(n);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,2,0,0,0.44,10,6
6920_24,24,29,"for (PropositionSymbol s : symbolsToKeep) {
if (candidatePurePositiveSymbols.contains(s) && candidatePureNegativeSymbols.contains(s)) {
candidatePurePositiveSymbols.remove(s);
candidatePureNegativeSymbols.remove(s);
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,0,1,1,6,1,2,0,0,0.45,15,8
6920_25,25,28,"if (candidatePurePositiveSymbols.contains(s) && candidatePureNegativeSymbols.contains(s)) {
candidatePurePositiveSymbols.remove(s);
candidatePureNegativeSymbols.remove(s);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,6,1,2,0,0,0.45,16,8
6920_26,26,26,candidatePurePositiveSymbols.remove(s);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,1,2,0,0,0.43,17,9
6920_27,27,27,candidatePureNegativeSymbols.remove(s);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,1,2,0,0,0.46,18,10
6920_31,31,38,"if (candidatePurePositiveSymbols.size() > 0) {
result = new Pair<PropositionSymbol, Boolean>(
candidatePurePositiveSymbols.iterator().next(), true);
}
else if (candidatePureNegativeSymbols.size() > 0) {
result = new Pair<PropositionSymbol, Boolean>(
candidatePureNegativeSymbols.iterator().next(), false);
}",1,0,0,0,0,0,0,0,0,3,1,8,0,0,1,1,6,1,2,0,1,0.48,22,12
6920_32,32,33,"result = new Pair<PropositionSymbol, Boolean>(
candidatePurePositiveSymbols.iterator().next(), true);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,1,2,0,1,0.48,23,12
6920_35,35,35,else if (candidatePureNegativeSymbols.size() > 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,2,0,0,0.45,26,14
6920_36,36,37,"result = new Pair<PropositionSymbol, Boolean>(
candidatePureNegativeSymbols.iterator().next(), false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,1,2,0,0,0.43,27,14
6920_40,40,40,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,1,2,0,0,0.33,31,16
6919_1,1,2,"protected Pair<PropositionSymbol, Boolean> findPureSymbol(
List<PropositionSymbol> symbols, Set<Clause> clauses, Model model) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,0,0,3,0.65,4,2
6919_3,3,3,"Pair<PropositionSymbol, Boolean> result = null;",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,5,0,0,1,0.45,3,1
6919_5,5,5,Set<PropositionSymbol> symbolsToKeep = new HashSet<PropositionSymbol>(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,8,5,0,0,2,0.66,1,0
6919_6,6,6,Set<PropositionSymbol> candidatePurePositiveSymbols = new HashSet<PropositionSymbol>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,5,0,0,5,0.83,0,0
6919_7,7,7,Set<PropositionSymbol> candidatePureNegativeSymbols = new HashSet<PropositionSymbol>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,0,0,5,0.82,1,0
6919_8,8,22,"for (Clause c : clauses) {
if (Boolean.TRUE.equals(model.determineValue(c))) {
continue;
}
for (PropositionSymbol p : c.getPositiveSymbols()) {
if (symbolsToKeep.contains(p)) {
candidatePurePositiveSymbols.add(p);
}
}
for (PropositionSymbol n : c.getNegativeSymbols()) {
if (symbolsToKeep.contains(n)) {
candidatePureNegativeSymbols.add(n);
}
}
}",0,0,0,1,0,0,0,0,0,8,3,15,0,1,0,1,8,5,0,0,5,0.71,2,1
6919_9,9,11,"if (Boolean.TRUE.equals(model.determineValue(c))) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,8,5,0,0,0,0.42,3,2
6919_10,10,10,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.29,4,3
6919_12,12,16,"for (PropositionSymbol p : c.getPositiveSymbols()) {
if (symbolsToKeep.contains(p)) {
candidatePurePositiveSymbols.add(p);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,1,1,0,0,8,5,0,0,4,0.72,6,5
6919_13,13,15,"if (symbolsToKeep.contains(p)) {
candidatePurePositiveSymbols.add(p);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,5,0,0,4,0.72,7,5
6919_14,14,14,candidatePurePositiveSymbols.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,4,0.75,8,6
6919_17,17,21,"for (PropositionSymbol n : c.getNegativeSymbols()) {
if (symbolsToKeep.contains(n)) {
candidatePureNegativeSymbols.add(n);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,1,1,0,0,8,5,0,0,4,0.71,11,8
6919_18,18,20,"if (symbolsToKeep.contains(n)) {
candidatePureNegativeSymbols.add(n);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,5,0,0,4,0.71,12,8
6919_19,19,19,candidatePureNegativeSymbols.add(n);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,4,0.75,13,9
6919_24,24,29,"for (PropositionSymbol s : symbolsToKeep) {
if (candidatePurePositiveSymbols.contains(s) && candidatePureNegativeSymbols.contains(s)) {
candidatePurePositiveSymbols.remove(s);
candidatePureNegativeSymbols.remove(s);
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,0,1,1,8,5,0,0,5,0.82,18,11
6919_25,25,28,"if (candidatePurePositiveSymbols.contains(s) && candidatePureNegativeSymbols.contains(s)) {
candidatePurePositiveSymbols.remove(s);
candidatePureNegativeSymbols.remove(s);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,8,5,0,0,5,0.82,19,11
6919_26,26,26,candidatePurePositiveSymbols.remove(s);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,5,0,0,4,0.79,20,12
6919_27,27,27,candidatePureNegativeSymbols.remove(s);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,5,0,0,4,0.78,21,13
6919_31,31,38,"if (candidatePurePositiveSymbols.size() > 0) {
result = new Pair<PropositionSymbol, Boolean>(
candidatePurePositiveSymbols.iterator().next(), true);
}
else if (candidatePureNegativeSymbols.size() > 0) {
result = new Pair<PropositionSymbol, Boolean>(
candidatePureNegativeSymbols.iterator().next(), false);
}",1,0,0,0,0,0,0,0,0,3,1,8,0,0,1,1,8,5,0,0,5,0.75,25,15
6919_32,32,33,"result = new Pair<PropositionSymbol, Boolean>(
candidatePurePositiveSymbols.iterator().next(), true);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,0,0,4,0.68,26,15
6919_35,35,35,else if (candidatePureNegativeSymbols.size() > 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,4,0.75,29,17
6919_36,36,37,"result = new Pair<PropositionSymbol, Boolean>(
candidatePureNegativeSymbols.iterator().next(), false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,0,0,4,0.67,30,17
6919_40,40,40,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,8,5,0,0,0,0.29,34,19
6918_1,1,3,"	@Override
public boolean dpll(Set<Clause> clauses, List<PropositionSymbol> symbols,
Model model) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,15,12,0,0,3,0.63,23,12
6918_4,4,6,"if (everyClauseTrue(clauses, model)) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,15,12,0,0,4,0.81,20,10
6918_5,5,5,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,15,12,0,0,2,0.68,21,10
6918_7,7,9,"if (someClauseFalse(clauses, model)) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,15,12,0,0,4,0.84,17,8
6918_8,8,8,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,15,12,0,0,2,0.68,18,8
6918_11,11,12,"Pair<PropositionSymbol, Boolean> pAndValue = findPureSymbol(symbols,
clauses, model);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,15,12,0,0,3,0.66,14,7
6918_13,13,16,"if (pAndValue != null) {
return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,15,12,0,0,5,0.68,10,5
6918_14,14,15,"return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,15,12,0,0,5,0.68,11,5
6918_18,18,18,"pAndValue = findUnitClause(clauses, model);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,15,12,0,0,3,0.69,8,4
6918_19,19,22,"if (pAndValue != null) {
return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,15,12,0,0,5,0.68,4,2
6918_20,20,21,"return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,15,12,0,0,5,0.68,5,2
6918_24,24,24,PropositionSymbol p = Util.first(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,15,12,0,0,1,0.53,2,1
6918_25,25,25,List<PropositionSymbol> rest = Util.rest(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,15,12,0,0,1,0.57,1,0
6918_26,26,27,"return dpll(clauses, rest, model.union(p, true))
|| dpll(clauses, rest, model.union(p, false));",0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,15,12,0,0,8,0.93,0,0
6917_1,1,3,"	@Override
public boolean dpll(Set<Clause> clauses, List<PropositionSymbol> symbols,
Model model) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,6,5,0,0,1,0.54,21,10
6917_4,4,6,"if (everyClauseTrue(clauses, model)) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,5,0,0,0,0.38,18,8
6917_5,5,5,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.31,19,8
6917_7,7,9,"if (someClauseFalse(clauses, model)) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,5,0,0,0,0.37,15,6
6917_8,8,8,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.31,16,6
6917_11,11,12,"Pair<PropositionSymbol, Boolean> pAndValue = findPureSymbol(symbols,
clauses, model);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,6,5,0,0,2,0.64,12,5
6917_13,13,16,"if (pAndValue != null) {
return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,6,5,0,0,3,0.66,8,3
6917_14,14,15,"return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,6,5,0,0,3,0.67,9,3
6917_18,18,18,"pAndValue = findUnitClause(clauses, model);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,5,0,0,1,0.48,6,2
6917_19,19,22,"if (pAndValue != null) {
return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,6,5,0,0,3,0.66,2,0
6917_20,20,21,"return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,6,5,0,0,3,0.67,3,0
6917_24,24,24,PropositionSymbol p = Util.first(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,5,0,0,3,0.82,0,0
6917_25,25,25,List<PropositionSymbol> rest = Util.rest(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.79,1,0
6917_26,26,27,"return dpll(clauses, rest, model.union(p, true))
|| dpll(clauses, rest, model.union(p, false));",0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,6,5,0,0,2,0.66,2,1
6915_1,1,3,"	@Override
public boolean dpll(Set<Clause> clauses, List<PropositionSymbol> symbols,
Model model) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,3,2,0,0,0,0.36,16,8
6915_4,4,6,"if (everyClauseTrue(clauses, model)) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,0,0.35,13,6
6915_5,5,5,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.37,14,6
6915_7,7,9,"if (someClauseFalse(clauses, model)) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,2,0,0,0,0.29,10,4
6915_8,8,8,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.32,11,4
6915_11,11,12,"Pair<PropositionSymbol, Boolean> pAndValue = findPureSymbol(symbols,
clauses, model);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,3,2,0,0,1,0.48,7,3
6915_13,13,16,"if (pAndValue != null) {
return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,3,2,0,0,2,0.63,3,1
6915_14,14,15,"return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,3,2,0,0,1,0.52,4,1
6915_18,18,18,"pAndValue = findUnitClause(clauses, model);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.43,1,0
6915_19,19,22,"if (pAndValue != null) {
return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,3,2,0,0,2,0.63,0,0
6915_20,20,21,"return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,3,2,0,0,1,0.52,1,0
6915_24,24,24,PropositionSymbol p = Util.first(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,0,0,1,0.54,5,2
6915_25,25,25,List<PropositionSymbol> rest = Util.rest(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.37,6,2
6915_26,26,27,"return dpll(clauses, rest, model.union(p, true))
|| dpll(clauses, rest, model.union(p, false));",0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,3,2,0,0,1,0.5,7,3
6914_1,1,3,"	@Override
public boolean dpll(Set<Clause> clauses, List<PropositionSymbol> symbols,
Model model) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,7,6,1,0,2,0.62,15,7
6914_4,4,6,"if (everyClauseTrue(clauses, model)) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,6,1,0,2,0.59,12,5
6914_5,5,5,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.21,13,5
6914_7,7,9,"if (someClauseFalse(clauses, model)) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,7,6,1,0,2,0.58,9,3
6914_8,8,8,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.18,10,3
6914_11,11,12,"Pair<PropositionSymbol, Boolean> pAndValue = findPureSymbol(symbols,
clauses, model);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,7,6,1,0,5,0.81,6,2
6914_13,13,16,"if (pAndValue != null) {
return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,7,6,1,0,4,0.76,2,0
6914_14,14,15,"return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,7,6,1,0,4,0.75,3,0
6914_18,18,18,"pAndValue = findUnitClause(clauses, model);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,7,6,1,0,6,1.0,0,0
6914_19,19,22,"if (pAndValue != null) {
return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,7,6,1,0,4,0.76,1,0
6914_20,20,21,"return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,7,6,1,0,4,0.75,2,1
6914_24,24,24,PropositionSymbol p = Util.first(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,6,1,0,1,0.47,6,3
6914_25,25,25,List<PropositionSymbol> rest = Util.rest(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,1,0,0,0.37,7,3
6914_26,26,27,"return dpll(clauses, rest, model.union(p, true))
|| dpll(clauses, rest, model.union(p, false));",0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,7,6,1,0,3,0.69,8,4
6913_1,1,3,"	@Override
public boolean dpll(Set<Clause> clauses, List<PropositionSymbol> symbols,
Model model) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,9,8,0,0,4,0.69,11,6
6913_4,4,6,"if (everyClauseTrue(clauses, model)) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,9,8,0,0,3,0.68,8,4
6913_5,5,5,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,8,0,0,1,0.53,9,4
6913_7,7,9,"if (someClauseFalse(clauses, model)) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,9,8,0,0,3,0.73,5,2
6913_8,8,8,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,8,0,0,1,0.55,6,2
6913_11,11,12,"Pair<PropositionSymbol, Boolean> pAndValue = findPureSymbol(symbols,
clauses, model);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,9,8,0,0,5,0.83,2,1
6913_13,13,16,"if (pAndValue != null) {
return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,9,8,0,0,7,0.84,0,0
6913_14,14,15,"return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,9,8,0,0,7,0.84,0,0
6913_18,18,18,"pAndValue = findUnitClause(clauses, model);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,9,8,0,0,4,0.8,4,1
6913_19,19,22,"if (pAndValue != null) {
return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,9,8,0,0,7,0.84,5,1
6913_20,20,21,"return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,9,8,0,0,7,0.84,6,2
6913_24,24,24,PropositionSymbol p = Util.first(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,9,8,0,0,2,0.68,10,4
6913_25,25,25,List<PropositionSymbol> rest = Util.rest(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,8,0,0,1,0.55,11,4
6913_26,26,27,"return dpll(clauses, rest, model.union(p, true))
|| dpll(clauses, rest, model.union(p, false));",0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,9,8,0,0,5,0.79,12,5
6912_1,1,3,"	@Override
public boolean dpll(Set<Clause> clauses, List<PropositionSymbol> symbols,
Model model) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,3,2,0,0,0,0.36,10,5
6912_4,4,6,"if (everyClauseTrue(clauses, model)) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,0,0.35,7,3
6912_5,5,5,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.37,8,3
6912_7,7,9,"if (someClauseFalse(clauses, model)) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,2,0,0,0,0.29,4,1
6912_8,8,8,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.32,5,1
6912_11,11,12,"Pair<PropositionSymbol, Boolean> pAndValue = findPureSymbol(symbols,
clauses, model);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,3,2,0,0,1,0.48,1,0
6912_13,13,16,"if (pAndValue != null) {
return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,3,2,0,0,2,0.63,0,0
6912_14,14,15,"return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,3,2,0,0,1,0.52,1,0
6912_18,18,18,"pAndValue = findUnitClause(clauses, model);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.43,5,2
6912_19,19,22,"if (pAndValue != null) {
return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,3,2,0,0,2,0.63,6,2
6912_20,20,21,"return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,3,2,0,0,1,0.52,7,3
6912_24,24,24,PropositionSymbol p = Util.first(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,0,0,1,0.54,11,5
6912_25,25,25,List<PropositionSymbol> rest = Util.rest(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.37,12,5
6912_26,26,27,"return dpll(clauses, rest, model.union(p, true))
|| dpll(clauses, rest, model.union(p, false));",0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,3,2,0,0,1,0.5,13,6
6911_1,1,3,"	@Override
public boolean dpll(Set<Clause> clauses, List<PropositionSymbol> symbols,
Model model) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,8,6,1,0,3,0.71,8,4
6911_4,4,6,"if (everyClauseTrue(clauses, model)) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,6,1,0,2,0.59,5,2
6911_5,5,5,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.31,6,2
6911_7,7,9,"if (someClauseFalse(clauses, model)) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,8,6,1,0,2,0.59,2,0
6911_8,8,8,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.29,3,0
6911_11,11,12,"Pair<PropositionSymbol, Boolean> pAndValue = findPureSymbol(symbols,
clauses, model);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,8,6,1,0,7,0.95,0,0
6911_13,13,16,"if (pAndValue != null) {
return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,8,6,1,0,5,0.78,2,1
6911_14,14,15,"return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,8,6,1,0,5,0.78,3,1
6911_18,18,18,"pAndValue = findUnitClause(clauses, model);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,8,6,1,0,5,0.87,7,3
6911_19,19,22,"if (pAndValue != null) {
return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,8,6,1,0,5,0.78,8,3
6911_20,20,21,"return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,8,6,1,0,5,0.78,9,4
6911_24,24,24,PropositionSymbol p = Util.first(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,8,6,1,0,2,0.65,13,6
6911_25,25,25,List<PropositionSymbol> rest = Util.rest(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,6,1,0,1,0.56,14,6
6911_26,26,27,"return dpll(clauses, rest, model.union(p, true))
|| dpll(clauses, rest, model.union(p, false));",0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,8,6,1,0,3,0.67,15,7
6910_1,1,3,"	@Override
public boolean dpll(Set<Clause> clauses, List<PropositionSymbol> symbols,
Model model) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,6,5,1,0,2,0.65,4,2
6910_4,4,6,"if (everyClauseTrue(clauses, model)) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,5,1,0,3,0.82,1,0
6910_5,5,5,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.59,2,0
6910_7,7,9,"if (someClauseFalse(clauses, model)) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,5,1,0,4,1.0,0,0
6910_8,8,8,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,1,0,2,0.79,1,0
6910_11,11,12,"Pair<PropositionSymbol, Boolean> pAndValue = findPureSymbol(symbols,
clauses, model);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,6,5,1,0,2,0.57,4,2
6910_13,13,16,"if (pAndValue != null) {
return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,6,5,1,0,3,0.63,6,3
6910_14,14,15,"return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,6,5,1,0,3,0.63,7,3
6910_18,18,18,"pAndValue = findUnitClause(clauses, model);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,5,1,0,2,0.58,11,5
6910_19,19,22,"if (pAndValue != null) {
return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,6,5,1,0,3,0.63,12,5
6910_20,20,21,"return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,6,5,1,0,3,0.63,13,6
6910_24,24,24,PropositionSymbol p = Util.first(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,5,1,0,0,0.35,17,8
6910_25,25,25,List<PropositionSymbol> rest = Util.rest(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,1,0,0,0.36,18,8
6910_26,26,27,"return dpll(clauses, rest, model.union(p, true))
|| dpll(clauses, rest, model.union(p, false));",0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,6,5,1,0,4,0.82,19,9
6909_1,1,3,"	@Override
public boolean dpll(Set<Clause> clauses, List<PropositionSymbol> symbols,
Model model) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,7,5,0,0,2,0.62,1,0
6909_4,4,6,"if (everyClauseTrue(clauses, model)) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,5,0,0,5,1.0,0,0
6909_5,5,5,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,5,0,0,2,0.76,1,0
6909_7,7,9,"if (someClauseFalse(clauses, model)) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,7,5,0,0,3,0.82,3,2
6909_8,8,8,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,5,0,0,1,0.58,4,2
6909_11,11,12,"Pair<PropositionSymbol, Boolean> pAndValue = findPureSymbol(symbols,
clauses, model);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,7,5,0,0,2,0.57,7,4
6909_13,13,16,"if (pAndValue != null) {
return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,7,5,0,0,3,0.58,9,5
6909_14,14,15,"return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,7,5,0,0,3,0.59,10,5
6909_18,18,18,"pAndValue = findUnitClause(clauses, model);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,7,5,0,0,2,0.59,14,7
6909_19,19,22,"if (pAndValue != null) {
return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,7,5,0,0,3,0.58,15,7
6909_20,20,21,"return dpll(clauses, minus(symbols, pAndValue.getFirst()),
model.union(pAndValue.getFirst(), pAndValue.getSecond()));",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,7,5,0,0,3,0.59,16,8
6909_24,24,24,PropositionSymbol p = Util.first(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,5,0,0,0,0.37,20,10
6909_25,25,25,List<PropositionSymbol> rest = Util.rest(symbols);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,0,0,0,0.37,21,10
6909_26,26,27,"return dpll(clauses, rest, model.union(p, true))
|| dpll(clauses, rest, model.union(p, false));",0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,7,5,0,0,4,0.78,22,11
6908_1,1,2,"	@Override
public boolean dpllSatisfiable(Sentence s) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,1,0.43,5,2
6908_3,3,4,"Set<Clause> clauses = ConvertToConjunctionOfClauses.convert(s)
.getClauses();",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,4,4,0,0,1,0.57,3,1
6908_5,5,5,List<PropositionSymbol> symbols = getPropositionSymbolsInSentence(s);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,1,0.66,2,0
6908_7,7,7,"return dpll(clauses, symbols, new Model());",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,4,0,0,4,0.84,0,0
6907_1,1,2,"	@Override
public boolean dpllSatisfiable(Sentence s) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.31,3,1
6907_3,3,4,"Set<Clause> clauses = ConvertToConjunctionOfClauses.convert(s)
.getClauses();",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.36,1,0
6907_5,5,5,List<PropositionSymbol> symbols = getPropositionSymbolsInSentence(s);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,3,0.89,0,0
6907_7,7,7,"return dpll(clauses, symbols, new Model());",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.57,2,1
6906_1,1,2,"	@Override
public boolean dpllSatisfiable(Sentence s) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,1,0,0,0.36,1,0
6906_3,3,4,"Set<Clause> clauses = ConvertToConjunctionOfClauses.convert(s)
.getClauses();",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,5,4,1,0,2,0.83,0,0
6906_5,5,5,List<PropositionSymbol> symbols = getPropositionSymbolsInSentence(s);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,1,0,0,0.44,2,1
6906_7,7,7,"return dpll(clauses, symbols, new Model());",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,4,1,0,1,0.56,4,2
6892_1,1,3,"private void lookForUnitRefutation(OTTERAnswerHandler ansHandler,
IndexedClauses idxdClauses, Clause clause, Set<Clause> sos,
Set<Clause> usable) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,3,3,0,0,1,0.61,22,12
6892_5,5,5,Set<Clause> toCheck = new LinkedHashSet<Clause>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.54,20,11
6892_7,7,18,"if (ansHandler.isCheckForUnitRefutation(clause)) {
for (Clause s : sos) {
if (s.isUnitClause()) {
toCheck.add(s);
}
}
for (Clause u : usable) {
if (u.isUnitClause()) {
toCheck.add(u);
}
}
}",1,0,0,0,0,0,0,0,0,6,3,12,0,0,1,1,3,3,0,0,1,0.64,7,4
6892_8,8,12,"for (Clause s : sos) {
if (s.isUnitClause()) {
toCheck.add(s);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,1,1,0,0,3,3,0,0,1,0.62,13,7
6892_9,9,11,"if (s.isUnitClause()) {
toCheck.add(s);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,1,0.57,14,7
6892_10,10,10,toCheck.add(s);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.24,15,7
6892_13,13,17,"for (Clause u : usable) {
if (u.isUnitClause()) {
toCheck.add(u);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,1,1,0,0,3,3,0,0,1,0.66,8,4
6892_14,14,16,"if (u.isUnitClause()) {
toCheck.add(u);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,1,0.62,9,4
6892_15,15,15,toCheck.add(u);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.44,10,4
6892_20,20,39,"if (toCheck.size() > 0) {
toCheck = infer(clause, toCheck);
for (Clause t : toCheck) {
t = getClauseSimplifier().simplify(t);

if (t.isTautology()) {
continue;
}

if (!ansHandler.isAnswer(t)) {
if (!sos.contains(t) && !usable.contains(t)) {
idxdClauses.addClause(t, sos, usable);
}
}

if (ansHandler.isComplete()) {
break;
}
}
}",1,0,0,0,0,0,0,0,0,10,4,20,0,0,1,0,3,3,0,0,2,0.55,0,0
6892_21,21,21,"toCheck = infer(clause, toCheck);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.57,4,2
6892_22,22,38,"for (Clause t : toCheck) {
t = getClauseSimplifier().simplify(t);

if (t.isTautology()) {
continue;
}

if (!ansHandler.isAnswer(t)) {
if (!sos.contains(t) && !usable.contains(t)) {
idxdClauses.addClause(t, sos, usable);
}
}

if (ansHandler.isComplete()) {
break;
}
}",0,0,0,1,0,0,0,0,0,8,3,17,0,1,0,0,3,3,0,0,2,0.56,0,0
6892_23,23,23,t = getClauseSimplifier().simplify(t);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.64,2,0
6892_25,25,27,"if (t.isTautology()) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,1,0.27,0,0
6892_26,26,26,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.27,1,0
6892_29,29,33,"if (!ansHandler.isAnswer(t)) {
if (!sos.contains(t) && !usable.contains(t)) {
idxdClauses.addClause(t, sos, usable);
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,0,1,1,3,3,0,0,1,0.57,4,2
6892_30,30,32,"if (!sos.contains(t) && !usable.contains(t)) {
idxdClauses.addClause(t, sos, usable);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,1,0.6,5,2
6892_31,31,31,"idxdClauses.addClause(t, sos, usable);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.72,6,3
6892_35,35,37,"if (ansHandler.isComplete()) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,3,0,0,0,0.29,10,5
6892_36,36,36,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,11,5
6891_1,1,3,"	private void process(OTTERAnswerHandler ansHandler,
IndexedClauses idxdClauses, Set<Clause> clauses, Set<Clause> sos,
Set<Clause> usable) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,6,5,0,0,1,0.52,16,9
6891_5,5,29,"for (Clause clause : clauses) {
clause = getClauseSimplifier().simplify(clause);


if (clause.isTautology()) {
continue;
}

if (!ansHandler.isAnswer(clause)) {
if (!sos.contains(clause) && !usable.contains(clause)) {
for (Clause ac : clause.getFactors()) {
if (!sos.contains(ac) && !usable.contains(ac)) {
idxdClauses.addClause(ac, sos, usable);

lookForUnitRefutation(ansHandler, idxdClauses, ac,
sos, usable);
}
}
}
}

if (ansHandler.isComplete()) {
break;
}
}",0,0,0,1,0,0,0,0,0,11,5,25,0,0,1,0,6,5,0,0,4,0.73,0,0
6891_6,6,6,clause = getClauseSimplifier().simplify(clause);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,5,0,0,1,0.65,13,7
6891_9,9,11,"if (clause.isTautology()) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,5,0,0,1,0.56,8,5
6891_10,10,10,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.23,9,5
6891_13,13,24,"if (!ansHandler.isAnswer(clause)) {
if (!sos.contains(clause) && !usable.contains(clause)) {
for (Clause ac : clause.getFactors()) {
if (!sos.contains(ac) && !usable.contains(ac)) {
idxdClauses.addClause(ac, sos, usable);

lookForUnitRefutation(ansHandler, idxdClauses, ac,
sos, usable);
}
}
}
}",1,0,0,0,0,0,0,0,0,5,4,12,0,0,1,1,6,5,0,0,4,0.72,0,0
6891_14,14,23,"if (!sos.contains(clause) && !usable.contains(clause)) {
for (Clause ac : clause.getFactors()) {
if (!sos.contains(ac) && !usable.contains(ac)) {
idxdClauses.addClause(ac, sos, usable);

lookForUnitRefutation(ansHandler, idxdClauses, ac,
sos, usable);
}
}
}",1,0,0,0,0,0,0,0,0,4,3,10,0,0,0,0,6,5,0,0,4,0.73,0,0
6891_15,15,22,"for (Clause ac : clause.getFactors()) {
if (!sos.contains(ac) && !usable.contains(ac)) {
idxdClauses.addClause(ac, sos, usable);

lookForUnitRefutation(ansHandler, idxdClauses, ac,
sos, usable);
}
}",0,0,0,1,0,0,0,0,0,3,2,8,0,0,0,0,6,5,0,0,4,0.74,0,0
6891_16,16,21,"if (!sos.contains(ac) && !usable.contains(ac)) {
idxdClauses.addClause(ac, sos, usable);

lookForUnitRefutation(ansHandler, idxdClauses, ac,
sos, usable);
}",1,0,0,0,0,0,0,0,0,2,1,6,0,0,0,0,6,5,0,0,4,0.73,0,0
6891_17,17,17,"idxdClauses.addClause(ac, sos, usable);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,5,0,0,1,0.61,2,0
6891_19,19,20,"lookForUnitRefutation(ansHandler, idxdClauses, ac,
sos, usable);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,5,0,0,4,0.79,0,0
6891_26,26,28,"if (ansHandler.isComplete()) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,6,5,0,0,0,0.25,7,1
6891_27,27,27,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,5,0,0,0,0.26,8,1
6890_1,1,3,"	private void process(OTTERAnswerHandler ansHandler,
IndexedClauses idxdClauses, Set<Clause> clauses, Set<Clause> sos,
Set<Clause> usable) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,3,3,0,0,1,0.61,6,2
6890_5,5,29,"for (Clause clause : clauses) {
clause = getClauseSimplifier().simplify(clause);


if (clause.isTautology()) {
continue;
}

if (!ansHandler.isAnswer(clause)) {
if (!sos.contains(clause) && !usable.contains(clause)) {
for (Clause ac : clause.getFactors()) {
if (!sos.contains(ac) && !usable.contains(ac)) {
idxdClauses.addClause(ac, sos, usable);

lookForUnitRefutation(ansHandler, idxdClauses, ac,
sos, usable);
}
}
}
}

if (ansHandler.isComplete()) {
break;
}
}",0,0,0,1,0,0,0,0,0,11,5,25,0,0,1,0,3,3,0,0,2,0.66,0,0
6890_6,6,6,clause = getClauseSimplifier().simplify(clause);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.74,3,0
6890_9,9,11,"if (clause.isTautology()) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,2,0.66,0,0
6890_10,10,10,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.27,1,0
6890_13,13,24,"if (!ansHandler.isAnswer(clause)) {
if (!sos.contains(clause) && !usable.contains(clause)) {
for (Clause ac : clause.getFactors()) {
if (!sos.contains(ac) && !usable.contains(ac)) {
idxdClauses.addClause(ac, sos, usable);

lookForUnitRefutation(ansHandler, idxdClauses, ac,
sos, usable);
}
}
}
}",1,0,0,0,0,0,0,0,0,5,4,12,0,0,1,1,3,3,0,0,1,0.64,4,2
6890_14,14,23,"if (!sos.contains(clause) && !usable.contains(clause)) {
for (Clause ac : clause.getFactors()) {
if (!sos.contains(ac) && !usable.contains(ac)) {
idxdClauses.addClause(ac, sos, usable);

lookForUnitRefutation(ansHandler, idxdClauses, ac,
sos, usable);
}
}
}",1,0,0,0,0,0,0,0,0,4,3,10,0,0,0,0,3,3,0,0,1,0.64,5,2
6890_15,15,22,"for (Clause ac : clause.getFactors()) {
if (!sos.contains(ac) && !usable.contains(ac)) {
idxdClauses.addClause(ac, sos, usable);

lookForUnitRefutation(ansHandler, idxdClauses, ac,
sos, usable);
}
}",0,0,0,1,0,0,0,0,0,3,2,8,0,0,0,0,3,3,0,0,1,0.64,6,3
6890_16,16,21,"if (!sos.contains(ac) && !usable.contains(ac)) {
idxdClauses.addClause(ac, sos, usable);

lookForUnitRefutation(ansHandler, idxdClauses, ac,
sos, usable);
}",1,0,0,0,0,0,0,0,0,2,1,6,0,0,0,0,3,3,0,0,1,0.59,7,4
6890_17,17,17,"idxdClauses.addClause(ac, sos, usable);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.72,8,5
6890_19,19,20,"lookForUnitRefutation(ansHandler, idxdClauses, ac,
sos, usable);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,3,3,0,0,1,0.57,10,7
6890_26,26,28,"if (ansHandler.isComplete()) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,3,0,0,0,0.29,17,8
6890_27,27,27,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,18,8
6889_1,1,3,"	private void process(OTTERAnswerHandler ansHandler,
IndexedClauses idxdClauses, Set<Clause> clauses, Set<Clause> sos,
Set<Clause> usable) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,2,2,0,0,1,0.73,2,0
6889_5,5,29,"for (Clause clause : clauses) {
clause = getClauseSimplifier().simplify(clause);


if (clause.isTautology()) {
continue;
}

if (!ansHandler.isAnswer(clause)) {
if (!sos.contains(clause) && !usable.contains(clause)) {
for (Clause ac : clause.getFactors()) {
if (!sos.contains(ac) && !usable.contains(ac)) {
idxdClauses.addClause(ac, sos, usable);

lookForUnitRefutation(ansHandler, idxdClauses, ac,
sos, usable);
}
}
}
}

if (ansHandler.isComplete()) {
break;
}
}",0,0,0,1,0,0,0,0,0,11,5,25,0,0,1,0,2,2,0,0,1,0.78,0,0
6889_6,6,6,clause = getClauseSimplifier().simplify(clause);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,1,0.89,1,0
6889_9,9,11,"if (clause.isTautology()) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,1,0.82,4,2
6889_10,10,10,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.26,5,2
6889_13,13,24,"if (!ansHandler.isAnswer(clause)) {
if (!sos.contains(clause) && !usable.contains(clause)) {
for (Clause ac : clause.getFactors()) {
if (!sos.contains(ac) && !usable.contains(ac)) {
idxdClauses.addClause(ac, sos, usable);

lookForUnitRefutation(ansHandler, idxdClauses, ac,
sos, usable);
}
}
}
}",1,0,0,0,0,0,0,0,0,5,4,12,0,0,1,1,2,2,0,0,1,0.75,8,4
6889_14,14,23,"if (!sos.contains(clause) && !usable.contains(clause)) {
for (Clause ac : clause.getFactors()) {
if (!sos.contains(ac) && !usable.contains(ac)) {
idxdClauses.addClause(ac, sos, usable);

lookForUnitRefutation(ansHandler, idxdClauses, ac,
sos, usable);
}
}
}",1,0,0,0,0,0,0,0,0,4,3,10,0,0,0,0,2,2,0,0,1,0.75,9,4
6889_15,15,22,"for (Clause ac : clause.getFactors()) {
if (!sos.contains(ac) && !usable.contains(ac)) {
idxdClauses.addClause(ac, sos, usable);

lookForUnitRefutation(ansHandler, idxdClauses, ac,
sos, usable);
}
}",0,0,0,1,0,0,0,0,0,3,2,8,0,0,0,0,2,2,0,0,1,0.75,10,5
6889_16,16,21,"if (!sos.contains(ac) && !usable.contains(ac)) {
idxdClauses.addClause(ac, sos, usable);

lookForUnitRefutation(ansHandler, idxdClauses, ac,
sos, usable);
}",1,0,0,0,0,0,0,0,0,2,1,6,0,0,0,0,2,2,0,0,1,0.72,11,6
6889_17,17,17,"idxdClauses.addClause(ac, sos, usable);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,1,0.87,12,7
6889_19,19,20,"lookForUnitRefutation(ansHandler, idxdClauses, ac,
sos, usable);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,2,2,0,0,1,0.7,14,9
6889_26,26,28,"if (ansHandler.isComplete()) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,2,2,0,0,0,0.22,21,10
6889_27,27,27,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,2,0,0,0,0.26,22,10
6888_1,1,1,"	private Set<Clause> infer(Clause clause, Set<Clause> usable) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.54,17,9
6888_2,2,2,Set<Clause> resultingClauses = new LinkedHashSet<Clause>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,5,0,0,2,0.55,16,8
6888_4,4,16,"for (Clause c : usable) {
Set<Clause> resolvents = clause.binaryResolvents(c);
for (Clause rc : resolvents) {
resultingClauses.add(rc);
}

if (isUseParamodulation()) {
Set<Clause> paras = paramodulation.apply(clause, c, true);
for (Clause p : paras) {
resultingClauses.add(p);
}
}
}",0,0,0,1,0,0,0,0,0,7,3,13,0,0,1,1,5,5,0,0,3,0.69,2,0
6888_5,5,5,Set<Clause> resolvents = clause.binaryResolvents(c);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.45,13,6
6888_6,6,8,"for (Clause rc : resolvents) {
resultingClauses.add(rc);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,5,5,0,0,2,0.64,10,4
6888_7,7,7,resultingClauses.add(rc);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.66,11,4
6888_10,10,15,"if (isUseParamodulation()) {
Set<Clause> paras = paramodulation.apply(clause, c, true);
for (Clause p : paras) {
resultingClauses.add(p);
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,1,0,5,5,0,0,3,0.7,3,0
6888_11,11,11,"Set<Clause> paras = paramodulation.apply(clause, c, true);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.61,7,2
6888_12,12,14,"for (Clause p : paras) {
resultingClauses.add(p);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,0,5,5,0,0,2,0.64,4,0
6888_13,13,13,resultingClauses.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.64,5,0
6888_18,18,18,return getClauseFilter().filter(resultingClauses);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,5,0,0,4,0.87,0,0
6887_1,1,1,"	private Set<Clause> infer(Clause clause, Set<Clause> usable) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.28,9,5
6887_2,2,2,Set<Clause> resultingClauses = new LinkedHashSet<Clause>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.22,8,4
6887_4,4,16,"for (Clause c : usable) {
Set<Clause> resolvents = clause.binaryResolvents(c);
for (Clause rc : resolvents) {
resultingClauses.add(rc);
}

if (isUseParamodulation()) {
Set<Clause> paras = paramodulation.apply(clause, c, true);
for (Clause p : paras) {
resultingClauses.add(p);
}
}
}",0,0,0,1,0,0,0,0,0,7,3,13,0,0,1,1,4,3,0,0,2,0.45,0,0
6887_5,5,5,Set<Clause> resolvents = clause.binaryResolvents(c);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.34,5,2
6887_6,6,8,"for (Clause rc : resolvents) {
resultingClauses.add(rc);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,4,3,0,0,0,0.29,2,0
6887_7,7,7,resultingClauses.add(rc);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.28,3,0
6887_10,10,15,"if (isUseParamodulation()) {
Set<Clause> paras = paramodulation.apply(clause, c, true);
for (Clause p : paras) {
resultingClauses.add(p);
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,1,0,4,3,0,0,2,0.46,0,0
6887_11,11,11,"Set<Clause> paras = paramodulation.apply(clause, c, true);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.29,1,0
6887_12,12,14,"for (Clause p : paras) {
resultingClauses.add(p);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,0,0.26,2,1
6887_13,13,13,resultingClauses.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.25,3,2
6887_18,18,18,return getClauseFilter().filter(resultingClauses);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.32,8,4
6886_1,1,1,"	private Set<Clause> infer(Clause clause, Set<Clause> usable) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.6,3,1
6886_2,2,2,Set<Clause> resultingClauses = new LinkedHashSet<Clause>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,1,0.54,2,0
6886_4,4,16,"for (Clause c : usable) {
Set<Clause> resolvents = clause.binaryResolvents(c);
for (Clause rc : resolvents) {
resultingClauses.add(rc);
}

if (isUseParamodulation()) {
Set<Clause> paras = paramodulation.apply(clause, c, true);
for (Clause p : paras) {
resultingClauses.add(p);
}
}
}",0,0,0,1,0,0,0,0,0,7,3,13,0,0,1,1,4,4,0,0,3,0.7,0,0
6886_5,5,5,Set<Clause> resolvents = clause.binaryResolvents(c);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,2,0.75,1,0
6886_6,6,8,"for (Clause rc : resolvents) {
resultingClauses.add(rc);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,4,4,0,0,2,0.74,2,1
6886_7,7,7,resultingClauses.add(rc);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.57,3,2
6886_10,10,15,"if (isUseParamodulation()) {
Set<Clause> paras = paramodulation.apply(clause, c, true);
for (Clause p : paras) {
resultingClauses.add(p);
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,1,0,4,4,0,0,1,0.49,6,4
6886_11,11,11,"Set<Clause> paras = paramodulation.apply(clause, c, true);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.49,7,4
6886_12,12,14,"for (Clause p : paras) {
resultingClauses.add(p);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,0,4,4,0,0,1,0.52,8,5
6886_13,13,13,resultingClauses.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.49,9,6
6886_18,18,18,return getClauseFilter().filter(resultingClauses);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.52,14,8
6885_1,1,2,"private InferenceResult otter(OTTERAnswerHandler ansHandler,
IndexedClauses idxdClauses, Set<Clause> sos, Set<Clause> usable) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,0,0,3,0.57,7,4
6885_4,4,4,getLightestClauseHeuristic().initialSOS(sos);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,2,0.5,5,3
6885_6,6,16,"do {
Clause clause = getLightestClauseHeuristic().getLightestClause();
if (null != clause) {
sos.remove(clause);
getLightestClauseHeuristic().removedClauseFromSOS(clause);
usable.add(clause);
process(ansHandler, idxdClauses, infer(clause, usable), sos,
usable);
}

} while (sos.size() != 0 && !ansHandler.isComplete());",0,1,0,0,0,0,0,0,0,7,2,11,0,0,1,1,4,2,0,0,3,0.6,0,0
6885_7,7,7,Clause clause = getLightestClauseHeuristic().getLightestClause();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,2,0,0,1,0.66,2,1
6885_8,8,14,"if (null != clause) {
sos.remove(clause);
getLightestClauseHeuristic().removedClauseFromSOS(clause);
usable.add(clause);
process(ansHandler, idxdClauses, infer(clause, usable), sos,
usable);
}",1,0,0,0,0,0,0,0,0,4,1,7,1,1,0,1,4,2,0,0,3,0.63,0,0
6885_9,9,9,sos.remove(clause);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,2,0.66,0,0
6885_10,10,10,getLightestClauseHeuristic().removedClauseFromSOS(clause);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,2,0.66,1,0
6885_11,11,11,usable.add(clause);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,2,0.62,2,1
6885_12,12,13,"process(ansHandler, idxdClauses, infer(clause, usable), sos,
usable);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,2,0,0,3,0.6,3,2
6885_16,16,16,} while (sos.size() != 0 && !ansHandler.isComplete());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,0,0,1,0.24,7,4
6885_18,18,18,return ansHandler;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.15,9,5
6884_1,1,1,"public InferenceResult ask(FOLKnowledgeBase KB, Sentence alpha) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.29,46,31
6884_2,2,2,Set<Clause> sos = new HashSet<Clause>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.53,45,30
6884_3,3,3,Set<Clause> usable = new HashSet<Clause>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,1,0.53,44,29
6884_5,5,9,"for (Clause c : KB.getAllClauses()) {
c = KB.standardizeApart(c);
c.setStandardizedApartCheckNotRequired();
usable.addAll(c.getFactors());
}",0,0,0,1,0,0,0,0,0,3,1,5,0,0,1,1,4,4,0,0,1,0.46,38,25
6884_6,6,6,c = KB.standardizeApart(c);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.28,41,27
6884_7,7,7,c.setStandardizedApartCheckNotRequired();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.25,40,26
6884_8,8,8,usable.addAll(c.getFactors());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.28,39,25
6884_11,11,19,"if (isUseParamodulation()) {
TermEquality reflexivityAxiom = new TermEquality(new Variable(""x""),
new Variable(""x""));
Clause reflexivityClause = new Clause();
reflexivityClause.addLiteral(new Literal(reflexivityAxiom));
reflexivityClause = KB.standardizeApart(reflexivityClause);
reflexivityClause.setStandardizedApartCheckNotRequired();
usable.add(reflexivityClause);
}",1,0,0,0,0,0,0,0,0,6,1,9,0,0,1,1,4,4,0,0,1,0.52,28,18
6884_12,12,13,"TermEquality reflexivityAxiom = new TermEquality(new Variable(""x""),
new Variable(""x""));",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.3,34,23
6884_14,14,14,Clause reflexivityClause = new Clause();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.67,33,22
6884_15,15,15,reflexivityClause.addLiteral(new Literal(reflexivityAxiom));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.56,32,21
6884_16,16,16,reflexivityClause = KB.standardizeApart(reflexivityClause);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.66,31,20
6884_17,17,17,reflexivityClause.setStandardizedApartCheckNotRequired();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.48,30,19
6884_18,18,18,usable.add(reflexivityClause);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.61,29,18
6884_21,21,21,Sentence notAlpha = new NotSentence(alpha);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.33,26,17
6884_22,22,22,Literal answerLiteral = KB.createAnswerLiteral(notAlpha);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.37,25,16
6884_23,23,24,"Set<Variable> answerLiteralVariables = KB
.collectAllVariables(answerLiteral.getAtomicSentence());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,4,0,0,0,0.41,23,15
6884_25,25,25,Clause answerClause = new Clause();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,1,0.62,22,14
6884_27,27,45,"if (answerLiteralVariables.size() > 0) {
Sentence notAlphaWithAnswer = new ConnectedSentence(Connectors.OR,
notAlpha, answerLiteral.getAtomicSentence());
for (Clause c : KB.convertToClauses(notAlphaWithAnswer)) {
c = KB.standardizeApart(c);
c.setProofStep(new ProofStepGoal(c));
c.setStandardizedApartCheckNotRequired();
sos.addAll(c.getFactors());
}

answerClause.addLiteral(answerLiteral);
} else {
for (Clause c : KB.convertToClauses(notAlpha)) {
c = KB.standardizeApart(c);
c.setProofStep(new ProofStepGoal(c));
c.setStandardizedApartCheckNotRequired();
sos.addAll(c.getFactors());
}
}",1,0,0,0,0,0,0,0,0,13,2,19,0,0,1,1,4,4,0,0,1,0.47,2,0
6884_28,28,29,"Sentence notAlphaWithAnswer = new ConnectedSentence(Connectors.OR,
notAlpha, answerLiteral.getAtomicSentence());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,4,0,0,0,0.36,18,12
6884_30,30,35,"for (Clause c : KB.convertToClauses(notAlphaWithAnswer)) {
c = KB.standardizeApart(c);
c.setProofStep(new ProofStepGoal(c));
c.setStandardizedApartCheckNotRequired();
sos.addAll(c.getFactors());
}",0,0,0,1,0,0,0,0,0,4,1,6,0,1,0,1,4,4,0,0,1,0.45,12,7
6884_31,31,31,c = KB.standardizeApart(c);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.28,16,10
6884_32,32,32,c.setProofStep(new ProofStepGoal(c));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.29,15,9
6884_33,33,33,c.setStandardizedApartCheckNotRequired();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.25,14,8
6884_34,34,34,sos.addAll(c.getFactors());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.28,13,7
6884_37,37,37,answerClause.addLiteral(answerLiteral);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.55,10,6
6884_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.25,9,5
6884_39,39,44,"for (Clause c : KB.convertToClauses(notAlpha)) {
c = KB.standardizeApart(c);
c.setProofStep(new ProofStepGoal(c));
c.setStandardizedApartCheckNotRequired();
sos.addAll(c.getFactors());
}",0,0,0,1,0,0,0,0,0,4,1,6,0,0,0,0,4,4,0,0,1,0.45,3,0
6884_40,40,40,c = KB.standardizeApart(c);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.28,7,3
6884_41,41,41,c.setProofStep(new ProofStepGoal(c));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.29,6,2
6884_42,42,42,c.setStandardizedApartCheckNotRequired();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.25,5,1
6884_43,43,43,sos.addAll(c.getFactors());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.28,4,0
6884_47,47,47,usable.removeAll(SubsumptionElimination.findSubsumedClauses(usable));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,4,4,0,0,3,0.74,0,0
6884_48,48,48,sos.removeAll(SubsumptionElimination.findSubsumedClauses(sos));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,4,0,0,3,0.74,1,0
6884_50,50,51,"OTTERAnswerHandler ansHandler = new OTTERAnswerHandler(answerLiteral,
answerLiteralVariables, answerClause, maxQueryTime);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,4,4,0,0,1,0.47,3,2
6884_53,53,54,"IndexedClauses idxdClauses = new IndexedClauses(
getLightestClauseHeuristic(), sos, usable);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,4,4,0,0,1,0.57,6,3
6884_56,56,56,"return otter(ansHandler, idxdClauses, sos, usable);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.54,9,4
6883_1,1,1,"public InferenceResult ask(FOLKnowledgeBase KB, Sentence alpha) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.26,10,6
6883_2,2,2,Set<Clause> sos = new HashSet<Clause>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.26,9,5
6883_3,3,3,Set<Clause> usable = new HashSet<Clause>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,6,0,0,1,0.26,8,4
6883_5,5,9,"for (Clause c : KB.getAllClauses()) {
c = KB.standardizeApart(c);
c.setStandardizedApartCheckNotRequired();
usable.addAll(c.getFactors());
}",0,0,0,1,0,0,0,0,0,3,1,5,0,0,1,1,7,6,0,0,1,0.3,2,0
6883_6,6,6,c = KB.standardizeApart(c);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.32,5,2
6883_7,7,7,c.setStandardizedApartCheckNotRequired();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.29,4,1
6883_8,8,8,usable.addAll(c.getFactors());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,1,0.26,3,0
6883_11,11,19,"if (isUseParamodulation()) {
TermEquality reflexivityAxiom = new TermEquality(new Variable(""x""),
new Variable(""x""));
Clause reflexivityClause = new Clause();
reflexivityClause.addLiteral(new Literal(reflexivityAxiom));
reflexivityClause = KB.standardizeApart(reflexivityClause);
reflexivityClause.setStandardizedApartCheckNotRequired();
usable.add(reflexivityClause);
}",1,0,0,0,0,0,0,0,0,6,1,9,0,0,1,1,7,6,0,0,5,0.43,0,0
6883_12,12,13,"TermEquality reflexivityAxiom = new TermEquality(new Variable(""x""),
new Variable(""x""));",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,7,6,0,0,2,0.26,1,0
6883_14,14,14,Clause reflexivityClause = new Clause();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,0,0,1,0.25,3,2
6883_15,15,15,reflexivityClause.addLiteral(new Literal(reflexivityAxiom));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,2,0.32,4,2
6883_16,16,16,reflexivityClause = KB.standardizeApart(reflexivityClause);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,1,0.34,5,3
6883_17,17,17,reflexivityClause.setStandardizedApartCheckNotRequired();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,1,0.29,6,4
6883_18,18,18,usable.add(reflexivityClause);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,2,0.27,7,5
6883_21,21,21,Sentence notAlpha = new NotSentence(alpha);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,6,0,0,0,0.29,10,7
6883_22,22,22,Literal answerLiteral = KB.createAnswerLiteral(notAlpha);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.26,11,7
6883_23,23,24,"Set<Variable> answerLiteralVariables = KB
.collectAllVariables(answerLiteral.getAtomicSentence());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,7,6,0,0,0,0.28,12,8
6883_25,25,25,Clause answerClause = new Clause();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,6,0,0,0,0.23,14,10
6883_27,27,45,"if (answerLiteralVariables.size() > 0) {
Sentence notAlphaWithAnswer = new ConnectedSentence(Connectors.OR,
notAlpha, answerLiteral.getAtomicSentence());
for (Clause c : KB.convertToClauses(notAlphaWithAnswer)) {
c = KB.standardizeApart(c);
c.setProofStep(new ProofStepGoal(c));
c.setStandardizedApartCheckNotRequired();
sos.addAll(c.getFactors());
}

answerClause.addLiteral(answerLiteral);
} else {
for (Clause c : KB.convertToClauses(notAlpha)) {
c = KB.standardizeApart(c);
c.setProofStep(new ProofStepGoal(c));
c.setStandardizedApartCheckNotRequired();
sos.addAll(c.getFactors());
}
}",1,0,0,0,0,0,0,0,0,13,2,19,0,0,1,1,7,6,0,0,0,0.32,16,11
6883_28,28,29,"Sentence notAlphaWithAnswer = new ConnectedSentence(Connectors.OR,
notAlpha, answerLiteral.getAtomicSentence());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,7,6,0,0,0,0.27,17,11
6883_30,30,35,"for (Clause c : KB.convertToClauses(notAlphaWithAnswer)) {
c = KB.standardizeApart(c);
c.setProofStep(new ProofStepGoal(c));
c.setStandardizedApartCheckNotRequired();
sos.addAll(c.getFactors());
}",0,0,0,1,0,0,0,0,0,4,1,6,0,1,0,1,7,6,0,0,0,0.32,19,13
6883_31,31,31,c = KB.standardizeApart(c);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.32,20,13
6883_32,32,32,c.setProofStep(new ProofStepGoal(c));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.27,21,14
6883_33,33,33,c.setStandardizedApartCheckNotRequired();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.29,22,15
6883_34,34,34,sos.addAll(c.getFactors());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.26,23,16
6883_37,37,37,answerClause.addLiteral(answerLiteral);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,6,0,0,0,0.29,26,18
6883_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.12,27,18
6883_39,39,44,"for (Clause c : KB.convertToClauses(notAlpha)) {
c = KB.standardizeApart(c);
c.setProofStep(new ProofStepGoal(c));
c.setStandardizedApartCheckNotRequired();
sos.addAll(c.getFactors());
}",0,0,0,1,0,0,0,0,0,4,1,6,0,0,0,0,7,6,0,0,0,0.32,28,19
6883_40,40,40,c = KB.standardizeApart(c);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.32,29,20
6883_41,41,41,c.setProofStep(new ProofStepGoal(c));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.27,30,21
6883_42,42,42,c.setStandardizedApartCheckNotRequired();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.29,31,22
6883_43,43,43,sos.addAll(c.getFactors());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.26,32,23
6883_47,47,47,usable.removeAll(SubsumptionElimination.findSubsumedClauses(usable));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,7,6,0,0,1,0.25,36,25
6883_48,48,48,sos.removeAll(SubsumptionElimination.findSubsumedClauses(sos));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,7,6,0,0,0,0.25,37,25
6883_50,50,51,"OTTERAnswerHandler ansHandler = new OTTERAnswerHandler(answerLiteral,
answerLiteralVariables, answerClause, maxQueryTime);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,7,6,0,0,0,0.26,39,27
6883_53,53,54,"IndexedClauses idxdClauses = new IndexedClauses(
getLightestClauseHeuristic(), sos, usable);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,7,6,0,0,1,0.27,42,28
6883_56,56,56,"return otter(ansHandler, idxdClauses, sos, usable);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,6,0,0,1,0.24,45,29
6401_1,1,2,"    @Override
public boolean onNavigateUp() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,4,1,0,0,0.39,2,1
6401_3,3,3,onBackPressed();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,4,1,0,0,0.38,1,0
6401_5,5,5,getWindow().getDecorView(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,4,1,0,0,0.44,0,0
6401_6,6,6,.sendAccessibilityEvent(AccessibilityEvent.TYPE_WINDOW_STATE_CHANGED);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,4,1,0,1,0.51,1,0
6401_8,8,8,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,9,4,1,0,0,0.23,3,2
6379_1,1,1,    private static void configureMagnificationPreferenceIfNeeded(Preference preference) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,18,11,2,0,2,0.55,0,0
6379_2,2,2,final Context context = preference.getContext();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,18,11,2,0,1,0.5,0,0
6379_3,3,8,"if (!MagnificationPreferenceFragment.isApplicable(context.getResources())) {
preference.setFragment(ToggleScreenMagnificationPreferenceFragment.class.getName());
final Bundle extras = preference.getExtras();
MagnificationGesturesPreferenceController
.populateMagnificationGesturesPreferenceExtras(extras, context);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,0,18,11,2,0,3,0.55,1,0
6379_4,4,4,preference.setFragment(ToggleScreenMagnificationPreferenceFragment.class.getName());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,18,11,2,0,3,0.57,2,1
6379_5,5,5,final Bundle extras = preference.getExtras();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,18,11,2,0,1,0.45,3,2
6379_6,6,7,"MagnificationGesturesPreferenceController
.populateMagnificationGesturesPreferenceExtras(extras, context);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,18,11,2,0,2,0.48,4,3
6378_1,1,1,protected void updateSystemPreferences() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,3,0,1,0.47,0,0
6378_2,2,20,"if (ColorDisplayManager.isColorTransformAccelerated(getContext())) {
PreferenceCategory experimentalCategory =
mCategoryToPrefCategoryMap.get(CATEGORY_EXPERIMENTAL);
PreferenceCategory displayCategory =
mCategoryToPrefCategoryMap.get(CATEGORY_DISPLAY);
experimentalCategory.removePreference(mToggleInversionPreference);
experimentalCategory.removePreference(mDisplayDaltonizerPreferenceScreen);
mDisplayDaltonizerPreferenceScreen.setOrder(
mDisplayMagnificationPreferenceScreen.getOrder() + 1);
mToggleInversionPreference.setOrder(
mDisplayDaltonizerPreferenceScreen.getOrder() + 1);
mToggleLargePointerIconPreference.setOrder(
mToggleInversionPreference.getOrder() + 1);
mToggleDisableAnimationsPreference.setOrder(
mToggleLargePointerIconPreference.getOrder() + 1);
mToggleInversionPreference.setSummary(R.string.summary_empty);
displayCategory.addPreference(mToggleInversionPreference);
displayCategory.addPreference(mDisplayDaltonizerPreferenceScreen);
}",1,0,0,0,0,0,0,0,0,11,1,19,0,0,0,1,15,9,3,0,7,0.79,0,0
6378_3,3,4,"PreferenceCategory experimentalCategory =
mCategoryToPrefCategoryMap.get(CATEGORY_EXPERIMENTAL);",0,0,0,0,0,1,0,0,0,0,0,2,1,0,0,0,15,9,3,0,2,0.65,1,0
6378_5,5,6,"PreferenceCategory displayCategory =
mCategoryToPrefCategoryMap.get(CATEGORY_DISPLAY);",0,0,0,0,0,1,0,0,0,0,0,2,1,0,0,0,15,9,3,0,3,0.68,3,2
6378_7,7,7,experimentalCategory.removePreference(mToggleInversionPreference);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,15,9,3,0,3,0.68,5,3
6378_8,8,8,experimentalCategory.removePreference(mDisplayDaltonizerPreferenceScreen);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,15,9,3,0,3,0.62,6,3
6378_9,9,10,"mDisplayDaltonizerPreferenceScreen.setOrder(
mDisplayMagnificationPreferenceScreen.getOrder() + 1);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,15,9,3,0,2,0.58,7,4
6378_11,11,12,"mToggleInversionPreference.setOrder(
mDisplayDaltonizerPreferenceScreen.getOrder() + 1);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,15,9,3,0,3,0.64,9,6
6378_13,13,14,"mToggleLargePointerIconPreference.setOrder(
mToggleInversionPreference.getOrder() + 1);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,15,9,3,0,2,0.61,11,7
6378_15,15,16,"mToggleDisableAnimationsPreference.setOrder(
mToggleLargePointerIconPreference.getOrder() + 1);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,15,9,3,0,1,0.56,13,8
6378_17,17,17,mToggleInversionPreference.setSummary(R.string.summary_empty);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,3,0,2,0.59,15,9
6378_18,18,18,displayCategory.addPreference(mToggleInversionPreference);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,15,9,3,0,4,0.72,16,9
6378_19,19,19,displayCategory.addPreference(mDisplayDaltonizerPreferenceScreen);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,15,9,3,0,3,0.65,17,10
6378_22,22,24,"mToggleHighTextContrastPreference.setChecked(
Settings.Secure.getInt(getContentResolver(),
Settings.Secure.ACCESSIBILITY_HIGH_TEXT_CONTRAST_ENABLED, 0) == 1);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,1,15,9,3,0,1,0.49,20,12
6378_26,26,26,mInversionPreferenceController.updateState(mToggleInversionPreference);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,15,9,3,0,2,0.63,24,13
6378_28,28,28,mDarkUIPreferenceController.updateState(mDarkUIModePreference);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,15,9,3,0,1,0.51,26,14
6378_30,30,38,"if (KeyCharacterMap.deviceHasKey(KeyEvent.KEYCODE_POWER)
&& Utils.isVoiceCapable(getActivity())) {
final int incallPowerBehavior = Settings.Secure.getInt(getContentResolver(),
Settings.Secure.INCALL_POWER_BUTTON_BEHAVIOR,
Settings.Secure.INCALL_POWER_BUTTON_BEHAVIOR_DEFAULT);
final boolean powerButtonEndsCall =
(incallPowerBehavior == Settings.Secure.INCALL_POWER_BUTTON_BEHAVIOR_HANGUP);
mTogglePowerButtonEndsCallPreference.setChecked(powerButtonEndsCall);
}",1,0,0,0,0,0,0,0,0,4,1,9,0,0,1,1,15,9,3,0,2,0.5,28,15
6378_31,31,31,&& Utils.isVoiceCapable(getActivity())) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,3,0,0,0.43,29,15
6378_32,32,34,"final int incallPowerBehavior = Settings.Secure.getInt(getContentResolver(),
Settings.Secure.INCALL_POWER_BUTTON_BEHAVIOR,
Settings.Secure.INCALL_POWER_BUTTON_BEHAVIOR_DEFAULT);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,15,9,3,0,0,0.45,30,16
6378_35,35,36,"final boolean powerButtonEndsCall =
(incallPowerBehavior == Settings.Secure.INCALL_POWER_BUTTON_BEHAVIOR_HANGUP);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,15,9,3,0,0,0.44,33,18
6378_37,37,37,mTogglePowerButtonEndsCallPreference.setChecked(powerButtonEndsCall);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,15,9,3,0,1,0.49,35,19
6378_40,40,40,updateLockScreenRotationCheckbox();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,15,9,3,0,0,0.47,38,20
6378_42,42,43,"mToggleLargePointerIconPreference.setChecked(Settings.Secure.getInt(getContentResolver(),
Settings.Secure.ACCESSIBILITY_LARGE_POINTER_ICON, 0) != 0);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,15,9,3,0,1,0.52,40,21
6378_45,45,45,updateDisableAnimationsToggle();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,15,9,3,0,0,0.45,43,22
6378_47,47,47,updateMasterMono();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,15,9,3,0,0,0.37,45,23
6378_49,49,50,"final int longPressTimeout = Settings.Secure.getInt(getContentResolver(),
Settings.Secure.LONG_PRESS_TIMEOUT, mLongPressTimeoutDefault);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,15,9,3,0,0,0.4,47,24
6378_51,51,51,String value = String.valueOf(longPressTimeout);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,15,9,3,0,0,0.33,49,25
6378_52,52,52,mSelectLongPressTimeoutPreference.setValue(value);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,15,9,3,0,1,0.44,50,25
6378_53,53,53,mSelectLongPressTimeoutPreference.setSummary(mLongPressTimeoutValueToTitleMap.get(value));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,15,9,3,0,1,0.47,51,26
6378_55,55,55,updateVibrationSummary(mVibrationPreferenceScreen);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,15,9,3,0,1,0.51,53,28
6378_57,57,57,mHearingAidPreferenceController.updateState(mHearingAidPreference);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,15,9,3,0,1,0.56,55,29
6378_59,59,59,mRTTSettingPreferenceController.updateState(mRTTPreference);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,15,9,3,0,1,0.52,57,30
6378_61,61,61,mLiveCaptionPreferenceController.updateState(mLiveCaptionPreference);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,15,9,3,0,1,0.59,59,31
6378_63,63,64,"updateFeatureSummary(Settings.Secure.ACCESSIBILITY_CAPTIONING_ENABLED,
mCaptioningPreferenceScreen);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,1,0,15,9,3,0,1,0.57,61,32
6378_65,65,66,"updateFeatureSummary(Settings.Secure.ACCESSIBILITY_DISPLAY_DALTONIZER_ENABLED,
mDisplayDaltonizerPreferenceScreen);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,1,15,9,3,0,2,0.58,63,33
6378_68,68,68,updateMagnificationSummary(mDisplayMagnificationPreferenceScreen);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,15,9,3,0,2,0.61,66,34
6378_70,70,70,updateFontSizeSummary(mFontSizePreferenceScreen);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,15,9,3,0,1,0.51,68,35
6378_72,72,72,updateAutoclickSummary(mAutoclickPreferenceScreen);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,15,9,3,0,1,0.53,70,36
6378_74,74,74,updateAccessibilityShortcut(mAccessibilityShortcutPreferenceScreen);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,15,9,3,0,1,0.5,72,37
6378_76,76,77,"updateAccessibilityTimeoutSummary(getContentResolver(),
findPreference(ACCESSIBILITY_CONTROL_TIMEOUT_PREFERENCE));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,15,9,3,0,1,0.5,74,38
6374_1,1,2,"@Override
public void onResume() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.3,9,5
6374_3,3,3,super.onResume();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.37,8,4
6374_5,5,5,final PreferenceScreen screen = getPreferenceScreen();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.51,6,3
6374_6,6,6,screen.removeAll();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.45,5,2
6374_8,8,9,"final ArrayList<Pair<ApplicationInfo, Integer>> pipApps =
collectPipApps(UserHandle.myUserId());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,3,2,0,0,1,0.51,2,1
6374_10,10,10,"Collections.sort(pipApps, new AppComparator(mPackageManager));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.41,1,0
6374_12,12,12,final Context prefContext = getPrefContext();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.53,0,0
6374_13,13,35,"for (final Pair<ApplicationInfo, Integer> appData : pipApps) {
final ApplicationInfo appInfo = appData.first;
final int userId = appData.second;
final UserHandle user = UserHandle.of(userId);
final String packageName = appInfo.packageName;
final CharSequence label = appInfo.loadLabel(mPackageManager);

final Preference pref = new AppPreference(prefContext);
pref.setIcon(mIconDrawableFactory.getBadgedIcon(appInfo, userId));
pref.setTitle(mPackageManager.getUserBadgedLabel(label, user));
pref.setSummary(PictureInPictureDetails.getPreferenceSummary(prefContext,
appInfo.uid, packageName));
pref.setOnPreferenceClickListener(new OnPreferenceClickListener() {
@Override
public boolean onPreferenceClick(Preference preference) {
AppInfoBase.startAppInfoFragment(PictureInPictureDetails.class,
R.string.picture_in_picture_app_detail_title, packageName, appInfo.uid,
PictureInPictureSettings.this, -1, getMetricsCategory());
return true;
}
});
screen.addPreference(pref);
}",0,0,0,1,0,0,0,0,0,14,3,23,0,1,0,0,3,2,0,0,1,0.53,1,0
6374_14,14,14,final ApplicationInfo appInfo = appData.first;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.37,2,1
6374_15,15,15,final int userId = appData.second;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.34,3,2
6374_16,16,16,final UserHandle user = UserHandle.of(userId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.28,4,3
6374_17,17,17,final String packageName = appInfo.packageName;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.34,5,4
6374_18,18,18,final CharSequence label = appInfo.loadLabel(mPackageManager);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.4,6,5
6374_20,20,20,final Preference pref = new AppPreference(prefContext);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.59,8,7
6374_21,21,21,"pref.setIcon(mIconDrawableFactory.getBadgedIcon(appInfo, userId));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.53,9,7
6374_22,22,22,"pref.setTitle(mPackageManager.getUserBadgedLabel(label, user));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.51,10,8
6374_23,23,24,"pref.setSummary(PictureInPictureDetails.getPreferenceSummary(prefContext,
appInfo.uid, packageName));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,3,2,0,0,1,0.54,11,9
6374_25,25,25,pref.setOnPreferenceClickListener(new OnPreferenceClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.53,13,11
6374_26,26,27,"@Override
public boolean onPreferenceClick(Preference preference) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.5,14,11
6374_28,28,30,"AppInfoBase.startAppInfoFragment(PictureInPictureDetails.class,
R.string.picture_in_picture_app_detail_title, packageName, appInfo.uid,
PictureInPictureSettings.this, -1, getMetricsCategory());",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,3,2,0,0,0,0.41,16,13
6374_31,31,31,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,19,14
6374_34,34,34,screen.addPreference(pref);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.61,22,15
6373_1,1,2,"@Override
public void onResume() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,11,6,1,0,0,0.37,5,3
6373_3,3,3,super.onResume();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,11,6,1,0,0,0.37,4,2
6373_5,5,5,final PreferenceScreen screen = getPreferenceScreen();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,11,6,1,0,0,0.37,2,1
6373_6,6,6,screen.removeAll();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,11,6,1,0,0,0.36,1,0
6373_8,8,9,"final ArrayList<Pair<ApplicationInfo, Integer>> pipApps =
collectPipApps(UserHandle.myUserId());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,11,6,1,0,1,0.51,0,0
6373_10,10,10,"Collections.sort(pipApps, new AppComparator(mPackageManager));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,11,6,1,0,0,0.46,2,1
6373_12,12,12,final Context prefContext = getPrefContext();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,11,6,1,0,0,0.43,4,2
6373_13,13,35,"for (final Pair<ApplicationInfo, Integer> appData : pipApps) {
final ApplicationInfo appInfo = appData.first;
final int userId = appData.second;
final UserHandle user = UserHandle.of(userId);
final String packageName = appInfo.packageName;
final CharSequence label = appInfo.loadLabel(mPackageManager);

final Preference pref = new AppPreference(prefContext);
pref.setIcon(mIconDrawableFactory.getBadgedIcon(appInfo, userId));
pref.setTitle(mPackageManager.getUserBadgedLabel(label, user));
pref.setSummary(PictureInPictureDetails.getPreferenceSummary(prefContext,
appInfo.uid, packageName));
pref.setOnPreferenceClickListener(new OnPreferenceClickListener() {
@Override
public boolean onPreferenceClick(Preference preference) {
AppInfoBase.startAppInfoFragment(PictureInPictureDetails.class,
R.string.picture_in_picture_app_detail_title, packageName, appInfo.uid,
PictureInPictureSettings.this, -1, getMetricsCategory());
return true;
}
});
screen.addPreference(pref);
}",0,0,0,1,0,0,0,0,0,14,3,23,0,1,0,0,11,6,1,0,3,0.59,5,2
6373_14,14,14,final ApplicationInfo appInfo = appData.first;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,6,1,0,1,0.48,6,3
6373_15,15,15,final int userId = appData.second;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,6,1,0,0,0.41,7,4
6373_16,16,16,final UserHandle user = UserHandle.of(userId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,6,1,0,0,0.39,8,5
6373_17,17,17,final String packageName = appInfo.packageName;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,6,1,0,0,0.4,9,6
6373_18,18,18,final CharSequence label = appInfo.loadLabel(mPackageManager);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,11,6,1,0,0,0.4,10,7
6373_20,20,20,final Preference pref = new AppPreference(prefContext);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,11,6,1,0,0,0.45,12,9
6373_21,21,21,"pref.setIcon(mIconDrawableFactory.getBadgedIcon(appInfo, userId));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,6,1,0,1,0.53,13,9
6373_22,22,22,"pref.setTitle(mPackageManager.getUserBadgedLabel(label, user));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,6,1,0,1,0.51,14,10
6373_23,23,24,"pref.setSummary(PictureInPictureDetails.getPreferenceSummary(prefContext,
appInfo.uid, packageName));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,11,6,1,0,2,0.59,15,11
6373_25,25,25,pref.setOnPreferenceClickListener(new OnPreferenceClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,6,1,0,1,0.49,17,13
6373_26,26,27,"@Override
public boolean onPreferenceClick(Preference preference) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,11,6,1,0,0,0.37,18,13
6373_28,28,30,"AppInfoBase.startAppInfoFragment(PictureInPictureDetails.class,
R.string.picture_in_picture_app_detail_title, packageName, appInfo.uid,
PictureInPictureSettings.this, -1, getMetricsCategory());",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,11,6,1,0,2,0.58,20,15
6373_31,31,31,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,1,0,0,0.3,23,16
6373_34,34,34,screen.addPreference(pref);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,0,0.43,26,17
6372_1,1,2,"@Override
public void onResume() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,0,0.28,2,1
6372_3,3,3,super.onResume();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,0,0,0,0.33,1,0
6372_5,5,5,final PreferenceScreen screen = getPreferenceScreen();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,1,0,0,0,0.54,0,0
6372_6,6,6,screen.removeAll();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,1,0,0,0,0.4,1,0
6372_8,8,9,"final ArrayList<Pair<ApplicationInfo, Integer>> pipApps =
collectPipApps(UserHandle.myUserId());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,2,1,0,0,0,0.4,3,2
6372_10,10,10,"Collections.sort(pipApps, new AppComparator(mPackageManager));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,1,0,0,0,0.39,5,3
6372_12,12,12,final Context prefContext = getPrefContext();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,1,0,0,1,0.53,7,4
6372_13,13,35,"for (final Pair<ApplicationInfo, Integer> appData : pipApps) {
final ApplicationInfo appInfo = appData.first;
final int userId = appData.second;
final UserHandle user = UserHandle.of(userId);
final String packageName = appInfo.packageName;
final CharSequence label = appInfo.loadLabel(mPackageManager);

final Preference pref = new AppPreference(prefContext);
pref.setIcon(mIconDrawableFactory.getBadgedIcon(appInfo, userId));
pref.setTitle(mPackageManager.getUserBadgedLabel(label, user));
pref.setSummary(PictureInPictureDetails.getPreferenceSummary(prefContext,
appInfo.uid, packageName));
pref.setOnPreferenceClickListener(new OnPreferenceClickListener() {
@Override
public boolean onPreferenceClick(Preference preference) {
AppInfoBase.startAppInfoFragment(PictureInPictureDetails.class,
R.string.picture_in_picture_app_detail_title, packageName, appInfo.uid,
PictureInPictureSettings.this, -1, getMetricsCategory());
return true;
}
});
screen.addPreference(pref);
}",0,0,0,1,0,0,0,0,0,14,3,23,0,1,0,0,2,1,0,0,1,0.58,8,4
6372_14,14,14,final ApplicationInfo appInfo = appData.first;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.37,9,5
6372_15,15,15,final int userId = appData.second;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.33,10,6
6372_16,16,16,final UserHandle user = UserHandle.of(userId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.27,11,7
6372_17,17,17,final String packageName = appInfo.packageName;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.32,12,8
6372_18,18,18,final CharSequence label = appInfo.loadLabel(mPackageManager);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,2,1,0,0,0,0.31,13,9
6372_20,20,20,final Preference pref = new AppPreference(prefContext);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,1,0,0,1,0.62,15,11
6372_21,21,21,"pref.setIcon(mIconDrawableFactory.getBadgedIcon(appInfo, userId));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,1,0.54,16,11
6372_22,22,22,"pref.setTitle(mPackageManager.getUserBadgedLabel(label, user));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,1,0.48,17,12
6372_23,23,24,"pref.setSummary(PictureInPictureDetails.getPreferenceSummary(prefContext,
appInfo.uid, packageName));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,2,1,0,0,1,0.63,18,13
6372_25,25,25,pref.setOnPreferenceClickListener(new OnPreferenceClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,1,0.59,20,15
6372_26,26,27,"@Override
public boolean onPreferenceClick(Preference preference) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,0,0.53,21,15
6372_28,28,30,"AppInfoBase.startAppInfoFragment(PictureInPictureDetails.class,
R.string.picture_in_picture_app_detail_title, packageName, appInfo.uid,
PictureInPictureSettings.this, -1, getMetricsCategory());",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,2,1,0,0,0,0.46,23,17
6372_31,31,31,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.2,26,18
6372_34,34,34,screen.addPreference(pref);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.64,29,19
6371_1,1,2,"public static boolean checkPackageHasPictureInPictureActivities(String packageName,
ActivityInfo[] activities) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,7,0,0,3,0.67,4,2
6371_3,3,5,"if (IGNORE_PACKAGE_LIST.contains(packageName)) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,7,7,0,0,0,0.27,1,0
6371_4,4,4,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.2,2,0
6371_7,7,13,"if (activities != null) {
for (int i = activities.length - 1; i >= 0; i--) {
if (activities[i].supportsPictureInPicture()) {
return true;
}
}
}",1,0,0,0,0,0,0,0,0,3,3,7,0,0,1,0,7,7,0,0,3,0.66,0,0
6371_8,8,12,"for (int i = activities.length - 1; i >= 0; i--) {
if (activities[i].supportsPictureInPicture()) {
return true;
}
}",0,0,1,0,0,0,0,0,0,2,2,5,0,0,0,0,7,7,0,0,3,0.66,1,0
6371_9,9,11,"if (activities[i].supportsPictureInPicture()) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,7,0,0,3,0.72,2,1
6371_10,10,10,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.23,3,2
6371_14,14,14,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.2,7,4
6370_1,1,2,"public static boolean checkPackageHasPictureInPictureActivities(String packageName,
ActivityInfo[] activities) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.26,0,0
6370_3,3,5,"if (IGNORE_PACKAGE_LIST.contains(packageName)) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,2,0,0,2,0.61,0,0
6370_4,4,4,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.25,1,0
6370_7,7,13,"if (activities != null) {
for (int i = activities.length - 1; i >= 0; i--) {
if (activities[i].supportsPictureInPicture()) {
return true;
}
}
}",1,0,0,0,0,0,0,0,0,3,3,7,0,0,1,0,3,2,0,0,0,0.27,4,2
6370_8,8,12,"for (int i = activities.length - 1; i >= 0; i--) {
if (activities[i].supportsPictureInPicture()) {
return true;
}
}",0,0,1,0,0,0,0,0,0,2,2,5,0,0,0,0,3,2,0,0,0,0.27,5,2
6370_9,9,11,"if (activities[i].supportsPictureInPicture()) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,0,0.28,6,3
6370_10,10,10,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,7,4
6370_14,14,14,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.25,11,6
6369_1,1,2,"    @Override
public void onCreate(Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,5,1,0,0,0.38,27,20
6369_3,3,3,super.onCreate(savedInstanceState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,10,5,1,0,0,0.36,26,19
6369_5,5,8,"if (savedInstanceState != null) {
mAddAccountCalled = savedInstanceState.getBoolean(KEY_ADD_CALLED);
if (Log.isLoggable(TAG, Log.VERBOSE)) Log.v(TAG, ""restored"");
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,10,5,1,0,0,0.4,21,16
6369_6,6,6,mAddAccountCalled = savedInstanceState.getBoolean(KEY_ADD_CALLED);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.37,23,17
6369_7,7,7,"if (Log.isLoggable(TAG, Log.VERBOSE)) Log.v(TAG, ""restored"");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.36,22,16
6369_10,10,10,final UserManager um = (UserManager) getSystemService(Context.USER_SERVICE);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,10,5,1,0,1,0.53,19,15
6369_11,11,12,"mUserHandle = Utils.getSecureTargetUser(getActivityToken(), um, null ,
getIntent().getExtras());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,10,5,1,0,1,0.5,17,14
6369_13,13,18,"if (um.hasUserRestriction(UserManager.DISALLOW_MODIFY_ACCOUNTS, mUserHandle)) {
Toast.makeText(this, R.string.user_cannot_add_accounts_message, Toast.LENGTH_LONG)
.show();
finish();
return;
}",1,0,0,0,0,0,0,0,0,4,1,6,1,1,0,0,10,5,1,0,1,0.52,11,9
6369_14,14,14,"Toast.makeText(this, R.string.user_cannot_add_accounts_message, Toast.LENGTH_LONG)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,1,0.47,15,12
6369_15,15,15,.show();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.23,14,11
6369_16,16,16,finish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.32,13,10
6369_17,17,17,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.18,12,9
6369_19,19,22,"if (mAddAccountCalled) {
finish();
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,0,0,0,10,5,1,0,0,0.35,7,6
6369_20,20,20,finish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.32,9,7
6369_21,21,21,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.18,8,6
6369_23,23,26,"if (Utils.startQuietModeDialogIfNecessary(this, um, mUserHandle.getIdentifier())) {
finish();
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,10,5,1,0,2,0.55,3,3
6369_24,24,24,finish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.32,5,4
6369_25,25,25,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.18,4,3
6369_27,27,37,"if (um.isUserUnlocked(mUserHandle)) {
requestChooseAccount();
} else {
ChooseLockSettingsHelper helper = new ChooseLockSettingsHelper(this);
if (!helper.launchConfirmationActivity(UNLOCK_WORK_PROFILE_REQUEST,
getString(R.string.unlock_set_unlock_launch_picker_title),
false,
mUserHandle.getIdentifier())) {
requestChooseAccount();
}
}",1,0,0,0,0,0,0,0,0,6,2,11,1,1,0,0,10,5,1,0,3,0.61,0,0
6369_28,28,28,requestChooseAccount();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.4,1,1
6369_29,29,29,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.21,0,0
6369_30,30,30,ChooseLockSettingsHelper helper = new ChooseLockSettingsHelper(this);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,5,1,0,1,0.45,0,0
6369_31,31,36,"if (!helper.launchConfirmationActivity(UNLOCK_WORK_PROFILE_REQUEST,
getString(R.string.unlock_set_unlock_launch_picker_title),
false,
mUserHandle.getIdentifier())) {
requestChooseAccount();
}",1,0,0,0,0,0,0,0,0,2,1,6,0,1,0,0,10,5,1,0,2,0.57,1,0
6369_32,32,34,"getString(R.string.unlock_set_unlock_launch_picker_title),
false,
mUserHandle.getIdentifier())) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,10,5,1,0,2,0.57,2,1
6369_35,35,35,requestChooseAccount();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.4,5,3
6368_1,1,2,"    @Override
public void onCreate(Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.25,11,7
6368_3,3,3,super.onCreate(savedInstanceState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.23,10,6
6368_5,5,8,"if (savedInstanceState != null) {
mAddAccountCalled = savedInstanceState.getBoolean(KEY_ADD_CALLED);
if (Log.isLoggable(TAG, Log.VERBOSE)) Log.v(TAG, ""restored"");
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,2,0,0,2,0.57,5,3
6368_6,6,6,mAddAccountCalled = savedInstanceState.getBoolean(KEY_ADD_CALLED);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.59,7,4
6368_7,7,7,"if (Log.isLoggable(TAG, Log.VERBOSE)) Log.v(TAG, ""restored"");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,6,3
6368_10,10,10,final UserManager um = (UserManager) getSystemService(Context.USER_SERVICE);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.41,3,2
6368_11,11,12,"mUserHandle = Utils.getSecureTargetUser(getActivityToken(), um, null ,
getIntent().getExtras());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,3,2,0,0,0,0.42,1,1
6368_13,13,18,"if (um.hasUserRestriction(UserManager.DISALLOW_MODIFY_ACCOUNTS, mUserHandle)) {
Toast.makeText(this, R.string.user_cannot_add_accounts_message, Toast.LENGTH_LONG)
.show();
finish();
return;
}",1,0,0,0,0,0,0,0,0,4,1,6,1,1,0,0,3,2,0,0,2,0.64,0,0
6368_14,14,14,"Toast.makeText(this, R.string.user_cannot_add_accounts_message, Toast.LENGTH_LONG)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.62,0,0
6368_15,15,15,.show();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.27,1,0
6368_16,16,16,finish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.23,2,1
6368_17,17,17,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.2,3,2
6368_19,19,22,"if (mAddAccountCalled) {
finish();
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,0,0,0,3,2,0,0,2,0.67,5,4
6368_20,20,20,finish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.23,6,4
6368_21,21,21,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.2,7,5
6368_23,23,26,"if (Utils.startQuietModeDialogIfNecessary(this, um, mUserHandle.getIdentifier())) {
finish();
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,3,2,0,0,0,0.41,9,7
6368_24,24,24,finish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.23,10,7
6368_25,25,25,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.2,11,8
6368_27,27,37,"if (um.isUserUnlocked(mUserHandle)) {
requestChooseAccount();
} else {
ChooseLockSettingsHelper helper = new ChooseLockSettingsHelper(this);
if (!helper.launchConfirmationActivity(UNLOCK_WORK_PROFILE_REQUEST,
getString(R.string.unlock_set_unlock_launch_picker_title),
false,
mUserHandle.getIdentifier())) {
requestChooseAccount();
}
}",1,0,0,0,0,0,0,0,0,6,2,11,1,1,0,0,3,2,0,0,1,0.49,13,10
6368_28,28,28,requestChooseAccount();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.58,14,10
6368_29,29,29,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.16,15,11
6368_30,30,30,ChooseLockSettingsHelper helper = new ChooseLockSettingsHelper(this);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.35,16,12
6368_31,31,36,"if (!helper.launchConfirmationActivity(UNLOCK_WORK_PROFILE_REQUEST,
getString(R.string.unlock_set_unlock_launch_picker_title),
false,
mUserHandle.getIdentifier())) {
requestChooseAccount();
}",1,0,0,0,0,0,0,0,0,2,1,6,0,1,0,0,3,2,0,0,1,0.47,17,13
6368_32,32,34,"getString(R.string.unlock_set_unlock_launch_picker_title),
false,
mUserHandle.getIdentifier())) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,3,2,0,0,0,0.36,18,14
6368_35,35,35,requestChooseAccount();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.58,21,16
6363_1,1,1,private void updateAccountSwitches() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,0,0.43,15,11
6363_2,2,2,mInvisibleAdapters.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,7,1,0,2,0.66,14,10
6363_4,4,5,"SyncAdapterType[] syncAdapters = ContentResolver.getSyncAdapterTypesAsUser(
mUserHandle.getIdentifier());",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,0,9,7,1,0,2,0.62,11,9
6363_6,6,6,ArrayList<SyncAdapterType> authorities = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,7,1,0,2,0.63,10,8
6363_7,7,19,"for (int i = 0, n = syncAdapters.length; i < n; i++) {
final SyncAdapterType sa = syncAdapters[i];
if (!sa.accountType.equals(mAccount.type)) continue;
if (sa.isUserVisible()) {
if (Log.isLoggable(TAG, Log.DEBUG)) {
Log.d(TAG, ""updateAccountSwitches: added authority "" + sa.authority
+ "" to accountType "" + sa.accountType);
}
authorities.add(sa);
} else {
mInvisibleAdapters.add(sa);
}
}",0,0,1,0,0,0,0,0,0,8,3,13,0,1,0,1,9,7,1,0,3,0.63,0,0
6363_8,8,8,final SyncAdapterType sa = syncAdapters[i];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,7,1,0,2,0.7,8,6
6363_9,9,9,if (!sa.accountType.equals(mAccount.type)) continue;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,7,1,0,0,0.36,7,5
6363_10,10,18,"if (sa.isUserVisible()) {
if (Log.isLoggable(TAG, Log.DEBUG)) {
Log.d(TAG, ""updateAccountSwitches: added authority "" + sa.authority
+ "" to accountType "" + sa.accountType);
}
authorities.add(sa);
} else {
mInvisibleAdapters.add(sa);
}",1,0,0,0,0,0,0,0,0,5,2,9,0,1,0,0,9,7,1,0,2,0.57,0,0
6363_11,11,14,"if (Log.isLoggable(TAG, Log.DEBUG)) {
Log.d(TAG, ""updateAccountSwitches: added authority "" + sa.authority
+ "" to accountType "" + sa.accountType);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,9,7,1,0,0,0.47,2,2
6363_12,12,13,"Log.d(TAG, ""updateAccountSwitches: added authority "" + sa.authority
+ "" to accountType "" + sa.accountType);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,7,1,0,0,0.47,3,2
6363_15,15,15,authorities.add(sa);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,7,1,0,0,0.5,1,1
6363_16,16,16,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,0,0.33,0,0
6363_17,17,17,mInvisibleAdapters.add(sa);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,2,0.66,0,0
6363_21,21,23,"if (Log.isLoggable(TAG, Log.DEBUG)) {
Log.d(TAG, ""looking for sync adapters that match account "" + mAccount);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,9,7,1,0,2,0.57,4,1
6363_22,22,22,"Log.d(TAG, ""looking for sync adapters that match account "" + mAccount);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,2,0.6,5,1
6363_25,25,25,cacheRemoveAllPrefs(getPreferenceScreen());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,7,1,0,0,0.4,8,3
6363_26,26,26,getCachedPreference(EntityHeaderController.PREF_KEY_APP_HEADER);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,0,0.36,9,3
6363_27,27,45,"for (int j = 0, m = authorities.size(); j < m; j++) {
final SyncAdapterType syncAdapter = authorities.get(j);
int syncState = ContentResolver.getIsSyncableAsUser(mAccount, syncAdapter.authority,
mUserHandle.getIdentifier());
if (Log.isLoggable(TAG, Log.DEBUG)) {
Log.d(TAG, ""  found authority "" + syncAdapter.authority + "" "" + syncState);
}
if (syncState > 0) {
final int uid;
try {
uid = getContext().getPackageManager().getPackageUidAsUser(
syncAdapter.getPackageName(), mUserHandle.getIdentifier());
addSyncStateSwitch(mAccount, syncAdapter.authority,
syncAdapter.getPackageName(), uid);
} catch (PackageManager.NameNotFoundException e) {
Log.e(TAG, ""No uid for package"" + syncAdapter.getPackageName(), e);
}
}
}",0,0,1,0,0,0,0,0,0,11,3,19,0,0,0,0,9,7,1,0,2,0.62,10,4
6363_28,28,28,final SyncAdapterType syncAdapter = authorities.get(j);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,7,1,0,2,0.69,11,5
6363_29,29,30,"int syncState = ContentResolver.getIsSyncableAsUser(mAccount, syncAdapter.authority,
mUserHandle.getIdentifier());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,9,7,1,0,2,0.59,12,6
6363_31,31,33,"if (Log.isLoggable(TAG, Log.DEBUG)) {
Log.d(TAG, ""  found authority "" + syncAdapter.authority + "" "" + syncState);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,9,7,1,0,2,0.61,14,8
6363_32,32,32,"Log.d(TAG, ""  found authority "" + syncAdapter.authority + "" "" + syncState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,2,0.66,15,8
6363_34,34,44,"if (syncState > 0) {
final int uid;
try {
uid = getContext().getPackageManager().getPackageUidAsUser(
syncAdapter.getPackageName(), mUserHandle.getIdentifier());
addSyncStateSwitch(mAccount, syncAdapter.authority,
syncAdapter.getPackageName(), uid);
} catch (PackageManager.NameNotFoundException e) {
Log.e(TAG, ""No uid for package"" + syncAdapter.getPackageName(), e);
}
}",1,0,0,0,0,0,0,0,0,6,2,11,0,1,0,0,9,7,1,0,2,0.6,17,10
6363_35,35,35,final int uid;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,7,1,0,0,0.33,18,10
6363_36,36,43,"try {
uid = getContext().getPackageManager().getPackageUidAsUser(
syncAdapter.getPackageName(), mUserHandle.getIdentifier());
addSyncStateSwitch(mAccount, syncAdapter.authority,
syncAdapter.getPackageName(), uid);
} catch (PackageManager.NameNotFoundException e) {
Log.e(TAG, ""No uid for package"" + syncAdapter.getPackageName(), e);
}",0,0,0,0,1,0,0,0,0,4,1,8,0,1,0,0,9,7,1,0,2,0.6,19,11
6363_37,37,38,"uid = getContext().getPackageManager().getPackageUidAsUser(
syncAdapter.getPackageName(), mUserHandle.getIdentifier());",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,9,7,1,0,2,0.57,20,12
6363_39,39,40,"addSyncStateSwitch(mAccount, syncAdapter.authority,
syncAdapter.getPackageName(), uid);",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,9,7,1,0,2,0.67,22,14
6363_41,41,41,} catch (PackageManager.NameNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,0,0.39,24,15
6363_42,42,42,"Log.e(TAG, ""No uid for package"" + syncAdapter.getPackageName(), e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,2,0.58,25,15
6363_46,46,46,removeCachedPrefs(getPreferenceScreen());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,0,0.4,29,17
6362_1,1,1,private void updateAccountSwitches() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.5,7,5
6362_2,2,2,mInvisibleAdapters.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,4,1,0,1,0.55,6,4
6362_4,4,5,"SyncAdapterType[] syncAdapters = ContentResolver.getSyncAdapterTypesAsUser(
mUserHandle.getIdentifier());",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,0,5,4,1,0,2,0.61,3,3
6362_6,6,6,ArrayList<SyncAdapterType> authorities = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,2,0.62,2,2
6362_7,7,19,"for (int i = 0, n = syncAdapters.length; i < n; i++) {
final SyncAdapterType sa = syncAdapters[i];
if (!sa.accountType.equals(mAccount.type)) continue;
if (sa.isUserVisible()) {
if (Log.isLoggable(TAG, Log.DEBUG)) {
Log.d(TAG, ""updateAccountSwitches: added authority "" + sa.authority
+ "" to accountType "" + sa.accountType);
}
authorities.add(sa);
} else {
mInvisibleAdapters.add(sa);
}
}",0,0,1,0,0,0,0,0,0,8,3,13,0,1,0,1,5,4,1,0,3,0.65,0,0
6362_8,8,8,final SyncAdapterType sa = syncAdapters[i];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,2,0.68,0,0
6362_9,9,9,if (!sa.accountType.equals(mAccount.type)) continue;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.49,0,0
6362_10,10,18,"if (sa.isUserVisible()) {
if (Log.isLoggable(TAG, Log.DEBUG)) {
Log.d(TAG, ""updateAccountSwitches: added authority "" + sa.authority
+ "" to accountType "" + sa.accountType);
}
authorities.add(sa);
} else {
mInvisibleAdapters.add(sa);
}",1,0,0,0,0,0,0,0,0,5,2,9,0,1,0,0,5,4,1,0,2,0.6,1,0
6362_11,11,14,"if (Log.isLoggable(TAG, Log.DEBUG)) {
Log.d(TAG, ""updateAccountSwitches: added authority "" + sa.authority
+ "" to accountType "" + sa.accountType);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,5,4,1,0,1,0.51,2,1
6362_12,12,13,"Log.d(TAG, ""updateAccountSwitches: added authority "" + sa.authority
+ "" to accountType "" + sa.accountType);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,1,0,1,0.55,3,2
6362_15,15,15,authorities.add(sa);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.52,6,4
6362_16,16,16,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.25,7,4
6362_17,17,17,mInvisibleAdapters.add(sa);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.59,8,5
6362_21,21,23,"if (Log.isLoggable(TAG, Log.DEBUG)) {
Log.d(TAG, ""looking for sync adapters that match account "" + mAccount);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,4,1,0,3,0.59,12,7
6362_22,22,22,"Log.d(TAG, ""looking for sync adapters that match account "" + mAccount);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,3,0.67,13,7
6362_25,25,25,cacheRemoveAllPrefs(getPreferenceScreen());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,1,0,0,0.38,16,9
6362_26,26,26,getCachedPreference(EntityHeaderController.PREF_KEY_APP_HEADER);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.35,17,9
6362_27,27,45,"for (int j = 0, m = authorities.size(); j < m; j++) {
final SyncAdapterType syncAdapter = authorities.get(j);
int syncState = ContentResolver.getIsSyncableAsUser(mAccount, syncAdapter.authority,
mUserHandle.getIdentifier());
if (Log.isLoggable(TAG, Log.DEBUG)) {
Log.d(TAG, ""  found authority "" + syncAdapter.authority + "" "" + syncState);
}
if (syncState > 0) {
final int uid;
try {
uid = getContext().getPackageManager().getPackageUidAsUser(
syncAdapter.getPackageName(), mUserHandle.getIdentifier());
addSyncStateSwitch(mAccount, syncAdapter.authority,
syncAdapter.getPackageName(), uid);
} catch (PackageManager.NameNotFoundException e) {
Log.e(TAG, ""No uid for package"" + syncAdapter.getPackageName(), e);
}
}
}",0,0,1,0,0,0,0,0,0,11,3,19,0,0,0,0,5,4,1,0,3,0.63,18,10
6362_28,28,28,final SyncAdapterType syncAdapter = authorities.get(j);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,2,0.67,19,11
6362_29,29,30,"int syncState = ContentResolver.getIsSyncableAsUser(mAccount, syncAdapter.authority,
mUserHandle.getIdentifier());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,4,1,0,3,0.64,20,12
6362_31,31,33,"if (Log.isLoggable(TAG, Log.DEBUG)) {
Log.d(TAG, ""  found authority "" + syncAdapter.authority + "" "" + syncState);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,4,1,0,2,0.56,22,14
6362_32,32,32,"Log.d(TAG, ""  found authority "" + syncAdapter.authority + "" "" + syncState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,2,0.62,23,14
6362_34,34,44,"if (syncState > 0) {
final int uid;
try {
uid = getContext().getPackageManager().getPackageUidAsUser(
syncAdapter.getPackageName(), mUserHandle.getIdentifier());
addSyncStateSwitch(mAccount, syncAdapter.authority,
syncAdapter.getPackageName(), uid);
} catch (PackageManager.NameNotFoundException e) {
Log.e(TAG, ""No uid for package"" + syncAdapter.getPackageName(), e);
}
}",1,0,0,0,0,0,0,0,0,6,2,11,0,1,0,0,5,4,1,0,3,0.61,25,16
6362_35,35,35,final int uid;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.26,26,16
6362_36,36,43,"try {
uid = getContext().getPackageManager().getPackageUidAsUser(
syncAdapter.getPackageName(), mUserHandle.getIdentifier());
addSyncStateSwitch(mAccount, syncAdapter.authority,
syncAdapter.getPackageName(), uid);
} catch (PackageManager.NameNotFoundException e) {
Log.e(TAG, ""No uid for package"" + syncAdapter.getPackageName(), e);
}",0,0,0,0,1,0,0,0,0,4,1,8,0,1,0,0,5,4,1,0,3,0.61,27,17
6362_37,37,38,"uid = getContext().getPackageManager().getPackageUidAsUser(
syncAdapter.getPackageName(), mUserHandle.getIdentifier());",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,5,4,1,0,2,0.54,28,18
6362_39,39,40,"addSyncStateSwitch(mAccount, syncAdapter.authority,
syncAdapter.getPackageName(), uid);",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,5,4,1,0,3,0.7,30,20
6362_41,41,41,} catch (PackageManager.NameNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.3,32,21
6362_42,42,42,"Log.e(TAG, ""No uid for package"" + syncAdapter.getPackageName(), e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,2,0.53,33,21
6362_46,46,46,removeCachedPrefs(getPreferenceScreen());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.38,37,23
6361_1,1,1,private void setFeedsState() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.4,5,4
6361_2,2,2,Date date = new Date();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.3,4,3
6361_3,3,3,final int userId = mUserHandle.getIdentifier();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,1,0,0,0.33,3,2
6361_4,4,4,List<SyncInfo> currentSyncs = ContentResolver.getCurrentSyncsAsUser(userId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,1,0,1,0.51,2,1
6361_5,5,5,boolean syncIsFailing = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,5,1,0,1,0.57,1,0
6361_7,7,7,updateAccountSwitches();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,8,5,1,0,1,0.55,0,0
6361_9,9,63,"for (int i = 0, count = getPreferenceScreen().getPreferenceCount(); i < count; i++) {
Preference pref = getPreferenceScreen().getPreference(i);
if (!(pref instanceof SyncStateSwitchPreference)) {
continue;
}
SyncStateSwitchPreference syncPref = (SyncStateSwitchPreference) pref;

String authority = syncPref.getAuthority();
Account account = syncPref.getAccount();

SyncStatusInfo status = ContentResolver.getSyncStatusAsUser(account, authority, userId);
boolean syncEnabled = ContentResolver.getSyncAutomaticallyAsUser(account, authority,
userId);
boolean authorityIsPending = status == null ? false : status.pending;
boolean initialSync = status == null ? false : status.initialize;

boolean activelySyncing = isSyncing(currentSyncs, account, authority);
boolean lastSyncFailed = status != null
&& status.lastFailureTime != 0
&& status.getLastFailureMesgAsInt(0)
!= ContentResolver.SYNC_ERROR_SYNC_ALREADY_IN_PROGRESS;
if (!syncEnabled) lastSyncFailed = false;
if (lastSyncFailed && !activelySyncing && !authorityIsPending) {
syncIsFailing = true;
}
if (Log.isLoggable(TAG, Log.DEBUG)) {
Log.d(TAG, ""Update sync status: "" + account + "" "" + authority +
"" active = "" + activelySyncing + "" pend ="" + authorityIsPending);
}

final long successEndTime = (status == null) ? 0 : status.lastSuccessTime;
if (!syncEnabled) {
syncPref.setSummary(R.string.sync_disabled);
} else if (activelySyncing) {
syncPref.setSummary(R.string.sync_in_progress);
} else if (successEndTime != 0) {
date.setTime(successEndTime);
final String timeString = formatSyncDate(getContext(), date);
syncPref.setSummary(getResources().getString(R.string.last_synced, timeString));
} else {
syncPref.setSummary("""");
}
int syncState = ContentResolver.getIsSyncableAsUser(account, authority, userId);

syncPref.setActive(activelySyncing && (syncState >= 0) &&
!initialSync);
syncPref.setPending(authorityIsPending && (syncState >= 0) &&
!initialSync);

syncPref.setFailed(lastSyncFailed);
final boolean oneTimeSyncMode = !ContentResolver.getMasterSyncAutomaticallyAsUser(
userId);
syncPref.setOneTimeSyncMode(oneTimeSyncMode);
syncPref.setChecked(oneTimeSyncMode || syncEnabled);
}",0,0,1,0,0,0,0,0,0,35,2,55,0,1,1,0,8,5,1,0,4,0.69,2,1
6361_10,10,10,Preference pref = getPreferenceScreen().getPreference(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,1,0,0,0.4,3,1
6361_11,11,13,"if (!(pref instanceof SyncStateSwitchPreference)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,8,5,1,0,2,0.63,4,2
6361_12,12,12,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.31,5,3
6361_14,14,14,SyncStateSwitchPreference syncPref = (SyncStateSwitchPreference) pref;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,8,5,1,0,2,0.69,7,5
6361_16,16,16,String authority = syncPref.getAuthority();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,5,1,0,1,0.56,9,6
6361_17,17,17,Account account = syncPref.getAccount();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,8,5,1,0,1,0.56,10,6
6361_19,19,19,"SyncStatusInfo status = ContentResolver.getSyncStatusAsUser(account, authority, userId);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,5,1,0,2,0.62,12,8
6361_20,20,21,"boolean syncEnabled = ContentResolver.getSyncAutomaticallyAsUser(account, authority,
userId);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,8,5,1,0,1,0.54,13,8
6361_22,22,22,boolean authorityIsPending = status == null ? false : status.pending;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,1,0,1,0.56,15,10
6361_23,23,23,boolean initialSync = status == null ? false : status.initialize;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,8,5,1,0,2,0.62,16,10
6361_25,25,25,"boolean activelySyncing = isSyncing(currentSyncs, account, authority);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,8,5,1,0,2,0.68,18,12
6361_26,26,29,"boolean lastSyncFailed = status != null
&& status.lastFailureTime != 0
&& status.getLastFailureMesgAsInt(0)
!= ContentResolver.SYNC_ERROR_SYNC_ALREADY_IN_PROGRESS;",0,0,0,0,0,1,0,0,0,0,0,4,0,1,0,0,8,5,1,0,2,0.56,19,12
6361_30,30,30,if (!syncEnabled) lastSyncFailed = false;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,1,0,1,0.58,23,14
6361_31,31,33,"if (lastSyncFailed && !activelySyncing && !authorityIsPending) {
syncIsFailing = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,8,5,1,0,2,0.67,24,14
6361_32,32,32,syncIsFailing = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.6,25,15
6361_34,34,37,"if (Log.isLoggable(TAG, Log.DEBUG)) {
Log.d(TAG, ""Update sync status: "" + account + "" "" + authority +
"" active = "" + activelySyncing + "" pend ="" + authorityIsPending);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,8,5,1,0,3,0.65,27,17
6361_35,35,36,"Log.d(TAG, ""Update sync status: "" + account + "" "" + authority +
"" active = "" + activelySyncing + "" pend ="" + authorityIsPending);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,1,0,3,0.69,28,17
6361_39,39,39,final long successEndTime = (status == null) ? 0 : status.lastSuccessTime;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,5,1,0,1,0.46,32,19
6361_40,40,50,"if (!syncEnabled) {
syncPref.setSummary(R.string.sync_disabled);
} else if (activelySyncing) {
syncPref.setSummary(R.string.sync_in_progress);
} else if (successEndTime != 0) {
date.setTime(successEndTime);
final String timeString = formatSyncDate(getContext(), date);
syncPref.setSummary(getResources().getString(R.string.last_synced, timeString));
} else {
syncPref.setSummary("""");
}",1,0,0,0,0,0,0,0,0,9,1,11,0,1,0,0,8,5,1,0,2,0.58,33,19
6361_41,41,41,syncPref.setSummary(R.string.sync_disabled);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.59,34,20
6361_42,42,42,} else if (activelySyncing) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,2,0.69,35,21
6361_43,43,43,syncPref.setSummary(R.string.sync_in_progress);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.58,36,22
6361_44,44,44,} else if (successEndTime != 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.38,37,23
6361_45,45,45,date.setTime(successEndTime);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,1,0,0,0.37,38,24
6361_46,46,46,"final String timeString = formatSyncDate(getContext(), date);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,1,0,1,0.41,39,25
6361_47,47,47,"syncPref.setSummary(getResources().getString(R.string.last_synced, timeString));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,1,0,1,0.51,40,26
6361_48,48,48,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.29,41,27
6361_49,49,49,"syncPref.setSummary("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.6,42,28
6361_51,51,51,"int syncState = ContentResolver.getIsSyncableAsUser(account, authority, userId);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,5,1,0,1,0.51,44,30
6361_53,53,54,"syncPref.setActive(activelySyncing && (syncState >= 0) &&
!initialSync);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,1,0,8,5,1,0,2,0.67,46,31
6361_55,55,56,"syncPref.setPending(authorityIsPending && (syncState >= 0) &&
!initialSync);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,8,5,1,0,1,0.57,48,32
6361_58,58,58,syncPref.setFailed(lastSyncFailed);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,5,1,0,1,0.58,51,33
6361_59,59,60,"final boolean oneTimeSyncMode = !ContentResolver.getMasterSyncAutomaticallyAsUser(
userId);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,8,5,1,0,1,0.52,52,33
6361_61,61,61,syncPref.setOneTimeSyncMode(oneTimeSyncMode);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,1,0,1,0.53,54,35
6361_62,62,62,syncPref.setChecked(oneTimeSyncMode || syncEnabled);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,1,0,1,0.55,55,35
6361_64,64,67,"if (syncIsFailing) {
mFooterPreferenceMixin.createFooterPreference()
.setTitle(R.string.sync_is_failing);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,8,5,1,0,1,0.54,57,37
6361_65,65,65,mFooterPreferenceMixin.createFooterPreference(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.41,58,37
6361_66,66,66,.setTitle(R.string.sync_is_failing);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.49,59,38
6360_1,1,1,private void setFeedsState() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,2,0.65,0,0
6360_2,2,2,Date date = new Date();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.3,0,0
6360_3,3,3,final int userId = mUserHandle.getIdentifier();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.33,1,0
6360_4,4,4,List<SyncInfo> currentSyncs = ContentResolver.getCurrentSyncsAsUser(userId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.33,2,1
6360_5,5,5,boolean syncIsFailing = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,1,0,0,0.32,3,2
6360_7,7,7,updateAccountSwitches();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,4,1,0,0,0.38,5,4
6360_9,9,63,"for (int i = 0, count = getPreferenceScreen().getPreferenceCount(); i < count; i++) {
Preference pref = getPreferenceScreen().getPreference(i);
if (!(pref instanceof SyncStateSwitchPreference)) {
continue;
}
SyncStateSwitchPreference syncPref = (SyncStateSwitchPreference) pref;

String authority = syncPref.getAuthority();
Account account = syncPref.getAccount();

SyncStatusInfo status = ContentResolver.getSyncStatusAsUser(account, authority, userId);
boolean syncEnabled = ContentResolver.getSyncAutomaticallyAsUser(account, authority,
userId);
boolean authorityIsPending = status == null ? false : status.pending;
boolean initialSync = status == null ? false : status.initialize;

boolean activelySyncing = isSyncing(currentSyncs, account, authority);
boolean lastSyncFailed = status != null
&& status.lastFailureTime != 0
&& status.getLastFailureMesgAsInt(0)
!= ContentResolver.SYNC_ERROR_SYNC_ALREADY_IN_PROGRESS;
if (!syncEnabled) lastSyncFailed = false;
if (lastSyncFailed && !activelySyncing && !authorityIsPending) {
syncIsFailing = true;
}
if (Log.isLoggable(TAG, Log.DEBUG)) {
Log.d(TAG, ""Update sync status: "" + account + "" "" + authority +
"" active = "" + activelySyncing + "" pend ="" + authorityIsPending);
}

final long successEndTime = (status == null) ? 0 : status.lastSuccessTime;
if (!syncEnabled) {
syncPref.setSummary(R.string.sync_disabled);
} else if (activelySyncing) {
syncPref.setSummary(R.string.sync_in_progress);
} else if (successEndTime != 0) {
date.setTime(successEndTime);
final String timeString = formatSyncDate(getContext(), date);
syncPref.setSummary(getResources().getString(R.string.last_synced, timeString));
} else {
syncPref.setSummary("""");
}
int syncState = ContentResolver.getIsSyncableAsUser(account, authority, userId);

syncPref.setActive(activelySyncing && (syncState >= 0) &&
!initialSync);
syncPref.setPending(authorityIsPending && (syncState >= 0) &&
!initialSync);

syncPref.setFailed(lastSyncFailed);
final boolean oneTimeSyncMode = !ContentResolver.getMasterSyncAutomaticallyAsUser(
userId);
syncPref.setOneTimeSyncMode(oneTimeSyncMode);
syncPref.setChecked(oneTimeSyncMode || syncEnabled);
}",0,0,1,0,0,0,0,0,0,35,2,55,0,1,1,0,5,4,1,0,3,0.62,7,5
6360_10,10,10,Preference pref = getPreferenceScreen().getPreference(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.57,8,5
6360_11,11,13,"if (!(pref instanceof SyncStateSwitchPreference)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,4,1,0,2,0.63,9,6
6360_12,12,12,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.27,10,7
6360_14,14,14,SyncStateSwitchPreference syncPref = (SyncStateSwitchPreference) pref;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,5,4,1,0,2,0.63,12,9
6360_16,16,16,String authority = syncPref.getAuthority();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,1,0,0,0.45,14,10
6360_17,17,17,Account account = syncPref.getAccount();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,5,4,1,0,0,0.4,15,10
6360_19,19,19,"SyncStatusInfo status = ContentResolver.getSyncStatusAsUser(account, authority, userId);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,1,0,0,0.34,17,12
6360_20,20,21,"boolean syncEnabled = ContentResolver.getSyncAutomaticallyAsUser(account, authority,
userId);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,4,1,0,0,0.36,18,12
6360_22,22,22,boolean authorityIsPending = status == null ? false : status.pending;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.34,20,14
6360_23,23,23,boolean initialSync = status == null ? false : status.initialize;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,5,4,1,0,0,0.32,21,14
6360_25,25,25,"boolean activelySyncing = isSyncing(currentSyncs, account, authority);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,4,1,0,0,0.34,23,16
6360_26,26,29,"boolean lastSyncFailed = status != null
&& status.lastFailureTime != 0
&& status.getLastFailureMesgAsInt(0)
!= ContentResolver.SYNC_ERROR_SYNC_ALREADY_IN_PROGRESS;",0,0,0,0,0,1,0,0,0,0,0,4,0,1,0,0,5,4,1,0,0,0.36,24,16
6360_30,30,30,if (!syncEnabled) lastSyncFailed = false;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.3,28,18
6360_31,31,33,"if (lastSyncFailed && !activelySyncing && !authorityIsPending) {
syncIsFailing = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,4,1,0,0,0.33,29,18
6360_32,32,32,syncIsFailing = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.3,30,19
6360_34,34,37,"if (Log.isLoggable(TAG, Log.DEBUG)) {
Log.d(TAG, ""Update sync status: "" + account + "" "" + authority +
"" active = "" + activelySyncing + "" pend ="" + authorityIsPending);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,5,4,1,0,0,0.38,32,21
6360_35,35,36,"Log.d(TAG, ""Update sync status: "" + account + "" "" + authority +
"" active = "" + activelySyncing + "" pend ="" + authorityIsPending);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,1,0,0,0.36,33,21
6360_39,39,39,final long successEndTime = (status == null) ? 0 : status.lastSuccessTime;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,1,0,0,0.34,37,23
6360_40,40,50,"if (!syncEnabled) {
syncPref.setSummary(R.string.sync_disabled);
} else if (activelySyncing) {
syncPref.setSummary(R.string.sync_in_progress);
} else if (successEndTime != 0) {
date.setTime(successEndTime);
final String timeString = formatSyncDate(getContext(), date);
syncPref.setSummary(getResources().getString(R.string.last_synced, timeString));
} else {
syncPref.setSummary("""");
}",1,0,0,0,0,0,0,0,0,9,1,11,0,1,0,0,5,4,1,0,1,0.57,38,23
6360_41,41,41,syncPref.setSummary(R.string.sync_disabled);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.61,39,24
6360_42,42,42,} else if (activelySyncing) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.36,40,25
6360_43,43,43,syncPref.setSummary(R.string.sync_in_progress);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.6,41,26
6360_44,44,44,} else if (successEndTime != 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.37,42,27
6360_45,45,45,date.setTime(successEndTime);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.49,43,28
6360_46,46,46,"final String timeString = formatSyncDate(getContext(), date);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.36,44,29
6360_47,47,47,"syncPref.setSummary(getResources().getString(R.string.last_synced, timeString));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.55,45,30
6360_48,48,48,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.38,46,31
6360_49,49,49,"syncPref.setSummary("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.67,47,32
6360_51,51,51,"int syncState = ContentResolver.getIsSyncableAsUser(account, authority, userId);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,1,0,1,0.44,49,34
6360_53,53,54,"syncPref.setActive(activelySyncing && (syncState >= 0) &&
!initialSync);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,1,0,5,4,1,0,2,0.59,51,35
6360_55,55,56,"syncPref.setPending(authorityIsPending && (syncState >= 0) &&
!initialSync);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,5,4,1,0,2,0.6,53,36
6360_58,58,58,syncPref.setFailed(lastSyncFailed);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,1,0,1,0.51,56,37
6360_59,59,60,"final boolean oneTimeSyncMode = !ContentResolver.getMasterSyncAutomaticallyAsUser(
userId);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,4,1,0,0,0.35,57,37
6360_61,61,61,syncPref.setOneTimeSyncMode(oneTimeSyncMode);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.48,59,39
6360_62,62,62,syncPref.setChecked(oneTimeSyncMode || syncEnabled);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.49,60,39
6360_64,64,67,"if (syncIsFailing) {
mFooterPreferenceMixin.createFooterPreference()
.setTitle(R.string.sync_is_failing);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,4,1,0,2,0.57,62,41
6360_65,65,65,mFooterPreferenceMixin.createFooterPreference(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.52,63,41
6360_66,66,66,.setTitle(R.string.sync_is_failing);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.52,64,42
6359_1,1,1,private void requestOrCancelSyncForEnabledProviders(boolean startSync) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.6,0,0
6359_2,2,2,int count = getPreferenceScreen().getPreferenceCount();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,3,0,0,0,0.28,0,0
6359_3,3,13,"for (int i = 0; i < count; i++) {
Preference pref = getPreferenceScreen().getPreference(i);
if (!(pref instanceof SyncStateSwitchPreference)) {
continue;
}
SyncStateSwitchPreference syncPref = (SyncStateSwitchPreference) pref;
if (!syncPref.isChecked()) {
continue;
}
requestOrCancelSync(syncPref.getAccount(), syncPref.getAuthority(), startSync);
}",0,0,1,0,0,0,0,0,0,7,2,11,1,1,0,0,4,3,0,0,1,0.52,1,0
6359_4,4,4,Preference pref = getPreferenceScreen().getPreference(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.33,2,1
6359_5,5,7,"if (!(pref instanceof SyncStateSwitchPreference)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,1,0.52,3,2
6359_6,6,6,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.37,4,3
6359_8,8,8,SyncStateSwitchPreference syncPref = (SyncStateSwitchPreference) pref;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.53,6,5
6359_9,9,11,"if (!syncPref.isChecked()) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,1,0.53,7,5
6359_10,10,10,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.37,8,6
6359_12,12,12,"requestOrCancelSync(syncPref.getAccount(), syncPref.getAuthority(), startSync);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.56,10,8
6359_14,14,18,"if (mAccount != null) {
for (SyncAdapterType syncAdapter : mInvisibleAdapters) {
requestOrCancelSync(mAccount, syncAdapter.authority, startSync);
}
}",1,0,0,0,0,0,0,0,0,2,2,5,1,0,0,0,4,3,0,0,1,0.55,12,9
6359_15,15,17,"for (SyncAdapterType syncAdapter : mInvisibleAdapters) {
requestOrCancelSync(mAccount, syncAdapter.authority, startSync);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,1,0.56,13,9
6359_16,16,16,"requestOrCancelSync(mAccount, syncAdapter.authority, startSync);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.57,14,10
6358_1,1,2,"private ArrayList<AccountTypePreference> getAccountTypePreferences(AuthenticatorHelper helper,
UserHandle userHandle, ArrayMap<String, AccountTypePreference> preferenceToRemove) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.35,52,31
6358_3,3,3,final String[] accountTypes = helper.getEnabledAccountTypes();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.35,51,30
6358_4,4,5,"final ArrayList<AccountTypePreference> accountTypePreferences =
new ArrayList<>(accountTypes.length);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,1,2,2,0,0,0,0.35,49,29
6358_7,7,54,"for (int i = 0; i < accountTypes.length; i++) {
final String accountType = accountTypes[i];
if (!accountTypeHasAnyRequestedAuthorities(helper, accountType)) {
continue;
}
final CharSequence label = helper.getLabelForType(mContext, accountType);
if (label == null) {
continue;
}
final String titleResPackageName = helper.getPackageForType(accountType);
final int titleResId = helper.getLabelIdForType(accountType);

final Account[] accounts = AccountManager.get(mContext)
.getAccountsByTypeAsUser(accountType, userHandle);
final Drawable icon = helper.getDrawableForType(mContext, accountType);
final Context prefContext = mParent.getPreferenceManager().getContext();

for (Account account : accounts) {
final AccountTypePreference preference =
preferenceToRemove.remove(AccountTypePreference.buildKey(account));
if (preference != null) {
accountTypePreferences.add(preference);
continue;
}
final ArrayList<String> auths =
helper.getAuthoritiesForAccountType(account.type);
if (!AccountRestrictionHelper.showAccount(mAuthorities, auths)) {
continue;
}
final Bundle fragmentArguments = new Bundle();
fragmentArguments.putParcelable(AccountDetailDashboardFragment.KEY_ACCOUNT,
account);
fragmentArguments.putParcelable(AccountDetailDashboardFragment.KEY_USER_HANDLE,
userHandle);
fragmentArguments.putString(AccountDetailDashboardFragment.KEY_ACCOUNT_TYPE,
accountType);
fragmentArguments.putString(AccountDetailDashboardFragment.KEY_ACCOUNT_LABEL,
label.toString());
fragmentArguments.putInt(AccountDetailDashboardFragment.KEY_ACCOUNT_TITLE_RES,
titleResId);
fragmentArguments.putParcelable(EXTRA_USER, userHandle);
accountTypePreferences.add(new AccountTypePreference(
prefContext, mMetricsFeatureProvider.getMetricsCategory(mParent),
account, titleResPackageName, titleResId, label,
AccountDetailDashboardFragment.class.getName(), fragmentArguments, icon));
}
helper.preloadDrawableForType(mContext, accountType);
}",0,0,0,1,0,0,0,0,0,28,3,48,0,1,1,0,2,2,0,0,1,0.51,0,0
6358_8,8,8,final String accountType = accountTypes[i];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.35,46,27
6358_9,9,11,"if (!accountTypeHasAnyRequestedAuthorities(helper, accountType)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,2,0,0,0,0.34,43,25
6358_10,10,10,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.12,44,25
6358_12,12,12,"final CharSequence label = helper.getLabelForType(mContext, accountType);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.55,42,24
6358_13,13,15,"if (label == null) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,2,0,0,1,0.54,39,22
6358_14,14,14,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.12,40,22
6358_16,16,16,final String titleResPackageName = helper.getPackageForType(accountType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.39,38,21
6358_17,17,17,final int titleResId = helper.getLabelIdForType(accountType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,2,2,0,0,1,0.53,37,20
6358_19,19,20,"final Account[] accounts = AccountManager.get(mContext)
.getAccountsByTypeAsUser(accountType, userHandle);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,2,2,0,0,0,0.36,34,19
6358_21,21,21,"final Drawable icon = helper.getDrawableForType(mContext, accountType);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.34,33,18
6358_22,22,22,final Context prefContext = mParent.getPreferenceManager().getContext();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.29,32,17
6358_24,24,52,"for (Account account : accounts) {
final AccountTypePreference preference =
preferenceToRemove.remove(AccountTypePreference.buildKey(account));
if (preference != null) {
accountTypePreferences.add(preference);
continue;
}
final ArrayList<String> auths =
helper.getAuthoritiesForAccountType(account.type);
if (!AccountRestrictionHelper.showAccount(mAuthorities, auths)) {
continue;
}
final Bundle fragmentArguments = new Bundle();
fragmentArguments.putParcelable(AccountDetailDashboardFragment.KEY_ACCOUNT,
account);
fragmentArguments.putParcelable(AccountDetailDashboardFragment.KEY_USER_HANDLE,
userHandle);
fragmentArguments.putString(AccountDetailDashboardFragment.KEY_ACCOUNT_TYPE,
accountType);
fragmentArguments.putString(AccountDetailDashboardFragment.KEY_ACCOUNT_LABEL,
label.toString());
fragmentArguments.putInt(AccountDetailDashboardFragment.KEY_ACCOUNT_TITLE_RES,
titleResId);
fragmentArguments.putParcelable(EXTRA_USER, userHandle);
accountTypePreferences.add(new AccountTypePreference(
prefContext, mMetricsFeatureProvider.getMetricsCategory(mParent),
account, titleResPackageName, titleResId, label,
AccountDetailDashboardFragment.class.getName(), fragmentArguments, icon));
}",0,0,0,1,0,0,0,0,0,15,2,29,0,1,1,0,2,2,0,0,1,0.5,2,1
6358_25,25,26,"final AccountTypePreference preference =
preferenceToRemove.remove(AccountTypePreference.buildKey(account));",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,2,2,0,0,0,0.34,28,15
6358_27,27,30,"if (preference != null) {
accountTypePreferences.add(preference);
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,2,2,0,0,0,0.33,24,12
6358_28,28,28,accountTypePreferences.add(preference);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.36,26,13
6358_29,29,29,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.12,25,12
6358_31,31,32,"final ArrayList<String> auths =
helper.getAuthoritiesForAccountType(account.type);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,2,2,0,0,0,0.35,22,11
6358_33,33,35,"if (!AccountRestrictionHelper.showAccount(mAuthorities, auths)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,2,0,0,0,0.37,19,9
6358_34,34,34,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.12,20,9
6358_36,36,36,final Bundle fragmentArguments = new Bundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.19,18,8
6358_37,37,38,"fragmentArguments.putParcelable(AccountDetailDashboardFragment.KEY_ACCOUNT,
account);",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,2,2,0,0,0,0.34,16,7
6358_39,39,40,"fragmentArguments.putParcelable(AccountDetailDashboardFragment.KEY_USER_HANDLE,
userHandle);",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,2,2,0,0,0,0.33,14,6
6358_41,41,42,"fragmentArguments.putString(AccountDetailDashboardFragment.KEY_ACCOUNT_TYPE,
accountType);",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,2,2,0,0,0,0.35,12,5
6358_43,43,44,"fragmentArguments.putString(AccountDetailDashboardFragment.KEY_ACCOUNT_LABEL,
label.toString());",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,2,2,0,0,1,0.53,10,4
6358_45,45,46,"fragmentArguments.putInt(AccountDetailDashboardFragment.KEY_ACCOUNT_TITLE_RES,
titleResId);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,2,2,0,0,0,0.37,8,3
6358_47,47,47,"fragmentArguments.putParcelable(EXTRA_USER, userHandle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.33,7,2
6358_48,48,51,"accountTypePreferences.add(new AccountTypePreference(
prefContext, mMetricsFeatureProvider.getMetricsCategory(mParent),
account, titleResPackageName, titleResId, label,
AccountDetailDashboardFragment.class.getName(), fragmentArguments, icon));",0,0,0,0,0,0,0,0,0,0,0,4,0,1,0,0,2,2,0,0,1,0.52,3,1
6358_53,53,53,"helper.preloadDrawableForType(mContext, accountType);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.33,1,0
6358_55,55,55,"Collections.sort(accountTypePreferences, new Comparator<AccountTypePreference>() {",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.56,0,0
6358_56,56,57,"@Override
public int compare(AccountTypePreference t1, AccountTypePreference t2) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.38,1,0
6358_58,58,58,int result = t1.getSummary().toString().compareTo(t2.getSummary().toString());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.42,3,2
6358_59,59,60,"return result != 0
? result : t1.getTitle().toString().compareTo(t2.getTitle().toString());",0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,2,2,0,0,0,0.39,4,2
6358_63,63,63,return accountTypePreferences;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.34,8,4
6357_1,1,2,"private ArrayList<AccountTypePreference> getAccountTypePreferences(AuthenticatorHelper helper,
UserHandle userHandle, ArrayMap<String, AccountTypePreference> preferenceToRemove) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,1,0,2,0.6,21,14
6357_3,3,3,final String[] accountTypes = helper.getEnabledAccountTypes();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.46,20,13
6357_4,4,5,"final ArrayList<AccountTypePreference> accountTypePreferences =
new ArrayList<>(accountTypes.length);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,1,5,4,1,0,2,0.59,18,12
6357_7,7,54,"for (int i = 0; i < accountTypes.length; i++) {
final String accountType = accountTypes[i];
if (!accountTypeHasAnyRequestedAuthorities(helper, accountType)) {
continue;
}
final CharSequence label = helper.getLabelForType(mContext, accountType);
if (label == null) {
continue;
}
final String titleResPackageName = helper.getPackageForType(accountType);
final int titleResId = helper.getLabelIdForType(accountType);

final Account[] accounts = AccountManager.get(mContext)
.getAccountsByTypeAsUser(accountType, userHandle);
final Drawable icon = helper.getDrawableForType(mContext, accountType);
final Context prefContext = mParent.getPreferenceManager().getContext();

for (Account account : accounts) {
final AccountTypePreference preference =
preferenceToRemove.remove(AccountTypePreference.buildKey(account));
if (preference != null) {
accountTypePreferences.add(preference);
continue;
}
final ArrayList<String> auths =
helper.getAuthoritiesForAccountType(account.type);
if (!AccountRestrictionHelper.showAccount(mAuthorities, auths)) {
continue;
}
final Bundle fragmentArguments = new Bundle();
fragmentArguments.putParcelable(AccountDetailDashboardFragment.KEY_ACCOUNT,
account);
fragmentArguments.putParcelable(AccountDetailDashboardFragment.KEY_USER_HANDLE,
userHandle);
fragmentArguments.putString(AccountDetailDashboardFragment.KEY_ACCOUNT_TYPE,
accountType);
fragmentArguments.putString(AccountDetailDashboardFragment.KEY_ACCOUNT_LABEL,
label.toString());
fragmentArguments.putInt(AccountDetailDashboardFragment.KEY_ACCOUNT_TITLE_RES,
titleResId);
fragmentArguments.putParcelable(EXTRA_USER, userHandle);
accountTypePreferences.add(new AccountTypePreference(
prefContext, mMetricsFeatureProvider.getMetricsCategory(mParent),
account, titleResPackageName, titleResId, label,
AccountDetailDashboardFragment.class.getName(), fragmentArguments, icon));
}
helper.preloadDrawableForType(mContext, accountType);
}",0,0,0,1,0,0,0,0,0,28,3,48,0,1,1,0,5,4,1,0,3,0.67,0,0
6357_8,8,8,final String accountType = accountTypes[i];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.47,15,10
6357_9,9,11,"if (!accountTypeHasAnyRequestedAuthorities(helper, accountType)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,4,1,0,1,0.5,12,8
6357_10,10,10,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.23,13,8
6357_12,12,12,"final CharSequence label = helper.getLabelForType(mContext, accountType);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.43,11,7
6357_13,13,15,"if (label == null) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,4,1,0,0,0.31,8,5
6357_14,14,14,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.23,9,5
6357_16,16,16,final String titleResPackageName = helper.getPackageForType(accountType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.43,7,4
6357_17,17,17,final int titleResId = helper.getLabelIdForType(accountType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,5,4,1,0,1,0.46,6,3
6357_19,19,20,"final Account[] accounts = AccountManager.get(mContext)
.getAccountsByTypeAsUser(accountType, userHandle);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,5,4,1,0,1,0.51,3,2
6357_21,21,21,"final Drawable icon = helper.getDrawableForType(mContext, accountType);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.45,2,1
6357_22,22,22,final Context prefContext = mParent.getPreferenceManager().getContext();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,1,0,1,0.43,1,0
6357_24,24,52,"for (Account account : accounts) {
final AccountTypePreference preference =
preferenceToRemove.remove(AccountTypePreference.buildKey(account));
if (preference != null) {
accountTypePreferences.add(preference);
continue;
}
final ArrayList<String> auths =
helper.getAuthoritiesForAccountType(account.type);
if (!AccountRestrictionHelper.showAccount(mAuthorities, auths)) {
continue;
}
final Bundle fragmentArguments = new Bundle();
fragmentArguments.putParcelable(AccountDetailDashboardFragment.KEY_ACCOUNT,
account);
fragmentArguments.putParcelable(AccountDetailDashboardFragment.KEY_USER_HANDLE,
userHandle);
fragmentArguments.putString(AccountDetailDashboardFragment.KEY_ACCOUNT_TYPE,
accountType);
fragmentArguments.putString(AccountDetailDashboardFragment.KEY_ACCOUNT_LABEL,
label.toString());
fragmentArguments.putInt(AccountDetailDashboardFragment.KEY_ACCOUNT_TITLE_RES,
titleResId);
fragmentArguments.putParcelable(EXTRA_USER, userHandle);
accountTypePreferences.add(new AccountTypePreference(
prefContext, mMetricsFeatureProvider.getMetricsCategory(mParent),
account, titleResPackageName, titleResId, label,
AccountDetailDashboardFragment.class.getName(), fragmentArguments, icon));
}",0,0,0,1,0,0,0,0,0,15,2,29,0,1,1,0,5,4,1,0,3,0.68,0,0
6357_25,25,26,"final AccountTypePreference preference =
preferenceToRemove.remove(AccountTypePreference.buildKey(account));",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,4,1,0,2,0.64,1,0
6357_27,27,30,"if (preference != null) {
accountTypePreferences.add(preference);
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,4,1,0,3,0.77,3,2
6357_28,28,28,accountTypePreferences.add(preference);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,3,0.83,4,2
6357_29,29,29,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.23,5,3
6357_31,31,32,"final ArrayList<String> auths =
helper.getAuthoritiesForAccountType(account.type);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,4,1,0,1,0.49,7,5
6357_33,33,35,"if (!AccountRestrictionHelper.showAccount(mAuthorities, auths)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,4,1,0,1,0.54,9,6
6357_34,34,34,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.23,10,6
6357_36,36,36,final Bundle fragmentArguments = new Bundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.32,12,8
6357_37,37,38,"fragmentArguments.putParcelable(AccountDetailDashboardFragment.KEY_ACCOUNT,
account);",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,5,4,1,0,1,0.55,13,8
6357_39,39,40,"fragmentArguments.putParcelable(AccountDetailDashboardFragment.KEY_USER_HANDLE,
userHandle);",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,5,4,1,0,1,0.49,15,10
6357_41,41,42,"fragmentArguments.putString(AccountDetailDashboardFragment.KEY_ACCOUNT_TYPE,
accountType);",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,5,4,1,0,1,0.53,17,11
6357_43,43,44,"fragmentArguments.putString(AccountDetailDashboardFragment.KEY_ACCOUNT_LABEL,
label.toString());",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,5,4,1,0,1,0.51,19,12
6357_45,45,46,"fragmentArguments.putInt(AccountDetailDashboardFragment.KEY_ACCOUNT_TITLE_RES,
titleResId);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,5,4,1,0,1,0.51,21,13
6357_47,47,47,"fragmentArguments.putParcelable(EXTRA_USER, userHandle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.4,23,14
6357_48,48,51,"accountTypePreferences.add(new AccountTypePreference(
prefContext, mMetricsFeatureProvider.getMetricsCategory(mParent),
account, titleResPackageName, titleResId, label,
AccountDetailDashboardFragment.class.getName(), fragmentArguments, icon));",0,0,0,0,0,0,0,0,0,0,0,4,0,1,0,0,5,4,1,0,3,0.66,24,14
6357_53,53,53,"helper.preloadDrawableForType(mContext, accountType);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.47,29,16
6357_55,55,55,"Collections.sort(accountTypePreferences, new Comparator<AccountTypePreference>() {",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,2,0.63,31,17
6357_56,56,57,"@Override
public int compare(AccountTypePreference t1, AccountTypePreference t2) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,1,0,2,0.64,32,17
6357_58,58,58,int result = t1.getSummary().toString().compareTo(t2.getSummary().toString());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,4,1,0,0,0.4,34,19
6357_59,59,60,"return result != 0
? result : t1.getTitle().toString().compareTo(t2.getTitle().toString());",0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,5,4,1,0,0,0.4,35,19
6357_63,63,63,return accountTypePreferences;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,1,0,2,0.62,39,21
6356_1,1,2,"private ArrayList<AccountTypePreference> getAccountTypePreferences(AuthenticatorHelper helper,
UserHandle userHandle, ArrayMap<String, AccountTypePreference> preferenceToRemove) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,1,0.47,6,4
6356_3,3,3,final String[] accountTypes = helper.getEnabledAccountTypes();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.46,5,3
6356_4,4,5,"final ArrayList<AccountTypePreference> accountTypePreferences =
new ArrayList<>(accountTypes.length);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,1,5,5,0,0,1,0.48,3,2
6356_7,7,54,"for (int i = 0; i < accountTypes.length; i++) {
final String accountType = accountTypes[i];
if (!accountTypeHasAnyRequestedAuthorities(helper, accountType)) {
continue;
}
final CharSequence label = helper.getLabelForType(mContext, accountType);
if (label == null) {
continue;
}
final String titleResPackageName = helper.getPackageForType(accountType);
final int titleResId = helper.getLabelIdForType(accountType);

final Account[] accounts = AccountManager.get(mContext)
.getAccountsByTypeAsUser(accountType, userHandle);
final Drawable icon = helper.getDrawableForType(mContext, accountType);
final Context prefContext = mParent.getPreferenceManager().getContext();

for (Account account : accounts) {
final AccountTypePreference preference =
preferenceToRemove.remove(AccountTypePreference.buildKey(account));
if (preference != null) {
accountTypePreferences.add(preference);
continue;
}
final ArrayList<String> auths =
helper.getAuthoritiesForAccountType(account.type);
if (!AccountRestrictionHelper.showAccount(mAuthorities, auths)) {
continue;
}
final Bundle fragmentArguments = new Bundle();
fragmentArguments.putParcelable(AccountDetailDashboardFragment.KEY_ACCOUNT,
account);
fragmentArguments.putParcelable(AccountDetailDashboardFragment.KEY_USER_HANDLE,
userHandle);
fragmentArguments.putString(AccountDetailDashboardFragment.KEY_ACCOUNT_TYPE,
accountType);
fragmentArguments.putString(AccountDetailDashboardFragment.KEY_ACCOUNT_LABEL,
label.toString());
fragmentArguments.putInt(AccountDetailDashboardFragment.KEY_ACCOUNT_TITLE_RES,
titleResId);
fragmentArguments.putParcelable(EXTRA_USER, userHandle);
accountTypePreferences.add(new AccountTypePreference(
prefContext, mMetricsFeatureProvider.getMetricsCategory(mParent),
account, titleResPackageName, titleResId, label,
AccountDetailDashboardFragment.class.getName(), fragmentArguments, icon));
}
helper.preloadDrawableForType(mContext, accountType);
}",0,0,0,1,0,0,0,0,0,28,3,48,0,1,1,0,5,5,0,0,4,0.67,0,0
6356_8,8,8,final String accountType = accountTypes[i];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.5,0,0
6356_9,9,11,"if (!accountTypeHasAnyRequestedAuthorities(helper, accountType)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,5,0,0,3,0.7,0,0
6356_10,10,10,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.41,1,0
6356_12,12,12,"final CharSequence label = helper.getLabelForType(mContext, accountType);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.43,3,2
6356_13,13,15,"if (label == null) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,5,0,0,0,0.37,4,2
6356_14,14,14,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.41,5,3
6356_16,16,16,final String titleResPackageName = helper.getPackageForType(accountType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.44,7,5
6356_17,17,17,final int titleResId = helper.getLabelIdForType(accountType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,5,5,0,0,1,0.45,8,5
6356_19,19,20,"final Account[] accounts = AccountManager.get(mContext)
.getAccountsByTypeAsUser(accountType, userHandle);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,5,5,0,0,1,0.5,10,7
6356_21,21,21,"final Drawable icon = helper.getDrawableForType(mContext, accountType);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.42,12,8
6356_22,22,22,final Context prefContext = mParent.getPreferenceManager().getContext();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,5,0,0,0,0.32,13,8
6356_24,24,52,"for (Account account : accounts) {
final AccountTypePreference preference =
preferenceToRemove.remove(AccountTypePreference.buildKey(account));
if (preference != null) {
accountTypePreferences.add(preference);
continue;
}
final ArrayList<String> auths =
helper.getAuthoritiesForAccountType(account.type);
if (!AccountRestrictionHelper.showAccount(mAuthorities, auths)) {
continue;
}
final Bundle fragmentArguments = new Bundle();
fragmentArguments.putParcelable(AccountDetailDashboardFragment.KEY_ACCOUNT,
account);
fragmentArguments.putParcelable(AccountDetailDashboardFragment.KEY_USER_HANDLE,
userHandle);
fragmentArguments.putString(AccountDetailDashboardFragment.KEY_ACCOUNT_TYPE,
accountType);
fragmentArguments.putString(AccountDetailDashboardFragment.KEY_ACCOUNT_LABEL,
label.toString());
fragmentArguments.putInt(AccountDetailDashboardFragment.KEY_ACCOUNT_TITLE_RES,
titleResId);
fragmentArguments.putParcelable(EXTRA_USER, userHandle);
accountTypePreferences.add(new AccountTypePreference(
prefContext, mMetricsFeatureProvider.getMetricsCategory(mParent),
account, titleResPackageName, titleResId, label,
AccountDetailDashboardFragment.class.getName(), fragmentArguments, icon));
}",0,0,0,1,0,0,0,0,0,15,2,29,0,1,1,0,5,5,0,0,3,0.63,15,10
6356_25,25,26,"final AccountTypePreference preference =
preferenceToRemove.remove(AccountTypePreference.buildKey(account));",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,5,0,0,1,0.5,16,10
6356_27,27,30,"if (preference != null) {
accountTypePreferences.add(preference);
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,5,0,0,1,0.51,18,12
6356_28,28,28,accountTypePreferences.add(preference);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.49,19,12
6356_29,29,29,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.41,20,13
6356_31,31,32,"final ArrayList<String> auths =
helper.getAuthoritiesForAccountType(account.type);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,5,0,0,2,0.51,22,15
6356_33,33,35,"if (!AccountRestrictionHelper.showAccount(mAuthorities, auths)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,5,0,0,3,0.73,24,16
6356_34,34,34,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.41,25,16
6356_36,36,36,final Bundle fragmentArguments = new Bundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.33,27,18
6356_37,37,38,"fragmentArguments.putParcelable(AccountDetailDashboardFragment.KEY_ACCOUNT,
account);",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,5,5,0,0,1,0.51,28,18
6356_39,39,40,"fragmentArguments.putParcelable(AccountDetailDashboardFragment.KEY_USER_HANDLE,
userHandle);",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,5,5,0,0,1,0.44,30,20
6356_41,41,42,"fragmentArguments.putString(AccountDetailDashboardFragment.KEY_ACCOUNT_TYPE,
accountType);",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,5,5,0,0,1,0.49,32,21
6356_43,43,44,"fragmentArguments.putString(AccountDetailDashboardFragment.KEY_ACCOUNT_LABEL,
label.toString());",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,5,5,0,0,1,0.47,34,22
6356_45,45,46,"fragmentArguments.putInt(AccountDetailDashboardFragment.KEY_ACCOUNT_TITLE_RES,
titleResId);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,5,5,0,0,1,0.49,36,23
6356_47,47,47,"fragmentArguments.putParcelable(EXTRA_USER, userHandle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.37,38,24
6356_48,48,51,"accountTypePreferences.add(new AccountTypePreference(
prefContext, mMetricsFeatureProvider.getMetricsCategory(mParent),
account, titleResPackageName, titleResId, label,
AccountDetailDashboardFragment.class.getName(), fragmentArguments, icon));",0,0,0,0,0,0,0,0,0,0,0,4,0,1,0,0,5,5,0,0,1,0.49,39,24
6356_53,53,53,"helper.preloadDrawableForType(mContext, accountType);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.42,44,26
6356_55,55,55,"Collections.sort(accountTypePreferences, new Comparator<AccountTypePreference>() {",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.5,46,27
6356_56,56,57,"@Override
public int compare(AccountTypePreference t1, AccountTypePreference t2) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,1,0.52,47,27
6356_58,58,58,int result = t1.getSummary().toString().compareTo(t2.getSummary().toString());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,5,0,0,0,0.44,49,29
6356_59,59,60,"return result != 0
? result : t1.getTitle().toString().compareTo(t2.getTitle().toString());",0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,5,5,0,0,0,0.4,50,29
6356_63,63,63,return accountTypePreferences;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.49,54,31
6355_1,1,1,    private void updateProfileUi(final UserInfo userInfo) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.4,8,7
6355_2,2,4,"if (mParent.getPreferenceManager() == null) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,5,0,0,0,0.37,5,5
6355_3,3,3,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.21,6,5
6355_5,5,5,final ProfileData data = mProfiles.get(userInfo.id);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,0,0,0,0.35,4,4
6355_6,6,14,"if (data != null) {
data.pendingRemoval = false;
data.userInfo = userInfo;
if (userInfo.isEnabled()) {
data.authenticatorHelper =
new AuthenticatorHelper(mContext, userInfo.getUserHandle(), this);
}
return;
}",1,0,0,0,0,0,0,0,0,5,2,9,0,1,0,0,7,5,0,0,3,0.57,0,0
6355_7,7,7,data.pendingRemoval = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,0,0,0,0.32,2,2
6355_8,8,8,data.userInfo = userInfo;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,0,0,0,0.34,1,1
6355_9,9,12,"if (userInfo.isEnabled()) {
data.authenticatorHelper =
new AuthenticatorHelper(mContext, userInfo.getUserHandle(), this);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,7,5,0,0,3,0.62,0,0
6355_10,10,11,"data.authenticatorHelper =
new AuthenticatorHelper(mContext, userInfo.getUserHandle(), this);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,5,0,0,2,0.57,0,0
6355_13,13,13,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.21,3,1
6355_15,15,15,final Context context = mContext;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.35,5,2
6355_16,16,16,final ProfileData profileData = new ProfileData();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,0,0,0,0.3,6,2
6355_17,17,17,profileData.userInfo = userInfo;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,0,0,0,0.35,7,3
6355_18,18,19,"AccessiblePreferenceCategory preferenceGroup =
mHelper.createAccessiblePreferenceCategory(mParent.getPreferenceManager().getContext());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,7,5,0,0,1,0.49,8,4
6355_20,20,20,preferenceGroup.setOrder(mAccountProfileOrder++);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,0,0,1,0.46,10,6
6355_21,21,40,"if (isSingleProfile()) {
preferenceGroup.setTitle(context.getString(R.string.account_for_section_header,
BidiFormatter.getInstance().unicodeWrap(userInfo.name)));
preferenceGroup.setContentDescription(
mContext.getString(R.string.account_settings));
} else if (userInfo.isManagedProfile()) {
preferenceGroup.setTitle(R.string.category_work);
String workGroupSummary = getWorkGroupSummary(context, userInfo);
preferenceGroup.setSummary(workGroupSummary);
preferenceGroup.setContentDescription(
mContext.getString(R.string.accessibility_category_work, workGroupSummary));
profileData.removeWorkProfilePreference = newRemoveWorkProfilePreference();
mHelper.enforceRestrictionOnPreference(profileData.removeWorkProfilePreference,
DISALLOW_REMOVE_MANAGED_PROFILE, UserHandle.myUserId());
profileData.managedProfilePreference = newManagedProfileSettings();
} else {
preferenceGroup.setTitle(R.string.category_personal);
preferenceGroup.setContentDescription(
mContext.getString(R.string.accessibility_category_personal));
}",1,0,0,0,0,0,0,0,0,13,1,20,0,1,0,0,7,5,0,0,2,0.53,11,6
6355_22,22,23,"preferenceGroup.setTitle(context.getString(R.string.account_for_section_header,
BidiFormatter.getInstance().unicodeWrap(userInfo.name)));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,7,5,0,0,1,0.45,12,7
6355_24,24,25,"preferenceGroup.setContentDescription(
mContext.getString(R.string.account_settings));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,7,5,0,0,1,0.42,14,9
6355_26,26,26,} else if (userInfo.isManagedProfile()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.37,16,10
6355_27,27,27,preferenceGroup.setTitle(R.string.category_work);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.36,17,10
6355_28,28,28,"String workGroupSummary = getWorkGroupSummary(context, userInfo);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,0,0,0,0.42,18,11
6355_29,29,29,preferenceGroup.setSummary(workGroupSummary);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,0,0,0,0.43,19,12
6355_30,30,31,"preferenceGroup.setContentDescription(
mContext.getString(R.string.accessibility_category_work, workGroupSummary));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,7,5,0,0,0,0.43,20,13
6355_32,32,32,profileData.removeWorkProfilePreference = newRemoveWorkProfilePreference();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,0,0,0,0.38,22,15
6355_33,33,34,"mHelper.enforceRestrictionOnPreference(profileData.removeWorkProfilePreference,
DISALLOW_REMOVE_MANAGED_PROFILE, UserHandle.myUserId());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,7,5,0,0,1,0.51,23,15
6355_35,35,35,profileData.managedProfilePreference = newManagedProfileSettings();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,0,0,0,0.37,25,17
6355_36,36,36,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.18,26,17
6355_37,37,37,preferenceGroup.setTitle(R.string.category_personal);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,0,0,0,0.34,27,18
6355_38,38,39,"preferenceGroup.setContentDescription(
mContext.getString(R.string.accessibility_category_personal));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,7,5,0,0,0,0.39,28,19
6355_41,41,41,final PreferenceScreen screen = mParent.getPreferenceScreen();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,0,0,0,0.35,31,21
6355_42,42,44,"if (screen != null) {
screen.addPreference(preferenceGroup);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,5,0,0,0,0.37,32,21
6355_43,43,43,screen.addPreference(preferenceGroup);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.33,33,22
6355_45,45,45,profileData.preferenceGroup = preferenceGroup;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,0,0,0,0.32,35,24
6355_46,46,52,"if (userInfo.isEnabled()) {
profileData.authenticatorHelper = new AuthenticatorHelper(context,
userInfo.getUserHandle(), this);
profileData.addAccountPreference = newAddAccountPreference();
mHelper.enforceRestrictionOnPreference(profileData.addAccountPreference,
DISALLOW_MODIFY_ACCOUNTS, userInfo.id);
}",1,0,0,0,0,0,0,0,0,3,1,7,0,1,0,0,7,5,0,0,4,0.66,36,24
6355_47,47,48,"profileData.authenticatorHelper = new AuthenticatorHelper(context,
userInfo.getUserHandle(), this);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,7,5,0,0,2,0.57,37,25
6355_49,49,49,profileData.addAccountPreference = newAddAccountPreference();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,0,0,1,0.47,39,27
6355_50,50,51,"mHelper.enforceRestrictionOnPreference(profileData.addAccountPreference,
DISALLOW_MODIFY_ACCOUNTS, userInfo.id);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,7,5,0,0,2,0.58,40,27
6355_53,53,53,"mProfiles.put(userInfo.id, profileData);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,0,0,0,0.34,43,29
6354_1,1,1,private void updateUi() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,9,3,0,0,0.36,20,14
6354_2,2,5,"if (!isAvailable()) {
Log.e(TAG, ""We should not be showing settings for a managed profile"");
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,20,9,3,0,1,0.39,16,11
6354_3,3,3,"Log.e(TAG, ""We should not be showing settings for a managed profile"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,9,3,0,1,0.39,18,12
6354_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,20,9,3,0,0,0.33,17,11
6354_7,7,9,"for (int i = 0, size = mProfiles.size(); i < size; i++) {
mProfiles.valueAt(i).pendingRemoval = true;
}",0,0,1,0,0,0,0,0,0,1,1,3,1,1,1,0,20,9,3,0,2,0.54,12,9
6354_8,8,8,mProfiles.valueAt(i).pendingRemoval = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,9,3,0,2,0.51,13,9
6354_10,10,19,"if (mUm.isRestrictedProfile()) {
UserInfo userInfo = mUm.getUserInfo(UserHandle.myUserId());
updateProfileUi(userInfo);
} else {
List<UserInfo> profiles = mUm.getProfiles(UserHandle.myUserId());
final int profilesCount = profiles.size();
for (int i = 0; i < profilesCount; i++) {
updateProfileUi(profiles.get(i));
}
}",1,0,0,0,0,0,0,0,0,7,2,10,1,1,0,0,20,9,3,0,3,0.62,2,1
6354_11,11,11,UserInfo userInfo = mUm.getUserInfo(UserHandle.myUserId());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,20,9,3,0,2,0.58,10,7
6354_12,12,12,updateProfileUi(userInfo);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,20,9,3,0,2,0.53,9,6
6354_13,13,13,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,9,3,0,0,0.35,8,5
6354_14,14,14,List<UserInfo> profiles = mUm.getProfiles(UserHandle.myUserId());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,20,9,3,0,3,0.63,7,4
6354_15,15,15,final int profilesCount = profiles.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,20,9,3,0,1,0.52,6,3
6354_16,16,18,"for (int i = 0; i < profilesCount; i++) {
updateProfileUi(profiles.get(i));
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,20,9,3,0,1,0.51,3,1
6354_17,17,17,updateProfileUi(profiles.get(i));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,9,3,0,1,0.5,4,1
6354_20,20,20,cleanUpPreferences();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,20,9,3,0,1,0.51,1,0
6354_22,22,22,final int profilesCount = mProfiles.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,20,9,3,0,1,0.52,0,0
6354_23,23,25,"for (int i = 0; i < profilesCount; i++) {
updateAccountTypes(mProfiles.valueAt(i));
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,20,9,3,0,2,0.53,1,0
6354_24,24,24,updateAccountTypes(mProfiles.valueAt(i));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,9,3,0,2,0.52,2,1
6353_1,1,1,private void updateUi() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.36,9,6
6353_2,2,5,"if (!isAvailable()) {
Log.e(TAG, ""We should not be showing settings for a managed profile"");
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,3,1,1,0,0,0.41,5,3
6353_3,3,3,"Log.e(TAG, ""We should not be showing settings for a managed profile"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.42,7,4
6353_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.26,6,3
6353_7,7,9,"for (int i = 0, size = mProfiles.size(); i < size; i++) {
mProfiles.valueAt(i).pendingRemoval = true;
}",0,0,1,0,0,0,0,0,0,1,1,3,1,1,1,0,3,1,1,0,0,0.38,1,1
6353_8,8,8,mProfiles.valueAt(i).pendingRemoval = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.39,2,1
6353_10,10,19,"if (mUm.isRestrictedProfile()) {
UserInfo userInfo = mUm.getUserInfo(UserHandle.myUserId());
updateProfileUi(userInfo);
} else {
List<UserInfo> profiles = mUm.getProfiles(UserHandle.myUserId());
final int profilesCount = profiles.size();
for (int i = 0; i < profilesCount; i++) {
updateProfileUi(profiles.get(i));
}
}",1,0,0,0,0,0,0,0,0,7,2,10,1,1,0,0,3,1,1,0,2,0.65,0,0
6353_11,11,11,UserInfo userInfo = mUm.getUserInfo(UserHandle.myUserId());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,1,0.64,0,0
6353_12,12,12,updateProfileUi(userInfo);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,1,0.56,1,0
6353_13,13,13,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.28,2,1
6353_14,14,14,List<UserInfo> profiles = mUm.getProfiles(UserHandle.myUserId());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,1,0.61,3,2
6353_15,15,15,final int profilesCount = profiles.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,0,0.37,4,3
6353_16,16,18,"for (int i = 0; i < profilesCount; i++) {
updateProfileUi(profiles.get(i));
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,3,1,1,0,0,0.41,5,4
6353_17,17,17,updateProfileUi(profiles.get(i));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.43,6,5
6353_20,20,20,cleanUpPreferences();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,1,1,0,0,0.34,9,7
6353_22,22,22,final int profilesCount = mProfiles.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,1,1,0,0,0.37,11,8
6353_23,23,25,"for (int i = 0; i < profilesCount; i++) {
updateAccountTypes(mProfiles.valueAt(i));
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,3,1,1,0,0,0.38,12,8
6353_24,24,24,updateAccountTypes(mProfiles.valueAt(i));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.38,13,9
6352_1,1,2,"@Override
protected void onPostExecute(List<Credential> credentials) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,0,0,1,0.49,5,3
6352_3,3,5,"if (!isAdded()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,5,0,0,0,0.29,2,1
6352_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.29,3,1
6352_7,7,13,"if (credentials == null || credentials.size() == 0) {
TextView emptyTextView = (TextView) getActivity().findViewById(android.R.id.empty);
emptyTextView.setText(R.string.user_credential_none_installed);
setEmptyView(emptyTextView);
} else {
setEmptyView(null);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,1,1,6,5,0,0,3,0.58,0,0
6352_8,8,8,TextView emptyTextView = (TextView) getActivity().findViewById(android.R.id.empty);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.43,0,0
6352_9,9,9,emptyTextView.setText(R.string.user_credential_none_installed);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,3,0.58,1,0
6352_10,10,10,setEmptyView(emptyTextView);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.46,2,1
6352_11,11,11,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.29,3,2
6352_12,12,12,setEmptyView(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.45,4,3
6352_15,15,16,"getListView().setAdapter(
new CredentialAdapter(credentials, UserCredentialsSettings.this));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,5,0,0,1,0.47,7,5
6351_1,1,1,"        private SortedMap<String, Credential> getCredentialsForUid(KeyStore keyStore, int uid) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,2,0.59,9,8
6351_2,2,2,"final SortedMap<String, Credential> aliasMap = new TreeMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.44,8,7
6351_3,3,32,"for (final Credential.Type type : Credential.Type.values()) {
for (final String prefix : type.prefix) {
for (final String alias : keyStore.list(prefix, uid)) {
if (UserHandle.getAppId(uid) == Process.SYSTEM_UID) {
if (alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_ENCRYPT) ||
alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_DECRYPT)) {
continue;
}
if (alias.startsWith(LockPatternUtils.SYNTHETIC_PASSWORD_KEY_PREFIX)) {
continue;
}
}
try {
if (type == Credential.Type.USER_KEY &&
!isAsymmetric(keyStore, prefix + alias, uid)) {
continue;
}
} catch (UnrecoverableKeyException e) {
Log.e(TAG, ""Unable to determine algorithm of key: "" + prefix + alias, e);
continue;
}
Credential c = aliasMap.get(alias);
if (c == null) {
c = new Credential(alias, uid);
aliasMap.put(alias, c);
}
c.storedTypes.add(type);
}
}
}",0,0,0,1,0,0,0,0,0,20,5,30,0,1,0,0,6,5,0,0,5,0.68,0,0
6351_4,4,31,"for (final String prefix : type.prefix) {
for (final String alias : keyStore.list(prefix, uid)) {
if (UserHandle.getAppId(uid) == Process.SYSTEM_UID) {
if (alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_ENCRYPT) ||
alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_DECRYPT)) {
continue;
}
if (alias.startsWith(LockPatternUtils.SYNTHETIC_PASSWORD_KEY_PREFIX)) {
continue;
}
}
try {
if (type == Credential.Type.USER_KEY &&
!isAsymmetric(keyStore, prefix + alias, uid)) {
continue;
}
} catch (UnrecoverableKeyException e) {
Log.e(TAG, ""Unable to determine algorithm of key: "" + prefix + alias, e);
continue;
}
Credential c = aliasMap.get(alias);
if (c == null) {
c = new Credential(alias, uid);
aliasMap.put(alias, c);
}
c.storedTypes.add(type);
}
}",0,0,0,1,0,0,0,0,0,19,4,28,0,0,0,0,6,5,0,0,5,0.67,0,0
6351_5,5,30,"for (final String alias : keyStore.list(prefix, uid)) {
if (UserHandle.getAppId(uid) == Process.SYSTEM_UID) {
if (alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_ENCRYPT) ||
alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_DECRYPT)) {
continue;
}
if (alias.startsWith(LockPatternUtils.SYNTHETIC_PASSWORD_KEY_PREFIX)) {
continue;
}
}
try {
if (type == Credential.Type.USER_KEY &&
!isAsymmetric(keyStore, prefix + alias, uid)) {
continue;
}
} catch (UnrecoverableKeyException e) {
Log.e(TAG, ""Unable to determine algorithm of key: "" + prefix + alias, e);
continue;
}
Credential c = aliasMap.get(alias);
if (c == null) {
c = new Credential(alias, uid);
aliasMap.put(alias, c);
}
c.storedTypes.add(type);
}",0,0,0,1,0,0,0,0,0,18,3,26,0,0,0,0,6,5,0,0,5,0.68,0,0
6351_6,6,14,"if (UserHandle.getAppId(uid) == Process.SYSTEM_UID) {
if (alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_ENCRYPT) ||
alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_DECRYPT)) {
continue;
}
if (alias.startsWith(LockPatternUtils.SYNTHETIC_PASSWORD_KEY_PREFIX)) {
continue;
}
}",1,0,0,0,0,0,0,0,0,5,2,9,0,1,0,0,6,5,0,0,4,0.62,0,0
6351_7,7,10,"if (alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_ENCRYPT) ||
alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_DECRYPT)) {
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,6,5,0,0,1,0.51,0,0
6351_8,8,8,alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_DECRYPT)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.5,2,1
6351_9,9,9,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.34,1,0
6351_11,11,13,"if (alias.startsWith(LockPatternUtils.SYNTHETIC_PASSWORD_KEY_PREFIX)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,6,5,0,0,3,0.58,0,0
6351_12,12,12,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.34,1,0
6351_15,15,23,"try {
if (type == Credential.Type.USER_KEY &&
!isAsymmetric(keyStore, prefix + alias, uid)) {
continue;
}
} catch (UnrecoverableKeyException e) {
Log.e(TAG, ""Unable to determine algorithm of key: "" + prefix + alias, e);
continue;
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,0,6,5,0,0,3,0.67,4,2
6351_16,16,19,"if (type == Credential.Type.USER_KEY &&
!isAsymmetric(keyStore, prefix + alias, uid)) {
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,6,5,0,0,3,0.7,5,2
6351_17,17,17,"!isAsymmetric(keyStore, prefix + alias, uid)) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.52,6,3
6351_18,18,18,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.34,7,4
6351_20,20,20,} catch (UnrecoverableKeyException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.5,9,6
6351_21,21,21,"Log.e(TAG, ""Unable to determine algorithm of key: "" + prefix + alias, e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.5,10,6
6351_22,22,22,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.34,11,7
6351_24,24,24,Credential c = aliasMap.get(alias);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.5,13,9
6351_25,25,28,"if (c == null) {
c = new Credential(alias, uid);
aliasMap.put(alias, c);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,6,5,0,0,1,0.46,14,9
6351_26,26,26,"c = new Credential(alias, uid);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.49,15,10
6351_27,27,27,"aliasMap.put(alias, c);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.35,16,11
6351_29,29,29,c.storedTypes.add(type);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.37,18,13
6351_33,33,33,return aliasMap;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.33,22,14
6350_1,1,1,"        private SortedMap<String, Credential> getCredentialsForUid(KeyStore keyStore, int uid) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,2,0.55,5,5
6350_2,2,2,"final SortedMap<String, Credential> aliasMap = new TreeMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.43,4,4
6350_3,3,32,"for (final Credential.Type type : Credential.Type.values()) {
for (final String prefix : type.prefix) {
for (final String alias : keyStore.list(prefix, uid)) {
if (UserHandle.getAppId(uid) == Process.SYSTEM_UID) {
if (alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_ENCRYPT) ||
alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_DECRYPT)) {
continue;
}
if (alias.startsWith(LockPatternUtils.SYNTHETIC_PASSWORD_KEY_PREFIX)) {
continue;
}
}
try {
if (type == Credential.Type.USER_KEY &&
!isAsymmetric(keyStore, prefix + alias, uid)) {
continue;
}
} catch (UnrecoverableKeyException e) {
Log.e(TAG, ""Unable to determine algorithm of key: "" + prefix + alias, e);
continue;
}
Credential c = aliasMap.get(alias);
if (c == null) {
c = new Credential(alias, uid);
aliasMap.put(alias, c);
}
c.storedTypes.add(type);
}
}
}",0,0,0,1,0,0,0,0,0,20,5,30,0,1,0,0,6,5,0,0,4,0.64,0,0
6350_4,4,31,"for (final String prefix : type.prefix) {
for (final String alias : keyStore.list(prefix, uid)) {
if (UserHandle.getAppId(uid) == Process.SYSTEM_UID) {
if (alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_ENCRYPT) ||
alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_DECRYPT)) {
continue;
}
if (alias.startsWith(LockPatternUtils.SYNTHETIC_PASSWORD_KEY_PREFIX)) {
continue;
}
}
try {
if (type == Credential.Type.USER_KEY &&
!isAsymmetric(keyStore, prefix + alias, uid)) {
continue;
}
} catch (UnrecoverableKeyException e) {
Log.e(TAG, ""Unable to determine algorithm of key: "" + prefix + alias, e);
continue;
}
Credential c = aliasMap.get(alias);
if (c == null) {
c = new Credential(alias, uid);
aliasMap.put(alias, c);
}
c.storedTypes.add(type);
}
}",0,0,0,1,0,0,0,0,0,19,4,28,0,0,0,0,6,5,0,0,4,0.64,0,0
6350_5,5,30,"for (final String alias : keyStore.list(prefix, uid)) {
if (UserHandle.getAppId(uid) == Process.SYSTEM_UID) {
if (alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_ENCRYPT) ||
alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_DECRYPT)) {
continue;
}
if (alias.startsWith(LockPatternUtils.SYNTHETIC_PASSWORD_KEY_PREFIX)) {
continue;
}
}
try {
if (type == Credential.Type.USER_KEY &&
!isAsymmetric(keyStore, prefix + alias, uid)) {
continue;
}
} catch (UnrecoverableKeyException e) {
Log.e(TAG, ""Unable to determine algorithm of key: "" + prefix + alias, e);
continue;
}
Credential c = aliasMap.get(alias);
if (c == null) {
c = new Credential(alias, uid);
aliasMap.put(alias, c);
}
c.storedTypes.add(type);
}",0,0,0,1,0,0,0,0,0,18,3,26,0,0,0,0,6,5,0,0,4,0.64,0,0
6350_6,6,14,"if (UserHandle.getAppId(uid) == Process.SYSTEM_UID) {
if (alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_ENCRYPT) ||
alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_DECRYPT)) {
continue;
}
if (alias.startsWith(LockPatternUtils.SYNTHETIC_PASSWORD_KEY_PREFIX)) {
continue;
}
}",1,0,0,0,0,0,0,0,0,5,2,9,0,1,0,0,6,5,0,0,3,0.61,0,0
6350_7,7,10,"if (alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_ENCRYPT) ||
alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_DECRYPT)) {
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,6,5,0,0,2,0.56,0,0
6350_8,8,8,alias.startsWith(LockPatternUtils.PROFILE_KEY_NAME_DECRYPT)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,2,0.55,1,0
6350_9,9,9,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.34,2,1
6350_11,11,13,"if (alias.startsWith(LockPatternUtils.SYNTHETIC_PASSWORD_KEY_PREFIX)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,6,5,0,0,1,0.48,4,3
6350_12,12,12,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.34,5,3
6350_15,15,23,"try {
if (type == Credential.Type.USER_KEY &&
!isAsymmetric(keyStore, prefix + alias, uid)) {
continue;
}
} catch (UnrecoverableKeyException e) {
Log.e(TAG, ""Unable to determine algorithm of key: "" + prefix + alias, e);
continue;
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,0,6,5,0,0,3,0.62,8,5
6350_16,16,19,"if (type == Credential.Type.USER_KEY &&
!isAsymmetric(keyStore, prefix + alias, uid)) {
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,6,5,0,0,3,0.65,9,5
6350_17,17,17,"!isAsymmetric(keyStore, prefix + alias, uid)) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.48,10,6
6350_18,18,18,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.34,11,7
6350_20,20,20,} catch (UnrecoverableKeyException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.47,13,9
6350_21,21,21,"Log.e(TAG, ""Unable to determine algorithm of key: "" + prefix + alias, e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.47,14,9
6350_22,22,22,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.34,15,10
6350_24,24,24,Credential c = aliasMap.get(alias);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.45,17,12
6350_25,25,28,"if (c == null) {
c = new Credential(alias, uid);
aliasMap.put(alias, c);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,6,5,0,0,1,0.43,18,12
6350_26,26,26,"c = new Credential(alias, uid);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.48,19,13
6350_27,27,27,"aliasMap.put(alias, c);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.32,20,14
6350_29,29,29,c.storedTypes.add(type);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.35,22,16
6350_33,33,33,return aliasMap;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.29,26,17
6349_1,1,2,"@Override
protected DialogInterface.OnClickListener getOnItemClickListener() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,6,0,0,3,0.7,18,9
6349_3,3,26,"return new DialogInterface.OnClickListener() {
public void onClick(DialogInterface dialog, int which) {
final RestrictedListPreference preference = getCustomizablePreference();
if (which < 0 || which >= preference.getEntryValues().length) {
return;
}
String entryValue = preference.getEntryValues()[which].toString();
RestrictedItem item = preference.getRestrictedItemForEntryValue(entryValue);
if (item != null) {
ListView listView = ((AlertDialog) dialog).getListView();
listView.setItemChecked(getLastCheckedPosition(), true);
RestrictedLockUtils.sendShowAdminSupportDetailsIntent(getContext(),
item.enforcedAdmin);
} else {
setClickedDialogEntryIndex(which);
}

if (getCustomizablePreference().isAutoClosePreference()) {
RestrictedListPreferenceDialogFragment.this.onClick(dialog,
DialogInterface.BUTTON_POSITIVE);
dialog.dismiss();
}
}
};",0,0,0,0,0,0,1,0,0,8,3,24,0,0,0,0,8,6,0,0,6,0.72,0,0
6349_5,5,5,final RestrictedListPreference preference = getCustomizablePreference();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,6,0,0,0,0.37,15,7
6349_6,6,8,"if (which < 0 || which >= preference.getEntryValues().length) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,8,6,0,0,0,0.33,12,5
6349_7,7,7,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.23,13,5
6349_9,9,9,String entryValue = preference.getEntryValues()[which].toString();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,8,6,0,0,0,0.31,11,4
6349_10,10,10,RestrictedItem item = preference.getRestrictedItemForEntryValue(entryValue);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,6,0,0,1,0.46,10,3
6349_11,11,18,"if (item != null) {
ListView listView = ((AlertDialog) dialog).getListView();
listView.setItemChecked(getLastCheckedPosition(), true);
RestrictedLockUtils.sendShowAdminSupportDetailsIntent(getContext(),
item.enforcedAdmin);
} else {
setClickedDialogEntryIndex(which);
}",1,0,0,0,0,0,0,0,0,1,1,8,0,1,0,1,8,6,0,0,4,0.67,2,1
6349_12,12,12,ListView listView = ((AlertDialog) dialog).getListView();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,6,0,0,1,0.56,8,1
6349_20,20,24,"if (getCustomizablePreference().isAutoClosePreference()) {
RestrictedListPreferenceDialogFragment.this.onClick(dialog,
DialogInterface.BUTTON_POSITIVE);
dialog.dismiss();
}",1,0,0,0,0,0,0,0,0,0,1,5,0,0,1,0,8,6,0,0,5,0.75,0,0
6348_1,1,2,"    @Override
public void performClick() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.32,6,4
6348_3,3,17,"if (mRequiresActiveUnlockedProfile) {
if (Utils.startQuietModeDialogIfNecessary(getContext(), UserManager.get(getContext()),
mProfileUserId)) {
return;
}

KeyguardManager manager =
(KeyguardManager) getContext().getSystemService(Context.KEYGUARD_SERVICE);
if (manager.isDeviceLocked(mProfileUserId)) {
Intent intent = manager.createConfirmDeviceCredentialIntent(
null, null, mProfileUserId);
getContext().startActivity(intent);
return;
}
}",1,0,0,0,0,0,0,0,0,8,2,15,0,0,0,1,4,3,0,0,2,0.55,0,0
6348_4,4,7,"if (Utils.startQuietModeDialogIfNecessary(getContext(), UserManager.get(getContext()),
mProfileUserId)) {
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,4,3,0,0,1,0.43,1,0
6348_5,5,5,mProfileUserId)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.53,3,1
6348_6,6,6,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.2,2,0
6348_9,9,10,"KeyguardManager manager =
(KeyguardManager) getContext().getSystemService(Context.KEYGUARD_SERVICE);",0,0,0,0,0,1,0,0,0,0,0,2,1,1,1,0,4,3,0,0,0,0.3,0,0
6348_11,11,16,"if (manager.isDeviceLocked(mProfileUserId)) {
Intent intent = manager.createConfirmDeviceCredentialIntent(
null, null, mProfileUserId);
getContext().startActivity(intent);
return;
}",1,0,0,0,0,0,0,0,0,3,1,6,1,1,0,0,4,3,0,0,1,0.49,2,1
6348_12,12,13,"Intent intent = manager.createConfirmDeviceCredentialIntent(
null, null, mProfileUserId);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,3,0,0,1,0.47,3,1
6348_14,14,14,getContext().startActivity(intent);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.3,5,3
6348_15,15,15,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.2,6,3
6348_19,19,21,"if (!mHelper.performClick()) {
super.performClick();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,4,3,0,0,0,0.3,10,5
6348_20,20,20,super.performClick();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,11,5
6347_1,1,2,"@VisibleForTesting
int getResourceId() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,11,6,1,0,1,0.47,13,7
6347_3,3,4,"int resId = getResources().getIdentifier(
REGULATORY_INFO_RESOURCE, ""drawable"", getPackageName());",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,11,6,1,0,3,0.57,11,6
6347_6,6,6,final String sku = getSku();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,11,6,1,0,1,0.31,9,5
6347_7,7,14,"if (!TextUtils.isEmpty(sku)) {
String regulatory_info_res = REGULATORY_INFO_RESOURCE + ""_"" + sku.toLowerCase();
int id = getResources().getIdentifier(
regulatory_info_res, ""drawable"", getPackageName());
if (id != 0) {
resId = id;
}
}",1,0,0,0,0,0,0,0,0,4,2,8,0,1,0,1,11,6,1,0,4,0.55,1,0
6347_8,8,8,"String regulatory_info_res = REGULATORY_INFO_RESOURCE + ""_"" + sku.toLowerCase();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,6,1,0,4,0.59,7,3
6347_9,9,10,"int id = getResources().getIdentifier(
regulatory_info_res, ""drawable"", getPackageName());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,11,6,1,0,3,0.55,5,2
6347_11,11,13,"if (id != 0) {
resId = id;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,11,6,1,0,0,0.34,2,0
6347_12,12,12,resId = id;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,0,0.36,3,0
6347_16,16,16,final String coo = getCoo();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,11,6,1,0,1,0.31,0,0
6347_17,17,25,"if (!TextUtils.isEmpty(coo) && !TextUtils.isEmpty(sku)) {
final String regulatory_info_coo_res =
REGULATORY_INFO_RESOURCE + ""_"" + sku.toLowerCase() + ""_"" + coo.toLowerCase();
final int id = getResources().getIdentifier(
regulatory_info_coo_res, ""drawable"", getPackageName());
if (id != 0) {
resId = id;
}
}",1,0,0,0,0,0,0,0,0,4,2,9,0,1,0,0,11,6,1,0,5,0.53,1,0
6347_18,18,19,"final String regulatory_info_coo_res =
REGULATORY_INFO_RESOURCE + ""_"" + sku.toLowerCase() + ""_"" + coo.toLowerCase();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,11,6,1,0,5,0.54,2,1
6347_20,20,21,"final int id = getResources().getIdentifier(
regulatory_info_coo_res, ""drawable"", getPackageName());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,11,6,1,0,4,0.54,4,3
6347_22,22,24,"if (id != 0) {
resId = id;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,11,6,1,0,0,0.34,6,4
6347_23,23,23,resId = id;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,0,0.36,7,4
6347_26,26,26,return resId;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,11,6,1,0,0,0.35,10,6
6346_1,1,2,"@VisibleForTesting
int getResourceId() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,5,1,0,1,0.47,3,1
6346_3,3,4,"int resId = getResources().getIdentifier(
REGULATORY_INFO_RESOURCE, ""drawable"", getPackageName());",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,10,5,1,0,3,0.57,1,0
6346_6,6,6,final String sku = getSku();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,10,5,1,0,1,0.31,0,0
6346_7,7,14,"if (!TextUtils.isEmpty(sku)) {
String regulatory_info_res = REGULATORY_INFO_RESOURCE + ""_"" + sku.toLowerCase();
int id = getResources().getIdentifier(
regulatory_info_res, ""drawable"", getPackageName());
if (id != 0) {
resId = id;
}
}",1,0,0,0,0,0,0,0,0,4,2,8,0,1,0,1,10,5,1,0,4,0.55,1,0
6346_8,8,8,"String regulatory_info_res = REGULATORY_INFO_RESOURCE + ""_"" + sku.toLowerCase();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,5,1,0,4,0.59,2,1
6346_9,9,10,"int id = getResources().getIdentifier(
regulatory_info_res, ""drawable"", getPackageName());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,10,5,1,0,3,0.55,3,2
6346_11,11,13,"if (id != 0) {
resId = id;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,10,5,1,0,0,0.34,5,4
6346_12,12,12,resId = id;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.36,6,4
6346_16,16,16,final String coo = getCoo();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,10,5,1,0,0,0.31,10,6
6346_17,17,25,"if (!TextUtils.isEmpty(coo) && !TextUtils.isEmpty(sku)) {
final String regulatory_info_coo_res =
REGULATORY_INFO_RESOURCE + ""_"" + sku.toLowerCase() + ""_"" + coo.toLowerCase();
final int id = getResources().getIdentifier(
regulatory_info_coo_res, ""drawable"", getPackageName());
if (id != 0) {
resId = id;
}
}",1,0,0,0,0,0,0,0,0,4,2,9,0,1,0,0,10,5,1,0,4,0.53,11,6
6346_18,18,19,"final String regulatory_info_coo_res =
REGULATORY_INFO_RESOURCE + ""_"" + sku.toLowerCase() + ""_"" + coo.toLowerCase();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,10,5,1,0,4,0.54,12,7
6346_20,20,21,"final int id = getResources().getIdentifier(
regulatory_info_coo_res, ""drawable"", getPackageName());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,10,5,1,0,3,0.54,14,9
6346_22,22,24,"if (id != 0) {
resId = id;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,10,5,1,0,0,0.34,16,10
6346_23,23,23,resId = id;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.36,17,10
6346_26,26,26,return resId;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,10,5,1,0,0,0.35,20,12
6345_1,1,2,"@VisibleForTesting
int getResourceId() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.24,0,0
6345_3,3,4,"int resId = getResources().getIdentifier(
REGULATORY_INFO_RESOURCE, ""drawable"", getPackageName());",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,4,4,0,0,2,0.41,0,0
6345_6,6,6,final String sku = getSku();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.22,3,1
6345_7,7,14,"if (!TextUtils.isEmpty(sku)) {
String regulatory_info_res = REGULATORY_INFO_RESOURCE + ""_"" + sku.toLowerCase();
int id = getResources().getIdentifier(
regulatory_info_res, ""drawable"", getPackageName());
if (id != 0) {
resId = id;
}
}",1,0,0,0,0,0,0,0,0,4,2,8,0,1,0,1,4,4,0,0,2,0.44,4,1
6345_8,8,8,"String regulatory_info_res = REGULATORY_INFO_RESOURCE + ""_"" + sku.toLowerCase();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,2,0.48,5,2
6345_9,9,10,"int id = getResources().getIdentifier(
regulatory_info_res, ""drawable"", getPackageName());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,4,0,0,2,0.42,6,3
6345_11,11,13,"if (id != 0) {
resId = id;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,4,0,0,0,0.28,8,5
6345_12,12,12,resId = id;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.29,9,5
6345_16,16,16,final String coo = getCoo();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.22,13,7
6345_17,17,25,"if (!TextUtils.isEmpty(coo) && !TextUtils.isEmpty(sku)) {
final String regulatory_info_coo_res =
REGULATORY_INFO_RESOURCE + ""_"" + sku.toLowerCase() + ""_"" + coo.toLowerCase();
final int id = getResources().getIdentifier(
regulatory_info_coo_res, ""drawable"", getPackageName());
if (id != 0) {
resId = id;
}
}",1,0,0,0,0,0,0,0,0,4,2,9,0,1,0,0,4,4,0,0,2,0.42,14,7
6345_18,18,19,"final String regulatory_info_coo_res =
REGULATORY_INFO_RESOURCE + ""_"" + sku.toLowerCase() + ""_"" + coo.toLowerCase();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,4,0,0,2,0.45,15,8
6345_20,20,21,"final int id = getResources().getIdentifier(
regulatory_info_coo_res, ""drawable"", getPackageName());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,4,0,0,2,0.41,17,10
6345_22,22,24,"if (id != 0) {
resId = id;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,4,0,0,0,0.28,19,11
6345_23,23,23,resId = id;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.29,20,11
6345_26,26,26,return resId;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.29,23,13
6344_1,1,2,"@Override
protected void onCreate(Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,4,1,0,0,0.36,52,35
6344_3,3,3,super.onCreate(savedInstanceState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.33,51,34
6344_4,4,4,Resources resources = getResources();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,4,1,0,1,0.58,50,33
6344_6,6,8,"if (!resources.getBoolean(R.bool.config_show_regulatory_info)) {
finish();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,4,1,0,2,0.55,46,31
6344_7,7,7,finish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.65,47,31
6344_10,10,12,"AlertDialog.Builder builder = new AlertDialog.Builder(this)
.setTitle(R.string.regulatory_labels)
.setOnDismissListener(this);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,7,4,1,0,0,0.41,42,30
6344_14,14,14,boolean regulatoryInfoDrawableExists = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,4,1,0,2,0.55,40,29
6344_16,16,16,final String regulatoryInfoFile = getRegulatoryInfoImageFileName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,4,1,0,0,0.35,38,28
6344_17,17,17,final Bitmap regulatoryInfoBitmap = BitmapFactory.decodeFile(regulatoryInfoFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,7,4,1,0,0,0.42,37,27
6344_19,19,21,"if (regulatoryInfoBitmap != null) {
regulatoryInfoDrawableExists = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,4,1,0,2,0.55,33,25
6344_20,20,20,regulatoryInfoDrawableExists = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,2,0.59,34,25
6344_23,23,23,int resId = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,4,1,0,0,0.37,31,24
6344_24,24,26,"if (!regulatoryInfoDrawableExists) {
resId = getResourceId();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,4,1,0,3,0.63,28,22
6344_25,25,25,resId = getResourceId();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.47,29,22
6344_27,27,35,"if (resId != 0) {
try {
Drawable d = getDrawable(resId);
regulatoryInfoDrawableExists = (d.getIntrinsicWidth() > 2
&& d.getIntrinsicHeight() > 2);
} catch (Resources.NotFoundException ignored) {
regulatoryInfoDrawableExists = false;
}
}",1,0,0,0,0,0,0,0,0,5,2,9,0,1,0,1,7,4,1,0,3,0.6,19,16
6344_28,28,34,"try {
Drawable d = getDrawable(resId);
regulatoryInfoDrawableExists = (d.getIntrinsicWidth() > 2
&& d.getIntrinsicHeight() > 2);
} catch (Resources.NotFoundException ignored) {
regulatoryInfoDrawableExists = false;
}",0,0,0,0,1,0,0,0,0,4,1,7,0,0,0,0,7,4,1,0,3,0.61,20,16
6344_29,29,29,Drawable d = getDrawable(resId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.56,25,19
6344_30,30,31,"regulatoryInfoDrawableExists = (d.getIntrinsicWidth() > 2
&& d.getIntrinsicHeight() > 2);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,7,4,1,0,2,0.56,23,18
6344_32,32,32,} catch (Resources.NotFoundException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.37,22,17
6344_33,33,33,regulatoryInfoDrawableExists = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,2,0.59,21,16
6344_37,37,37,CharSequence regulatoryText = resources.getText(R.string.regulatory_info_text);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,4,1,0,2,0.57,17,15
6344_39,39,56,"if (regulatoryInfoDrawableExists) {
View view = getLayoutInflater().inflate(R.layout.regulatory_info, null);
ImageView image = view.findViewById(R.id.regulatoryInfo);
if (regulatoryInfoBitmap != null) {
image.setImageBitmap(regulatoryInfoBitmap);
} else {
image.setImageResource(resId);
}
builder.setView(view);
builder.show();
} else if (regulatoryText.length() > 0) {
builder.setMessage(regulatoryText);
AlertDialog dialog = builder.show();
TextView messageText = (TextView) dialog.findViewById(android.R.id.message);
messageText.setGravity(Gravity.CENTER);
} else {
finish();
}",1,0,0,0,0,0,0,0,0,15,2,18,0,0,1,0,7,4,1,0,5,0.68,0,0
6344_40,40,40,"View view = getLayoutInflater().inflate(R.layout.regulatory_info, null);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,0,0.45,14,13
6344_41,41,41,ImageView image = view.findViewById(R.id.regulatoryInfo);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,0,0.4,13,12
6344_42,42,46,"if (regulatoryInfoBitmap != null) {
image.setImageBitmap(regulatoryInfoBitmap);
} else {
image.setImageResource(resId);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,7,4,1,0,1,0.5,8,8
6344_43,43,43,image.setImageBitmap(regulatoryInfoBitmap);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.43,11,10
6344_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.25,10,9
6344_45,45,45,image.setImageResource(resId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.5,9,8
6344_47,47,47,builder.setView(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,0,0.4,7,7
6344_48,48,48,builder.show();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,0,0.36,6,6
6344_49,49,49,} else if (regulatoryText.length() > 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.43,5,5
6344_50,50,50,builder.setMessage(regulatoryText);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.46,4,4
6344_51,51,51,AlertDialog dialog = builder.show();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,0,0.36,3,3
6344_52,52,52,TextView messageText = (TextView) dialog.findViewById(android.R.id.message);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.49,2,2
6344_53,53,53,messageText.setGravity(Gravity.CENTER);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.53,1,1
6344_54,54,54,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.25,0,0
6344_55,55,55,finish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.65,0,0
6343_1,1,2,"@Override
protected void onCreate(Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,6,1,0,0,0.41,49,32
6343_3,3,3,super.onCreate(savedInstanceState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.36,48,31
6343_4,4,4,Resources resources = getResources();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,6,1,0,0,0.27,47,30
6343_6,6,8,"if (!resources.getBoolean(R.bool.config_show_regulatory_info)) {
finish();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,8,6,1,0,1,0.49,43,28
6343_7,7,7,finish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.29,44,28
6343_10,10,12,"AlertDialog.Builder builder = new AlertDialog.Builder(this)
.setTitle(R.string.regulatory_labels)
.setOnDismissListener(this);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,8,6,1,0,2,0.6,39,27
6343_14,14,14,boolean regulatoryInfoDrawableExists = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,8,6,1,0,0,0.39,37,26
6343_16,16,16,final String regulatoryInfoFile = getRegulatoryInfoImageFileName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,6,1,0,0,0.35,35,25
6343_17,17,17,final Bitmap regulatoryInfoBitmap = BitmapFactory.decodeFile(regulatoryInfoFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,8,6,1,0,0,0.37,34,24
6343_19,19,21,"if (regulatoryInfoBitmap != null) {
regulatoryInfoDrawableExists = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,8,6,1,0,0,0.4,30,22
6343_20,20,20,regulatoryInfoDrawableExists = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.39,31,22
6343_23,23,23,int resId = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,6,1,0,0,0.38,28,21
6343_24,24,26,"if (!regulatoryInfoDrawableExists) {
resId = getResourceId();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,8,6,1,0,0,0.4,25,19
6343_25,25,25,resId = getResourceId();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.35,26,19
6343_27,27,35,"if (resId != 0) {
try {
Drawable d = getDrawable(resId);
regulatoryInfoDrawableExists = (d.getIntrinsicWidth() > 2
&& d.getIntrinsicHeight() > 2);
} catch (Resources.NotFoundException ignored) {
regulatoryInfoDrawableExists = false;
}
}",1,0,0,0,0,0,0,0,0,5,2,9,0,1,0,1,8,6,1,0,0,0.47,16,13
6343_28,28,34,"try {
Drawable d = getDrawable(resId);
regulatoryInfoDrawableExists = (d.getIntrinsicWidth() > 2
&& d.getIntrinsicHeight() > 2);
} catch (Resources.NotFoundException ignored) {
regulatoryInfoDrawableExists = false;
}",0,0,0,0,1,0,0,0,0,4,1,7,0,0,0,0,8,6,1,0,0,0.48,17,13
6343_29,29,29,Drawable d = getDrawable(resId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,6,1,0,0,0.42,22,16
6343_30,30,31,"regulatoryInfoDrawableExists = (d.getIntrinsicWidth() > 2
&& d.getIntrinsicHeight() > 2);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,8,6,1,0,0,0.4,20,15
6343_32,32,32,} catch (Resources.NotFoundException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.46,19,14
6343_33,33,33,regulatoryInfoDrawableExists = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.39,18,13
6343_37,37,37,CharSequence regulatoryText = resources.getText(R.string.regulatory_info_text);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,8,6,1,0,0,0.42,14,12
6343_39,39,56,"if (regulatoryInfoDrawableExists) {
View view = getLayoutInflater().inflate(R.layout.regulatory_info, null);
ImageView image = view.findViewById(R.id.regulatoryInfo);
if (regulatoryInfoBitmap != null) {
image.setImageBitmap(regulatoryInfoBitmap);
} else {
image.setImageResource(resId);
}
builder.setView(view);
builder.show();
} else if (regulatoryText.length() > 0) {
builder.setMessage(regulatoryText);
AlertDialog dialog = builder.show();
TextView messageText = (TextView) dialog.findViewById(android.R.id.message);
messageText.setGravity(Gravity.CENTER);
} else {
finish();
}",1,0,0,0,0,0,0,0,0,15,2,18,0,0,1,0,8,6,1,0,4,0.64,0,0
6343_40,40,40,"View view = getLayoutInflater().inflate(R.layout.regulatory_info, null);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,6,1,0,0,0.52,11,10
6343_41,41,41,ImageView image = view.findViewById(R.id.regulatoryInfo);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,6,1,0,0,0.47,10,9
6343_42,42,46,"if (regulatoryInfoBitmap != null) {
image.setImageBitmap(regulatoryInfoBitmap);
} else {
image.setImageResource(resId);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,8,6,1,0,1,0.5,5,5
6343_43,43,43,image.setImageBitmap(regulatoryInfoBitmap);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,1,0.49,8,7
6343_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.28,7,6
6343_45,45,45,image.setImageResource(resId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,1,0.5,6,5
6343_47,47,47,builder.setView(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,1,0,1,0.53,4,4
6343_48,48,48,builder.show();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,1,0,1,0.54,3,3
6343_49,49,49,} else if (regulatoryText.length() > 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.34,2,2
6343_50,50,50,builder.setMessage(regulatoryText);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,1,0,1,0.48,1,1
6343_51,51,51,AlertDialog dialog = builder.show();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,6,1,0,2,0.64,0,0
6343_52,52,52,TextView messageText = (TextView) dialog.findViewById(android.R.id.message);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,6,1,0,1,0.5,0,0
6343_53,53,53,messageText.setGravity(Gravity.CENTER);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,1,0,2,0.64,1,0
6343_54,54,54,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.28,2,1
6343_55,55,55,finish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.29,3,2
6342_1,1,2,"@Override
protected void onCreate(Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,12,5,3,0,0,0.32,27,16
6342_3,3,3,super.onCreate(savedInstanceState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,3,0,0,0.37,26,15
6342_4,4,4,Resources resources = getResources();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,12,5,3,0,0,0.26,25,14
6342_6,6,8,"if (!resources.getBoolean(R.bool.config_show_regulatory_info)) {
finish();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,12,5,3,0,0,0.34,21,12
6342_7,7,7,finish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,3,0,0,0.22,22,12
6342_10,10,12,"AlertDialog.Builder builder = new AlertDialog.Builder(this)
.setTitle(R.string.regulatory_labels)
.setOnDismissListener(this);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,12,5,3,0,1,0.45,17,11
6342_14,14,14,boolean regulatoryInfoDrawableExists = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,12,5,3,0,2,0.61,15,10
6342_16,16,16,final String regulatoryInfoFile = getRegulatoryInfoImageFileName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,12,5,3,0,0,0.38,13,9
6342_17,17,17,final Bitmap regulatoryInfoBitmap = BitmapFactory.decodeFile(regulatoryInfoFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,12,5,3,0,0,0.48,12,8
6342_19,19,21,"if (regulatoryInfoBitmap != null) {
regulatoryInfoDrawableExists = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,12,5,3,0,1,0.55,8,6
6342_20,20,20,regulatoryInfoDrawableExists = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,3,0,1,0.55,9,6
6342_23,23,23,int resId = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,12,5,3,0,0,0.37,6,5
6342_24,24,26,"if (!regulatoryInfoDrawableExists) {
resId = getResourceId();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,12,5,3,0,1,0.45,3,3
6342_25,25,25,resId = getResourceId();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,3,0,0,0.31,4,3
6342_27,27,35,"if (resId != 0) {
try {
Drawable d = getDrawable(resId);
regulatoryInfoDrawableExists = (d.getIntrinsicWidth() > 2
&& d.getIntrinsicHeight() > 2);
} catch (Resources.NotFoundException ignored) {
regulatoryInfoDrawableExists = false;
}
}",1,0,0,0,0,0,0,0,0,5,2,9,0,1,0,1,12,5,3,0,5,0.65,0,0
6342_28,28,34,"try {
Drawable d = getDrawable(resId);
regulatoryInfoDrawableExists = (d.getIntrinsicWidth() > 2
&& d.getIntrinsicHeight() > 2);
} catch (Resources.NotFoundException ignored) {
regulatoryInfoDrawableExists = false;
}",0,0,0,0,1,0,0,0,0,4,1,7,0,0,0,0,12,5,3,0,5,0.66,0,0
6342_29,29,29,Drawable d = getDrawable(resId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,5,3,0,1,0.51,0,0
6342_30,30,31,"regulatoryInfoDrawableExists = (d.getIntrinsicWidth() > 2
&& d.getIntrinsicHeight() > 2);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,12,5,3,0,4,0.67,0,0
6342_32,32,32,} catch (Resources.NotFoundException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,3,0,0,0.29,2,1
6342_33,33,33,regulatoryInfoDrawableExists = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,3,0,2,0.65,3,1
6342_37,37,37,CharSequence regulatoryText = resources.getText(R.string.regulatory_info_text);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,12,5,3,0,0,0.35,7,3
6342_39,39,56,"if (regulatoryInfoDrawableExists) {
View view = getLayoutInflater().inflate(R.layout.regulatory_info, null);
ImageView image = view.findViewById(R.id.regulatoryInfo);
if (regulatoryInfoBitmap != null) {
image.setImageBitmap(regulatoryInfoBitmap);
} else {
image.setImageResource(resId);
}
builder.setView(view);
builder.show();
} else if (regulatoryText.length() > 0) {
builder.setMessage(regulatoryText);
AlertDialog dialog = builder.show();
TextView messageText = (TextView) dialog.findViewById(android.R.id.message);
messageText.setGravity(Gravity.CENTER);
} else {
finish();
}",1,0,0,0,0,0,0,0,0,15,2,18,0,0,1,0,12,5,3,0,2,0.56,9,4
6342_40,40,40,"View view = getLayoutInflater().inflate(R.layout.regulatory_info, null);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,5,3,0,0,0.45,10,4
6342_41,41,41,ImageView image = view.findViewById(R.id.regulatoryInfo);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,5,3,0,0,0.42,11,5
6342_42,42,46,"if (regulatoryInfoBitmap != null) {
image.setImageBitmap(regulatoryInfoBitmap);
} else {
image.setImageResource(resId);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,12,5,3,0,1,0.55,12,6
6342_43,43,43,image.setImageBitmap(regulatoryInfoBitmap);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,3,0,1,0.55,13,7
6342_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,3,0,0,0.35,14,8
6342_45,45,45,image.setImageResource(resId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,3,0,1,0.48,15,9
6342_47,47,47,builder.setView(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,5,3,0,1,0.48,17,11
6342_48,48,48,builder.show();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,5,3,0,0,0.27,18,11
6342_49,49,49,} else if (regulatoryText.length() > 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,3,0,0,0.39,19,12
6342_50,50,50,builder.setMessage(regulatoryText);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,5,3,0,1,0.4,20,13
6342_51,51,51,AlertDialog dialog = builder.show();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,5,3,0,0,0.27,21,14
6342_52,52,52,TextView messageText = (TextView) dialog.findViewById(android.R.id.message);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,5,3,0,0,0.36,22,15
6342_53,53,53,messageText.setGravity(Gravity.CENTER);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,5,3,0,1,0.56,23,16
6342_54,54,54,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,3,0,0,0.35,24,17
6342_55,55,55,finish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,3,0,0,0.22,25,18
5912_1,1,1,public void writeAllState() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.52,3,2
5912_2,2,2,synchronized (mAuthorities) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.38,2,1
5912_4,4,6,"if (mNumPendingFinished > 0) {
writePendingOperationsLocked();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,1,0.54,0,0
5912_5,5,5,writePendingOperationsLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.6,0,0
5912_8,8,8,writeStatusLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,1,0.63,3,1
5912_9,9,9,writeStatisticsLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.66,4,1
5911_1,1,2,"public void stopSyncEvent(long historyId, long elapsedTime, String resultMessage,
long downstreamActivity, long upstreamActivity) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.36,63,46
5911_3,3,3,synchronized (mAuthorities) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.33,62,45
5911_4,4,6,"if (DEBUG) {
Log.v(TAG, ""stopSyncEvent: historyId="" + historyId);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,0,0.28,59,43
5911_5,5,5,"Log.v(TAG, ""stopSyncEvent: historyId="" + historyId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.28,60,43
5911_7,7,7,SyncHistoryItem item = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.29,58,42
5911_8,8,8,int i = mSyncHistory.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.29,57,41
5911_9,9,16,"while (i > 0) {
i--;
item = mSyncHistory.get(i);
if (item.historyId == historyId) {
break;
}
item = null;
}",0,1,0,0,0,0,0,0,0,5,2,8,0,1,0,1,4,3,0,0,0,0.3,49,35
5911_10,10,10,i--;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.0,55,39
5911_11,11,11,item = mSyncHistory.get(i);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.29,54,38
5911_12,12,14,"if (item.historyId == historyId) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,0,0.3,51,36
5911_13,13,13,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.2,52,36
5911_15,15,15,item = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.24,50,35
5911_18,18,21,"if (item == null) {
Log.w(TAG, ""stopSyncEvent: no history for id "" + historyId);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,4,3,0,0,0,0.29,44,32
5911_19,19,19,"Log.w(TAG, ""stopSyncEvent: no history for id "" + historyId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.29,46,33
5911_20,20,20,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.16,45,32
5911_23,23,23,item.elapsedTime = elapsedTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.36,42,31
5911_24,24,24,item.event = EVENT_STOP;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.23,41,30
5911_25,25,25,item.mesg = resultMessage;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.47,40,29
5911_26,26,26,item.downstreamActivity = downstreamActivity;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.38,39,28
5911_27,27,27,item.upstreamActivity = upstreamActivity;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,0,0.25,38,27
5911_29,29,29,SyncStatusInfo status = getOrCreateSyncStatusLocked(item.authorityId);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.41,36,26
5911_31,31,31,status.numSyncs++;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.47,34,25
5911_32,32,32,status.totalElapsedTime += elapsedTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.46,33,24
5911_33,33,33,switch (item.source) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.29,32,23
5911_34,34,35,"case SOURCE_LOCAL:
status.numSourceLocal++;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.38,30,22
5911_36,36,36,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.2,29,21
5911_37,37,38,"case SOURCE_POLL:
status.numSourcePoll++;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.41,27,20
5911_39,39,39,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.2,26,19
5911_40,40,41,"case SOURCE_USER:
status.numSourceUser++;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.4,24,18
5911_42,42,42,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.2,23,17
5911_43,43,44,"case SOURCE_SERVER:
status.numSourceServer++;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.39,21,16
5911_45,45,45,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.2,20,15
5911_46,46,47,"case SOURCE_PERIODIC:
status.numSourcePeriodic++;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.4,18,14
5911_48,48,48,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.2,17,13
5911_51,51,51,boolean writeStatisticsNow = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.37,14,12
5911_52,52,52,int day = getCurrentDayLocked();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.33,13,11
5911_53,53,60,"if (mDayStats[0] == null) {
mDayStats[0] = new DayStats(day);
} else if (day != mDayStats[0].day) {
System.arraycopy(mDayStats, 0, mDayStats, 1, mDayStats.length-1);
mDayStats[0] = new DayStats(day);
writeStatisticsNow = true;
} else if (mDayStats[0] == null) {
}",1,0,0,0,0,0,0,0,0,6,1,8,0,1,0,0,4,3,0,0,0,0.39,5,4
5911_54,54,54,mDayStats[0] = new DayStats(day);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.36,11,9
5911_55,55,55,} else if (day != mDayStats[0].day) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.37,10,8
5911_56,56,56,"System.arraycopy(mDayStats, 0, mDayStats, 1, mDayStats.length-1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,9,7
5911_57,57,57,mDayStats[0] = new DayStats(day);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.36,8,6
5911_58,58,58,writeStatisticsNow = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,7,5
5911_59,59,59,} else if (mDayStats[0] == null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.34,6,4
5911_61,61,61,final DayStats ds = mDayStats[0];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.35,4,3
5911_63,63,63,final long lastSyncTime = (item.eventTime + elapsedTime);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.34,2,2
5911_64,64,64,boolean writeStatusNow = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.44,1,1
5911_65,65,89,"if (MESG_SUCCESS.equals(resultMessage)) {
if (status.lastSuccessTime == 0 || status.lastFailureTime != 0) {
writeStatusNow = true;
}
status.lastSuccessTime = lastSyncTime;
status.lastSuccessSource = item.source;
status.lastFailureTime = 0;
status.lastFailureSource = -1;
status.lastFailureMesg = null;
status.initialFailureTime = 0;
ds.successCount++;
ds.successTime += elapsedTime;
} else if (!MESG_CANCELED.equals(resultMessage)) {
if (status.lastFailureTime == 0) {
writeStatusNow = true;
}
status.lastFailureTime = lastSyncTime;
status.lastFailureSource = item.source;
status.lastFailureMesg = resultMessage;
if (status.initialFailureTime == 0) {
status.initialFailureTime = lastSyncTime;
}
ds.failureCount++;
ds.failureTime += elapsedTime;
}",1,0,0,0,0,0,0,0,0,20,2,25,0,1,0,1,4,3,0,0,1,0.6,0,0
5911_66,66,68,"if (status.lastSuccessTime == 0 || status.lastFailureTime != 0) {
writeStatusNow = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,1,0.59,0,0
5911_67,67,67,writeStatusNow = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.44,1,0
5911_69,69,69,status.lastSuccessTime = lastSyncTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.59,3,2
5911_70,70,70,status.lastSuccessSource = item.source;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.56,4,2
5911_71,71,71,status.lastFailureTime = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.46,5,3
5911_72,72,72,status.lastFailureSource = -1;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.43,6,4
5911_73,73,73,status.lastFailureMesg = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.51,7,5
5911_74,74,74,status.initialFailureTime = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.45,8,6
5911_75,75,75,ds.successCount++;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.65,9,7
5911_76,76,76,ds.successTime += elapsedTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.61,10,8
5911_77,77,77,} else if (!MESG_CANCELED.equals(resultMessage)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.43,11,9
5911_78,78,80,"if (status.lastFailureTime == 0) {
writeStatusNow = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,0,0.46,12,10
5911_79,79,79,writeStatusNow = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.44,13,11
5911_81,81,81,status.lastFailureTime = lastSyncTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.45,15,13
5911_82,82,82,status.lastFailureSource = item.source;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.4,16,13
5911_83,83,83,status.lastFailureMesg = resultMessage;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.53,17,14
5911_84,84,86,"if (status.initialFailureTime == 0) {
status.initialFailureTime = lastSyncTime;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,0,0.44,18,15
5911_85,85,85,status.initialFailureTime = lastSyncTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.44,19,16
5911_87,87,87,ds.failureCount++;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.43,21,18
5911_88,88,88,ds.failureTime += elapsedTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.44,22,18
5911_91,91,96,"if (writeStatusNow) {
writeStatusLocked();
} else if (!hasMessages(MSG_WRITE_STATUS)) {
sendMessageDelayed(obtainMessage(MSG_WRITE_STATUS),
WRITE_STATUS_DELAY);
}",1,0,0,0,0,0,0,0,0,3,1,6,1,0,1,0,4,3,0,0,0,0.46,25,20
5911_92,92,92,writeStatusLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.42,26,20
5911_93,93,93,} else if (!hasMessages(MSG_WRITE_STATUS)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.46,27,21
5911_94,94,95,"sendMessageDelayed(obtainMessage(MSG_WRITE_STATUS),
WRITE_STATUS_DELAY);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.46,28,22
5911_97,97,102,"if (writeStatisticsNow) {
writeStatisticsLocked();
} else if (!hasMessages(MSG_WRITE_STATISTICS)) {
sendMessageDelayed(obtainMessage(MSG_WRITE_STATISTICS),
WRITE_STATISTICS_DELAY);
}",1,0,0,0,0,0,0,0,0,3,1,6,1,0,0,0,4,3,0,0,0,0.41,31,24
5911_98,98,98,writeStatisticsLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,32,24
5911_99,99,99,} else if (!hasMessages(MSG_WRITE_STATISTICS)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.39,33,25
5911_100,100,101,"sendMessageDelayed(obtainMessage(MSG_WRITE_STATISTICS),
WRITE_STATISTICS_DELAY);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.42,34,26
5911_105,105,105,reportChange(ContentResolver.SYNC_OBSERVER_TYPE_STATUS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.43,39,28
5910_1,1,1,public SyncInfo addActiveSync(SyncManager.ActiveSyncContext activeSyncContext) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.37,15,5
5910_2,2,2,final SyncInfo syncInfo;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.36,14,4
5910_3,3,3,synchronized (mAuthorities) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.45,13,3
5910_4,4,10,"if (DEBUG) {
Log.v(TAG, ""setActiveSync: account=""
+ activeSyncContext.mSyncOperation.account
+ "" auth="" + activeSyncContext.mSyncOperation.authority
+ "" src="" + activeSyncContext.mSyncOperation.syncSource
+ "" extras="" + activeSyncContext.mSyncOperation.extras);
}",1,0,0,0,0,0,0,0,0,1,1,7,0,1,0,0,4,3,0,0,0,0.39,6,1
5910_5,5,9,"Log.v(TAG, ""setActiveSync: account=""
+ activeSyncContext.mSyncOperation.account
+ "" auth="" + activeSyncContext.mSyncOperation.authority
+ "" src="" + activeSyncContext.mSyncOperation.syncSource
+ "" extras="" + activeSyncContext.mSyncOperation.extras);",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,4,3,0,0,0,0.39,7,1
5910_11,11,16,"AuthorityInfo authority = getOrCreateAuthorityLocked(
activeSyncContext.mSyncOperation.account,
activeSyncContext.mSyncOperation.userId,
activeSyncContext.mSyncOperation.authority,
-1 ,
true );",0,0,0,0,0,1,0,0,0,0,0,6,0,1,0,0,4,3,0,0,0,0.39,0,0
5910_17,17,19,"syncInfo = new SyncInfo(authority.ident,
authority.account, authority.authority,
activeSyncContext.mStartTime);",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,4,3,0,0,0,0.38,1,0
5910_20,20,20,getCurrentSyncs(authority.userId).add(syncInfo);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.36,4,1
5910_23,23,23,reportActiveChange();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.48,7,2
5910_24,24,24,return syncInfo;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.34,8,2
5909_1,1,1,public SyncInfo addActiveSync(SyncManager.ActiveSyncContext activeSyncContext) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.41,14,5
5909_2,2,2,final SyncInfo syncInfo;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.41,13,4
5909_3,3,3,synchronized (mAuthorities) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.56,12,3
5909_4,4,10,"if (DEBUG) {
Log.v(TAG, ""setActiveSync: account=""
+ activeSyncContext.mSyncOperation.account
+ "" auth="" + activeSyncContext.mSyncOperation.authority
+ "" src="" + activeSyncContext.mSyncOperation.syncSource
+ "" extras="" + activeSyncContext.mSyncOperation.extras);
}",1,0,0,0,0,0,0,0,0,1,1,7,0,1,0,0,6,3,0,0,1,0.53,5,1
5909_5,5,9,"Log.v(TAG, ""setActiveSync: account=""
+ activeSyncContext.mSyncOperation.account
+ "" auth="" + activeSyncContext.mSyncOperation.authority
+ "" src="" + activeSyncContext.mSyncOperation.syncSource
+ "" extras="" + activeSyncContext.mSyncOperation.extras);",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,6,3,0,0,1,0.53,6,1
5909_11,11,16,"AuthorityInfo authority = getOrCreateAuthorityLocked(
activeSyncContext.mSyncOperation.account,
activeSyncContext.mSyncOperation.userId,
activeSyncContext.mSyncOperation.authority,
-1 ,
true );",0,0,0,0,0,1,0,0,0,0,0,6,0,1,0,0,6,3,0,0,2,0.63,0,0
5909_17,17,19,"syncInfo = new SyncInfo(authority.ident,
authority.account, authority.authority,
activeSyncContext.mStartTime);",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,6,3,0,0,2,0.7,2,0
5909_20,20,20,getCurrentSyncs(authority.userId).add(syncInfo);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.52,5,1
5909_23,23,23,reportActiveChange();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,0,0,0,0.24,8,2
5909_24,24,24,return syncInfo;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.37,9,2
5908_1,1,1,"public void doDatabaseCleanup(Account[] accounts, int userId) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.38,18,13
5908_2,2,2,synchronized (mAuthorities) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.44,17,12
5908_3,3,3,"if (DEBUG) Log.v(TAG, ""Updating for new accounts..."");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.27,16,11
5908_4,4,4,SparseArray<AuthorityInfo> removing = new SparseArray<AuthorityInfo>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.4,15,10
5908_5,5,5,Iterator<AccountInfo> accIt = mAccounts.values().iterator();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.34,14,9
5908_6,6,18,"while (accIt.hasNext()) {
AccountInfo acc = accIt.next();
if (!ArrayUtils.contains(accounts, acc.accountAndUser.account)
&& acc.accountAndUser.userId == userId) {
if (DEBUG) {
Log.v(TAG, ""Account removed: "" + acc.accountAndUser);
}
for (AuthorityInfo auth : acc.authorities.values()) {
removing.put(auth.ident, auth);
}
accIt.remove();
}
}",0,1,0,0,0,0,0,0,0,8,3,13,1,1,0,1,3,2,0,0,0,0.43,1,0
5908_7,7,7,AccountInfo acc = accIt.next();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.37,12,7
5908_8,8,17,"if (!ArrayUtils.contains(accounts, acc.accountAndUser.account)
&& acc.accountAndUser.userId == userId) {
if (DEBUG) {
Log.v(TAG, ""Account removed: "" + acc.accountAndUser);
}
for (AuthorityInfo auth : acc.authorities.values()) {
removing.put(auth.ident, auth);
}
accIt.remove();
}",1,0,0,0,0,0,0,0,0,6,2,10,0,1,0,0,3,2,0,0,0,0.43,2,0
5908_9,9,9,&& acc.accountAndUser.userId == userId) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.4,10,5
5908_10,10,12,"if (DEBUG) {
Log.v(TAG, ""Account removed: "" + acc.accountAndUser);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,2,0,0,0,0.38,7,3
5908_11,11,11,"Log.v(TAG, ""Account removed: "" + acc.accountAndUser);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.38,8,3
5908_13,13,15,"for (AuthorityInfo auth : acc.authorities.values()) {
removing.put(auth.ident, auth);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,0,3,2,0,0,0,0.44,4,1
5908_14,14,14,"removing.put(auth.ident, auth);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.42,5,1
5908_16,16,16,accIt.remove();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.44,3,0
5908_20,20,20,int i = removing.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,3,2,0,0,0,0.35,0,0
5908_21,21,45,"if (i > 0) {
while (i > 0) {
i--;
int ident = removing.keyAt(i);
mAuthorities.remove(ident);
int j = mSyncStatus.size();
while (j > 0) {
j--;
if (mSyncStatus.keyAt(j) == ident) {
mSyncStatus.remove(mSyncStatus.keyAt(j));
}
}
j = mSyncHistory.size();
while (j > 0) {
j--;
if (mSyncHistory.get(j).authorityId == ident) {
mSyncHistory.remove(j);
}
}
}
writeAccountInfoLocked();
writeStatusLocked();
writePendingOperationsLocked();
writeStatisticsLocked();
}",1,0,0,0,0,0,0,0,0,18,4,25,1,1,0,0,3,2,0,0,0,0.44,1,0
5908_22,22,40,"while (i > 0) {
i--;
int ident = removing.keyAt(i);
mAuthorities.remove(ident);
int j = mSyncStatus.size();
while (j > 0) {
j--;
if (mSyncStatus.keyAt(j) == ident) {
mSyncStatus.remove(mSyncStatus.keyAt(j));
}
}
j = mSyncHistory.size();
while (j > 0) {
j--;
if (mSyncHistory.get(j).authorityId == ident) {
mSyncHistory.remove(j);
}
}
}",0,1,0,0,0,0,0,0,0,13,3,19,0,0,0,0,3,2,0,0,0,0.45,2,1
5908_23,23,23,i--;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.0,3,2
5908_24,24,24,int ident = removing.keyAt(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.38,4,3
5908_25,25,25,mAuthorities.remove(ident);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.45,5,4
5908_26,26,26,int j = mSyncStatus.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.43,6,5
5908_27,27,32,"while (j > 0) {
j--;
if (mSyncStatus.keyAt(j) == ident) {
mSyncStatus.remove(mSyncStatus.keyAt(j));
}
}",0,1,0,0,0,0,0,0,0,3,2,6,0,1,0,0,3,2,0,0,0,0.45,7,6
5908_28,28,28,j--;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.51,8,7
5908_29,29,31,"if (mSyncStatus.keyAt(j) == ident) {
mSyncStatus.remove(mSyncStatus.keyAt(j));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,2,0,0,0,0.45,9,8
5908_30,30,30,mSyncStatus.remove(mSyncStatus.keyAt(j));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.45,10,9
5908_33,33,33,j = mSyncHistory.size();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.44,13,11
5908_34,34,39,"while (j > 0) {
j--;
if (mSyncHistory.get(j).authorityId == ident) {
mSyncHistory.remove(j);
}
}",0,1,0,0,0,0,0,0,0,3,2,6,0,1,0,0,3,2,0,0,0,0.45,14,11
5908_35,35,35,j--;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.51,15,12
5908_36,36,38,"if (mSyncHistory.get(j).authorityId == ident) {
mSyncHistory.remove(j);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,2,0,0,0,0.45,16,13
5908_37,37,37,mSyncHistory.remove(j);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.47,17,14
5908_41,41,41,writeAccountInfoLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.36,21,16
5908_42,42,42,writeStatusLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.4,22,16
5908_43,43,43,writePendingOperationsLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.38,23,17
5908_44,44,44,writeStatisticsLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.41,24,18
5907_1,1,1,public PendingOperation insertIntoPending(PendingOperation op) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.4,13,4
5907_2,2,2,synchronized (mAuthorities) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.51,12,3
5907_3,3,9,"if (DEBUG) {
Log.v(TAG, ""insertIntoPending: account="" + op.account
+ "" user="" + op.userId
+ "" auth="" + op.authority
+ "" src="" + op.syncSource
+ "" extras="" + op.extras);
}",1,0,0,0,0,0,0,0,0,1,1,7,0,0,0,1,3,2,0,0,1,0.53,5,1
5907_4,4,8,"Log.v(TAG, ""insertIntoPending: account="" + op.account
+ "" user="" + op.userId
+ "" auth="" + op.authority
+ "" src="" + op.syncSource
+ "" extras="" + op.extras);",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,3,2,0,0,1,0.53,6,1
5907_11,11,14,"AuthorityInfo authority = getOrCreateAuthorityLocked(op.account, op.userId,
op.authority,
-1 ,
true );",0,0,0,0,0,1,0,0,0,0,0,4,0,1,1,0,3,2,0,0,1,0.54,0,0
5907_15,15,17,"if (authority == null) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,2,0,0,0,0.39,1,0
5907_16,16,16,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.21,2,0
5907_19,19,19,op = new PendingOperation(op);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.39,5,2
5907_20,20,20,op.authorityId = authority.ident;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.46,6,2
5907_21,21,21,mPendingOperations.add(op);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.39,7,3
5907_22,22,22,appendPendingOperationLocked(op);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.39,8,4
5907_24,24,24,SyncStatusInfo status = getOrCreateSyncStatusLocked(authority.ident);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.44,10,6
5907_25,25,25,status.pending = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.31,11,6
5907_28,28,28,reportChange(ContentResolver.SYNC_OBSERVER_TYPE_PENDING);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.4,14,8
5907_29,29,29,return op;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.34,15,8
5906_1,1,1,"public AuthorityInfo getOrCreateAuthority(Account account, int userId, String authority) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.37,4,2
5906_2,2,2,synchronized (mAuthorities) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.45,3,1
5906_3,3,5,"return getOrCreateAuthorityLocked(account, userId, authority,
-1 ,
true );",0,0,0,0,0,0,1,0,0,0,0,3,0,0,0,0,4,3,0,0,0,0.35,0,0
5905_1,1,1,"public AuthorityInfo getOrCreateAuthority(Account account, int userId, String authority) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,2,0.65,3,2
5905_2,2,2,synchronized (mAuthorities) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.56,2,1
5905_3,3,5,"return getOrCreateAuthorityLocked(account, userId, authority,
-1 ,
true );",0,0,0,0,0,0,1,0,0,0,0,3,0,0,0,0,6,3,0,0,2,0.62,0,0
5904_1,1,3,"private void updateOrRemovePeriodicSync(Account account, int userId, String providerName,
Bundle extras,
long period, boolean add) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,10,6,1,0,3,0.58,44,34
5904_4,4,6,"if (period <= 0) {
period = 0;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,6,1,0,1,0.59,41,32
5904_5,5,5,period = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,1,0.59,42,32
5904_7,7,9,"if (extras == null) {
extras = new Bundle();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,6,1,0,0,0.35,38,30
5904_8,8,8,extras = new Bundle();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.36,39,30
5904_10,10,14,"if (DEBUG) {
Log.v(TAG, ""addOrRemovePeriodicSync: "" + account + "", user "" + userId
+ "", provider "" + providerName
+ "" -> period "" + period + "", extras "" + extras);
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,10,6,1,0,3,0.58,33,28
5904_11,11,13,"Log.v(TAG, ""addOrRemovePeriodicSync: "" + account + "", user "" + userId
+ "", provider "" + providerName
+ "" -> period "" + period + "", extras "" + extras);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,10,6,1,0,3,0.59,34,28
5904_15,15,15,synchronized (mAuthorities) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.53,32,27
5904_16,16,62,"try {
AuthorityInfo authority =
getOrCreateAuthorityLocked(account, userId, providerName, -1, false);
if (add) {
boolean alreadyPresent = false;
for (int i = 0, N = authority.periodicSyncs.size(); i < N; i++) {
Pair<Bundle, Long> syncInfo = authority.periodicSyncs.get(i);
final Bundle existingExtras = syncInfo.first;
if (equals(existingExtras, extras)) {
if (syncInfo.second == period) {
return;
}
authority.periodicSyncs.set(i, Pair.create(extras, period));
alreadyPresent = true;
break;
}
}
if (!alreadyPresent) {
authority.periodicSyncs.add(Pair.create(extras, period));
SyncStatusInfo status = getOrCreateSyncStatusLocked(authority.ident);
status.setPeriodicSyncTime(authority.periodicSyncs.size() - 1, 0);
}
} else {
SyncStatusInfo status = mSyncStatus.get(authority.ident);
boolean changed = false;
Iterator<Pair<Bundle, Long>> iterator = authority.periodicSyncs.iterator();
int i = 0;
while (iterator.hasNext()) {
Pair<Bundle, Long> syncInfo = iterator.next();
if (equals(syncInfo.first, extras)) {
iterator.remove();
changed = true;
if (status != null) {
status.removePeriodicSyncTime(i);
}
} else {
i++;
}
}
if (!changed) {
return;
}
}
} finally {
writeAccountInfoLocked();
writeStatusLocked();
}",0,0,0,0,1,0,0,0,0,35,5,47,0,0,0,0,10,6,1,0,4,0.65,0,0
5904_17,17,18,"AuthorityInfo authority =
getOrCreateAuthorityLocked(account, userId, providerName, -1, false);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,10,6,1,0,0,0.45,29,25
5904_19,19,58,"if (add) {
boolean alreadyPresent = false;
for (int i = 0, N = authority.periodicSyncs.size(); i < N; i++) {
Pair<Bundle, Long> syncInfo = authority.periodicSyncs.get(i);
final Bundle existingExtras = syncInfo.first;
if (equals(existingExtras, extras)) {
if (syncInfo.second == period) {
return;
}
authority.periodicSyncs.set(i, Pair.create(extras, period));
alreadyPresent = true;
break;
}
}
if (!alreadyPresent) {
authority.periodicSyncs.add(Pair.create(extras, period));
SyncStatusInfo status = getOrCreateSyncStatusLocked(authority.ident);
status.setPeriodicSyncTime(authority.periodicSyncs.size() - 1, 0);
}
} else {
SyncStatusInfo status = mSyncStatus.get(authority.ident);
boolean changed = false;
Iterator<Pair<Bundle, Long>> iterator = authority.periodicSyncs.iterator();
int i = 0;
while (iterator.hasNext()) {
Pair<Bundle, Long> syncInfo = iterator.next();
if (equals(syncInfo.first, extras)) {
iterator.remove();
changed = true;
if (status != null) {
status.removePeriodicSyncTime(i);
}
} else {
i++;
}
}
if (!changed) {
return;
}
}",1,0,0,0,0,0,0,0,0,30,4,40,0,1,0,0,10,6,1,0,4,0.66,0,0
5904_20,20,20,boolean alreadyPresent = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,6,1,0,0,0.29,27,23
5904_21,21,32,"for (int i = 0, N = authority.periodicSyncs.size(); i < N; i++) {
Pair<Bundle, Long> syncInfo = authority.periodicSyncs.get(i);
final Bundle existingExtras = syncInfo.first;
if (equals(existingExtras, extras)) {
if (syncInfo.second == period) {
return;
}
authority.periodicSyncs.set(i, Pair.create(extras, period));
alreadyPresent = true;
break;
}
}",0,0,1,0,0,0,0,0,0,8,3,12,1,1,0,0,10,6,1,0,2,0.57,15,14
5904_22,22,22,"Pair<Bundle, Long> syncInfo = authority.periodicSyncs.get(i);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,6,1,0,2,0.6,25,21
5904_23,23,23,final Bundle existingExtras = syncInfo.first;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,6,1,0,1,0.48,24,20
5904_24,24,31,"if (equals(existingExtras, extras)) {
if (syncInfo.second == period) {
return;
}
authority.periodicSyncs.set(i, Pair.create(extras, period));
alreadyPresent = true;
break;
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,0,10,6,1,0,2,0.56,16,14
5904_25,25,27,"if (syncInfo.second == period) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,6,1,0,2,0.58,20,17
5904_26,26,26,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.19,21,17
5904_28,28,28,"authority.periodicSyncs.set(i, Pair.create(extras, period));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,2,0.62,19,16
5904_29,29,29,alreadyPresent = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.31,18,15
5904_30,30,30,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,10,6,1,0,0,0.18,17,14
5904_33,33,37,"if (!alreadyPresent) {
authority.periodicSyncs.add(Pair.create(extras, period));
SyncStatusInfo status = getOrCreateSyncStatusLocked(authority.ident);
status.setPeriodicSyncTime(authority.periodicSyncs.size() - 1, 0);
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,0,10,6,1,0,3,0.65,10,10
5904_34,34,34,"authority.periodicSyncs.add(Pair.create(extras, period));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,6,1,0,2,0.63,13,12
5904_35,35,35,SyncStatusInfo status = getOrCreateSyncStatusLocked(authority.ident);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,6,1,0,2,0.64,12,11
5904_36,36,36,"status.setPeriodicSyncTime(authority.periodicSyncs.size() - 1, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,6,1,0,3,0.66,11,10
5904_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.2,9,9
5904_39,39,39,SyncStatusInfo status = mSyncStatus.get(authority.ident);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,6,1,0,2,0.68,8,8
5904_40,40,40,boolean changed = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.22,7,7
5904_41,41,41,"Iterator<Pair<Bundle, Long>> iterator = authority.periodicSyncs.iterator();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,6,1,0,2,0.58,6,6
5904_42,42,42,int i = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,6,1,0,0,0.29,5,5
5904_43,43,54,"while (iterator.hasNext()) {
Pair<Bundle, Long> syncInfo = iterator.next();
if (equals(syncInfo.first, extras)) {
iterator.remove();
changed = true;
if (status != null) {
status.removePeriodicSyncTime(i);
}
} else {
i++;
}
}",0,1,0,0,0,0,0,0,0,8,3,12,0,1,0,0,10,6,1,0,4,0.65,0,0
5904_44,44,44,"Pair<Bundle, Long> syncInfo = iterator.next();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,6,1,0,1,0.5,3,3
5904_45,45,53,"if (equals(syncInfo.first, extras)) {
iterator.remove();
changed = true;
if (status != null) {
status.removePeriodicSyncTime(i);
}
} else {
i++;
}",1,0,0,0,0,0,0,0,0,6,2,9,0,1,0,0,10,6,1,0,4,0.67,0,0
5904_46,46,46,iterator.remove();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,1,0.58,1,1
5904_47,47,47,changed = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.22,0,0
5904_48,48,50,"if (status != null) {
status.removePeriodicSyncTime(i);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,6,1,0,4,0.76,0,0
5904_49,49,49,status.removePeriodicSyncTime(i);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,4,0.8,1,0
5904_51,51,51,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.2,3,2
5904_52,52,52,i++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.0,4,2
5904_55,55,57,"if (!changed) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,10,6,1,0,0,0.22,7,4
5904_56,56,56,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.19,8,4
5904_59,59,59,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.22,11,6
5904_60,60,60,writeAccountInfoLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.36,12,6
5904_61,61,61,writeStatusLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,1,0.47,13,7
5904_65,65,65,reportChange(ContentResolver.SYNC_OBSERVER_TYPE_SETTINGS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,10,6,1,0,1,0.45,17,9
5903_1,1,3,"private void updateOrRemovePeriodicSync(Account account, int userId, String providerName,
Bundle extras,
long period, boolean add) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,6,3,1,0,4,0.69,35,25
5903_4,4,6,"if (period <= 0) {
period = 0;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,3,1,0,1,0.63,32,23
5903_5,5,5,period = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.63,33,23
5903_7,7,9,"if (extras == null) {
extras = new Bundle();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,3,1,0,1,0.53,29,21
5903_8,8,8,extras = new Bundle();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.52,30,21
5903_10,10,14,"if (DEBUG) {
Log.v(TAG, ""addOrRemovePeriodicSync: "" + account + "", user "" + userId
+ "", provider "" + providerName
+ "" -> period "" + period + "", extras "" + extras);
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,6,3,1,0,4,0.72,24,19
5903_11,11,13,"Log.v(TAG, ""addOrRemovePeriodicSync: "" + account + "", user "" + userId
+ "", provider "" + providerName
+ "" -> period "" + period + "", extras "" + extras);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,6,3,1,0,4,0.73,25,19
5903_15,15,15,synchronized (mAuthorities) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.68,23,18
5903_16,16,62,"try {
AuthorityInfo authority =
getOrCreateAuthorityLocked(account, userId, providerName, -1, false);
if (add) {
boolean alreadyPresent = false;
for (int i = 0, N = authority.periodicSyncs.size(); i < N; i++) {
Pair<Bundle, Long> syncInfo = authority.periodicSyncs.get(i);
final Bundle existingExtras = syncInfo.first;
if (equals(existingExtras, extras)) {
if (syncInfo.second == period) {
return;
}
authority.periodicSyncs.set(i, Pair.create(extras, period));
alreadyPresent = true;
break;
}
}
if (!alreadyPresent) {
authority.periodicSyncs.add(Pair.create(extras, period));
SyncStatusInfo status = getOrCreateSyncStatusLocked(authority.ident);
status.setPeriodicSyncTime(authority.periodicSyncs.size() - 1, 0);
}
} else {
SyncStatusInfo status = mSyncStatus.get(authority.ident);
boolean changed = false;
Iterator<Pair<Bundle, Long>> iterator = authority.periodicSyncs.iterator();
int i = 0;
while (iterator.hasNext()) {
Pair<Bundle, Long> syncInfo = iterator.next();
if (equals(syncInfo.first, extras)) {
iterator.remove();
changed = true;
if (status != null) {
status.removePeriodicSyncTime(i);
}
} else {
i++;
}
}
if (!changed) {
return;
}
}
} finally {
writeAccountInfoLocked();
writeStatusLocked();
}",0,0,0,0,1,0,0,0,0,35,5,47,0,0,0,0,6,3,1,0,5,0.73,0,0
5903_17,17,18,"AuthorityInfo authority =
getOrCreateAuthorityLocked(account, userId, providerName, -1, false);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,6,3,1,0,1,0.56,20,16
5903_19,19,58,"if (add) {
boolean alreadyPresent = false;
for (int i = 0, N = authority.periodicSyncs.size(); i < N; i++) {
Pair<Bundle, Long> syncInfo = authority.periodicSyncs.get(i);
final Bundle existingExtras = syncInfo.first;
if (equals(existingExtras, extras)) {
if (syncInfo.second == period) {
return;
}
authority.periodicSyncs.set(i, Pair.create(extras, period));
alreadyPresent = true;
break;
}
}
if (!alreadyPresent) {
authority.periodicSyncs.add(Pair.create(extras, period));
SyncStatusInfo status = getOrCreateSyncStatusLocked(authority.ident);
status.setPeriodicSyncTime(authority.periodicSyncs.size() - 1, 0);
}
} else {
SyncStatusInfo status = mSyncStatus.get(authority.ident);
boolean changed = false;
Iterator<Pair<Bundle, Long>> iterator = authority.periodicSyncs.iterator();
int i = 0;
while (iterator.hasNext()) {
Pair<Bundle, Long> syncInfo = iterator.next();
if (equals(syncInfo.first, extras)) {
iterator.remove();
changed = true;
if (status != null) {
status.removePeriodicSyncTime(i);
}
} else {
i++;
}
}
if (!changed) {
return;
}
}",1,0,0,0,0,0,0,0,0,30,4,40,0,1,0,0,6,3,1,0,5,0.74,0,0
5903_20,20,20,boolean alreadyPresent = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.33,18,14
5903_21,21,32,"for (int i = 0, N = authority.periodicSyncs.size(); i < N; i++) {
Pair<Bundle, Long> syncInfo = authority.periodicSyncs.get(i);
final Bundle existingExtras = syncInfo.first;
if (equals(existingExtras, extras)) {
if (syncInfo.second == period) {
return;
}
authority.periodicSyncs.set(i, Pair.create(extras, period));
alreadyPresent = true;
break;
}
}",0,0,1,0,0,0,0,0,0,8,3,12,1,1,0,0,6,3,1,0,4,0.72,6,5
5903_22,22,22,"Pair<Bundle, Long> syncInfo = authority.periodicSyncs.get(i);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,3,0.71,16,12
5903_23,23,23,final Bundle existingExtras = syncInfo.first;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,2,0.61,15,11
5903_24,24,31,"if (equals(existingExtras, extras)) {
if (syncInfo.second == period) {
return;
}
authority.periodicSyncs.set(i, Pair.create(extras, period));
alreadyPresent = true;
break;
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,0,6,3,1,0,4,0.72,7,5
5903_25,25,27,"if (syncInfo.second == period) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,3,1,0,2,0.63,11,8
5903_26,26,26,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.18,12,8
5903_28,28,28,"authority.periodicSyncs.set(i, Pair.create(extras, period));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,4,0.79,10,7
5903_29,29,29,alreadyPresent = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.31,9,6
5903_30,30,30,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,3,1,0,0,0.18,8,5
5903_33,33,37,"if (!alreadyPresent) {
authority.periodicSyncs.add(Pair.create(extras, period));
SyncStatusInfo status = getOrCreateSyncStatusLocked(authority.ident);
status.setPeriodicSyncTime(authority.periodicSyncs.size() - 1, 0);
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,0,6,3,1,0,4,0.73,1,1
5903_34,34,34,"authority.periodicSyncs.add(Pair.create(extras, period));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,4,0.8,4,3
5903_35,35,35,SyncStatusInfo status = getOrCreateSyncStatusLocked(authority.ident);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,2,0.62,3,2
5903_36,36,36,"status.setPeriodicSyncTime(authority.periodicSyncs.size() - 1, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,3,0.69,2,1
5903_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.28,0,0
5903_39,39,39,SyncStatusInfo status = mSyncStatus.get(authority.ident);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,1,0,2,0.65,0,0
5903_40,40,40,boolean changed = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.27,1,0
5903_41,41,41,"Iterator<Pair<Bundle, Long>> iterator = authority.periodicSyncs.iterator();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,1,0,3,0.68,2,1
5903_42,42,42,int i = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.29,3,2
5903_43,43,54,"while (iterator.hasNext()) {
Pair<Bundle, Long> syncInfo = iterator.next();
if (equals(syncInfo.first, extras)) {
iterator.remove();
changed = true;
if (status != null) {
status.removePeriodicSyncTime(i);
}
} else {
i++;
}
}",0,1,0,0,0,0,0,0,0,8,3,12,0,1,0,0,6,3,1,0,4,0.71,4,3
5903_44,44,44,"Pair<Bundle, Long> syncInfo = iterator.next();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.56,5,4
5903_45,45,53,"if (equals(syncInfo.first, extras)) {
iterator.remove();
changed = true;
if (status != null) {
status.removePeriodicSyncTime(i);
}
} else {
i++;
}",1,0,0,0,0,0,0,0,0,6,2,9,0,1,0,0,6,3,1,0,4,0.73,6,5
5903_46,46,46,iterator.remove();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.59,7,6
5903_47,47,47,changed = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.25,8,7
5903_48,48,50,"if (status != null) {
status.removePeriodicSyncTime(i);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,3,1,0,3,0.7,9,8
5903_49,49,49,status.removePeriodicSyncTime(i);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,3,0.76,10,9
5903_51,51,51,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.28,12,11
5903_52,52,52,i++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.0,13,11
5903_55,55,57,"if (!changed) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,1,0,0,0.26,16,13
5903_56,56,56,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.18,17,13
5903_59,59,59,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.23,20,15
5903_60,60,60,writeAccountInfoLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.39,21,15
5903_61,61,61,writeStatusLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.36,22,16
5903_65,65,65,reportChange(ContentResolver.SYNC_OBSERVER_TYPE_SETTINGS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,1,0,1,0.48,26,18
5902_1,1,3,"private void updateOrRemovePeriodicSync(Account account, int userId, String providerName,
Bundle extras,
long period, boolean add) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,12,9,1,0,3,0.59,29,20
5902_4,4,6,"if (period <= 0) {
period = 0;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,12,9,1,0,1,0.61,26,18
5902_5,5,5,period = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,1,0.61,27,18
5902_7,7,9,"if (extras == null) {
extras = new Bundle();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,12,9,1,0,0,0.35,23,16
5902_8,8,8,extras = new Bundle();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.36,24,16
5902_10,10,14,"if (DEBUG) {
Log.v(TAG, ""addOrRemovePeriodicSync: "" + account + "", user "" + userId
+ "", provider "" + providerName
+ "" -> period "" + period + "", extras "" + extras);
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,12,9,1,0,3,0.6,18,14
5902_11,11,13,"Log.v(TAG, ""addOrRemovePeriodicSync: "" + account + "", user "" + userId
+ "", provider "" + providerName
+ "" -> period "" + period + "", extras "" + extras);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,12,9,1,0,3,0.6,19,14
5902_15,15,15,synchronized (mAuthorities) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.54,17,13
5902_16,16,62,"try {
AuthorityInfo authority =
getOrCreateAuthorityLocked(account, userId, providerName, -1, false);
if (add) {
boolean alreadyPresent = false;
for (int i = 0, N = authority.periodicSyncs.size(); i < N; i++) {
Pair<Bundle, Long> syncInfo = authority.periodicSyncs.get(i);
final Bundle existingExtras = syncInfo.first;
if (equals(existingExtras, extras)) {
if (syncInfo.second == period) {
return;
}
authority.periodicSyncs.set(i, Pair.create(extras, period));
alreadyPresent = true;
break;
}
}
if (!alreadyPresent) {
authority.periodicSyncs.add(Pair.create(extras, period));
SyncStatusInfo status = getOrCreateSyncStatusLocked(authority.ident);
status.setPeriodicSyncTime(authority.periodicSyncs.size() - 1, 0);
}
} else {
SyncStatusInfo status = mSyncStatus.get(authority.ident);
boolean changed = false;
Iterator<Pair<Bundle, Long>> iterator = authority.periodicSyncs.iterator();
int i = 0;
while (iterator.hasNext()) {
Pair<Bundle, Long> syncInfo = iterator.next();
if (equals(syncInfo.first, extras)) {
iterator.remove();
changed = true;
if (status != null) {
status.removePeriodicSyncTime(i);
}
} else {
i++;
}
}
if (!changed) {
return;
}
}
} finally {
writeAccountInfoLocked();
writeStatusLocked();
}",0,0,0,0,1,0,0,0,0,35,5,47,0,0,0,0,12,9,1,0,4,0.65,0,0
5902_17,17,18,"AuthorityInfo authority =
getOrCreateAuthorityLocked(account, userId, providerName, -1, false);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,12,9,1,0,0,0.47,14,11
5902_19,19,58,"if (add) {
boolean alreadyPresent = false;
for (int i = 0, N = authority.periodicSyncs.size(); i < N; i++) {
Pair<Bundle, Long> syncInfo = authority.periodicSyncs.get(i);
final Bundle existingExtras = syncInfo.first;
if (equals(existingExtras, extras)) {
if (syncInfo.second == period) {
return;
}
authority.periodicSyncs.set(i, Pair.create(extras, period));
alreadyPresent = true;
break;
}
}
if (!alreadyPresent) {
authority.periodicSyncs.add(Pair.create(extras, period));
SyncStatusInfo status = getOrCreateSyncStatusLocked(authority.ident);
status.setPeriodicSyncTime(authority.periodicSyncs.size() - 1, 0);
}
} else {
SyncStatusInfo status = mSyncStatus.get(authority.ident);
boolean changed = false;
Iterator<Pair<Bundle, Long>> iterator = authority.periodicSyncs.iterator();
int i = 0;
while (iterator.hasNext()) {
Pair<Bundle, Long> syncInfo = iterator.next();
if (equals(syncInfo.first, extras)) {
iterator.remove();
changed = true;
if (status != null) {
status.removePeriodicSyncTime(i);
}
} else {
i++;
}
}
if (!changed) {
return;
}
}",1,0,0,0,0,0,0,0,0,30,4,40,0,1,0,0,12,9,1,0,4,0.66,0,0
5902_20,20,20,boolean alreadyPresent = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,9,1,0,0,0.29,12,9
5902_21,21,32,"for (int i = 0, N = authority.periodicSyncs.size(); i < N; i++) {
Pair<Bundle, Long> syncInfo = authority.periodicSyncs.get(i);
final Bundle existingExtras = syncInfo.first;
if (equals(existingExtras, extras)) {
if (syncInfo.second == period) {
return;
}
authority.periodicSyncs.set(i, Pair.create(extras, period));
alreadyPresent = true;
break;
}
}",0,0,1,0,0,0,0,0,0,8,3,12,1,1,0,0,12,9,1,0,2,0.6,0,0
5902_22,22,22,"Pair<Bundle, Long> syncInfo = authority.periodicSyncs.get(i);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,9,1,0,2,0.63,10,7
5902_23,23,23,final Bundle existingExtras = syncInfo.first;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,9,1,0,1,0.51,9,6
5902_24,24,31,"if (equals(existingExtras, extras)) {
if (syncInfo.second == period) {
return;
}
authority.periodicSyncs.set(i, Pair.create(extras, period));
alreadyPresent = true;
break;
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,0,12,9,1,0,2,0.59,1,0
5902_25,25,27,"if (syncInfo.second == period) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,12,9,1,0,2,0.61,5,3
5902_26,26,26,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.18,6,3
5902_28,28,28,"authority.periodicSyncs.set(i, Pair.create(extras, period));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,2,0.64,4,2
5902_29,29,29,alreadyPresent = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.3,3,1
5902_30,30,30,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,12,9,1,0,0,0.18,2,0
5902_33,33,37,"if (!alreadyPresent) {
authority.periodicSyncs.add(Pair.create(extras, period));
SyncStatusInfo status = getOrCreateSyncStatusLocked(authority.ident);
status.setPeriodicSyncTime(authority.periodicSyncs.size() - 1, 0);
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,0,12,9,1,0,4,0.71,0,0
5902_34,34,34,"authority.periodicSyncs.add(Pair.create(extras, period));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,9,1,0,3,0.72,1,0
5902_35,35,35,SyncStatusInfo status = getOrCreateSyncStatusLocked(authority.ident);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,9,1,0,2,0.65,2,1
5902_36,36,36,"status.setPeriodicSyncTime(authority.periodicSyncs.size() - 1, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,9,1,0,3,0.68,3,2
5902_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.19,5,4
5902_39,39,39,SyncStatusInfo status = mSyncStatus.get(authority.ident);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,12,9,1,0,2,0.69,6,4
5902_40,40,40,boolean changed = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.23,7,5
5902_41,41,41,"Iterator<Pair<Bundle, Long>> iterator = authority.periodicSyncs.iterator();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,12,9,1,0,2,0.6,8,6
5902_42,42,42,int i = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,9,1,0,0,0.29,9,7
5902_43,43,54,"while (iterator.hasNext()) {
Pair<Bundle, Long> syncInfo = iterator.next();
if (equals(syncInfo.first, extras)) {
iterator.remove();
changed = true;
if (status != null) {
status.removePeriodicSyncTime(i);
}
} else {
i++;
}
}",0,1,0,0,0,0,0,0,0,8,3,12,0,1,0,0,12,9,1,0,3,0.59,10,8
5902_44,44,44,"Pair<Bundle, Long> syncInfo = iterator.next();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,9,1,0,1,0.51,11,9
5902_45,45,53,"if (equals(syncInfo.first, extras)) {
iterator.remove();
changed = true;
if (status != null) {
status.removePeriodicSyncTime(i);
}
} else {
i++;
}",1,0,0,0,0,0,0,0,0,6,2,9,0,1,0,0,12,9,1,0,3,0.6,12,10
5902_46,46,46,iterator.remove();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.37,13,11
5902_47,47,47,changed = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.23,14,12
5902_48,48,50,"if (status != null) {
status.removePeriodicSyncTime(i);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,12,9,1,0,3,0.69,15,13
5902_49,49,49,status.removePeriodicSyncTime(i);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,3,0.71,16,14
5902_51,51,51,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.19,18,16
5902_52,52,52,i++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.0,19,16
5902_55,55,57,"if (!changed) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,12,9,1,0,0,0.22,22,18
5902_56,56,56,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.18,23,18
5902_59,59,59,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.22,26,20
5902_60,60,60,writeAccountInfoLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.38,27,20
5902_61,61,61,writeStatusLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,1,0.47,28,21
5902_65,65,65,reportChange(ContentResolver.SYNC_OBSERVER_TYPE_SETTINGS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,12,9,1,0,1,0.5,32,23
5901_1,1,3,"private void updateOrRemovePeriodicSync(Account account, int userId, String providerName,
Bundle extras,
long period, boolean add) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,10,3,2,0,4,0.62,16,10
5901_4,4,6,"if (period <= 0) {
period = 0;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,3,2,0,1,0.58,13,8
5901_5,5,5,period = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,3,2,0,1,0.58,14,8
5901_7,7,9,"if (extras == null) {
extras = new Bundle();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,3,2,0,1,0.51,10,6
5901_8,8,8,extras = new Bundle();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,3,2,0,1,0.49,11,6
5901_10,10,14,"if (DEBUG) {
Log.v(TAG, ""addOrRemovePeriodicSync: "" + account + "", user "" + userId
+ "", provider "" + providerName
+ "" -> period "" + period + "", extras "" + extras);
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,10,3,2,0,4,0.65,5,4
5901_11,11,13,"Log.v(TAG, ""addOrRemovePeriodicSync: "" + account + "", user "" + userId
+ "", provider "" + providerName
+ "" -> period "" + period + "", extras "" + extras);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,10,3,2,0,4,0.66,6,4
5901_15,15,15,synchronized (mAuthorities) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,3,2,0,0,0.51,4,3
5901_16,16,62,"try {
AuthorityInfo authority =
getOrCreateAuthorityLocked(account, userId, providerName, -1, false);
if (add) {
boolean alreadyPresent = false;
for (int i = 0, N = authority.periodicSyncs.size(); i < N; i++) {
Pair<Bundle, Long> syncInfo = authority.periodicSyncs.get(i);
final Bundle existingExtras = syncInfo.first;
if (equals(existingExtras, extras)) {
if (syncInfo.second == period) {
return;
}
authority.periodicSyncs.set(i, Pair.create(extras, period));
alreadyPresent = true;
break;
}
}
if (!alreadyPresent) {
authority.periodicSyncs.add(Pair.create(extras, period));
SyncStatusInfo status = getOrCreateSyncStatusLocked(authority.ident);
status.setPeriodicSyncTime(authority.periodicSyncs.size() - 1, 0);
}
} else {
SyncStatusInfo status = mSyncStatus.get(authority.ident);
boolean changed = false;
Iterator<Pair<Bundle, Long>> iterator = authority.periodicSyncs.iterator();
int i = 0;
while (iterator.hasNext()) {
Pair<Bundle, Long> syncInfo = iterator.next();
if (equals(syncInfo.first, extras)) {
iterator.remove();
changed = true;
if (status != null) {
status.removePeriodicSyncTime(i);
}
} else {
i++;
}
}
if (!changed) {
return;
}
}
} finally {
writeAccountInfoLocked();
writeStatusLocked();
}",0,0,0,0,1,0,0,0,0,35,5,47,0,0,0,0,10,3,2,0,6,0.72,0,0
5901_17,17,18,"AuthorityInfo authority =
getOrCreateAuthorityLocked(account, userId, providerName, -1, false);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,10,3,2,0,0,0.45,1,1
5901_19,19,58,"if (add) {
boolean alreadyPresent = false;
for (int i = 0, N = authority.periodicSyncs.size(); i < N; i++) {
Pair<Bundle, Long> syncInfo = authority.periodicSyncs.get(i);
final Bundle existingExtras = syncInfo.first;
if (equals(existingExtras, extras)) {
if (syncInfo.second == period) {
return;
}
authority.periodicSyncs.set(i, Pair.create(extras, period));
alreadyPresent = true;
break;
}
}
if (!alreadyPresent) {
authority.periodicSyncs.add(Pair.create(extras, period));
SyncStatusInfo status = getOrCreateSyncStatusLocked(authority.ident);
status.setPeriodicSyncTime(authority.periodicSyncs.size() - 1, 0);
}
} else {
SyncStatusInfo status = mSyncStatus.get(authority.ident);
boolean changed = false;
Iterator<Pair<Bundle, Long>> iterator = authority.periodicSyncs.iterator();
int i = 0;
while (iterator.hasNext()) {
Pair<Bundle, Long> syncInfo = iterator.next();
if (equals(syncInfo.first, extras)) {
iterator.remove();
changed = true;
if (status != null) {
status.removePeriodicSyncTime(i);
}
} else {
i++;
}
}
if (!changed) {
return;
}
}",1,0,0,0,0,0,0,0,0,30,4,40,0,1,0,0,10,3,2,0,6,0.73,0,0
5901_20,20,20,boolean alreadyPresent = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,3,2,0,1,0.43,0,0
5901_21,21,32,"for (int i = 0, N = authority.periodicSyncs.size(); i < N; i++) {
Pair<Bundle, Long> syncInfo = authority.periodicSyncs.get(i);
final Bundle existingExtras = syncInfo.first;
if (equals(existingExtras, extras)) {
if (syncInfo.second == period) {
return;
}
authority.periodicSyncs.set(i, Pair.create(extras, period));
alreadyPresent = true;
break;
}
}",0,0,1,0,0,0,0,0,0,8,3,12,1,1,0,0,10,3,2,0,5,0.73,1,0
5901_22,22,22,"Pair<Bundle, Long> syncInfo = authority.periodicSyncs.get(i);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,3,2,0,2,0.61,2,1
5901_23,23,23,final Bundle existingExtras = syncInfo.first;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,3,2,0,3,0.66,3,2
5901_24,24,31,"if (equals(existingExtras, extras)) {
if (syncInfo.second == period) {
return;
}
authority.periodicSyncs.set(i, Pair.create(extras, period));
alreadyPresent = true;
break;
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,0,10,3,2,0,5,0.73,4,3
5901_25,25,27,"if (syncInfo.second == period) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,3,2,0,2,0.59,5,4
5901_26,26,26,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,3,2,0,0,0.19,6,5
5901_28,28,28,"authority.periodicSyncs.set(i, Pair.create(extras, period));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,3,2,0,3,0.68,8,7
5901_29,29,29,alreadyPresent = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,3,2,0,1,0.45,9,7
5901_30,30,30,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,10,3,2,0,0,0.17,10,8
5901_33,33,37,"if (!alreadyPresent) {
authority.periodicSyncs.add(Pair.create(extras, period));
SyncStatusInfo status = getOrCreateSyncStatusLocked(authority.ident);
status.setPeriodicSyncTime(authority.periodicSyncs.size() - 1, 0);
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,0,10,3,2,0,5,0.73,13,10
5901_34,34,34,"authority.periodicSyncs.add(Pair.create(extras, period));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,3,2,0,4,0.76,14,10
5901_35,35,35,SyncStatusInfo status = getOrCreateSyncStatusLocked(authority.ident);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,3,2,0,1,0.54,15,11
5901_36,36,36,"status.setPeriodicSyncTime(authority.periodicSyncs.size() - 1, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,3,2,0,2,0.61,16,12
5901_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,3,2,0,0,0.2,18,14
5901_39,39,39,SyncStatusInfo status = mSyncStatus.get(authority.ident);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,3,2,0,1,0.56,19,14
5901_40,40,40,boolean changed = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,3,2,0,0,0.25,20,15
5901_41,41,41,"Iterator<Pair<Bundle, Long>> iterator = authority.periodicSyncs.iterator();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,3,2,0,2,0.59,21,16
5901_42,42,42,int i = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,3,2,0,0,0.28,22,17
5901_43,43,54,"while (iterator.hasNext()) {
Pair<Bundle, Long> syncInfo = iterator.next();
if (equals(syncInfo.first, extras)) {
iterator.remove();
changed = true;
if (status != null) {
status.removePeriodicSyncTime(i);
}
} else {
i++;
}
}",0,1,0,0,0,0,0,0,0,8,3,12,0,1,0,0,10,3,2,0,3,0.59,23,18
5901_44,44,44,"Pair<Bundle, Long> syncInfo = iterator.next();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,3,2,0,1,0.51,24,19
5901_45,45,53,"if (equals(syncInfo.first, extras)) {
iterator.remove();
changed = true;
if (status != null) {
status.removePeriodicSyncTime(i);
}
} else {
i++;
}",1,0,0,0,0,0,0,0,0,6,2,9,0,1,0,0,10,3,2,0,3,0.59,25,20
5901_46,46,46,iterator.remove();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,3,2,0,0,0.36,26,21
5901_47,47,47,changed = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,3,2,0,0,0.22,27,22
5901_48,48,50,"if (status != null) {
status.removePeriodicSyncTime(i);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,3,2,0,2,0.59,28,23
5901_49,49,49,status.removePeriodicSyncTime(i);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,3,2,0,2,0.62,29,24
5901_51,51,51,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,3,2,0,0,0.2,31,26
5901_52,52,52,i++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,3,2,0,0,0.0,32,26
5901_55,55,57,"if (!changed) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,10,3,2,0,0,0.24,35,28
5901_56,56,56,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,3,2,0,0,0.19,36,28
5901_59,59,59,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,3,2,0,0,0.22,39,30
5901_60,60,60,writeAccountInfoLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,3,2,0,0,0.39,40,30
5901_61,61,61,writeStatusLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,3,2,0,0,0.36,41,31
5901_65,65,65,reportChange(ContentResolver.SYNC_OBSERVER_TYPE_SETTINGS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,10,3,2,0,1,0.47,45,33
5900_1,1,1,private void onUserRemoved(int userId) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.36,2,1
5900_2,2,2,updateRunningAccounts();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.44,1,0
5900_4,4,4,"mSyncStorageEngine.doDatabaseCleanup(new Account[0], userId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,3,0.72,0,0
5900_5,5,5,synchronized (mSyncQueue) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.42,1,0
5900_6,6,6,mSyncQueue.removeUser(userId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.4,2,1
5899_1,1,1,private void onUserStarting(int userId) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,2,0.61,10,5
5899_2,2,2,AccountManagerService.getSingleton().validateAccounts(userId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,1,0,2,0.56,9,4
5899_4,4,4,mSyncAdapters.invalidateCache(userId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,3,1,0,2,0.57,7,3
5899_6,6,6,updateRunningAccounts();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,3,1,0,1,0.55,5,2
5899_8,8,8,synchronized (mSyncQueue) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,1,0.57,3,1
5899_9,9,9,mSyncQueue.addPendingOperations(userId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,2,0.57,2,0
5899_12,12,12,final Account[] accounts = AccountManagerService.getSingleton().getAccounts(userId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,1,0,2,0.6,0,0
5899_13,13,16,"for (Account account : accounts) {
scheduleSync(account, userId, null, null, 0 ,
true );
}",0,0,0,1,0,0,0,0,0,1,1,4,0,1,0,1,5,3,1,0,4,0.77,1,0
5899_14,14,15,"scheduleSync(account, userId, null, null, 0 ,
true );",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,1,0,4,0.72,2,1
5899_18,18,18,sendCheckAlarmsMessage();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,0,0.34,6,3
5898_1,1,1,private void onUserStarting(int userId) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.27,0,0
5898_2,2,2,AccountManagerService.getSingleton().validateAccounts(userId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,1,0,2,0.54,0,0
5898_4,4,4,mSyncAdapters.invalidateCache(userId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,2,1,0,0,0.31,2,1
5898_6,6,6,updateRunningAccounts();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,2,1,0,1,0.41,4,2
5898_8,8,8,synchronized (mSyncQueue) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,0,0.26,6,3
5898_9,9,9,mSyncQueue.addPendingOperations(userId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.31,7,3
5898_12,12,12,final Account[] accounts = AccountManagerService.getSingleton().getAccounts(userId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,1,0.47,10,5
5898_13,13,16,"for (Account account : accounts) {
scheduleSync(account, userId, null, null, 0 ,
true );
}",0,0,0,1,0,0,0,0,0,1,1,4,0,1,0,1,5,2,1,0,1,0.45,11,5
5898_14,14,15,"scheduleSync(account, userId, null, null, 0 ,
true );",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,2,1,0,1,0.37,12,6
5898_18,18,18,sendCheckAlarmsMessage();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,0,0.31,16,8
5897_1,1,1,"void maybeRescheduleSync(SyncResult syncResult, SyncOperation operation) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,36,21,4,0,3,0.69,11,6
5897_2,2,2,"boolean isLoggable = Log.isLoggable(TAG, Log.DEBUG);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,36,21,4,0,0,0.43,10,5
5897_3,3,5,"if (isLoggable) {
Log.d(TAG, ""encountered error(s) during the sync: "" + syncResult + "", "" + operation);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,36,21,4,0,3,0.6,7,3
5897_4,4,4,"Log.d(TAG, ""encountered error(s) during the sync: "" + syncResult + "", "" + operation);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,36,21,4,0,3,0.59,8,3
5897_7,7,7,operation = new SyncOperation(operation);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,36,21,4,0,2,0.65,5,2
5897_9,9,11,"if (operation.extras.getBoolean(ContentResolver.SYNC_EXTRAS_IGNORE_BACKOFF, false)) {
operation.extras.remove(ContentResolver.SYNC_EXTRAS_IGNORE_BACKOFF);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,36,21,4,0,4,0.58,1,0
5897_10,10,10,operation.extras.remove(ContentResolver.SYNC_EXTRAS_IGNORE_BACKOFF);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,36,21,4,0,3,0.56,2,0
5897_13,13,50,"if (operation.extras.getBoolean(ContentResolver.SYNC_EXTRAS_DO_NOT_RETRY, false)) {
Log.d(TAG, ""not retrying sync operation because SYNC_EXTRAS_DO_NOT_RETRY was specified ""
+ operation);
} else if (operation.extras.getBoolean(ContentResolver.SYNC_EXTRAS_UPLOAD, false)
&& !syncResult.syncAlreadyInProgress) {
operation.extras.remove(ContentResolver.SYNC_EXTRAS_UPLOAD);
Log.d(TAG, ""retrying sync operation as a two-way sync because an upload-only sync ""
+ ""encountered an error: "" + operation);
scheduleSyncOperation(operation);
} else if (syncResult.tooManyRetries) {
Log.d(TAG, ""not retrying sync operation because it retried too many times: ""
+ operation);
} else if (syncResult.madeSomeProgress()) {
if (isLoggable) {
Log.d(TAG, ""retrying sync operation because even though it had an error ""
+ ""it achieved some success"");
}
scheduleSyncOperation(operation);
} else if (syncResult.syncAlreadyInProgress) {
if (isLoggable) {
Log.d(TAG, ""retrying sync operation that failed because there was already a ""
+ ""sync in progress: "" + operation);
}
scheduleSyncOperation(new SyncOperation(operation.account, operation.userId,
operation.syncSource,
operation.authority, operation.extras,
DELAY_RETRY_SYNC_IN_PROGRESS_IN_SECONDS * 1000,
operation.backoff, operation.delayUntil, operation.allowParallelSyncs));
} else if (syncResult.hasSoftError()) {
if (isLoggable) {
Log.d(TAG, ""retrying sync operation because it encountered a soft error: ""
+ operation);
}
scheduleSyncOperation(operation);
} else {
Log.d(TAG, ""not retrying sync operation because the error is a hard error: ""
+ operation);
}",1,0,0,0,0,0,0,0,0,22,2,38,0,0,1,0,36,21,4,0,12,0.79,0,0
5897_14,14,15,"Log.d(TAG, ""not retrying sync operation because SYNC_EXTRAS_DO_NOT_RETRY was specified ""
+ operation);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,36,21,4,0,3,0.68,1,0
5897_16,16,16,"} else if (operation.extras.getBoolean(ContentResolver.SYNC_EXTRAS_UPLOAD, false)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,36,21,4,0,3,0.55,3,2
5897_17,17,17,&& !syncResult.syncAlreadyInProgress) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,36,21,4,0,1,0.52,4,2
5897_18,18,18,operation.extras.remove(ContentResolver.SYNC_EXTRAS_UPLOAD);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,36,21,4,0,2,0.52,5,3
5897_19,19,20,"Log.d(TAG, ""retrying sync operation as a two-way sync because an upload-only sync ""
+ ""encountered an error: "" + operation);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,36,21,4,0,6,0.75,6,4
5897_21,21,21,scheduleSyncOperation(operation);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,36,21,4,0,3,0.74,8,6
5897_22,22,22,} else if (syncResult.tooManyRetries) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,36,21,4,0,3,0.67,9,6
5897_23,23,24,"Log.d(TAG, ""not retrying sync operation because it retried too many times: ""
+ operation);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,36,21,4,0,5,0.75,10,7
5897_25,25,25,} else if (syncResult.madeSomeProgress()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,36,21,4,0,1,0.49,12,9
5897_26,26,29,"if (isLoggable) {
Log.d(TAG, ""retrying sync operation because even though it had an error ""
+ ""it achieved some success"");
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,36,21,4,0,4,0.65,13,9
5897_27,27,28,"Log.d(TAG, ""retrying sync operation because even though it had an error ""
+ ""it achieved some success"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,36,21,4,0,4,0.65,14,10
5897_30,30,30,scheduleSyncOperation(operation);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,36,21,4,0,3,0.74,17,12
5897_31,31,31,} else if (syncResult.syncAlreadyInProgress) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,36,21,4,0,1,0.5,18,12
5897_32,32,35,"if (isLoggable) {
Log.d(TAG, ""retrying sync operation that failed because there was already a ""
+ ""sync in progress: "" + operation);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,36,21,4,0,3,0.64,19,13
5897_33,33,34,"Log.d(TAG, ""retrying sync operation that failed because there was already a ""
+ ""sync in progress: "" + operation);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,36,21,4,0,3,0.64,20,14
5897_36,36,40,"scheduleSyncOperation(new SyncOperation(operation.account, operation.userId,
operation.syncSource,
operation.authority, operation.extras,
DELAY_RETRY_SYNC_IN_PROGRESS_IN_SECONDS * 1000,
operation.backoff, operation.delayUntil, operation.allowParallelSyncs));",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,36,21,4,0,5,0.72,23,16
5897_41,41,41,} else if (syncResult.hasSoftError()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,36,21,4,0,3,0.6,28,17
5897_42,42,45,"if (isLoggable) {
Log.d(TAG, ""retrying sync operation because it encountered a soft error: ""
+ operation);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,36,21,4,0,5,0.7,29,17
5897_43,43,44,"Log.d(TAG, ""retrying sync operation because it encountered a soft error: ""
+ operation);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,36,21,4,0,5,0.71,30,18
5897_46,46,46,scheduleSyncOperation(operation);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,36,21,4,0,3,0.74,33,20
5897_47,47,47,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,36,21,4,0,0,0.23,34,20
5897_48,48,49,"Log.d(TAG, ""not retrying sync operation because the error is a hard error: ""
+ operation);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,36,21,4,0,4,0.7,35,21
5896_1,1,1,"void maybeRescheduleSync(SyncResult syncResult, SyncOperation operation) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,13,2,0,1,0.53,7,4
5896_2,2,2,"boolean isLoggable = Log.isLoggable(TAG, Log.DEBUG);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,20,13,2,0,0,0.44,6,3
5896_3,3,5,"if (isLoggable) {
Log.d(TAG, ""encountered error(s) during the sync: "" + syncResult + "", "" + operation);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,20,13,2,0,1,0.53,3,1
5896_4,4,4,"Log.d(TAG, ""encountered error(s) during the sync: "" + syncResult + "", "" + operation);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,13,2,0,1,0.51,4,1
5896_7,7,7,operation = new SyncOperation(operation);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,20,13,2,0,1,0.39,1,0
5896_9,9,11,"if (operation.extras.getBoolean(ContentResolver.SYNC_EXTRAS_IGNORE_BACKOFF, false)) {
operation.extras.remove(ContentResolver.SYNC_EXTRAS_IGNORE_BACKOFF);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,20,13,2,0,4,0.62,0,0
5896_10,10,10,operation.extras.remove(ContentResolver.SYNC_EXTRAS_IGNORE_BACKOFF);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,13,2,0,4,0.63,1,0
5896_13,13,50,"if (operation.extras.getBoolean(ContentResolver.SYNC_EXTRAS_DO_NOT_RETRY, false)) {
Log.d(TAG, ""not retrying sync operation because SYNC_EXTRAS_DO_NOT_RETRY was specified ""
+ operation);
} else if (operation.extras.getBoolean(ContentResolver.SYNC_EXTRAS_UPLOAD, false)
&& !syncResult.syncAlreadyInProgress) {
operation.extras.remove(ContentResolver.SYNC_EXTRAS_UPLOAD);
Log.d(TAG, ""retrying sync operation as a two-way sync because an upload-only sync ""
+ ""encountered an error: "" + operation);
scheduleSyncOperation(operation);
} else if (syncResult.tooManyRetries) {
Log.d(TAG, ""not retrying sync operation because it retried too many times: ""
+ operation);
} else if (syncResult.madeSomeProgress()) {
if (isLoggable) {
Log.d(TAG, ""retrying sync operation because even though it had an error ""
+ ""it achieved some success"");
}
scheduleSyncOperation(operation);
} else if (syncResult.syncAlreadyInProgress) {
if (isLoggable) {
Log.d(TAG, ""retrying sync operation that failed because there was already a ""
+ ""sync in progress: "" + operation);
}
scheduleSyncOperation(new SyncOperation(operation.account, operation.userId,
operation.syncSource,
operation.authority, operation.extras,
DELAY_RETRY_SYNC_IN_PROGRESS_IN_SECONDS * 1000,
operation.backoff, operation.delayUntil, operation.allowParallelSyncs));
} else if (syncResult.hasSoftError()) {
if (isLoggable) {
Log.d(TAG, ""retrying sync operation because it encountered a soft error: ""
+ operation);
}
scheduleSyncOperation(operation);
} else {
Log.d(TAG, ""not retrying sync operation because the error is a hard error: ""
+ operation);
}",1,0,0,0,0,0,0,0,0,22,2,38,0,0,1,0,20,13,2,0,4,0.62,4,2
5896_14,14,15,"Log.d(TAG, ""not retrying sync operation because SYNC_EXTRAS_DO_NOT_RETRY was specified ""
+ operation);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,20,13,2,0,3,0.62,5,2
5896_16,16,16,"} else if (operation.extras.getBoolean(ContentResolver.SYNC_EXTRAS_UPLOAD, false)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,13,2,0,2,0.49,7,4
5896_17,17,17,&& !syncResult.syncAlreadyInProgress) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,13,2,0,1,0.48,8,4
5896_18,18,18,operation.extras.remove(ContentResolver.SYNC_EXTRAS_UPLOAD);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,13,2,0,2,0.51,9,5
5896_19,19,20,"Log.d(TAG, ""retrying sync operation as a two-way sync because an upload-only sync ""
+ ""encountered an error: "" + operation);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,20,13,2,0,2,0.55,10,6
5896_21,21,21,scheduleSyncOperation(operation);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,13,2,0,1,0.42,12,8
5896_22,22,22,} else if (syncResult.tooManyRetries) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,13,2,0,2,0.55,13,8
5896_23,23,24,"Log.d(TAG, ""not retrying sync operation because it retried too many times: ""
+ operation);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,20,13,2,0,2,0.55,14,9
5896_25,25,25,} else if (syncResult.madeSomeProgress()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,13,2,0,1,0.45,16,11
5896_26,26,29,"if (isLoggable) {
Log.d(TAG, ""retrying sync operation because even though it had an error ""
+ ""it achieved some success"");
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,20,13,2,0,2,0.55,17,11
5896_27,27,28,"Log.d(TAG, ""retrying sync operation because even though it had an error ""
+ ""it achieved some success"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,20,13,2,0,2,0.53,18,12
5896_30,30,30,scheduleSyncOperation(operation);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,13,2,0,1,0.42,21,14
5896_31,31,31,} else if (syncResult.syncAlreadyInProgress) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,13,2,0,1,0.47,22,14
5896_32,32,35,"if (isLoggable) {
Log.d(TAG, ""retrying sync operation that failed because there was already a ""
+ ""sync in progress: "" + operation);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,20,13,2,0,2,0.56,23,15
5896_33,33,34,"Log.d(TAG, ""retrying sync operation that failed because there was already a ""
+ ""sync in progress: "" + operation);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,20,13,2,0,2,0.54,24,16
5896_36,36,40,"scheduleSyncOperation(new SyncOperation(operation.account, operation.userId,
operation.syncSource,
operation.authority, operation.extras,
DELAY_RETRY_SYNC_IN_PROGRESS_IN_SECONDS * 1000,
operation.backoff, operation.delayUntil, operation.allowParallelSyncs));",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,20,13,2,0,4,0.59,27,18
5896_41,41,41,} else if (syncResult.hasSoftError()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,13,2,0,1,0.46,32,19
5896_42,42,45,"if (isLoggable) {
Log.d(TAG, ""retrying sync operation because it encountered a soft error: ""
+ operation);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,20,13,2,0,2,0.56,33,19
5896_43,43,44,"Log.d(TAG, ""retrying sync operation because it encountered a soft error: ""
+ operation);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,20,13,2,0,2,0.56,34,20
5896_46,46,46,scheduleSyncOperation(operation);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,13,2,0,1,0.42,37,22
5896_47,47,47,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,13,2,0,0,0.28,38,22
5896_48,48,49,"Log.d(TAG, ""not retrying sync operation because the error is a hard error: ""
+ operation);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,20,13,2,0,2,0.52,39,23
5895_1,1,1,private void increaseBackoffSetting(SyncOperation op) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.44,20,11
5895_2,2,2,final long now = SystemClock.elapsedRealtime();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.56,19,10
5895_4,4,5,"final Pair<Long, Long> previousSettings =
mSyncStorageEngine.getBackoff(op.account, op.userId, op.authority);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,0,2,2,0,0,0,0.42,16,9
5895_6,6,6,long newDelayInMs = -1;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.67,15,8
5895_7,7,16,"if (previousSettings != null) {
if (now < previousSettings.first) {
if (Log.isLoggable(TAG, Log.VERBOSE)) {
Log.v(TAG, ""Still in backoff, do not increase it. ""
+ ""Remaining: "" + ((previousSettings.first - now) / 1000) + "" seconds."");
}
return;
}
newDelayInMs = previousSettings.second * 2;
}",1,0,0,0,0,0,0,0,0,5,3,10,0,1,0,0,2,2,0,0,1,0.61,5,2
5895_8,8,14,"if (now < previousSettings.first) {
if (Log.isLoggable(TAG, Log.VERBOSE)) {
Log.v(TAG, ""Still in backoff, do not increase it. ""
+ ""Remaining: "" + ((previousSettings.first - now) / 1000) + "" seconds."");
}
return;
}",1,0,0,0,0,0,0,0,0,3,2,7,0,1,0,0,2,2,0,0,0,0.49,7,3
5895_9,9,12,"if (Log.isLoggable(TAG, Log.VERBOSE)) {
Log.v(TAG, ""Still in backoff, do not increase it. ""
+ ""Remaining: "" + ((previousSettings.first - now) / 1000) + "" seconds."");
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,2,2,0,0,0,0.5,9,4
5895_10,10,11,"Log.v(TAG, ""Still in backoff, do not increase it. ""
+ ""Remaining: "" + ((previousSettings.first - now) / 1000) + "" seconds."");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.5,10,4
5895_13,13,13,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.19,8,3
5895_15,15,15,newDelayInMs = previousSettings.second * 2;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.67,6,2
5895_17,17,20,"if (newDelayInMs <= 0) {
newDelayInMs = jitterize(INITIAL_SYNC_RETRY_TIME_IN_MS,
(long)(INITIAL_SYNC_RETRY_TIME_IN_MS * 1.1));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,2,2,0,0,1,0.67,1,0
5895_18,18,19,"newDelayInMs = jitterize(INITIAL_SYNC_RETRY_TIME_IN_MS,
(long)(INITIAL_SYNC_RETRY_TIME_IN_MS * 1.1));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,1,0.67,2,0
5895_22,22,24,"long maxSyncRetryTimeInSeconds = Settings.Global.getLong(mContext.getContentResolver(),
Settings.Global.SYNC_MAX_RETRY_DELAY_IN_SECONDS,
DEFAULT_MAX_SYNC_RETRY_TIME_IN_SECONDS);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,1,0,2,2,0,0,1,0.64,0,0
5895_25,25,27,"if (newDelayInMs > maxSyncRetryTimeInSeconds * 1000) {
newDelayInMs = maxSyncRetryTimeInSeconds * 1000;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,2,2,0,0,1,0.71,3,1
5895_26,26,26,newDelayInMs = maxSyncRetryTimeInSeconds * 1000;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.71,4,1
5895_29,29,29,final long backoff = now + newDelayInMs;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,1,0.67,7,3
5895_31,31,32,"mSyncStorageEngine.setBackoff(op.account, op.userId, op.authority,
backoff, newDelayInMs);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,2,2,0,0,1,0.63,9,4
5895_34,34,34,op.backoff = backoff;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.41,12,5
5895_35,35,35,op.updateEffectiveRunTime();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.42,13,5
5895_37,37,37,synchronized (mSyncQueue) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.45,15,7
5895_38,38,38,"mSyncQueue.onBackoffChanged(op.account, op.userId, op.authority, backoff);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.44,16,7
5894_1,1,1,private void increaseBackoffSetting(SyncOperation op) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,1,0.47,16,10
5894_2,2,2,final long now = SystemClock.elapsedRealtime();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,6,1,0,0,0.54,15,9
5894_4,4,5,"final Pair<Long, Long> previousSettings =
mSyncStorageEngine.getBackoff(op.account, op.userId, op.authority);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,0,8,6,1,0,1,0.51,12,8
5894_6,6,6,long newDelayInMs = -1;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,6,1,0,2,0.62,11,7
5894_7,7,16,"if (previousSettings != null) {
if (now < previousSettings.first) {
if (Log.isLoggable(TAG, Log.VERBOSE)) {
Log.v(TAG, ""Still in backoff, do not increase it. ""
+ ""Remaining: "" + ((previousSettings.first - now) / 1000) + "" seconds."");
}
return;
}
newDelayInMs = previousSettings.second * 2;
}",1,0,0,0,0,0,0,0,0,5,3,10,0,1,0,0,8,6,1,0,2,0.55,1,1
5894_8,8,14,"if (now < previousSettings.first) {
if (Log.isLoggable(TAG, Log.VERBOSE)) {
Log.v(TAG, ""Still in backoff, do not increase it. ""
+ ""Remaining: "" + ((previousSettings.first - now) / 1000) + "" seconds."");
}
return;
}",1,0,0,0,0,0,0,0,0,3,2,7,0,1,0,0,8,6,1,0,0,0.47,3,2
5894_9,9,12,"if (Log.isLoggable(TAG, Log.VERBOSE)) {
Log.v(TAG, ""Still in backoff, do not increase it. ""
+ ""Remaining: "" + ((previousSettings.first - now) / 1000) + "" seconds."");
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,8,6,1,0,0,0.49,5,3
5894_10,10,11,"Log.v(TAG, ""Still in backoff, do not increase it. ""
+ ""Remaining: "" + ((previousSettings.first - now) / 1000) + "" seconds."");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,6,1,0,0,0.48,6,3
5894_13,13,13,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.14,4,2
5894_15,15,15,newDelayInMs = previousSettings.second * 2;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,1,0,2,0.61,2,1
5894_17,17,20,"if (newDelayInMs <= 0) {
newDelayInMs = jitterize(INITIAL_SYNC_RETRY_TIME_IN_MS,
(long)(INITIAL_SYNC_RETRY_TIME_IN_MS * 1.1));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,8,6,1,0,7,0.89,0,0
5894_18,18,19,"newDelayInMs = jitterize(INITIAL_SYNC_RETRY_TIME_IN_MS,
(long)(INITIAL_SYNC_RETRY_TIME_IN_MS * 1.1));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,6,1,0,7,0.91,0,0
5894_22,22,24,"long maxSyncRetryTimeInSeconds = Settings.Global.getLong(mContext.getContentResolver(),
Settings.Global.SYNC_MAX_RETRY_DELAY_IN_SECONDS,
DEFAULT_MAX_SYNC_RETRY_TIME_IN_SECONDS);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,1,0,8,6,1,0,4,0.71,4,1
5894_25,25,27,"if (newDelayInMs > maxSyncRetryTimeInSeconds * 1000) {
newDelayInMs = maxSyncRetryTimeInSeconds * 1000;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,8,6,1,0,5,0.81,7,2
5894_26,26,26,newDelayInMs = maxSyncRetryTimeInSeconds * 1000;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,5,0.81,8,2
5894_29,29,29,final long backoff = now + newDelayInMs;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,8,6,1,0,2,0.61,11,4
5894_31,31,32,"mSyncStorageEngine.setBackoff(op.account, op.userId, op.authority,
backoff, newDelayInMs);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,8,6,1,0,3,0.63,13,5
5894_34,34,34,op.backoff = backoff;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,6,1,0,0,0.38,16,6
5894_35,35,35,op.updateEffectiveRunTime();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,6,1,0,1,0.57,17,6
5894_37,37,37,synchronized (mSyncQueue) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,6,1,0,1,0.57,19,8
5894_38,38,38,"mSyncQueue.onBackoffChanged(op.account, op.userId, op.authority, backoff);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,1,0.49,20,8
5890_1,1,1,            public void onStatusChanged(int which) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.51,0,0
5890_2,2,2,sendCheckAlarmsMessage();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.31,0,0
5889_1,1,1,"        public void onReceive(Context context, Intent intent) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,0,0,1,0.49,2,1
5889_2,2,2,final boolean wasConnected = mDataConnectionIsConnected;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,8,0,0,1,0.58,1,0
5889_4,4,4,mDataConnectionIsConnected = readDataConnectionState();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,8,0,0,1,0.49,0,0
5889_5,5,13,"if (mDataConnectionIsConnected) {
if (!wasConnected) {
if (Log.isLoggable(TAG, Log.VERBOSE)) {
Log.v(TAG, ""Reconnection detected: clearing all backoffs"");
}
mSyncStorageEngine.clearAllBackoffs(mSyncQueue);
}
sendCheckAlarmsMessage();
}",1,0,0,0,0,0,0,0,0,5,3,9,0,0,0,0,9,8,0,0,2,0.54,1,0
5889_6,6,11,"if (!wasConnected) {
if (Log.isLoggable(TAG, Log.VERBOSE)) {
Log.v(TAG, ""Reconnection detected: clearing all backoffs"");
}
mSyncStorageEngine.clearAllBackoffs(mSyncQueue);
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,0,0,9,8,0,0,1,0.47,2,1
5889_7,7,9,"if (Log.isLoggable(TAG, Log.VERBOSE)) {
Log.v(TAG, ""Reconnection detected: clearing all backoffs"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,9,8,0,0,0,0.37,3,2
5889_8,8,8,"Log.v(TAG, ""Reconnection detected: clearing all backoffs"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,0,0,0,0.34,4,3
5889_10,10,10,mSyncStorageEngine.clearAllBackoffs(mSyncQueue);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,0,0,0,0.35,6,5
5889_12,12,12,sendCheckAlarmsMessage();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,0,0,1,0.46,8,6
5888_1,1,1,    private void doDatabaseCleanup() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.36,1,1
5888_2,2,6,"for (UserInfo user : mUserManager.getUsers(true)) {
if (user.partial) continue;
Account[] accountsForUser = AccountManagerService.getSingleton().getAccounts(user.id);
mSyncStorageEngine.doDatabaseCleanup(accountsForUser, user.id);
}",0,0,0,1,0,0,0,0,0,3,1,5,0,0,0,0,5,2,1,0,2,0.61,0,0
5888_3,3,3,if (user.partial) continue;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,2,0.7,0,0
5888_4,4,4,Account[] accountsForUser = AccountManagerService.getSingleton().getAccounts(user.id);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,1,0.47,1,0
5888_5,5,5,"mSyncStorageEngine.doDatabaseCleanup(accountsForUser, user.id);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,1,0.52,2,1
5887_1,1,1,"public void onReceive(Context context, Intent intent) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.36,2,1
5887_2,2,2,updateRunningAccounts();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,6,0,0,1,0.53,1,0
5887_4,4,4,"scheduleSync(null, UserHandle.USER_ALL, null, null, 0 , false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,6,0,0,1,0.47,0,0
5885_1,1,1,        public void cancelSync(ISyncContext syncContext) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.53,0,0
5885_2,2,2,SyncThread info = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,5,1,0,2,0.54,0,0
5885_3,3,3,synchronized (mSyncThreadLock) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,3,0.7,1,0
5885_4,4,9,"for (SyncThread current : mSyncThreads.values()) {
if (current.mSyncContext.getSyncContextBinder() == syncContext.asBinder()) {
info = current;
break;
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,0,0,0,8,5,1,0,2,0.51,2,1
5885_5,5,8,"if (current.mSyncContext.getSyncContextBinder() == syncContext.asBinder()) {
info = current;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,8,5,1,0,1,0.41,3,2
5885_6,6,6,info = current;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.18,4,3
5885_7,7,7,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,8,5,1,0,0,0.24,5,4
5885_11,11,17,"if (info != null) {
if (mAllowParallelSyncs) {
onSyncCanceled(info);
} else {
onSyncCanceled();
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,0,0,8,5,1,0,1,0.5,9,6
5885_12,12,16,"if (mAllowParallelSyncs) {
onSyncCanceled(info);
} else {
onSyncCanceled();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,8,5,1,0,1,0.53,10,6
5885_13,13,13,onSyncCanceled(info);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.48,11,7
5885_14,14,14,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.15,12,8
5885_15,15,15,onSyncCanceled();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.58,13,9
5884_1,1,2,"public void startSync(ISyncContext syncContext, String authority, Account account,
Bundle extras) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,6,2,0,2,0.56,26,17
5884_3,3,3,final SyncContext syncContextClient = new SyncContext(syncContext);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,10,6,2,0,2,0.63,25,16
5884_5,5,5,boolean alreadyInProgress;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,10,6,2,0,0,0.33,23,15
5884_6,6,6,final Account threadsKey = toSyncKey(account);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,6,2,0,1,0.43,22,14
5884_7,7,7,synchronized (mSyncThreadLock) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,2,0,3,0.68,21,13
5884_8,8,26,"if (!mSyncThreads.containsKey(threadsKey)) {
if (mAutoInitialize
&& extras != null
&& extras.getBoolean(ContentResolver.SYNC_EXTRAS_INITIALIZE, false)) {
if (ContentResolver.getIsSyncable(account, authority) < 0) {
ContentResolver.setIsSyncable(account, authority, 1);
}
syncContextClient.onFinished(new SyncResult());
return;
}
SyncThread syncThread = new SyncThread(
""SyncAdapterThread-"" + mNumSyncStarts.incrementAndGet(),
syncContextClient, authority, account, extras);
mSyncThreads.put(threadsKey, syncThread);
syncThread.start();
alreadyInProgress = false;
} else {
alreadyInProgress = true;
}",1,0,0,0,0,0,0,0,0,12,3,19,0,0,0,0,10,6,2,0,2,0.52,2,0
5884_9,9,17,"if (mAutoInitialize
&& extras != null
&& extras.getBoolean(ContentResolver.SYNC_EXTRAS_INITIALIZE, false)) {
if (ContentResolver.getIsSyncable(account, authority) < 0) {
ContentResolver.setIsSyncable(account, authority, 1);
}
syncContextClient.onFinished(new SyncResult());
return;
}",1,0,0,0,0,0,0,0,0,5,2,9,0,1,0,0,10,6,2,0,2,0.48,11,6
5884_10,10,11,"&& extras != null
&& extras.getBoolean(ContentResolver.SYNC_EXTRAS_INITIALIZE, false)) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,6,2,0,1,0.39,17,10
5884_12,12,14,"if (ContentResolver.getIsSyncable(account, authority) < 0) {
ContentResolver.setIsSyncable(account, authority, 1);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,6,2,0,0,0.38,14,8
5884_13,13,13,"ContentResolver.setIsSyncable(account, authority, 1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,2,0,0,0.37,15,8
5884_15,15,15,syncContextClient.onFinished(new SyncResult());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,2,0,2,0.55,13,7
5884_16,16,16,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,6,2,0,0,0.16,12,6
5884_18,18,20,"SyncThread syncThread = new SyncThread(
""SyncAdapterThread-"" + mNumSyncStarts.incrementAndGet(),
syncContextClient, authority, account, extras);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,10,6,2,0,2,0.56,8,5
5884_21,21,21,"mSyncThreads.put(threadsKey, syncThread);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,6,2,0,1,0.48,7,4
5884_22,22,22,syncThread.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,6,2,0,1,0.48,6,3
5884_23,23,23,alreadyInProgress = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,2,0,0,0.31,5,2
5884_24,24,24,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,2,0,0,0.23,4,1
5884_25,25,25,alreadyInProgress = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,2,0,0,0.31,3,0
5884_29,29,31,"if (alreadyInProgress) {
syncContextClient.onFinished(SyncResult.ALREADY_IN_PROGRESS);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,10,6,2,0,2,0.53,0,0
5884_30,30,30,syncContextClient.onFinished(SyncResult.ALREADY_IN_PROGRESS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,2,0,2,0.55,1,0
5883_1,1,2,"public void startSync(ISyncContext syncContext, String authority, Account account,
Bundle extras) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,1,0,1,0.48,3,2
5883_3,3,3,final SyncContext syncContextClient = new SyncContext(syncContext);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,5,1,0,1,0.47,2,1
5883_5,5,5,boolean alreadyInProgress;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,8,5,1,0,0,0.36,0,0
5883_6,6,6,final Account threadsKey = toSyncKey(account);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,5,1,0,2,0.5,0,0
5883_7,7,7,synchronized (mSyncThreadLock) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,3,0.7,1,0
5883_8,8,26,"if (!mSyncThreads.containsKey(threadsKey)) {
if (mAutoInitialize
&& extras != null
&& extras.getBoolean(ContentResolver.SYNC_EXTRAS_INITIALIZE, false)) {
if (ContentResolver.getIsSyncable(account, authority) < 0) {
ContentResolver.setIsSyncable(account, authority, 1);
}
syncContextClient.onFinished(new SyncResult());
return;
}
SyncThread syncThread = new SyncThread(
""SyncAdapterThread-"" + mNumSyncStarts.incrementAndGet(),
syncContextClient, authority, account, extras);
mSyncThreads.put(threadsKey, syncThread);
syncThread.start();
alreadyInProgress = false;
} else {
alreadyInProgress = true;
}",1,0,0,0,0,0,0,0,0,12,3,19,0,0,0,0,8,5,1,0,2,0.53,2,1
5883_9,9,17,"if (mAutoInitialize
&& extras != null
&& extras.getBoolean(ContentResolver.SYNC_EXTRAS_INITIALIZE, false)) {
if (ContentResolver.getIsSyncable(account, authority) < 0) {
ContentResolver.setIsSyncable(account, authority, 1);
}
syncContextClient.onFinished(new SyncResult());
return;
}",1,0,0,0,0,0,0,0,0,5,2,9,0,1,0,0,8,5,1,0,1,0.42,3,2
5883_10,10,11,"&& extras != null
&& extras.getBoolean(ContentResolver.SYNC_EXTRAS_INITIALIZE, false)) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,1,0,1,0.37,4,3
5883_12,12,14,"if (ContentResolver.getIsSyncable(account, authority) < 0) {
ContentResolver.setIsSyncable(account, authority, 1);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,5,1,0,0,0.35,6,5
5883_13,13,13,"ContentResolver.setIsSyncable(account, authority, 1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.34,7,5
5883_15,15,15,syncContextClient.onFinished(new SyncResult());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.47,9,7
5883_16,16,16,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.14,10,7
5883_18,18,20,"SyncThread syncThread = new SyncThread(
""SyncAdapterThread-"" + mNumSyncStarts.incrementAndGet(),
syncContextClient, authority, account, extras);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,8,5,1,0,2,0.58,12,9
5883_21,21,21,"mSyncThreads.put(threadsKey, syncThread);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,1,0,2,0.62,15,10
5883_22,22,22,syncThread.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,1,0,2,0.6,16,10
5883_23,23,23,alreadyInProgress = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.31,17,11
5883_24,24,24,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.15,18,12
5883_25,25,25,alreadyInProgress = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.33,19,13
5883_29,29,31,"if (alreadyInProgress) {
syncContextClient.onFinished(SyncResult.ALREADY_IN_PROGRESS);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,8,5,1,0,1,0.45,23,15
5883_30,30,30,syncContextClient.onFinished(SyncResult.ALREADY_IN_PROGRESS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.47,24,15
5882_1,1,2,"    protected void onRestoreFile(ParcelFileDescriptor data, long size,
int type, String domain, String path, long mode, long mtime)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,0,0,2,0.49,22,17
5882_3,3,3,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,5,0,0,0,0.38,21,16
5882_4,4,4,String basePath = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,5,0,0,1,0.53,20,15
5882_6,6,8,"if (DEBUG) Log.d(TAG, ""onRestoreFile() size="" + size + "" type="" + type
+ "" domain="" + domain + "" relpath="" + path + "" mode="" + mode
+ "" mtime="" + mtime);",1,0,0,0,0,0,0,0,0,1,0,3,0,0,1,1,8,5,0,0,2,0.53,16,13
5882_7,7,8,"+ "" domain="" + domain + "" relpath="" + path + "" mode="" + mode
+ "" mtime="" + mtime);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,8,5,0,0,2,0.66,16,13
5882_10,10,22,"if (domain.equals(FullBackup.DATA_TREE_TOKEN)) {
basePath = getFilesDir().getCanonicalPath();
} else if (domain.equals(FullBackup.DATABASE_TREE_TOKEN)) {
basePath = getDatabasePath(""foo"").getParentFile().getCanonicalPath();
} else if (domain.equals(FullBackup.ROOT_TREE_TOKEN)) {
basePath = new File(getApplicationInfo().dataDir).getCanonicalPath();
} else if (domain.equals(FullBackup.SHAREDPREFS_TREE_TOKEN)) {
basePath = getSharedPrefsFile(""foo"").getParentFile().getCanonicalPath();
} else if (domain.equals(FullBackup.CACHE_TREE_TOKEN)) {
basePath = getCacheDir().getCanonicalPath();
} else {
Log.i(TAG, ""Unrecognized domain "" + domain);
}",1,0,0,0,0,0,0,0,0,11,1,13,0,0,1,1,8,5,0,0,2,0.57,2,1
5882_11,11,11,basePath = getFilesDir().getCanonicalPath();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.55,13,11
5882_12,12,12,} else if (domain.equals(FullBackup.DATABASE_TREE_TOKEN)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.46,12,10
5882_13,13,13,"basePath = getDatabasePath(""foo"").getParentFile().getCanonicalPath();",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.52,11,9
5882_14,14,14,} else if (domain.equals(FullBackup.ROOT_TREE_TOKEN)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.47,10,8
5882_15,15,15,basePath = new File(getApplicationInfo().dataDir).getCanonicalPath();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.51,9,7
5882_16,16,16,} else if (domain.equals(FullBackup.SHAREDPREFS_TREE_TOKEN)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.47,8,6
5882_17,17,17,"basePath = getSharedPrefsFile(""foo"").getParentFile().getCanonicalPath();",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.49,7,5
5882_18,18,18,} else if (domain.equals(FullBackup.CACHE_TREE_TOKEN)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.46,6,4
5882_19,19,19,basePath = getCacheDir().getCanonicalPath();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.54,5,3
5882_20,20,20,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.22,4,2
5882_21,21,21,"Log.i(TAG, ""Unrecognized domain "" + domain);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.57,3,1
5882_24,24,36,"if (basePath != null) {
File outFile = new File(basePath, path);
String outPath = outFile.getCanonicalPath();
if (outPath.startsWith(basePath + File.separatorChar)) {
if (DEBUG) Log.i(TAG, ""["" + domain + "" : "" + path + ""] mapped to "" + outPath);
onRestoreFile(data, size, outFile, type, mode, mtime);
return;
} else {
if (DEBUG) {
Log.e(TAG, ""Cross-domain restore attempt: "" + outPath);
}
}
}",1,0,0,0,0,0,0,0,0,9,3,13,0,0,1,1,8,5,0,0,2,0.58,0,0
5882_25,25,25,"File outFile = new File(basePath, path);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,0,0,1,0.55,0,0
5882_26,26,26,String outPath = outFile.getCanonicalPath();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,0,0,1,0.52,1,0
5882_27,27,35,"if (outPath.startsWith(basePath + File.separatorChar)) {
if (DEBUG) Log.i(TAG, ""["" + domain + "" : "" + path + ""] mapped to "" + outPath);
onRestoreFile(data, size, outFile, type, mode, mtime);
return;
} else {
if (DEBUG) {
Log.e(TAG, ""Cross-domain restore attempt: "" + outPath);
}
}",1,0,0,0,0,0,0,0,0,6,2,9,0,1,0,0,8,5,0,0,2,0.56,2,1
5882_28,28,28,"if (DEBUG) Log.i(TAG, ""["" + domain + "" : "" + path + ""] mapped to "" + outPath);",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,2,0.61,3,2
5882_29,29,29,"onRestoreFile(data, size, outFile, type, mode, mtime);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.32,4,3
5882_30,30,30,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.23,5,4
5882_31,31,31,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.22,6,5
5882_32,32,34,"if (DEBUG) {
Log.e(TAG, ""Cross-domain restore attempt: "" + outPath);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,5,0,0,2,0.55,7,6
5882_33,33,33,"Log.e(TAG, ""Cross-domain restore attempt: "" + outPath);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,2,0.56,8,7
5882_38,38,38,"if (DEBUG) Log.i(TAG, ""[ skipping file "" + path + ""]"");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,5,0,0,1,0.46,13,9
5882_39,39,39,"FullBackup.restoreFile(data, size, type, mode, mtime, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.37,14,9
5881_1,1,2,"protected final void fullBackupFileTree(String packageName, String domain, String rootPath,
HashSet<String> excludes, FullBackupDataOutput output) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,0,0,2,0.51,35,26
5881_3,3,3,File rootFile = new File(rootPath);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.56,34,25
5881_4,4,41,"if (rootFile.exists()) {
LinkedList<File> scanQueue = new LinkedList<File>();
scanQueue.add(rootFile);

while (scanQueue.size() > 0) {
File file = scanQueue.remove(0);
String filePath;
try {
filePath = file.getCanonicalPath();

if (excludes != null && excludes.contains(filePath)) {
continue;
}

StructStat stat = Libcore.os.lstat(filePath);
if (OsConstants.S_ISLNK(stat.st_mode)) {
if (DEBUG) Log.i(TAG, ""Symlink (skipping)!: "" + file);
continue;
} else if (OsConstants.S_ISDIR(stat.st_mode)) {
File[] contents = file.listFiles();
if (contents != null) {
for (File entry : contents) {
scanQueue.add(0, entry);
}
}
}
} catch (IOException e) {
if (DEBUG) Log.w(TAG, ""Error canonicalizing path of "" + file);
continue;
} catch (ErrnoException e) {
if (DEBUG) Log.w(TAG, ""Error scanning file "" + file + "" : "" + e);
continue;
}

FullBackup.backupToTar(packageName, domain, null, rootPath, filePath,
output.getData());
}
}",1,0,0,0,0,0,0,0,0,25,6,38,0,1,0,0,4,2,0,0,1,0.51,0,0
5881_5,5,5,LinkedList<File> scanQueue = new LinkedList<File>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.47,32,23
5881_6,6,6,scanQueue.add(rootFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,1,0.45,31,22
5881_8,8,40,"while (scanQueue.size() > 0) {
File file = scanQueue.remove(0);
String filePath;
try {
filePath = file.getCanonicalPath();

if (excludes != null && excludes.contains(filePath)) {
continue;
}

StructStat stat = Libcore.os.lstat(filePath);
if (OsConstants.S_ISLNK(stat.st_mode)) {
if (DEBUG) Log.i(TAG, ""Symlink (skipping)!: "" + file);
continue;
} else if (OsConstants.S_ISDIR(stat.st_mode)) {
File[] contents = file.listFiles();
if (contents != null) {
for (File entry : contents) {
scanQueue.add(0, entry);
}
}
}
} catch (IOException e) {
if (DEBUG) Log.w(TAG, ""Error canonicalizing path of "" + file);
continue;
} catch (ErrnoException e) {
if (DEBUG) Log.w(TAG, ""Error scanning file "" + file + "" : "" + e);
continue;
}

FullBackup.backupToTar(packageName, domain, null, rootPath, filePath,
output.getData());
}",0,1,0,0,0,0,0,0,0,22,5,33,0,0,1,0,4,2,0,0,1,0.5,0,0
5881_9,9,9,File file = scanQueue.remove(0);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.51,28,20
5881_10,10,10,String filePath;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.52,27,19
5881_11,11,36,"try {
filePath = file.getCanonicalPath();

if (excludes != null && excludes.contains(filePath)) {
continue;
}

StructStat stat = Libcore.os.lstat(filePath);
if (OsConstants.S_ISLNK(stat.st_mode)) {
if (DEBUG) Log.i(TAG, ""Symlink (skipping)!: "" + file);
continue;
} else if (OsConstants.S_ISDIR(stat.st_mode)) {
File[] contents = file.listFiles();
if (contents != null) {
for (File entry : contents) {
scanQueue.add(0, entry);
}
}
}
} catch (IOException e) {
if (DEBUG) Log.w(TAG, ""Error canonicalizing path of "" + file);
continue;
} catch (ErrnoException e) {
if (DEBUG) Log.w(TAG, ""Error scanning file "" + file + "" : "" + e);
continue;
}",0,0,0,0,1,0,0,0,0,18,4,26,0,1,0,1,4,2,0,0,1,0.51,1,0
5881_12,12,12,filePath = file.getCanonicalPath();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,0,0,1,0.54,25,17
5881_14,14,16,"if (excludes != null && excludes.contains(filePath)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,0,0,1,0.45,21,15
5881_15,15,15,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.3,22,15
5881_18,18,18,StructStat stat = Libcore.os.lstat(filePath);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,0,0,1,0.53,19,14
5881_19,19,29,"if (OsConstants.S_ISLNK(stat.st_mode)) {
if (DEBUG) Log.i(TAG, ""Symlink (skipping)!: "" + file);
continue;
} else if (OsConstants.S_ISDIR(stat.st_mode)) {
File[] contents = file.listFiles();
if (contents != null) {
for (File entry : contents) {
scanQueue.add(0, entry);
}
}
}",1,0,0,0,0,0,0,0,0,7,3,11,0,1,0,0,4,2,0,0,1,0.5,8,6
5881_20,20,20,"if (DEBUG) Log.i(TAG, ""Symlink (skipping)!: "" + file);",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.49,17,12
5881_21,21,21,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.3,16,11
5881_22,22,22,} else if (OsConstants.S_ISDIR(stat.st_mode)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.4,15,10
5881_23,23,23,File[] contents = file.listFiles();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.55,14,9
5881_24,24,28,"if (contents != null) {
for (File entry : contents) {
scanQueue.add(0, entry);
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,1,0,0,4,2,0,0,1,0.4,9,6
5881_25,25,27,"for (File entry : contents) {
scanQueue.add(0, entry);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,4,2,0,0,1,0.41,10,6
5881_26,26,26,"scanQueue.add(0, entry);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.27,11,6
5881_30,30,30,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.34,7,5
5881_31,31,31,"if (DEBUG) Log.w(TAG, ""Error canonicalizing path of "" + file);",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.49,6,4
5881_32,32,32,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.3,5,3
5881_33,33,33,} catch (ErrnoException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.38,4,2
5881_34,34,34,"if (DEBUG) Log.w(TAG, ""Error scanning file "" + file + "" : "" + e);",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.49,3,1
5881_35,35,35,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.3,2,0
5881_38,38,39,"FullBackup.backupToTar(packageName, domain, null, rootPath, filePath,
output.getData());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,2,0,0,1,0.42,0,0
5880_1,1,2,"protected final void fullBackupFileTree(String packageName, String domain, String rootPath,
HashSet<String> excludes, FullBackupDataOutput output) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.4,15,11
5880_3,3,3,File rootFile = new File(rootPath);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.38,14,10
5880_4,4,41,"if (rootFile.exists()) {
LinkedList<File> scanQueue = new LinkedList<File>();
scanQueue.add(rootFile);

while (scanQueue.size() > 0) {
File file = scanQueue.remove(0);
String filePath;
try {
filePath = file.getCanonicalPath();

if (excludes != null && excludes.contains(filePath)) {
continue;
}

StructStat stat = Libcore.os.lstat(filePath);
if (OsConstants.S_ISLNK(stat.st_mode)) {
if (DEBUG) Log.i(TAG, ""Symlink (skipping)!: "" + file);
continue;
} else if (OsConstants.S_ISDIR(stat.st_mode)) {
File[] contents = file.listFiles();
if (contents != null) {
for (File entry : contents) {
scanQueue.add(0, entry);
}
}
}
} catch (IOException e) {
if (DEBUG) Log.w(TAG, ""Error canonicalizing path of "" + file);
continue;
} catch (ErrnoException e) {
if (DEBUG) Log.w(TAG, ""Error scanning file "" + file + "" : "" + e);
continue;
}

FullBackup.backupToTar(packageName, domain, null, rootPath, filePath,
output.getData());
}
}",1,0,0,0,0,0,0,0,0,25,6,38,0,1,0,0,4,3,0,0,2,0.65,0,0
5880_5,5,5,LinkedList<File> scanQueue = new LinkedList<File>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.54,12,8
5880_6,6,6,scanQueue.add(rootFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,1,0.59,11,7
5880_8,8,40,"while (scanQueue.size() > 0) {
File file = scanQueue.remove(0);
String filePath;
try {
filePath = file.getCanonicalPath();

if (excludes != null && excludes.contains(filePath)) {
continue;
}

StructStat stat = Libcore.os.lstat(filePath);
if (OsConstants.S_ISLNK(stat.st_mode)) {
if (DEBUG) Log.i(TAG, ""Symlink (skipping)!: "" + file);
continue;
} else if (OsConstants.S_ISDIR(stat.st_mode)) {
File[] contents = file.listFiles();
if (contents != null) {
for (File entry : contents) {
scanQueue.add(0, entry);
}
}
}
} catch (IOException e) {
if (DEBUG) Log.w(TAG, ""Error canonicalizing path of "" + file);
continue;
} catch (ErrnoException e) {
if (DEBUG) Log.w(TAG, ""Error scanning file "" + file + "" : "" + e);
continue;
}

FullBackup.backupToTar(packageName, domain, null, rootPath, filePath,
output.getData());
}",0,1,0,0,0,0,0,0,0,22,5,33,0,0,1,0,4,3,0,0,2,0.65,0,0
5880_9,9,9,File file = scanQueue.remove(0);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.54,8,5
5880_10,10,10,String filePath;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.34,7,4
5880_11,11,36,"try {
filePath = file.getCanonicalPath();

if (excludes != null && excludes.contains(filePath)) {
continue;
}

StructStat stat = Libcore.os.lstat(filePath);
if (OsConstants.S_ISLNK(stat.st_mode)) {
if (DEBUG) Log.i(TAG, ""Symlink (skipping)!: "" + file);
continue;
} else if (OsConstants.S_ISDIR(stat.st_mode)) {
File[] contents = file.listFiles();
if (contents != null) {
for (File entry : contents) {
scanQueue.add(0, entry);
}
}
}
} catch (IOException e) {
if (DEBUG) Log.w(TAG, ""Error canonicalizing path of "" + file);
continue;
} catch (ErrnoException e) {
if (DEBUG) Log.w(TAG, ""Error scanning file "" + file + "" : "" + e);
continue;
}",0,0,0,0,1,0,0,0,0,18,4,26,0,1,0,1,4,3,0,0,2,0.65,0,0
5880_12,12,12,filePath = file.getCanonicalPath();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.4,5,2
5880_14,14,16,"if (excludes != null && excludes.contains(filePath)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,0,0.41,1,0
5880_15,15,15,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,2,0
5880_18,18,18,StructStat stat = Libcore.os.lstat(filePath);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.45,0,0
5880_19,19,29,"if (OsConstants.S_ISLNK(stat.st_mode)) {
if (DEBUG) Log.i(TAG, ""Symlink (skipping)!: "" + file);
continue;
} else if (OsConstants.S_ISDIR(stat.st_mode)) {
File[] contents = file.listFiles();
if (contents != null) {
for (File entry : contents) {
scanQueue.add(0, entry);
}
}
}",1,0,0,0,0,0,0,0,0,7,3,11,0,1,0,0,4,3,0,0,2,0.67,1,0
5880_20,20,20,"if (DEBUG) Log.i(TAG, ""Symlink (skipping)!: "" + file);",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.45,2,1
5880_21,21,21,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,3,2
5880_22,22,22,} else if (OsConstants.S_ISDIR(stat.st_mode)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.46,4,3
5880_23,23,23,File[] contents = file.listFiles();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.52,5,4
5880_24,24,28,"if (contents != null) {
for (File entry : contents) {
scanQueue.add(0, entry);
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,1,0,0,4,3,0,0,2,0.66,6,5
5880_25,25,27,"for (File entry : contents) {
scanQueue.add(0, entry);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,2,0.65,7,6
5880_26,26,26,"scanQueue.add(0, entry);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.53,8,7
5880_30,30,30,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,12,9
5880_31,31,31,"if (DEBUG) Log.w(TAG, ""Error canonicalizing path of "" + file);",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.39,13,9
5880_32,32,32,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,14,10
5880_33,33,33,} catch (ErrnoException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.41,15,11
5880_34,34,34,"if (DEBUG) Log.w(TAG, ""Error scanning file "" + file + "" : "" + e);",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.49,16,12
5880_35,35,35,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,17,13
5880_38,38,39,"FullBackup.backupToTar(packageName, domain, null, rootPath, filePath,
output.getData());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,3,0,0,0,0.37,20,15
5879_1,1,1,"    public final void fullBackupFile(File file, FullBackupDataOutput output) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.38,50,40
5879_2,2,2,String mainDir;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.37,49,39
5879_3,3,3,String filesDir;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.38,48,38
5879_4,4,4,String dbDir;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.36,47,37
5879_5,5,5,String spDir;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.51,46,36
5879_6,6,6,String cacheDir;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.36,45,35
5879_7,7,7,String libDir;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.4,44,34
5879_8,8,8,String filePath;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,2,1,0,0,0.33,43,33
5879_10,10,10,ApplicationInfo appInfo = getApplicationInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,2,1,0,0,0.33,41,32
5879_12,12,26,"try {
mainDir = new File(appInfo.dataDir).getCanonicalPath();
filesDir = getFilesDir().getCanonicalPath();
dbDir = getDatabasePath(""foo"").getParentFile().getCanonicalPath();
spDir = getSharedPrefsFile(""foo"").getParentFile().getCanonicalPath();
cacheDir = getCacheDir().getCanonicalPath();
libDir = (appInfo.nativeLibraryDir == null)
? null
: new File(appInfo.nativeLibraryDir).getCanonicalPath();

filePath = file.getCanonicalPath();
} catch (IOException e) {
Log.w(TAG, ""Unable to obtain canonical paths"");
return;
}",0,0,0,0,1,0,0,0,0,11,1,15,0,0,1,1,5,2,1,0,0,0.53,25,20
5879_13,13,13,mainDir = new File(appInfo.dataDir).getCanonicalPath();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,2,1,0,0,0.42,38,30
5879_14,14,14,filesDir = getFilesDir().getCanonicalPath();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,2,1,0,0,0.45,37,29
5879_15,15,15,"dbDir = getDatabasePath(""foo"").getParentFile().getCanonicalPath();",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,2,1,0,0,0.47,36,28
5879_16,16,16,"spDir = getSharedPrefsFile(""foo"").getParentFile().getCanonicalPath();",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,2,1,0,0,0.51,35,27
5879_17,17,17,cacheDir = getCacheDir().getCanonicalPath();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,2,1,0,0,0.43,34,26
5879_18,18,18,libDir = (appInfo.nativeLibraryDir == null),0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.42,33,25
5879_19,19,20,"? null
: new File(appInfo.nativeLibraryDir).getCanonicalPath();",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,5,2,1,0,0,0.43,31,24
5879_22,22,22,filePath = file.getCanonicalPath();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,0,0.43,29,23
5879_23,23,23,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.44,28,22
5879_24,24,24,"Log.w(TAG, ""Unable to obtain canonical paths"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.55,27,21
5879_25,25,25,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.31,26,20
5879_28,28,31,"if (filePath.startsWith(cacheDir) || filePath.startsWith(libDir)) {
Log.w(TAG, ""lib and cache files are not backed up"");
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,5,2,1,0,1,0.52,20,17
5879_29,29,29,"Log.w(TAG, ""lib and cache files are not backed up"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.56,22,18
5879_30,30,30,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.31,21,17
5879_33,33,33,final String domain;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,2,1,0,0,0.34,18,16
5879_34,34,34,String rootpath = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.3,17,15
5879_35,35,50,"if (filePath.startsWith(dbDir)) {
domain = FullBackup.DATABASE_TREE_TOKEN;
rootpath = dbDir;
} else if (filePath.startsWith(spDir)) {
domain = FullBackup.SHAREDPREFS_TREE_TOKEN;
rootpath = spDir;
} else if (filePath.startsWith(filesDir)) {
domain = FullBackup.DATA_TREE_TOKEN;
rootpath = filesDir;
} else if (filePath.startsWith(mainDir)) {
domain = FullBackup.ROOT_TREE_TOKEN;
rootpath = mainDir;
} else {
Log.w(TAG, ""File "" + filePath + "" is in an unsupported location; skipping"");
return;
}",1,0,0,0,0,0,0,0,0,14,1,16,0,1,0,1,5,2,1,0,0,0.49,1,0
5879_36,36,36,domain = FullBackup.DATABASE_TREE_TOKEN;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.41,15,13
5879_37,37,37,rootpath = dbDir;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.39,14,12
5879_38,38,38,} else if (filePath.startsWith(spDir)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.48,13,11
5879_39,39,39,domain = FullBackup.SHAREDPREFS_TREE_TOKEN;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.41,12,10
5879_40,40,40,rootpath = spDir;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.57,11,9
5879_41,41,41,} else if (filePath.startsWith(filesDir)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.38,10,8
5879_42,42,42,domain = FullBackup.DATA_TREE_TOKEN;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.4,9,7
5879_43,43,43,rootpath = filesDir;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.41,8,6
5879_44,44,44,} else if (filePath.startsWith(mainDir)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.37,7,5
5879_45,45,45,domain = FullBackup.ROOT_TREE_TOKEN;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.42,6,4
5879_46,46,46,rootpath = mainDir;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.4,5,3
5879_47,47,47,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.25,4,2
5879_48,48,48,"Log.w(TAG, ""File "" + filePath + "" is in an unsupported location; skipping"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.45,3,1
5879_49,49,49,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.31,2,0
5879_52,52,53,"Log.i(TAG, ""backupFile() of "" + filePath + "" => domain="" + domain
+ "" rootpath="" + rootpath);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,1,0,5,2,1,0,0,0.45,0,0
5879_54,54,55,"FullBackup.backupToTar(getPackageName(), domain, null, rootpath, filePath,
output.getData());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,5,2,1,0,0,0.4,2,1
5878_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,6,1,0,0,0.35,23,16
5878_2,2,2,ApplicationInfo appInfo = getApplicationInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,6,1,0,0,0.37,22,15
5878_4,4,4,String rootDir = new File(appInfo.dataDir).getCanonicalPath();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,7,6,1,0,2,0.67,20,14
5878_5,5,5,String filesDir = getFilesDir().getCanonicalPath();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,7,6,1,0,2,0.71,19,13
5878_6,6,6,"String databaseDir = getDatabasePath(""foo"").getParentFile().getCanonicalPath();",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,7,6,1,0,2,0.67,18,12
5878_7,7,7,"String sharedPrefsDir = getSharedPrefsFile(""foo"").getParentFile().getCanonicalPath();",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,7,6,1,0,4,0.81,17,11
5878_8,8,8,String cacheDir = getCacheDir().getCanonicalPath();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,7,6,1,0,1,0.62,16,10
5878_9,9,11,"String libDir = (appInfo.nativeLibraryDir != null)
? new File(appInfo.nativeLibraryDir).getCanonicalPath()
: null;",0,0,0,0,0,1,0,0,0,0,0,3,1,0,0,1,7,6,1,0,2,0.66,13,9
5878_13,13,13,HashSet<String> filterSet = new HashSet<String>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,6,1,0,0,0.32,11,8
5878_14,14,14,String packageName = getPackageName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,6,1,0,0,0.36,10,7
5878_16,16,18,"if (libDir != null) {
filterSet.add(libDir);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,1,0,7,6,1,0,1,0.59,6,5
5878_17,17,17,filterSet.add(libDir);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,1,0.56,7,5
5878_19,19,19,filterSet.add(cacheDir);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,6,1,0,1,0.55,5,4
5878_20,20,20,filterSet.add(databaseDir);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,6,1,0,1,0.6,4,3
5878_21,21,21,filterSet.add(sharedPrefsDir);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,6,1,0,3,0.74,3,2
5878_22,22,22,filterSet.add(filesDir);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,6,1,0,2,0.62,2,1
5878_23,23,23,"fullBackupFileTree(packageName, FullBackup.ROOT_TREE_TOKEN, rootDir, filterSet, data);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,7,6,1,0,2,0.6,1,0
5878_25,25,25,filterSet.add(rootDir);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,7,6,1,0,1,0.54,0,0
5878_26,26,26,filterSet.remove(filesDir);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,1,0,2,0.63,1,0
5878_27,27,27,"fullBackupFileTree(packageName, FullBackup.DATA_TREE_TOKEN, filesDir, filterSet, data);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,7,6,1,0,2,0.61,2,1
5878_29,29,29,filterSet.add(filesDir);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,7,6,1,0,2,0.62,4,3
5878_30,30,30,filterSet.remove(databaseDir);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,1,0,1,0.61,5,3
5878_31,31,31,"fullBackupFileTree(packageName, FullBackup.DATABASE_TREE_TOKEN, databaseDir, filterSet, data);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,7,6,1,0,2,0.65,6,4
5878_33,33,33,filterSet.add(databaseDir);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,7,6,1,0,1,0.6,8,6
5878_34,34,34,filterSet.remove(sharedPrefsDir);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,1,0,3,0.75,9,6
5878_35,35,35,"fullBackupFileTree(packageName, FullBackup.SHAREDPREFS_TREE_TOKEN, sharedPrefsDir, filterSet, data);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,1,0,4,0.72,10,7
5877_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,6,0,0,0,0.37,14,9
5877_2,2,2,ApplicationInfo appInfo = getApplicationInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,6,0,0,1,0.44,13,8
5877_4,4,4,String rootDir = new File(appInfo.dataDir).getCanonicalPath();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,8,6,0,0,3,0.61,11,7
5877_5,5,5,String filesDir = getFilesDir().getCanonicalPath();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,8,6,0,0,1,0.5,10,6
5877_6,6,6,"String databaseDir = getDatabasePath(""foo"").getParentFile().getCanonicalPath();",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,8,6,0,0,1,0.57,9,5
5877_7,7,7,"String sharedPrefsDir = getSharedPrefsFile(""foo"").getParentFile().getCanonicalPath();",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,8,6,0,0,1,0.57,8,4
5877_8,8,8,String cacheDir = getCacheDir().getCanonicalPath();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,8,6,0,0,1,0.49,7,3
5877_9,9,11,"String libDir = (appInfo.nativeLibraryDir != null)
? new File(appInfo.nativeLibraryDir).getCanonicalPath()
: null;",0,0,0,0,0,1,0,0,0,0,0,3,1,0,0,1,8,6,0,0,2,0.55,4,2
5877_13,13,13,HashSet<String> filterSet = new HashSet<String>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,8,6,0,0,0,0.33,2,1
5877_14,14,14,String packageName = getPackageName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,6,0,0,0,0.31,1,0
5877_16,16,18,"if (libDir != null) {
filterSet.add(libDir);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,1,0,8,6,0,0,0,0.44,0,0
5877_17,17,17,filterSet.add(libDir);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.41,1,0
5877_19,19,19,filterSet.add(cacheDir);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,6,0,0,0,0.38,3,2
5877_20,20,20,filterSet.add(databaseDir);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,6,0,0,0,0.4,4,2
5877_21,21,21,filterSet.add(sharedPrefsDir);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,6,0,0,0,0.4,5,3
5877_22,22,22,filterSet.add(filesDir);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,6,0,0,0,0.39,6,4
5877_23,23,23,"fullBackupFileTree(packageName, FullBackup.ROOT_TREE_TOKEN, rootDir, filterSet, data);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,8,6,0,0,2,0.57,7,5
5877_25,25,25,filterSet.add(rootDir);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,8,6,0,0,1,0.49,9,7
5877_26,26,26,filterSet.remove(filesDir);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,0,0,0,0.42,10,7
5877_27,27,27,"fullBackupFileTree(packageName, FullBackup.DATA_TREE_TOKEN, filesDir, filterSet, data);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,8,6,0,0,1,0.5,11,8
5877_29,29,29,filterSet.add(filesDir);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,8,6,0,0,0,0.39,13,10
5877_30,30,30,filterSet.remove(databaseDir);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,0,0,0,0.43,14,10
5877_31,31,31,"fullBackupFileTree(packageName, FullBackup.DATABASE_TREE_TOKEN, databaseDir, filterSet, data);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,8,6,0,0,1,0.52,15,11
5877_33,33,33,filterSet.add(databaseDir);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,8,6,0,0,0,0.4,17,13
5877_34,34,34,filterSet.remove(sharedPrefsDir);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,0,0,0,0.43,18,13
5877_35,35,35,"fullBackupFileTree(packageName, FullBackup.SHAREDPREFS_TREE_TOKEN, sharedPrefsDir, filterSet, data);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,0,0,1,0.51,19,14
5876_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,4,1,0,0,0.31,11,7
5876_2,2,2,ApplicationInfo appInfo = getApplicationInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.23,10,6
5876_4,4,4,String rootDir = new File(appInfo.dataDir).getCanonicalPath();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,6,4,1,0,0,0.32,8,5
5876_5,5,5,String filesDir = getFilesDir().getCanonicalPath();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,6,4,1,0,0,0.3,7,4
5876_6,6,6,"String databaseDir = getDatabasePath(""foo"").getParentFile().getCanonicalPath();",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,6,4,1,0,0,0.33,6,3
5876_7,7,7,"String sharedPrefsDir = getSharedPrefsFile(""foo"").getParentFile().getCanonicalPath();",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,6,4,1,0,0,0.31,5,2
5876_8,8,8,String cacheDir = getCacheDir().getCanonicalPath();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,6,4,1,0,0,0.3,4,1
5876_9,9,11,"String libDir = (appInfo.nativeLibraryDir != null)
? new File(appInfo.nativeLibraryDir).getCanonicalPath()
: null;",0,0,0,0,0,1,0,0,0,0,0,3,1,0,0,1,6,4,1,0,0,0.32,1,0
5876_13,13,13,HashSet<String> filterSet = new HashSet<String>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,4,1,0,2,0.56,0,0
5876_14,14,14,String packageName = getPackageName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.25,1,0
5876_16,16,18,"if (libDir != null) {
filterSet.add(libDir);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,1,0,6,4,1,0,2,0.52,3,2
5876_17,17,17,filterSet.add(libDir);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,2,0.56,4,2
5876_19,19,19,filterSet.add(cacheDir);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,1,0,2,0.56,6,4
5876_20,20,20,filterSet.add(databaseDir);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,1,0,2,0.56,7,4
5876_21,21,21,filterSet.add(sharedPrefsDir);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,1,0,2,0.51,8,5
5876_22,22,22,filterSet.add(filesDir);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,1,0,2,0.55,9,6
5876_23,23,23,"fullBackupFileTree(packageName, FullBackup.ROOT_TREE_TOKEN, rootDir, filterSet, data);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,4,1,0,2,0.5,10,7
5876_25,25,25,filterSet.add(rootDir);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,4,1,0,2,0.6,12,9
5876_26,26,26,filterSet.remove(filesDir);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,2,0.56,13,9
5876_27,27,27,"fullBackupFileTree(packageName, FullBackup.DATA_TREE_TOKEN, filesDir, filterSet, data);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,4,1,0,2,0.47,14,10
5876_29,29,29,filterSet.add(filesDir);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,4,1,0,2,0.55,16,12
5876_30,30,30,filterSet.remove(databaseDir);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,2,0.56,17,12
5876_31,31,31,"fullBackupFileTree(packageName, FullBackup.DATABASE_TREE_TOKEN, databaseDir, filterSet, data);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,4,1,0,2,0.48,18,13
5876_33,33,33,filterSet.add(databaseDir);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,4,1,0,2,0.56,20,15
5876_34,34,34,filterSet.remove(sharedPrefsDir);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,2,0.52,21,15
5876_35,35,35,"fullBackupFileTree(packageName, FullBackup.SHAREDPREFS_TREE_TOKEN, sharedPrefsDir, filterSet, data);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,2,0.47,22,16
5875_1,1,1,public void setProperty(Property property) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,2,0,2,0.64,0,0
5875_2,2,8,"if (mValues != null) {
PropertyValuesHolder valuesHolder = mValues[0];
String oldName = valuesHolder.getPropertyName();
valuesHolder.setProperty(property);
mValuesMap.remove(oldName);
mValuesMap.put(mPropertyName, valuesHolder);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,0,0,13,9,2,0,5,0.7,0,0
5875_3,3,3,PropertyValuesHolder valuesHolder = mValues[0];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,13,9,2,0,2,0.59,1,0
5875_4,4,4,String oldName = valuesHolder.getPropertyName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,13,9,2,0,3,0.6,2,1
5875_5,5,5,valuesHolder.setProperty(property);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,13,9,2,0,3,0.7,3,2
5875_6,6,6,mValuesMap.remove(oldName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,2,0,2,0.52,4,3
5875_7,7,7,"mValuesMap.put(mPropertyName, valuesHolder);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,2,0,3,0.64,5,4
5875_9,9,11,"if (mProperty != null) {
mPropertyName = property.getName();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,13,9,2,0,3,0.7,7,6
5875_10,10,10,mPropertyName = property.getName();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,2,0,2,0.65,8,6
5875_12,12,12,mProperty = property;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,2,0,1,0.66,10,8
5875_13,13,13,mInitialized = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,2,0,0,0.22,11,8
5874_1,1,1,public void setPropertyName(String propertyName) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,2,0,3,0.66,0,0
5874_2,2,8,"if (mValues != null) {
PropertyValuesHolder valuesHolder = mValues[0];
String oldName = valuesHolder.getPropertyName();
valuesHolder.setPropertyName(propertyName);
mValuesMap.remove(oldName);
mValuesMap.put(propertyName, valuesHolder);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,0,0,13,9,2,0,5,0.71,0,0
5874_3,3,3,PropertyValuesHolder valuesHolder = mValues[0];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,13,9,2,0,2,0.59,1,0
5874_4,4,4,String oldName = valuesHolder.getPropertyName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,13,9,2,0,3,0.6,2,1
5874_5,5,5,valuesHolder.setPropertyName(propertyName);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,13,9,2,0,4,0.75,3,2
5874_6,6,6,mValuesMap.remove(oldName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,2,0,2,0.52,4,3
5874_7,7,7,"mValuesMap.put(propertyName, valuesHolder);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,2,0,3,0.64,5,4
5874_9,9,9,mPropertyName = propertyName;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,2,0,2,0.7,7,6
5874_10,10,10,mInitialized = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,2,0,0,0.22,8,6
5873_1,1,1,throws RemoteException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,0,0.21,34,27
5873_2,2,3,"getAccountsByTypeAndFeatures(mAccountType, mFeatures,
new AccountManagerCallback<Account[]>() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,1,0.6,32,26
5873_4,4,4,public void run(AccountManagerFuture<Account[]> future) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.54,31,25
5873_5,5,5,Account[] accounts;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.74,30,24
5873_6,6,17,"try {
accounts = future.getResult();
} catch (OperationCanceledException e) {
setException(e);
return;
} catch (IOException e) {
setException(e);
return;
} catch (AuthenticatorException e) {
setException(e);
return;
}",0,0,0,0,1,0,0,0,0,10,1,12,0,1,0,1,4,3,0,0,2,0.57,18,13
5873_7,7,7,accounts = future.getResult();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.52,28,22
5873_8,8,8,} catch (OperationCanceledException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.3,27,21
5873_9,9,9,setException(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,26,20
5873_10,10,10,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.7,25,19
5873_11,11,11,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,24,18
5873_12,12,12,setException(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,23,17
5873_13,13,13,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.7,22,16
5873_14,14,14,} catch (AuthenticatorException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.3,21,15
5873_15,15,15,setException(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,20,14
5873_16,16,16,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.7,19,13
5873_19,19,19,mNumAccounts = accounts.length;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.62,16,12
5873_21,21,76,"if (accounts.length == 0) {
if (mActivity != null) {
mFuture = addAccount(mAccountType, mAuthTokenType, mFeatures,
mAddAccountOptions, mActivity, mMyCallback, mHandler);
} else {
Bundle result = new Bundle();
result.putString(KEY_ACCOUNT_NAME, null);
result.putString(KEY_ACCOUNT_TYPE, null);
result.putString(KEY_AUTHTOKEN, null);
try {
mResponse.onResult(result);
} catch (RemoteException e) {
}
}
} else if (accounts.length == 1) {
if (mActivity == null) {
mFuture = getAuthToken(accounts[0], mAuthTokenType,
false , mMyCallback, mHandler);
} else {
mFuture = getAuthToken(accounts[0],
mAuthTokenType, mLoginOptions,
mActivity, mMyCallback, mHandler);
}
} else {
if (mActivity != null) {
IAccountManagerResponse chooseResponse =
new IAccountManagerResponse.Stub() {
public void onResult(Bundle value) throws RemoteException {
Account account = new Account(
value.getString(KEY_ACCOUNT_NAME),
value.getString(KEY_ACCOUNT_TYPE));
mFuture = getAuthToken(account, mAuthTokenType, mLoginOptions,
mActivity, mMyCallback, mHandler);
}

public void onError(int errorCode, String errorMessage)
throws RemoteException {
mResponse.onError(errorCode, errorMessage);
}
};
Intent intent = new Intent();
intent.setClassName(""android"",
""android.accounts.ChooseAccountActivity"");
intent.putExtra(KEY_ACCOUNTS, accounts);
intent.putExtra(KEY_ACCOUNT_MANAGER_RESPONSE,
new AccountManagerResponse(chooseResponse));
mActivity.startActivity(intent);
} else {
Bundle result = new Bundle();
result.putString(KEY_ACCOUNTS, null);
try {
mResponse.onResult(result);
} catch (RemoteException e) {
}
}
}",1,0,0,0,0,0,0,0,0,32,4,56,0,0,1,0,4,3,0,0,2,0.54,0,0
5873_22,22,34,"if (mActivity != null) {
mFuture = addAccount(mAccountType, mAuthTokenType, mFeatures,
mAddAccountOptions, mActivity, mMyCallback, mHandler);
} else {
Bundle result = new Bundle();
result.putString(KEY_ACCOUNT_NAME, null);
result.putString(KEY_ACCOUNT_TYPE, null);
result.putString(KEY_AUTHTOKEN, null);
try {
mResponse.onResult(result);
} catch (RemoteException e) {
}
}",1,0,0,0,0,0,0,0,0,9,2,13,0,0,0,0,4,3,0,0,2,0.52,1,1
5873_23,23,24,"mFuture = addAccount(mAccountType, mAuthTokenType, mFeatures,
mAddAccountOptions, mActivity, mMyCallback, mHandler);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,1,0.56,11,9
5873_25,25,25,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,10,8
5873_26,26,26,Bundle result = new Bundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.24,9,7
5873_27,27,27,"result.putString(KEY_ACCOUNT_NAME, null);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,1,0.51,8,6
5873_28,28,28,"result.putString(KEY_ACCOUNT_TYPE, null);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,1,0.52,7,5
5873_29,29,29,"result.putString(KEY_AUTHTOKEN, null);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,1,0.35,6,4
5873_30,30,33,"try {
mResponse.onResult(result);
} catch (RemoteException e) {
}",0,0,0,0,1,0,0,0,0,2,1,4,0,1,0,0,4,3,0,0,0,0.24,2,1
5873_31,31,31,mResponse.onResult(result);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,4,2
5873_32,32,32,} catch (RemoteException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,3,1
5873_35,35,35,} else if (accounts.length == 1) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.57,0,0
5873_36,36,43,"if (mActivity == null) {
mFuture = getAuthToken(accounts[0], mAuthTokenType,
false , mMyCallback, mHandler);
} else {
mFuture = getAuthToken(accounts[0],
mAuthTokenType, mLoginOptions,
mActivity, mMyCallback, mHandler);
}",1,0,0,0,0,0,0,0,0,3,1,8,0,0,0,0,4,3,0,0,1,0.54,0,0
5873_37,37,38,"mFuture = getAuthToken(accounts[0], mAuthTokenType,
false , mMyCallback, mHandler);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,1,0.52,1,0
5873_39,39,39,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,3,2
5873_40,40,42,"mFuture = getAuthToken(accounts[0],
mAuthTokenType, mLoginOptions,
mActivity, mMyCallback, mHandler);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,4,3,0,0,1,0.5,4,2
5873_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,8,4
5873_45,45,75,"if (mActivity != null) {
IAccountManagerResponse chooseResponse =
new IAccountManagerResponse.Stub() {
public void onResult(Bundle value) throws RemoteException {
Account account = new Account(
value.getString(KEY_ACCOUNT_NAME),
value.getString(KEY_ACCOUNT_TYPE));
mFuture = getAuthToken(account, mAuthTokenType, mLoginOptions,
mActivity, mMyCallback, mHandler);
}

public void onError(int errorCode, String errorMessage)
throws RemoteException {
mResponse.onError(errorCode, errorMessage);
}
};
Intent intent = new Intent();
intent.setClassName(""android"",
""android.accounts.ChooseAccountActivity"");
intent.putExtra(KEY_ACCOUNTS, accounts);
intent.putExtra(KEY_ACCOUNT_MANAGER_RESPONSE,
new AccountManagerResponse(chooseResponse));
mActivity.startActivity(intent);
} else {
Bundle result = new Bundle();
result.putString(KEY_ACCOUNTS, null);
try {
mResponse.onResult(result);
} catch (RemoteException e) {
}
}",1,0,0,0,0,0,0,0,0,15,3,31,0,0,0,0,4,3,0,0,1,0.51,9,4
5873_46,46,60,"IAccountManagerResponse chooseResponse =
new IAccountManagerResponse.Stub() {
public void onResult(Bundle value) throws RemoteException {
Account account = new Account(
value.getString(KEY_ACCOUNT_NAME),
value.getString(KEY_ACCOUNT_TYPE));
mFuture = getAuthToken(account, mAuthTokenType, mLoginOptions,
mActivity, mMyCallback, mHandler);
}

public void onError(int errorCode, String errorMessage)
throws RemoteException {
mResponse.onError(errorCode, errorMessage);
}
};",0,0,0,0,0,1,0,0,0,3,2,15,0,0,0,0,4,3,0,0,1,0.49,10,5
5873_48,48,48,throws RemoteException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,0,0.21,12,7
5873_49,49,51,"Account account = new Account(
value.getString(KEY_ACCOUNT_NAME),
value.getString(KEY_ACCOUNT_TYPE));",0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,4,3,0,0,1,0.51,13,7
5873_57,57,57,throws RemoteException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,0,0.21,21,9
5873_61,61,61,Intent intent = new Intent();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.14,25,10
5873_62,62,63,"intent.setClassName(""android"",
""android.accounts.ChooseAccountActivity"");",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,3,0,0,1,0.51,26,10
5873_64,64,64,"intent.putExtra(KEY_ACCOUNTS, accounts);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,1,0.5,28,12
5873_65,65,66,"intent.putExtra(KEY_ACCOUNT_MANAGER_RESPONSE,
new AccountManagerResponse(chooseResponse));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,4,3,0,0,1,0.46,29,12
5873_67,67,67,mActivity.startActivity(intent);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.32,31,14
5873_68,68,68,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,32,14
5873_69,69,69,Bundle result = new Bundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.24,33,15
5873_70,70,70,"result.putString(KEY_ACCOUNTS, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.53,34,16
5873_71,71,74,"try {
mResponse.onResult(result);
} catch (RemoteException e) {
}",0,0,0,0,1,0,0,0,0,2,1,4,0,1,0,0,4,3,0,0,0,0.24,35,17
5873_72,72,72,mResponse.onResult(result);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,36,18
5873_73,73,73,} catch (RemoteException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,37,19
5873_77,77,77,"}}, mHandler);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.18,41,21
5872_1,1,1,            public void onResult(Bundle bundle) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,0,0.34,2,2
5872_2,2,2,Intent intent = bundle.getParcelable(KEY_INTENT);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,7,0,0,1,0.51,1,1
5872_3,3,12,"if (intent != null && mActivity != null) {
mActivity.startActivity(intent);
} else if (bundle.getBoolean(""retry"")) {
try {
doWork();
} catch (RemoteException e) {
}
} else {
set(bundle);
}",1,0,0,0,0,0,0,0,0,7,2,10,0,1,0,0,8,7,0,0,3,0.6,0,0
5872_4,4,4,mActivity.startActivity(intent);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,3,0.76,0,0
5872_5,5,5,"} else if (bundle.getBoolean(""retry"")) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,0,0.34,1,0
5872_6,6,9,"try {
doWork();
} catch (RemoteException e) {
}",0,0,0,0,1,0,0,0,0,2,1,4,0,0,0,0,8,7,0,0,0,0.39,2,1
5872_7,7,7,doWork();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,0,0.26,3,2
5872_8,8,8,} catch (RemoteException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,0,0.4,4,3
5872_10,10,10,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,0,0.2,6,5
5872_11,11,11,set(bundle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,0,0.24,7,5
5871_1,1,1,public Bundle saveInstanceState() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,2,0.53,10,8
5871_2,2,2,Bundle state = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,5,1,0,1,0.45,9,7
5871_4,4,4,final int N = mActivityArray.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,5,1,0,1,0.35,7,6
5871_5,5,19,"for (int i=0; i<N; i++) {
final LocalActivityRecord r = mActivityArray.get(i);
if (state == null) {
state = new Bundle();
}
if ((r.instanceState != null || r.curState == RESUMED)
&& r.activity != null) {
final Bundle childState = new Bundle();
r.activity.performSaveInstanceState(childState);
r.instanceState = childState;
}
if (r.instanceState != null) {
state.putBundle(r.id, r.instanceState);
}
}",0,0,1,0,0,0,0,0,0,10,2,15,0,1,0,1,8,5,1,0,4,0.61,0,0
5871_6,6,6,final LocalActivityRecord r = mActivityArray.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.42,5,4
5871_7,7,9,"if (state == null) {
state = new Bundle();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,5,1,0,1,0.48,2,2
5871_8,8,8,state = new Bundle();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.45,3,2
5871_10,10,15,"if ((r.instanceState != null || r.curState == RESUMED)
&& r.activity != null) {
final Bundle childState = new Bundle();
r.activity.performSaveInstanceState(childState);
r.instanceState = childState;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,8,5,1,0,4,0.64,0,0
5871_11,11,11,&& r.activity != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.49,0,0
5871_12,12,12,final Bundle childState = new Bundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,1,0,1,0.39,0,0
5871_13,13,13,r.activity.performSaveInstanceState(childState);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,1,0,3,0.62,1,0
5871_14,14,14,r.instanceState = childState;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,1,0,1,0.5,2,1
5871_16,16,18,"if (r.instanceState != null) {
state.putBundle(r.id, r.instanceState);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,8,5,1,0,1,0.46,4,3
5871_17,17,17,"state.putBundle(r.id, r.instanceState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.46,5,3
5871_21,21,21,return state;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,8,5,1,0,1,0.5,9,5
5870_1,1,1,"public Window startActivity(String id, Intent intent) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.42,72,48
5870_2,2,5,"if (mCurState == INITIALIZING) {
throw new IllegalStateException(
""Activities can't be added until the containing group has been created."");
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,1,6,4,1,0,1,0.43,68,46
5870_3,3,4,"throw new IllegalStateException(
""Activities can't be added until the containing group has been created."");",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,6,4,1,0,1,0.39,69,46
5870_7,7,7,boolean adding = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,4,1,0,0,0.31,66,45
5870_8,8,8,boolean sameIntent = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.29,65,44
5870_10,10,10,ActivityInfo aInfo = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,1,0,1,0.44,63,43
5870_12,12,12,LocalActivityRecord r = mActivities.get(id);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,1,0,1,0.48,61,42
5870_13,13,21,"if (r == null) {
r = new LocalActivityRecord(id, intent);
adding = true;
} else if (r.intent != null) {
sameIntent = r.intent.filterEquals(intent);
if (sameIntent) {
aInfo = r.activityInfo;
}
}",1,0,0,0,0,0,0,0,0,6,2,9,0,1,0,0,6,4,1,0,1,0.45,52,35
5870_14,14,14,"r = new LocalActivityRecord(id, intent);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.44,59,40
5870_15,15,15,adding = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.32,58,39
5870_16,16,16,} else if (r.intent != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.39,57,38
5870_17,17,17,sameIntent = r.intent.filterEquals(intent);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.37,56,37
5870_18,18,20,"if (sameIntent) {
aInfo = r.activityInfo;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,1,0,1,0.49,53,35
5870_19,19,19,aInfo = r.activityInfo;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.5,54,35
5870_22,22,24,"if (aInfo == null) {
aInfo = mActivityThread.resolveActivityInfo(intent);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,6,4,1,0,1,0.44,49,33
5870_23,23,23,aInfo = mActivityThread.resolveActivityInfo(intent);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.46,50,33
5870_26,26,32,"if (mSingleMode) {
LocalActivityRecord old = mResumed;

if (old != null && old != r && mCurState == RESUMED) {
moveToState(old, STARTED);
}
}",1,0,0,0,0,0,0,0,0,3,2,7,0,0,1,1,6,4,1,0,3,0.6,41,29
5870_27,27,27,LocalActivityRecord old = mResumed;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,1,0,1,0.47,46,31
5870_29,29,31,"if (old != null && old != r && mCurState == RESUMED) {
moveToState(old, STARTED);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,6,4,1,0,0,0.43,42,29
5870_30,30,30,"moveToState(old, STARTED);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.34,43,29
5870_34,34,66,"if (adding) {
mActivities.put(id, r);
mActivityArray.add(r);
} else if (r.activityInfo != null) {
if (aInfo == r.activityInfo ||
(aInfo.name.equals(r.activityInfo.name) &&
aInfo.packageName.equals(r.activityInfo.packageName))) {
if (aInfo.launchMode != ActivityInfo.LAUNCH_MULTIPLE ||
(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {
ArrayList<ReferrerIntent> intents = new ArrayList<>(1);
intents.add(new ReferrerIntent(intent, mParent.getPackageName()));
if (localLOGV) Log.v(TAG, r.id + "": new intent"");
mActivityThread.handleNewIntent(r, intents);
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
if (sameIntent &&
(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
}

performDestroy(r, true);
}",1,0,0,0,0,0,0,0,0,24,4,33,0,0,1,1,6,4,1,0,3,0.58,7,4
5870_35,35,35,"mActivities.put(id, r);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.47,38,27
5870_36,36,36,mActivityArray.add(r);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.52,37,26
5870_37,37,37,} else if (r.activityInfo != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.48,36,25
5870_38,38,63,"if (aInfo == r.activityInfo ||
(aInfo.name.equals(r.activityInfo.name) &&
aInfo.packageName.equals(r.activityInfo.packageName))) {
if (aInfo.launchMode != ActivityInfo.LAUNCH_MULTIPLE ||
(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {
ArrayList<ReferrerIntent> intents = new ArrayList<>(1);
intents.add(new ReferrerIntent(intent, mParent.getPackageName()));
if (localLOGV) Log.v(TAG, r.id + "": new intent"");
mActivityThread.handleNewIntent(r, intents);
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
if (sameIntent &&
(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
}",1,0,0,0,0,0,0,0,0,19,3,26,0,0,0,1,6,4,1,0,3,0.58,10,5
5870_39,39,40,"(aInfo.name.equals(r.activityInfo.name) &&
aInfo.packageName.equals(r.activityInfo.packageName))) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,1,0,1,0.44,33,23
5870_41,41,53,"if (aInfo.launchMode != ActivityInfo.LAUNCH_MULTIPLE ||
(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {
ArrayList<ReferrerIntent> intents = new ArrayList<>(1);
intents.add(new ReferrerIntent(intent, mParent.getPackageName()));
if (localLOGV) Log.v(TAG, r.id + "": new intent"");
mActivityThread.handleNewIntent(r, intents);
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}",1,0,0,0,0,0,0,0,0,10,2,13,1,1,0,0,6,4,1,0,3,0.58,20,12
5870_42,42,42,(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,2,0.53,31,21
5870_43,43,43,ArrayList<ReferrerIntent> intents = new ArrayList<>(1);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.32,30,20
5870_44,44,44,"intents.add(new ReferrerIntent(intent, mParent.getPackageName()));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.32,29,19
5870_45,45,45,"if (localLOGV) Log.v(TAG, r.id + "": new intent"");",1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.36,28,18
5870_46,46,46,"mActivityThread.handleNewIntent(r, intents);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.46,27,17
5870_47,47,47,r.intent = intent;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.41,26,16
5870_48,48,48,"moveToState(r, mCurState);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.44,25,15
5870_49,49,51,"if (mSingleMode) {
mResumed = r;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,1,0,2,0.68,22,13
5870_50,50,50,mResumed = r;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.47,23,13
5870_52,52,52,return r.window;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.33,21,12
5870_54,54,62,"if (sameIntent &&
(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}",1,0,0,0,0,0,0,0,0,6,2,9,1,1,0,0,6,4,1,0,3,0.59,11,5
5870_55,55,55,(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.42,18,10
5870_56,56,56,r.intent = intent;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.41,17,9
5870_57,57,57,"moveToState(r, mCurState);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.44,16,8
5870_58,58,60,"if (mSingleMode) {
mResumed = r;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,1,0,2,0.68,13,6
5870_59,59,59,mResumed = r;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.47,14,6
5870_61,61,61,return r.window;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.33,12,5
5870_65,65,65,"performDestroy(r, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,1,0,0,0.36,8,4
5870_68,68,68,r.intent = intent;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,4,1,0,0,0.41,5,3
5870_69,69,69,r.curState = INITIALIZING;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.42,4,2
5870_70,70,70,r.activityInfo = aInfo;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,4,1,0,1,0.5,3,1
5870_72,72,72,"moveToState(r, mCurState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,1,0,0,0.44,1,0
5870_74,74,76,"if (mSingleMode) {
mResumed = r;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,6,4,1,0,2,0.68,0,0
5870_75,75,75,mResumed = r;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.47,1,0
5870_77,77,77,return r.window;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.33,3,2
5869_1,1,1,"public Window startActivity(String id, Intent intent) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,3,3,0,1,0.48,63,43
5869_2,2,5,"if (mCurState == INITIALIZING) {
throw new IllegalStateException(
""Activities can't be added until the containing group has been created."");
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,1,11,3,3,0,2,0.51,59,41
5869_3,3,4,"throw new IllegalStateException(
""Activities can't be added until the containing group has been created."");",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,11,3,3,0,2,0.51,60,41
5869_7,7,7,boolean adding = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,11,3,3,0,0,0.32,57,40
5869_8,8,8,boolean sameIntent = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,11,3,3,0,0,0.37,56,39
5869_10,10,10,ActivityInfo aInfo = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,11,3,3,0,1,0.44,54,38
5869_12,12,12,LocalActivityRecord r = mActivities.get(id);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,11,3,3,0,1,0.49,52,37
5869_13,13,21,"if (r == null) {
r = new LocalActivityRecord(id, intent);
adding = true;
} else if (r.intent != null) {
sameIntent = r.intent.filterEquals(intent);
if (sameIntent) {
aInfo = r.activityInfo;
}
}",1,0,0,0,0,0,0,0,0,6,2,9,0,1,0,0,11,3,3,0,2,0.53,43,30
5869_14,14,14,"r = new LocalActivityRecord(id, intent);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,3,3,0,2,0.56,50,35
5869_15,15,15,adding = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,3,3,0,0,0.29,49,34
5869_16,16,16,} else if (r.intent != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,3,3,0,0,0.39,48,33
5869_17,17,17,sameIntent = r.intent.filterEquals(intent);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,3,3,0,0,0.43,47,32
5869_18,18,20,"if (sameIntent) {
aInfo = r.activityInfo;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,11,3,3,0,1,0.52,44,30
5869_19,19,19,aInfo = r.activityInfo;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,3,3,0,1,0.49,45,30
5869_22,22,24,"if (aInfo == null) {
aInfo = mActivityThread.resolveActivityInfo(intent);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,11,3,3,0,1,0.47,40,28
5869_23,23,23,aInfo = mActivityThread.resolveActivityInfo(intent);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,3,3,0,1,0.5,41,28
5869_26,26,32,"if (mSingleMode) {
LocalActivityRecord old = mResumed;

if (old != null && old != r && mCurState == RESUMED) {
moveToState(old, STARTED);
}
}",1,0,0,0,0,0,0,0,0,3,2,7,0,0,1,1,11,3,3,0,1,0.47,32,24
5869_27,27,27,LocalActivityRecord old = mResumed;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,11,3,3,0,1,0.49,37,26
5869_29,29,31,"if (old != null && old != r && mCurState == RESUMED) {
moveToState(old, STARTED);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,11,3,3,0,0,0.41,33,24
5869_30,30,30,"moveToState(old, STARTED);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,3,3,0,0,0.32,34,24
5869_34,34,66,"if (adding) {
mActivities.put(id, r);
mActivityArray.add(r);
} else if (r.activityInfo != null) {
if (aInfo == r.activityInfo ||
(aInfo.name.equals(r.activityInfo.name) &&
aInfo.packageName.equals(r.activityInfo.packageName))) {
if (aInfo.launchMode != ActivityInfo.LAUNCH_MULTIPLE ||
(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {
ArrayList<ReferrerIntent> intents = new ArrayList<>(1);
intents.add(new ReferrerIntent(intent, mParent.getPackageName()));
if (localLOGV) Log.v(TAG, r.id + "": new intent"");
mActivityThread.handleNewIntent(r, intents);
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
if (sameIntent &&
(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
}

performDestroy(r, true);
}",1,0,0,0,0,0,0,0,0,24,4,33,0,0,1,1,11,3,3,0,5,0.61,0,0
5869_35,35,35,"mActivities.put(id, r);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,3,3,0,1,0.49,29,22
5869_36,36,36,mActivityArray.add(r);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,3,3,0,1,0.51,28,21
5869_37,37,37,} else if (r.activityInfo != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,3,3,0,1,0.45,27,20
5869_38,38,63,"if (aInfo == r.activityInfo ||
(aInfo.name.equals(r.activityInfo.name) &&
aInfo.packageName.equals(r.activityInfo.packageName))) {
if (aInfo.launchMode != ActivityInfo.LAUNCH_MULTIPLE ||
(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {
ArrayList<ReferrerIntent> intents = new ArrayList<>(1);
intents.add(new ReferrerIntent(intent, mParent.getPackageName()));
if (localLOGV) Log.v(TAG, r.id + "": new intent"");
mActivityThread.handleNewIntent(r, intents);
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
if (sameIntent &&
(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
}",1,0,0,0,0,0,0,0,0,19,3,26,0,0,0,1,11,3,3,0,4,0.58,1,0
5869_39,39,40,"(aInfo.name.equals(r.activityInfo.name) &&
aInfo.packageName.equals(r.activityInfo.packageName))) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,11,3,3,0,1,0.41,24,18
5869_41,41,53,"if (aInfo.launchMode != ActivityInfo.LAUNCH_MULTIPLE ||
(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {
ArrayList<ReferrerIntent> intents = new ArrayList<>(1);
intents.add(new ReferrerIntent(intent, mParent.getPackageName()));
if (localLOGV) Log.v(TAG, r.id + "": new intent"");
mActivityThread.handleNewIntent(r, intents);
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}",1,0,0,0,0,0,0,0,0,10,2,13,1,1,0,0,11,3,3,0,4,0.6,11,7
5869_42,42,42,(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,3,3,0,1,0.5,22,16
5869_43,43,43,ArrayList<ReferrerIntent> intents = new ArrayList<>(1);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,3,3,0,1,0.46,21,15
5869_44,44,44,"intents.add(new ReferrerIntent(intent, mParent.getPackageName()));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,3,3,0,1,0.45,20,14
5869_45,45,45,"if (localLOGV) Log.v(TAG, r.id + "": new intent"");",1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,3,3,0,1,0.44,19,13
5869_46,46,46,"mActivityThread.handleNewIntent(r, intents);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,3,3,0,2,0.59,18,12
5869_47,47,47,r.intent = intent;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,3,3,0,0,0.49,17,11
5869_48,48,48,"moveToState(r, mCurState);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,3,3,0,0,0.38,16,10
5869_49,49,51,"if (mSingleMode) {
mResumed = r;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,11,3,3,0,0,0.42,13,8
5869_50,50,50,mResumed = r;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,3,3,0,0,0.44,14,8
5869_52,52,52,return r.window;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,11,3,3,0,0,0.32,12,7
5869_54,54,62,"if (sameIntent &&
(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}",1,0,0,0,0,0,0,0,0,6,2,9,1,1,0,0,11,3,3,0,1,0.5,2,0
5869_55,55,55,(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,3,3,0,1,0.47,9,5
5869_56,56,56,r.intent = intent;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,3,3,0,0,0.49,8,4
5869_57,57,57,"moveToState(r, mCurState);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,3,3,0,0,0.38,7,3
5869_58,58,60,"if (mSingleMode) {
mResumed = r;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,11,3,3,0,0,0.42,4,1
5869_59,59,59,mResumed = r;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,3,3,0,0,0.44,5,1
5869_61,61,61,return r.window;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,11,3,3,0,0,0.32,3,0
5869_65,65,65,"performDestroy(r, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,11,3,3,0,1,0.48,0,0
5869_68,68,68,r.intent = intent;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,11,3,3,0,0,0.49,3,1
5869_69,69,69,r.curState = INITIALIZING;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,3,3,0,0,0.38,4,1
5869_70,70,70,r.activityInfo = aInfo;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,11,3,3,0,1,0.49,5,2
5869_72,72,72,"moveToState(r, mCurState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,11,3,3,0,0,0.38,7,4
5869_74,74,76,"if (mSingleMode) {
mResumed = r;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,11,3,3,0,0,0.42,9,5
5869_75,75,75,mResumed = r;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,3,3,0,0,0.44,10,5
5869_77,77,77,return r.window;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,11,3,3,0,0,0.32,12,7
5868_1,1,1,"public Window startActivity(String id, Intent intent) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.49,27,17
5868_2,2,5,"if (mCurState == INITIALIZING) {
throw new IllegalStateException(
""Activities can't be added until the containing group has been created."");
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,1,6,4,1,0,1,0.45,23,15
5868_3,3,4,"throw new IllegalStateException(
""Activities can't be added until the containing group has been created."");",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,6,4,1,0,1,0.44,24,15
5868_7,7,7,boolean adding = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,4,1,0,0,0.29,21,14
5868_8,8,8,boolean sameIntent = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.29,20,13
5868_10,10,10,ActivityInfo aInfo = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,1,0,1,0.51,18,12
5868_12,12,12,LocalActivityRecord r = mActivities.get(id);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,1,0,1,0.51,16,11
5868_13,13,21,"if (r == null) {
r = new LocalActivityRecord(id, intent);
adding = true;
} else if (r.intent != null) {
sameIntent = r.intent.filterEquals(intent);
if (sameIntent) {
aInfo = r.activityInfo;
}
}",1,0,0,0,0,0,0,0,0,6,2,9,0,1,0,0,6,4,1,0,1,0.47,7,4
5868_14,14,14,"r = new LocalActivityRecord(id, intent);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.48,14,9
5868_15,15,15,adding = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.3,13,8
5868_16,16,16,} else if (r.intent != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.33,12,7
5868_17,17,17,sameIntent = r.intent.filterEquals(intent);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.32,11,6
5868_18,18,20,"if (sameIntent) {
aInfo = r.activityInfo;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,1,0,1,0.53,8,4
5868_19,19,19,aInfo = r.activityInfo;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.53,9,4
5868_22,22,24,"if (aInfo == null) {
aInfo = mActivityThread.resolveActivityInfo(intent);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,6,4,1,0,1,0.51,4,2
5868_23,23,23,aInfo = mActivityThread.resolveActivityInfo(intent);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.54,5,2
5868_26,26,32,"if (mSingleMode) {
LocalActivityRecord old = mResumed;

if (old != null && old != r && mCurState == RESUMED) {
moveToState(old, STARTED);
}
}",1,0,0,0,0,0,0,0,0,3,2,7,0,0,1,1,6,4,1,0,1,0.53,0,0
5868_27,27,27,LocalActivityRecord old = mResumed;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,1,0,1,0.56,1,0
5868_29,29,31,"if (old != null && old != r && mCurState == RESUMED) {
moveToState(old, STARTED);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,6,4,1,0,0,0.43,0,0
5868_30,30,30,"moveToState(old, STARTED);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.35,1,0
5868_34,34,66,"if (adding) {
mActivities.put(id, r);
mActivityArray.add(r);
} else if (r.activityInfo != null) {
if (aInfo == r.activityInfo ||
(aInfo.name.equals(r.activityInfo.name) &&
aInfo.packageName.equals(r.activityInfo.packageName))) {
if (aInfo.launchMode != ActivityInfo.LAUNCH_MULTIPLE ||
(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {
ArrayList<ReferrerIntent> intents = new ArrayList<>(1);
intents.add(new ReferrerIntent(intent, mParent.getPackageName()));
if (localLOGV) Log.v(TAG, r.id + "": new intent"");
mActivityThread.handleNewIntent(r, intents);
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
if (sameIntent &&
(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
}

performDestroy(r, true);
}",1,0,0,0,0,0,0,0,0,24,4,33,0,0,1,1,6,4,1,0,1,0.52,5,2
5868_35,35,35,"mActivities.put(id, r);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.49,6,2
5868_36,36,36,mActivityArray.add(r);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.5,7,3
5868_37,37,37,} else if (r.activityInfo != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.5,8,4
5868_38,38,63,"if (aInfo == r.activityInfo ||
(aInfo.name.equals(r.activityInfo.name) &&
aInfo.packageName.equals(r.activityInfo.packageName))) {
if (aInfo.launchMode != ActivityInfo.LAUNCH_MULTIPLE ||
(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {
ArrayList<ReferrerIntent> intents = new ArrayList<>(1);
intents.add(new ReferrerIntent(intent, mParent.getPackageName()));
if (localLOGV) Log.v(TAG, r.id + "": new intent"");
mActivityThread.handleNewIntent(r, intents);
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
if (sameIntent &&
(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
}",1,0,0,0,0,0,0,0,0,19,3,26,0,0,0,1,6,4,1,0,1,0.51,9,5
5868_39,39,40,"(aInfo.name.equals(r.activityInfo.name) &&
aInfo.packageName.equals(r.activityInfo.packageName))) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,1,0,1,0.46,10,6
5868_41,41,53,"if (aInfo.launchMode != ActivityInfo.LAUNCH_MULTIPLE ||
(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {
ArrayList<ReferrerIntent> intents = new ArrayList<>(1);
intents.add(new ReferrerIntent(intent, mParent.getPackageName()));
if (localLOGV) Log.v(TAG, r.id + "": new intent"");
mActivityThread.handleNewIntent(r, intents);
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}",1,0,0,0,0,0,0,0,0,10,2,13,1,1,0,0,6,4,1,0,1,0.51,12,8
5868_42,42,42,(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.48,13,8
5868_43,43,43,ArrayList<ReferrerIntent> intents = new ArrayList<>(1);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.29,14,9
5868_44,44,44,"intents.add(new ReferrerIntent(intent, mParent.getPackageName()));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.3,15,10
5868_45,45,45,"if (localLOGV) Log.v(TAG, r.id + "": new intent"");",1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.34,16,11
5868_46,46,46,"mActivityThread.handleNewIntent(r, intents);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.51,17,12
5868_47,47,47,r.intent = intent;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.35,18,13
5868_48,48,48,"moveToState(r, mCurState);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.37,19,14
5868_49,49,51,"if (mSingleMode) {
mResumed = r;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,1,0,0,0.47,20,15
5868_50,50,50,mResumed = r;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.5,21,16
5868_52,52,52,return r.window;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.3,23,18
5868_54,54,62,"if (sameIntent &&
(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}",1,0,0,0,0,0,0,0,0,6,2,9,1,1,0,0,6,4,1,0,1,0.52,25,19
5868_55,55,55,(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.46,26,19
5868_56,56,56,r.intent = intent;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.35,27,20
5868_57,57,57,"moveToState(r, mCurState);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.37,28,21
5868_58,58,60,"if (mSingleMode) {
mResumed = r;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,1,0,0,0.47,29,22
5868_59,59,59,mResumed = r;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.5,30,23
5868_61,61,61,return r.window;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.3,32,25
5868_65,65,65,"performDestroy(r, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,1,0,0,0.34,36,26
5868_68,68,68,r.intent = intent;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,4,1,0,0,0.35,39,27
5868_69,69,69,r.curState = INITIALIZING;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.35,40,27
5868_70,70,70,r.activityInfo = aInfo;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,4,1,0,1,0.53,41,28
5868_72,72,72,"moveToState(r, mCurState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,1,0,0,0.37,43,30
5868_74,74,76,"if (mSingleMode) {
mResumed = r;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,6,4,1,0,0,0.47,45,31
5868_75,75,75,mResumed = r;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.5,46,31
5868_77,77,77,return r.window;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.3,48,33
5867_1,1,1,"public Window startActivity(String id, Intent intent) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,0,0,1,0.48,24,15
5867_2,2,5,"if (mCurState == INITIALIZING) {
throw new IllegalStateException(
""Activities can't be added until the containing group has been created."");
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,1,10,5,0,0,1,0.46,20,13
5867_3,3,4,"throw new IllegalStateException(
""Activities can't be added until the containing group has been created."");",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,10,5,0,0,1,0.42,21,13
5867_7,7,7,boolean adding = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,10,5,0,0,0,0.28,18,12
5867_8,8,8,boolean sameIntent = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,10,5,0,0,0,0.28,17,11
5867_10,10,10,ActivityInfo aInfo = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,10,5,0,0,1,0.45,15,10
5867_12,12,12,LocalActivityRecord r = mActivities.get(id);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,10,5,0,0,1,0.48,13,9
5867_13,13,21,"if (r == null) {
r = new LocalActivityRecord(id, intent);
adding = true;
} else if (r.intent != null) {
sameIntent = r.intent.filterEquals(intent);
if (sameIntent) {
aInfo = r.activityInfo;
}
}",1,0,0,0,0,0,0,0,0,6,2,9,0,1,0,0,10,5,0,0,1,0.45,4,2
5867_14,14,14,"r = new LocalActivityRecord(id, intent);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,0,0,1,0.45,11,7
5867_15,15,15,adding = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,0,0,0,0.32,10,6
5867_16,16,16,} else if (r.intent != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,0,0,0,0.36,9,5
5867_17,17,17,sameIntent = r.intent.filterEquals(intent);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,5,0,0,0,0.35,8,4
5867_18,18,20,"if (sameIntent) {
aInfo = r.activityInfo;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,10,5,0,0,1,0.48,5,2
5867_19,19,19,aInfo = r.activityInfo;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,0,0,1,0.49,6,2
5867_22,22,24,"if (aInfo == null) {
aInfo = mActivityThread.resolveActivityInfo(intent);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,10,5,0,0,1,0.47,1,0
5867_23,23,23,aInfo = mActivityThread.resolveActivityInfo(intent);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,0,0,1,0.5,2,0
5867_26,26,32,"if (mSingleMode) {
LocalActivityRecord old = mResumed;

if (old != null && old != r && mCurState == RESUMED) {
moveToState(old, STARTED);
}
}",1,0,0,0,0,0,0,0,0,3,2,7,0,0,1,1,10,5,0,0,2,0.52,0,0
5867_27,27,27,LocalActivityRecord old = mResumed;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,10,5,0,0,1,0.5,1,0
5867_29,29,31,"if (old != null && old != r && mCurState == RESUMED) {
moveToState(old, STARTED);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,10,5,0,0,0,0.43,3,2
5867_30,30,30,"moveToState(old, STARTED);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,0,0,0,0.31,4,2
5867_34,34,66,"if (adding) {
mActivities.put(id, r);
mActivityArray.add(r);
} else if (r.activityInfo != null) {
if (aInfo == r.activityInfo ||
(aInfo.name.equals(r.activityInfo.name) &&
aInfo.packageName.equals(r.activityInfo.packageName))) {
if (aInfo.launchMode != ActivityInfo.LAUNCH_MULTIPLE ||
(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {
ArrayList<ReferrerIntent> intents = new ArrayList<>(1);
intents.add(new ReferrerIntent(intent, mParent.getPackageName()));
if (localLOGV) Log.v(TAG, r.id + "": new intent"");
mActivityThread.handleNewIntent(r, intents);
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
if (sameIntent &&
(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
}

performDestroy(r, true);
}",1,0,0,0,0,0,0,0,0,24,4,33,0,0,1,1,10,5,0,0,2,0.53,8,4
5867_35,35,35,"mActivities.put(id, r);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,5,0,0,1,0.48,9,4
5867_36,36,36,mActivityArray.add(r);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,5,0,0,1,0.49,10,5
5867_37,37,37,} else if (r.activityInfo != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,0,0,1,0.48,11,6
5867_38,38,63,"if (aInfo == r.activityInfo ||
(aInfo.name.equals(r.activityInfo.name) &&
aInfo.packageName.equals(r.activityInfo.packageName))) {
if (aInfo.launchMode != ActivityInfo.LAUNCH_MULTIPLE ||
(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {
ArrayList<ReferrerIntent> intents = new ArrayList<>(1);
intents.add(new ReferrerIntent(intent, mParent.getPackageName()));
if (localLOGV) Log.v(TAG, r.id + "": new intent"");
mActivityThread.handleNewIntent(r, intents);
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
if (sameIntent &&
(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
}",1,0,0,0,0,0,0,0,0,19,3,26,0,0,0,1,10,5,0,0,2,0.52,12,7
5867_39,39,40,"(aInfo.name.equals(r.activityInfo.name) &&
aInfo.packageName.equals(r.activityInfo.packageName))) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,5,0,0,1,0.41,13,8
5867_41,41,53,"if (aInfo.launchMode != ActivityInfo.LAUNCH_MULTIPLE ||
(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {
ArrayList<ReferrerIntent> intents = new ArrayList<>(1);
intents.add(new ReferrerIntent(intent, mParent.getPackageName()));
if (localLOGV) Log.v(TAG, r.id + "": new intent"");
mActivityThread.handleNewIntent(r, intents);
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}",1,0,0,0,0,0,0,0,0,10,2,13,1,1,0,0,10,5,0,0,2,0.52,15,10
5867_42,42,42,(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,0,0,2,0.5,16,10
5867_43,43,43,ArrayList<ReferrerIntent> intents = new ArrayList<>(1);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,5,0,0,0,0.33,17,11
5867_44,44,44,"intents.add(new ReferrerIntent(intent, mParent.getPackageName()));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,5,0,0,0,0.31,18,12
5867_45,45,45,"if (localLOGV) Log.v(TAG, r.id + "": new intent"");",1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,5,0,0,0,0.34,19,13
5867_46,46,46,"mActivityThread.handleNewIntent(r, intents);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,5,0,0,1,0.5,20,14
5867_47,47,47,r.intent = intent;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,5,0,0,0,0.38,21,15
5867_48,48,48,"moveToState(r, mCurState);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,5,0,0,0,0.42,22,16
5867_49,49,51,"if (mSingleMode) {
mResumed = r;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,10,5,0,0,1,0.55,23,17
5867_50,50,50,mResumed = r;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,0,0,0,0.48,24,18
5867_52,52,52,return r.window;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,10,5,0,0,0,0.34,26,20
5867_54,54,62,"if (sameIntent &&
(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}",1,0,0,0,0,0,0,0,0,6,2,9,1,1,0,0,10,5,0,0,2,0.52,28,21
5867_55,55,55,(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,0,0,1,0.42,29,21
5867_56,56,56,r.intent = intent;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,5,0,0,0,0.38,30,22
5867_57,57,57,"moveToState(r, mCurState);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,5,0,0,0,0.42,31,23
5867_58,58,60,"if (mSingleMode) {
mResumed = r;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,10,5,0,0,1,0.55,32,24
5867_59,59,59,mResumed = r;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,0,0,0,0.48,33,25
5867_61,61,61,return r.window;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,10,5,0,0,0,0.34,35,27
5867_65,65,65,"performDestroy(r, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,10,5,0,0,0,0.36,39,28
5867_68,68,68,r.intent = intent;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,10,5,0,0,0,0.38,42,29
5867_69,69,69,r.curState = INITIALIZING;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,5,0,0,0,0.41,43,29
5867_70,70,70,r.activityInfo = aInfo;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,10,5,0,0,1,0.49,44,30
5867_72,72,72,"moveToState(r, mCurState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,10,5,0,0,0,0.42,46,32
5867_74,74,76,"if (mSingleMode) {
mResumed = r;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,10,5,0,0,1,0.55,48,33
5867_75,75,75,mResumed = r;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,0,0,0,0.48,49,33
5867_77,77,77,return r.window;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,10,5,0,0,0,0.34,51,35
5866_1,1,1,"public Window startActivity(String id, Intent intent) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,2,0.74,17,12
5866_2,2,5,"if (mCurState == INITIALIZING) {
throw new IllegalStateException(
""Activities can't be added until the containing group has been created."");
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,1,2,2,0,0,1,0.45,13,10
5866_3,3,4,"throw new IllegalStateException(
""Activities can't be added until the containing group has been created."");",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,2,2,0,0,1,0.45,14,10
5866_7,7,7,boolean adding = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.25,11,9
5866_8,8,8,boolean sameIntent = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.33,10,8
5866_10,10,10,ActivityInfo aInfo = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,1,0.54,8,7
5866_12,12,12,LocalActivityRecord r = mActivities.get(id);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,1,0.55,6,6
5866_13,13,21,"if (r == null) {
r = new LocalActivityRecord(id, intent);
adding = true;
} else if (r.intent != null) {
sameIntent = r.intent.filterEquals(intent);
if (sameIntent) {
aInfo = r.activityInfo;
}
}",1,0,0,0,0,0,0,0,0,6,2,9,0,1,0,0,2,2,0,0,1,0.52,0,0
5866_14,14,14,"r = new LocalActivityRecord(id, intent);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.53,4,4
5866_15,15,15,adding = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.3,3,3
5866_16,16,16,} else if (r.intent != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.35,2,2
5866_17,17,17,sameIntent = r.intent.filterEquals(intent);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.36,1,1
5866_18,18,20,"if (sameIntent) {
aInfo = r.activityInfo;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,2,0,0,1,0.57,0,0
5866_19,19,19,aInfo = r.activityInfo;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.56,0,0
5866_22,22,24,"if (aInfo == null) {
aInfo = mActivityThread.resolveActivityInfo(intent);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,2,2,0,0,1,0.56,3,1
5866_23,23,23,aInfo = mActivityThread.resolveActivityInfo(intent);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.58,4,1
5866_26,26,32,"if (mSingleMode) {
LocalActivityRecord old = mResumed;

if (old != null && old != r && mCurState == RESUMED) {
moveToState(old, STARTED);
}
}",1,0,0,0,0,0,0,0,0,3,2,7,0,0,1,1,2,2,0,0,2,0.69,7,3
5866_27,27,27,LocalActivityRecord old = mResumed;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,1,0.53,8,3
5866_29,29,31,"if (old != null && old != r && mCurState == RESUMED) {
moveToState(old, STARTED);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,2,2,0,0,1,0.55,10,5
5866_30,30,30,"moveToState(old, STARTED);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.54,11,5
5866_34,34,66,"if (adding) {
mActivities.put(id, r);
mActivityArray.add(r);
} else if (r.activityInfo != null) {
if (aInfo == r.activityInfo ||
(aInfo.name.equals(r.activityInfo.name) &&
aInfo.packageName.equals(r.activityInfo.packageName))) {
if (aInfo.launchMode != ActivityInfo.LAUNCH_MULTIPLE ||
(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {
ArrayList<ReferrerIntent> intents = new ArrayList<>(1);
intents.add(new ReferrerIntent(intent, mParent.getPackageName()));
if (localLOGV) Log.v(TAG, r.id + "": new intent"");
mActivityThread.handleNewIntent(r, intents);
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
if (sameIntent &&
(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
}

performDestroy(r, true);
}",1,0,0,0,0,0,0,0,0,24,4,33,0,0,1,1,2,2,0,0,1,0.51,15,7
5866_35,35,35,"mActivities.put(id, r);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.53,16,7
5866_36,36,36,mActivityArray.add(r);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.53,17,8
5866_37,37,37,} else if (r.activityInfo != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.53,18,9
5866_38,38,63,"if (aInfo == r.activityInfo ||
(aInfo.name.equals(r.activityInfo.name) &&
aInfo.packageName.equals(r.activityInfo.packageName))) {
if (aInfo.launchMode != ActivityInfo.LAUNCH_MULTIPLE ||
(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {
ArrayList<ReferrerIntent> intents = new ArrayList<>(1);
intents.add(new ReferrerIntent(intent, mParent.getPackageName()));
if (localLOGV) Log.v(TAG, r.id + "": new intent"");
mActivityThread.handleNewIntent(r, intents);
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
if (sameIntent &&
(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
}",1,0,0,0,0,0,0,0,0,19,3,26,0,0,0,1,2,2,0,0,1,0.5,19,10
5866_39,39,40,"(aInfo.name.equals(r.activityInfo.name) &&
aInfo.packageName.equals(r.activityInfo.packageName))) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,1,0.46,20,11
5866_41,41,53,"if (aInfo.launchMode != ActivityInfo.LAUNCH_MULTIPLE ||
(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {
ArrayList<ReferrerIntent> intents = new ArrayList<>(1);
intents.add(new ReferrerIntent(intent, mParent.getPackageName()));
if (localLOGV) Log.v(TAG, r.id + "": new intent"");
mActivityThread.handleNewIntent(r, intents);
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}",1,0,0,0,0,0,0,0,0,10,2,13,1,1,0,0,2,2,0,0,1,0.5,22,13
5866_42,42,42,(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.52,23,13
5866_43,43,43,ArrayList<ReferrerIntent> intents = new ArrayList<>(1);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.31,24,14
5866_44,44,44,"intents.add(new ReferrerIntent(intent, mParent.getPackageName()));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.32,25,15
5866_45,45,45,"if (localLOGV) Log.v(TAG, r.id + "": new intent"");",1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.31,26,16
5866_46,46,46,"mActivityThread.handleNewIntent(r, intents);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.55,27,17
5866_47,47,47,r.intent = intent;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.4,28,18
5866_48,48,48,"moveToState(r, mCurState);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.34,29,19
5866_49,49,51,"if (mSingleMode) {
mResumed = r;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,2,0,0,0,0.39,30,20
5866_50,50,50,mResumed = r;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.42,31,21
5866_52,52,52,return r.window;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.25,33,23
5866_54,54,62,"if (sameIntent &&
(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}",1,0,0,0,0,0,0,0,0,6,2,9,1,1,0,0,2,2,0,0,1,0.51,35,24
5866_55,55,55,(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.51,36,24
5866_56,56,56,r.intent = intent;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.4,37,25
5866_57,57,57,"moveToState(r, mCurState);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.34,38,26
5866_58,58,60,"if (mSingleMode) {
mResumed = r;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,2,0,0,0,0.39,39,27
5866_59,59,59,mResumed = r;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.42,40,28
5866_61,61,61,return r.window;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.25,42,30
5866_65,65,65,"performDestroy(r, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.31,46,31
5866_68,68,68,r.intent = intent;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.4,49,32
5866_69,69,69,r.curState = INITIALIZING;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.31,50,32
5866_70,70,70,r.activityInfo = aInfo;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,1,0.56,51,33
5866_72,72,72,"moveToState(r, mCurState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.34,53,35
5866_74,74,76,"if (mSingleMode) {
mResumed = r;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,2,2,0,0,0,0.39,55,36
5866_75,75,75,mResumed = r;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.42,56,36
5866_77,77,77,return r.window;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.25,58,38
5865_1,1,1,"public Window startActivity(String id, Intent intent) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.28,12,7
5865_2,2,5,"if (mCurState == INITIALIZING) {
throw new IllegalStateException(
""Activities can't be added until the containing group has been created."");
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,1,2,2,0,0,1,0.45,8,5
5865_3,3,4,"throw new IllegalStateException(
""Activities can't be added until the containing group has been created."");",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,2,2,0,0,1,0.47,9,5
5865_7,7,7,boolean adding = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.14,6,4
5865_8,8,8,boolean sameIntent = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.2,5,3
5865_10,10,10,ActivityInfo aInfo = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.19,3,2
5865_12,12,12,LocalActivityRecord r = mActivities.get(id);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.21,1,1
5865_13,13,21,"if (r == null) {
r = new LocalActivityRecord(id, intent);
adding = true;
} else if (r.intent != null) {
sameIntent = r.intent.filterEquals(intent);
if (sameIntent) {
aInfo = r.activityInfo;
}
}",1,0,0,0,0,0,0,0,0,6,2,9,0,1,0,0,2,2,0,0,0,0.31,0,0
5865_14,14,14,"r = new LocalActivityRecord(id, intent);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,0,0
5865_15,15,15,adding = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.15,1,0
5865_16,16,16,} else if (r.intent != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.23,2,1
5865_17,17,17,sameIntent = r.intent.filterEquals(intent);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.25,3,2
5865_18,18,20,"if (sameIntent) {
aInfo = r.activityInfo;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,2,0,0,0,0.24,4,3
5865_19,19,19,aInfo = r.activityInfo;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.2,5,4
5865_22,22,24,"if (aInfo == null) {
aInfo = mActivityThread.resolveActivityInfo(intent);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,2,2,0,0,0,0.24,8,6
5865_23,23,23,aInfo = mActivityThread.resolveActivityInfo(intent);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,9,6
5865_26,26,32,"if (mSingleMode) {
LocalActivityRecord old = mResumed;

if (old != null && old != r && mCurState == RESUMED) {
moveToState(old, STARTED);
}
}",1,0,0,0,0,0,0,0,0,3,2,7,0,0,1,1,2,2,0,0,0,0.28,12,8
5865_27,27,27,LocalActivityRecord old = mResumed;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.27,13,8
5865_29,29,31,"if (old != null && old != r && mCurState == RESUMED) {
moveToState(old, STARTED);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,2,2,0,0,0,0.28,15,10
5865_30,30,30,"moveToState(old, STARTED);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,16,10
5865_34,34,66,"if (adding) {
mActivities.put(id, r);
mActivityArray.add(r);
} else if (r.activityInfo != null) {
if (aInfo == r.activityInfo ||
(aInfo.name.equals(r.activityInfo.name) &&
aInfo.packageName.equals(r.activityInfo.packageName))) {
if (aInfo.launchMode != ActivityInfo.LAUNCH_MULTIPLE ||
(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {
ArrayList<ReferrerIntent> intents = new ArrayList<>(1);
intents.add(new ReferrerIntent(intent, mParent.getPackageName()));
if (localLOGV) Log.v(TAG, r.id + "": new intent"");
mActivityThread.handleNewIntent(r, intents);
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
if (sameIntent &&
(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
}

performDestroy(r, true);
}",1,0,0,0,0,0,0,0,0,24,4,33,0,0,1,1,2,2,0,0,0,0.34,20,12
5865_35,35,35,"mActivities.put(id, r);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.22,21,12
5865_36,36,36,mActivityArray.add(r);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.27,22,13
5865_37,37,37,} else if (r.activityInfo != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.21,23,14
5865_38,38,63,"if (aInfo == r.activityInfo ||
(aInfo.name.equals(r.activityInfo.name) &&
aInfo.packageName.equals(r.activityInfo.packageName))) {
if (aInfo.launchMode != ActivityInfo.LAUNCH_MULTIPLE ||
(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {
ArrayList<ReferrerIntent> intents = new ArrayList<>(1);
intents.add(new ReferrerIntent(intent, mParent.getPackageName()));
if (localLOGV) Log.v(TAG, r.id + "": new intent"");
mActivityThread.handleNewIntent(r, intents);
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
if (sameIntent &&
(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}
}",1,0,0,0,0,0,0,0,0,19,3,26,0,0,0,1,2,2,0,0,0,0.34,24,15
5865_39,39,40,"(aInfo.name.equals(r.activityInfo.name) &&
aInfo.packageName.equals(r.activityInfo.packageName))) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.21,25,16
5865_41,41,53,"if (aInfo.launchMode != ActivityInfo.LAUNCH_MULTIPLE ||
(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {
ArrayList<ReferrerIntent> intents = new ArrayList<>(1);
intents.add(new ReferrerIntent(intent, mParent.getPackageName()));
if (localLOGV) Log.v(TAG, r.id + "": new intent"");
mActivityThread.handleNewIntent(r, intents);
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}",1,0,0,0,0,0,0,0,0,10,2,13,1,1,0,0,2,2,0,0,0,0.35,27,18
5865_42,42,42,(intent.getFlags()&Intent.FLAG_ACTIVITY_SINGLE_TOP) != 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,28,18
5865_43,43,43,ArrayList<ReferrerIntent> intents = new ArrayList<>(1);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.36,29,19
5865_44,44,44,"intents.add(new ReferrerIntent(intent, mParent.getPackageName()));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.34,30,20
5865_45,45,45,"if (localLOGV) Log.v(TAG, r.id + "": new intent"");",1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.33,31,21
5865_46,46,46,"mActivityThread.handleNewIntent(r, intents);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.34,32,22
5865_47,47,47,r.intent = intent;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.26,33,23
5865_48,48,48,"moveToState(r, mCurState);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.24,34,24
5865_49,49,51,"if (mSingleMode) {
mResumed = r;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,2,0,0,0,0.26,35,25
5865_50,50,50,mResumed = r;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.3,36,26
5865_52,52,52,return r.window;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.23,38,28
5865_54,54,62,"if (sameIntent &&
(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {
r.intent = intent;
moveToState(r, mCurState);
if (mSingleMode) {
mResumed = r;
}
return r.window;
}",1,0,0,0,0,0,0,0,0,6,2,9,1,1,0,0,2,2,0,0,0,0.3,40,29
5865_55,55,55,(intent.getFlags()&Intent.FLAG_ACTIVITY_CLEAR_TOP) == 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,41,29
5865_56,56,56,r.intent = intent;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.26,42,30
5865_57,57,57,"moveToState(r, mCurState);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.24,43,31
5865_58,58,60,"if (mSingleMode) {
mResumed = r;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,2,0,0,0,0.26,44,32
5865_59,59,59,mResumed = r;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.3,45,33
5865_61,61,61,return r.window;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.23,47,35
5865_65,65,65,"performDestroy(r, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.19,51,36
5865_68,68,68,r.intent = intent;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.26,54,37
5865_69,69,69,r.curState = INITIALIZING;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.22,55,37
5865_70,70,70,r.activityInfo = aInfo;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.2,56,38
5865_72,72,72,"moveToState(r, mCurState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.24,58,40
5865_74,74,76,"if (mSingleMode) {
mResumed = r;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,2,2,0,0,0,0.26,60,41
5865_75,75,75,mResumed = r;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.3,61,41
5865_77,77,77,return r.window;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.23,63,43
5864_1,1,2,"    @UnsupportedAppUsage
private void moveToState(LocalActivityRecord r, int desiredState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,1,1,0,1,0.41,17,11
5864_3,3,5,"if (r.curState == RESTORED || r.curState == DESTROYED) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,1,1,0,0,0.34,14,9
5864_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.15,15,9
5864_7,7,54,"if (r.curState == INITIALIZING) {
HashMap<String, Object> lastNonConfigurationInstances =
mParent.getLastNonConfigurationChildInstances();
Object instanceObj = null;
if (lastNonConfigurationInstances != null) {
instanceObj = lastNonConfigurationInstances.get(r.id);
}
Activity.NonConfigurationInstances instance = null;
if (instanceObj != null) {
instance = new Activity.NonConfigurationInstances();
instance.activity = instanceObj;
}

if (localLOGV) Log.v(TAG, r.id + "": starting "" + r.intent);
if (r.activityInfo == null) {
r.activityInfo = mActivityThread.resolveActivityInfo(r.intent);
}
r.activity = mActivityThread.startActivityNow(
mParent, r.id, r.intent, r.activityInfo, r, r.instanceState, instance, r);
if (r.activity == null) {
return;
}
r.window = r.activity.getWindow();
r.instanceState = null;

final ActivityClientRecord clientRecord = mActivityThread.getActivityClient(r);
final PendingTransactionActions pendingActions;

if (!r.activity.mFinished) {
pendingActions = new PendingTransactionActions();
pendingActions.setOldState(clientRecord.state);
pendingActions.setRestoreInstanceState(true);
pendingActions.setCallOnPostCreate(true);
} else {
pendingActions = null;
}

mActivityThread.handleStartActivity(clientRecord, pendingActions);
r.curState = STARTED;

if (desiredState == RESUMED) {
if (localLOGV) Log.v(TAG, r.id + "": resuming"");
mActivityThread.performResumeActivity(r, true, ""moveToState-INITIALIZING"");
r.curState = RESUMED;
}

return;
}",1,0,0,0,0,0,0,0,0,32,2,48,0,0,1,1,4,1,1,0,2,0.56,0,0
5864_8,8,9,"HashMap<String, Object> lastNonConfigurationInstances =
mParent.getLastNonConfigurationChildInstances();",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,4,1,1,0,0,0.25,10,7
5864_10,10,10,Object instanceObj = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.35,9,6
5864_11,11,13,"if (lastNonConfigurationInstances != null) {
instanceObj = lastNonConfigurationInstances.get(r.id);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,1,1,0,0,0.33,6,4
5864_12,12,12,instanceObj = lastNonConfigurationInstances.get(r.id);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.34,7,4
5864_14,14,14,Activity.NonConfigurationInstances instance = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,1,0.44,5,3
5864_15,15,18,"if (instanceObj != null) {
instance = new Activity.NonConfigurationInstances();
instance.activity = instanceObj;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,4,1,1,0,1,0.5,1,0
5864_16,16,16,instance = new Activity.NonConfigurationInstances();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,1,0.49,3,1
5864_17,17,17,instance.activity = instanceObj;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,1,0.52,2,0
5864_20,20,20,"if (localLOGV) Log.v(TAG, r.id + "": starting "" + r.intent);",1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,1,1,0,0,0.33,0,0
5864_21,21,23,"if (r.activityInfo == null) {
r.activityInfo = mActivityThread.resolveActivityInfo(r.intent);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,1,1,0,1,0.5,1,0
5864_22,22,22,r.activityInfo = mActivityThread.resolveActivityInfo(r.intent);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,1,0.51,2,1
5864_24,24,25,"r.activity = mActivityThread.startActivityNow(
mParent, r.id, r.intent, r.activityInfo, r, r.instanceState, instance, r);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,1,1,0,1,0.49,4,3
5864_26,26,28,"if (r.activity == null) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,1,1,0,1,0.46,6,4
5864_27,27,27,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.15,7,4
5864_29,29,29,r.window = r.activity.getWindow();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,1,0.47,9,6
5864_30,30,30,r.instanceState = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,1,1,0,0,0.32,10,6
5864_32,32,32,final ActivityClientRecord clientRecord = mActivityThread.getActivityClient(r);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,1,1,0,1,0.45,12,8
5864_33,33,33,final PendingTransactionActions pendingActions;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,1,1,0,0,0.31,13,8
5864_35,35,42,"if (!r.activity.mFinished) {
pendingActions = new PendingTransactionActions();
pendingActions.setOldState(clientRecord.state);
pendingActions.setRestoreInstanceState(true);
pendingActions.setCallOnPostCreate(true);
} else {
pendingActions = null;
}",1,0,0,0,0,0,0,0,0,6,1,8,0,0,1,1,4,1,1,0,2,0.55,15,10
5864_36,36,36,pendingActions = new PendingTransactionActions();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.38,16,10
5864_37,37,37,pendingActions.setOldState(clientRecord.state);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.31,17,11
5864_38,38,38,pendingActions.setRestoreInstanceState(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.33,18,12
5864_39,39,39,pendingActions.setCallOnPostCreate(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,1,0.49,19,13
5864_40,40,40,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.26,20,14
5864_41,41,41,pendingActions = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.3,21,15
5864_44,44,44,"mActivityThread.handleStartActivity(clientRecord, pendingActions);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,1,1,0,1,0.46,24,17
5864_45,45,45,r.curState = STARTED;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,1,1,0,0,0.34,25,17
5864_47,47,51,"if (desiredState == RESUMED) {
if (localLOGV) Log.v(TAG, r.id + "": resuming"");
mActivityThread.performResumeActivity(r, true, ""moveToState-INITIALIZING"");
r.curState = RESUMED;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,1,1,0,1,0.45,27,19
5864_48,48,48,"if (localLOGV) Log.v(TAG, r.id + "": resuming"");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.35,28,19
5864_49,49,49,"mActivityThread.performResumeActivity(r, true, ""moveToState-INITIALIZING"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,1,0.48,29,20
5864_50,50,50,r.curState = RESUMED;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.4,30,21
5864_53,53,53,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,1,1,0,0,0.15,33,23
5864_56,56,56,switch (r.curState) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,1,1,0,0,0.35,36,24
5864_57,57,58,"case CREATED:
if (desiredState == STARTED) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,1,1,0,1,0.46,37,24
5864_59,59,59,"if (localLOGV) Log.v(TAG, r.id + "": restarting"");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.3,39,26
5864_60,60,60,"mActivityThread.performRestartActivity(r, true );",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,1,0.49,40,26
5864_61,61,61,r.curState = STARTED;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.34,41,27
5864_63,63,68,"if (desiredState == RESUMED) {
if (localLOGV) Log.v(TAG, r.id + "": restarting and resuming"");
mActivityThread.performRestartActivity(r, true );
mActivityThread.performResumeActivity(r, true, ""moveToState-CREATED"");
r.curState = RESUMED;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,4,1,1,0,2,0.57,43,29
5864_64,64,64,"if (localLOGV) Log.v(TAG, r.id + "": restarting and resuming"");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.35,44,29
5864_65,65,65,"mActivityThread.performRestartActivity(r, true );",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,1,0.49,45,30
5864_66,66,66,"mActivityThread.performResumeActivity(r, true, ""moveToState-CREATED"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,2,0.61,46,31
5864_67,67,67,r.curState = RESUMED;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.4,47,32
5864_69,69,69,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,4,1,1,0,0,0.15,49,34
5864_71,71,72,"case STARTED:
if (desiredState == RESUMED) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,1,1,0,0,0.36,51,35
5864_73,73,73,"if (localLOGV) Log.v(TAG, r.id + "": resuming"");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.35,53,36
5864_74,74,74,"mActivityThread.performResumeActivity(r, true, ""moveToState-STARTED"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,1,0.48,54,36
5864_75,75,75,r.instanceState = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.32,55,37
5864_76,76,76,r.curState = RESUMED;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.4,56,38
5864_78,78,82,"if (desiredState == CREATED) {
if (localLOGV) Log.v(TAG, r.id + "": stopping"");
mActivityThread.performStopActivity(r, false, ""moveToState-STARTED"");
r.curState = CREATED;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,4,1,1,0,2,0.54,58,40
5864_79,79,79,"if (localLOGV) Log.v(TAG, r.id + "": stopping"");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.3,59,40
5864_80,80,80,"mActivityThread.performStopActivity(r, false, ""moveToState-STARTED"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,1,0.45,60,41
5864_81,81,81,r.curState = CREATED;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,1,0.52,61,42
5864_83,83,83,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,4,1,1,0,0,0.15,63,44
5864_85,85,86,"case RESUMED:
if (desiredState == STARTED) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,1,1,0,0,0.36,65,45
5864_87,87,87,"if (localLOGV) Log.v(TAG, r.id + "": pausing"");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.3,67,46
5864_88,88,88,"performPause(r, mFinishing);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.36,68,46
5864_89,89,89,r.curState = STARTED;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.34,69,47
5864_91,91,97,"if (desiredState == CREATED) {
if (localLOGV) Log.v(TAG, r.id + "": pausing"");
performPause(r, mFinishing);
if (localLOGV) Log.v(TAG, r.id + "": stopping"");
mActivityThread.performStopActivity(r, false, ""moveToState-RESUMED"");
r.curState = CREATED;
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,0,0,4,1,1,0,2,0.54,71,49
5864_92,92,92,"if (localLOGV) Log.v(TAG, r.id + "": pausing"");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.3,72,49
5864_93,93,93,"performPause(r, mFinishing);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.36,73,50
5864_94,94,94,"if (localLOGV) Log.v(TAG, r.id + "": stopping"");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.3,74,51
5864_95,95,95,"mActivityThread.performStopActivity(r, false, ""moveToState-RESUMED"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,1,0.47,75,52
5864_96,96,96,r.curState = CREATED;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,1,0.52,76,53
5864_98,98,98,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.15,78,55
5863_1,1,2,"    @UnsupportedAppUsage
private void moveToState(LocalActivityRecord r, int desiredState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,1,0,1,0.4,5,3
5863_3,3,5,"if (r.curState == RESTORED || r.curState == DESTROYED) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,3,1,0,0,0.37,2,1
5863_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.15,3,1
5863_7,7,54,"if (r.curState == INITIALIZING) {
HashMap<String, Object> lastNonConfigurationInstances =
mParent.getLastNonConfigurationChildInstances();
Object instanceObj = null;
if (lastNonConfigurationInstances != null) {
instanceObj = lastNonConfigurationInstances.get(r.id);
}
Activity.NonConfigurationInstances instance = null;
if (instanceObj != null) {
instance = new Activity.NonConfigurationInstances();
instance.activity = instanceObj;
}

if (localLOGV) Log.v(TAG, r.id + "": starting "" + r.intent);
if (r.activityInfo == null) {
r.activityInfo = mActivityThread.resolveActivityInfo(r.intent);
}
r.activity = mActivityThread.startActivityNow(
mParent, r.id, r.intent, r.activityInfo, r, r.instanceState, instance, r);
if (r.activity == null) {
return;
}
r.window = r.activity.getWindow();
r.instanceState = null;

final ActivityClientRecord clientRecord = mActivityThread.getActivityClient(r);
final PendingTransactionActions pendingActions;

if (!r.activity.mFinished) {
pendingActions = new PendingTransactionActions();
pendingActions.setOldState(clientRecord.state);
pendingActions.setRestoreInstanceState(true);
pendingActions.setCallOnPostCreate(true);
} else {
pendingActions = null;
}

mActivityThread.handleStartActivity(clientRecord, pendingActions);
r.curState = STARTED;

if (desiredState == RESUMED) {
if (localLOGV) Log.v(TAG, r.id + "": resuming"");
mActivityThread.performResumeActivity(r, true, ""moveToState-INITIALIZING"");
r.curState = RESUMED;
}

return;
}",1,0,0,0,0,0,0,0,0,32,2,48,0,0,1,1,6,3,1,0,6,0.76,0,0
5863_8,8,9,"HashMap<String, Object> lastNonConfigurationInstances =
mParent.getLastNonConfigurationChildInstances();",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,6,3,1,0,5,0.8,0,0
5863_10,10,10,Object instanceObj = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.54,2,1
5863_11,11,13,"if (lastNonConfigurationInstances != null) {
instanceObj = lastNonConfigurationInstances.get(r.id);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,1,0,5,0.87,3,1
5863_12,12,12,instanceObj = lastNonConfigurationInstances.get(r.id);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,5,0.86,4,2
5863_14,14,14,Activity.NonConfigurationInstances instance = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,4,0.83,6,4
5863_15,15,18,"if (instanceObj != null) {
instance = new Activity.NonConfigurationInstances();
instance.activity = instanceObj;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,6,3,1,0,4,0.8,7,4
5863_16,16,16,instance = new Activity.NonConfigurationInstances();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,4,0.81,8,5
5863_17,17,17,instance.activity = instanceObj;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,2,0.74,9,6
5863_20,20,20,"if (localLOGV) Log.v(TAG, r.id + "": starting "" + r.intent);",1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,1,0,0,0.32,12,8
5863_21,21,23,"if (r.activityInfo == null) {
r.activityInfo = mActivityThread.resolveActivityInfo(r.intent);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,3,1,0,1,0.48,13,8
5863_22,22,22,r.activityInfo = mActivityThread.resolveActivityInfo(r.intent);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.47,14,9
5863_24,24,25,"r.activity = mActivityThread.startActivityNow(
mParent, r.id, r.intent, r.activityInfo, r, r.instanceState, instance, r);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,1,0,2,0.54,16,11
5863_26,26,28,"if (r.activity == null) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,3,1,0,1,0.46,18,12
5863_27,27,27,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.15,19,12
5863_29,29,29,r.window = r.activity.getWindow();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,2,0.53,21,14
5863_30,30,30,r.instanceState = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,1,0,1,0.49,22,14
5863_32,32,32,final ActivityClientRecord clientRecord = mActivityThread.getActivityClient(r);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,3,1,0,2,0.55,24,16
5863_33,33,33,final PendingTransactionActions pendingActions;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,3,1,0,0,0.25,25,16
5863_35,35,42,"if (!r.activity.mFinished) {
pendingActions = new PendingTransactionActions();
pendingActions.setOldState(clientRecord.state);
pendingActions.setRestoreInstanceState(true);
pendingActions.setCallOnPostCreate(true);
} else {
pendingActions = null;
}",1,0,0,0,0,0,0,0,0,6,1,8,0,0,1,1,6,3,1,0,2,0.47,27,18
5863_36,36,36,pendingActions = new PendingTransactionActions();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.25,28,18
5863_37,37,37,pendingActions.setOldState(clientRecord.state);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.3,29,19
5863_38,38,38,pendingActions.setRestoreInstanceState(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.43,30,20
5863_39,39,39,pendingActions.setCallOnPostCreate(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.3,31,21
5863_40,40,40,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.22,32,22
5863_41,41,41,pendingActions = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.3,33,23
5863_44,44,44,"mActivityThread.handleStartActivity(clientRecord, pendingActions);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,1,0,1,0.43,36,25
5863_45,45,45,r.curState = STARTED;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,1,0,0,0.33,37,25
5863_47,47,51,"if (desiredState == RESUMED) {
if (localLOGV) Log.v(TAG, r.id + "": resuming"");
mActivityThread.performResumeActivity(r, true, ""moveToState-INITIALIZING"");
r.curState = RESUMED;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,6,3,1,0,1,0.43,39,27
5863_48,48,48,"if (localLOGV) Log.v(TAG, r.id + "": resuming"");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.33,40,27
5863_49,49,49,"mActivityThread.performResumeActivity(r, true, ""moveToState-INITIALIZING"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.44,41,28
5863_50,50,50,r.curState = RESUMED;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.38,42,29
5863_53,53,53,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,1,0,0,0.15,45,31
5863_56,56,56,switch (r.curState) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,1,0,0,0.37,48,32
5863_57,57,58,"case CREATED:
if (desiredState == STARTED) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,1,0,0,0.26,49,32
5863_59,59,59,"if (localLOGV) Log.v(TAG, r.id + "": restarting"");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.35,51,34
5863_60,60,60,"mActivityThread.performRestartActivity(r, true );",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.5,52,34
5863_61,61,61,r.curState = STARTED;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.33,53,35
5863_63,63,68,"if (desiredState == RESUMED) {
if (localLOGV) Log.v(TAG, r.id + "": restarting and resuming"");
mActivityThread.performRestartActivity(r, true );
mActivityThread.performResumeActivity(r, true, ""moveToState-CREATED"");
r.curState = RESUMED;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,6,3,1,0,1,0.46,55,37
5863_64,64,64,"if (localLOGV) Log.v(TAG, r.id + "": restarting and resuming"");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.36,56,37
5863_65,65,65,"mActivityThread.performRestartActivity(r, true );",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.5,57,38
5863_66,66,66,"mActivityThread.performResumeActivity(r, true, ""moveToState-CREATED"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.45,58,39
5863_67,67,67,r.curState = RESUMED;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.38,59,40
5863_69,69,69,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,6,3,1,0,0,0.15,61,42
5863_71,71,72,"case STARTED:
if (desiredState == RESUMED) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,3,1,0,0,0.3,63,43
5863_73,73,73,"if (localLOGV) Log.v(TAG, r.id + "": resuming"");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.33,65,44
5863_74,74,74,"mActivityThread.performResumeActivity(r, true, ""moveToState-STARTED"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.44,66,44
5863_75,75,75,r.instanceState = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.49,67,45
5863_76,76,76,r.curState = RESUMED;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.38,68,46
5863_78,78,82,"if (desiredState == CREATED) {
if (localLOGV) Log.v(TAG, r.id + "": stopping"");
mActivityThread.performStopActivity(r, false, ""moveToState-STARTED"");
r.curState = CREATED;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,6,3,1,0,1,0.42,70,48
5863_79,79,79,"if (localLOGV) Log.v(TAG, r.id + "": stopping"");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.32,71,48
5863_80,80,80,"mActivityThread.performStopActivity(r, false, ""moveToState-STARTED"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.43,72,49
5863_81,81,81,r.curState = CREATED;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.35,73,50
5863_83,83,83,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,6,3,1,0,0,0.15,75,52
5863_85,85,86,"case RESUMED:
if (desiredState == STARTED) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,3,1,0,0,0.3,77,53
5863_87,87,87,"if (localLOGV) Log.v(TAG, r.id + "": pausing"");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.32,79,54
5863_88,88,88,"performPause(r, mFinishing);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.38,80,54
5863_89,89,89,r.curState = STARTED;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.33,81,55
5863_91,91,97,"if (desiredState == CREATED) {
if (localLOGV) Log.v(TAG, r.id + "": pausing"");
performPause(r, mFinishing);
if (localLOGV) Log.v(TAG, r.id + "": stopping"");
mActivityThread.performStopActivity(r, false, ""moveToState-RESUMED"");
r.curState = CREATED;
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,0,0,6,3,1,0,1,0.42,83,57
5863_92,92,92,"if (localLOGV) Log.v(TAG, r.id + "": pausing"");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.32,84,57
5863_93,93,93,"performPause(r, mFinishing);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.38,85,58
5863_94,94,94,"if (localLOGV) Log.v(TAG, r.id + "": stopping"");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.32,86,59
5863_95,95,95,"mActivityThread.performStopActivity(r, false, ""moveToState-RESUMED"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.45,87,60
5863_96,96,96,r.curState = CREATED;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.35,88,61
5863_98,98,98,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.15,90,63
5862_1,1,1,public void stop() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.51,0,0
5862_2,2,13,"if (mBackgroundAnimator != null) {
mBackgroundAnimator.end();
mBackgroundAnimator = null;
} else if (mWasOpaque) {
ViewGroup decorView = getDecor();
if (decorView != null) {
Drawable drawable = decorView.getBackground();
if (drawable != null) {
drawable.setAlpha(1);
}
}
}",1,0,0,0,0,0,0,0,0,8,3,12,0,0,0,0,7,7,0,0,1,0.45,0,0
5862_3,3,3,mBackgroundAnimator.end();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.49,1,0
5862_4,4,4,mBackgroundAnimator = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.49,2,1
5862_5,5,5,} else if (mWasOpaque) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.29,3,2
5862_6,6,6,ViewGroup decorView = getDecor();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,7,0,0,0,0.33,4,3
5862_7,7,12,"if (decorView != null) {
Drawable drawable = decorView.getBackground();
if (drawable != null) {
drawable.setAlpha(1);
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,0,7,7,0,0,1,0.42,5,4
5862_8,8,8,Drawable drawable = decorView.getBackground();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,7,0,0,1,0.45,6,5
5862_9,9,11,"if (drawable != null) {
drawable.setAlpha(1);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,7,0,0,0,0.36,7,6
5862_10,10,10,drawable.setAlpha(1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.36,8,7
5862_14,14,14,makeOpaque();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.27,12,9
5862_15,15,15,mIsCanceled = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.4,13,9
5862_16,16,16,mResultReceiver = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.34,14,10
5862_17,17,17,mActivity = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.51,15,11
5862_18,18,18,moveSharedElementsFromOverlay();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.34,16,12
5862_19,19,22,"if (mTransitioningViews != null) {
showViews(mTransitioningViews, true);
setTransitioningViewsVisiblity(View.VISIBLE, true);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,0,0,0,7,7,0,0,0,0.36,17,13
5862_20,20,20,"showViews(mTransitioningViews, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.35,18,14
5862_21,21,21,"setTransitioningViewsVisiblity(View.VISIBLE, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.35,19,15
5862_23,23,23,"showViews(mSharedElements, true);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,7,0,0,0,0.32,21,17
5862_24,24,24,clearState();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.53,22,17
5861_1,1,1,private void startSharedElementTransition(Bundle sharedElementState) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,4,0.86,13,10
5861_2,2,2,ViewGroup decorView = getDecor();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.34,12,9
5861_3,3,5,"if (decorView == null) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,0,0.28,9,7
5861_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.17,10,7
5861_6,6,6,ArrayList<String> rejectedNames = new ArrayList<String>(mAllSharedElementNames);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,2,0.54,8,6
5861_7,7,7,rejectedNames.removeAll(mSharedElementNames);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,2,0.58,7,5
5861_8,8,8,"ArrayList<View> rejectedSnapshots = createSnapshots(sharedElementState, rejectedNames);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,2,0.55,6,4
5861_9,9,11,"if (mListener != null) {
mListener.onRejectSharedElements(rejectedSnapshots);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,2,0.57,3,2
5861_10,10,10,mListener.onRejectSharedElements(rejectedSnapshots);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.6,4,2
5861_12,12,12,removeNullViews(rejectedSnapshots);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.28,2,1
5861_13,13,13,startRejectedAnimations(rejectedSnapshots);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,1,0.49,1,0
5861_15,15,16,"ArrayList<View> sharedElementSnapshots = createSnapshots(sharedElementState,
mSharedElementNames);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,0,4,3,0,0,2,0.63,0,0
5861_17,17,17,"showViews(mSharedElements, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.61,2,1
5861_18,18,18,scheduleSetSharedElementEnd(sharedElementSnapshots);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,2,0.69,3,1
5861_19,19,20,"ArrayList<SharedElementOriginalState> originalImageViewState =
setSharedElementState(sharedElementState, sharedElementSnapshots);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,3,0,0,2,0.62,4,2
5861_21,21,21,requestLayoutForSharedElements();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,2,0.64,6,4
5861_23,23,23,boolean startEnterTransition = allowOverlappingTransitions() && !mIsReturning;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,3,0,0,2,0.64,8,5
5861_24,24,24,boolean startSharedElementTransition = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,4,0.89,9,5
5861_25,25,25,setGhostVisibility(View.INVISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,10,6
5861_26,26,26,scheduleGhostVisibilityChange(View.INVISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,11,7
5861_27,27,27,pauseInput();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.22,12,8
5861_28,28,29,"Transition transition = beginTransition(decorView, startEnterTransition,
startSharedElementTransition);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,4,3,0,0,4,0.91,13,9
5861_30,30,30,scheduleGhostVisibilityChange(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.34,15,11
5861_31,31,31,setGhostVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.28,16,11
5861_33,33,35,"if (startEnterTransition) {
startEnterTransition(transition);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,2,0.77,18,13
5861_34,34,34,startEnterTransition(transition);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.78,19,13
5861_37,37,37,"setOriginalSharedElementState(mSharedElements, originalImageViewState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,2,0.6,22,15
5861_39,39,56,"if (mResultReceiver != null) {
decorView.postOnAnimation(new Runnable() {
int mAnimations;

@Override
public void run() {
if (mAnimations++ < MIN_ANIMATION_FRAMES) {
View decorView = getDecor();
if (decorView != null) {
decorView.postOnAnimation(this);
}
} else if (mResultReceiver != null) {
mResultReceiver.send(MSG_HIDE_SHARED_ELEMENTS, null);
mResultReceiver = null;
}
}
});
}",1,0,0,0,0,0,0,0,0,10,5,18,0,0,1,0,4,3,0,0,2,0.55,24,16
5861_40,40,40,decorView.postOnAnimation(new Runnable() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,25,16
5861_41,41,41,int mAnimations;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.35,26,17
5861_43,43,44,"@Override
public void run() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,3,0,0,0,0.3,28,19
5861_45,45,53,"if (mAnimations++ < MIN_ANIMATION_FRAMES) {
View decorView = getDecor();
if (decorView != null) {
decorView.postOnAnimation(this);
}
} else if (mResultReceiver != null) {
mResultReceiver.send(MSG_HIDE_SHARED_ELEMENTS, null);
mResultReceiver = null;
}",1,0,0,0,0,0,0,0,0,6,2,9,0,0,0,0,4,3,0,0,2,0.56,30,20
5861_46,46,46,View decorView = getDecor();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.31,31,20
5861_47,47,49,"if (decorView != null) {
decorView.postOnAnimation(this);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,0,0.36,32,21
5861_48,48,48,decorView.postOnAnimation(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.37,33,22
5861_50,50,50,} else if (mResultReceiver != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.27,35,24
5861_51,51,51,"mResultReceiver.send(MSG_HIDE_SHARED_ELEMENTS, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.56,36,24
5861_52,52,52,mResultReceiver = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,37,25
5860_1,1,1,private void startSharedElementTransition(Bundle sharedElementState) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.61,4,3
5860_2,2,2,ViewGroup decorView = getDecor();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.32,3,2
5860_3,3,5,"if (decorView == null) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,4,0,0,0,0.28,0,0
5860_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.25,1,0
5860_6,6,6,ArrayList<String> rejectedNames = new ArrayList<String>(mAllSharedElementNames);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,3,0.67,0,0
5860_7,7,7,rejectedNames.removeAll(mSharedElementNames);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,4,0.88,1,0
5860_8,8,8,"ArrayList<View> rejectedSnapshots = createSnapshots(sharedElementState, rejectedNames);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,3,0.69,2,1
5860_9,9,11,"if (mListener != null) {
mListener.onRejectSharedElements(rejectedSnapshots);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,4,0,0,3,0.76,3,2
5860_10,10,10,mListener.onRejectSharedElements(rejectedSnapshots);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,3,0.82,4,3
5860_12,12,12,removeNullViews(rejectedSnapshots);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,2,0.59,6,5
5860_13,13,13,startRejectedAnimations(rejectedSnapshots);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,4,0,0,1,0.5,7,5
5860_15,15,16,"ArrayList<View> sharedElementSnapshots = createSnapshots(sharedElementState,
mSharedElementNames);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,0,4,4,0,0,2,0.64,9,7
5860_17,17,17,"showViews(mSharedElements, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.6,11,8
5860_18,18,18,scheduleSetSharedElementEnd(sharedElementSnapshots);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,2,0.65,12,8
5860_19,19,20,"ArrayList<SharedElementOriginalState> originalImageViewState =
setSharedElementState(sharedElementState, sharedElementSnapshots);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,4,0,0,2,0.62,13,9
5860_21,21,21,requestLayoutForSharedElements();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,2,0.67,15,11
5860_23,23,23,boolean startEnterTransition = allowOverlappingTransitions() && !mIsReturning;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.35,17,12
5860_24,24,24,boolean startSharedElementTransition = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.62,18,12
5860_25,25,25,setGhostVisibility(View.INVISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.29,19,13
5860_26,26,26,scheduleGhostVisibilityChange(View.INVISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.35,20,14
5860_27,27,27,pauseInput();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.31,21,15
5860_28,28,29,"Transition transition = beginTransition(decorView, startEnterTransition,
startSharedElementTransition);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,4,4,0,0,2,0.54,22,16
5860_30,30,30,scheduleGhostVisibilityChange(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.3,24,18
5860_31,31,31,setGhostVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.19,25,18
5860_33,33,35,"if (startEnterTransition) {
startEnterTransition(transition);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,4,0,0,0,0.33,27,20
5860_34,34,34,startEnterTransition(transition);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.33,28,20
5860_37,37,37,"setOriginalSharedElementState(mSharedElements, originalImageViewState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,2,0.57,31,22
5860_39,39,56,"if (mResultReceiver != null) {
decorView.postOnAnimation(new Runnable() {
int mAnimations;

@Override
public void run() {
if (mAnimations++ < MIN_ANIMATION_FRAMES) {
View decorView = getDecor();
if (decorView != null) {
decorView.postOnAnimation(this);
}
} else if (mResultReceiver != null) {
mResultReceiver.send(MSG_HIDE_SHARED_ELEMENTS, null);
mResultReceiver = null;
}
}
});
}",1,0,0,0,0,0,0,0,0,10,5,18,0,0,1,0,4,4,0,0,2,0.52,33,23
5860_40,40,40,decorView.postOnAnimation(new Runnable() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.27,34,23
5860_41,41,41,int mAnimations;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.22,35,24
5860_43,43,44,"@Override
public void run() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,4,0,0,0,0.28,37,26
5860_45,45,53,"if (mAnimations++ < MIN_ANIMATION_FRAMES) {
View decorView = getDecor();
if (decorView != null) {
decorView.postOnAnimation(this);
}
} else if (mResultReceiver != null) {
mResultReceiver.send(MSG_HIDE_SHARED_ELEMENTS, null);
mResultReceiver = null;
}",1,0,0,0,0,0,0,0,0,6,2,9,0,0,0,0,4,4,0,0,2,0.53,39,27
5860_46,46,46,View decorView = getDecor();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.29,40,27
5860_47,47,49,"if (decorView != null) {
decorView.postOnAnimation(this);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,4,0,0,0,0.28,41,28
5860_48,48,48,decorView.postOnAnimation(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.27,42,29
5860_50,50,50,} else if (mResultReceiver != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.32,44,31
5860_51,51,51,"mResultReceiver.send(MSG_HIDE_SHARED_ELEMENTS, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.61,45,31
5860_52,52,52,mResultReceiver = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.29,46,32
5859_1,1,1,throws RemoteException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,1,1,0,0,0.25,6,5
5859_2,2,2,final int displayId = mVirtualDisplay.getDisplay().getDisplayId();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,1,1,0,2,0.66,5,4
5859_3,3,3,final List<StackInfo> stackInfoList = mActivityTaskManager.getAllStackInfos();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,1,1,0,1,0.53,4,3
5859_5,5,5,final int stackCount = stackInfoList.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,1,1,0,1,0.56,2,2
5859_6,6,12,"for (int i = 0; i < stackCount; i++) {
final StackInfo stackInfo = stackInfoList.get(i);
if (stackInfo.displayId != displayId) {
continue;
}
return stackInfo;
}",0,0,1,0,0,0,0,0,0,4,2,7,0,1,0,0,4,1,1,0,2,0.66,0,0
5859_7,7,7,final StackInfo stackInfo = stackInfoList.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,1,0.58,0,0
5859_8,8,10,"if (stackInfo.displayId != displayId) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,1,1,0,2,0.67,0,0
5859_9,9,9,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.22,1,0
5859_11,11,11,return stackInfo;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,1,1,0,1,0.58,3,2
5859_13,13,13,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.26,5,3
5858_1,1,1,throws RemoteException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,0,0.17,3,2
5858_2,2,2,final int displayId = mVirtualDisplay.getDisplay().getDisplayId();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,2,1
5858_3,3,3,final List<StackInfo> stackInfoList = mActivityTaskManager.getAllStackInfos();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.5,1,0
5858_5,5,5,final int stackCount = stackInfoList.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,1,0.55,0,0
5858_6,6,12,"for (int i = 0; i < stackCount; i++) {
final StackInfo stackInfo = stackInfoList.get(i);
if (stackInfo.displayId != displayId) {
continue;
}
return stackInfo;
}",0,0,1,0,0,0,0,0,0,4,2,7,0,1,0,0,4,3,0,0,1,0.53,1,0
5858_7,7,7,final StackInfo stackInfo = stackInfoList.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.53,2,1
5858_8,8,10,"if (stackInfo.displayId != displayId) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,1,0.45,3,2
5858_9,9,9,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,4,3
5858_11,11,11,return stackInfo;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.49,6,5
5858_13,13,13,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.21,8,6
5857_1,1,2,"@Override
public void onTaskCreated(int taskId, ComponentName componentName) throws RemoteException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,6,0,0,1,0.45,5,3
5857_3,3,5,"if (mActivityViewCallback == null || mVirtualDisplay == null) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,9,6,0,0,2,0.55,2,1
5857_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.34,3,1
5857_7,7,7,StackInfo stackInfo = getTopMostStackInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,6,0,0,2,0.62,0,0
5857_8,8,11,"if (stackInfo != null
&& taskId == stackInfo.taskIds[stackInfo.taskIds.length - 1]) {
mActivityViewCallback.onTaskCreated(taskId, componentName);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,9,6,0,0,5,0.71,0,0
5857_9,9,9,&& taskId == stackInfo.taskIds[stackInfo.taskIds.length - 1]) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,3,0.63,1,0
5857_10,10,10,"mActivityViewCallback.onTaskCreated(taskId, componentName);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,2,0.51,2,1
5856_1,1,2,"@Override
public void onTaskMovedToFront(ActivityManager.RunningTaskInfo taskInfo)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,6,0,0,3,0.62,7,5
5856_3,3,3,throws RemoteException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,9,6,0,0,0,0.33,6,4
5856_4,4,7,"if (mActivityViewCallback  == null || mVirtualDisplay == null
|| taskInfo.displayId != mVirtualDisplay.getDisplay().getDisplayId()) {
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,9,6,0,0,3,0.56,2,1
5856_5,5,5,|| taskInfo.displayId != mVirtualDisplay.getDisplay().getDisplayId()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,1,0.45,4,2
5856_6,6,6,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.35,3,1
5856_9,9,9,StackInfo stackInfo = getTopMostStackInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,6,0,0,2,0.65,0,0
5856_10,10,13,"if (stackInfo != null
&& taskInfo.taskId == stackInfo.taskIds[stackInfo.taskIds.length - 1]) {
mActivityViewCallback.onTaskMovedToFront(taskInfo.taskId);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,9,6,0,0,6,0.75,0,0
5856_11,11,11,&& taskInfo.taskId == stackInfo.taskIds[stackInfo.taskIds.length - 1]) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,2,0.55,1,0
5856_12,12,12,mActivityViewCallback.onTaskMovedToFront(taskInfo.taskId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,4,0.66,2,1
5855_1,1,2,"@Override
public void onTaskDescriptionChanged(ActivityManager.RunningTaskInfo taskInfo)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,7,1,0,3,0.61,10,7
5855_3,3,3,throws RemoteException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,10,7,1,0,0,0.34,9,6
5855_4,4,7,"if (mVirtualDisplay == null
|| taskInfo.displayId != mVirtualDisplay.getDisplay().getDisplayId()) {
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,10,7,1,0,2,0.54,5,3
5855_5,5,5,|| taskInfo.displayId != mVirtualDisplay.getDisplay().getDisplayId()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,2,0.57,7,4
5855_6,6,6,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,7,1,0,0,0.21,6,3
5855_9,9,9,StackInfo stackInfo = getTopMostStackInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,10,7,1,0,1,0.51,3,2
5855_10,10,12,"if (stackInfo == null) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,10,7,1,0,1,0.45,0,0
5855_11,11,11,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,7,1,0,0,0.21,1,0
5855_13,13,16,"if (taskInfo.taskId == stackInfo.taskIds[stackInfo.taskIds.length - 1]) {
mSurfaceView.setResizeBackgroundColor(
taskInfo.taskDescription.getBackgroundColor());
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,10,7,1,0,3,0.59,0,0
5855_14,14,15,"mSurfaceView.setResizeBackgroundColor(
taskInfo.taskDescription.getBackgroundColor());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,7,1,0,2,0.5,1,0
5854_1,1,1,    private void cleanTapExcludeRegion() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,4,0.75,3,2
5854_2,2,4,"if (!isAttachedToWindow() || mTapExcludeRegion.isEmpty()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,9,5,0,0,3,0.64,0,0
5854_3,3,3,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.32,1,0
5854_5,5,11,"try {
WindowManagerGlobal.getWindowSession().updateTapExcludeRegion(getWindow(), hashCode(),
null );
mTapExcludeRegion.setEmpty();
} catch (RemoteException e) {
e.rethrowAsRuntimeException();
}",0,0,0,0,1,0,0,0,0,4,1,7,0,0,0,0,9,5,0,0,5,0.66,0,0
5854_6,6,7,"WindowManagerGlobal.getWindowSession().updateTapExcludeRegion(getWindow(), hashCode(),
null );",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,0,0,5,0.66,1,0
5854_8,8,8,mTapExcludeRegion.setEmpty();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,3,0.68,3,2
5854_9,9,9,} catch (RemoteException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.31,4,2
5854_10,10,10,e.rethrowAsRuntimeException();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.26,5,3
5853_1,1,1,throws RemoteException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,10,3,2,0,0,0.33,6,4
5853_2,2,5,"if (!canReceivePointerEvents()) {
cleanTapExcludeRegion();
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,10,3,2,0,3,0.61,2,1
5853_3,3,3,cleanTapExcludeRegion();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,3,2,0,3,0.66,4,2
5853_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,3,2,0,0,0.24,3,1
5853_6,6,6,"mTapExcludeRegion.set(x, y, x + getWidth(), y + getHeight());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,10,3,2,0,3,0.63,1,0
5853_8,8,8,final ViewParent parent = getParent();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,10,3,2,0,1,0.45,0,0
5853_9,9,11,"if (parent != null) {
parent.subtractObscuredTouchableRegion(mTapExcludeRegion, this);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,10,3,2,0,4,0.72,1,0
5853_10,10,10,"parent.subtractObscuredTouchableRegion(mTapExcludeRegion, this);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,3,2,0,4,0.76,2,1
5853_13,13,14,"WindowManagerGlobal.getWindowSession().updateTapExcludeRegion(getWindow(), hashCode(),
mTapExcludeRegion);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,10,3,2,0,3,0.59,5,3
5852_1,1,1,private void updateLocationAndTapExcludeRegion() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.38,14,11
5852_2,2,4,"if (mVirtualDisplay == null || !isAttachedToWindow()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,5,1,0,0,0.34,11,9
5852_3,3,3,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.21,12,9
5852_5,5,25,"try {
int x = mLocationInWindow[0];
int y = mLocationInWindow[1];
getLocationInWindow(mLocationInWindow);
if (x != mLocationInWindow[0] || y != mLocationInWindow[1]) {
x = mLocationInWindow[0];
y = mLocationInWindow[1];
final int displayId = mVirtualDisplay.getDisplay().getDisplayId();
WindowManagerGlobal.getWindowSession().updateDisplayContentLocation(
getWindow(), x, y, displayId);

final Matrix matrix = new Matrix();
matrix.set(getMatrix());
matrix.postTranslate(x, y);
mContext.getSystemService(InputMethodManager.class)
.reportActivityView(displayId, matrix);
}
updateTapExcludeRegion(x, y);
} catch (RemoteException e) {
e.rethrowAsRuntimeException();
}",0,0,0,0,1,0,0,0,0,16,2,21,0,0,0,0,8,5,1,0,5,0.6,0,0
5852_6,6,6,int x = mLocationInWindow[0];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.32,9,7
5852_7,7,7,int y = mLocationInWindow[1];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.29,8,6
5852_8,8,8,getLocationInWindow(mLocationInWindow);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.32,7,5
5852_9,9,21,"if (x != mLocationInWindow[0] || y != mLocationInWindow[1]) {
x = mLocationInWindow[0];
y = mLocationInWindow[1];
final int displayId = mVirtualDisplay.getDisplay().getDisplayId();
WindowManagerGlobal.getWindowSession().updateDisplayContentLocation(
getWindow(), x, y, displayId);

final Matrix matrix = new Matrix();
matrix.set(getMatrix());
matrix.postTranslate(x, y);
mContext.getSystemService(InputMethodManager.class)
.reportActivityView(displayId, matrix);
}",1,0,0,0,0,0,0,0,0,9,1,13,0,1,0,0,8,5,1,0,5,0.61,0,0
5852_10,10,10,x = mLocationInWindow[0];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.31,5,3
5852_11,11,11,y = mLocationInWindow[1];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.26,4,2
5852_12,12,12,final int displayId = mVirtualDisplay.getDisplay().getDisplayId();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,1,0,0,0.37,3,1
5852_13,13,14,"WindowManagerGlobal.getWindowSession().updateDisplayContentLocation(
getWindow(), x, y, displayId);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,8,5,1,0,1,0.42,1,0
5852_16,16,16,final Matrix matrix = new Matrix();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,5,1,0,0,0.32,0,0
5852_17,17,17,matrix.set(getMatrix());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,1,0,0,0.36,1,0
5852_18,18,18,"matrix.postTranslate(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,1,0,0,0.36,2,1
5852_19,19,19,mContext.getSystemService(InputMethodManager.class),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,4,0.71,3,2
5852_20,20,20,".reportActivityView(displayId, matrix);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.44,4,3
5852_22,22,22,"updateTapExcludeRegion(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,1,0,0,0.37,6,5
5852_23,23,23,} catch (RemoteException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.38,7,5
5852_24,24,24,e.rethrowAsRuntimeException();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.33,8,6
5850_1,1,10,"public final void bindApplication(String processName, ApplicationInfo appInfo,
List<ProviderInfo> providers, ComponentName instrumentationName,
ProfilerInfo profilerInfo, Bundle instrumentationArgs,
IInstrumentationWatcher instrumentationWatcher,
IUiAutomationConnection instrumentationUiConnection, int debugMode,
boolean enableBinderTracking, boolean trackAllocation,
boolean isRestrictedBackupMode, boolean persistent, Configuration config,
CompatibilityInfo compatInfo, Map services, Bundle coreSettings,
String buildSerial, AutofillOptions autofillOptions,
ContentCaptureOptions contentCaptureOptions) {",0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,5,4,0,0,1,0.51,20,10
5850_11,11,32,"if (services != null) {
if (false) {
for (Object oname : services.keySet()) {
if (services.get(oname) == null) {
continue;
}
String name = (String) oname;

switch (name) {
case ""package"":
case Context.WINDOW_SERVICE:
continue;
}

if (ServiceManager.getService(name) == null) {
Log.wtf(TAG, ""Service "" + name + "" should be accessible by this app"");
}
}
}

ServiceManager.initServiceCache(services);
}",1,0,0,0,0,0,0,0,0,10,4,22,0,0,0,1,5,4,0,0,3,0.7,0,0
5850_12,12,29,"if (false) {
for (Object oname : services.keySet()) {
if (services.get(oname) == null) {
continue;
}
String name = (String) oname;

switch (name) {
case ""package"":
case Context.WINDOW_SERVICE:
continue;
}

if (ServiceManager.getService(name) == null) {
Log.wtf(TAG, ""Service "" + name + "" should be accessible by this app"");
}
}
}",1,0,0,0,0,0,0,0,0,8,3,18,0,0,0,1,5,4,0,0,2,0.6,1,0
5850_13,13,28,"for (Object oname : services.keySet()) {
if (services.get(oname) == null) {
continue;
}
String name = (String) oname;

switch (name) {
case ""package"":
case Context.WINDOW_SERVICE:
continue;
}

if (ServiceManager.getService(name) == null) {
Log.wtf(TAG, ""Service "" + name + "" should be accessible by this app"");
}
}",0,0,0,1,0,0,0,0,0,7,2,16,0,0,0,0,5,4,0,0,2,0.6,2,0
5850_14,14,16,"if (services.get(oname) == null) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,4,0,0,1,0.49,14,5
5850_15,15,15,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.06,15,5
5850_17,17,17,String name = (String) oname;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,5,4,0,0,0,0.21,13,4
5850_19,19,19,switch (name) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,0,0,0,0.27,11,3
5850_20,20,22,"case ""package"":
case Context.WINDOW_SERVICE:
continue;",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,5,4,0,0,1,0.5,8,2
5850_25,25,27,"if (ServiceManager.getService(name) == null) {
Log.wtf(TAG, ""Service "" + name + "" should be accessible by this app"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,5,4,0,0,2,0.66,3,0
5850_26,26,26,"Log.wtf(TAG, ""Service "" + name + "" should be accessible by this app"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.57,4,0
5850_31,31,31,ServiceManager.initServiceCache(services);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,0,0,3,0.89,0,0
5850_34,34,34,setCoreSettings(coreSettings);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,4,0,0,0,0.4,3,1
5850_36,36,36,AppBindData data = new AppBindData();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,0,0.35,5,2
5850_37,37,37,data.processName = processName;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.27,6,2
5850_38,38,38,data.appInfo = appInfo;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.35,7,3
5850_39,39,39,data.providers = providers;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.18,8,4
5850_40,40,40,data.instrumentationName = instrumentationName;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.29,9,5
5850_41,41,41,data.instrumentationArgs = instrumentationArgs;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.25,10,6
5850_42,42,42,data.instrumentationWatcher = instrumentationWatcher;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.27,11,7
5850_43,43,43,data.instrumentationUiAutomationConnection = instrumentationUiConnection;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.38,12,8
5850_44,44,44,data.debugMode = debugMode;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.3,13,9
5850_45,45,45,data.enableBinderTracking = enableBinderTracking;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.33,14,10
5850_46,46,46,data.trackAllocation = trackAllocation;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.21,15,11
5850_47,47,47,data.restrictedBackupMode = isRestrictedBackupMode;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.33,16,12
5850_48,48,48,data.persistent = persistent;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.26,17,13
5850_49,49,49,data.config = config;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.29,18,14
5850_50,50,50,data.compatInfo = compatInfo;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.29,19,15
5850_51,51,51,data.initProfilerInfo = profilerInfo;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.35,20,16
5850_52,52,52,data.buildSerial = buildSerial;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.24,21,17
5850_53,53,53,data.autofillOptions = autofillOptions;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.22,22,18
5850_54,54,54,data.contentCaptureOptions = contentCaptureOptions;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.28,23,19
5850_55,55,55,"sendMessage(H.BIND_APPLICATION, data);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.38,24,20
5849_1,1,10,"public final void bindApplication(String processName, ApplicationInfo appInfo,
List<ProviderInfo> providers, ComponentName instrumentationName,
ProfilerInfo profilerInfo, Bundle instrumentationArgs,
IInstrumentationWatcher instrumentationWatcher,
IUiAutomationConnection instrumentationUiConnection, int debugMode,
boolean enableBinderTracking, boolean trackAllocation,
boolean isRestrictedBackupMode, boolean persistent, Configuration config,
CompatibilityInfo compatInfo, Map services, Bundle coreSettings,
String buildSerial, AutofillOptions autofillOptions,
ContentCaptureOptions contentCaptureOptions) {",0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,9,4,2,0,2,0.48,2,2
5849_11,11,32,"if (services != null) {
if (false) {
for (Object oname : services.keySet()) {
if (services.get(oname) == null) {
continue;
}
String name = (String) oname;

switch (name) {
case ""package"":
case Context.WINDOW_SERVICE:
continue;
}

if (ServiceManager.getService(name) == null) {
Log.wtf(TAG, ""Service "" + name + "" should be accessible by this app"");
}
}
}

ServiceManager.initServiceCache(services);
}",1,0,0,0,0,0,0,0,0,10,4,22,0,0,0,1,9,4,2,0,3,0.53,0,0
5849_12,12,29,"if (false) {
for (Object oname : services.keySet()) {
if (services.get(oname) == null) {
continue;
}
String name = (String) oname;

switch (name) {
case ""package"":
case Context.WINDOW_SERVICE:
continue;
}

if (ServiceManager.getService(name) == null) {
Log.wtf(TAG, ""Service "" + name + "" should be accessible by this app"");
}
}
}",1,0,0,0,0,0,0,0,0,8,3,18,0,0,0,1,9,4,2,0,3,0.52,0,0
5849_13,13,28,"for (Object oname : services.keySet()) {
if (services.get(oname) == null) {
continue;
}
String name = (String) oname;

switch (name) {
case ""package"":
case Context.WINDOW_SERVICE:
continue;
}

if (ServiceManager.getService(name) == null) {
Log.wtf(TAG, ""Service "" + name + "" should be accessible by this app"");
}
}",0,0,0,1,0,0,0,0,0,7,2,16,0,0,0,0,9,4,2,0,2,0.52,0,0
5849_14,14,16,"if (services.get(oname) == null) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,9,4,2,0,1,0.44,1,0
5849_15,15,15,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,2,0,0,0.28,2,1
5849_17,17,17,String name = (String) oname;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,9,4,2,0,0,0.31,4,3
5849_19,19,19,switch (name) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,4,2,0,0,0.35,6,4
5849_20,20,22,"case ""package"":
case Context.WINDOW_SERVICE:
continue;",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,9,4,2,0,1,0.44,7,4
5849_25,25,27,"if (ServiceManager.getService(name) == null) {
Log.wtf(TAG, ""Service "" + name + "" should be accessible by this app"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,9,4,2,0,2,0.55,12,6
5849_26,26,26,"Log.wtf(TAG, ""Service "" + name + "" should be accessible by this app"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,2,0,2,0.55,13,6
5849_31,31,31,ServiceManager.initServiceCache(services);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,4,2,0,1,0.5,18,8
5849_34,34,34,setCoreSettings(coreSettings);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,4,2,0,0,0.35,21,9
5849_36,36,36,AppBindData data = new AppBindData();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,4,2,0,1,0.46,23,10
5849_37,37,37,data.processName = processName;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,2,0,0,0.38,24,10
5849_38,38,38,data.appInfo = appInfo;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,2,0,1,0.48,25,11
5849_39,39,39,data.providers = providers;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,2,0,0,0.29,26,12
5849_40,40,40,data.instrumentationName = instrumentationName;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,2,0,0,0.36,27,13
5849_41,41,41,data.instrumentationArgs = instrumentationArgs;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,2,0,0,0.4,28,14
5849_42,42,42,data.instrumentationWatcher = instrumentationWatcher;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,2,0,0,0.33,29,15
5849_43,43,43,data.instrumentationUiAutomationConnection = instrumentationUiConnection;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,2,0,0,0.35,30,16
5849_44,44,44,data.debugMode = debugMode;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,2,0,0,0.36,31,17
5849_45,45,45,data.enableBinderTracking = enableBinderTracking;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,2,0,0,0.34,32,18
5849_46,46,46,data.trackAllocation = trackAllocation;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,2,0,0,0.22,33,19
5849_47,47,47,data.restrictedBackupMode = isRestrictedBackupMode;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,2,0,0,0.37,34,20
5849_48,48,48,data.persistent = persistent;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,2,0,0,0.27,35,21
5849_49,49,49,data.config = config;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,2,0,0,0.28,36,22
5849_50,50,50,data.compatInfo = compatInfo;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,2,0,0,0.34,37,23
5849_51,51,51,data.initProfilerInfo = profilerInfo;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,2,0,0,0.36,38,24
5849_52,52,52,data.buildSerial = buildSerial;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,2,0,0,0.29,39,25
5849_53,53,53,data.autofillOptions = autofillOptions;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,2,0,0,0.33,40,26
5849_54,54,54,data.contentCaptureOptions = contentCaptureOptions;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,2,0,0,0.28,41,27
5849_55,55,55,"sendMessage(H.BIND_APPLICATION, data);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,2,0,0,0.38,42,28
5848_1,1,1,public Object getValue(float fraction) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.42,38,27
5848_2,2,8,"if (mNumKeyframes == 2) {
if (mInterpolator != null) {
fraction = mInterpolator.getInterpolation(fraction);
}
return mEvaluator.evaluate(fraction, mFirstKeyframe.getValue(),
mLastKeyframe.getValue());
}",1,0,0,0,0,0,0,0,0,3,2,7,1,0,0,0,4,4,0,0,1,0.57,31,23
5848_3,3,5,"if (mInterpolator != null) {
fraction = mInterpolator.getInterpolation(fraction);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,4,0,0,1,0.65,34,24
5848_4,4,4,fraction = mInterpolator.getInterpolation(fraction);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.65,35,24
5848_6,6,7,"return mEvaluator.evaluate(fraction, mFirstKeyframe.getValue(),
mLastKeyframe.getValue());",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.42,32,23
5848_9,9,31,"if (fraction <= 0f) {
final Keyframe nextKeyframe = mKeyframes.get(1);
final TimeInterpolator interpolator = nextKeyframe.getInterpolator();
if (interpolator != null) {
fraction = interpolator.getInterpolation(fraction);
}
final float prevFraction = mFirstKeyframe.getFraction();
float intervalFraction = (fraction - prevFraction) /
(nextKeyframe.getFraction() - prevFraction);
return mEvaluator.evaluate(intervalFraction, mFirstKeyframe.getValue(),
nextKeyframe.getValue());
} else if (fraction >= 1f) {
final Keyframe prevKeyframe = mKeyframes.get(mNumKeyframes - 2);
final TimeInterpolator interpolator = mLastKeyframe.getInterpolator();
if (interpolator != null) {
fraction = interpolator.getInterpolation(fraction);
}
final float prevFraction = prevKeyframe.getFraction();
float intervalFraction = (fraction - prevFraction) /
(mLastKeyframe.getFraction() - prevFraction);
return mEvaluator.evaluate(intervalFraction, prevKeyframe.getValue(),
mLastKeyframe.getValue());
}",1,0,0,0,0,0,0,0,0,15,2,23,1,1,0,0,4,4,0,0,1,0.59,8,7
5848_10,10,10,final Keyframe nextKeyframe = mKeyframes.get(1);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.29,29,21
5848_11,11,11,final TimeInterpolator interpolator = nextKeyframe.getInterpolator();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.6,28,20
5848_12,12,14,"if (interpolator != null) {
fraction = interpolator.getInterpolation(fraction);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,4,0,0,1,0.65,25,18
5848_13,13,13,fraction = interpolator.getInterpolation(fraction);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.65,26,18
5848_15,15,15,final float prevFraction = mFirstKeyframe.getFraction();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,4,0,0,0,0.45,24,17
5848_16,16,17,"float intervalFraction = (fraction - prevFraction) /
(nextKeyframe.getFraction() - prevFraction);",0,0,0,0,0,1,0,0,0,0,0,2,1,1,0,0,4,4,0,0,0,0.49,22,16
5848_18,18,19,"return mEvaluator.evaluate(intervalFraction, mFirstKeyframe.getValue(),
nextKeyframe.getValue());",0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,4,4,0,0,0,0.48,20,15
5848_20,20,20,} else if (fraction >= 1f) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.58,19,14
5848_21,21,21,final Keyframe prevKeyframe = mKeyframes.get(mNumKeyframes - 2);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.4,18,13
5848_22,22,22,final TimeInterpolator interpolator = mLastKeyframe.getInterpolator();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.59,17,12
5848_23,23,25,"if (interpolator != null) {
fraction = interpolator.getInterpolation(fraction);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,4,0,0,1,0.65,14,10
5848_24,24,24,fraction = interpolator.getInterpolation(fraction);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.65,15,10
5848_26,26,26,final float prevFraction = prevKeyframe.getFraction();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,4,0,0,0,0.47,13,9
5848_27,27,28,"float intervalFraction = (fraction - prevFraction) /
(mLastKeyframe.getFraction() - prevFraction);",0,0,0,0,0,1,0,0,0,0,0,2,1,1,0,0,4,4,0,0,0,0.49,11,8
5848_29,29,30,"return mEvaluator.evaluate(intervalFraction, prevKeyframe.getValue(),
mLastKeyframe.getValue());",0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,4,4,0,0,0,0.49,9,7
5848_32,32,32,Keyframe prevKeyframe = mFirstKeyframe;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.37,7,6
5848_33,33,47,"for (int i = 1; i < mNumKeyframes; ++i) {
Keyframe nextKeyframe = mKeyframes.get(i);
if (fraction < nextKeyframe.getFraction()) {
final TimeInterpolator interpolator = nextKeyframe.getInterpolator();
final float prevFraction = prevKeyframe.getFraction();
float intervalFraction = (fraction - prevFraction) /
(nextKeyframe.getFraction() - prevFraction);
if (interpolator != null) {
intervalFraction = interpolator.getInterpolation(intervalFraction);
}
return mEvaluator.evaluate(intervalFraction, prevKeyframe.getValue(),
nextKeyframe.getValue());
}
prevKeyframe = nextKeyframe;
}",0,0,1,0,0,0,0,0,0,9,3,15,1,1,0,0,4,4,0,0,1,0.58,0,0
5848_34,34,34,Keyframe nextKeyframe = mKeyframes.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.29,5,4
5848_35,35,45,"if (fraction < nextKeyframe.getFraction()) {
final TimeInterpolator interpolator = nextKeyframe.getInterpolator();
final float prevFraction = prevKeyframe.getFraction();
float intervalFraction = (fraction - prevFraction) /
(nextKeyframe.getFraction() - prevFraction);
if (interpolator != null) {
intervalFraction = interpolator.getInterpolation(intervalFraction);
}
return mEvaluator.evaluate(intervalFraction, prevKeyframe.getValue(),
nextKeyframe.getValue());
}",1,0,0,0,0,0,0,0,0,6,2,11,0,1,0,0,4,4,0,0,1,0.59,0,0
5848_36,36,36,final TimeInterpolator interpolator = nextKeyframe.getInterpolator();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.6,3,2
5848_37,37,37,final float prevFraction = prevKeyframe.getFraction();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,4,0,0,0,0.47,2,1
5848_38,38,39,"float intervalFraction = (fraction - prevFraction) /
(nextKeyframe.getFraction() - prevFraction);",0,0,0,0,0,1,0,0,0,0,0,2,1,1,0,0,4,4,0,0,0,0.49,0,0
5848_40,40,42,"if (interpolator != null) {
intervalFraction = interpolator.getInterpolation(intervalFraction);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,4,0,0,1,0.65,0,0
5848_41,41,41,intervalFraction = interpolator.getInterpolation(intervalFraction);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.65,1,0
5848_43,43,44,"return mEvaluator.evaluate(intervalFraction, prevKeyframe.getValue(),
nextKeyframe.getValue());",0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,4,4,0,0,0,0.49,3,2
5848_46,46,46,prevKeyframe = nextKeyframe;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.38,6,3
5848_48,48,48,return mLastKeyframe.getValue();,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.31,8,4
5847_1,1,1,public Object getValue(float fraction) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,0,0,0,0.32,0,0
5847_2,2,8,"if (mNumKeyframes == 2) {
if (mInterpolator != null) {
fraction = mInterpolator.getInterpolation(fraction);
}
return mEvaluator.evaluate(fraction, mFirstKeyframe.getValue(),
mLastKeyframe.getValue());
}",1,0,0,0,0,0,0,0,0,3,2,7,1,0,0,0,7,3,0,0,1,0.48,0,0
5847_3,3,5,"if (mInterpolator != null) {
fraction = mInterpolator.getInterpolation(fraction);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,3,0,0,0,0.41,1,0
5847_4,4,4,fraction = mInterpolator.getInterpolation(fraction);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,0,0,0,0.4,2,1
5847_6,6,7,"return mEvaluator.evaluate(fraction, mFirstKeyframe.getValue(),
mLastKeyframe.getValue());",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,7,3,0,0,1,0.47,4,3
5847_9,9,31,"if (fraction <= 0f) {
final Keyframe nextKeyframe = mKeyframes.get(1);
final TimeInterpolator interpolator = nextKeyframe.getInterpolator();
if (interpolator != null) {
fraction = interpolator.getInterpolation(fraction);
}
final float prevFraction = mFirstKeyframe.getFraction();
float intervalFraction = (fraction - prevFraction) /
(nextKeyframe.getFraction() - prevFraction);
return mEvaluator.evaluate(intervalFraction, mFirstKeyframe.getValue(),
nextKeyframe.getValue());
} else if (fraction >= 1f) {
final Keyframe prevKeyframe = mKeyframes.get(mNumKeyframes - 2);
final TimeInterpolator interpolator = mLastKeyframe.getInterpolator();
if (interpolator != null) {
fraction = interpolator.getInterpolation(fraction);
}
final float prevFraction = prevKeyframe.getFraction();
float intervalFraction = (fraction - prevFraction) /
(mLastKeyframe.getFraction() - prevFraction);
return mEvaluator.evaluate(intervalFraction, prevKeyframe.getValue(),
mLastKeyframe.getValue());
}",1,0,0,0,0,0,0,0,0,15,2,23,1,1,0,0,7,3,0,0,1,0.51,7,4
5847_10,10,10,final Keyframe nextKeyframe = mKeyframes.get(1);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,0,0,1,0.47,8,4
5847_11,11,11,final TimeInterpolator interpolator = nextKeyframe.getInterpolator();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,0,0,1,0.49,9,5
5847_12,12,14,"if (interpolator != null) {
fraction = interpolator.getInterpolation(fraction);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,3,0,0,0,0.41,10,6
5847_13,13,13,fraction = interpolator.getInterpolation(fraction);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,0,0,0,0.4,11,7
5847_15,15,15,final float prevFraction = mFirstKeyframe.getFraction();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,7,3,0,0,1,0.47,13,9
5847_16,16,17,"float intervalFraction = (fraction - prevFraction) /
(nextKeyframe.getFraction() - prevFraction);",0,0,0,0,0,1,0,0,0,0,0,2,1,1,0,0,7,3,0,0,1,0.47,14,9
5847_18,18,19,"return mEvaluator.evaluate(intervalFraction, mFirstKeyframe.getValue(),
nextKeyframe.getValue());",0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,7,3,0,0,1,0.48,16,11
5847_20,20,20,} else if (fraction >= 1f) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,0,0,0,0.42,18,12
5847_21,21,21,final Keyframe prevKeyframe = mKeyframes.get(mNumKeyframes - 2);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,3,0,0,1,0.55,19,12
5847_22,22,22,final TimeInterpolator interpolator = mLastKeyframe.getInterpolator();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,0,0,1,0.48,20,13
5847_23,23,25,"if (interpolator != null) {
fraction = interpolator.getInterpolation(fraction);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,3,0,0,0,0.41,21,14
5847_24,24,24,fraction = interpolator.getInterpolation(fraction);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,0,0,0,0.4,22,15
5847_26,26,26,final float prevFraction = prevKeyframe.getFraction();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,7,3,0,0,1,0.47,24,17
5847_27,27,28,"float intervalFraction = (fraction - prevFraction) /
(mLastKeyframe.getFraction() - prevFraction);",0,0,0,0,0,1,0,0,0,0,0,2,1,1,0,0,7,3,0,0,1,0.47,25,17
5847_29,29,30,"return mEvaluator.evaluate(intervalFraction, prevKeyframe.getValue(),
mLastKeyframe.getValue());",0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,7,3,0,0,1,0.48,27,19
5847_32,32,32,Keyframe prevKeyframe = mFirstKeyframe;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,0,0,1,0.62,30,20
5847_33,33,47,"for (int i = 1; i < mNumKeyframes; ++i) {
Keyframe nextKeyframe = mKeyframes.get(i);
if (fraction < nextKeyframe.getFraction()) {
final TimeInterpolator interpolator = nextKeyframe.getInterpolator();
final float prevFraction = prevKeyframe.getFraction();
float intervalFraction = (fraction - prevFraction) /
(nextKeyframe.getFraction() - prevFraction);
if (interpolator != null) {
intervalFraction = interpolator.getInterpolation(intervalFraction);
}
return mEvaluator.evaluate(intervalFraction, prevKeyframe.getValue(),
nextKeyframe.getValue());
}
prevKeyframe = nextKeyframe;
}",0,0,1,0,0,0,0,0,0,9,3,15,1,1,0,0,7,3,0,0,1,0.51,31,20
5847_34,34,34,Keyframe nextKeyframe = mKeyframes.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,0,0,1,0.52,32,21
5847_35,35,45,"if (fraction < nextKeyframe.getFraction()) {
final TimeInterpolator interpolator = nextKeyframe.getInterpolator();
final float prevFraction = prevKeyframe.getFraction();
float intervalFraction = (fraction - prevFraction) /
(nextKeyframe.getFraction() - prevFraction);
if (interpolator != null) {
intervalFraction = interpolator.getInterpolation(intervalFraction);
}
return mEvaluator.evaluate(intervalFraction, prevKeyframe.getValue(),
nextKeyframe.getValue());
}",1,0,0,0,0,0,0,0,0,6,2,11,0,1,0,0,7,3,0,0,1,0.49,33,22
5847_36,36,36,final TimeInterpolator interpolator = nextKeyframe.getInterpolator();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,3,0,0,1,0.49,34,23
5847_37,37,37,final float prevFraction = prevKeyframe.getFraction();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,7,3,0,0,1,0.47,35,24
5847_38,38,39,"float intervalFraction = (fraction - prevFraction) /
(nextKeyframe.getFraction() - prevFraction);",0,0,0,0,0,1,0,0,0,0,0,2,1,1,0,0,7,3,0,0,1,0.47,36,25
5847_40,40,42,"if (interpolator != null) {
intervalFraction = interpolator.getInterpolation(intervalFraction);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,3,0,0,0,0.42,38,27
5847_41,41,41,intervalFraction = interpolator.getInterpolation(intervalFraction);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,0,0,0,0.41,39,27
5847_43,43,44,"return mEvaluator.evaluate(intervalFraction, prevKeyframe.getValue(),
nextKeyframe.getValue());",0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,7,3,0,0,1,0.49,41,29
5847_46,46,46,prevKeyframe = nextKeyframe;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,0,0,1,0.57,44,30
5847_48,48,48,return mLastKeyframe.getValue();,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,7,3,0,0,1,0.43,46,31
5846_1,1,2,"@Override
public void doWork() throws RemoteException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.31,40,33
5846_3,3,3,android.util.SeempLog.record(31);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,39,32
5846_4,4,5,"getAccountByTypeAndFeatures(mAccountType, mFeatures,
new AccountManagerCallback<Bundle>() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,1,0.57,37,31
5846_6,6,7,"@Override
public void run(AccountManagerFuture<Bundle> future) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,1,0.48,35,30
5846_8,8,8,String accountName = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.59,34,29
5846_9,9,9,String accountType = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.6,33,28
5846_10,10,23,"try {
Bundle result = future.getResult();
accountName = result.getString(AccountManager.KEY_ACCOUNT_NAME);
accountType = result.getString(AccountManager.KEY_ACCOUNT_TYPE);
} catch (OperationCanceledException e) {
setException(e);
return;
} catch (IOException e) {
setException(e);
return;
} catch (AuthenticatorException e) {
setException(e);
return;
}",0,0,0,0,1,0,0,0,0,12,1,14,0,1,0,1,4,3,0,0,2,0.6,19,15
5846_11,11,11,Bundle result = future.getResult();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.3,31,26
5846_12,12,12,accountName = result.getString(AccountManager.KEY_ACCOUNT_NAME);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,1,0.52,30,25
5846_13,13,13,accountType = result.getString(AccountManager.KEY_ACCOUNT_TYPE);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,1,0.53,29,24
5846_14,14,14,} catch (OperationCanceledException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.3,28,23
5846_15,15,15,setException(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,27,22
5846_16,16,16,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.7,26,21
5846_17,17,17,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,25,20
5846_18,18,18,setException(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,24,19
5846_19,19,19,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.7,23,18
5846_20,20,20,} catch (AuthenticatorException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.3,22,17
5846_21,21,21,setException(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,21,16
5846_22,22,22,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.7,20,15
5846_25,25,50,"if (accountName == null) {
if (mActivity != null) {
mFuture = addAccount(mAccountType, mAuthTokenType, mFeatures,
mAddAccountOptions, mActivity, mMyCallback, mHandler);
} else {
Bundle result = new Bundle();
result.putString(KEY_ACCOUNT_NAME, null);
result.putString(KEY_ACCOUNT_TYPE, null);
result.putString(KEY_AUTHTOKEN, null);
result.putBinder(KEY_ACCOUNT_ACCESS_ID, null);
try {
mResponse.onResult(result);
} catch (RemoteException e) {
}
}
} else {
mNumAccounts = 1;
Account account = new Account(accountName, accountType);
if (mActivity == null) {
mFuture = getAuthToken(account, mAuthTokenType,
false , mMyCallback, mHandler);
} else {
mFuture = getAuthToken(account, mAuthTokenType, mLoginOptions,
mActivity, mMyCallback, mHandler);
}
}",1,0,0,0,0,0,0,0,0,18,3,26,0,0,1,0,4,3,0,0,2,0.56,0,0
5846_26,26,39,"if (mActivity != null) {
mFuture = addAccount(mAccountType, mAuthTokenType, mFeatures,
mAddAccountOptions, mActivity, mMyCallback, mHandler);
} else {
Bundle result = new Bundle();
result.putString(KEY_ACCOUNT_NAME, null);
result.putString(KEY_ACCOUNT_TYPE, null);
result.putString(KEY_AUTHTOKEN, null);
result.putBinder(KEY_ACCOUNT_ACCESS_ID, null);
try {
mResponse.onResult(result);
} catch (RemoteException e) {
}
}",1,0,0,0,0,0,0,0,0,10,2,14,0,0,0,0,4,3,0,0,2,0.52,3,3
5846_27,27,28,"mFuture = addAccount(mAccountType, mAuthTokenType, mFeatures,
mAddAccountOptions, mActivity, mMyCallback, mHandler);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,1,0.56,14,12
5846_29,29,29,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,13,11
5846_30,30,30,Bundle result = new Bundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.24,12,10
5846_31,31,31,"result.putString(KEY_ACCOUNT_NAME, null);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,1,0.51,11,9
5846_32,32,32,"result.putString(KEY_ACCOUNT_TYPE, null);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,1,0.52,10,8
5846_33,33,33,"result.putString(KEY_AUTHTOKEN, null);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,1,0.35,9,7
5846_34,34,34,"result.putBinder(KEY_ACCOUNT_ACCESS_ID, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.5,8,6
5846_35,35,38,"try {
mResponse.onResult(result);
} catch (RemoteException e) {
}",0,0,0,0,1,0,0,0,0,2,1,4,0,1,0,0,4,3,0,0,0,0.24,4,3
5846_36,36,36,mResponse.onResult(result);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,6,4
5846_37,37,37,} catch (RemoteException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,5,3
5846_40,40,40,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,2,2
5846_41,41,41,mNumAccounts = 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.55,1,1
5846_42,42,42,"Account account = new Account(accountName, accountType);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.62,0,0
5846_43,43,49,"if (mActivity == null) {
mFuture = getAuthToken(account, mAuthTokenType,
false , mMyCallback, mHandler);
} else {
mFuture = getAuthToken(account, mAuthTokenType, mLoginOptions,
mActivity, mMyCallback, mHandler);
}",1,0,0,0,0,0,0,0,0,3,1,7,0,1,0,0,4,3,0,0,1,0.54,0,0
5846_44,44,45,"mFuture = getAuthToken(account, mAuthTokenType,
false , mMyCallback, mHandler);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,1,0.52,1,0
5846_46,46,46,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,3,2
5846_47,47,48,"mFuture = getAuthToken(account, mAuthTokenType, mLoginOptions,
mActivity, mMyCallback, mHandler);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,1,0.5,4,2
5846_51,51,51,"}}, mHandler);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.18,8,4
5845_1,1,2,"@Override
public void doWork() throws RemoteException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,0,0.34,27,22
5845_3,3,3,android.util.SeempLog.record(31);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.33,26,21
5845_4,4,5,"getAccountByTypeAndFeatures(mAccountType, mFeatures,
new AccountManagerCallback<Bundle>() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,1,0.5,24,20
5845_6,6,7,"@Override
public void run(AccountManagerFuture<Bundle> future) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,1,0.42,22,19
5845_8,8,8,String accountName = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.42,21,18
5845_9,9,9,String accountType = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,1,0,1,0.43,20,17
5845_10,10,23,"try {
Bundle result = future.getResult();
accountName = result.getString(AccountManager.KEY_ACCOUNT_NAME);
accountType = result.getString(AccountManager.KEY_ACCOUNT_TYPE);
} catch (OperationCanceledException e) {
setException(e);
return;
} catch (IOException e) {
setException(e);
return;
} catch (AuthenticatorException e) {
setException(e);
return;
}",0,0,0,0,1,0,0,0,0,12,1,14,0,1,0,1,6,5,1,0,2,0.52,6,4
5845_11,11,11,Bundle result = future.getResult();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,1,0,1,0.47,18,15
5845_12,12,12,accountName = result.getString(AccountManager.KEY_ACCOUNT_NAME);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,5,1,0,2,0.54,17,14
5845_13,13,13,accountType = result.getString(AccountManager.KEY_ACCOUNT_TYPE);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,5,1,0,2,0.55,16,13
5845_14,14,14,} catch (OperationCanceledException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.32,15,12
5845_15,15,15,setException(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.35,14,11
5845_16,16,16,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.14,13,10
5845_17,17,17,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.29,12,9
5845_18,18,18,setException(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.35,11,8
5845_19,19,19,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.14,10,7
5845_20,20,20,} catch (AuthenticatorException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.33,9,6
5845_21,21,21,setException(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.35,8,5
5845_22,22,22,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.14,7,4
5845_25,25,50,"if (accountName == null) {
if (mActivity != null) {
mFuture = addAccount(mAccountType, mAuthTokenType, mFeatures,
mAddAccountOptions, mActivity, mMyCallback, mHandler);
} else {
Bundle result = new Bundle();
result.putString(KEY_ACCOUNT_NAME, null);
result.putString(KEY_ACCOUNT_TYPE, null);
result.putString(KEY_AUTHTOKEN, null);
result.putBinder(KEY_ACCOUNT_ACCESS_ID, null);
try {
mResponse.onResult(result);
} catch (RemoteException e) {
}
}
} else {
mNumAccounts = 1;
Account account = new Account(accountName, accountType);
if (mActivity == null) {
mFuture = getAuthToken(account, mAuthTokenType,
false , mMyCallback, mHandler);
} else {
mFuture = getAuthToken(account, mAuthTokenType, mLoginOptions,
mActivity, mMyCallback, mHandler);
}
}",1,0,0,0,0,0,0,0,0,18,3,26,0,0,1,0,6,5,1,0,3,0.62,0,0
5845_26,26,39,"if (mActivity != null) {
mFuture = addAccount(mAccountType, mAuthTokenType, mFeatures,
mAddAccountOptions, mActivity, mMyCallback, mHandler);
} else {
Bundle result = new Bundle();
result.putString(KEY_ACCOUNT_NAME, null);
result.putString(KEY_ACCOUNT_TYPE, null);
result.putString(KEY_AUTHTOKEN, null);
result.putBinder(KEY_ACCOUNT_ACCESS_ID, null);
try {
mResponse.onResult(result);
} catch (RemoteException e) {
}
}",1,0,0,0,0,0,0,0,0,10,2,14,0,0,0,0,6,5,1,0,3,0.62,0,0
5845_27,27,28,"mFuture = addAccount(mAccountType, mAuthTokenType, mFeatures,
mAddAccountOptions, mActivity, mMyCallback, mHandler);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,2,0.59,1,1
5845_29,29,29,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.35,0,0
5845_30,30,30,Bundle result = new Bundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,1,0,1,0.42,0,0
5845_31,31,31,"result.putString(KEY_ACCOUNT_NAME, null);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,5,1,0,2,0.51,1,0
5845_32,32,32,"result.putString(KEY_ACCOUNT_TYPE, null);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,5,1,0,2,0.52,2,1
5845_33,33,33,"result.putString(KEY_AUTHTOKEN, null);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,5,1,0,1,0.43,3,2
5845_34,34,34,"result.putBinder(KEY_ACCOUNT_ACCESS_ID, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,1,0,2,0.54,4,3
5845_35,35,38,"try {
mResponse.onResult(result);
} catch (RemoteException e) {
}",0,0,0,0,1,0,0,0,0,2,1,4,0,1,0,0,6,5,1,0,1,0.48,5,4
5845_36,36,36,mResponse.onResult(result);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.62,6,5
5845_37,37,37,} catch (RemoteException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.29,7,6
5845_40,40,40,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.35,10,8
5845_41,41,41,mNumAccounts = 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.52,11,8
5845_42,42,42,"Account account = new Account(accountName, accountType);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,1,0,1,0.55,12,9
5845_43,43,49,"if (mActivity == null) {
mFuture = getAuthToken(account, mAuthTokenType,
false , mMyCallback, mHandler);
} else {
mFuture = getAuthToken(account, mAuthTokenType, mLoginOptions,
mActivity, mMyCallback, mHandler);
}",1,0,0,0,0,0,0,0,0,3,1,7,0,1,0,0,6,5,1,0,1,0.47,13,10
5845_44,44,45,"mFuture = getAuthToken(account, mAuthTokenType,
false , mMyCallback, mHandler);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,1,0.45,14,11
5845_46,46,46,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.35,16,13
5845_47,47,48,"mFuture = getAuthToken(account, mAuthTokenType, mLoginOptions,
mActivity, mMyCallback, mHandler);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,1,0.46,17,13
5845_51,51,51,"}}, mHandler);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.34,21,15
5844_1,1,2,"@Override
public void doWork() throws RemoteException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,2,0,0,0.4,24,20
5844_3,3,3,android.util.SeempLog.record(31);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.33,23,19
5844_4,4,5,"getAccountByTypeAndFeatures(mAccountType, mFeatures,
new AccountManagerCallback<Bundle>() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,2,0,1,0.48,21,18
5844_6,6,7,"@Override
public void run(AccountManagerFuture<Bundle> future) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,2,0,1,0.44,19,17
5844_8,8,8,String accountName = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,5,2,0,1,0.44,18,16
5844_9,9,9,String accountType = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,2,0,1,0.44,17,15
5844_10,10,23,"try {
Bundle result = future.getResult();
accountName = result.getString(AccountManager.KEY_ACCOUNT_NAME);
accountType = result.getString(AccountManager.KEY_ACCOUNT_TYPE);
} catch (OperationCanceledException e) {
setException(e);
return;
} catch (IOException e) {
setException(e);
return;
} catch (AuthenticatorException e) {
setException(e);
return;
}",0,0,0,0,1,0,0,0,0,12,1,14,0,1,0,1,8,5,2,0,1,0.47,3,2
5844_11,11,11,Bundle result = future.getResult();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,2,0,0,0.28,15,13
5844_12,12,12,accountName = result.getString(AccountManager.KEY_ACCOUNT_NAME);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,5,2,0,1,0.48,14,12
5844_13,13,13,accountType = result.getString(AccountManager.KEY_ACCOUNT_TYPE);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,5,2,0,1,0.48,13,11
5844_14,14,14,} catch (OperationCanceledException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.4,12,10
5844_15,15,15,setException(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.37,11,9
5844_16,16,16,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.24,10,8
5844_17,17,17,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.41,9,7
5844_18,18,18,setException(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.37,8,6
5844_19,19,19,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.24,7,5
5844_20,20,20,} catch (AuthenticatorException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.43,6,4
5844_21,21,21,setException(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.37,5,3
5844_22,22,22,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.24,4,2
5844_25,25,50,"if (accountName == null) {
if (mActivity != null) {
mFuture = addAccount(mAccountType, mAuthTokenType, mFeatures,
mAddAccountOptions, mActivity, mMyCallback, mHandler);
} else {
Bundle result = new Bundle();
result.putString(KEY_ACCOUNT_NAME, null);
result.putString(KEY_ACCOUNT_TYPE, null);
result.putString(KEY_AUTHTOKEN, null);
result.putBinder(KEY_ACCOUNT_ACCESS_ID, null);
try {
mResponse.onResult(result);
} catch (RemoteException e) {
}
}
} else {
mNumAccounts = 1;
Account account = new Account(accountName, accountType);
if (mActivity == null) {
mFuture = getAuthToken(account, mAuthTokenType,
false , mMyCallback, mHandler);
} else {
mFuture = getAuthToken(account, mAuthTokenType, mLoginOptions,
mActivity, mMyCallback, mHandler);
}
}",1,0,0,0,0,0,0,0,0,18,3,26,0,0,1,0,8,5,2,0,2,0.54,0,0
5844_26,26,39,"if (mActivity != null) {
mFuture = addAccount(mAccountType, mAuthTokenType, mFeatures,
mAddAccountOptions, mActivity, mMyCallback, mHandler);
} else {
Bundle result = new Bundle();
result.putString(KEY_ACCOUNT_NAME, null);
result.putString(KEY_ACCOUNT_TYPE, null);
result.putString(KEY_AUTHTOKEN, null);
result.putBinder(KEY_ACCOUNT_ACCESS_ID, null);
try {
mResponse.onResult(result);
} catch (RemoteException e) {
}
}",1,0,0,0,0,0,0,0,0,10,2,14,0,0,0,0,8,5,2,0,2,0.52,0,0
5844_27,27,28,"mFuture = addAccount(mAccountType, mAuthTokenType, mFeatures,
mAddAccountOptions, mActivity, mMyCallback, mHandler);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,2,0,2,0.58,0,0
5844_29,29,29,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.18,2,1
5844_30,30,30,Bundle result = new Bundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,2,0,0,0.28,3,1
5844_31,31,31,"result.putString(KEY_ACCOUNT_NAME, null);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,5,2,0,1,0.41,4,2
5844_32,32,32,"result.putString(KEY_ACCOUNT_TYPE, null);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,5,2,0,1,0.41,5,3
5844_33,33,33,"result.putString(KEY_AUTHTOKEN, null);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,5,2,0,0,0.28,6,4
5844_34,34,34,"result.putBinder(KEY_ACCOUNT_ACCESS_ID, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,2,0,1,0.46,7,5
5844_35,35,38,"try {
mResponse.onResult(result);
} catch (RemoteException e) {
}",0,0,0,0,1,0,0,0,0,2,1,4,0,1,0,0,8,5,2,0,0,0.4,8,6
5844_36,36,36,mResponse.onResult(result);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.27,9,7
5844_37,37,37,} catch (RemoteException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.43,10,8
5844_40,40,40,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.18,13,10
5844_41,41,41,mNumAccounts = 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,1,0.47,14,10
5844_42,42,42,"Account account = new Account(accountName, accountType);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,2,0,1,0.6,15,11
5844_43,43,49,"if (mActivity == null) {
mFuture = getAuthToken(account, mAuthTokenType,
false , mMyCallback, mHandler);
} else {
mFuture = getAuthToken(account, mAuthTokenType, mLoginOptions,
mActivity, mMyCallback, mHandler);
}",1,0,0,0,0,0,0,0,0,3,1,7,0,1,0,0,8,5,2,0,1,0.46,16,12
5844_44,44,45,"mFuture = getAuthToken(account, mAuthTokenType,
false , mMyCallback, mHandler);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,2,0,1,0.47,17,13
5844_46,46,46,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.18,19,15
5844_47,47,48,"mFuture = getAuthToken(account, mAuthTokenType, mLoginOptions,
mActivity, mMyCallback, mHandler);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,2,0,1,0.46,20,15
5844_51,51,51,"}}, mHandler);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.24,24,17
5841_1,1,2,"            @Override
public void onResult(Bundle bundle) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,7,0,0,0,0.35,6,5
5841_3,3,6,"if (bundle == null) {
onError(ERROR_CODE_INVALID_RESPONSE, ""null bundle returned"");
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,8,7,0,0,0,0.33,2,2
5841_4,4,4,"onError(ERROR_CODE_INVALID_RESPONSE, ""null bundle returned"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,0,0.34,4,3
5841_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,7,0,0,0,0.21,3,2
5841_7,7,7,Intent intent = bundle.getParcelable(KEY_INTENT);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,7,0,0,1,0.51,1,1
5841_8,8,18,"if (intent != null && mActivity != null) {
mActivity.startActivity(intent);
} else if (bundle.getBoolean(""retry"")) {
try {
doWork();
} catch (RemoteException e) {
throw e.rethrowFromSystemServer();
}
} else {
set(bundle);
}",1,0,0,0,0,0,0,0,0,8,2,11,0,1,0,0,8,7,0,0,3,0.6,0,0
5841_9,9,9,mActivity.startActivity(intent);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,3,0.76,0,0
5841_10,10,10,"} else if (bundle.getBoolean(""retry"")) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,0,0.34,1,0
5841_11,11,15,"try {
doWork();
} catch (RemoteException e) {
throw e.rethrowFromSystemServer();
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,8,7,0,0,0,0.4,2,1
5841_12,12,12,doWork();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,0,0.26,3,2
5841_13,13,13,} catch (RemoteException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,0,0.4,4,3
5841_14,14,14,throw e.rethrowFromSystemServer();,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,7,0,0,0,0.36,5,4
5841_16,16,16,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,0,0.2,7,6
5841_17,17,17,set(bundle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,0,0.24,8,6
5840_1,1,2,"private void postToHandler(Handler handler, final OnAccountsUpdateListener listener,
final Account[] accounts) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,1,0.46,11,10
5840_3,3,3,final Account[] accountsCopy = new Account[accounts.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.55,10,9
5840_4,4,4,"System.arraycopy(accounts, 0, accountsCopy, 0, accountsCopy.length);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.5,9,8
5840_5,5,5,handler = (handler == null) ? mMainHandler : handler;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.18,8,7
5840_6,6,6,handler.post(new Runnable() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.14,7,6
5840_7,7,8,"@Override
public void run() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.22,5,5
5840_9,9,9,synchronized (mAccountsUpdatedListeners) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.49,4,4
5840_10,10,28,"try {
if (mAccountsUpdatedListeners.containsKey(listener)) {
Set<String> types = mAccountsUpdatedListenersTypes.get(listener);
if (types != null) {
ArrayList<Account> filtered = new ArrayList<>();
for (Account account : accountsCopy) {
if (types.contains(account.type)) {
filtered.add(account);
}
}
listener.onAccountsUpdated(
filtered.toArray(new Account[filtered.size()]));
} else {
listener.onAccountsUpdated(accountsCopy);
}
}
} catch (SQLException e) {
Log.e(TAG, ""Can't update accounts"", e);
}",0,0,0,0,1,0,0,0,0,12,5,19,0,0,0,0,3,3,0,0,3,0.75,0,0
5840_11,11,25,"if (mAccountsUpdatedListeners.containsKey(listener)) {
Set<String> types = mAccountsUpdatedListenersTypes.get(listener);
if (types != null) {
ArrayList<Account> filtered = new ArrayList<>();
for (Account account : accountsCopy) {
if (types.contains(account.type)) {
filtered.add(account);
}
}
listener.onAccountsUpdated(
filtered.toArray(new Account[filtered.size()]));
} else {
listener.onAccountsUpdated(accountsCopy);
}
}",1,0,0,0,0,0,0,0,0,9,4,15,0,0,0,0,3,3,0,0,3,0.78,0,0
5840_12,12,12,Set<String> types = mAccountsUpdatedListenersTypes.get(listener);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,2,0.64,1,1
5840_13,13,24,"if (types != null) {
ArrayList<Account> filtered = new ArrayList<>();
for (Account account : accountsCopy) {
if (types.contains(account.type)) {
filtered.add(account);
}
}
listener.onAccountsUpdated(
filtered.toArray(new Account[filtered.size()]));
} else {
listener.onAccountsUpdated(accountsCopy);
}",1,0,0,0,0,0,0,0,0,7,3,12,0,1,0,0,3,3,0,0,3,0.8,0,0
5840_14,14,14,ArrayList<Account> filtered = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,2,0.62,0,0
5840_15,15,19,"for (Account account : accountsCopy) {
if (types.contains(account.type)) {
filtered.add(account);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,1,0,0,3,3,0,0,3,0.89,1,0
5840_16,16,18,"if (types.contains(account.type)) {
filtered.add(account);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,3,0.89,2,1
5840_17,17,17,filtered.add(account);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.77,3,2
5840_20,20,21,"listener.onAccountsUpdated(
filtered.toArray(new Account[filtered.size()]));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,3,3,0,0,2,0.67,6,4
5840_22,22,22,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.13,8,5
5840_23,23,23,listener.onAccountsUpdated(accountsCopy);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.53,9,5
5840_26,26,26,} catch (SQLException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.19,12,7
5840_27,27,27,"Log.e(TAG, ""Can't update accounts"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.44,13,7
5839_1,1,2,"private void postToHandler(Handler handler, final OnAccountsUpdateListener listener,
final Account[] accounts) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,3,2,0,0,0.38,1,1
5839_3,3,3,final Account[] accountsCopy = new Account[accounts.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,3,2,0,1,0.41,0,0
5839_4,4,4,"System.arraycopy(accounts, 0, accountsCopy, 0, accountsCopy.length);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,3,2,0,1,0.45,0,0
5839_5,5,5,handler = (handler == null) ? mMainHandler : handler;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.3,1,0
5839_6,6,6,handler.post(new Runnable() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.38,2,1
5839_7,7,8,"@Override
public void run() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,3,2,0,0,0.38,3,2
5839_9,9,9,synchronized (mAccountsUpdatedListeners) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.35,5,4
5839_10,10,28,"try {
if (mAccountsUpdatedListeners.containsKey(listener)) {
Set<String> types = mAccountsUpdatedListenersTypes.get(listener);
if (types != null) {
ArrayList<Account> filtered = new ArrayList<>();
for (Account account : accountsCopy) {
if (types.contains(account.type)) {
filtered.add(account);
}
}
listener.onAccountsUpdated(
filtered.toArray(new Account[filtered.size()]));
} else {
listener.onAccountsUpdated(accountsCopy);
}
}
} catch (SQLException e) {
Log.e(TAG, ""Can't update accounts"", e);
}",0,0,0,0,1,0,0,0,0,12,5,19,0,0,0,0,8,3,2,0,1,0.41,6,4
5839_11,11,25,"if (mAccountsUpdatedListeners.containsKey(listener)) {
Set<String> types = mAccountsUpdatedListenersTypes.get(listener);
if (types != null) {
ArrayList<Account> filtered = new ArrayList<>();
for (Account account : accountsCopy) {
if (types.contains(account.type)) {
filtered.add(account);
}
}
listener.onAccountsUpdated(
filtered.toArray(new Account[filtered.size()]));
} else {
listener.onAccountsUpdated(accountsCopy);
}
}",1,0,0,0,0,0,0,0,0,9,4,15,0,0,0,0,8,3,2,0,1,0.4,7,5
5839_12,12,12,Set<String> types = mAccountsUpdatedListenersTypes.get(listener);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,3,2,0,0,0.32,8,6
5839_13,13,24,"if (types != null) {
ArrayList<Account> filtered = new ArrayList<>();
for (Account account : accountsCopy) {
if (types.contains(account.type)) {
filtered.add(account);
}
}
listener.onAccountsUpdated(
filtered.toArray(new Account[filtered.size()]));
} else {
listener.onAccountsUpdated(accountsCopy);
}",1,0,0,0,0,0,0,0,0,7,3,12,0,1,0,0,8,3,2,0,1,0.4,9,7
5839_14,14,14,ArrayList<Account> filtered = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,3,2,0,0,0.33,10,8
5839_15,15,19,"for (Account account : accountsCopy) {
if (types.contains(account.type)) {
filtered.add(account);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,1,0,0,8,3,2,0,1,0.38,11,9
5839_16,16,18,"if (types.contains(account.type)) {
filtered.add(account);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,3,2,0,0,0.3,12,10
5839_17,17,17,filtered.add(account);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.25,13,11
5839_20,20,21,"listener.onAccountsUpdated(
filtered.toArray(new Account[filtered.size()]));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,8,3,2,0,0,0.34,16,13
5839_22,22,22,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.2,18,14
5839_23,23,23,listener.onAccountsUpdated(accountsCopy);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,1,0.43,19,14
5839_26,26,26,} catch (SQLException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.33,22,16
5839_27,27,27,"Log.e(TAG, ""Can't update accounts"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.34,23,16
5837_1,1,1,public boolean performMultiPointerGesture(PointerCoords[] ... touches) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.54,49,29
5837_2,2,2,boolean ret = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.36,48,28
5837_3,3,5,"if (touches.length < 2) {
throw new IllegalArgumentException(""Must provide coordinates for at least 2 pointers"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,2,1,0,2,0.61,45,26
5837_4,4,4,"throw new IllegalArgumentException(""Must provide coordinates for at least 2 pointers"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,1,0,2,0.63,46,26
5837_7,7,7,int maxSteps = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.37,43,25
5837_8,8,9,"for (int x = 0; x < touches.length; x++)
maxSteps = (maxSteps < touches[x].length) ? touches[x].length : maxSteps;",0,0,1,0,0,0,0,0,0,1,0,2,0,1,0,1,4,2,1,0,0,0.39,41,23
5837_9,9,9,maxSteps = (maxSteps < touches[x].length) ? touches[x].length : maxSteps;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.38,41,23
5837_11,11,11,PointerProperties[] properties = new PointerProperties[touches.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,2,1,0,1,0.52,39,22
5837_12,12,12,PointerCoords[] pointerCoords = new PointerCoords[touches.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.62,38,21
5837_13,13,20,"for (int x = 0; x < touches.length; x++) {
PointerProperties prop = new PointerProperties();
prop.id = x;
prop.toolType = MotionEvent.TOOL_TYPE_FINGER;
properties[x] = prop;

pointerCoords[x] = touches[x][0];
}",0,0,1,0,0,0,0,0,0,5,1,8,0,1,0,1,4,2,1,0,1,0.54,30,15
5837_14,14,14,PointerProperties prop = new PointerProperties();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.57,36,19
5837_15,15,15,prop.id = x;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.4,35,18
5837_16,16,16,prop.toolType = MotionEvent.TOOL_TYPE_FINGER;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.5,34,17
5837_17,17,17,properties[x] = prop;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.4,33,16
5837_19,19,19,pointerCoords[x] = touches[x][0];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,1,0.54,31,15
5837_22,22,22,long downTime = SystemClock.uptimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.41,28,14
5837_23,23,23,MotionEvent event;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.45,27,13
5837_24,24,25,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(), MotionEvent.ACTION_DOWN, 1,
properties, pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,2,1,0,1,0.51,25,12
5837_26,26,26,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.39,24,11
5837_28,28,33,"for (int x = 1; x < touches.length; x++) {
event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_DOWN, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);
ret &= injectEventSync(event);
}",0,0,1,0,0,0,0,0,0,2,1,6,0,0,1,1,4,2,1,0,2,0.61,17,8
5837_29,29,31,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_DOWN, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,4,2,1,0,2,0.61,19,9
5837_32,32,32,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.39,18,8
5837_35,35,49,"for (int i = 1; i < maxSteps - 1; i++) {
for (int x = 0; x < touches.length; x++) {
if (touches[x].length > i)
pointerCoords[x] = touches[x][i];
else
pointerCoords[x] = touches[x][touches[x].length - 1];
}

event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
MotionEvent.ACTION_MOVE, touches.length, properties, pointerCoords, 0, 0, 1, 1,
0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);

ret &= injectEventSync(event);
SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);
}",0,0,1,0,0,0,0,0,0,7,2,15,0,0,1,1,4,2,1,0,1,0.52,1,0
5837_36,36,41,"for (int x = 0; x < touches.length; x++) {
if (touches[x].length > i)
pointerCoords[x] = touches[x][i];
else
pointerCoords[x] = touches[x][touches[x].length - 1];
}",0,0,1,0,0,0,0,0,0,3,1,6,0,0,0,1,4,2,1,0,1,0.51,9,3
5837_37,37,40,"if (touches[x].length > i)
pointerCoords[x] = touches[x][i];
else
pointerCoords[x] = touches[x][touches[x].length - 1];",1,0,0,0,0,0,0,0,0,2,0,4,0,0,0,0,4,2,1,0,1,0.52,10,3
5837_38,38,38,pointerCoords[x] = touches[x][i];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.56,12,4
5837_39,39,40,"else
pointerCoords[x] = touches[x][touches[x].length - 1];",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,2,1,0,1,0.51,10,3
5837_43,43,45,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
MotionEvent.ACTION_MOVE, touches.length, properties, pointerCoords, 0, 0, 1, 1,
0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,1,4,2,1,0,1,0.51,5,2
5837_47,47,47,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.39,3,1
5837_48,48,48,SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.44,2,0
5837_51,51,52,"for (int x = 0; x < touches.length; x++)
pointerCoords[x] = touches[x][touches[x].length - 1];",0,0,1,0,0,0,0,0,0,1,0,2,0,0,1,1,4,2,1,0,1,0.51,0,0
5837_52,52,52,pointerCoords[x] = touches[x][touches[x].length - 1];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,1,0.53,1,0
5837_54,54,59,"for (int x = 1; x < touches.length; x++) {
event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_UP, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);
ret &= injectEventSync(event);
}",0,0,1,0,0,0,0,0,0,2,1,6,0,0,1,1,4,2,1,0,2,0.61,3,2
5837_55,55,57,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_UP, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,4,2,1,0,2,0.61,4,2
5837_58,58,58,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.39,7,4
5837_61,61,61,"Log.i(LOG_TAG, ""x "" + pointerCoords[0].x);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,2,1,0,1,0.5,10,5
5837_62,62,63,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(), MotionEvent.ACTION_UP, 1,
properties, pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,2,1,0,1,0.51,11,5
5837_64,64,64,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.39,13,7
5837_65,65,65,return ret;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.41,14,7
5836_1,1,1,public boolean performMultiPointerGesture(PointerCoords[] ... touches) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.45,35,23
5836_2,2,2,boolean ret = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.43,34,22
5836_3,3,5,"if (touches.length < 2) {
throw new IllegalArgumentException(""Must provide coordinates for at least 2 pointers"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,2,1,0,1,0.5,31,20
5836_4,4,4,"throw new IllegalArgumentException(""Must provide coordinates for at least 2 pointers"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,1,0,1,0.51,32,20
5836_7,7,7,int maxSteps = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,1,0,0,0.36,29,19
5836_8,8,9,"for (int x = 0; x < touches.length; x++)
maxSteps = (maxSteps < touches[x].length) ? touches[x].length : maxSteps;",0,0,1,0,0,0,0,0,0,1,0,2,0,1,0,1,3,2,1,0,0,0.4,27,17
5836_9,9,9,maxSteps = (maxSteps < touches[x].length) ? touches[x].length : maxSteps;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,1,0,0,0.39,27,17
5836_11,11,11,PointerProperties[] properties = new PointerProperties[touches.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,1,0,0,0.37,25,16
5836_12,12,12,PointerCoords[] pointerCoords = new PointerCoords[touches.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.42,24,15
5836_13,13,20,"for (int x = 0; x < touches.length; x++) {
PointerProperties prop = new PointerProperties();
prop.id = x;
prop.toolType = MotionEvent.TOOL_TYPE_FINGER;
properties[x] = prop;

pointerCoords[x] = touches[x][0];
}",0,0,1,0,0,0,0,0,0,5,1,8,0,1,0,1,3,2,1,0,0,0.47,16,9
5836_14,14,14,PointerProperties prop = new PointerProperties();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.41,22,13
5836_15,15,15,prop.id = x;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.4,21,12
5836_16,16,16,prop.toolType = MotionEvent.TOOL_TYPE_FINGER;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.5,20,11
5836_17,17,17,properties[x] = prop;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,1,0,0,0.4,19,10
5836_19,19,19,pointerCoords[x] = touches[x][0];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,1,0,0,0.41,17,9
5836_22,22,22,long downTime = SystemClock.uptimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,1,0,0,0.38,14,8
5836_23,23,23,MotionEvent event;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.4,13,7
5836_24,24,25,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(), MotionEvent.ACTION_DOWN, 1,
properties, pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,3,2,1,0,0,0.41,11,6
5836_26,26,26,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,1,0,0,0.37,10,5
5836_28,28,33,"for (int x = 1; x < touches.length; x++) {
event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_DOWN, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);
ret &= injectEventSync(event);
}",0,0,1,0,0,0,0,0,0,2,1,6,0,0,1,1,3,2,1,0,0,0.42,3,2
5836_29,29,31,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_DOWN, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,3,2,1,0,0,0.41,5,3
5836_32,32,32,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.37,4,2
5836_35,35,49,"for (int i = 1; i < maxSteps - 1; i++) {
for (int x = 0; x < touches.length; x++) {
if (touches[x].length > i)
pointerCoords[x] = touches[x][i];
else
pointerCoords[x] = touches[x][touches[x].length - 1];
}

event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
MotionEvent.ACTION_MOVE, touches.length, properties, pointerCoords, 0, 0, 1, 1,
0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);

ret &= injectEventSync(event);
SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);
}",0,0,1,0,0,0,0,0,0,7,2,15,0,0,1,1,3,2,1,0,1,0.53,0,0
5836_36,36,41,"for (int x = 0; x < touches.length; x++) {
if (touches[x].length > i)
pointerCoords[x] = touches[x][i];
else
pointerCoords[x] = touches[x][touches[x].length - 1];
}",0,0,1,0,0,0,0,0,0,3,1,6,0,0,0,1,3,2,1,0,0,0.4,0,0
5836_37,37,40,"if (touches[x].length > i)
pointerCoords[x] = touches[x][i];
else
pointerCoords[x] = touches[x][touches[x].length - 1];",1,0,0,0,0,0,0,0,0,2,0,4,0,0,0,0,3,2,1,0,0,0.4,0,0
5836_38,38,38,pointerCoords[x] = touches[x][i];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.42,1,0
5836_39,39,40,"else
pointerCoords[x] = touches[x][touches[x].length - 1];",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,3,2,1,0,0,0.39,2,1
5836_43,43,45,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
MotionEvent.ACTION_MOVE, touches.length, properties, pointerCoords, 0, 0, 1, 1,
0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,1,3,2,1,0,1,0.52,6,3
5836_47,47,47,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,1,0,0,0.37,10,4
5836_48,48,48,SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.42,11,4
5836_51,51,52,"for (int x = 0; x < touches.length; x++)
pointerCoords[x] = touches[x][touches[x].length - 1];",0,0,1,0,0,0,0,0,0,1,0,2,0,0,1,1,3,2,1,0,0,0.4,14,6
5836_52,52,52,pointerCoords[x] = touches[x][touches[x].length - 1];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,1,0,0,0.4,15,6
5836_54,54,59,"for (int x = 1; x < touches.length; x++) {
event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_UP, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);
ret &= injectEventSync(event);
}",0,0,1,0,0,0,0,0,0,2,1,6,0,0,1,1,3,2,1,0,0,0.42,17,8
5836_55,55,57,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_UP, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,3,2,1,0,0,0.41,18,8
5836_58,58,58,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.37,21,10
5836_61,61,61,"Log.i(LOG_TAG, ""x "" + pointerCoords[0].x);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,2,1,0,0,0.38,24,11
5836_62,62,63,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(), MotionEvent.ACTION_UP, 1,
properties, pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,3,2,1,0,0,0.41,25,11
5836_64,64,64,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.37,27,13
5836_65,65,65,return ret;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.42,28,13
5835_1,1,1,public boolean performMultiPointerGesture(PointerCoords[] ... touches) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.66,33,21
5835_2,2,2,boolean ret = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.35,32,20
5835_3,3,5,"if (touches.length < 2) {
throw new IllegalArgumentException(""Must provide coordinates for at least 2 pointers"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,2,2,0,0,1,0.59,29,18
5835_4,4,4,"throw new IllegalArgumentException(""Must provide coordinates for at least 2 pointers"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,2,0,0,1,0.6,30,18
5835_7,7,7,int maxSteps = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.28,27,17
5835_8,8,9,"for (int x = 0; x < touches.length; x++)
maxSteps = (maxSteps < touches[x].length) ? touches[x].length : maxSteps;",0,0,1,0,0,0,0,0,0,1,0,2,0,1,0,1,2,2,0,0,0,0.39,25,15
5835_9,9,9,maxSteps = (maxSteps < touches[x].length) ? touches[x].length : maxSteps;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.39,25,15
5835_11,11,11,PointerProperties[] properties = new PointerProperties[touches.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,2,2,0,0,1,0.63,23,14
5835_12,12,12,PointerCoords[] pointerCoords = new PointerCoords[touches.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.71,22,13
5835_13,13,20,"for (int x = 0; x < touches.length; x++) {
PointerProperties prop = new PointerProperties();
prop.id = x;
prop.toolType = MotionEvent.TOOL_TYPE_FINGER;
properties[x] = prop;

pointerCoords[x] = touches[x][0];
}",0,0,1,0,0,0,0,0,0,5,1,8,0,1,0,1,2,2,0,0,1,0.61,14,7
5835_14,14,14,PointerProperties prop = new PointerProperties();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.66,20,11
5835_15,15,15,prop.id = x;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.44,19,10
5835_16,16,16,prop.toolType = MotionEvent.TOOL_TYPE_FINGER;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.5,18,9
5835_17,17,17,properties[x] = prop;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.44,17,8
5835_19,19,19,pointerCoords[x] = touches[x][0];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,1,0.62,15,7
5835_22,22,22,long downTime = SystemClock.uptimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.37,12,6
5835_23,23,23,MotionEvent event;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.47,11,5
5835_24,24,25,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(), MotionEvent.ACTION_DOWN, 1,
properties, pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,2,2,0,0,1,0.56,9,4
5835_26,26,26,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.39,8,3
5835_28,28,33,"for (int x = 1; x < touches.length; x++) {
event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_DOWN, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);
ret &= injectEventSync(event);
}",0,0,1,0,0,0,0,0,0,2,1,6,0,0,1,1,2,2,0,0,1,0.57,1,0
5835_29,29,31,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_DOWN, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,2,2,0,0,1,0.57,3,1
5835_32,32,32,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.39,2,0
5835_35,35,49,"for (int i = 1; i < maxSteps - 1; i++) {
for (int x = 0; x < touches.length; x++) {
if (touches[x].length > i)
pointerCoords[x] = touches[x][i];
else
pointerCoords[x] = touches[x][touches[x].length - 1];
}

event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
MotionEvent.ACTION_MOVE, touches.length, properties, pointerCoords, 0, 0, 1, 1,
0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);

ret &= injectEventSync(event);
SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);
}",0,0,1,0,0,0,0,0,0,7,2,15,0,0,1,1,2,2,0,0,2,0.71,0,0
5835_36,36,41,"for (int x = 0; x < touches.length; x++) {
if (touches[x].length > i)
pointerCoords[x] = touches[x][i];
else
pointerCoords[x] = touches[x][touches[x].length - 1];
}",0,0,1,0,0,0,0,0,0,3,1,6,0,0,0,1,2,2,0,0,1,0.59,1,0
5835_37,37,40,"if (touches[x].length > i)
pointerCoords[x] = touches[x][i];
else
pointerCoords[x] = touches[x][touches[x].length - 1];",1,0,0,0,0,0,0,0,0,2,0,4,0,0,0,0,2,2,0,0,1,0.6,2,1
5835_38,38,38,pointerCoords[x] = touches[x][i];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.64,3,2
5835_39,39,40,"else
pointerCoords[x] = touches[x][touches[x].length - 1];",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,2,2,0,0,1,0.59,4,3
5835_43,43,45,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
MotionEvent.ACTION_MOVE, touches.length, properties, pointerCoords, 0, 0, 1, 1,
0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,1,2,2,0,0,2,0.71,8,5
5835_47,47,47,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.39,12,6
5835_48,48,48,SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.45,13,6
5835_51,51,52,"for (int x = 0; x < touches.length; x++)
pointerCoords[x] = touches[x][touches[x].length - 1];",0,0,1,0,0,0,0,0,0,1,0,2,0,0,1,1,2,2,0,0,1,0.59,16,8
5835_52,52,52,pointerCoords[x] = touches[x][touches[x].length - 1];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,1,0.61,17,8
5835_54,54,59,"for (int x = 1; x < touches.length; x++) {
event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_UP, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);
ret &= injectEventSync(event);
}",0,0,1,0,0,0,0,0,0,2,1,6,0,0,1,1,2,2,0,0,1,0.57,19,10
5835_55,55,57,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_UP, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,2,2,0,0,1,0.57,20,10
5835_58,58,58,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.39,23,12
5835_61,61,61,"Log.i(LOG_TAG, ""x "" + pointerCoords[0].x);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,2,0,0,1,0.59,26,13
5835_62,62,63,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(), MotionEvent.ACTION_UP, 1,
properties, pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,2,2,0,0,1,0.56,27,13
5835_64,64,64,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.39,29,15
5835_65,65,65,return ret;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.36,30,15
5834_1,1,1,public boolean performMultiPointerGesture(PointerCoords[] ... touches) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,2,0.81,20,14
5834_2,2,2,boolean ret = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.38,19,13
5834_3,3,5,"if (touches.length < 2) {
throw new IllegalArgumentException(""Must provide coordinates for at least 2 pointers"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,2,1,0,0,2,0.76,16,11
5834_4,4,4,"throw new IllegalArgumentException(""Must provide coordinates for at least 2 pointers"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,1,0,0,1,0.59,17,11
5834_7,7,7,int maxSteps = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,1,0,0,0,0.31,14,10
5834_8,8,9,"for (int x = 0; x < touches.length; x++)
maxSteps = (maxSteps < touches[x].length) ? touches[x].length : maxSteps;",0,0,1,0,0,0,0,0,0,1,0,2,0,1,0,1,2,1,0,0,1,0.62,12,8
5834_9,9,9,maxSteps = (maxSteps < touches[x].length) ? touches[x].length : maxSteps;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,0,0,1,0.61,12,8
5834_11,11,11,PointerProperties[] properties = new PointerProperties[touches.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,2,1,0,0,2,0.81,10,7
5834_12,12,12,PointerCoords[] pointerCoords = new PointerCoords[touches.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,2,0.88,9,6
5834_13,13,20,"for (int x = 0; x < touches.length; x++) {
PointerProperties prop = new PointerProperties();
prop.id = x;
prop.toolType = MotionEvent.TOOL_TYPE_FINGER;
properties[x] = prop;

pointerCoords[x] = touches[x][0];
}",0,0,1,0,0,0,0,0,0,5,1,8,0,1,0,1,2,1,0,0,2,0.77,1,0
5834_14,14,14,PointerProperties prop = new PointerProperties();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,1,0.64,7,4
5834_15,15,15,prop.id = x;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.51,6,3
5834_16,16,16,prop.toolType = MotionEvent.TOOL_TYPE_FINGER;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.53,5,2
5834_17,17,17,properties[x] = prop;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,1,0,0,0,0.51,4,1
5834_19,19,19,pointerCoords[x] = touches[x][0];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,1,0,0,2,0.84,2,0
5834_22,22,22,long downTime = SystemClock.uptimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,2,1,0,0,0,0.4,0,0
5834_23,23,23,MotionEvent event;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.5,1,0
5834_24,24,25,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(), MotionEvent.ACTION_DOWN, 1,
properties, pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,2,1,0,0,1,0.59,2,1
5834_26,26,26,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,1,0,0,0,0.38,4,3
5834_28,28,33,"for (int x = 1; x < touches.length; x++) {
event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_DOWN, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);
ret &= injectEventSync(event);
}",0,0,1,0,0,0,0,0,0,2,1,6,0,0,1,1,2,1,0,0,2,0.72,6,4
5834_29,29,31,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_DOWN, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,2,1,0,0,1,0.61,7,4
5834_32,32,32,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.38,10,6
5834_35,35,49,"for (int i = 1; i < maxSteps - 1; i++) {
for (int x = 0; x < touches.length; x++) {
if (touches[x].length > i)
pointerCoords[x] = touches[x][i];
else
pointerCoords[x] = touches[x][touches[x].length - 1];
}

event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
MotionEvent.ACTION_MOVE, touches.length, properties, pointerCoords, 0, 0, 1, 1,
0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);

ret &= injectEventSync(event);
SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);
}",0,0,1,0,0,0,0,0,0,7,2,15,0,0,1,1,2,1,0,0,2,0.74,13,7
5834_36,36,41,"for (int x = 0; x < touches.length; x++) {
if (touches[x].length > i)
pointerCoords[x] = touches[x][i];
else
pointerCoords[x] = touches[x][touches[x].length - 1];
}",0,0,1,0,0,0,0,0,0,3,1,6,0,0,0,1,2,1,0,0,2,0.82,14,7
5834_37,37,40,"if (touches[x].length > i)
pointerCoords[x] = touches[x][i];
else
pointerCoords[x] = touches[x][touches[x].length - 1];",1,0,0,0,0,0,0,0,0,2,0,4,0,0,0,0,2,1,0,0,2,0.84,15,8
5834_38,38,38,pointerCoords[x] = touches[x][i];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,2,0.88,16,9
5834_39,39,40,"else
pointerCoords[x] = touches[x][touches[x].length - 1];",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,2,1,0,0,2,0.82,17,10
5834_43,43,45,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
MotionEvent.ACTION_MOVE, touches.length, properties, pointerCoords, 0, 0, 1, 1,
0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,1,2,1,0,0,2,0.71,21,12
5834_47,47,47,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,1,0,0,0,0.38,25,13
5834_48,48,48,SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.49,26,13
5834_51,51,52,"for (int x = 0; x < touches.length; x++)
pointerCoords[x] = touches[x][touches[x].length - 1];",0,0,1,0,0,0,0,0,0,1,0,2,0,0,1,1,2,1,0,0,2,0.82,29,15
5834_52,52,52,pointerCoords[x] = touches[x][touches[x].length - 1];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,0,0,2,0.85,30,15
5834_54,54,59,"for (int x = 1; x < touches.length; x++) {
event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_UP, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);
ret &= injectEventSync(event);
}",0,0,1,0,0,0,0,0,0,2,1,6,0,0,1,1,2,1,0,0,2,0.72,32,17
5834_55,55,57,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_UP, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,2,1,0,0,1,0.61,33,17
5834_58,58,58,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.38,36,19
5834_61,61,61,"Log.i(LOG_TAG, ""x "" + pointerCoords[0].x);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,1,0,0,1,0.64,39,20
5834_62,62,63,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(), MotionEvent.ACTION_UP, 1,
properties, pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,2,1,0,0,1,0.59,40,20
5834_64,64,64,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.38,42,22
5834_65,65,65,return ret;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.37,43,22
5833_1,1,1,public boolean performMultiPointerGesture(PointerCoords[] ... touches) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,2,0.64,17,13
5833_2,2,2,boolean ret = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.4,16,12
5833_3,3,5,"if (touches.length < 2) {
throw new IllegalArgumentException(""Must provide coordinates for at least 2 pointers"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,3,1,0,3,0.65,13,10
5833_4,4,4,"throw new IllegalArgumentException(""Must provide coordinates for at least 2 pointers"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,1,0,2,0.58,14,10
5833_7,7,7,int maxSteps = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,1,0,0,0.36,11,9
5833_8,8,9,"for (int x = 0; x < touches.length; x++)
maxSteps = (maxSteps < touches[x].length) ? touches[x].length : maxSteps;",0,0,1,0,0,0,0,0,0,1,0,2,0,1,0,1,5,3,1,0,1,0.53,9,7
5833_9,9,9,maxSteps = (maxSteps < touches[x].length) ? touches[x].length : maxSteps;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,1,0,1,0.5,9,7
5833_11,11,11,PointerProperties[] properties = new PointerProperties[touches.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,3,1,0,2,0.65,7,6
5833_12,12,12,PointerCoords[] pointerCoords = new PointerCoords[touches.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,2,0.69,6,5
5833_13,13,20,"for (int x = 0; x < touches.length; x++) {
PointerProperties prop = new PointerProperties();
prop.id = x;
prop.toolType = MotionEvent.TOOL_TYPE_FINGER;
properties[x] = prop;

pointerCoords[x] = touches[x][0];
}",0,0,1,0,0,0,0,0,0,5,1,8,0,1,0,1,5,3,1,0,2,0.64,0,0
5833_14,14,14,PointerProperties prop = new PointerProperties();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.56,4,3
5833_15,15,15,prop.id = x;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.43,3,2
5833_16,16,16,prop.toolType = MotionEvent.TOOL_TYPE_FINGER;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.51,2,1
5833_17,17,17,properties[x] = prop;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,1,0,0,0.46,1,0
5833_19,19,19,pointerCoords[x] = touches[x][0];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,2,0.65,0,0
5833_22,22,22,long downTime = SystemClock.uptimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,3,1,0,0,0.39,3,1
5833_23,23,23,MotionEvent event;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.45,4,1
5833_24,24,25,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(), MotionEvent.ACTION_DOWN, 1,
properties, pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,5,3,1,0,1,0.51,5,2
5833_26,26,26,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,1,0,0,0.38,7,4
5833_28,28,33,"for (int x = 1; x < touches.length; x++) {
event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_DOWN, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);
ret &= injectEventSync(event);
}",0,0,1,0,0,0,0,0,0,2,1,6,0,0,1,1,5,3,1,0,2,0.58,9,5
5833_29,29,31,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_DOWN, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,5,3,1,0,1,0.53,10,5
5833_32,32,32,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.38,13,7
5833_35,35,49,"for (int i = 1; i < maxSteps - 1; i++) {
for (int x = 0; x < touches.length; x++) {
if (touches[x].length > i)
pointerCoords[x] = touches[x][i];
else
pointerCoords[x] = touches[x][touches[x].length - 1];
}

event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
MotionEvent.ACTION_MOVE, touches.length, properties, pointerCoords, 0, 0, 1, 1,
0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);

ret &= injectEventSync(event);
SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);
}",0,0,1,0,0,0,0,0,0,7,2,15,0,0,1,1,5,3,1,0,2,0.6,16,8
5833_36,36,41,"for (int x = 0; x < touches.length; x++) {
if (touches[x].length > i)
pointerCoords[x] = touches[x][i];
else
pointerCoords[x] = touches[x][touches[x].length - 1];
}",0,0,1,0,0,0,0,0,0,3,1,6,0,0,0,1,5,3,1,0,2,0.64,17,8
5833_37,37,40,"if (touches[x].length > i)
pointerCoords[x] = touches[x][i];
else
pointerCoords[x] = touches[x][touches[x].length - 1];",1,0,0,0,0,0,0,0,0,2,0,4,0,0,0,0,5,3,1,0,2,0.65,18,9
5833_38,38,38,pointerCoords[x] = touches[x][i];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,2,0.67,19,10
5833_39,39,40,"else
pointerCoords[x] = touches[x][touches[x].length - 1];",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,5,3,1,0,2,0.64,20,11
5833_43,43,45,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
MotionEvent.ACTION_MOVE, touches.length, properties, pointerCoords, 0, 0, 1, 1,
0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,1,5,3,1,0,2,0.56,24,13
5833_47,47,47,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,0,0.38,28,14
5833_48,48,48,SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.45,29,14
5833_51,51,52,"for (int x = 0; x < touches.length; x++)
pointerCoords[x] = touches[x][touches[x].length - 1];",0,0,1,0,0,0,0,0,0,1,0,2,0,0,1,1,5,3,1,0,2,0.64,32,16
5833_52,52,52,pointerCoords[x] = touches[x][touches[x].length - 1];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,1,0,2,0.65,33,16
5833_54,54,59,"for (int x = 1; x < touches.length; x++) {
event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_UP, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);
ret &= injectEventSync(event);
}",0,0,1,0,0,0,0,0,0,2,1,6,0,0,1,1,5,3,1,0,2,0.58,35,18
5833_55,55,57,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_UP, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,5,3,1,0,1,0.53,36,18
5833_58,58,58,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.38,39,20
5833_61,61,61,"Log.i(LOG_TAG, ""x "" + pointerCoords[0].x);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,5,3,1,0,1,0.52,42,21
5833_62,62,63,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(), MotionEvent.ACTION_UP, 1,
properties, pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,5,3,1,0,1,0.51,43,21
5833_64,64,64,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.38,45,23
5833_65,65,65,return ret;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.4,46,23
5832_1,1,1,public boolean performMultiPointerGesture(PointerCoords[] ... touches) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.65,9,6
5832_2,2,2,boolean ret = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.37,8,5
5832_3,3,5,"if (touches.length < 2) {
throw new IllegalArgumentException(""Must provide coordinates for at least 2 pointers"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,5,0,0,2,0.6,5,3
5832_4,4,4,"throw new IllegalArgumentException(""Must provide coordinates for at least 2 pointers"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,5,0,0,1,0.53,6,3
5832_7,7,7,int maxSteps = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,0,0.27,3,2
5832_8,8,9,"for (int x = 0; x < touches.length; x++)
maxSteps = (maxSteps < touches[x].length) ? touches[x].length : maxSteps;",0,0,1,0,0,0,0,0,0,1,0,2,0,1,0,1,5,5,0,0,1,0.49,1,0
5832_9,9,9,maxSteps = (maxSteps < touches[x].length) ? touches[x].length : maxSteps;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,5,0,0,1,0.48,1,0
5832_11,11,11,PointerProperties[] properties = new PointerProperties[touches.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,5,0,0,3,0.81,0,0
5832_12,12,12,PointerCoords[] pointerCoords = new PointerCoords[touches.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.71,1,0
5832_13,13,20,"for (int x = 0; x < touches.length; x++) {
PointerProperties prop = new PointerProperties();
prop.id = x;
prop.toolType = MotionEvent.TOOL_TYPE_FINGER;
properties[x] = prop;

pointerCoords[x] = touches[x][0];
}",0,0,1,0,0,0,0,0,0,5,1,8,0,1,0,1,5,5,0,0,4,0.76,2,1
5832_14,14,14,PointerProperties prop = new PointerProperties();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.73,3,2
5832_15,15,15,prop.id = x;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.53,4,3
5832_16,16,16,prop.toolType = MotionEvent.TOOL_TYPE_FINGER;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.6,5,4
5832_17,17,17,properties[x] = prop;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,1,0.66,6,5
5832_19,19,19,pointerCoords[x] = touches[x][0];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,2,0.67,8,7
5832_22,22,22,long downTime = SystemClock.uptimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,5,0,0,0,0.39,11,8
5832_23,23,23,MotionEvent event;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.44,12,8
5832_24,24,25,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(), MotionEvent.ACTION_DOWN, 1,
properties, pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,5,5,0,0,2,0.57,13,9
5832_26,26,26,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,0,0.37,15,11
5832_28,28,33,"for (int x = 1; x < touches.length; x++) {
event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_DOWN, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);
ret &= injectEventSync(event);
}",0,0,1,0,0,0,0,0,0,2,1,6,0,0,1,1,5,5,0,0,3,0.63,17,12
5832_29,29,31,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_DOWN, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,5,5,0,0,2,0.59,18,12
5832_32,32,32,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.37,21,14
5832_35,35,49,"for (int i = 1; i < maxSteps - 1; i++) {
for (int x = 0; x < touches.length; x++) {
if (touches[x].length > i)
pointerCoords[x] = touches[x][i];
else
pointerCoords[x] = touches[x][touches[x].length - 1];
}

event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
MotionEvent.ACTION_MOVE, touches.length, properties, pointerCoords, 0, 0, 1, 1,
0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);

ret &= injectEventSync(event);
SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);
}",0,0,1,0,0,0,0,0,0,7,2,15,0,0,1,1,5,5,0,0,3,0.65,24,15
5832_36,36,41,"for (int x = 0; x < touches.length; x++) {
if (touches[x].length > i)
pointerCoords[x] = touches[x][i];
else
pointerCoords[x] = touches[x][touches[x].length - 1];
}",0,0,1,0,0,0,0,0,0,3,1,6,0,0,0,1,5,5,0,0,2,0.66,25,15
5832_37,37,40,"if (touches[x].length > i)
pointerCoords[x] = touches[x][i];
else
pointerCoords[x] = touches[x][touches[x].length - 1];",1,0,0,0,0,0,0,0,0,2,0,4,0,0,0,0,5,5,0,0,2,0.68,26,16
5832_38,38,38,pointerCoords[x] = touches[x][i];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.7,27,17
5832_39,39,40,"else
pointerCoords[x] = touches[x][touches[x].length - 1];",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,5,5,0,0,2,0.66,28,18
5832_43,43,45,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
MotionEvent.ACTION_MOVE, touches.length, properties, pointerCoords, 0, 0, 1, 1,
0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,1,5,5,0,0,3,0.63,32,20
5832_47,47,47,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,0,0.37,36,21
5832_48,48,48,SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.43,37,21
5832_51,51,52,"for (int x = 0; x < touches.length; x++)
pointerCoords[x] = touches[x][touches[x].length - 1];",0,0,1,0,0,0,0,0,0,1,0,2,0,0,1,1,5,5,0,0,2,0.65,40,23
5832_52,52,52,pointerCoords[x] = touches[x][touches[x].length - 1];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,5,0,0,2,0.68,41,23
5832_54,54,59,"for (int x = 1; x < touches.length; x++) {
event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_UP, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);
ret &= injectEventSync(event);
}",0,0,1,0,0,0,0,0,0,2,1,6,0,0,1,1,5,5,0,0,3,0.63,43,25
5832_55,55,57,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_UP, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,5,5,0,0,2,0.59,44,25
5832_58,58,58,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.37,47,27
5832_61,61,61,"Log.i(LOG_TAG, ""x "" + pointerCoords[0].x);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,5,5,0,0,1,0.54,50,28
5832_62,62,63,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(), MotionEvent.ACTION_UP, 1,
properties, pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,5,5,0,0,2,0.57,51,28
5832_64,64,64,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.37,53,30
5832_65,65,65,return ret;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.38,54,30
5831_1,1,1,public boolean performMultiPointerGesture(PointerCoords[] ... touches) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.55,5,3
5831_2,2,2,boolean ret = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.3,4,2
5831_3,3,5,"if (touches.length < 2) {
throw new IllegalArgumentException(""Must provide coordinates for at least 2 pointers"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,3,1,0,1,0.56,1,0
5831_4,4,4,"throw new IllegalArgumentException(""Must provide coordinates for at least 2 pointers"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,1,0,1,0.57,2,0
5831_7,7,7,int maxSteps = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,1,0,2,0.65,0,0
5831_8,8,9,"for (int x = 0; x < touches.length; x++)
maxSteps = (maxSteps < touches[x].length) ? touches[x].length : maxSteps;",0,0,1,0,0,0,0,0,0,1,0,2,0,1,0,1,5,3,1,0,2,0.61,1,0
5831_9,9,9,maxSteps = (maxSteps < touches[x].length) ? touches[x].length : maxSteps;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,1,0,2,0.66,2,1
5831_11,11,11,PointerProperties[] properties = new PointerProperties[touches.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,3,1,0,1,0.49,4,3
5831_12,12,12,PointerCoords[] pointerCoords = new PointerCoords[touches.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.62,5,3
5831_13,13,20,"for (int x = 0; x < touches.length; x++) {
PointerProperties prop = new PointerProperties();
prop.id = x;
prop.toolType = MotionEvent.TOOL_TYPE_FINGER;
properties[x] = prop;

pointerCoords[x] = touches[x][0];
}",0,0,1,0,0,0,0,0,0,5,1,8,0,1,0,1,5,3,1,0,1,0.53,6,4
5831_14,14,14,PointerProperties prop = new PointerProperties();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.53,7,5
5831_15,15,15,prop.id = x;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.42,8,6
5831_16,16,16,prop.toolType = MotionEvent.TOOL_TYPE_FINGER;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.46,9,7
5831_17,17,17,properties[x] = prop;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,1,0,0,0.41,10,8
5831_19,19,19,pointerCoords[x] = touches[x][0];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,1,0.57,12,10
5831_22,22,22,long downTime = SystemClock.uptimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,3,1,0,0,0.37,15,11
5831_23,23,23,MotionEvent event;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.42,16,11
5831_24,24,25,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(), MotionEvent.ACTION_DOWN, 1,
properties, pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,5,3,1,0,1,0.5,17,12
5831_26,26,26,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,1,0,1,0.45,19,14
5831_28,28,33,"for (int x = 1; x < touches.length; x++) {
event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_DOWN, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);
ret &= injectEventSync(event);
}",0,0,1,0,0,0,0,0,0,2,1,6,0,0,1,1,5,3,1,0,3,0.63,21,15
5831_29,29,31,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_DOWN, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,5,3,1,0,2,0.59,22,15
5831_32,32,32,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.45,25,17
5831_35,35,49,"for (int i = 1; i < maxSteps - 1; i++) {
for (int x = 0; x < touches.length; x++) {
if (touches[x].length > i)
pointerCoords[x] = touches[x][i];
else
pointerCoords[x] = touches[x][touches[x].length - 1];
}

event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
MotionEvent.ACTION_MOVE, touches.length, properties, pointerCoords, 0, 0, 1, 1,
0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);

ret &= injectEventSync(event);
SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);
}",0,0,1,0,0,0,0,0,0,7,2,15,0,0,1,1,5,3,1,0,4,0.67,28,18
5831_36,36,41,"for (int x = 0; x < touches.length; x++) {
if (touches[x].length > i)
pointerCoords[x] = touches[x][i];
else
pointerCoords[x] = touches[x][touches[x].length - 1];
}",0,0,1,0,0,0,0,0,0,3,1,6,0,0,0,1,5,3,1,0,1,0.52,29,18
5831_37,37,40,"if (touches[x].length > i)
pointerCoords[x] = touches[x][i];
else
pointerCoords[x] = touches[x][touches[x].length - 1];",1,0,0,0,0,0,0,0,0,2,0,4,0,0,0,0,5,3,1,0,1,0.52,30,19
5831_38,38,38,pointerCoords[x] = touches[x][i];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.57,31,20
5831_39,39,40,"else
pointerCoords[x] = touches[x][touches[x].length - 1];",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,5,3,1,0,1,0.51,32,21
5831_43,43,45,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
MotionEvent.ACTION_MOVE, touches.length, properties, pointerCoords, 0, 0, 1, 1,
0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,1,5,3,1,0,1,0.5,36,23
5831_47,47,47,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,1,0.45,40,24
5831_48,48,48,SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.54,41,24
5831_51,51,52,"for (int x = 0; x < touches.length; x++)
pointerCoords[x] = touches[x][touches[x].length - 1];",0,0,1,0,0,0,0,0,0,1,0,2,0,0,1,1,5,3,1,0,1,0.52,44,26
5831_52,52,52,pointerCoords[x] = touches[x][touches[x].length - 1];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,1,0,1,0.53,45,26
5831_54,54,59,"for (int x = 1; x < touches.length; x++) {
event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_UP, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);
ret &= injectEventSync(event);
}",0,0,1,0,0,0,0,0,0,2,1,6,0,0,1,1,5,3,1,0,3,0.63,47,28
5831_55,55,57,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(),
getPointerAction(MotionEvent.ACTION_POINTER_UP, x), x + 1, properties,
pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,5,3,1,0,2,0.59,48,28
5831_58,58,58,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.45,51,30
5831_61,61,61,"Log.i(LOG_TAG, ""x "" + pointerCoords[0].x);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,5,3,1,0,1,0.53,54,31
5831_62,62,63,"event = MotionEvent.obtain(downTime, SystemClock.uptimeMillis(), MotionEvent.ACTION_UP, 1,
properties, pointerCoords, 0, 0, 1, 1, 0, 0, InputDevice.SOURCE_TOUCHSCREEN, 0);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,5,3,1,0,1,0.5,55,31
5831_64,64,64,ret &= injectEventSync(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.45,57,33
5831_65,65,65,return ret;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.34,58,33
5830_1,1,1,public boolean sendText(String text) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,29,19,3,0,0,0.39,9,6
5830_2,2,4,"if (DEBUG) {
Log.d(LOG_TAG, ""sendText ("" + text + "")"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,29,19,3,0,0,0.39,6,4
5830_3,3,3,"Log.d(LOG_TAG, ""sendText ("" + text + "")"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,29,19,3,0,0,0.37,7,4
5830_6,6,6,KeyEvent[] events = mKeyCharacterMap.getEvents(text.toCharArray());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,29,19,3,0,5,0.72,4,3
5830_8,8,18,"if (events != null) {
long keyDelay = Configurator.getInstance().getKeyInjectionDelay();
for (KeyEvent event2 : events) {
KeyEvent event = KeyEvent.changeTimeRepeat(event2,
SystemClock.uptimeMillis(), 0);
if (!injectEventSync(event)) {
return false;
}
SystemClock.sleep(keyDelay);
}
}",1,0,0,0,0,0,0,0,0,6,3,11,0,0,1,0,29,19,3,0,9,0.8,0,0
5830_9,9,9,long keyDelay = Configurator.getInstance().getKeyInjectionDelay();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,29,19,3,0,4,0.66,1,1
5830_10,10,17,"for (KeyEvent event2 : events) {
KeyEvent event = KeyEvent.changeTimeRepeat(event2,
SystemClock.uptimeMillis(), 0);
if (!injectEventSync(event)) {
return false;
}
SystemClock.sleep(keyDelay);
}",0,0,0,1,0,0,0,0,0,4,2,8,0,1,0,0,29,19,3,0,7,0.79,0,0
5830_11,11,12,"KeyEvent event = KeyEvent.changeTimeRepeat(event2,
SystemClock.uptimeMillis(), 0);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,29,19,3,0,5,0.74,0,0
5830_13,13,15,"if (!injectEventSync(event)) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,29,19,3,0,3,0.69,2,1
5830_14,14,14,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,29,19,3,0,1,0.51,3,1
5830_16,16,16,SystemClock.sleep(keyDelay);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,29,19,3,0,2,0.6,5,3
5830_19,19,19,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,29,19,3,0,1,0.5,8,4
5829_1,1,1,"public boolean swipe(Point[] segments, int segmentSteps) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,12,4,0,1,0.49,23,17
5829_2,2,2,boolean ret = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,20,12,4,0,0,0.37,22,16
5829_3,3,3,int swipeSteps = segmentSteps;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,20,12,4,0,1,0.56,21,15
5829_4,4,4,double xStep = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,20,12,4,0,1,0.51,20,14
5829_5,5,5,double yStep = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,20,12,4,0,1,0.48,19,13
5829_7,7,8,"if(segmentSteps == 0)
segmentSteps = 1;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,20,12,4,0,1,0.51,16,11
5829_8,8,8,segmentSteps = 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,20,12,4,0,1,0.5,16,11
5829_10,10,11,"if(segments.length == 0)
return false;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,20,12,4,0,0,0.4,13,9
5829_11,11,11,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,20,12,4,0,0,0.26,13,9
5829_13,13,13,"ret = touchDown(segments[0].x, segments[0].y);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,20,12,4,0,0,0.46,11,8
5829_14,14,28,"for(int seg = 0; seg < segments.length; seg++) {
if(seg + 1 < segments.length) {

xStep = ((double)(segments[seg+1].x - segments[seg].x)) / segmentSteps;
yStep = ((double)(segments[seg+1].y - segments[seg].y)) / segmentSteps;

for(int i = 1; i < swipeSteps; i++) {
ret &= touchMove(segments[seg].x + (int)(xStep * i),
segments[seg].y + (int)(yStep * i));
if(ret == false)
break;
SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);
}
}
}",0,0,1,0,0,0,0,0,0,8,3,15,0,1,0,0,20,12,4,0,3,0.61,0,0
5829_15,15,27,"if(seg + 1 < segments.length) {

xStep = ((double)(segments[seg+1].x - segments[seg].x)) / segmentSteps;
yStep = ((double)(segments[seg+1].y - segments[seg].y)) / segmentSteps;

for(int i = 1; i < swipeSteps; i++) {
ret &= touchMove(segments[seg].x + (int)(xStep * i),
segments[seg].y + (int)(yStep * i));
if(ret == false)
break;
SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);
}
}",1,0,0,0,0,0,0,0,0,7,2,13,0,0,0,0,20,12,4,0,3,0.61,0,0
5829_17,17,17,xStep = ((double)(segments[seg+1].x - segments[seg].x)) / segmentSteps;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,20,12,4,0,1,0.55,7,5
5829_18,18,18,yStep = ((double)(segments[seg+1].y - segments[seg].y)) / segmentSteps;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,20,12,4,0,1,0.54,6,4
5829_20,20,26,"for(int i = 1; i < swipeSteps; i++) {
ret &= touchMove(segments[seg].x + (int)(xStep * i),
segments[seg].y + (int)(yStep * i));
if(ret == false)
break;
SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);
}",0,0,1,0,0,0,0,0,0,4,1,7,0,0,1,0,20,12,4,0,3,0.6,0,0
5829_21,21,22,"ret &= touchMove(segments[seg].x + (int)(xStep * i),
segments[seg].y + (int)(yStep * i));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,20,12,4,0,1,0.54,2,2
5829_23,23,24,"if(ret == false)
break;",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,20,12,4,0,0,0.38,0,0
5829_24,24,24,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,20,12,4,0,0,0.31,0,0
5829_25,25,25,SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,12,4,0,2,0.59,0,0
5829_29,29,29,"ret &= touchUp(segments[segments.length - 1].x, segments[segments.length -1].y);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,20,12,4,0,0,0.46,4,1
5829_30,30,30,return(ret);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,20,12,4,0,0,0.32,5,1
5828_1,1,1,"public boolean swipe(Point[] segments, int segmentSteps) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.5,11,8
5828_2,2,2,boolean ret = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.39,10,7
5828_3,3,3,int swipeSteps = segmentSteps;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.44,9,6
5828_4,4,4,double xStep = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.4,8,5
5828_5,5,5,double yStep = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,0,0,0,0.35,7,4
5828_7,7,8,"if(segmentSteps == 0)
segmentSteps = 1;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,6,4,0,0,0,0.33,4,2
5828_8,8,8,segmentSteps = 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,0,0,0,0.32,4,2
5828_10,10,11,"if(segments.length == 0)
return false;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,6,4,0,0,0,0.37,1,0
5828_11,11,11,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,6,4,0,0,0,0.3,1,0
5828_13,13,13,"ret = touchDown(segments[0].x, segments[0].y);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,4,0,0,1,0.52,0,0
5828_14,14,28,"for(int seg = 0; seg < segments.length; seg++) {
if(seg + 1 < segments.length) {

xStep = ((double)(segments[seg+1].x - segments[seg].x)) / segmentSteps;
yStep = ((double)(segments[seg+1].y - segments[seg].y)) / segmentSteps;

for(int i = 1; i < swipeSteps; i++) {
ret &= touchMove(segments[seg].x + (int)(xStep * i),
segments[seg].y + (int)(yStep * i));
if(ret == false)
break;
SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);
}
}
}",0,0,1,0,0,0,0,0,0,8,3,15,0,1,0,0,6,4,0,0,1,0.5,1,0
5828_15,15,27,"if(seg + 1 < segments.length) {

xStep = ((double)(segments[seg+1].x - segments[seg].x)) / segmentSteps;
yStep = ((double)(segments[seg+1].y - segments[seg].y)) / segmentSteps;

for(int i = 1; i < swipeSteps; i++) {
ret &= touchMove(segments[seg].x + (int)(xStep * i),
segments[seg].y + (int)(yStep * i));
if(ret == false)
break;
SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);
}
}",1,0,0,0,0,0,0,0,0,7,2,13,0,0,0,0,6,4,0,0,1,0.5,2,1
5828_17,17,17,xStep = ((double)(segments[seg+1].x - segments[seg].x)) / segmentSteps;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,4,0,0,0,0.43,4,3
5828_18,18,18,yStep = ((double)(segments[seg+1].y - segments[seg].y)) / segmentSteps;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,4,0,0,0,0.39,5,3
5828_20,20,26,"for(int i = 1; i < swipeSteps; i++) {
ret &= touchMove(segments[seg].x + (int)(xStep * i),
segments[seg].y + (int)(yStep * i));
if(ret == false)
break;
SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);
}",0,0,1,0,0,0,0,0,0,4,1,7,0,0,1,0,6,4,0,0,1,0.5,7,5
5828_21,21,22,"ret &= touchMove(segments[seg].x + (int)(xStep * i),
segments[seg].y + (int)(yStep * i));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,6,4,0,0,1,0.51,8,5
5828_23,23,24,"if(ret == false)
break;",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,6,4,0,0,0,0.4,10,7
5828_24,24,24,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,4,0,0,0,0.25,11,7
5828_25,25,25,SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.42,12,8
5828_29,29,29,"ret &= touchUp(segments[segments.length - 1].x, segments[segments.length -1].y);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,1,0.5,16,10
5828_30,30,30,return(ret);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.38,17,10
5827_1,1,1,"public boolean swipe(Point[] segments, int segmentSteps) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.54,5,4
5827_2,2,2,boolean ret = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.35,4,3
5827_3,3,3,int swipeSteps = segmentSteps;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.52,3,2
5827_4,4,4,double xStep = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.51,2,1
5827_5,5,5,double yStep = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.51,1,0
5827_7,7,8,"if(segmentSteps == 0)
segmentSteps = 1;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,3,3,0,0,0,0.47,0,0
5827_8,8,8,segmentSteps = 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.43,1,0
5827_10,10,11,"if(segments.length == 0)
return false;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,3,3,0,0,0,0.43,3,2
5827_11,11,11,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.24,4,2
5827_13,13,13,"ret = touchDown(segments[0].x, segments[0].y);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.5,6,4
5827_14,14,28,"for(int seg = 0; seg < segments.length; seg++) {
if(seg + 1 < segments.length) {

xStep = ((double)(segments[seg+1].x - segments[seg].x)) / segmentSteps;
yStep = ((double)(segments[seg+1].y - segments[seg].y)) / segmentSteps;

for(int i = 1; i < swipeSteps; i++) {
ret &= touchMove(segments[seg].x + (int)(xStep * i),
segments[seg].y + (int)(yStep * i));
if(ret == false)
break;
SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);
}
}
}",0,0,1,0,0,0,0,0,0,8,3,15,0,1,0,0,3,3,0,0,0,0.52,7,4
5827_15,15,27,"if(seg + 1 < segments.length) {

xStep = ((double)(segments[seg+1].x - segments[seg].x)) / segmentSteps;
yStep = ((double)(segments[seg+1].y - segments[seg].y)) / segmentSteps;

for(int i = 1; i < swipeSteps; i++) {
ret &= touchMove(segments[seg].x + (int)(xStep * i),
segments[seg].y + (int)(yStep * i));
if(ret == false)
break;
SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);
}
}",1,0,0,0,0,0,0,0,0,7,2,13,0,0,0,0,3,3,0,0,0,0.51,8,5
5827_17,17,17,xStep = ((double)(segments[seg+1].x - segments[seg].x)) / segmentSteps;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.51,10,7
5827_18,18,18,yStep = ((double)(segments[seg+1].y - segments[seg].y)) / segmentSteps;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.5,11,7
5827_20,20,26,"for(int i = 1; i < swipeSteps; i++) {
ret &= touchMove(segments[seg].x + (int)(xStep * i),
segments[seg].y + (int)(yStep * i));
if(ret == false)
break;
SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);
}",0,0,1,0,0,0,0,0,0,4,1,7,0,0,1,0,3,3,0,0,0,0.5,13,9
5827_21,21,22,"ret &= touchMove(segments[seg].x + (int)(xStep * i),
segments[seg].y + (int)(yStep * i));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,3,3,0,0,0,0.51,14,9
5827_23,23,24,"if(ret == false)
break;",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,3,3,0,0,0,0.38,16,11
5827_24,24,24,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,3,0,0,0,0.28,17,11
5827_25,25,25,SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.44,18,12
5827_29,29,29,"ret &= touchUp(segments[segments.length - 1].x, segments[segments.length -1].y);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.48,22,14
5827_30,30,30,return(ret);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.42,23,14
5826_1,1,1,"public boolean swipe(int downX, int downY, int upX, int upY, int steps, boolean drag) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,12,4,0,1,0.48,18,15
5826_2,2,2,boolean ret = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,20,12,4,0,0,0.37,17,14
5826_3,3,3,int swipeSteps = steps;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,20,12,4,0,1,0.56,16,13
5826_4,4,4,double xStep = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,20,12,4,0,1,0.51,15,12
5826_5,5,5,double yStep = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,20,12,4,0,1,0.48,14,11
5826_7,7,8,"if(swipeSteps == 0)
swipeSteps = 1;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,20,12,4,0,1,0.5,11,9
5826_8,8,8,swipeSteps = 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,20,12,4,0,1,0.48,11,9
5826_10,10,10,xStep = ((double)(upX - downX)) / swipeSteps;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,20,12,4,0,1,0.55,9,8
5826_11,11,11,yStep = ((double)(upY - downY)) / swipeSteps;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,20,12,4,0,1,0.56,8,7
5826_13,13,13,"ret = touchDown(downX, downY);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,20,12,4,0,0,0.45,6,6
5826_14,14,15,"if (drag)
SystemClock.sleep(mUiAutomatorBridge.getSystemLongPressTime());",1,0,0,0,0,0,0,0,0,1,0,2,1,0,0,0,20,12,4,0,1,0.51,4,4
5826_15,15,15,SystemClock.sleep(mUiAutomatorBridge.getSystemLongPressTime());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,20,12,4,0,1,0.5,4,4
5826_16,16,21,"for(int i = 1; i < swipeSteps; i++) {
ret &= touchMove(downX + (int)(xStep * i), downY + (int)(yStep * i));
if(ret == false)
break;
SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);
}",0,0,1,0,0,0,0,0,0,4,1,6,1,0,0,0,20,12,4,0,3,0.59,0,0
5826_17,17,17,"ret &= touchMove(downX + (int)(xStep * i), downY + (int)(yStep * i));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,20,12,4,0,1,0.52,2,2
5826_18,18,19,"if(ret == false)
break;",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,20,12,4,0,0,0.38,0,0
5826_19,19,19,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,20,12,4,0,0,0.31,0,0
5826_20,20,20,SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,12,4,0,2,0.59,0,0
5826_22,22,23,"if (drag)
SystemClock.sleep(REGULAR_CLICK_LENGTH);",1,0,0,0,0,0,0,0,0,1,0,2,1,0,0,0,20,12,4,0,1,0.54,2,1
5826_23,23,23,SystemClock.sleep(REGULAR_CLICK_LENGTH);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,12,4,0,1,0.54,3,1
5826_24,24,24,"ret &= touchUp(upX, upY);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,20,12,4,0,0,0.45,4,2
5826_25,25,25,return(ret);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,20,12,4,0,0,0.32,5,3
5825_1,1,1,"public boolean swipe(int downX, int downY, int upX, int upY, int steps, boolean drag) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.55,5,4
5825_2,2,2,boolean ret = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.35,4,3
5825_3,3,3,int swipeSteps = steps;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.53,3,2
5825_4,4,4,double xStep = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.51,2,1
5825_5,5,5,double yStep = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.51,1,0
5825_7,7,8,"if(swipeSteps == 0)
swipeSteps = 1;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,3,3,0,0,0,0.51,0,0
5825_8,8,8,swipeSteps = 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.47,1,0
5825_10,10,10,xStep = ((double)(upX - downX)) / swipeSteps;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.5,3,2
5825_11,11,11,yStep = ((double)(upY - downY)) / swipeSteps;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.51,4,2
5825_13,13,13,"ret = touchDown(downX, downY);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.5,6,4
5825_14,14,15,"if (drag)
SystemClock.sleep(mUiAutomatorBridge.getSystemLongPressTime());",1,0,0,0,0,0,0,0,0,1,0,2,1,0,0,0,3,3,0,0,0,0.38,7,4
5825_15,15,15,SystemClock.sleep(mUiAutomatorBridge.getSystemLongPressTime());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.36,8,5
5825_16,16,21,"for(int i = 1; i < swipeSteps; i++) {
ret &= touchMove(downX + (int)(xStep * i), downY + (int)(yStep * i));
if(ret == false)
break;
SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);
}",0,0,1,0,0,0,0,0,0,4,1,6,1,0,0,0,3,3,0,0,0,0.5,9,6
5825_17,17,17,"ret &= touchMove(downX + (int)(xStep * i), downY + (int)(yStep * i));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.5,10,7
5825_18,18,19,"if(ret == false)
break;",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,3,3,0,0,0,0.38,11,8
5825_19,19,19,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,3,0,0,0,0.28,12,9
5825_20,20,20,SystemClock.sleep(MOTION_EVENT_INJECTION_DELAY_MILLIS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.44,13,10
5825_22,22,23,"if (drag)
SystemClock.sleep(REGULAR_CLICK_LENGTH);",1,0,0,0,0,0,0,0,0,1,0,2,1,0,0,0,3,3,0,0,0,0.47,15,12
5825_23,23,23,SystemClock.sleep(REGULAR_CLICK_LENGTH);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.46,16,12
5825_24,24,24,"ret &= touchUp(upX, upY);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.5,17,13
5825_25,25,25,return(ret);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.42,18,14
5824_1,1,2,"public boolean scrollSwipe(final int downX, final int downY, final int upX, final int upY,
final int steps) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,1,0.6,29,13
5824_3,3,4,"Log.d(LOG_TAG, ""scrollSwipe ("" +  downX + "", "" + downY + "", "" + upX + "", ""
+ upY + "", "" + steps +"")"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,4,3,0,0,1,0.64,27,12
5824_6,6,11,"Runnable command = new Runnable() {
@Override
public void run() {
swipe(downX, downY, upX, upY, steps);
}
};",0,0,0,0,0,1,0,0,0,0,2,6,0,0,1,1,4,3,0,0,0,0.52,20,11
5824_13,13,13,ArrayList<AccessibilityEvent> events = new ArrayList<AccessibilityEvent>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.25,18,10
5824_14,14,16,"runAndWaitForEvents(command,
new EventCollectingPredicate(AccessibilityEvent.TYPE_VIEW_SCROLLED, events),
Configurator.getInstance().getScrollAcknowledgmentTimeout());",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,1,4,3,0,0,1,0.49,15,9
5824_18,18,19,"AccessibilityEvent event = getLastMatchingEvent(events,
AccessibilityEvent.TYPE_VIEW_SCROLLED);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,4,3,0,0,1,0.49,12,8
5824_21,21,24,"if (event == null) {
recycleAccessibilityEvents(events);
return false;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,4,3,0,0,0,0.32,7,5
5824_22,22,22,recycleAccessibilityEvents(events);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.33,9,6
5824_23,23,23,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.23,8,5
5824_26,26,26,boolean foundEnd = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.28,5,4
5824_27,27,41,"if (event.getFromIndex() != -1 && event.getToIndex() != -1 && event.getItemCount() != -1) {
foundEnd = event.getFromIndex() == 0 ||
(event.getItemCount() - 1) == event.getToIndex();
Log.d(LOG_TAG, ""scrollSwipe reached scroll end: "" + foundEnd);
} else if (event.getScrollX() != -1 && event.getScrollY() != -1) {
if (downX == upX) {
foundEnd = event.getScrollY() == 0 ||
event.getScrollY() == event.getMaxScrollY();
Log.d(LOG_TAG, ""Vertical scrollSwipe reached scroll end: "" + foundEnd);
} else if (downY == upY) {
foundEnd = event.getScrollX() == 0 ||
event.getScrollX() == event.getMaxScrollX();
Log.d(LOG_TAG, ""Horizontal scrollSwipe reached scroll end: "" + foundEnd);
}
}",1,0,0,0,0,0,0,0,0,9,2,15,0,1,0,0,4,3,0,0,3,0.66,0,0
5824_28,28,29,"foundEnd = event.getFromIndex() == 0 ||
(event.getItemCount() - 1) == event.getToIndex();",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,3,0,0,0,0.32,2,2
5824_30,30,30,"Log.d(LOG_TAG, ""scrollSwipe reached scroll end: "" + foundEnd);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.6,1,1
5824_31,31,31,} else if (event.getScrollX() != -1 && event.getScrollY() != -1) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.61,0,0
5824_32,32,40,"if (downX == upX) {
foundEnd = event.getScrollY() == 0 ||
event.getScrollY() == event.getMaxScrollY();
Log.d(LOG_TAG, ""Vertical scrollSwipe reached scroll end: "" + foundEnd);
} else if (downY == upY) {
foundEnd = event.getScrollX() == 0 ||
event.getScrollX() == event.getMaxScrollX();
Log.d(LOG_TAG, ""Horizontal scrollSwipe reached scroll end: "" + foundEnd);
}",1,0,0,0,0,0,0,0,0,5,1,9,0,0,0,0,4,3,0,0,3,0.69,0,0
5824_33,33,34,"foundEnd = event.getScrollY() == 0 ||
event.getScrollY() == event.getMaxScrollY();",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,3,0,0,1,0.54,1,0
5824_35,35,35,"Log.d(LOG_TAG, ""Vertical scrollSwipe reached scroll end: "" + foundEnd);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,2,0.66,3,2
5824_36,36,36,} else if (downY == upY) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.23,4,2
5824_37,37,38,"foundEnd = event.getScrollX() == 0 ||
event.getScrollX() == event.getMaxScrollX();",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,3,0,0,1,0.63,5,3
5824_39,39,39,"Log.d(LOG_TAG, ""Horizontal scrollSwipe reached scroll end: "" + foundEnd);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,2,0.67,7,5
5824_42,42,42,recycleAccessibilityEvents(events);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.33,10,6
5824_43,43,43,return !foundEnd;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.26,11,6
5823_1,1,2,"public boolean scrollSwipe(final int downX, final int downY, final int upX, final int upY,
final int steps) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,0,0,0,0.38,23,8
5823_3,3,4,"Log.d(LOG_TAG, ""scrollSwipe ("" +  downX + "", "" + downY + "", "" + upX + "", ""
+ upY + "", "" + steps +"")"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,6,4,0,0,0,0.4,21,7
5823_6,6,11,"Runnable command = new Runnable() {
@Override
public void run() {
swipe(downX, downY, upX, upY, steps);
}
};",0,0,0,0,0,1,0,0,0,0,2,6,0,0,1,1,6,4,0,0,0,0.37,14,6
5823_13,13,13,ArrayList<AccessibilityEvent> events = new ArrayList<AccessibilityEvent>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,0,0,0,0.36,12,5
5823_14,14,16,"runAndWaitForEvents(command,
new EventCollectingPredicate(AccessibilityEvent.TYPE_VIEW_SCROLLED, events),
Configurator.getInstance().getScrollAcknowledgmentTimeout());",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,1,6,4,0,0,1,0.44,9,4
5823_18,18,19,"AccessibilityEvent event = getLastMatchingEvent(events,
AccessibilityEvent.TYPE_VIEW_SCROLLED);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,6,4,0,0,1,0.43,6,3
5823_21,21,24,"if (event == null) {
recycleAccessibilityEvents(events);
return false;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,6,4,0,0,0,0.33,1,0
5823_22,22,22,recycleAccessibilityEvents(events);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.34,3,1
5823_23,23,23,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.26,2,0
5823_26,26,26,boolean foundEnd = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,0,0,0,0.35,0,0
5823_27,27,41,"if (event.getFromIndex() != -1 && event.getToIndex() != -1 && event.getItemCount() != -1) {
foundEnd = event.getFromIndex() == 0 ||
(event.getItemCount() - 1) == event.getToIndex();
Log.d(LOG_TAG, ""scrollSwipe reached scroll end: "" + foundEnd);
} else if (event.getScrollX() != -1 && event.getScrollY() != -1) {
if (downX == upX) {
foundEnd = event.getScrollY() == 0 ||
event.getScrollY() == event.getMaxScrollY();
Log.d(LOG_TAG, ""Vertical scrollSwipe reached scroll end: "" + foundEnd);
} else if (downY == upY) {
foundEnd = event.getScrollX() == 0 ||
event.getScrollX() == event.getMaxScrollX();
Log.d(LOG_TAG, ""Horizontal scrollSwipe reached scroll end: "" + foundEnd);
}
}",1,0,0,0,0,0,0,0,0,9,2,15,0,1,0,0,6,4,0,0,0,0.42,1,0
5823_28,28,29,"foundEnd = event.getFromIndex() == 0 ||
(event.getItemCount() - 1) == event.getToIndex();",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,6,4,0,0,0,0.37,2,1
5823_30,30,30,"Log.d(LOG_TAG, ""scrollSwipe reached scroll end: "" + foundEnd);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.4,4,3
5823_31,31,31,} else if (event.getScrollX() != -1 && event.getScrollY() != -1) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.37,5,3
5823_32,32,40,"if (downX == upX) {
foundEnd = event.getScrollY() == 0 ||
event.getScrollY() == event.getMaxScrollY();
Log.d(LOG_TAG, ""Vertical scrollSwipe reached scroll end: "" + foundEnd);
} else if (downY == upY) {
foundEnd = event.getScrollX() == 0 ||
event.getScrollX() == event.getMaxScrollX();
Log.d(LOG_TAG, ""Horizontal scrollSwipe reached scroll end: "" + foundEnd);
}",1,0,0,0,0,0,0,0,0,5,1,9,0,0,0,0,6,4,0,0,0,0.41,6,4
5823_33,33,34,"foundEnd = event.getScrollY() == 0 ||
event.getScrollY() == event.getMaxScrollY();",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,6,4,0,0,0,0.4,7,5
5823_35,35,35,"Log.d(LOG_TAG, ""Vertical scrollSwipe reached scroll end: "" + foundEnd);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.4,9,7
5823_36,36,36,} else if (downY == upY) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.24,10,7
5823_37,37,38,"foundEnd = event.getScrollX() == 0 ||
event.getScrollX() == event.getMaxScrollX();",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,6,4,0,0,0,0.4,11,8
5823_39,39,39,"Log.d(LOG_TAG, ""Horizontal scrollSwipe reached scroll end: "" + foundEnd);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.41,13,10
5823_42,42,42,recycleAccessibilityEvents(events);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.34,16,11
5823_43,43,43,return !foundEnd;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.31,17,11
5822_1,1,2,"public boolean scrollSwipe(final int downX, final int downY, final int upX, final int upY,
final int steps) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,5,1,0,1,0.44,19,6
5822_3,3,4,"Log.d(LOG_TAG, ""scrollSwipe ("" +  downX + "", "" + downY + "", "" + upX + "", ""
+ upY + "", "" + steps +"")"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,7,5,1,0,1,0.45,17,5
5822_6,6,11,"Runnable command = new Runnable() {
@Override
public void run() {
swipe(downX, downY, upX, upY, steps);
}
};",0,0,0,0,0,1,0,0,0,0,2,6,0,0,1,1,7,5,1,0,1,0.47,10,4
5822_13,13,13,ArrayList<AccessibilityEvent> events = new ArrayList<AccessibilityEvent>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,5,1,0,2,0.58,8,3
5822_14,14,16,"runAndWaitForEvents(command,
new EventCollectingPredicate(AccessibilityEvent.TYPE_VIEW_SCROLLED, events),
Configurator.getInstance().getScrollAcknowledgmentTimeout());",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,1,7,5,1,0,3,0.67,5,2
5822_18,18,19,"AccessibilityEvent event = getLastMatchingEvent(events,
AccessibilityEvent.TYPE_VIEW_SCROLLED);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,7,5,1,0,2,0.62,2,1
5822_21,21,24,"if (event == null) {
recycleAccessibilityEvents(events);
return false;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,7,5,1,0,1,0.5,0,0
5822_22,22,22,recycleAccessibilityEvents(events);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.56,0,0
5822_23,23,23,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.23,1,0
5822_26,26,26,boolean foundEnd = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,5,1,0,1,0.44,4,2
5822_27,27,41,"if (event.getFromIndex() != -1 && event.getToIndex() != -1 && event.getItemCount() != -1) {
foundEnd = event.getFromIndex() == 0 ||
(event.getItemCount() - 1) == event.getToIndex();
Log.d(LOG_TAG, ""scrollSwipe reached scroll end: "" + foundEnd);
} else if (event.getScrollX() != -1 && event.getScrollY() != -1) {
if (downX == upX) {
foundEnd = event.getScrollY() == 0 ||
event.getScrollY() == event.getMaxScrollY();
Log.d(LOG_TAG, ""Vertical scrollSwipe reached scroll end: "" + foundEnd);
} else if (downY == upY) {
foundEnd = event.getScrollX() == 0 ||
event.getScrollX() == event.getMaxScrollX();
Log.d(LOG_TAG, ""Horizontal scrollSwipe reached scroll end: "" + foundEnd);
}
}",1,0,0,0,0,0,0,0,0,9,2,15,0,1,0,0,7,5,1,0,3,0.64,5,2
5822_28,28,29,"foundEnd = event.getFromIndex() == 0 ||
(event.getItemCount() - 1) == event.getToIndex();",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,7,5,1,0,2,0.49,6,3
5822_30,30,30,"Log.d(LOG_TAG, ""scrollSwipe reached scroll end: "" + foundEnd);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,2,0.6,8,5
5822_31,31,31,} else if (event.getScrollX() != -1 && event.getScrollY() != -1) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,2,0.56,9,5
5822_32,32,40,"if (downX == upX) {
foundEnd = event.getScrollY() == 0 ||
event.getScrollY() == event.getMaxScrollY();
Log.d(LOG_TAG, ""Vertical scrollSwipe reached scroll end: "" + foundEnd);
} else if (downY == upY) {
foundEnd = event.getScrollX() == 0 ||
event.getScrollX() == event.getMaxScrollX();
Log.d(LOG_TAG, ""Horizontal scrollSwipe reached scroll end: "" + foundEnd);
}",1,0,0,0,0,0,0,0,0,5,1,9,0,0,0,0,7,5,1,0,3,0.66,10,6
5822_33,33,34,"foundEnd = event.getScrollY() == 0 ||
event.getScrollY() == event.getMaxScrollY();",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,7,5,1,0,3,0.68,11,7
5822_35,35,35,"Log.d(LOG_TAG, ""Vertical scrollSwipe reached scroll end: "" + foundEnd);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,2,0.6,13,9
5822_36,36,36,} else if (downY == upY) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.16,14,9
5822_37,37,38,"foundEnd = event.getScrollX() == 0 ||
event.getScrollX() == event.getMaxScrollX();",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,7,5,1,0,3,0.65,15,10
5822_39,39,39,"Log.d(LOG_TAG, ""Horizontal scrollSwipe reached scroll end: "" + foundEnd);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,2,0.6,17,12
5822_42,42,42,recycleAccessibilityEvents(events);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.56,20,13
5822_43,43,43,return !foundEnd;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.45,21,13
5821_1,1,2,"public boolean scrollSwipe(final int downX, final int downY, final int upX, final int upY,
final int steps) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,6,1,0,1,0.39,10,2
5821_3,3,4,"Log.d(LOG_TAG, ""scrollSwipe ("" +  downX + "", "" + downY + "", "" + upX + "", ""
+ upY + "", "" + steps +"")"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,9,6,1,0,1,0.45,8,1
5821_6,6,11,"Runnable command = new Runnable() {
@Override
public void run() {
swipe(downX, downY, upX, upY, steps);
}
};",0,0,0,0,0,1,0,0,0,0,2,6,0,0,1,1,9,6,1,0,2,0.47,1,0
5821_13,13,13,ArrayList<AccessibilityEvent> events = new ArrayList<AccessibilityEvent>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,6,1,0,2,0.61,0,0
5821_14,14,16,"runAndWaitForEvents(command,
new EventCollectingPredicate(AccessibilityEvent.TYPE_VIEW_SCROLLED, events),
Configurator.getInstance().getScrollAcknowledgmentTimeout());",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,1,9,6,1,0,5,0.73,1,0
5821_18,18,19,"AccessibilityEvent event = getLastMatchingEvent(events,
AccessibilityEvent.TYPE_VIEW_SCROLLED);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,9,6,1,0,4,0.76,5,2
5821_21,21,24,"if (event == null) {
recycleAccessibilityEvents(events);
return false;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,9,6,1,0,2,0.61,8,3
5821_22,22,22,recycleAccessibilityEvents(events);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,2,0.7,9,3
5821_23,23,23,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.23,10,4
5821_26,26,26,boolean foundEnd = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,6,1,0,0,0.32,13,6
5821_27,27,41,"if (event.getFromIndex() != -1 && event.getToIndex() != -1 && event.getItemCount() != -1) {
foundEnd = event.getFromIndex() == 0 ||
(event.getItemCount() - 1) == event.getToIndex();
Log.d(LOG_TAG, ""scrollSwipe reached scroll end: "" + foundEnd);
} else if (event.getScrollX() != -1 && event.getScrollY() != -1) {
if (downX == upX) {
foundEnd = event.getScrollY() == 0 ||
event.getScrollY() == event.getMaxScrollY();
Log.d(LOG_TAG, ""Vertical scrollSwipe reached scroll end: "" + foundEnd);
} else if (downY == upY) {
foundEnd = event.getScrollX() == 0 ||
event.getScrollX() == event.getMaxScrollX();
Log.d(LOG_TAG, ""Horizontal scrollSwipe reached scroll end: "" + foundEnd);
}
}",1,0,0,0,0,0,0,0,0,9,2,15,0,1,0,0,9,6,1,0,3,0.63,14,6
5821_28,28,29,"foundEnd = event.getFromIndex() == 0 ||
(event.getItemCount() - 1) == event.getToIndex();",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,9,6,1,0,2,0.59,15,7
5821_30,30,30,"Log.d(LOG_TAG, ""scrollSwipe reached scroll end: "" + foundEnd);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,6,1,0,1,0.41,17,9
5821_31,31,31,} else if (event.getScrollX() != -1 && event.getScrollY() != -1) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,2,0.63,18,9
5821_32,32,40,"if (downX == upX) {
foundEnd = event.getScrollY() == 0 ||
event.getScrollY() == event.getMaxScrollY();
Log.d(LOG_TAG, ""Vertical scrollSwipe reached scroll end: "" + foundEnd);
} else if (downY == upY) {
foundEnd = event.getScrollX() == 0 ||
event.getScrollX() == event.getMaxScrollX();
Log.d(LOG_TAG, ""Horizontal scrollSwipe reached scroll end: "" + foundEnd);
}",1,0,0,0,0,0,0,0,0,5,1,9,0,0,0,0,9,6,1,0,3,0.62,19,10
5821_33,33,34,"foundEnd = event.getScrollY() == 0 ||
event.getScrollY() == event.getMaxScrollY();",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,9,6,1,0,2,0.63,20,11
5821_35,35,35,"Log.d(LOG_TAG, ""Vertical scrollSwipe reached scroll end: "" + foundEnd);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,6,1,0,1,0.42,22,13
5821_36,36,36,} else if (downY == upY) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.26,23,13
5821_37,37,38,"foundEnd = event.getScrollX() == 0 ||
event.getScrollX() == event.getMaxScrollX();",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,9,6,1,0,2,0.65,24,14
5821_39,39,39,"Log.d(LOG_TAG, ""Horizontal scrollSwipe reached scroll end: "" + foundEnd);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,6,1,0,1,0.42,26,16
5821_42,42,42,recycleAccessibilityEvents(events);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,2,0.7,29,17
5821_43,43,43,return !foundEnd;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.29,30,17
5820_1,1,2,"@Override
public boolean accept(AccessibilityEvent t) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,0,0.27,1,1
5820_3,3,10,"if ((t.getEventType() & mMask) != 0) {
mMask &= ~t.getEventType();

if (mMask != 0)
return false;

return true;
}",1,0,0,0,0,0,0,0,0,4,1,8,0,0,0,1,5,5,0,0,1,0.5,0,0
5820_4,4,4,mMask &= ~t.getEventType();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,5,0,0,1,0.44,0,0
5820_6,6,7,"if (mMask != 0)
return false;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,5,5,0,0,1,0.51,2,1
5820_7,7,7,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,5,5,0,0,0,0.26,3,1
5820_9,9,9,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,5,0,0,0,0.3,5,3
5820_12,12,12,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,5,0,0,0,0.26,8,4
5819_1,1,2,"@Override
public boolean accept(AccessibilityEvent t) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,1,0.5,0,0
5819_3,3,10,"if ((t.getEventType() & mMask) != 0) {
mMask &= ~t.getEventType();

if (mMask != 0)
return false;

return true;
}",1,0,0,0,0,0,0,0,0,4,1,8,0,0,0,1,4,2,1,0,1,0.39,0,0
5819_4,4,4,mMask &= ~t.getEventType();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,1,0.45,1,0
5819_6,6,7,"if (mMask != 0)
return false;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,4,2,1,0,0,0.18,3,2
5819_7,7,7,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.15,4,2
5819_9,9,9,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.21,6,4
5819_12,12,12,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.15,9,5
5818_1,1,2,"@Override
public boolean accept(AccessibilityEvent t) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,13,8,2,0,1,0.45,1,1
5818_3,3,5,"if ((t.getEventType() & mMask) != 0) {
mEventsList.add(AccessibilityEvent.obtain(t));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,13,8,2,0,1,0.51,0,0
5818_4,4,4,mEventsList.add(AccessibilityEvent.obtain(t));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,8,2,0,1,0.54,0,0
5818_7,7,7,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,13,8,2,0,2,0.66,3,1
5817_1,1,2,"@Override
public boolean accept(AccessibilityEvent t) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,1,0.5,0,0
5817_3,3,5,"if ((t.getEventType() & mMask) != 0) {
mEventsList.add(AccessibilityEvent.obtain(t));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,2,1,0,2,0.61,0,0
5817_4,4,4,mEventsList.add(AccessibilityEvent.obtain(t));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.67,1,0
5817_7,7,7,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.15,4,2
5816_1,1,2,"@Override
public boolean accept(AccessibilityEvent t) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,1,0.5,0,0
5816_3,3,5,"if ((t.getEventType() & mMask) != 0) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,2,1,0,1,0.4,0,0
5816_4,4,4,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.21,1,0
5816_7,7,7,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.15,4,2
5815_1,1,1,private static boolean cmdGetData(String[] args) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.37,29,23
5815_2,2,2,"boolean binary = contains(args, 1, BINARY_FLAG);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,7,3,1,0,0,0.31,28,22
5815_3,3,3,"boolean noUidMap = contains(args, 1, NO_UID_MAP_FLAG);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,7,3,1,0,2,0.56,27,21
5815_4,4,4,"boolean clearData = contains(args, 1, CLEAR_DATA);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,7,3,1,0,1,0.44,26,20
5815_6,6,6,int argCount = args.length - 1;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,3,1,0,0,0.36,24,19
5815_7,7,7,if (binary) argCount--;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,1,0,0,0.31,23,18
5815_8,8,8,if (noUidMap) argCount--;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,1,0,2,0.59,22,17
5815_9,9,9,if (clearData) argCount--;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,1,0,1,0.45,21,16
5815_10,10,10,long configId;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,1,0,0,0.31,20,15
5815_11,11,17,"try {
configId = getConfigId(argCount < 1, args, 1);
} catch (NumberFormatException e) {
sLogger.severe(""Invalid config id provided."");
printHelp();
return false;
}",0,0,0,0,1,0,0,0,0,5,1,7,0,1,0,0,7,3,1,0,0,0.39,13,9
5815_12,12,12,"configId = getConfigId(argCount < 1, args, 1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.31,18,13
5815_13,13,13,} catch (NumberFormatException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.39,17,12
5815_14,14,14,"sLogger.severe(""Invalid config id provided."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.37,16,11
5815_15,15,15,printHelp();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.39,15,10
5815_16,16,16,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.22,14,9
5815_18,18,19,"sLogger.fine(String.format(""cmdGetData with %d %b %b %b"",
configId, clearData, binary, noUidMap));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,7,3,1,0,3,0.55,11,8
5815_21,21,21,ConfigMetricsReportList reportList;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,3,1,0,1,0.45,9,7
5815_22,22,27,"try {
reportList = Utils.getReportList(configId, clearData, true , sLogger);
} catch (IOException | InterruptedException e) {
sLogger.severe(""Failed to get report list: "" + e.getMessage());
return false;
}",0,0,0,0,1,0,0,0,0,4,1,6,0,1,0,0,7,3,1,0,2,0.5,3,2
5815_23,23,23,"reportList = Utils.getReportList(configId, clearData, true , sLogger);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,2,0.51,7,5
5815_24,24,24,} catch (IOException | InterruptedException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.39,6,4
5815_25,25,25,"sLogger.severe(""Failed to get report list: "" + e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,1,0.46,5,3
5815_26,26,26,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.22,4,2
5815_28,28,36,"if (noUidMap) {
ConfigMetricsReportList.Builder builder
= ConfigMetricsReportList.newBuilder(reportList);
builder.clearReports();
for (ConfigMetricsReport report : reportList.getReportsList()) {
builder.addReports(ConfigMetricsReport.newBuilder(report).clearUidMap());
}
reportList = builder.build();
}",1,0,0,0,0,0,0,0,0,5,2,9,0,1,0,1,7,3,1,0,5,0.69,0,0
5815_29,29,30,"ConfigMetricsReportList.Builder builder
= ConfigMetricsReportList.newBuilder(reportList);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,7,3,1,0,1,0.41,0,0
5815_31,31,31,builder.clearReports();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,1,0,2,0.59,0,0
5815_32,32,34,"for (ConfigMetricsReport report : reportList.getReportsList()) {
builder.addReports(ConfigMetricsReport.newBuilder(report).clearUidMap());
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,0,7,3,1,0,5,0.72,1,0
5815_33,33,33,builder.addReports(ConfigMetricsReport.newBuilder(report).clearUidMap());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,5,0.74,2,1
5815_35,35,35,reportList = builder.build();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,1,0,1,0.42,4,3
5815_38,38,48,"if (!binary) {
sLogger.info(reportList.toString());
} else {
try {
System.out.write(reportList.toByteArray());
} catch (IOException e) {
sLogger.severe(""Failed to output binary statslog proto: ""
+ e.getMessage());
return false;
}
}",1,0,0,0,0,0,0,0,0,7,2,11,0,0,1,0,7,3,1,0,1,0.47,7,4
5815_39,39,39,sLogger.info(reportList.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,1,0.46,8,4
5815_40,40,40,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.15,9,5
5815_41,41,47,"try {
System.out.write(reportList.toByteArray());
} catch (IOException e) {
sLogger.severe(""Failed to output binary statslog proto: ""
+ e.getMessage());
return false;
}",0,0,0,0,1,0,0,0,0,4,1,7,0,0,0,0,7,3,1,0,1,0.47,10,6
5815_42,42,42,System.out.write(reportList.toByteArray());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,1,0.47,11,7
5815_43,43,43,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.39,12,8
5815_44,44,45,"sLogger.severe(""Failed to output binary statslog proto: ""
+ e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,3,1,0,0,0.43,13,9
5815_46,46,46,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.22,15,11
5815_49,49,49,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.23,18,12
5814_1,1,1,private static boolean cmdGetData(String[] args) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.47,4,3
5814_2,2,2,"boolean binary = contains(args, 1, BINARY_FLAG);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,3,1,1,0,0,0.32,3,2
5814_3,3,3,"boolean noUidMap = contains(args, 1, NO_UID_MAP_FLAG);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,3,1,1,0,0,0.32,2,1
5814_4,4,4,"boolean clearData = contains(args, 1, CLEAR_DATA);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,3,1,1,0,0,0.29,1,0
5814_6,6,6,int argCount = args.length - 1;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,1,1,0,0,0.27,0,0
5814_7,7,7,if (binary) argCount--;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,0,0.27,1,0
5814_8,8,8,if (noUidMap) argCount--;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,0,0.28,2,1
5814_9,9,9,if (clearData) argCount--;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,0,0.24,3,2
5814_10,10,10,long configId;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,2,0.76,4,3
5814_11,11,17,"try {
configId = getConfigId(argCount < 1, args, 1);
} catch (NumberFormatException e) {
sLogger.severe(""Invalid config id provided."");
printHelp();
return false;
}",0,0,0,0,1,0,0,0,0,5,1,7,0,1,0,0,3,1,1,0,3,0.73,5,4
5814_12,12,12,"configId = getConfigId(argCount < 1, args, 1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,3,0.83,6,5
5814_13,13,13,} catch (NumberFormatException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.26,7,6
5814_14,14,14,"sLogger.severe(""Invalid config id provided."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,2,0.68,8,7
5814_15,15,15,printHelp();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.18,9,8
5814_16,16,16,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.03,10,9
5814_18,18,19,"sLogger.fine(String.format(""cmdGetData with %d %b %b %b"",
configId, clearData, binary, noUidMap));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,3,1,1,0,3,0.7,12,11
5814_21,21,21,ConfigMetricsReportList reportList;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,1,1,0,1,0.47,15,12
5814_22,22,27,"try {
reportList = Utils.getReportList(configId, clearData, true , sLogger);
} catch (IOException | InterruptedException e) {
sLogger.severe(""Failed to get report list: "" + e.getMessage());
return false;
}",0,0,0,0,1,0,0,0,0,4,1,6,0,1,0,0,3,1,1,0,3,0.69,16,12
5814_23,23,23,"reportList = Utils.getReportList(configId, clearData, true , sLogger);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,3,0.72,17,13
5814_24,24,24,} catch (IOException | InterruptedException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.25,18,14
5814_25,25,25,"sLogger.severe(""Failed to get report list: "" + e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.52,19,15
5814_26,26,26,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.03,20,16
5814_28,28,36,"if (noUidMap) {
ConfigMetricsReportList.Builder builder
= ConfigMetricsReportList.newBuilder(reportList);
builder.clearReports();
for (ConfigMetricsReport report : reportList.getReportsList()) {
builder.addReports(ConfigMetricsReport.newBuilder(report).clearUidMap());
}
reportList = builder.build();
}",1,0,0,0,0,0,0,0,0,5,2,9,0,1,0,1,3,1,1,0,2,0.55,22,18
5814_29,29,30,"ConfigMetricsReportList.Builder builder
= ConfigMetricsReportList.newBuilder(reportList);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,3,1,1,0,1,0.44,23,18
5814_31,31,31,builder.clearReports();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,0,0.23,25,20
5814_32,32,34,"for (ConfigMetricsReport report : reportList.getReportsList()) {
builder.addReports(ConfigMetricsReport.newBuilder(report).clearUidMap());
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,0,3,1,1,0,2,0.56,26,20
5814_33,33,33,builder.addReports(ConfigMetricsReport.newBuilder(report).clearUidMap());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.41,27,21
5814_35,35,35,reportList = builder.build();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,0,0.26,29,23
5814_38,38,48,"if (!binary) {
sLogger.info(reportList.toString());
} else {
try {
System.out.write(reportList.toByteArray());
} catch (IOException e) {
sLogger.severe(""Failed to output binary statslog proto: ""
+ e.getMessage());
return false;
}
}",1,0,0,0,0,0,0,0,0,7,2,11,0,0,1,0,3,1,1,0,1,0.43,32,24
5814_39,39,39,sLogger.info(reportList.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.33,33,24
5814_40,40,40,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.05,34,25
5814_41,41,47,"try {
System.out.write(reportList.toByteArray());
} catch (IOException e) {
sLogger.severe(""Failed to output binary statslog proto: ""
+ e.getMessage());
return false;
}",0,0,0,0,1,0,0,0,0,4,1,7,0,0,0,0,3,1,1,0,1,0.43,35,26
5814_42,42,42,System.out.write(reportList.toByteArray());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.28,36,27
5814_43,43,43,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.25,37,28
5814_44,44,45,"sLogger.severe(""Failed to output binary statslog proto: ""
+ e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,1,0,1,0.48,38,29
5814_46,46,46,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.03,40,31
5814_49,49,49,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.07,43,32
5813_1,1,1,"private static boolean updateConfig(String[] args, boolean removeOldConfig) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,3,0.76,28,20
5813_2,2,2,int argCount = args.length - 1;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.2,27,19
5813_4,4,8,"if (argCount < 1) {
sLogger.severe(""No config file provided."");
printHelp();
return false;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,3,2,0,0,1,0.47,21,15
5813_5,5,5,"sLogger.severe(""No config file provided."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.55,24,17
5813_6,6,6,printHelp();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.21,23,16
5813_7,7,7,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.09,22,15
5813_9,9,9,final String origConfigLocation = args[1];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.44,20,14
5813_10,10,13,"if (!new File(origConfigLocation).exists()) {
sLogger.severe(""Error - Cannot find the provided config file: "" + origConfigLocation);
return false;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,3,2,0,0,1,0.51,16,11
5813_11,11,11,"sLogger.severe(""Error - Cannot find the provided config file: "" + origConfigLocation);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.53,18,12
5813_12,12,12,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.09,17,11
5813_14,14,14,argCount--;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.19,15,10
5813_16,16,16,"boolean binary = contains(args, 2, BINARY_FLAG);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.3,13,9
5813_17,17,17,if (binary) argCount --;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.25,12,8
5813_19,19,19,long configId;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.44,10,7
5813_20,20,26,"try {
configId = getConfigId(argCount < 1, args, 2);
} catch (NumberFormatException e) {
sLogger.severe(""Invalid config id provided."");
printHelp();
return false;
}",0,0,0,0,1,0,0,0,0,5,1,7,0,1,0,0,3,2,0,0,1,0.46,3,1
5813_21,21,21,"configId = getConfigId(argCount < 1, args, 2);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.42,8,5
5813_22,22,22,} catch (NumberFormatException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,7,4
5813_23,23,23,"sLogger.severe(""Invalid config id provided."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.5,6,3
5813_24,24,24,printHelp();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.21,5,2
5813_25,25,25,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.09,4,1
5813_27,27,28,"sLogger.fine(String.format(""updateConfig with %s %d %b %b"",
origConfigLocation, configId, binary, removeOldConfig));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,3,2,0,0,3,0.78,1,0
5813_30,30,39,"if (removeOldConfig) {
try {
Utils.runCommand(null, sLogger, ""adb"", ""shell"", Utils.CMD_REMOVE_CONFIG,
Utils.SHELL_UID, String.valueOf(configId));
Utils.getReportList(configId, true , true , sLogger);
} catch (InterruptedException | IOException e) {
sLogger.severe(""Failed to remove config: "" + e.getMessage());
return false;
}
}",1,0,0,0,0,0,0,0,0,6,2,10,0,0,1,1,3,2,0,0,3,0.69,0,0
5813_31,31,38,"try {
Utils.runCommand(null, sLogger, ""adb"", ""shell"", Utils.CMD_REMOVE_CONFIG,
Utils.SHELL_UID, String.valueOf(configId));
Utils.getReportList(configId, true , true , sLogger);
} catch (InterruptedException | IOException e) {
sLogger.severe(""Failed to remove config: "" + e.getMessage());
return false;
}",0,0,0,0,1,0,0,0,0,5,1,8,0,0,0,0,3,2,0,0,2,0.56,1,0
5813_32,32,33,"Utils.runCommand(null, sLogger, ""adb"", ""shell"", Utils.CMD_REMOVE_CONFIG,
Utils.SHELL_UID, String.valueOf(configId));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,3,2,0,0,2,0.57,2,1
5813_34,34,34,"Utils.getReportList(configId, true , true , sLogger);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.4,4,3
5813_35,35,35,} catch (InterruptedException | IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.25,5,3
5813_36,36,36,"sLogger.severe(""Failed to remove config: "" + e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.63,6,4
5813_37,37,37,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.09,7,5
5813_41,41,41,String configLocation;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.51,11,7
5813_42,42,63,"if (binary) {
configLocation = origConfigLocation;
} else {
StatsdConfig.Builder builder = StatsdConfig.newBuilder();
try {
TextFormat.merge(new FileReader(origConfigLocation), builder);
} catch (IOException e) {
sLogger.severe(""Failed to read config file "" + origConfigLocation + "": ""
+ e.getMessage());
return false;
}

try {
File tempConfigFile = File.createTempFile(""statsdconfig"", "".config"");
tempConfigFile.deleteOnExit();
Files.write(builder.build().toByteArray(), tempConfigFile);
configLocation = tempConfigFile.getAbsolutePath();
} catch (IOException e) {
sLogger.severe(""Failed to write temp config file: "" + e.getMessage());
return false;
}
}",1,0,0,0,0,0,0,0,0,16,2,22,0,1,0,0,3,2,0,0,1,0.55,12,7
5813_43,43,43,configLocation = origConfigLocation;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.55,13,8
5813_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.15,14,9
5813_45,45,45,StatsdConfig.Builder builder = StatsdConfig.newBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.54,15,10
5813_46,46,52,"try {
TextFormat.merge(new FileReader(origConfigLocation), builder);
} catch (IOException e) {
sLogger.severe(""Failed to read config file "" + origConfigLocation + "": ""
+ e.getMessage());
return false;
}",0,0,0,0,1,0,0,0,0,4,1,7,0,1,0,1,3,2,0,0,1,0.49,16,11
5813_47,47,47,"TextFormat.merge(new FileReader(origConfigLocation), builder);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.51,17,12
5813_48,48,48,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.25,18,13
5813_49,49,50,"sLogger.severe(""Failed to read config file "" + origConfigLocation + "": ""
+ e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,1,0.52,19,14
5813_51,51,51,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.09,21,16
5813_54,54,62,"try {
File tempConfigFile = File.createTempFile(""statsdconfig"", "".config"");
tempConfigFile.deleteOnExit();
Files.write(builder.build().toByteArray(), tempConfigFile);
configLocation = tempConfigFile.getAbsolutePath();
} catch (IOException e) {
sLogger.severe(""Failed to write temp config file: "" + e.getMessage());
return false;
}",0,0,0,0,1,0,0,0,0,7,1,9,0,0,1,0,3,2,0,0,1,0.55,24,17
5813_55,55,55,"File tempConfigFile = File.createTempFile(""statsdconfig"", "".config"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.59,25,17
5813_56,56,56,tempConfigFile.deleteOnExit();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.59,26,18
5813_57,57,57,"Files.write(builder.build().toByteArray(), tempConfigFile);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.51,27,19
5813_58,58,58,configLocation = tempConfigFile.getAbsolutePath();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.57,28,20
5813_59,59,59,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.25,29,21
5813_60,60,60,"sLogger.severe(""Failed to write temp config file: "" + e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.52,30,22
5813_61,61,61,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.09,31,23
5813_64,64,64,"String remotePath = ""/data/local/tmp/statsdconfig.config"";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.45,34,25
5813_65,65,72,"try {
Utils.runCommand(null, sLogger, ""adb"", ""push"", configLocation, remotePath);
Utils.runCommand(null, sLogger, ""adb"", ""shell"", ""cat"", remotePath, ""|"",
Utils.CMD_UPDATE_CONFIG, Utils.SHELL_UID, String.valueOf(configId));
} catch (InterruptedException | IOException e) {
sLogger.severe(""Failed to update config: "" + e.getMessage());
return false;
}",0,0,0,0,1,0,0,0,0,5,1,8,0,1,0,0,3,2,0,0,1,0.44,35,25
5813_66,66,66,"Utils.runCommand(null, sLogger, ""adb"", ""push"", configLocation, remotePath);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,1,0.42,36,26
5813_67,67,68,"Utils.runCommand(null, sLogger, ""adb"", ""shell"", ""cat"", remotePath, ""|"",
Utils.CMD_UPDATE_CONFIG, Utils.SHELL_UID, String.valueOf(configId));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,3,2,0,0,1,0.4,37,27
5813_69,69,69,} catch (InterruptedException | IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.25,39,29
5813_70,70,70,"sLogger.severe(""Failed to update config: "" + e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.48,40,29
5813_71,71,71,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.09,41,30
5813_73,73,73,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.08,43,32
5812_1,1,1,"private static boolean updateConfig(String[] args, boolean removeOldConfig) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.47,17,12
5812_2,2,2,int argCount = args.length - 1;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,1,1,0,0,0.27,16,11
5812_4,4,8,"if (argCount < 1) {
sLogger.severe(""No config file provided."");
printHelp();
return false;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,3,1,1,0,1,0.45,10,7
5812_5,5,5,"sLogger.severe(""No config file provided."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.5,13,9
5812_6,6,6,printHelp();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.18,12,8
5812_7,7,7,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.03,11,7
5812_9,9,9,final String origConfigLocation = args[1];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,1,0.5,9,6
5812_10,10,13,"if (!new File(origConfigLocation).exists()) {
sLogger.severe(""Error - Cannot find the provided config file: "" + origConfigLocation);
return false;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,3,1,1,0,1,0.5,5,3
5812_11,11,11,"sLogger.severe(""Error - Cannot find the provided config file: "" + origConfigLocation);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.53,7,4
5812_12,12,12,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.03,6,3
5812_14,14,14,argCount--;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,1,1,0,0,0.27,4,2
5812_16,16,16,"boolean binary = contains(args, 2, BINARY_FLAG);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,1,1,0,0,0.31,2,1
5812_17,17,17,if (binary) argCount --;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,1,1,0,0,0.27,1,0
5812_19,19,19,long configId;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,1,1,0,2,0.76,0,0
5812_20,20,26,"try {
configId = getConfigId(argCount < 1, args, 2);
} catch (NumberFormatException e) {
sLogger.severe(""Invalid config id provided."");
printHelp();
return false;
}",0,0,0,0,1,0,0,0,0,5,1,7,0,1,0,0,3,1,1,0,3,0.73,1,0
5812_21,21,21,"configId = getConfigId(argCount < 1, args, 2);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,3,0.83,2,1
5812_22,22,22,} catch (NumberFormatException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.26,3,2
5812_23,23,23,"sLogger.severe(""Invalid config id provided."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,2,0.68,4,3
5812_24,24,24,printHelp();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.18,5,4
5812_25,25,25,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.03,6,5
5812_27,27,28,"sLogger.fine(String.format(""updateConfig with %s %d %b %b"",
origConfigLocation, configId, binary, removeOldConfig));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,3,1,1,0,2,0.65,8,7
5812_30,30,39,"if (removeOldConfig) {
try {
Utils.runCommand(null, sLogger, ""adb"", ""shell"", Utils.CMD_REMOVE_CONFIG,
Utils.SHELL_UID, String.valueOf(configId));
Utils.getReportList(configId, true , true , sLogger);
} catch (InterruptedException | IOException e) {
sLogger.severe(""Failed to remove config: "" + e.getMessage());
return false;
}
}",1,0,0,0,0,0,0,0,0,6,2,10,0,0,1,1,3,1,1,0,3,0.7,11,8
5812_31,31,38,"try {
Utils.runCommand(null, sLogger, ""adb"", ""shell"", Utils.CMD_REMOVE_CONFIG,
Utils.SHELL_UID, String.valueOf(configId));
Utils.getReportList(configId, true , true , sLogger);
} catch (InterruptedException | IOException e) {
sLogger.severe(""Failed to remove config: "" + e.getMessage());
return false;
}",0,0,0,0,1,0,0,0,0,5,1,8,0,0,0,0,3,1,1,0,3,0.7,12,8
5812_32,32,33,"Utils.runCommand(null, sLogger, ""adb"", ""shell"", Utils.CMD_REMOVE_CONFIG,
Utils.SHELL_UID, String.valueOf(configId));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,3,1,1,0,2,0.6,13,9
5812_34,34,34,"Utils.getReportList(configId, true , true , sLogger);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,3,0.74,15,11
5812_35,35,35,} catch (InterruptedException | IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.25,16,11
5812_36,36,36,"sLogger.severe(""Failed to remove config: "" + e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,2,0.63,17,12
5812_37,37,37,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.03,18,13
5812_41,41,41,String configLocation;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,1,1,0,1,0.53,22,15
5812_42,42,63,"if (binary) {
configLocation = origConfigLocation;
} else {
StatsdConfig.Builder builder = StatsdConfig.newBuilder();
try {
TextFormat.merge(new FileReader(origConfigLocation), builder);
} catch (IOException e) {
sLogger.severe(""Failed to read config file "" + origConfigLocation + "": ""
+ e.getMessage());
return false;
}

try {
File tempConfigFile = File.createTempFile(""statsdconfig"", "".config"");
tempConfigFile.deleteOnExit();
Files.write(builder.build().toByteArray(), tempConfigFile);
configLocation = tempConfigFile.getAbsolutePath();
} catch (IOException e) {
sLogger.severe(""Failed to write temp config file: "" + e.getMessage());
return false;
}
}",1,0,0,0,0,0,0,0,0,16,2,22,0,1,0,0,3,1,1,0,2,0.59,23,15
5812_43,43,43,configLocation = origConfigLocation;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.59,24,16
5812_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.05,25,17
5812_45,45,45,StatsdConfig.Builder builder = StatsdConfig.newBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,1,0.47,26,18
5812_46,46,52,"try {
TextFormat.merge(new FileReader(origConfigLocation), builder);
} catch (IOException e) {
sLogger.severe(""Failed to read config file "" + origConfigLocation + "": ""
+ e.getMessage());
return false;
}",0,0,0,0,1,0,0,0,0,4,1,7,0,1,0,1,3,1,1,0,2,0.59,27,19
5812_47,47,47,"TextFormat.merge(new FileReader(origConfigLocation), builder);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.49,28,20
5812_48,48,48,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.25,29,21
5812_49,49,50,"sLogger.severe(""Failed to read config file "" + origConfigLocation + "": ""
+ e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,1,0,2,0.65,30,22
5812_51,51,51,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.03,32,24
5812_54,54,62,"try {
File tempConfigFile = File.createTempFile(""statsdconfig"", "".config"");
tempConfigFile.deleteOnExit();
Files.write(builder.build().toByteArray(), tempConfigFile);
configLocation = tempConfigFile.getAbsolutePath();
} catch (IOException e) {
sLogger.severe(""Failed to write temp config file: "" + e.getMessage());
return false;
}",0,0,0,0,1,0,0,0,0,7,1,9,0,0,1,0,3,1,1,0,2,0.57,35,25
5812_55,55,55,"File tempConfigFile = File.createTempFile(""statsdconfig"", "".config"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,1,0.42,36,25
5812_56,56,56,tempConfigFile.deleteOnExit();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,1,0.44,37,26
5812_57,57,57,"Files.write(builder.build().toByteArray(), tempConfigFile);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,1,0.38,38,27
5812_58,58,58,configLocation = tempConfigFile.getAbsolutePath();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,2,0.64,39,28
5812_59,59,59,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.25,40,29
5812_60,60,60,"sLogger.severe(""Failed to write temp config file: "" + e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,2,0.6,41,30
5812_61,61,61,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.03,42,31
5812_64,64,64,"String remotePath = ""/data/local/tmp/statsdconfig.config"";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,1,0.46,45,33
5812_65,65,72,"try {
Utils.runCommand(null, sLogger, ""adb"", ""push"", configLocation, remotePath);
Utils.runCommand(null, sLogger, ""adb"", ""shell"", ""cat"", remotePath, ""|"",
Utils.CMD_UPDATE_CONFIG, Utils.SHELL_UID, String.valueOf(configId));
} catch (InterruptedException | IOException e) {
sLogger.severe(""Failed to update config: "" + e.getMessage());
return false;
}",0,0,0,0,1,0,0,0,0,5,1,8,0,1,0,0,3,1,1,0,3,0.68,46,33
5812_66,66,66,"Utils.runCommand(null, sLogger, ""adb"", ""push"", configLocation, remotePath);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,1,0,1,0.45,47,34
5812_67,67,68,"Utils.runCommand(null, sLogger, ""adb"", ""shell"", ""cat"", remotePath, ""|"",
Utils.CMD_UPDATE_CONFIG, Utils.SHELL_UID, String.valueOf(configId));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,3,1,1,0,2,0.59,48,35
5812_69,69,69,} catch (InterruptedException | IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.25,50,37
5812_70,70,70,"sLogger.severe(""Failed to update config: "" + e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,2,0.63,51,37
5812_71,71,71,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.03,52,38
5812_73,73,73,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.07,54,40
5811_1,1,1,"private static boolean updateConfig(String[] args, boolean removeOldConfig) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.35,14,10
5811_2,2,2,int argCount = args.length - 1;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.32,13,9
5811_4,4,8,"if (argCount < 1) {
sLogger.severe(""No config file provided."");
printHelp();
return false;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,2,2,0,0,0,0.37,7,5
5811_5,5,5,"sLogger.severe(""No config file provided."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.4,10,7
5811_6,6,6,printHelp();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.23,9,6
5811_7,7,7,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.17,8,5
5811_9,9,9,final String origConfigLocation = args[1];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.32,6,4
5811_10,10,13,"if (!new File(origConfigLocation).exists()) {
sLogger.severe(""Error - Cannot find the provided config file: "" + origConfigLocation);
return false;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,2,2,0,0,0,0.38,2,1
5811_11,11,11,"sLogger.severe(""Error - Cannot find the provided config file: "" + origConfigLocation);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.4,4,2
5811_12,12,12,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.17,3,1
5811_14,14,14,argCount--;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.33,1,0
5811_16,16,16,"boolean binary = contains(args, 2, BINARY_FLAG);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,1,0.56,0,0
5811_17,17,17,if (binary) argCount --;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,1,0.59,1,0
5811_19,19,19,long configId;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.3,3,2
5811_20,20,26,"try {
configId = getConfigId(argCount < 1, args, 2);
} catch (NumberFormatException e) {
sLogger.severe(""Invalid config id provided."");
printHelp();
return false;
}",0,0,0,0,1,0,0,0,0,5,1,7,0,1,0,0,2,2,0,0,1,0.54,4,2
5811_21,21,21,"configId = getConfigId(argCount < 1, args, 2);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.52,5,3
5811_22,22,22,} catch (NumberFormatException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,6,4
5811_23,23,23,"sLogger.severe(""Invalid config id provided."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.42,7,5
5811_24,24,24,printHelp();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.23,8,6
5811_25,25,25,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.17,9,7
5811_27,27,28,"sLogger.fine(String.format(""updateConfig with %s %d %b %b"",
origConfigLocation, configId, binary, removeOldConfig));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,2,2,0,0,1,0.52,11,9
5811_30,30,39,"if (removeOldConfig) {
try {
Utils.runCommand(null, sLogger, ""adb"", ""shell"", Utils.CMD_REMOVE_CONFIG,
Utils.SHELL_UID, String.valueOf(configId));
Utils.getReportList(configId, true , true , sLogger);
} catch (InterruptedException | IOException e) {
sLogger.severe(""Failed to remove config: "" + e.getMessage());
return false;
}
}",1,0,0,0,0,0,0,0,0,6,2,10,0,0,1,1,2,2,0,0,1,0.54,14,10
5811_31,31,38,"try {
Utils.runCommand(null, sLogger, ""adb"", ""shell"", Utils.CMD_REMOVE_CONFIG,
Utils.SHELL_UID, String.valueOf(configId));
Utils.getReportList(configId, true , true , sLogger);
} catch (InterruptedException | IOException e) {
sLogger.severe(""Failed to remove config: "" + e.getMessage());
return false;
}",0,0,0,0,1,0,0,0,0,5,1,8,0,0,0,0,2,2,0,0,1,0.54,15,10
5811_32,32,33,"Utils.runCommand(null, sLogger, ""adb"", ""shell"", Utils.CMD_REMOVE_CONFIG,
Utils.SHELL_UID, String.valueOf(configId));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,2,2,0,0,0,0.39,16,11
5811_34,34,34,"Utils.getReportList(configId, true , true , sLogger);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.48,18,13
5811_35,35,35,} catch (InterruptedException | IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.24,19,13
5811_36,36,36,"sLogger.severe(""Failed to remove config: "" + e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.52,20,14
5811_37,37,37,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.17,21,15
5811_41,41,41,String configLocation;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.28,25,17
5811_42,42,63,"if (binary) {
configLocation = origConfigLocation;
} else {
StatsdConfig.Builder builder = StatsdConfig.newBuilder();
try {
TextFormat.merge(new FileReader(origConfigLocation), builder);
} catch (IOException e) {
sLogger.severe(""Failed to read config file "" + origConfigLocation + "": ""
+ e.getMessage());
return false;
}

try {
File tempConfigFile = File.createTempFile(""statsdconfig"", "".config"");
tempConfigFile.deleteOnExit();
Files.write(builder.build().toByteArray(), tempConfigFile);
configLocation = tempConfigFile.getAbsolutePath();
} catch (IOException e) {
sLogger.severe(""Failed to write temp config file: "" + e.getMessage());
return false;
}
}",1,0,0,0,0,0,0,0,0,16,2,22,0,1,0,0,2,2,0,0,2,0.65,26,17
5811_43,43,43,configLocation = origConfigLocation;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.26,27,18
5811_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,28,19
5811_45,45,45,StatsdConfig.Builder builder = StatsdConfig.newBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.3,29,20
5811_46,46,52,"try {
TextFormat.merge(new FileReader(origConfigLocation), builder);
} catch (IOException e) {
sLogger.severe(""Failed to read config file "" + origConfigLocation + "": ""
+ e.getMessage());
return false;
}",0,0,0,0,1,0,0,0,0,4,1,7,0,1,0,1,2,2,0,0,1,0.53,30,21
5811_47,47,47,"TextFormat.merge(new FileReader(origConfigLocation), builder);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.4,31,22
5811_48,48,48,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.24,32,23
5811_49,49,50,"sLogger.severe(""Failed to read config file "" + origConfigLocation + "": ""
+ e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,1,0.5,33,24
5811_51,51,51,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.17,35,26
5811_54,54,62,"try {
File tempConfigFile = File.createTempFile(""statsdconfig"", "".config"");
tempConfigFile.deleteOnExit();
Files.write(builder.build().toByteArray(), tempConfigFile);
configLocation = tempConfigFile.getAbsolutePath();
} catch (IOException e) {
sLogger.severe(""Failed to write temp config file: "" + e.getMessage());
return false;
}",0,0,0,0,1,0,0,0,0,7,1,9,0,0,1,0,2,2,0,0,1,0.5,38,27
5811_55,55,55,"File tempConfigFile = File.createTempFile(""statsdconfig"", "".config"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.26,39,27
5811_56,56,56,tempConfigFile.deleteOnExit();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.25,40,28
5811_57,57,57,"Files.write(builder.build().toByteArray(), tempConfigFile);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.32,41,29
5811_58,58,58,configLocation = tempConfigFile.getAbsolutePath();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.53,42,30
5811_59,59,59,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.24,43,31
5811_60,60,60,"sLogger.severe(""Failed to write temp config file: "" + e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.5,44,32
5811_61,61,61,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.17,45,33
5811_64,64,64,"String remotePath = ""/data/local/tmp/statsdconfig.config"";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.38,48,35
5811_65,65,72,"try {
Utils.runCommand(null, sLogger, ""adb"", ""push"", configLocation, remotePath);
Utils.runCommand(null, sLogger, ""adb"", ""shell"", ""cat"", remotePath, ""|"",
Utils.CMD_UPDATE_CONFIG, Utils.SHELL_UID, String.valueOf(configId));
} catch (InterruptedException | IOException e) {
sLogger.severe(""Failed to update config: "" + e.getMessage());
return false;
}",0,0,0,0,1,0,0,0,0,5,1,8,0,1,0,0,2,2,0,0,1,0.53,49,35
5811_66,66,66,"Utils.runCommand(null, sLogger, ""adb"", ""push"", configLocation, remotePath);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.36,50,36
5811_67,67,68,"Utils.runCommand(null, sLogger, ""adb"", ""shell"", ""cat"", remotePath, ""|"",
Utils.CMD_UPDATE_CONFIG, Utils.SHELL_UID, String.valueOf(configId));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,2,2,0,0,0,0.39,51,37
5811_69,69,69,} catch (InterruptedException | IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.24,53,39
5811_70,70,70,"sLogger.severe(""Failed to update config: "" + e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.52,54,39
5811_71,71,71,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.17,55,40
5811_73,73,73,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,57,42
5810_1,1,1,"private static boolean updateConfig(String[] args, boolean removeOldConfig) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,1,0.52,2,1
5810_2,2,2,int argCount = args.length - 1;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,1,2,0,0,0.24,1,0
5810_4,4,8,"if (argCount < 1) {
sLogger.severe(""No config file provided."");
printHelp();
return false;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,3,1,2,0,2,0.61,0,0
5810_5,5,5,"sLogger.severe(""No config file provided."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,2,0.72,1,0
5810_6,6,6,printHelp();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.27,2,1
5810_7,7,7,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.11,3,2
5810_9,9,9,final String origConfigLocation = args[1];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,2,0,1,0.46,5,4
5810_10,10,13,"if (!new File(origConfigLocation).exists()) {
sLogger.severe(""Error - Cannot find the provided config file: "" + origConfigLocation);
return false;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,3,1,2,0,2,0.64,6,4
5810_11,11,11,"sLogger.severe(""Error - Cannot find the provided config file: "" + origConfigLocation);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,2,0.66,7,5
5810_12,12,12,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.11,8,6
5810_14,14,14,argCount--;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,1,2,0,0,0.25,10,8
5810_16,16,16,"boolean binary = contains(args, 2, BINARY_FLAG);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,1,2,0,0,0.3,12,9
5810_17,17,17,if (binary) argCount --;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,1,2,0,0,0.25,13,9
5810_19,19,19,long configId;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,1,2,0,1,0.48,15,11
5810_20,20,26,"try {
configId = getConfigId(argCount < 1, args, 2);
} catch (NumberFormatException e) {
sLogger.severe(""Invalid config id provided."");
printHelp();
return false;
}",0,0,0,0,1,0,0,0,0,5,1,7,0,1,0,0,3,1,2,0,2,0.63,16,11
5810_21,21,21,"configId = getConfigId(argCount < 1, args, 2);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,2,0.62,17,12
5810_22,22,22,} catch (NumberFormatException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.29,18,13
5810_23,23,23,"sLogger.severe(""Invalid config id provided."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,1,0.56,19,14
5810_24,24,24,printHelp();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.27,20,15
5810_25,25,25,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.11,21,16
5810_27,27,28,"sLogger.fine(String.format(""updateConfig with %s %d %b %b"",
origConfigLocation, configId, binary, removeOldConfig));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,3,1,2,0,1,0.54,23,18
5810_30,30,39,"if (removeOldConfig) {
try {
Utils.runCommand(null, sLogger, ""adb"", ""shell"", Utils.CMD_REMOVE_CONFIG,
Utils.SHELL_UID, String.valueOf(configId));
Utils.getReportList(configId, true , true , sLogger);
} catch (InterruptedException | IOException e) {
sLogger.severe(""Failed to remove config: "" + e.getMessage());
return false;
}
}",1,0,0,0,0,0,0,0,0,6,2,10,0,0,1,1,3,1,2,0,2,0.62,26,19
5810_31,31,38,"try {
Utils.runCommand(null, sLogger, ""adb"", ""shell"", Utils.CMD_REMOVE_CONFIG,
Utils.SHELL_UID, String.valueOf(configId));
Utils.getReportList(configId, true , true , sLogger);
} catch (InterruptedException | IOException e) {
sLogger.severe(""Failed to remove config: "" + e.getMessage());
return false;
}",0,0,0,0,1,0,0,0,0,5,1,8,0,0,0,0,3,1,2,0,2,0.62,27,19
5810_32,32,33,"Utils.runCommand(null, sLogger, ""adb"", ""shell"", Utils.CMD_REMOVE_CONFIG,
Utils.SHELL_UID, String.valueOf(configId));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,3,1,2,0,1,0.48,28,20
5810_34,34,34,"Utils.getReportList(configId, true , true , sLogger);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,2,0,2,0.59,30,22
5810_35,35,35,} catch (InterruptedException | IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.29,31,22
5810_36,36,36,"sLogger.severe(""Failed to remove config: "" + e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,2,0.68,32,23
5810_37,37,37,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.11,33,24
5810_41,41,41,String configLocation;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,1,2,0,1,0.49,37,26
5810_42,42,63,"if (binary) {
configLocation = origConfigLocation;
} else {
StatsdConfig.Builder builder = StatsdConfig.newBuilder();
try {
TextFormat.merge(new FileReader(origConfigLocation), builder);
} catch (IOException e) {
sLogger.severe(""Failed to read config file "" + origConfigLocation + "": ""
+ e.getMessage());
return false;
}

try {
File tempConfigFile = File.createTempFile(""statsdconfig"", "".config"");
tempConfigFile.deleteOnExit();
Files.write(builder.build().toByteArray(), tempConfigFile);
configLocation = tempConfigFile.getAbsolutePath();
} catch (IOException e) {
sLogger.severe(""Failed to write temp config file: "" + e.getMessage());
return false;
}
}",1,0,0,0,0,0,0,0,0,16,2,22,0,1,0,0,3,1,2,0,3,0.76,38,26
5810_43,43,43,configLocation = origConfigLocation;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,1,0.53,39,27
5810_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.09,40,28
5810_45,45,45,StatsdConfig.Builder builder = StatsdConfig.newBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,2,0,1,0.47,41,29
5810_46,46,52,"try {
TextFormat.merge(new FileReader(origConfigLocation), builder);
} catch (IOException e) {
sLogger.severe(""Failed to read config file "" + origConfigLocation + "": ""
+ e.getMessage());
return false;
}",0,0,0,0,1,0,0,0,0,4,1,7,0,1,0,1,3,1,2,0,3,0.72,42,30
5810_47,47,47,"TextFormat.merge(new FileReader(origConfigLocation), builder);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,2,0.61,43,31
5810_48,48,48,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.3,44,32
5810_49,49,50,"sLogger.severe(""Failed to read config file "" + origConfigLocation + "": ""
+ e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,2,0,3,0.77,45,33
5810_51,51,51,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.11,47,35
5810_54,54,62,"try {
File tempConfigFile = File.createTempFile(""statsdconfig"", "".config"");
tempConfigFile.deleteOnExit();
Files.write(builder.build().toByteArray(), tempConfigFile);
configLocation = tempConfigFile.getAbsolutePath();
} catch (IOException e) {
sLogger.severe(""Failed to write temp config file: "" + e.getMessage());
return false;
}",0,0,0,0,1,0,0,0,0,7,1,9,0,0,1,0,3,1,2,0,3,0.8,50,36
5810_55,55,55,"File tempConfigFile = File.createTempFile(""statsdconfig"", "".config"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,2,0,2,0.8,51,36
5810_56,56,56,tempConfigFile.deleteOnExit();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,2,0,2,0.71,52,37
5810_57,57,57,"Files.write(builder.build().toByteArray(), tempConfigFile);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,2,0,2,0.65,53,38
5810_58,58,58,configLocation = tempConfigFile.getAbsolutePath();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,2,0,3,0.87,54,39
5810_59,59,59,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.3,55,40
5810_60,60,60,"sLogger.severe(""Failed to write temp config file: "" + e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,3,0.78,56,41
5810_61,61,61,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.11,57,42
5810_64,64,64,"String remotePath = ""/data/local/tmp/statsdconfig.config"";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,2,0,1,0.51,60,44
5810_65,65,72,"try {
Utils.runCommand(null, sLogger, ""adb"", ""push"", configLocation, remotePath);
Utils.runCommand(null, sLogger, ""adb"", ""shell"", ""cat"", remotePath, ""|"",
Utils.CMD_UPDATE_CONFIG, Utils.SHELL_UID, String.valueOf(configId));
} catch (InterruptedException | IOException e) {
sLogger.severe(""Failed to update config: "" + e.getMessage());
return false;
}",0,0,0,0,1,0,0,0,0,5,1,8,0,1,0,0,3,1,2,0,2,0.61,61,44
5810_66,66,66,"Utils.runCommand(null, sLogger, ""adb"", ""push"", configLocation, remotePath);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,2,0,1,0.48,62,45
5810_67,67,68,"Utils.runCommand(null, sLogger, ""adb"", ""shell"", ""cat"", remotePath, ""|"",
Utils.CMD_UPDATE_CONFIG, Utils.SHELL_UID, String.valueOf(configId));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,3,1,2,0,1,0.49,63,46
5810_69,69,69,} catch (InterruptedException | IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.29,65,48
5810_70,70,70,"sLogger.severe(""Failed to update config: "" + e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,2,0.68,66,48
5810_71,71,71,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.11,67,49
5810_73,73,73,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.15,69,51
5628_1,1,1,"    public static Resource getWrappedImageResourceWithInheritance(Resource resource, LinkHandler linkHandler) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.6,50,38
5628_2,2,5,"if (resource == null) {
LOGGER.error(""The resource is not defined"");
return null;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,5,5,0,0,0,0.39,46,35
5628_3,3,3,"LOGGER.error(""The resource is not defined"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.44,48,36
5628_4,4,4,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.25,47,35
5628_7,7,7,ResourceResolver resourceResolver = resource.getResourceResolver();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,5,0,0,0,0.38,44,34
5628_8,8,8,ValueMap properties = resource.getValueMap();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.34,43,33
5628_9,9,9,"String fileReference = properties.get(DownloadResource.PN_REFERENCE, String.class);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.41,42,32
5628_10,10,10,Resource fileResource = resource.getChild(DownloadResource.NN_FILE);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.38,41,31
5628_11,11,11,"boolean imageFromPageImage = properties.get(PN_IMAGE_FROM_PAGE_IMAGE, StringUtils.isEmpty(fileReference) && fileResource == null);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,5,0,0,2,0.68,40,30
5628_12,12,12,"boolean altValueFromPageImage = properties.get(PN_ALT_VALUE_FROM_PAGE_IMAGE, imageFromPageImage);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,5,5,0,0,2,0.74,39,29
5628_14,14,61,"if (imageFromPageImage) {
Resource inheritedResource = null;
if (linkHandler != null) {
Optional<Link> link = linkHandler.getLink(resource);
if (link.isPresent()) {
Page linkedPage = (Page) link.get().getReference();
if (linkedPage != null) {
inheritedResource = ComponentUtils.getFeaturedImage(linkedPage);
}
} else {
PageManager pageManager = resourceResolver.adaptTo(PageManager.class);
if (pageManager != null) {
Page page = pageManager.getContainingPage(resource);
if (page != null) {
inheritedResource = ComponentUtils.getFeaturedImage(page);
}
}
}
}

String inheritedFileReference = null;
Resource inheritedFileResource = null;
String inheritedAlt = null;
String inheritedAltValueFromDAM = null;
if (inheritedResource != null) {
ValueMap inheritedProperties = inheritedResource.getValueMap();
inheritedFileReference = inheritedProperties.get(DownloadResource.PN_REFERENCE, String.class);
inheritedFileResource = inheritedResource.getChild(DownloadResource.NN_FILE);
inheritedAlt = inheritedProperties.get(ImageResource.PN_ALT, String.class);
inheritedAltValueFromDAM = inheritedProperties.get(PN_ALT_VALUE_FROM_DAM, String.class);

}

List<String> hiddenProperties = new ArrayList<>();
Map<String, String> overriddenProperties = new HashMap<>();
Map<String, Resource> overriddenChildren = new HashMap<>();
overriddenProperties.put(DownloadResource.PN_REFERENCE, inheritedFileReference);
overriddenChildren.put(DownloadResource.NN_FILE, inheritedFileResource);
overriddenProperties.put(PN_TITLE_VALUE_FROM_DAM, ""false"");
if (altValueFromPageImage) {
overriddenProperties.put(ImageResource.PN_ALT, inheritedAlt);
overriddenProperties.put(PN_ALT_VALUE_FROM_DAM, inheritedAltValueFromDAM);
} else {
overriddenProperties.put(PN_ALT_VALUE_FROM_DAM, ""false"");
}

return new CoreResourceWrapper(resource, resource.getResourceType(), hiddenProperties, overriddenProperties, overriddenChildren);
}",1,0,0,0,0,0,0,0,0,35,5,48,0,0,1,0,5,5,0,0,4,0.76,0,0
5628_15,15,15,Resource inheritedResource = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.5,36,27
5628_16,16,32,"if (linkHandler != null) {
Optional<Link> link = linkHandler.getLink(resource);
if (link.isPresent()) {
Page linkedPage = (Page) link.get().getReference();
if (linkedPage != null) {
inheritedResource = ComponentUtils.getFeaturedImage(linkedPage);
}
} else {
PageManager pageManager = resourceResolver.adaptTo(PageManager.class);
if (pageManager != null) {
Page page = pageManager.getContainingPage(resource);
if (page != null) {
inheritedResource = ComponentUtils.getFeaturedImage(page);
}
}
}
}",1,0,0,0,0,0,0,0,0,11,4,17,0,1,0,1,5,5,0,0,3,0.72,19,15
5628_17,17,17,Optional<Link> link = linkHandler.getLink(resource);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.35,34,25
5628_18,18,31,"if (link.isPresent()) {
Page linkedPage = (Page) link.get().getReference();
if (linkedPage != null) {
inheritedResource = ComponentUtils.getFeaturedImage(linkedPage);
}
} else {
PageManager pageManager = resourceResolver.adaptTo(PageManager.class);
if (pageManager != null) {
Page page = pageManager.getContainingPage(resource);
if (page != null) {
inheritedResource = ComponentUtils.getFeaturedImage(page);
}
}
}",1,0,0,0,0,0,0,0,0,9,3,14,0,1,0,0,5,5,0,0,3,0.74,20,15
5628_19,19,19,Page linkedPage = (Page) link.get().getReference();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.54,32,23
5628_20,20,22,"if (linkedPage != null) {
inheritedResource = ComponentUtils.getFeaturedImage(linkedPage);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,5,0,0,3,0.74,29,21
5628_21,21,21,inheritedResource = ComponentUtils.getFeaturedImage(linkedPage);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,3,0.74,30,21
5628_23,23,23,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.19,28,20
5628_24,24,24,PageManager pageManager = resourceResolver.adaptTo(PageManager.class);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.58,27,19
5628_25,25,30,"if (pageManager != null) {
Page page = pageManager.getContainingPage(resource);
if (page != null) {
inheritedResource = ComponentUtils.getFeaturedImage(page);
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,0,5,5,0,0,3,0.77,21,15
5628_26,26,26,Page page = pageManager.getContainingPage(resource);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.58,25,17
5628_27,27,29,"if (page != null) {
inheritedResource = ComponentUtils.getFeaturedImage(page);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,5,0,0,3,0.76,22,15
5628_28,28,28,inheritedResource = ComponentUtils.getFeaturedImage(page);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,3,0.76,23,15
5628_34,34,34,String inheritedFileReference = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,5,0,0,1,0.49,17,14
5628_35,35,35,Resource inheritedFileResource = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.48,16,13
5628_36,36,36,String inheritedAlt = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.55,15,12
5628_37,37,37,String inheritedAltValueFromDAM = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.56,14,11
5628_38,38,45,"if (inheritedResource != null) {
ValueMap inheritedProperties = inheritedResource.getValueMap();
inheritedFileReference = inheritedProperties.get(DownloadResource.PN_REFERENCE, String.class);
inheritedFileResource = inheritedResource.getChild(DownloadResource.NN_FILE);
inheritedAlt = inheritedProperties.get(ImageResource.PN_ALT, String.class);
inheritedAltValueFromDAM = inheritedProperties.get(PN_ALT_VALUE_FROM_DAM, String.class);

}",1,0,0,0,0,0,0,0,0,5,1,8,0,1,0,1,5,5,0,0,2,0.68,6,5
5628_39,39,39,ValueMap inheritedProperties = inheritedResource.getValueMap();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.49,12,9
5628_40,40,40,"inheritedFileReference = inheritedProperties.get(DownloadResource.PN_REFERENCE, String.class);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.51,11,8
5628_41,41,41,inheritedFileResource = inheritedResource.getChild(DownloadResource.NN_FILE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.5,10,7
5628_42,42,42,"inheritedAlt = inheritedProperties.get(ImageResource.PN_ALT, String.class);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,5,0,0,2,0.7,9,6
5628_43,43,43,"inheritedAltValueFromDAM = inheritedProperties.get(PN_ALT_VALUE_FROM_DAM, String.class);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,5,5,0,0,1,0.58,8,5
5628_47,47,47,List<String> hiddenProperties = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,5,0,0,0,0.33,4,4
5628_48,48,48,"Map<String, String> overriddenProperties = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.46,3,3
5628_49,49,49,"Map<String, Resource> overriddenChildren = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.49,2,2
5628_50,50,50,"overriddenProperties.put(DownloadResource.PN_REFERENCE, inheritedFileReference);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,5,0,0,1,0.52,1,1
5628_51,51,51,"overriddenChildren.put(DownloadResource.NN_FILE, inheritedFileResource);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,5,0,0,1,0.53,0,0
5628_52,52,52,"overriddenProperties.put(PN_TITLE_VALUE_FROM_DAM, ""false"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,5,0,0,1,0.58,0,0
5628_53,53,58,"if (altValueFromPageImage) {
overriddenProperties.put(ImageResource.PN_ALT, inheritedAlt);
overriddenProperties.put(PN_ALT_VALUE_FROM_DAM, inheritedAltValueFromDAM);
} else {
overriddenProperties.put(PN_ALT_VALUE_FROM_DAM, ""false"");
}",1,0,0,0,0,0,0,0,0,4,1,6,1,1,0,1,5,5,0,0,3,0.73,1,0
5628_54,54,54,"overriddenProperties.put(ImageResource.PN_ALT, inheritedAlt);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,5,0,0,2,0.7,2,1
5628_55,55,55,"overriddenProperties.put(PN_ALT_VALUE_FROM_DAM, inheritedAltValueFromDAM);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,5,0,0,1,0.58,3,2
5628_56,56,56,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.19,4,3
5628_57,57,57,"overriddenProperties.put(PN_ALT_VALUE_FROM_DAM, ""false"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.51,5,4
5628_60,60,60,"return new CoreResourceWrapper(resource, resource.getResourceType(), hiddenProperties, overriddenProperties, overriddenChildren);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,5,0,0,0,0.49,8,6
5628_62,62,62,return resource;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.3,10,7
5627_1,1,1,"    public static Resource getWrappedImageResourceWithInheritance(Resource resource, LinkHandler linkHandler) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.53,32,23
5627_2,2,5,"if (resource == null) {
LOGGER.error(""The resource is not defined"");
return null;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,3,3,0,0,1,0.54,28,20
5627_3,3,3,"LOGGER.error(""The resource is not defined"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.6,30,21
5627_4,4,4,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.22,29,20
5627_7,7,7,ResourceResolver resourceResolver = resource.getResourceResolver();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.32,26,19
5627_8,8,8,ValueMap properties = resource.getValueMap();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.56,25,18
5627_9,9,9,"String fileReference = properties.get(DownloadResource.PN_REFERENCE, String.class);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.59,24,17
5627_10,10,10,Resource fileResource = resource.getChild(DownloadResource.NN_FILE);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.35,23,16
5627_11,11,11,"boolean imageFromPageImage = properties.get(PN_IMAGE_FROM_PAGE_IMAGE, StringUtils.isEmpty(fileReference) && fileResource == null);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,3,0,0,1,0.54,22,15
5627_12,12,12,"boolean altValueFromPageImage = properties.get(PN_ALT_VALUE_FROM_PAGE_IMAGE, imageFromPageImage);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,3,3,0,0,1,0.57,21,14
5627_14,14,61,"if (imageFromPageImage) {
Resource inheritedResource = null;
if (linkHandler != null) {
Optional<Link> link = linkHandler.getLink(resource);
if (link.isPresent()) {
Page linkedPage = (Page) link.get().getReference();
if (linkedPage != null) {
inheritedResource = ComponentUtils.getFeaturedImage(linkedPage);
}
} else {
PageManager pageManager = resourceResolver.adaptTo(PageManager.class);
if (pageManager != null) {
Page page = pageManager.getContainingPage(resource);
if (page != null) {
inheritedResource = ComponentUtils.getFeaturedImage(page);
}
}
}
}

String inheritedFileReference = null;
Resource inheritedFileResource = null;
String inheritedAlt = null;
String inheritedAltValueFromDAM = null;
if (inheritedResource != null) {
ValueMap inheritedProperties = inheritedResource.getValueMap();
inheritedFileReference = inheritedProperties.get(DownloadResource.PN_REFERENCE, String.class);
inheritedFileResource = inheritedResource.getChild(DownloadResource.NN_FILE);
inheritedAlt = inheritedProperties.get(ImageResource.PN_ALT, String.class);
inheritedAltValueFromDAM = inheritedProperties.get(PN_ALT_VALUE_FROM_DAM, String.class);

}

List<String> hiddenProperties = new ArrayList<>();
Map<String, String> overriddenProperties = new HashMap<>();
Map<String, Resource> overriddenChildren = new HashMap<>();
overriddenProperties.put(DownloadResource.PN_REFERENCE, inheritedFileReference);
overriddenChildren.put(DownloadResource.NN_FILE, inheritedFileResource);
overriddenProperties.put(PN_TITLE_VALUE_FROM_DAM, ""false"");
if (altValueFromPageImage) {
overriddenProperties.put(ImageResource.PN_ALT, inheritedAlt);
overriddenProperties.put(PN_ALT_VALUE_FROM_DAM, inheritedAltValueFromDAM);
} else {
overriddenProperties.put(PN_ALT_VALUE_FROM_DAM, ""false"");
}

return new CoreResourceWrapper(resource, resource.getResourceType(), hiddenProperties, overriddenProperties, overriddenChildren);
}",1,0,0,0,0,0,0,0,0,35,5,48,0,0,1,0,3,3,0,0,2,0.68,0,0
5627_15,15,15,Resource inheritedResource = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.55,18,12
5627_16,16,32,"if (linkHandler != null) {
Optional<Link> link = linkHandler.getLink(resource);
if (link.isPresent()) {
Page linkedPage = (Page) link.get().getReference();
if (linkedPage != null) {
inheritedResource = ComponentUtils.getFeaturedImage(linkedPage);
}
} else {
PageManager pageManager = resourceResolver.adaptTo(PageManager.class);
if (pageManager != null) {
Page page = pageManager.getContainingPage(resource);
if (page != null) {
inheritedResource = ComponentUtils.getFeaturedImage(page);
}
}
}
}",1,0,0,0,0,0,0,0,0,11,4,17,0,1,0,1,3,3,0,0,1,0.49,1,0
5627_17,17,17,Optional<Link> link = linkHandler.getLink(resource);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.36,16,10
5627_18,18,31,"if (link.isPresent()) {
Page linkedPage = (Page) link.get().getReference();
if (linkedPage != null) {
inheritedResource = ComponentUtils.getFeaturedImage(linkedPage);
}
} else {
PageManager pageManager = resourceResolver.adaptTo(PageManager.class);
if (pageManager != null) {
Page page = pageManager.getContainingPage(resource);
if (page != null) {
inheritedResource = ComponentUtils.getFeaturedImage(page);
}
}
}",1,0,0,0,0,0,0,0,0,9,3,14,0,1,0,0,3,3,0,0,1,0.49,2,0
5627_19,19,19,Page linkedPage = (Page) link.get().getReference();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.34,14,8
5627_20,20,22,"if (linkedPage != null) {
inheritedResource = ComponentUtils.getFeaturedImage(linkedPage);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,1,0.51,11,6
5627_21,21,21,inheritedResource = ComponentUtils.getFeaturedImage(linkedPage);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.52,12,6
5627_23,23,23,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.17,10,5
5627_24,24,24,PageManager pageManager = resourceResolver.adaptTo(PageManager.class);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.39,9,4
5627_25,25,30,"if (pageManager != null) {
Page page = pageManager.getContainingPage(resource);
if (page != null) {
inheritedResource = ComponentUtils.getFeaturedImage(page);
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,0,3,3,0,0,1,0.49,3,0
5627_26,26,26,Page page = pageManager.getContainingPage(resource);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.34,7,2
5627_27,27,29,"if (page != null) {
inheritedResource = ComponentUtils.getFeaturedImage(page);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,1,0.51,4,0
5627_28,28,28,inheritedResource = ComponentUtils.getFeaturedImage(page);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.53,5,0
5627_34,34,34,String inheritedFileReference = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.54,0,0
5627_35,35,35,Resource inheritedFileResource = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.53,1,0
5627_36,36,36,String inheritedAlt = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.59,2,1
5627_37,37,37,String inheritedAltValueFromDAM = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.61,3,2
5627_38,38,45,"if (inheritedResource != null) {
ValueMap inheritedProperties = inheritedResource.getValueMap();
inheritedFileReference = inheritedProperties.get(DownloadResource.PN_REFERENCE, String.class);
inheritedFileResource = inheritedResource.getChild(DownloadResource.NN_FILE);
inheritedAlt = inheritedProperties.get(ImageResource.PN_ALT, String.class);
inheritedAltValueFromDAM = inheritedProperties.get(PN_ALT_VALUE_FROM_DAM, String.class);

}",1,0,0,0,0,0,0,0,0,5,1,8,0,1,0,1,3,3,0,0,2,0.72,4,3
5627_39,39,39,ValueMap inheritedProperties = inheritedResource.getValueMap();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,2,0.73,5,4
5627_40,40,40,"inheritedFileReference = inheritedProperties.get(DownloadResource.PN_REFERENCE, String.class);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,2,0.71,6,5
5627_41,41,41,inheritedFileResource = inheritedResource.getChild(DownloadResource.NN_FILE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.55,7,6
5627_42,42,42,"inheritedAlt = inheritedProperties.get(ImageResource.PN_ALT, String.class);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,2,0.74,8,7
5627_43,43,43,"inheritedAltValueFromDAM = inheritedProperties.get(PN_ALT_VALUE_FROM_DAM, String.class);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,3,3,0,0,2,0.75,9,8
5627_47,47,47,List<String> hiddenProperties = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.53,13,10
5627_48,48,48,"Map<String, String> overriddenProperties = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.64,14,10
5627_49,49,49,"Map<String, Resource> overriddenChildren = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.51,15,11
5627_50,50,50,"overriddenProperties.put(DownloadResource.PN_REFERENCE, inheritedFileReference);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,2,0.7,16,12
5627_51,51,51,"overriddenChildren.put(DownloadResource.NN_FILE, inheritedFileResource);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.56,17,13
5627_52,52,52,"overriddenProperties.put(PN_TITLE_VALUE_FROM_DAM, ""false"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,1,0.65,18,14
5627_53,53,58,"if (altValueFromPageImage) {
overriddenProperties.put(ImageResource.PN_ALT, inheritedAlt);
overriddenProperties.put(PN_ALT_VALUE_FROM_DAM, inheritedAltValueFromDAM);
} else {
overriddenProperties.put(PN_ALT_VALUE_FROM_DAM, ""false"");
}",1,0,0,0,0,0,0,0,0,4,1,6,1,1,0,1,3,3,0,0,2,0.72,19,15
5627_54,54,54,"overriddenProperties.put(ImageResource.PN_ALT, inheritedAlt);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,2,0.74,20,16
5627_55,55,55,"overriddenProperties.put(PN_ALT_VALUE_FROM_DAM, inheritedAltValueFromDAM);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,2,0.75,21,17
5627_56,56,56,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.17,22,18
5627_57,57,57,"overriddenProperties.put(PN_ALT_VALUE_FROM_DAM, ""false"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.66,23,19
5627_60,60,60,"return new CoreResourceWrapper(resource, resource.getResourceType(), hiddenProperties, overriddenProperties, overriddenChildren);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.64,26,21
5627_62,62,62,return resource;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.26,28,22
5626_1,1,2,"    @NotNull
public static Set<String> getStrings(@Nullable final Object input) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,1,0.47,16,12
5626_3,3,3,Set<String> strings = new LinkedHashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.5,15,11
5626_4,4,25,"if (input != null) {
Class clazz = input.getClass();
if (Collection.class.isAssignableFrom(clazz)) {
for (Object obj : (Collection)input) {
if (obj != null) {
strings.add(obj.toString());
}
}
} else if (Object[].class.isAssignableFrom(clazz)) {
for (Object obj : (Object[]) input) {
if (obj != null) {
strings.add(obj.toString());
}
}
} else if (String.class.isAssignableFrom(clazz)) {
for (String str : ((String)input).split("","")) {
if (StringUtils.isNotBlank(str)) {
strings.add(str.trim());
}
}
}
}",1,0,0,0,0,0,0,0,0,13,4,22,0,1,0,0,4,4,0,0,1,0.48,0,0
5626_5,5,5,Class clazz = input.getClass();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.27,13,9
5626_6,6,24,"if (Collection.class.isAssignableFrom(clazz)) {
for (Object obj : (Collection)input) {
if (obj != null) {
strings.add(obj.toString());
}
}
} else if (Object[].class.isAssignableFrom(clazz)) {
for (Object obj : (Object[]) input) {
if (obj != null) {
strings.add(obj.toString());
}
}
} else if (String.class.isAssignableFrom(clazz)) {
for (String str : ((String)input).split("","")) {
if (StringUtils.isNotBlank(str)) {
strings.add(str.trim());
}
}
}",1,0,0,0,0,0,0,0,0,11,3,19,0,1,0,0,4,4,0,0,1,0.49,0,0
5626_7,7,11,"for (Object obj : (Collection)input) {
if (obj != null) {
strings.add(obj.toString());
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,4,4,0,0,1,0.46,7,5
5626_8,8,10,"if (obj != null) {
strings.add(obj.toString());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,4,0,0,1,0.5,8,5
5626_9,9,9,strings.add(obj.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.57,9,5
5626_12,12,12,} else if (Object[].class.isAssignableFrom(clazz)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.33,6,4
5626_13,13,17,"for (Object obj : (Object[]) input) {
if (obj != null) {
strings.add(obj.toString());
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,4,4,0,0,1,0.46,1,1
5626_14,14,16,"if (obj != null) {
strings.add(obj.toString());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,4,0,0,1,0.5,2,1
5626_15,15,15,strings.add(obj.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.57,3,1
5626_18,18,18,} else if (String.class.isAssignableFrom(clazz)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.47,0,0
5626_19,19,23,"for (String str : ((String)input).split("","")) {
if (StringUtils.isNotBlank(str)) {
strings.add(str.trim());
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,4,4,0,0,1,0.54,0,0
5626_20,20,22,"if (StringUtils.isNotBlank(str)) {
strings.add(str.trim());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,4,0,0,1,0.53,1,0
5626_21,21,21,strings.add(str.trim());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.51,2,1
5626_26,26,26,return strings;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.5,7,3
5625_1,1,2,"    @NotNull
public static Set<String> getStrings(@Nullable final Object input) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.4,10,8
5625_3,3,3,Set<String> strings = new LinkedHashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.36,9,7
5625_4,4,25,"if (input != null) {
Class clazz = input.getClass();
if (Collection.class.isAssignableFrom(clazz)) {
for (Object obj : (Collection)input) {
if (obj != null) {
strings.add(obj.toString());
}
}
} else if (Object[].class.isAssignableFrom(clazz)) {
for (Object obj : (Object[]) input) {
if (obj != null) {
strings.add(obj.toString());
}
}
} else if (String.class.isAssignableFrom(clazz)) {
for (String str : ((String)input).split("","")) {
if (StringUtils.isNotBlank(str)) {
strings.add(str.trim());
}
}
}
}",1,0,0,0,0,0,0,0,0,13,4,22,0,1,0,0,3,3,0,0,0,0.4,0,0
5625_5,5,5,Class clazz = input.getClass();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.3,7,5
5625_6,6,24,"if (Collection.class.isAssignableFrom(clazz)) {
for (Object obj : (Collection)input) {
if (obj != null) {
strings.add(obj.toString());
}
}
} else if (Object[].class.isAssignableFrom(clazz)) {
for (Object obj : (Object[]) input) {
if (obj != null) {
strings.add(obj.toString());
}
}
} else if (String.class.isAssignableFrom(clazz)) {
for (String str : ((String)input).split("","")) {
if (StringUtils.isNotBlank(str)) {
strings.add(str.trim());
}
}
}",1,0,0,0,0,0,0,0,0,11,3,19,0,1,0,0,3,3,0,0,0,0.4,0,0
5625_7,7,11,"for (Object obj : (Collection)input) {
if (obj != null) {
strings.add(obj.toString());
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,3,3,0,0,0,0.37,1,1
5625_8,8,10,"if (obj != null) {
strings.add(obj.toString());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,0,0.36,2,1
5625_9,9,9,strings.add(obj.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,3,1
5625_12,12,12,} else if (Object[].class.isAssignableFrom(clazz)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.35,0,0
5625_13,13,17,"for (Object obj : (Object[]) input) {
if (obj != null) {
strings.add(obj.toString());
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,3,3,0,0,0,0.36,0,0
5625_14,14,16,"if (obj != null) {
strings.add(obj.toString());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,0,0.36,1,0
5625_15,15,15,strings.add(obj.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,2,1
5625_18,18,18,} else if (String.class.isAssignableFrom(clazz)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.37,5,3
5625_19,19,23,"for (String str : ((String)input).split("","")) {
if (StringUtils.isNotBlank(str)) {
strings.add(str.trim());
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,3,3,0,0,0,0.39,6,3
5625_20,20,22,"if (StringUtils.isNotBlank(str)) {
strings.add(str.trim());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,0,0.39,7,4
5625_21,21,21,strings.add(str.trim());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.39,8,5
5625_26,26,26,return strings;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.33,13,7
5624_1,1,2,"    @NotNull
public static Set<String> getStrings(@Nullable final Object input) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.38,4,4
5624_3,3,3,Set<String> strings = new LinkedHashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.35,3,3
5624_4,4,25,"if (input != null) {
Class clazz = input.getClass();
if (Collection.class.isAssignableFrom(clazz)) {
for (Object obj : (Collection)input) {
if (obj != null) {
strings.add(obj.toString());
}
}
} else if (Object[].class.isAssignableFrom(clazz)) {
for (Object obj : (Object[]) input) {
if (obj != null) {
strings.add(obj.toString());
}
}
} else if (String.class.isAssignableFrom(clazz)) {
for (String str : ((String)input).split("","")) {
if (StringUtils.isNotBlank(str)) {
strings.add(str.trim());
}
}
}
}",1,0,0,0,0,0,0,0,0,13,4,22,0,1,0,0,3,3,0,0,1,0.5,0,0
5624_5,5,5,Class clazz = input.getClass();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.31,1,1
5624_6,6,24,"if (Collection.class.isAssignableFrom(clazz)) {
for (Object obj : (Collection)input) {
if (obj != null) {
strings.add(obj.toString());
}
}
} else if (Object[].class.isAssignableFrom(clazz)) {
for (Object obj : (Object[]) input) {
if (obj != null) {
strings.add(obj.toString());
}
}
} else if (String.class.isAssignableFrom(clazz)) {
for (String str : ((String)input).split("","")) {
if (StringUtils.isNotBlank(str)) {
strings.add(str.trim());
}
}
}",1,0,0,0,0,0,0,0,0,11,3,19,0,1,0,0,3,3,0,0,1,0.51,0,0
5624_7,7,11,"for (Object obj : (Collection)input) {
if (obj != null) {
strings.add(obj.toString());
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,3,3,0,0,1,0.5,0,0
5624_8,8,10,"if (obj != null) {
strings.add(obj.toString());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,0,0.37,1,0
5624_9,9,9,strings.add(obj.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,2,1
5624_12,12,12,} else if (Object[].class.isAssignableFrom(clazz)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.35,5,3
5624_13,13,17,"for (Object obj : (Object[]) input) {
if (obj != null) {
strings.add(obj.toString());
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,3,3,0,0,0,0.36,6,3
5624_14,14,16,"if (obj != null) {
strings.add(obj.toString());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,0,0.37,7,4
5624_15,15,15,strings.add(obj.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,8,5
5624_18,18,18,} else if (String.class.isAssignableFrom(clazz)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.35,11,7
5624_19,19,23,"for (String str : ((String)input).split("","")) {
if (StringUtils.isNotBlank(str)) {
strings.add(str.trim());
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,3,3,0,0,0,0.42,12,7
5624_20,20,22,"if (StringUtils.isNotBlank(str)) {
strings.add(str.trim());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,0,0.41,13,8
5624_21,21,21,strings.add(str.trim());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.41,14,9
5624_26,26,26,return strings;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.28,19,11
5261_1,1,2,"    @Override
public void onPlayStateChanged() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,1,0,0,0.38,2,1
5261_3,3,3,super.onPlayStateChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,1,0,0,0.37,1,0
5261_5,5,5,getAdapter().notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,1,0.5,0,0
5260_1,1,2,"    @Override
public void onPlayingMetaChanged() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,1,0,0,0.38,2,1
5260_3,3,3,super.onPlayingMetaChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,1,0,0,0.37,1,0
5260_5,5,5,getAdapter().notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,1,0.5,0,0
5251_1,1,2,"        @Override
public void onCreatePreferences(Bundle bundle, String s) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,4,1,0,0,0.41,9,8
5251_3,3,3,addPreferencesFromResource(R.xml.pref_library);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,4,1,0,0,0.43,8,7
5251_4,4,4,addPreferencesFromResource(R.xml.pref_colors);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,4,1,0,0,0.43,7,6
5251_5,5,5,addPreferencesFromResource(R.xml.pref_notification);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,4,1,0,0,0.45,6,5
5251_6,6,6,addPreferencesFromResource(R.xml.pref_now_playing_screen);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,4,1,0,0,0.44,5,4
5251_7,7,7,addPreferencesFromResource(R.xml.pref_images);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,4,1,0,0,0.42,4,3
5251_8,8,8,addPreferencesFromResource(R.xml.pref_lockscreen);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,4,1,0,0,0.42,3,2
5251_9,9,9,addPreferencesFromResource(R.xml.pref_audio);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,4,1,0,0,0.44,2,1
5251_10,10,10,addPreferencesFromResource(R.xml.pref_playlists);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,7,4,1,0,0,0.45,1,0
5251_12,12,12,final String strSummaryWhitelist = getString(R.string.pref_summary_whitelist);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,4,1,0,2,0.6,0,0
5251_13,13,13,final File startDirectory = PreferenceUtil.getInstance().getStartDirectory();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,2,0.57,1,0
5251_14,14,14,final String startPath = FileUtil.safeGetCanonicalPath(startDirectory);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,2,0.54,2,1
5251_15,15,15,findPreference(PreferenceUtil.WHITELIST_ENABLED).setSummary(strSummaryWhitelist+startPath);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,7,4,1,0,4,0.72,3,2
5249_1,1,2,"    @Override
public void cleanup() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,7,0,0,0,0.37,0,0
5249_3,3,8,"if (stream != null) {
try {
stream.close();
} catch (IOException ignore) {
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,0,0,9,7,0,0,1,0.53,0,0
5249_4,4,7,"try {
stream.close();
} catch (IOException ignore) {
}",0,0,0,0,1,0,0,0,0,2,1,4,0,0,0,0,9,7,0,0,1,0.53,1,0
5249_5,5,5,stream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,1,0.58,2,1
5249_6,6,6,} catch (IOException ignore) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.46,3,2
5248_1,1,1,throws FileNotFoundException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,5,0,0,1,0.45,11,8
5248_2,2,11,"try {
MP3File mp3File = new MP3File(path);
if (mp3File.hasID3v2Tag()) {
Artwork art = mp3File.getTag().getFirstArtwork();
if (art != null) {
byte[] imageData = art.getBinaryData();
return new ByteArrayInputStream(imageData);
}
}
} catch (Exception ignored) { }",0,0,0,0,1,0,0,0,0,7,3,10,0,0,0,1,7,5,0,0,1,0.47,1,0
5248_3,3,3,MP3File mp3File = new MP3File(path);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,0,0,0,0.31,9,6
5248_4,4,10,"if (mp3File.hasID3v2Tag()) {
Artwork art = mp3File.getTag().getFirstArtwork();
if (art != null) {
byte[] imageData = art.getBinaryData();
return new ByteArrayInputStream(imageData);
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,1,0,0,7,5,0,0,1,0.47,2,1
5248_5,5,5,Artwork art = mp3File.getTag().getFirstArtwork();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,0,0,1,0.41,7,4
5248_6,6,9,"if (art != null) {
byte[] imageData = art.getBinaryData();
return new ByteArrayInputStream(imageData);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,7,5,0,0,1,0.47,3,1
5248_7,7,7,byte[] imageData = art.getBinaryData();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,0,0,1,0.47,5,2
5248_8,8,8,return new ByteArrayInputStream(imageData);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,7,5,0,0,0,0.35,4,1
5248_11,11,11,} catch (Exception ignored) { },0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,5,0,0,0,0.29,1,0
5248_13,13,13,File parent = new File(path).getParentFile();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,5,0,0,1,0.51,0,0
5248_14,14,19,"for (String fallback : FALLBACKS) {
File cover = new File(parent, fallback);
if (cover.exists()) {
return stream = new FileInputStream(cover);
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,0,7,5,0,0,1,0.61,1,0
5248_15,15,15,"File cover = new File(parent, fallback);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,0,0,1,0.65,2,1
5248_16,16,18,"if (cover.exists()) {
return stream = new FileInputStream(cover);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,5,0,0,1,0.58,3,2
5248_17,17,17,return stream = new FileInputStream(cover);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,5,0,0,1,0.57,4,3
5248_20,20,20,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.28,7,5
5235_1,1,2,"@NonNull
private List<MediaBrowserCompat.MediaItem> getAllPlaylistsChildren(@NonNull Resources resources) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,15,9,1,0,2,0.56,45,35
5235_3,3,3,List<MediaBrowserCompat.MediaItem> mediaItems = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,15,9,1,0,1,0.5,44,34
5235_5,5,5,PreferenceUtil prefs = PreferenceUtil.getInstance();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,15,9,1,0,0,0.35,42,33
5235_6,6,15,"if (prefs.getLastAddedCutoffTimeSecs() > 0) {
mediaItems.add(AutoMediaItem.with(mContext)
.path(AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_LAST_ADDED)
.title(resources.getString(R.string.last_added))
.subTitle(new LastAddedPlaylist(mContext).getInfoString(mContext))
.icon(R.drawable.ic_library_add_white_24dp)
.asBrowsable()
.build()
);
}",1,0,0,0,0,0,0,0,0,7,1,10,1,1,0,0,15,9,1,0,4,0.59,32,25
5235_7,7,7,mediaItems.add(AutoMediaItem.with(mContext),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,1,0.48,40,31
5235_8,8,8,.path(AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_LAST_ADDED),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,3,0.58,39,30
5235_9,9,9,.title(resources.getString(R.string.last_added)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,0,0.4,38,29
5235_10,10,10,.subTitle(new LastAddedPlaylist(mContext).getInfoString(mContext)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,1,0.5,37,28
5235_11,11,11,.icon(R.drawable.ic_library_add_white_24dp),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,0,0.46,36,27
5235_12,12,12,.asBrowsable(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,0,0.48,35,26
5235_13,13,13,.build(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,0,0.39,34,25
5235_16,16,25,"if (prefs.getRecentlyPlayedCutoffTimeMillis() > 0) {
mediaItems.add(AutoMediaItem.with(mContext)
.path(AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_HISTORY)
.title(resources.getString(R.string.history_label))
.subTitle(new HistoryPlaylist(mContext).getInfoString(mContext))
.icon(R.drawable.ic_access_time_white_24dp)
.asBrowsable()
.build()
);
}",1,0,0,0,0,0,0,0,0,7,1,10,1,1,0,0,15,9,1,0,4,0.61,22,17
5235_17,17,17,mediaItems.add(AutoMediaItem.with(mContext),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,1,0.48,30,23
5235_18,18,18,.path(AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_HISTORY),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,3,0.62,29,22
5235_19,19,19,.title(resources.getString(R.string.history_label)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,0,0.42,28,21
5235_20,20,20,.subTitle(new HistoryPlaylist(mContext).getInfoString(mContext)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,1,0.51,27,20
5235_21,21,21,.icon(R.drawable.ic_access_time_white_24dp),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,0,0.46,26,19
5235_22,22,22,.asBrowsable(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,0,0.48,25,18
5235_23,23,23,.build(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,0,0.39,24,17
5235_26,26,35,"if (prefs.getNotRecentlyPlayedCutoffTimeMillis() > 0) {
mediaItems.add(AutoMediaItem.with(mContext)
.path(AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_NOT_RECENTLY_PLAYED)
.title(resources.getString(R.string.not_recently_played))
.subTitle(new NotRecentlyPlayedPlaylist(mContext).getInfoString(mContext))
.icon(R.drawable.ic_watch_later_white_24dp)
.asBrowsable()
.build()
);
}",1,0,0,0,0,0,0,0,0,7,1,10,1,1,0,0,15,9,1,0,4,0.62,12,9
5235_27,27,27,mediaItems.add(AutoMediaItem.with(mContext),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,1,0.48,20,15
5235_28,28,28,.path(AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_NOT_RECENTLY_PLAYED),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,3,0.62,19,14
5235_29,29,29,.title(resources.getString(R.string.not_recently_played)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,0,0.46,18,13
5235_30,30,30,.subTitle(new NotRecentlyPlayedPlaylist(mContext).getInfoString(mContext)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,1,0.53,17,12
5235_31,31,31,.icon(R.drawable.ic_watch_later_white_24dp),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,0,0.47,16,11
5235_32,32,32,.asBrowsable(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,0,0.48,15,10
5235_33,33,33,.build(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,0,0.39,14,9
5235_36,36,45,"if (prefs.maintainTopTrackPlaylist()) {
mediaItems.add(AutoMediaItem.with(mContext)
.path(AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_TOP_TRACKS)
.title(resources.getString(R.string.top_tracks_label))
.subTitle(new MyTopTracksPlaylist(mContext).getInfoString(mContext))
.icon(R.drawable.ic_trending_up_white_24dp)
.asBrowsable()
.build()
);
}",1,0,0,0,0,0,0,0,0,7,1,10,1,1,0,1,15,9,1,0,4,0.61,2,1
5235_37,37,37,mediaItems.add(AutoMediaItem.with(mContext),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,1,0.48,10,7
5235_38,38,38,.path(AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_TOP_TRACKS),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,3,0.58,9,6
5235_39,39,39,.title(resources.getString(R.string.top_tracks_label)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,0,0.41,8,5
5235_40,40,40,.subTitle(new MyTopTracksPlaylist(mContext).getInfoString(mContext)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,1,0.5,7,4
5235_41,41,41,.icon(R.drawable.ic_trending_up_white_24dp),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,0,0.47,6,3
5235_42,42,42,.asBrowsable(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,0,0.48,5,2
5235_43,43,43,.build(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,0,0.39,4,1
5235_47,47,58,"for (Playlist entry : PlaylistLoader.getAllPlaylists(mContext)) {
mediaItems.add(AutoMediaItem.with(mContext)
.path(AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_PLAYLIST, entry.id)
.title(entry.name)
.subTitle(entry.getInfoString(mContext))
.icon(MusicUtil.isFavoritePlaylist(mContext, entry)
? R.drawable.ic_favorite_white_24dp
: R.drawable.ic_queue_music_white_24dp)
.asBrowsable()
.build()
);
}",0,0,0,1,0,0,0,0,0,8,1,12,0,0,1,1,15,9,1,0,4,0.64,0,0
5235_48,48,48,mediaItems.add(AutoMediaItem.with(mContext),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,1,0.48,0,0
5235_49,49,49,".path(AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_PLAYLIST, entry.id)",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,15,9,1,0,4,0.7,1,0
5235_50,50,50,.title(entry.name),0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,15,9,1,0,0,0.37,2,1
5235_51,51,51,.subTitle(entry.getInfoString(mContext)),0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,15,9,1,0,0,0.41,3,2
5235_52,52,52,".icon(MusicUtil.isFavoritePlaylist(mContext, entry)",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,15,9,1,0,2,0.53,4,3
5235_53,53,54,"? R.drawable.ic_favorite_white_24dp
: R.drawable.ic_queue_music_white_24dp)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,15,9,1,0,1,0.49,5,4
5235_55,55,55,.asBrowsable(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,0,0.48,7,6
5235_56,56,56,.build(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,9,1,0,0,0.39,8,6
5235_60,60,60,return mediaItems;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,15,9,1,0,1,0.5,12,8
5162_1,1,1,public List<Chunk> split(String pattern) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.59,74,50
5162_2,2,2,int p = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.36,73,49
5162_3,3,3,int n = pattern.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.51,72,48
5162_4,4,4,List<Chunk> chunks = new ArrayList<Chunk>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.56,71,47
5162_5,5,5,StringBuilder buf = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.49,70,46
5162_6,6,6,List<Integer> starts = new ArrayList<Integer>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.36,69,45
5162_7,7,7,List<Integer> stops = new ArrayList<Integer>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.36,68,44
5162_8,8,26,"while ( p<n ) {
if ( p == pattern.indexOf(escape+start,p) ) {
p += escape.length() + start.length();
}
else if ( p == pattern.indexOf(escape+stop,p) ) {
p += escape.length() + stop.length();
}
else if ( p == pattern.indexOf(start,p) ) {
starts.add(p);
p += start.length();
}
else if ( p == pattern.indexOf(stop,p) ) {
stops.add(p);
p += stop.length();
}
else {
p++;
}
}",0,1,0,0,0,0,0,0,0,12,2,19,0,1,0,1,6,5,0,0,1,0.52,49,31
5162_9,9,25,"if ( p == pattern.indexOf(escape+start,p) ) {
p += escape.length() + start.length();
}
else if ( p == pattern.indexOf(escape+stop,p) ) {
p += escape.length() + stop.length();
}
else if ( p == pattern.indexOf(start,p) ) {
starts.add(p);
p += start.length();
}
else if ( p == pattern.indexOf(stop,p) ) {
stops.add(p);
p += stop.length();
}
else {
p++;
}",1,0,0,0,0,0,0,0,0,11,1,17,0,0,0,0,6,5,0,0,1,0.51,50,31
5162_10,10,10,p += escape.length() + start.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.55,65,41
5162_12,12,12,"else if ( p == pattern.indexOf(escape+stop,p) ) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.53,63,40
5162_13,13,13,p += escape.length() + stop.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.54,62,39
5162_15,15,15,"else if ( p == pattern.indexOf(start,p) ) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.48,60,38
5162_16,16,16,starts.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.35,59,37
5162_17,17,17,p += start.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.43,58,36
5162_19,19,19,"else if ( p == pattern.indexOf(stop,p) ) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.47,56,35
5162_20,20,20,stops.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.31,55,34
5162_21,21,21,p += stop.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.41,54,33
5162_23,23,23,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.29,52,32
5162_24,24,24,p++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.36,51,31
5162_28,28,30,"if ( starts.size() > stops.size() ) {
throw new IllegalArgumentException(""unterminated tag in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,5,0,0,1,0.56,45,29
5162_29,29,29,"throw new IllegalArgumentException(""unterminated tag in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,5,0,0,1,0.6,46,29
5162_32,32,34,"if ( starts.size() < stops.size() ) {
throw new IllegalArgumentException(""missing start tag in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,5,0,0,1,0.54,41,27
5162_33,33,33,"throw new IllegalArgumentException(""missing start tag in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,5,0,0,1,0.57,42,27
5162_36,36,36,int ntags = starts.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,5,0,0,0,0.33,39,26
5162_37,37,41,"for (int i=0; i<ntags; i++) {
if ( starts.get(i)>=stops.get(i) ) {
throw new IllegalArgumentException(""tag delimiters out of order in pattern: ""+pattern);
}
}",0,0,1,0,0,0,0,0,0,2,2,5,0,1,0,1,6,5,0,0,1,0.55,34,23
5162_38,38,40,"if ( starts.get(i)>=stops.get(i) ) {
throw new IllegalArgumentException(""tag delimiters out of order in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,5,0,0,1,0.56,35,23
5162_39,39,39,"throw new IllegalArgumentException(""tag delimiters out of order in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,5,0,0,1,0.6,36,23
5162_43,43,46,"if ( ntags==0 ) {
String text = pattern.substring(0, n);
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,6,5,0,0,2,0.69,29,20
5162_44,44,44,"String text = pattern.substring(0, n);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.64,31,21
5162_45,45,45,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.65,30,20
5162_48,48,51,"if ( ntags>0 && starts.get(0)>0 ) {
String text = pattern.substring(0, starts.get(0));
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,1,0,6,5,0,0,2,0.63,24,17
5162_49,49,49,"String text = pattern.substring(0, starts.get(0));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.58,26,18
5162_50,50,50,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.65,25,17
5162_52,52,66,"for (int i=0; i<ntags; i++) {
String tag = pattern.substring(starts.get(i) + start.length(), stops.get(i));
String ruleOrToken = tag;
String label = null;
int colon = tag.indexOf(':');
if ( colon >= 0 ) {
label = tag.substring(0,colon);
ruleOrToken = tag.substring(colon+1, tag.length());
}
chunks.add(new TagChunk(label, ruleOrToken));
if ( i+1 < ntags ) {
String text = pattern.substring(stops.get(i) + stop.length(), starts.get(i + 1));
chunks.add(new TextChunk(text));
}
}",0,0,1,0,0,0,0,0,0,11,2,15,1,1,0,0,6,5,0,0,3,0.69,9,5
5162_53,53,53,"String tag = pattern.substring(starts.get(i) + start.length(), stops.get(i));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.58,22,15
5162_54,54,54,String ruleOrToken = tag;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.55,21,14
5162_55,55,55,String label = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.48,20,13
5162_56,56,56,int colon = tag.indexOf(':');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.57,19,12
5162_57,57,60,"if ( colon >= 0 ) {
label = tag.substring(0,colon);
ruleOrToken = tag.substring(colon+1, tag.length());
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,6,5,0,0,1,0.62,15,9
5162_58,58,58,"label = tag.substring(0,colon);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,5,0,0,1,0.64,17,10
5162_59,59,59,"ruleOrToken = tag.substring(colon+1, tag.length());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,5,0,0,1,0.62,16,9
5162_61,61,61,"chunks.add(new TagChunk(label, ruleOrToken));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,5,0,0,2,0.59,14,8
5162_62,62,65,"if ( i+1 < ntags ) {
String text = pattern.substring(stops.get(i) + stop.length(), starts.get(i + 1));
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,6,5,0,0,2,0.63,10,5
5162_63,63,63,"String text = pattern.substring(stops.get(i) + stop.length(), starts.get(i + 1));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.54,12,6
5162_64,64,64,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.65,11,5
5162_67,67,73,"if ( ntags>0 ) {
int afterLastTag = stops.get(ntags - 1) + stop.length();
if ( afterLastTag < n ) {
String text = pattern.substring(afterLastTag, n);
chunks.add(new TextChunk(text));
}
}",1,0,0,0,0,0,0,0,0,4,2,7,1,1,0,1,6,5,0,0,3,0.72,2,0
5162_68,68,68,int afterLastTag = stops.get(ntags - 1) + stop.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.47,7,3
5162_69,69,72,"if ( afterLastTag < n ) {
String text = pattern.substring(afterLastTag, n);
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,6,5,0,0,3,0.78,3,0
5162_70,70,70,"String text = pattern.substring(afterLastTag, n);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.73,5,1
5162_71,71,71,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.65,4,0
5162_75,75,84,"for (int i = 0; i < chunks.size(); i++) {
Chunk c = chunks.get(i);
if ( c instanceof TextChunk ) {
TextChunk tc = (TextChunk)c;
String unescaped = tc.getText().replace(escape, """");
if (unescaped.length() < tc.getText().length()) {
chunks.set(i, new TextChunk(unescaped));
}
}
}",0,0,1,0,0,0,0,0,0,6,3,10,0,0,1,1,6,5,0,0,3,0.72,0,0
5162_76,76,76,Chunk c = chunks.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.56,1,0
5162_77,77,83,"if ( c instanceof TextChunk ) {
TextChunk tc = (TextChunk)c;
String unescaped = tc.getText().replace(escape, """");
if (unescaped.length() < tc.getText().length()) {
chunks.set(i, new TextChunk(unescaped));
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,1,0,0,6,5,0,0,3,0.74,2,1
5162_78,78,78,TextChunk tc = (TextChunk)c;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.72,3,2
5162_79,79,79,"String unescaped = tc.getText().replace(escape, """");",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,5,0,0,2,0.65,4,3
5162_80,80,82,"if (unescaped.length() < tc.getText().length()) {
chunks.set(i, new TextChunk(unescaped));
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,6,5,0,0,2,0.64,5,4
5162_81,81,81,"chunks.set(i, new TextChunk(unescaped));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,2,0.63,6,5
5162_86,86,86,return chunks;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,5,0,0,1,0.54,11,7
5161_1,1,1,public List<Chunk> split(String pattern) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.34,68,48
5161_2,2,2,int p = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.29,67,47
5161_3,3,3,int n = pattern.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.33,66,46
5161_4,4,4,List<Chunk> chunks = new ArrayList<Chunk>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.29,65,45
5161_5,5,5,StringBuilder buf = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.33,64,44
5161_6,6,6,List<Integer> starts = new ArrayList<Integer>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.37,63,43
5161_7,7,7,List<Integer> stops = new ArrayList<Integer>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.34,62,42
5161_8,8,26,"while ( p<n ) {
if ( p == pattern.indexOf(escape+start,p) ) {
p += escape.length() + start.length();
}
else if ( p == pattern.indexOf(escape+stop,p) ) {
p += escape.length() + stop.length();
}
else if ( p == pattern.indexOf(start,p) ) {
starts.add(p);
p += start.length();
}
else if ( p == pattern.indexOf(stop,p) ) {
stops.add(p);
p += stop.length();
}
else {
p++;
}
}",0,1,0,0,0,0,0,0,0,12,2,19,0,1,0,1,6,3,0,0,0,0.35,43,29
5161_9,9,25,"if ( p == pattern.indexOf(escape+start,p) ) {
p += escape.length() + start.length();
}
else if ( p == pattern.indexOf(escape+stop,p) ) {
p += escape.length() + stop.length();
}
else if ( p == pattern.indexOf(start,p) ) {
starts.add(p);
p += start.length();
}
else if ( p == pattern.indexOf(stop,p) ) {
stops.add(p);
p += stop.length();
}
else {
p++;
}",1,0,0,0,0,0,0,0,0,11,1,17,0,0,0,0,6,3,0,0,0,0.35,44,29
5161_10,10,10,p += escape.length() + start.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.35,59,39
5161_12,12,12,"else if ( p == pattern.indexOf(escape+stop,p) ) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.31,57,38
5161_13,13,13,p += escape.length() + stop.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.32,56,37
5161_15,15,15,"else if ( p == pattern.indexOf(start,p) ) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.36,54,36
5161_16,16,16,starts.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.31,53,35
5161_17,17,17,p += start.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.35,52,34
5161_19,19,19,"else if ( p == pattern.indexOf(stop,p) ) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.31,50,33
5161_20,20,20,stops.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.25,49,32
5161_21,21,21,p += stop.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.31,48,31
5161_23,23,23,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.21,46,30
5161_24,24,24,p++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.22,45,29
5161_28,28,30,"if ( starts.size() > stops.size() ) {
throw new IllegalArgumentException(""unterminated tag in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,3,0,0,1,0.45,39,27
5161_29,29,29,"throw new IllegalArgumentException(""unterminated tag in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,3,0,0,1,0.45,40,27
5161_32,32,34,"if ( starts.size() < stops.size() ) {
throw new IllegalArgumentException(""missing start tag in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,3,0,0,1,0.44,35,25
5161_33,33,33,"throw new IllegalArgumentException(""missing start tag in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,3,0,0,1,0.45,36,25
5161_36,36,36,int ntags = starts.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,0,0,0,0.31,33,24
5161_37,37,41,"for (int i=0; i<ntags; i++) {
if ( starts.get(i)>=stops.get(i) ) {
throw new IllegalArgumentException(""tag delimiters out of order in pattern: ""+pattern);
}
}",0,0,1,0,0,0,0,0,0,2,2,5,0,1,0,1,6,3,0,0,1,0.44,28,21
5161_38,38,40,"if ( starts.get(i)>=stops.get(i) ) {
throw new IllegalArgumentException(""tag delimiters out of order in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,3,0,0,1,0.44,29,21
5161_39,39,39,"throw new IllegalArgumentException(""tag delimiters out of order in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,3,0,0,1,0.46,30,21
5161_43,43,46,"if ( ntags==0 ) {
String text = pattern.substring(0, n);
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,6,3,0,0,1,0.45,23,18
5161_44,44,44,"String text = pattern.substring(0, n);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.44,25,19
5161_45,45,45,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.44,24,18
5161_48,48,51,"if ( ntags>0 && starts.get(0)>0 ) {
String text = pattern.substring(0, starts.get(0));
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,1,0,6,3,0,0,1,0.44,18,15
5161_49,49,49,"String text = pattern.substring(0, starts.get(0));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.44,20,16
5161_50,50,50,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.44,19,15
5161_52,52,66,"for (int i=0; i<ntags; i++) {
String tag = pattern.substring(starts.get(i) + start.length(), stops.get(i));
String ruleOrToken = tag;
String label = null;
int colon = tag.indexOf(':');
if ( colon >= 0 ) {
label = tag.substring(0,colon);
ruleOrToken = tag.substring(colon+1, tag.length());
}
chunks.add(new TagChunk(label, ruleOrToken));
if ( i+1 < ntags ) {
String text = pattern.substring(stops.get(i) + stop.length(), starts.get(i + 1));
chunks.add(new TextChunk(text));
}
}",0,0,1,0,0,0,0,0,0,11,2,15,1,1,0,0,6,3,0,0,2,0.52,3,3
5161_53,53,53,"String tag = pattern.substring(starts.get(i) + start.length(), stops.get(i));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.45,16,13
5161_54,54,54,String ruleOrToken = tag;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.46,15,12
5161_55,55,55,String label = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.35,14,11
5161_56,56,56,int colon = tag.indexOf(':');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.47,13,10
5161_57,57,60,"if ( colon >= 0 ) {
label = tag.substring(0,colon);
ruleOrToken = tag.substring(colon+1, tag.length());
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,6,3,0,0,1,0.46,9,7
5161_58,58,58,"label = tag.substring(0,colon);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,0,0,1,0.46,11,8
5161_59,59,59,"ruleOrToken = tag.substring(colon+1, tag.length());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,0,0,1,0.48,10,7
5161_61,61,61,"chunks.add(new TagChunk(label, ruleOrToken));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,0,0,1,0.42,8,6
5161_62,62,65,"if ( i+1 < ntags ) {
String text = pattern.substring(stops.get(i) + stop.length(), starts.get(i + 1));
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,6,3,0,0,1,0.44,4,3
5161_63,63,63,"String text = pattern.substring(stops.get(i) + stop.length(), starts.get(i + 1));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.42,6,4
5161_64,64,64,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.44,5,3
5161_67,67,73,"if ( ntags>0 ) {
int afterLastTag = stops.get(ntags - 1) + stop.length();
if ( afterLastTag < n ) {
String text = pattern.substring(afterLastTag, n);
chunks.add(new TextChunk(text));
}
}",1,0,0,0,0,0,0,0,0,4,2,7,1,1,0,1,6,3,0,0,3,0.61,0,0
5161_68,68,68,int afterLastTag = stops.get(ntags - 1) + stop.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,2,0.51,1,1
5161_69,69,72,"if ( afterLastTag < n ) {
String text = pattern.substring(afterLastTag, n);
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,6,3,0,0,3,0.64,0,0
5161_70,70,70,"String text = pattern.substring(afterLastTag, n);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,3,0.65,0,0
5161_71,71,71,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.44,1,0
5161_75,75,84,"for (int i = 0; i < chunks.size(); i++) {
Chunk c = chunks.get(i);
if ( c instanceof TextChunk ) {
TextChunk tc = (TextChunk)c;
String unescaped = tc.getText().replace(escape, """");
if (unescaped.length() < tc.getText().length()) {
chunks.set(i, new TextChunk(unescaped));
}
}
}",0,0,1,0,0,0,0,0,0,6,3,10,0,0,1,1,6,3,0,0,1,0.43,5,2
5161_76,76,76,Chunk c = chunks.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.24,6,2
5161_77,77,83,"if ( c instanceof TextChunk ) {
TextChunk tc = (TextChunk)c;
String unescaped = tc.getText().replace(escape, """");
if (unescaped.length() < tc.getText().length()) {
chunks.set(i, new TextChunk(unescaped));
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,1,0,0,6,3,0,0,1,0.46,7,3
5161_78,78,78,TextChunk tc = (TextChunk)c;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.45,8,4
5161_79,79,79,"String unescaped = tc.getText().replace(escape, """");",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,3,0,0,1,0.39,9,5
5161_80,80,82,"if (unescaped.length() < tc.getText().length()) {
chunks.set(i, new TextChunk(unescaped));
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,6,3,0,0,1,0.43,10,6
5161_81,81,81,"chunks.set(i, new TextChunk(unescaped));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.39,11,7
5161_86,86,86,return chunks;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,0,0,0,0.25,16,9
5160_1,1,1,public List<Chunk> split(String pattern) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.29,62,43
5160_2,2,2,int p = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.27,61,42
5160_3,3,3,int n = pattern.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.27,60,41
5160_4,4,4,List<Chunk> chunks = new ArrayList<Chunk>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.3,59,40
5160_5,5,5,StringBuilder buf = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.28,58,39
5160_6,6,6,List<Integer> starts = new ArrayList<Integer>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.45,57,38
5160_7,7,7,List<Integer> stops = new ArrayList<Integer>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.35,56,37
5160_8,8,26,"while ( p<n ) {
if ( p == pattern.indexOf(escape+start,p) ) {
p += escape.length() + start.length();
}
else if ( p == pattern.indexOf(escape+stop,p) ) {
p += escape.length() + stop.length();
}
else if ( p == pattern.indexOf(start,p) ) {
starts.add(p);
p += start.length();
}
else if ( p == pattern.indexOf(stop,p) ) {
stops.add(p);
p += stop.length();
}
else {
p++;
}
}",0,1,0,0,0,0,0,0,0,12,2,19,0,1,0,1,5,3,0,0,1,0.43,37,24
5160_9,9,25,"if ( p == pattern.indexOf(escape+start,p) ) {
p += escape.length() + start.length();
}
else if ( p == pattern.indexOf(escape+stop,p) ) {
p += escape.length() + stop.length();
}
else if ( p == pattern.indexOf(start,p) ) {
starts.add(p);
p += start.length();
}
else if ( p == pattern.indexOf(stop,p) ) {
stops.add(p);
p += stop.length();
}
else {
p++;
}",1,0,0,0,0,0,0,0,0,11,1,17,0,0,0,0,5,3,0,0,1,0.43,38,24
5160_10,10,10,p += escape.length() + start.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.42,53,34
5160_12,12,12,"else if ( p == pattern.indexOf(escape+stop,p) ) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.33,51,33
5160_13,13,13,p += escape.length() + stop.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.32,50,32
5160_15,15,15,"else if ( p == pattern.indexOf(start,p) ) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.45,48,31
5160_16,16,16,starts.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.47,47,30
5160_17,17,17,p += start.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.47,46,29
5160_19,19,19,"else if ( p == pattern.indexOf(stop,p) ) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.34,44,28
5160_20,20,20,stops.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.31,43,27
5160_21,21,21,p += stop.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.33,42,26
5160_23,23,23,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.18,40,25
5160_24,24,24,p++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.2,39,24
5160_28,28,30,"if ( starts.size() > stops.size() ) {
throw new IllegalArgumentException(""unterminated tag in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,3,0,0,2,0.53,33,22
5160_29,29,29,"throw new IllegalArgumentException(""unterminated tag in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,0,0,1,0.44,34,22
5160_32,32,34,"if ( starts.size() < stops.size() ) {
throw new IllegalArgumentException(""missing start tag in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,3,0,0,2,0.54,29,20
5160_33,33,33,"throw new IllegalArgumentException(""missing start tag in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,0,0,2,0.54,30,20
5160_36,36,36,int ntags = starts.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,0,0,1,0.45,27,19
5160_37,37,41,"for (int i=0; i<ntags; i++) {
if ( starts.get(i)>=stops.get(i) ) {
throw new IllegalArgumentException(""tag delimiters out of order in pattern: ""+pattern);
}
}",0,0,1,0,0,0,0,0,0,2,2,5,0,1,0,1,5,3,0,0,2,0.52,22,16
5160_38,38,40,"if ( starts.get(i)>=stops.get(i) ) {
throw new IllegalArgumentException(""tag delimiters out of order in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,3,0,0,2,0.53,23,16
5160_39,39,39,"throw new IllegalArgumentException(""tag delimiters out of order in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,0,0,1,0.45,24,16
5160_43,43,46,"if ( ntags==0 ) {
String text = pattern.substring(0, n);
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,5,3,0,0,0,0.29,17,13
5160_44,44,44,"String text = pattern.substring(0, n);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.3,19,14
5160_45,45,45,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.25,18,13
5160_48,48,51,"if ( ntags>0 && starts.get(0)>0 ) {
String text = pattern.substring(0, starts.get(0));
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,1,0,5,3,0,0,1,0.41,12,10
5160_49,49,49,"String text = pattern.substring(0, starts.get(0));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.42,14,11
5160_50,50,50,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.25,13,10
5160_52,52,66,"for (int i=0; i<ntags; i++) {
String tag = pattern.substring(starts.get(i) + start.length(), stops.get(i));
String ruleOrToken = tag;
String label = null;
int colon = tag.indexOf(':');
if ( colon >= 0 ) {
label = tag.substring(0,colon);
ruleOrToken = tag.substring(colon+1, tag.length());
}
chunks.add(new TagChunk(label, ruleOrToken));
if ( i+1 < ntags ) {
String text = pattern.substring(stops.get(i) + stop.length(), starts.get(i + 1));
chunks.add(new TextChunk(text));
}
}",0,0,1,0,0,0,0,0,0,11,2,15,1,1,0,0,5,3,0,0,2,0.53,0,0
5160_53,53,53,"String tag = pattern.substring(starts.get(i) + start.length(), stops.get(i));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.56,10,8
5160_54,54,54,String ruleOrToken = tag;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.47,9,7
5160_55,55,55,String label = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.28,8,6
5160_56,56,56,int colon = tag.indexOf(':');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.49,7,5
5160_57,57,60,"if ( colon >= 0 ) {
label = tag.substring(0,colon);
ruleOrToken = tag.substring(colon+1, tag.length());
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,3,0,0,1,0.45,3,2
5160_58,58,58,"label = tag.substring(0,colon);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,3,0,0,1,0.45,5,3
5160_59,59,59,"ruleOrToken = tag.substring(colon+1, tag.length());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,3,0,0,1,0.47,4,2
5160_61,61,61,"chunks.add(new TagChunk(label, ruleOrToken));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,3,0,0,1,0.42,2,1
5160_62,62,65,"if ( i+1 < ntags ) {
String text = pattern.substring(stops.get(i) + stop.length(), starts.get(i + 1));
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,5,3,0,0,1,0.39,0,0
5160_63,63,63,"String text = pattern.substring(stops.get(i) + stop.length(), starts.get(i + 1));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.41,0,0
5160_64,64,64,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.25,1,0
5160_67,67,73,"if ( ntags>0 ) {
int afterLastTag = stops.get(ntags - 1) + stop.length();
if ( afterLastTag < n ) {
String text = pattern.substring(afterLastTag, n);
chunks.add(new TextChunk(text));
}
}",1,0,0,0,0,0,0,0,0,4,2,7,1,1,0,1,5,3,0,0,1,0.44,4,2
5160_68,68,68,int afterLastTag = stops.get(ntags - 1) + stop.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.44,5,2
5160_69,69,72,"if ( afterLastTag < n ) {
String text = pattern.substring(afterLastTag, n);
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,3,0,0,1,0.42,6,3
5160_70,70,70,"String text = pattern.substring(afterLastTag, n);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.43,7,4
5160_71,71,71,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.25,8,5
5160_75,75,84,"for (int i = 0; i < chunks.size(); i++) {
Chunk c = chunks.get(i);
if ( c instanceof TextChunk ) {
TextChunk tc = (TextChunk)c;
String unescaped = tc.getText().replace(escape, """");
if (unescaped.length() < tc.getText().length()) {
chunks.set(i, new TextChunk(unescaped));
}
}
}",0,0,1,0,0,0,0,0,0,6,3,10,0,0,1,1,5,3,0,0,0,0.29,12,7
5160_76,76,76,Chunk c = chunks.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.23,13,7
5160_77,77,83,"if ( c instanceof TextChunk ) {
TextChunk tc = (TextChunk)c;
String unescaped = tc.getText().replace(escape, """");
if (unescaped.length() < tc.getText().length()) {
chunks.set(i, new TextChunk(unescaped));
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,1,0,0,5,3,0,0,0,0.29,14,8
5160_78,78,78,TextChunk tc = (TextChunk)c;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.23,15,9
5160_79,79,79,"String unescaped = tc.getText().replace(escape, """");",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,3,0,0,0,0.25,16,10
5160_80,80,82,"if (unescaped.length() < tc.getText().length()) {
chunks.set(i, new TextChunk(unescaped));
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,3,0,0,0,0.27,17,11
5160_81,81,81,"chunks.set(i, new TextChunk(unescaped));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.25,18,12
5160_86,86,86,return chunks;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,3,0,0,0,0.21,23,14
5159_1,1,1,public List<Chunk> split(String pattern) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.24,52,34
5159_2,2,2,int p = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.24,51,33
5159_3,3,3,int n = pattern.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.18,50,32
5159_4,4,4,List<Chunk> chunks = new ArrayList<Chunk>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.29,49,31
5159_5,5,5,StringBuilder buf = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.27,48,30
5159_6,6,6,List<Integer> starts = new ArrayList<Integer>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,47,29
5159_7,7,7,List<Integer> stops = new ArrayList<Integer>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.31,46,28
5159_8,8,26,"while ( p<n ) {
if ( p == pattern.indexOf(escape+start,p) ) {
p += escape.length() + start.length();
}
else if ( p == pattern.indexOf(escape+stop,p) ) {
p += escape.length() + stop.length();
}
else if ( p == pattern.indexOf(start,p) ) {
starts.add(p);
p += start.length();
}
else if ( p == pattern.indexOf(stop,p) ) {
stops.add(p);
p += stop.length();
}
else {
p++;
}
}",0,1,0,0,0,0,0,0,0,12,2,19,0,1,0,1,3,3,0,0,0,0.28,27,15
5159_9,9,25,"if ( p == pattern.indexOf(escape+start,p) ) {
p += escape.length() + start.length();
}
else if ( p == pattern.indexOf(escape+stop,p) ) {
p += escape.length() + stop.length();
}
else if ( p == pattern.indexOf(start,p) ) {
starts.add(p);
p += start.length();
}
else if ( p == pattern.indexOf(stop,p) ) {
stops.add(p);
p += stop.length();
}
else {
p++;
}",1,0,0,0,0,0,0,0,0,11,1,17,0,0,0,0,3,3,0,0,0,0.28,28,15
5159_10,10,10,p += escape.length() + start.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.23,43,25
5159_12,12,12,"else if ( p == pattern.indexOf(escape+stop,p) ) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.28,41,24
5159_13,13,13,p += escape.length() + stop.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.26,40,23
5159_15,15,15,"else if ( p == pattern.indexOf(start,p) ) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.28,38,22
5159_16,16,16,starts.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.26,37,21
5159_17,17,17,p += start.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.24,36,20
5159_19,19,19,"else if ( p == pattern.indexOf(stop,p) ) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.29,34,19
5159_20,20,20,stops.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.28,33,18
5159_21,21,21,p += stop.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.28,32,17
5159_23,23,23,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.17,30,16
5159_24,24,24,p++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.25,29,15
5159_28,28,30,"if ( starts.size() > stops.size() ) {
throw new IllegalArgumentException(""unterminated tag in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,1,0.44,23,13
5159_29,29,29,"throw new IllegalArgumentException(""unterminated tag in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,1,0.46,24,13
5159_32,32,34,"if ( starts.size() < stops.size() ) {
throw new IllegalArgumentException(""missing start tag in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,1,0.42,19,11
5159_33,33,33,"throw new IllegalArgumentException(""missing start tag in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,1,0.44,20,11
5159_36,36,36,int ntags = starts.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.17,17,10
5159_37,37,41,"for (int i=0; i<ntags; i++) {
if ( starts.get(i)>=stops.get(i) ) {
throw new IllegalArgumentException(""tag delimiters out of order in pattern: ""+pattern);
}
}",0,0,1,0,0,0,0,0,0,2,2,5,0,1,0,1,3,3,0,0,1,0.4,12,7
5159_38,38,40,"if ( starts.get(i)>=stops.get(i) ) {
throw new IllegalArgumentException(""tag delimiters out of order in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,1,0.41,13,7
5159_39,39,39,"throw new IllegalArgumentException(""tag delimiters out of order in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,1,0.44,14,7
5159_43,43,46,"if ( ntags==0 ) {
String text = pattern.substring(0, n);
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,3,0,0,0,0.24,7,4
5159_44,44,44,"String text = pattern.substring(0, n);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.22,9,5
5159_45,45,45,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.24,8,4
5159_48,48,51,"if ( ntags>0 && starts.get(0)>0 ) {
String text = pattern.substring(0, starts.get(0));
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,1,0,3,3,0,0,0,0.23,2,1
5159_49,49,49,"String text = pattern.substring(0, starts.get(0));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.21,4,2
5159_50,50,50,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.24,3,1
5159_52,52,66,"for (int i=0; i<ntags; i++) {
String tag = pattern.substring(starts.get(i) + start.length(), stops.get(i));
String ruleOrToken = tag;
String label = null;
int colon = tag.indexOf(':');
if ( colon >= 0 ) {
label = tag.substring(0,colon);
ruleOrToken = tag.substring(colon+1, tag.length());
}
chunks.add(new TagChunk(label, ruleOrToken));
if ( i+1 < ntags ) {
String text = pattern.substring(stops.get(i) + stop.length(), starts.get(i + 1));
chunks.add(new TextChunk(text));
}
}",0,0,1,0,0,0,0,0,0,11,2,15,1,1,0,0,3,3,0,0,1,0.45,0,0
5159_53,53,53,"String tag = pattern.substring(starts.get(i) + start.length(), stops.get(i));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.4,0,0
5159_54,54,54,String ruleOrToken = tag;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.52,1,0
5159_55,55,55,String label = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.28,2,1
5159_56,56,56,int colon = tag.indexOf(':');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.5,3,2
5159_57,57,60,"if ( colon >= 0 ) {
label = tag.substring(0,colon);
ruleOrToken = tag.substring(colon+1, tag.length());
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,3,3,0,0,1,0.49,4,3
5159_58,58,58,"label = tag.substring(0,colon);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,1,0.47,5,4
5159_59,59,59,"ruleOrToken = tag.substring(colon+1, tag.length());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,1,0.52,6,5
5159_61,61,61,"chunks.add(new TagChunk(label, ruleOrToken));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,1,0.46,8,7
5159_62,62,65,"if ( i+1 < ntags ) {
String text = pattern.substring(stops.get(i) + stop.length(), starts.get(i + 1));
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,3,3,0,0,0,0.23,9,7
5159_63,63,63,"String text = pattern.substring(stops.get(i) + stop.length(), starts.get(i + 1));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.23,10,8
5159_64,64,64,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.24,11,9
5159_67,67,73,"if ( ntags>0 ) {
int afterLastTag = stops.get(ntags - 1) + stop.length();
if ( afterLastTag < n ) {
String text = pattern.substring(afterLastTag, n);
chunks.add(new TextChunk(text));
}
}",1,0,0,0,0,0,0,0,0,4,2,7,1,1,0,1,3,3,0,0,1,0.42,14,11
5159_68,68,68,int afterLastTag = stops.get(ntags - 1) + stop.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.42,15,11
5159_69,69,72,"if ( afterLastTag < n ) {
String text = pattern.substring(afterLastTag, n);
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,3,3,0,0,1,0.42,16,12
5159_70,70,70,"String text = pattern.substring(afterLastTag, n);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.43,17,13
5159_71,71,71,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.24,18,14
5159_75,75,84,"for (int i = 0; i < chunks.size(); i++) {
Chunk c = chunks.get(i);
if ( c instanceof TextChunk ) {
TextChunk tc = (TextChunk)c;
String unescaped = tc.getText().replace(escape, """");
if (unescaped.length() < tc.getText().length()) {
chunks.set(i, new TextChunk(unescaped));
}
}
}",0,0,1,0,0,0,0,0,0,6,3,10,0,0,1,1,3,3,0,0,0,0.3,22,16
5159_76,76,76,Chunk c = chunks.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.17,23,16
5159_77,77,83,"if ( c instanceof TextChunk ) {
TextChunk tc = (TextChunk)c;
String unescaped = tc.getText().replace(escape, """");
if (unescaped.length() < tc.getText().length()) {
chunks.set(i, new TextChunk(unescaped));
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,1,0,0,3,3,0,0,0,0.3,24,17
5159_78,78,78,TextChunk tc = (TextChunk)c;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.19,25,18
5159_79,79,79,"String unescaped = tc.getText().replace(escape, """");",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,3,0,0,0,0.2,26,19
5159_80,80,82,"if (unescaped.length() < tc.getText().length()) {
chunks.set(i, new TextChunk(unescaped));
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,3,3,0,0,0,0.25,27,20
5159_81,81,81,"chunks.set(i, new TextChunk(unescaped));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.25,28,21
5159_86,86,86,return chunks;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.19,33,23
5158_1,1,1,public List<Chunk> split(String pattern) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.46,47,31
5158_2,2,2,int p = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.34,46,30
5158_3,3,3,int n = pattern.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.32,45,29
5158_4,4,4,List<Chunk> chunks = new ArrayList<Chunk>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.54,44,28
5158_5,5,5,StringBuilder buf = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.35,43,27
5158_6,6,6,List<Integer> starts = new ArrayList<Integer>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.31,42,26
5158_7,7,7,List<Integer> stops = new ArrayList<Integer>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.32,41,25
5158_8,8,26,"while ( p<n ) {
if ( p == pattern.indexOf(escape+start,p) ) {
p += escape.length() + start.length();
}
else if ( p == pattern.indexOf(escape+stop,p) ) {
p += escape.length() + stop.length();
}
else if ( p == pattern.indexOf(start,p) ) {
starts.add(p);
p += start.length();
}
else if ( p == pattern.indexOf(stop,p) ) {
stops.add(p);
p += stop.length();
}
else {
p++;
}
}",0,1,0,0,0,0,0,0,0,12,2,19,0,1,0,1,5,3,1,0,0,0.36,22,12
5158_9,9,25,"if ( p == pattern.indexOf(escape+start,p) ) {
p += escape.length() + start.length();
}
else if ( p == pattern.indexOf(escape+stop,p) ) {
p += escape.length() + stop.length();
}
else if ( p == pattern.indexOf(start,p) ) {
starts.add(p);
p += start.length();
}
else if ( p == pattern.indexOf(stop,p) ) {
stops.add(p);
p += stop.length();
}
else {
p++;
}",1,0,0,0,0,0,0,0,0,11,1,17,0,0,0,0,5,3,1,0,0,0.36,23,12
5158_10,10,10,p += escape.length() + start.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.34,38,22
5158_12,12,12,"else if ( p == pattern.indexOf(escape+stop,p) ) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.36,36,21
5158_13,13,13,p += escape.length() + stop.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.35,35,20
5158_15,15,15,"else if ( p == pattern.indexOf(start,p) ) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.37,33,19
5158_16,16,16,starts.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.32,32,18
5158_17,17,17,p += start.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.34,31,17
5158_19,19,19,"else if ( p == pattern.indexOf(stop,p) ) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.37,29,16
5158_20,20,20,stops.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.31,28,15
5158_21,21,21,p += stop.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.35,27,14
5158_23,23,23,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.24,25,13
5158_24,24,24,p++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.33,24,12
5158_28,28,30,"if ( starts.size() > stops.size() ) {
throw new IllegalArgumentException(""unterminated tag in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,3,1,0,1,0.46,18,10
5158_29,29,29,"throw new IllegalArgumentException(""unterminated tag in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,1,0,1,0.48,19,10
5158_32,32,34,"if ( starts.size() < stops.size() ) {
throw new IllegalArgumentException(""missing start tag in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,3,1,0,1,0.44,14,8
5158_33,33,33,"throw new IllegalArgumentException(""missing start tag in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,1,0,1,0.45,15,8
5158_36,36,36,int ntags = starts.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,1,0,0,0.29,12,7
5158_37,37,41,"for (int i=0; i<ntags; i++) {
if ( starts.get(i)>=stops.get(i) ) {
throw new IllegalArgumentException(""tag delimiters out of order in pattern: ""+pattern);
}
}",0,0,1,0,0,0,0,0,0,2,2,5,0,1,0,1,5,3,1,0,1,0.44,7,4
5158_38,38,40,"if ( starts.get(i)>=stops.get(i) ) {
throw new IllegalArgumentException(""tag delimiters out of order in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,3,1,0,1,0.44,8,4
5158_39,39,39,"throw new IllegalArgumentException(""tag delimiters out of order in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,1,0,1,0.46,9,4
5158_43,43,46,"if ( ntags==0 ) {
String text = pattern.substring(0, n);
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,5,3,1,0,2,0.58,2,1
5158_44,44,44,"String text = pattern.substring(0, n);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.45,4,2
5158_45,45,45,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,2,0.65,3,1
5158_48,48,51,"if ( ntags>0 && starts.get(0)>0 ) {
String text = pattern.substring(0, starts.get(0));
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,1,0,5,3,1,0,2,0.54,0,0
5158_49,49,49,"String text = pattern.substring(0, starts.get(0));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.43,0,0
5158_50,50,50,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,2,0.65,1,0
5158_52,52,66,"for (int i=0; i<ntags; i++) {
String tag = pattern.substring(starts.get(i) + start.length(), stops.get(i));
String ruleOrToken = tag;
String label = null;
int colon = tag.indexOf(':');
if ( colon >= 0 ) {
label = tag.substring(0,colon);
ruleOrToken = tag.substring(colon+1, tag.length());
}
chunks.add(new TagChunk(label, ruleOrToken));
if ( i+1 < ntags ) {
String text = pattern.substring(stops.get(i) + stop.length(), starts.get(i + 1));
chunks.add(new TextChunk(text));
}
}",0,0,1,0,0,0,0,0,0,11,2,15,1,1,0,0,5,3,1,0,3,0.62,3,2
5158_53,53,53,"String tag = pattern.substring(starts.get(i) + start.length(), stops.get(i));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.44,4,2
5158_54,54,54,String ruleOrToken = tag;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.48,5,3
5158_55,55,55,String label = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.37,6,4
5158_56,56,56,int colon = tag.indexOf(':');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.56,7,5
5158_57,57,60,"if ( colon >= 0 ) {
label = tag.substring(0,colon);
ruleOrToken = tag.substring(colon+1, tag.length());
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,3,1,0,1,0.55,8,6
5158_58,58,58,"label = tag.substring(0,colon);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,3,1,0,1,0.55,9,7
5158_59,59,59,"ruleOrToken = tag.substring(colon+1, tag.length());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,3,1,0,1,0.54,10,8
5158_61,61,61,"chunks.add(new TagChunk(label, ruleOrToken));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,3,1,0,2,0.6,12,10
5158_62,62,65,"if ( i+1 < ntags ) {
String text = pattern.substring(stops.get(i) + stop.length(), starts.get(i + 1));
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,5,3,1,0,2,0.54,13,10
5158_63,63,63,"String text = pattern.substring(stops.get(i) + stop.length(), starts.get(i + 1));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.42,14,11
5158_64,64,64,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,2,0.65,15,12
5158_67,67,73,"if ( ntags>0 ) {
int afterLastTag = stops.get(ntags - 1) + stop.length();
if ( afterLastTag < n ) {
String text = pattern.substring(afterLastTag, n);
chunks.add(new TextChunk(text));
}
}",1,0,0,0,0,0,0,0,0,4,2,7,1,1,0,1,5,3,1,0,3,0.63,18,14
5158_68,68,68,int afterLastTag = stops.get(ntags - 1) + stop.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.44,19,14
5158_69,69,72,"if ( afterLastTag < n ) {
String text = pattern.substring(afterLastTag, n);
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,3,1,0,3,0.67,20,15
5158_70,70,70,"String text = pattern.substring(afterLastTag, n);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,2,0.56,21,16
5158_71,71,71,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,2,0.65,22,17
5158_75,75,84,"for (int i = 0; i < chunks.size(); i++) {
Chunk c = chunks.get(i);
if ( c instanceof TextChunk ) {
TextChunk tc = (TextChunk)c;
String unescaped = tc.getText().replace(escape, """");
if (unescaped.length() < tc.getText().length()) {
chunks.set(i, new TextChunk(unescaped));
}
}
}",0,0,1,0,0,0,0,0,0,6,3,10,0,0,1,1,5,3,1,0,2,0.62,26,19
5158_76,76,76,Chunk c = chunks.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.52,27,19
5158_77,77,83,"if ( c instanceof TextChunk ) {
TextChunk tc = (TextChunk)c;
String unescaped = tc.getText().replace(escape, """");
if (unescaped.length() < tc.getText().length()) {
chunks.set(i, new TextChunk(unescaped));
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,1,0,0,5,3,1,0,2,0.62,28,20
5158_78,78,78,TextChunk tc = (TextChunk)c;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,2,0.7,29,21
5158_79,79,79,"String unescaped = tc.getText().replace(escape, """");",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,3,1,0,1,0.44,30,22
5158_80,80,82,"if (unescaped.length() < tc.getText().length()) {
chunks.set(i, new TextChunk(unescaped));
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,3,1,0,2,0.59,31,23
5158_81,81,81,"chunks.set(i, new TextChunk(unescaped));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,2,0.64,32,24
5158_86,86,86,return chunks;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,3,1,0,1,0.49,37,26
5157_1,1,1,public List<Chunk> split(String pattern) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.62,42,27
5157_2,2,2,int p = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.37,41,26
5157_3,3,3,int n = pattern.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.37,40,25
5157_4,4,4,List<Chunk> chunks = new ArrayList<Chunk>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.66,39,24
5157_5,5,5,StringBuilder buf = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.39,38,23
5157_6,6,6,List<Integer> starts = new ArrayList<Integer>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.31,37,22
5157_7,7,7,List<Integer> stops = new ArrayList<Integer>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.35,36,21
5157_8,8,26,"while ( p<n ) {
if ( p == pattern.indexOf(escape+start,p) ) {
p += escape.length() + start.length();
}
else if ( p == pattern.indexOf(escape+stop,p) ) {
p += escape.length() + stop.length();
}
else if ( p == pattern.indexOf(start,p) ) {
starts.add(p);
p += start.length();
}
else if ( p == pattern.indexOf(stop,p) ) {
stops.add(p);
p += stop.length();
}
else {
p++;
}
}",0,1,0,0,0,0,0,0,0,12,2,19,0,1,0,1,2,1,0,0,0,0.39,17,8
5157_9,9,25,"if ( p == pattern.indexOf(escape+start,p) ) {
p += escape.length() + start.length();
}
else if ( p == pattern.indexOf(escape+stop,p) ) {
p += escape.length() + stop.length();
}
else if ( p == pattern.indexOf(start,p) ) {
starts.add(p);
p += start.length();
}
else if ( p == pattern.indexOf(stop,p) ) {
stops.add(p);
p += stop.length();
}
else {
p++;
}",1,0,0,0,0,0,0,0,0,11,1,17,0,0,0,0,2,1,0,0,0,0.39,18,8
5157_10,10,10,p += escape.length() + start.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.39,33,18
5157_12,12,12,"else if ( p == pattern.indexOf(escape+stop,p) ) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.39,31,17
5157_13,13,13,p += escape.length() + stop.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.4,30,16
5157_15,15,15,"else if ( p == pattern.indexOf(start,p) ) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.38,28,15
5157_16,16,16,starts.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.33,27,14
5157_17,17,17,p += start.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.35,26,13
5157_19,19,19,"else if ( p == pattern.indexOf(stop,p) ) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.39,24,12
5157_20,20,20,stops.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.35,23,11
5157_21,21,21,p += stop.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.36,22,10
5157_23,23,23,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.09,20,9
5157_24,24,24,p++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.39,19,8
5157_28,28,30,"if ( starts.size() > stops.size() ) {
throw new IllegalArgumentException(""unterminated tag in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,1,0,0,0,0.38,13,6
5157_29,29,29,"throw new IllegalArgumentException(""unterminated tag in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,1,0,0,0,0.38,14,6
5157_32,32,34,"if ( starts.size() < stops.size() ) {
throw new IllegalArgumentException(""missing start tag in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,1,0,0,0,0.32,9,4
5157_33,33,33,"throw new IllegalArgumentException(""missing start tag in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,1,0,0,0,0.32,10,4
5157_36,36,36,int ntags = starts.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,1,0,0,0,0.3,7,3
5157_37,37,41,"for (int i=0; i<ntags; i++) {
if ( starts.get(i)>=stops.get(i) ) {
throw new IllegalArgumentException(""tag delimiters out of order in pattern: ""+pattern);
}
}",0,0,1,0,0,0,0,0,0,2,2,5,0,1,0,1,2,1,0,0,0,0.35,2,0
5157_38,38,40,"if ( starts.get(i)>=stops.get(i) ) {
throw new IllegalArgumentException(""tag delimiters out of order in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,1,0,0,0,0.35,3,0
5157_39,39,39,"throw new IllegalArgumentException(""tag delimiters out of order in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,1,0,0,0,0.36,4,0
5157_43,43,46,"if ( ntags==0 ) {
String text = pattern.substring(0, n);
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,2,1,0,0,1,0.6,0,0
5157_44,44,44,"String text = pattern.substring(0, n);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.4,1,0
5157_45,45,45,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,1,0.56,2,1
5157_48,48,51,"if ( ntags>0 && starts.get(0)>0 ) {
String text = pattern.substring(0, starts.get(0));
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,1,0,2,1,0,0,1,0.57,5,3
5157_49,49,49,"String text = pattern.substring(0, starts.get(0));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.38,6,3
5157_50,50,50,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,1,0.56,7,4
5157_52,52,66,"for (int i=0; i<ntags; i++) {
String tag = pattern.substring(starts.get(i) + start.length(), stops.get(i));
String ruleOrToken = tag;
String label = null;
int colon = tag.indexOf(':');
if ( colon >= 0 ) {
label = tag.substring(0,colon);
ruleOrToken = tag.substring(colon+1, tag.length());
}
chunks.add(new TagChunk(label, ruleOrToken));
if ( i+1 < ntags ) {
String text = pattern.substring(stops.get(i) + stop.length(), starts.get(i + 1));
chunks.add(new TextChunk(text));
}
}",0,0,1,0,0,0,0,0,0,11,2,15,1,1,0,0,2,1,0,0,1,0.58,9,6
5157_53,53,53,"String tag = pattern.substring(starts.get(i) + start.length(), stops.get(i));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.38,10,6
5157_54,54,54,String ruleOrToken = tag;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.38,11,7
5157_55,55,55,String label = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.26,12,8
5157_56,56,56,int colon = tag.indexOf(':');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.47,13,9
5157_57,57,60,"if ( colon >= 0 ) {
label = tag.substring(0,colon);
ruleOrToken = tag.substring(colon+1, tag.length());
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,2,1,0,0,0,0.5,14,10
5157_58,58,58,"label = tag.substring(0,colon);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,1,0,0,0,0.49,15,11
5157_59,59,59,"ruleOrToken = tag.substring(colon+1, tag.length());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,1,0,0,0,0.5,16,12
5157_61,61,61,"chunks.add(new TagChunk(label, ruleOrToken));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,1,0,0,1,0.61,18,14
5157_62,62,65,"if ( i+1 < ntags ) {
String text = pattern.substring(stops.get(i) + stop.length(), starts.get(i + 1));
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,2,1,0,0,1,0.57,19,14
5157_63,63,63,"String text = pattern.substring(stops.get(i) + stop.length(), starts.get(i + 1));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.38,20,15
5157_64,64,64,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,1,0.56,21,16
5157_67,67,73,"if ( ntags>0 ) {
int afterLastTag = stops.get(ntags - 1) + stop.length();
if ( afterLastTag < n ) {
String text = pattern.substring(afterLastTag, n);
chunks.add(new TextChunk(text));
}
}",1,0,0,0,0,0,0,0,0,4,2,7,1,1,0,1,2,1,0,0,1,0.57,24,18
5157_68,68,68,int afterLastTag = stops.get(ntags - 1) + stop.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.32,25,18
5157_69,69,72,"if ( afterLastTag < n ) {
String text = pattern.substring(afterLastTag, n);
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,2,1,0,0,1,0.59,26,19
5157_70,70,70,"String text = pattern.substring(afterLastTag, n);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.39,27,20
5157_71,71,71,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,1,0.56,28,21
5157_75,75,84,"for (int i = 0; i < chunks.size(); i++) {
Chunk c = chunks.get(i);
if ( c instanceof TextChunk ) {
TextChunk tc = (TextChunk)c;
String unescaped = tc.getText().replace(escape, """");
if (unescaped.length() < tc.getText().length()) {
chunks.set(i, new TextChunk(unescaped));
}
}
}",0,0,1,0,0,0,0,0,0,6,3,10,0,0,1,1,2,1,0,0,1,0.6,32,23
5157_76,76,76,Chunk c = chunks.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,1,0.61,33,23
5157_77,77,83,"if ( c instanceof TextChunk ) {
TextChunk tc = (TextChunk)c;
String unescaped = tc.getText().replace(escape, """");
if (unescaped.length() < tc.getText().length()) {
chunks.set(i, new TextChunk(unescaped));
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,1,0,0,2,1,0,0,1,0.58,34,24
5157_78,78,78,TextChunk tc = (TextChunk)c;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,1,0.57,35,25
5157_79,79,79,"String unescaped = tc.getText().replace(escape, """");",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,1,0,0,0,0.36,36,26
5157_80,80,82,"if (unescaped.length() < tc.getText().length()) {
chunks.set(i, new TextChunk(unescaped));
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,2,1,0,0,1,0.51,37,27
5157_81,81,81,"chunks.set(i, new TextChunk(unescaped));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.57,38,28
5157_86,86,86,return chunks;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,1,0,0,1,0.61,43,30
5156_1,1,1,public List<Chunk> split(String pattern) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,3,0,0,0.37,5,4
5156_2,2,2,int p = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,1,3,0,0,0.33,4,3
5156_3,3,3,int n = pattern.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,1,3,0,0,0.35,3,2
5156_4,4,4,List<Chunk> chunks = new ArrayList<Chunk>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,1,3,0,0,0.31,2,1
5156_5,5,5,StringBuilder buf = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,1,3,0,0,0.32,1,0
5156_6,6,6,List<Integer> starts = new ArrayList<Integer>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,1,3,0,1,0.47,0,0
5156_7,7,7,List<Integer> stops = new ArrayList<Integer>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,1,3,0,1,0.46,1,0
5156_8,8,26,"while ( p<n ) {
if ( p == pattern.indexOf(escape+start,p) ) {
p += escape.length() + start.length();
}
else if ( p == pattern.indexOf(escape+stop,p) ) {
p += escape.length() + stop.length();
}
else if ( p == pattern.indexOf(start,p) ) {
starts.add(p);
p += start.length();
}
else if ( p == pattern.indexOf(stop,p) ) {
stops.add(p);
p += stop.length();
}
else {
p++;
}
}",0,1,0,0,0,0,0,0,0,12,2,19,0,1,0,1,6,1,3,0,3,0.61,2,1
5156_9,9,25,"if ( p == pattern.indexOf(escape+start,p) ) {
p += escape.length() + start.length();
}
else if ( p == pattern.indexOf(escape+stop,p) ) {
p += escape.length() + stop.length();
}
else if ( p == pattern.indexOf(start,p) ) {
starts.add(p);
p += start.length();
}
else if ( p == pattern.indexOf(stop,p) ) {
stops.add(p);
p += stop.length();
}
else {
p++;
}",1,0,0,0,0,0,0,0,0,11,1,17,0,0,0,0,6,1,3,0,3,0.61,3,2
5156_10,10,10,p += escape.length() + start.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,3,0,1,0.47,4,3
5156_12,12,12,"else if ( p == pattern.indexOf(escape+stop,p) ) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,3,0,2,0.57,6,5
5156_13,13,13,p += escape.length() + stop.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,3,0,1,0.47,7,5
5156_15,15,15,"else if ( p == pattern.indexOf(start,p) ) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,3,0,2,0.58,9,7
5156_16,16,16,starts.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,1,3,0,1,0.48,10,7
5156_17,17,17,p += start.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,1,3,0,1,0.49,11,8
5156_19,19,19,"else if ( p == pattern.indexOf(stop,p) ) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,3,0,2,0.58,13,10
5156_20,20,20,stops.add(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,1,3,0,1,0.48,14,10
5156_21,21,21,p += stop.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,1,3,0,1,0.49,15,11
5156_23,23,23,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,3,0,0,0.25,17,13
5156_24,24,24,p++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,3,0,0,0.27,18,13
5156_28,28,30,"if ( starts.size() > stops.size() ) {
throw new IllegalArgumentException(""unterminated tag in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,1,3,0,2,0.52,22,15
5156_29,29,29,"throw new IllegalArgumentException(""unterminated tag in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,1,3,0,0,0.35,23,15
5156_32,32,34,"if ( starts.size() < stops.size() ) {
throw new IllegalArgumentException(""missing start tag in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,1,3,0,2,0.52,26,17
5156_33,33,33,"throw new IllegalArgumentException(""missing start tag in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,1,3,0,1,0.44,27,17
5156_36,36,36,int ntags = starts.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,1,3,0,1,0.52,30,19
5156_37,37,41,"for (int i=0; i<ntags; i++) {
if ( starts.get(i)>=stops.get(i) ) {
throw new IllegalArgumentException(""tag delimiters out of order in pattern: ""+pattern);
}
}",0,0,1,0,0,0,0,0,0,2,2,5,0,1,0,1,6,1,3,0,2,0.53,31,19
5156_38,38,40,"if ( starts.get(i)>=stops.get(i) ) {
throw new IllegalArgumentException(""tag delimiters out of order in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,1,3,0,2,0.53,32,20
5156_39,39,39,"throw new IllegalArgumentException(""tag delimiters out of order in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,1,3,0,0,0.38,33,21
5156_43,43,46,"if ( ntags==0 ) {
String text = pattern.substring(0, n);
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,6,1,3,0,0,0.36,37,23
5156_44,44,44,"String text = pattern.substring(0, n);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,1,3,0,0,0.39,38,23
5156_45,45,45,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,1,3,0,0,0.26,39,24
5156_48,48,51,"if ( ntags>0 && starts.get(0)>0 ) {
String text = pattern.substring(0, starts.get(0));
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,1,0,6,1,3,0,1,0.47,42,26
5156_49,49,49,"String text = pattern.substring(0, starts.get(0));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,1,3,0,1,0.49,43,26
5156_50,50,50,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,1,3,0,0,0.26,44,27
5156_52,52,66,"for (int i=0; i<ntags; i++) {
String tag = pattern.substring(starts.get(i) + start.length(), stops.get(i));
String ruleOrToken = tag;
String label = null;
int colon = tag.indexOf(':');
if ( colon >= 0 ) {
label = tag.substring(0,colon);
ruleOrToken = tag.substring(colon+1, tag.length());
}
chunks.add(new TagChunk(label, ruleOrToken));
if ( i+1 < ntags ) {
String text = pattern.substring(stops.get(i) + stop.length(), starts.get(i + 1));
chunks.add(new TextChunk(text));
}
}",0,0,1,0,0,0,0,0,0,11,2,15,1,1,0,0,6,1,3,0,3,0.57,46,29
5156_53,53,53,"String tag = pattern.substring(starts.get(i) + start.length(), stops.get(i));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,1,3,0,2,0.59,47,29
5156_54,54,54,String ruleOrToken = tag;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,1,3,0,0,0.35,48,30
5156_55,55,55,String label = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,1,3,0,0,0.28,49,31
5156_56,56,56,int colon = tag.indexOf(':');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,1,3,0,1,0.49,50,32
5156_57,57,60,"if ( colon >= 0 ) {
label = tag.substring(0,colon);
ruleOrToken = tag.substring(colon+1, tag.length());
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,6,1,3,0,0,0.4,51,33
5156_58,58,58,"label = tag.substring(0,colon);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,1,3,0,0,0.41,52,34
5156_59,59,59,"ruleOrToken = tag.substring(colon+1, tag.length());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,1,3,0,0,0.39,53,35
5156_61,61,61,"chunks.add(new TagChunk(label, ruleOrToken));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,1,3,0,0,0.35,55,37
5156_62,62,65,"if ( i+1 < ntags ) {
String text = pattern.substring(stops.get(i) + stop.length(), starts.get(i + 1));
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,6,1,3,0,2,0.52,56,37
5156_63,63,63,"String text = pattern.substring(stops.get(i) + stop.length(), starts.get(i + 1));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,1,3,0,2,0.57,57,38
5156_64,64,64,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,1,3,0,0,0.26,58,39
5156_67,67,73,"if ( ntags>0 ) {
int afterLastTag = stops.get(ntags - 1) + stop.length();
if ( afterLastTag < n ) {
String text = pattern.substring(afterLastTag, n);
chunks.add(new TextChunk(text));
}
}",1,0,0,0,0,0,0,0,0,4,2,7,1,1,0,1,6,1,3,0,1,0.47,61,41
5156_68,68,68,int afterLastTag = stops.get(ntags - 1) + stop.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,1,3,0,1,0.48,62,41
5156_69,69,72,"if ( afterLastTag < n ) {
String text = pattern.substring(afterLastTag, n);
chunks.add(new TextChunk(text));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,6,1,3,0,0,0.37,63,42
5156_70,70,70,"String text = pattern.substring(afterLastTag, n);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,1,3,0,0,0.38,64,43
5156_71,71,71,chunks.add(new TextChunk(text));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,1,3,0,0,0.26,65,44
5156_75,75,84,"for (int i = 0; i < chunks.size(); i++) {
Chunk c = chunks.get(i);
if ( c instanceof TextChunk ) {
TextChunk tc = (TextChunk)c;
String unescaped = tc.getText().replace(escape, """");
if (unescaped.length() < tc.getText().length()) {
chunks.set(i, new TextChunk(unescaped));
}
}
}",0,0,1,0,0,0,0,0,0,6,3,10,0,0,1,1,6,1,3,0,0,0.33,69,46
5156_76,76,76,Chunk c = chunks.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,1,3,0,0,0.27,70,46
5156_77,77,83,"if ( c instanceof TextChunk ) {
TextChunk tc = (TextChunk)c;
String unescaped = tc.getText().replace(escape, """");
if (unescaped.length() < tc.getText().length()) {
chunks.set(i, new TextChunk(unescaped));
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,1,0,0,6,1,3,0,0,0.32,71,47
5156_78,78,78,TextChunk tc = (TextChunk)c;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,1,3,0,0,0.26,72,48
5156_79,79,79,"String unescaped = tc.getText().replace(escape, """");",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,1,3,0,0,0.33,73,49
5156_80,80,82,"if (unescaped.length() < tc.getText().length()) {
chunks.set(i, new TextChunk(unescaped));
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,6,1,3,0,0,0.26,74,50
5156_81,81,81,"chunks.set(i, new TextChunk(unescaped));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,3,0,0,0.25,75,51
5156_86,86,86,return chunks;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,1,3,0,0,0.25,80,53
5155_1,1,1,public List<? extends Token> tokenize(String pattern) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,2,2,0,1,0.53,7,5
5155_2,2,2,List<Chunk> chunks = split(pattern);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,2,2,0,0,0.33,6,4
5155_4,4,4,List<Token> tokens = new ArrayList<Token>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,2,2,0,2,0.67,4,3
5155_5,5,38,"for (Chunk chunk : chunks) {
if ( chunk instanceof TagChunk ) {
TagChunk tagChunk = (TagChunk)chunk;
if ( Character.isUpperCase(tagChunk.getTag().charAt(0)) ) {
Integer ttype = parser.getTokenType(tagChunk.getTag());
if ( ttype==Token.INVALID_TYPE ) {
throw new IllegalArgumentException(""Unknown token ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}
TokenTagToken t = new TokenTagToken(tagChunk.getTag(), ttype, tagChunk.getLabel());
tokens.add(t);
}
else if ( Character.isLowerCase(tagChunk.getTag().charAt(0)) ) {
int ruleIndex = parser.getRuleIndex(tagChunk.getTag());
if ( ruleIndex==-1 ) {
throw new IllegalArgumentException(""Unknown rule ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}
int ruleImaginaryTokenType = parser.getATNWithBypassAlts().ruleToTokenType[ruleIndex];
tokens.add(new RuleTagToken(tagChunk.getTag(), ruleImaginaryTokenType, tagChunk.getLabel()));
}
else {
throw new IllegalArgumentException(""invalid tag: ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}
}
else {
TextChunk textChunk = (TextChunk)chunk;
ANTLRInputStream in = new ANTLRInputStream(textChunk.getText());
lexer.setInputStream(in);
Token t = lexer.nextToken();
while ( t.getType()!=Token.EOF ) {
tokens.add(t);
t = lexer.nextToken();
}
}
}",0,0,0,1,0,0,0,0,0,24,4,34,0,1,0,0,8,2,2,0,4,0.68,0,0
5155_6,6,37,"if ( chunk instanceof TagChunk ) {
TagChunk tagChunk = (TagChunk)chunk;
if ( Character.isUpperCase(tagChunk.getTag().charAt(0)) ) {
Integer ttype = parser.getTokenType(tagChunk.getTag());
if ( ttype==Token.INVALID_TYPE ) {
throw new IllegalArgumentException(""Unknown token ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}
TokenTagToken t = new TokenTagToken(tagChunk.getTag(), ttype, tagChunk.getLabel());
tokens.add(t);
}
else if ( Character.isLowerCase(tagChunk.getTag().charAt(0)) ) {
int ruleIndex = parser.getRuleIndex(tagChunk.getTag());
if ( ruleIndex==-1 ) {
throw new IllegalArgumentException(""Unknown rule ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}
int ruleImaginaryTokenType = parser.getATNWithBypassAlts().ruleToTokenType[ruleIndex];
tokens.add(new RuleTagToken(tagChunk.getTag(), ruleImaginaryTokenType, tagChunk.getLabel()));
}
else {
throw new IllegalArgumentException(""invalid tag: ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}
}
else {
TextChunk textChunk = (TextChunk)chunk;
ANTLRInputStream in = new ANTLRInputStream(textChunk.getText());
lexer.setInputStream(in);
Token t = lexer.nextToken();
while ( t.getType()!=Token.EOF ) {
tokens.add(t);
t = lexer.nextToken();
}
}",1,0,0,0,0,0,0,0,0,23,3,32,0,0,0,0,8,2,2,0,4,0.68,0,0
5155_7,7,7,TagChunk tagChunk = (TagChunk)chunk;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,2,2,0,0,0.28,1,0
5155_8,8,26,"if ( Character.isUpperCase(tagChunk.getTag().charAt(0)) ) {
Integer ttype = parser.getTokenType(tagChunk.getTag());
if ( ttype==Token.INVALID_TYPE ) {
throw new IllegalArgumentException(""Unknown token ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}
TokenTagToken t = new TokenTagToken(tagChunk.getTag(), ttype, tagChunk.getLabel());
tokens.add(t);
}
else if ( Character.isLowerCase(tagChunk.getTag().charAt(0)) ) {
int ruleIndex = parser.getRuleIndex(tagChunk.getTag());
if ( ruleIndex==-1 ) {
throw new IllegalArgumentException(""Unknown rule ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}
int ruleImaginaryTokenType = parser.getATNWithBypassAlts().ruleToTokenType[ruleIndex];
tokens.add(new RuleTagToken(tagChunk.getTag(), ruleImaginaryTokenType, tagChunk.getLabel()));
}
else {
throw new IllegalArgumentException(""invalid tag: ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,13,2,19,0,1,0,0,8,2,2,0,4,0.69,0,0
5155_9,9,9,Integer ttype = parser.getTokenType(tagChunk.getTag());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,8,2,2,0,1,0.48,1,0
5155_10,10,12,"if ( ttype==Token.INVALID_TYPE ) {
throw new IllegalArgumentException(""Unknown token ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,8,2,2,0,2,0.58,2,1
5155_11,11,11,"throw new IllegalArgumentException(""Unknown token ""+tagChunk.getTag()+"" in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,2,2,0,2,0.58,3,2
5155_13,13,13,"TokenTagToken t = new TokenTagToken(tagChunk.getTag(), ttype, tagChunk.getLabel());",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,8,2,2,0,2,0.59,5,4
5155_14,14,14,tokens.add(t);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,2,2,0,2,0.79,6,4
5155_16,16,16,else if ( Character.isLowerCase(tagChunk.getTag().charAt(0)) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,2,2,0,0,0.39,8,6
5155_17,17,17,int ruleIndex = parser.getRuleIndex(tagChunk.getTag());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,8,2,2,0,1,0.47,9,6
5155_18,18,20,"if ( ruleIndex==-1 ) {
throw new IllegalArgumentException(""Unknown rule ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,8,2,2,0,2,0.54,10,7
5155_19,19,19,"throw new IllegalArgumentException(""Unknown rule ""+tagChunk.getTag()+"" in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,2,2,0,2,0.53,11,8
5155_21,21,21,int ruleImaginaryTokenType = parser.getATNWithBypassAlts().ruleToTokenType[ruleIndex];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,2,2,0,2,0.64,13,10
5155_22,22,22,"tokens.add(new RuleTagToken(tagChunk.getTag(), ruleImaginaryTokenType, tagChunk.getLabel()));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,2,2,0,4,0.72,14,10
5155_24,24,24,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,2,2,0,0,0.24,16,12
5155_25,25,25,"throw new IllegalArgumentException(""invalid tag: ""+tagChunk.getTag()+"" in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,2,2,0,1,0.46,17,12
5155_28,28,28,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,2,2,0,0,0.24,20,14
5155_29,29,29,TextChunk textChunk = (TextChunk)chunk;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,2,2,0,0,0.25,21,14
5155_30,30,30,ANTLRInputStream in = new ANTLRInputStream(textChunk.getText());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,2,2,0,1,0.42,22,15
5155_31,31,31,lexer.setInputStream(in);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,2,2,0,0,0.31,23,16
5155_32,32,32,Token t = lexer.nextToken();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,8,2,2,0,1,0.64,24,17
5155_33,33,36,"while ( t.getType()!=Token.EOF ) {
tokens.add(t);
t = lexer.nextToken();
}",0,1,0,0,0,0,0,0,0,2,1,4,1,1,0,0,8,2,2,0,2,0.64,25,18
5155_34,34,34,tokens.add(t);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,2,2,0,2,0.79,26,19
5155_35,35,35,t = lexer.nextToken();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,2,2,0,1,0.59,27,20
5155_39,39,39,return tokens;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,8,2,2,0,1,0.54,31,22
5154_1,1,1,public List<? extends Token> tokenize(String pattern) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.5,3,1
5154_2,2,2,List<Chunk> chunks = split(pattern);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,0,0,0,0.32,2,0
5154_4,4,4,List<Token> tokens = new ArrayList<Token>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,1,0.58,0,0
5154_5,5,38,"for (Chunk chunk : chunks) {
if ( chunk instanceof TagChunk ) {
TagChunk tagChunk = (TagChunk)chunk;
if ( Character.isUpperCase(tagChunk.getTag().charAt(0)) ) {
Integer ttype = parser.getTokenType(tagChunk.getTag());
if ( ttype==Token.INVALID_TYPE ) {
throw new IllegalArgumentException(""Unknown token ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}
TokenTagToken t = new TokenTagToken(tagChunk.getTag(), ttype, tagChunk.getLabel());
tokens.add(t);
}
else if ( Character.isLowerCase(tagChunk.getTag().charAt(0)) ) {
int ruleIndex = parser.getRuleIndex(tagChunk.getTag());
if ( ruleIndex==-1 ) {
throw new IllegalArgumentException(""Unknown rule ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}
int ruleImaginaryTokenType = parser.getATNWithBypassAlts().ruleToTokenType[ruleIndex];
tokens.add(new RuleTagToken(tagChunk.getTag(), ruleImaginaryTokenType, tagChunk.getLabel()));
}
else {
throw new IllegalArgumentException(""invalid tag: ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}
}
else {
TextChunk textChunk = (TextChunk)chunk;
ANTLRInputStream in = new ANTLRInputStream(textChunk.getText());
lexer.setInputStream(in);
Token t = lexer.nextToken();
while ( t.getType()!=Token.EOF ) {
tokens.add(t);
t = lexer.nextToken();
}
}
}",0,0,0,1,0,0,0,0,0,24,4,34,0,1,0,0,5,4,0,0,4,0.72,1,0
5154_6,6,37,"if ( chunk instanceof TagChunk ) {
TagChunk tagChunk = (TagChunk)chunk;
if ( Character.isUpperCase(tagChunk.getTag().charAt(0)) ) {
Integer ttype = parser.getTokenType(tagChunk.getTag());
if ( ttype==Token.INVALID_TYPE ) {
throw new IllegalArgumentException(""Unknown token ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}
TokenTagToken t = new TokenTagToken(tagChunk.getTag(), ttype, tagChunk.getLabel());
tokens.add(t);
}
else if ( Character.isLowerCase(tagChunk.getTag().charAt(0)) ) {
int ruleIndex = parser.getRuleIndex(tagChunk.getTag());
if ( ruleIndex==-1 ) {
throw new IllegalArgumentException(""Unknown rule ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}
int ruleImaginaryTokenType = parser.getATNWithBypassAlts().ruleToTokenType[ruleIndex];
tokens.add(new RuleTagToken(tagChunk.getTag(), ruleImaginaryTokenType, tagChunk.getLabel()));
}
else {
throw new IllegalArgumentException(""invalid tag: ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}
}
else {
TextChunk textChunk = (TextChunk)chunk;
ANTLRInputStream in = new ANTLRInputStream(textChunk.getText());
lexer.setInputStream(in);
Token t = lexer.nextToken();
while ( t.getType()!=Token.EOF ) {
tokens.add(t);
t = lexer.nextToken();
}
}",1,0,0,0,0,0,0,0,0,23,3,32,0,0,0,0,5,4,0,0,4,0.72,2,1
5154_7,7,7,TagChunk tagChunk = (TagChunk)chunk;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.51,3,2
5154_8,8,26,"if ( Character.isUpperCase(tagChunk.getTag().charAt(0)) ) {
Integer ttype = parser.getTokenType(tagChunk.getTag());
if ( ttype==Token.INVALID_TYPE ) {
throw new IllegalArgumentException(""Unknown token ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}
TokenTagToken t = new TokenTagToken(tagChunk.getTag(), ttype, tagChunk.getLabel());
tokens.add(t);
}
else if ( Character.isLowerCase(tagChunk.getTag().charAt(0)) ) {
int ruleIndex = parser.getRuleIndex(tagChunk.getTag());
if ( ruleIndex==-1 ) {
throw new IllegalArgumentException(""Unknown rule ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}
int ruleImaginaryTokenType = parser.getATNWithBypassAlts().ruleToTokenType[ruleIndex];
tokens.add(new RuleTagToken(tagChunk.getTag(), ruleImaginaryTokenType, tagChunk.getLabel()));
}
else {
throw new IllegalArgumentException(""invalid tag: ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,13,2,19,0,1,0,0,5,4,0,0,2,0.6,4,3
5154_9,9,9,Integer ttype = parser.getTokenType(tagChunk.getTag());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,4,0,0,2,0.57,5,4
5154_10,10,12,"if ( ttype==Token.INVALID_TYPE ) {
throw new IllegalArgumentException(""Unknown token ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,4,0,0,2,0.62,6,5
5154_11,11,11,"throw new IllegalArgumentException(""Unknown token ""+tagChunk.getTag()+"" in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,4,0,0,2,0.61,7,6
5154_13,13,13,"TokenTagToken t = new TokenTagToken(tagChunk.getTag(), ttype, tagChunk.getLabel());",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,4,0,0,2,0.69,9,8
5154_14,14,14,tokens.add(t);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.5,10,8
5154_16,16,16,else if ( Character.isLowerCase(tagChunk.getTag().charAt(0)) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.49,12,10
5154_17,17,17,int ruleIndex = parser.getRuleIndex(tagChunk.getTag());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,4,0,0,1,0.44,13,10
5154_18,18,20,"if ( ruleIndex==-1 ) {
throw new IllegalArgumentException(""Unknown rule ""+tagChunk.getTag()+"" in pattern: ""+pattern);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,4,0,0,1,0.49,14,11
5154_19,19,19,"throw new IllegalArgumentException(""Unknown rule ""+tagChunk.getTag()+"" in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,4,0,0,1,0.51,15,12
5154_21,21,21,int ruleImaginaryTokenType = parser.getATNWithBypassAlts().ruleToTokenType[ruleIndex];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.44,17,14
5154_22,22,22,"tokens.add(new RuleTagToken(tagChunk.getTag(), ruleImaginaryTokenType, tagChunk.getLabel()));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,2,0.61,18,14
5154_24,24,24,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.18,20,16
5154_25,25,25,"throw new IllegalArgumentException(""invalid tag: ""+tagChunk.getTag()+"" in pattern: ""+pattern);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,4,0,0,1,0.54,21,16
5154_28,28,28,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.18,24,18
5154_29,29,29,TextChunk textChunk = (TextChunk)chunk;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.49,25,18
5154_30,30,30,ANTLRInputStream in = new ANTLRInputStream(textChunk.getText());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,2,0.66,26,19
5154_31,31,31,lexer.setInputStream(in);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.54,27,20
5154_32,32,32,Token t = lexer.nextToken();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,4,0,0,1,0.58,28,21
5154_33,33,36,"while ( t.getType()!=Token.EOF ) {
tokens.add(t);
t = lexer.nextToken();
}",0,1,0,0,0,0,0,0,0,2,1,4,1,1,0,0,5,4,0,0,1,0.5,29,22
5154_34,34,34,tokens.add(t);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.5,30,23
5154_35,35,35,t = lexer.nextToken();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.52,31,24
5154_39,39,39,return tokens;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.51,35,26
5153_1,1,3,"protected ParseTree matchImpl(ParseTree tree,
ParseTree patternTree,
MultiMap<String, ParseTree> labels)",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,7,7,0,0,1,0.5,47,30
5153_5,5,7,"if (tree == null) {
throw new IllegalArgumentException(""tree cannot be null"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,7,7,0,0,0,0.3,43,28
5153_6,6,6,"throw new IllegalArgumentException(""tree cannot be null"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,7,0,0,0,0.3,44,28
5153_9,9,11,"if (patternTree == null) {
throw new IllegalArgumentException(""patternTree cannot be null"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,7,0,0,0,0.3,39,26
5153_10,10,10,"throw new IllegalArgumentException(""patternTree cannot be null"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,7,0,0,0,0.3,40,26
5153_13,13,40,"if ( tree instanceof TerminalNode && patternTree instanceof TerminalNode ) {
TerminalNode t1 = (TerminalNode)tree;
TerminalNode t2 = (TerminalNode)patternTree;
ParseTree mismatchedNode = null;
if ( t1.getSymbol().getType() == t2.getSymbol().getType() ) {
if ( t2.getSymbol() instanceof TokenTagToken ) {
TokenTagToken tokenTagToken = (TokenTagToken)t2.getSymbol();
labels.map(tokenTagToken.getTokenName(), tree);
if ( tokenTagToken.getLabel()!=null ) {
labels.map(tokenTagToken.getLabel(), tree);
}
}
else if ( t1.getText().equals(t2.getText()) ) {
}
else {
if (mismatchedNode == null) {
mismatchedNode = t1;
}
}
}
else {
if (mismatchedNode == null) {
mismatchedNode = t1;
}
}

return mismatchedNode;
}",1,0,0,0,0,0,0,0,0,17,4,28,0,0,1,1,7,7,0,0,3,0.62,10,8
5153_14,14,14,TerminalNode t1 = (TerminalNode)tree;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.54,36,24
5153_15,15,15,TerminalNode t2 = (TerminalNode)patternTree;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.52,35,23
5153_16,16,16,ParseTree mismatchedNode = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,7,0,0,1,0.5,34,22
5153_17,17,37,"if ( t1.getSymbol().getType() == t2.getSymbol().getType() ) {
if ( t2.getSymbol() instanceof TokenTagToken ) {
TokenTagToken tokenTagToken = (TokenTagToken)t2.getSymbol();
labels.map(tokenTagToken.getTokenName(), tree);
if ( tokenTagToken.getLabel()!=null ) {
labels.map(tokenTagToken.getLabel(), tree);
}
}
else if ( t1.getText().equals(t2.getText()) ) {
}
else {
if (mismatchedNode == null) {
mismatchedNode = t1;
}
}
}
else {
if (mismatchedNode == null) {
mismatchedNode = t1;
}
}",1,0,0,0,0,0,0,0,0,12,3,21,0,1,0,1,7,7,0,0,3,0.61,13,9
5153_18,18,31,"if ( t2.getSymbol() instanceof TokenTagToken ) {
TokenTagToken tokenTagToken = (TokenTagToken)t2.getSymbol();
labels.map(tokenTagToken.getTokenName(), tree);
if ( tokenTagToken.getLabel()!=null ) {
labels.map(tokenTagToken.getLabel(), tree);
}
}
else if ( t1.getText().equals(t2.getText()) ) {
}
else {
if (mismatchedNode == null) {
mismatchedNode = t1;
}
}",1,0,0,0,0,0,0,0,0,8,2,14,0,0,0,0,7,7,0,0,3,0.61,19,12
5153_19,19,19,TokenTagToken tokenTagToken = (TokenTagToken)t2.getSymbol();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,7,0,0,0,0.38,31,19
5153_20,20,20,"labels.map(tokenTagToken.getTokenName(), tree);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,7,0,0,2,0.57,30,18
5153_21,21,23,"if ( tokenTagToken.getLabel()!=null ) {
labels.map(tokenTagToken.getLabel(), tree);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,7,7,0,0,1,0.51,27,16
5153_22,22,22,"labels.map(tokenTagToken.getLabel(), tree);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.53,28,16
5153_25,25,25,else if ( t1.getText().equals(t2.getText()) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.42,25,15
5153_27,27,27,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.2,23,14
5153_28,28,30,"if (mismatchedNode == null) {
mismatchedNode = t1;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,7,0,0,1,0.58,20,12
5153_29,29,29,mismatchedNode = t1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.6,21,12
5153_33,33,33,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.2,17,11
5153_34,34,36,"if (mismatchedNode == null) {
mismatchedNode = t1;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,7,0,0,1,0.58,14,9
5153_35,35,35,mismatchedNode = t1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.6,15,9
5153_39,39,39,return mismatchedNode;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,7,0,0,1,0.54,11,8
5153_42,42,81,"if ( tree instanceof ParserRuleContext && patternTree instanceof ParserRuleContext ) {
ParserRuleContext r1 = (ParserRuleContext)tree;
ParserRuleContext r2 = (ParserRuleContext)patternTree;
ParseTree mismatchedNode = null;
RuleTagToken ruleTagToken = getRuleTagToken(r2);
if ( ruleTagToken!=null ) {
ParseTreeMatch m = null;
if ( r1.getRuleContext().getRuleIndex() == r2.getRuleContext().getRuleIndex() ) {
labels.map(ruleTagToken.getRuleName(), tree);
if ( ruleTagToken.getLabel()!=null ) {
labels.map(ruleTagToken.getLabel(), tree);
}
}
else {
if (mismatchedNode == null) {
mismatchedNode = r1;
}
}

return mismatchedNode;
}

if ( r1.getChildCount()!=r2.getChildCount() ) {
if (mismatchedNode == null) {
mismatchedNode = r1;
}

return mismatchedNode;
}

int n = r1.getChildCount();
for (int i = 0; i<n; i++) {
ParseTree childMatch = matchImpl(r1.getChild(i), patternTree.getChild(i), labels);
if ( childMatch != null ) {
return childMatch;
}
}

return mismatchedNode;
}",1,0,0,0,0,0,0,0,0,24,4,40,0,0,1,1,7,7,0,0,4,0.67,0,0
5153_43,43,43,ParserRuleContext r1 = (ParserRuleContext)tree;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.49,7,6
5153_44,44,44,ParserRuleContext r2 = (ParserRuleContext)patternTree;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.47,6,5
5153_45,45,45,ParseTree mismatchedNode = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.5,5,4
5153_46,46,46,RuleTagToken ruleTagToken = getRuleTagToken(r2);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,7,0,0,1,0.48,4,3
5153_47,47,62,"if ( ruleTagToken!=null ) {
ParseTreeMatch m = null;
if ( r1.getRuleContext().getRuleIndex() == r2.getRuleContext().getRuleIndex() ) {
labels.map(ruleTagToken.getRuleName(), tree);
if ( ruleTagToken.getLabel()!=null ) {
labels.map(ruleTagToken.getLabel(), tree);
}
}
else {
if (mismatchedNode == null) {
mismatchedNode = r1;
}
}

return mismatchedNode;
}",1,0,0,0,0,0,0,0,0,9,3,16,0,1,0,1,7,7,0,0,4,0.69,0,0
5153_48,48,48,ParseTreeMatch m = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.29,2,1
5153_49,49,59,"if ( r1.getRuleContext().getRuleIndex() == r2.getRuleContext().getRuleIndex() ) {
labels.map(ruleTagToken.getRuleName(), tree);
if ( ruleTagToken.getLabel()!=null ) {
labels.map(ruleTagToken.getLabel(), tree);
}
}
else {
if (mismatchedNode == null) {
mismatchedNode = r1;
}
}",1,0,0,0,0,0,0,0,0,6,2,11,0,0,0,1,7,7,0,0,4,0.7,0,0
5153_50,50,50,"labels.map(ruleTagToken.getRuleName(), tree);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,7,0,0,3,0.69,0,0
5153_51,51,53,"if ( ruleTagToken.getLabel()!=null ) {
labels.map(ruleTagToken.getLabel(), tree);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,7,7,0,0,2,0.61,1,0
5153_52,52,52,"labels.map(ruleTagToken.getLabel(), tree);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,2,0.63,2,1
5153_55,55,55,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.2,5,3
5153_56,56,58,"if (mismatchedNode == null) {
mismatchedNode = r1;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,7,0,0,1,0.58,6,3
5153_57,57,57,mismatchedNode = r1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.63,7,4
5153_61,61,61,return mismatchedNode;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,7,0,0,1,0.54,11,6
5153_64,64,70,"if ( r1.getChildCount()!=r2.getChildCount() ) {
if (mismatchedNode == null) {
mismatchedNode = r1;
}

return mismatchedNode;
}",1,0,0,0,0,0,0,0,0,3,2,7,0,0,1,1,7,7,0,0,1,0.53,14,7
5153_65,65,67,"if (mismatchedNode == null) {
mismatchedNode = r1;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,7,7,0,0,1,0.58,15,7
5153_66,66,66,mismatchedNode = r1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.63,16,8
5153_69,69,69,return mismatchedNode;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,7,0,0,1,0.54,19,10
5153_72,72,72,int n = r1.getChildCount();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,7,0,0,0,0.4,22,11
5153_73,73,78,"for (int i = 0; i<n; i++) {
ParseTree childMatch = matchImpl(r1.getChild(i), patternTree.getChild(i), labels);
if ( childMatch != null ) {
return childMatch;
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,1,0,1,7,7,0,0,1,0.51,23,11
5153_74,74,74,"ParseTree childMatch = matchImpl(r1.getChild(i), patternTree.getChild(i), labels);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,7,0,0,1,0.53,24,12
5153_75,75,77,"if ( childMatch != null ) {
return childMatch;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,7,0,0,0,0.34,25,13
5153_76,76,76,return childMatch;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.34,26,14
5153_80,80,80,return mismatchedNode;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,7,0,0,1,0.54,30,16
5153_83,83,83,return tree;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,7,0,0,0,0.3,33,17
5152_1,1,3,"protected ParseTree matchImpl(ParseTree tree,
ParseTree patternTree,
MultiMap<String, ParseTree> labels)",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,7,5,0,0,1,0.5,17,11
5152_5,5,7,"if (tree == null) {
throw new IllegalArgumentException(""tree cannot be null"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,7,5,0,0,0,0.31,13,9
5152_6,6,6,"throw new IllegalArgumentException(""tree cannot be null"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,5,0,0,0,0.3,14,9
5152_9,9,11,"if (patternTree == null) {
throw new IllegalArgumentException(""patternTree cannot be null"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,5,0,0,0,0.3,9,7
5152_10,10,10,"throw new IllegalArgumentException(""patternTree cannot be null"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,5,0,0,0,0.3,10,7
5152_13,13,40,"if ( tree instanceof TerminalNode && patternTree instanceof TerminalNode ) {
TerminalNode t1 = (TerminalNode)tree;
TerminalNode t2 = (TerminalNode)patternTree;
ParseTree mismatchedNode = null;
if ( t1.getSymbol().getType() == t2.getSymbol().getType() ) {
if ( t2.getSymbol() instanceof TokenTagToken ) {
TokenTagToken tokenTagToken = (TokenTagToken)t2.getSymbol();
labels.map(tokenTagToken.getTokenName(), tree);
if ( tokenTagToken.getLabel()!=null ) {
labels.map(tokenTagToken.getLabel(), tree);
}
}
else if ( t1.getText().equals(t2.getText()) ) {
}
else {
if (mismatchedNode == null) {
mismatchedNode = t1;
}
}
}
else {
if (mismatchedNode == null) {
mismatchedNode = t1;
}
}

return mismatchedNode;
}",1,0,0,0,0,0,0,0,0,17,4,28,0,0,1,1,7,5,0,0,4,0.7,0,0
5152_14,14,14,TerminalNode t1 = (TerminalNode)tree;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,5,0,0,1,0.51,6,5
5152_15,15,15,TerminalNode t2 = (TerminalNode)patternTree;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,5,0,0,1,0.5,5,4
5152_16,16,16,ParseTree mismatchedNode = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,0,0,1,0.5,4,3
5152_17,17,37,"if ( t1.getSymbol().getType() == t2.getSymbol().getType() ) {
if ( t2.getSymbol() instanceof TokenTagToken ) {
TokenTagToken tokenTagToken = (TokenTagToken)t2.getSymbol();
labels.map(tokenTagToken.getTokenName(), tree);
if ( tokenTagToken.getLabel()!=null ) {
labels.map(tokenTagToken.getLabel(), tree);
}
}
else if ( t1.getText().equals(t2.getText()) ) {
}
else {
if (mismatchedNode == null) {
mismatchedNode = t1;
}
}
}
else {
if (mismatchedNode == null) {
mismatchedNode = t1;
}
}",1,0,0,0,0,0,0,0,0,12,3,21,0,1,0,1,7,5,0,0,4,0.71,0,0
5152_18,18,31,"if ( t2.getSymbol() instanceof TokenTagToken ) {
TokenTagToken tokenTagToken = (TokenTagToken)t2.getSymbol();
labels.map(tokenTagToken.getTokenName(), tree);
if ( tokenTagToken.getLabel()!=null ) {
labels.map(tokenTagToken.getLabel(), tree);
}
}
else if ( t1.getText().equals(t2.getText()) ) {
}
else {
if (mismatchedNode == null) {
mismatchedNode = t1;
}
}",1,0,0,0,0,0,0,0,0,8,2,14,0,0,0,0,7,5,0,0,4,0.73,0,0
5152_19,19,19,TokenTagToken tokenTagToken = (TokenTagToken)t2.getSymbol();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,0,0,1,0.58,1,0
5152_20,20,20,"labels.map(tokenTagToken.getTokenName(), tree);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,0,0,3,0.72,0,0
5152_21,21,23,"if ( tokenTagToken.getLabel()!=null ) {
labels.map(tokenTagToken.getLabel(), tree);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,7,5,0,0,2,0.66,1,0
5152_22,22,22,"labels.map(tokenTagToken.getLabel(), tree);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,2,0.67,2,1
5152_25,25,25,else if ( t1.getText().equals(t2.getText()) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.42,5,3
5152_27,27,27,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.19,7,4
5152_28,28,30,"if (mismatchedNode == null) {
mismatchedNode = t1;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,5,0,0,1,0.58,8,4
5152_29,29,29,mismatchedNode = t1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,1,0.6,9,5
5152_33,33,33,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.19,13,7
5152_34,34,36,"if (mismatchedNode == null) {
mismatchedNode = t1;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,5,0,0,1,0.58,14,7
5152_35,35,35,mismatchedNode = t1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,1,0.6,15,8
5152_39,39,39,return mismatchedNode;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,5,0,0,1,0.55,19,10
5152_42,42,81,"if ( tree instanceof ParserRuleContext && patternTree instanceof ParserRuleContext ) {
ParserRuleContext r1 = (ParserRuleContext)tree;
ParserRuleContext r2 = (ParserRuleContext)patternTree;
ParseTree mismatchedNode = null;
RuleTagToken ruleTagToken = getRuleTagToken(r2);
if ( ruleTagToken!=null ) {
ParseTreeMatch m = null;
if ( r1.getRuleContext().getRuleIndex() == r2.getRuleContext().getRuleIndex() ) {
labels.map(ruleTagToken.getRuleName(), tree);
if ( ruleTagToken.getLabel()!=null ) {
labels.map(ruleTagToken.getLabel(), tree);
}
}
else {
if (mismatchedNode == null) {
mismatchedNode = r1;
}
}

return mismatchedNode;
}

if ( r1.getChildCount()!=r2.getChildCount() ) {
if (mismatchedNode == null) {
mismatchedNode = r1;
}

return mismatchedNode;
}

int n = r1.getChildCount();
for (int i = 0; i<n; i++) {
ParseTree childMatch = matchImpl(r1.getChild(i), patternTree.getChild(i), labels);
if ( childMatch != null ) {
return childMatch;
}
}

return mismatchedNode;
}",1,0,0,0,0,0,0,0,0,24,4,40,0,0,1,1,7,5,0,0,4,0.65,22,11
5152_43,43,43,ParserRuleContext r1 = (ParserRuleContext)tree;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.34,23,11
5152_44,44,44,ParserRuleContext r2 = (ParserRuleContext)patternTree;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.34,24,12
5152_45,45,45,ParseTree mismatchedNode = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,5,0,0,1,0.5,25,13
5152_46,46,46,RuleTagToken ruleTagToken = getRuleTagToken(r2);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,0,0,1,0.47,26,14
5152_47,47,62,"if ( ruleTagToken!=null ) {
ParseTreeMatch m = null;
if ( r1.getRuleContext().getRuleIndex() == r2.getRuleContext().getRuleIndex() ) {
labels.map(ruleTagToken.getRuleName(), tree);
if ( ruleTagToken.getLabel()!=null ) {
labels.map(ruleTagToken.getLabel(), tree);
}
}
else {
if (mismatchedNode == null) {
mismatchedNode = r1;
}
}

return mismatchedNode;
}",1,0,0,0,0,0,0,0,0,9,3,16,0,1,0,1,7,5,0,0,4,0.65,27,15
5152_48,48,48,ParseTreeMatch m = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.29,28,16
5152_49,49,59,"if ( r1.getRuleContext().getRuleIndex() == r2.getRuleContext().getRuleIndex() ) {
labels.map(ruleTagToken.getRuleName(), tree);
if ( ruleTagToken.getLabel()!=null ) {
labels.map(ruleTagToken.getLabel(), tree);
}
}
else {
if (mismatchedNode == null) {
mismatchedNode = r1;
}
}",1,0,0,0,0,0,0,0,0,6,2,11,0,0,0,1,7,5,0,0,4,0.66,29,17
5152_50,50,50,"labels.map(ruleTagToken.getRuleName(), tree);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,0,0,3,0.65,30,18
5152_51,51,53,"if ( ruleTagToken.getLabel()!=null ) {
labels.map(ruleTagToken.getLabel(), tree);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,7,5,0,0,2,0.61,31,19
5152_52,52,52,"labels.map(ruleTagToken.getLabel(), tree);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,2,0.62,32,20
5152_55,55,55,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.19,35,22
5152_56,56,58,"if (mismatchedNode == null) {
mismatchedNode = r1;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,5,0,0,1,0.59,36,22
5152_57,57,57,mismatchedNode = r1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,1,0.64,37,23
5152_61,61,61,return mismatchedNode;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,5,0,0,1,0.55,41,25
5152_64,64,70,"if ( r1.getChildCount()!=r2.getChildCount() ) {
if (mismatchedNode == null) {
mismatchedNode = r1;
}

return mismatchedNode;
}",1,0,0,0,0,0,0,0,0,3,2,7,0,0,1,1,7,5,0,0,1,0.54,44,26
5152_65,65,67,"if (mismatchedNode == null) {
mismatchedNode = r1;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,7,5,0,0,1,0.59,45,26
5152_66,66,66,mismatchedNode = r1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,1,0.64,46,27
5152_69,69,69,return mismatchedNode;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,5,0,0,1,0.55,49,29
5152_72,72,72,int n = r1.getChildCount();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,5,0,0,0,0.43,52,30
5152_73,73,78,"for (int i = 0; i<n; i++) {
ParseTree childMatch = matchImpl(r1.getChild(i), patternTree.getChild(i), labels);
if ( childMatch != null ) {
return childMatch;
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,1,0,1,7,5,0,0,1,0.53,53,30
5152_74,74,74,"ParseTree childMatch = matchImpl(r1.getChild(i), patternTree.getChild(i), labels);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,0,0,1,0.54,54,31
5152_75,75,77,"if ( childMatch != null ) {
return childMatch;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,5,0,0,0,0.34,55,32
5152_76,76,76,return childMatch;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.34,56,33
5152_80,80,80,return mismatchedNode;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,5,0,0,1,0.55,60,35
5152_83,83,83,return tree;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,5,0,0,0,0.29,63,36
5151_1,1,3,"protected ParseTree matchImpl(ParseTree tree,
ParseTree patternTree,
MultiMap<String, ParseTree> labels)",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,2,2,0,0,0,0.28,14,8
5151_5,5,7,"if (tree == null) {
throw new IllegalArgumentException(""tree cannot be null"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,2,2,0,0,0,0.26,10,6
5151_6,6,6,"throw new IllegalArgumentException(""tree cannot be null"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,2,0,0,0,0.26,11,6
5151_9,9,11,"if (patternTree == null) {
throw new IllegalArgumentException(""patternTree cannot be null"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,0,0.26,6,4
5151_10,10,10,"throw new IllegalArgumentException(""patternTree cannot be null"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,2,0,0,0,0.27,7,4
5151_13,13,40,"if ( tree instanceof TerminalNode && patternTree instanceof TerminalNode ) {
TerminalNode t1 = (TerminalNode)tree;
TerminalNode t2 = (TerminalNode)patternTree;
ParseTree mismatchedNode = null;
if ( t1.getSymbol().getType() == t2.getSymbol().getType() ) {
if ( t2.getSymbol() instanceof TokenTagToken ) {
TokenTagToken tokenTagToken = (TokenTagToken)t2.getSymbol();
labels.map(tokenTagToken.getTokenName(), tree);
if ( tokenTagToken.getLabel()!=null ) {
labels.map(tokenTagToken.getLabel(), tree);
}
}
else if ( t1.getText().equals(t2.getText()) ) {
}
else {
if (mismatchedNode == null) {
mismatchedNode = t1;
}
}
}
else {
if (mismatchedNode == null) {
mismatchedNode = t1;
}
}

return mismatchedNode;
}",1,0,0,0,0,0,0,0,0,17,4,28,0,0,1,1,2,2,0,0,2,0.7,0,0
5151_14,14,14,TerminalNode t1 = (TerminalNode)tree;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.29,3,2
5151_15,15,15,TerminalNode t2 = (TerminalNode)patternTree;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.31,2,1
5151_16,16,16,ParseTree mismatchedNode = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.41,1,0
5151_17,17,37,"if ( t1.getSymbol().getType() == t2.getSymbol().getType() ) {
if ( t2.getSymbol() instanceof TokenTagToken ) {
TokenTagToken tokenTagToken = (TokenTagToken)t2.getSymbol();
labels.map(tokenTagToken.getTokenName(), tree);
if ( tokenTagToken.getLabel()!=null ) {
labels.map(tokenTagToken.getLabel(), tree);
}
}
else if ( t1.getText().equals(t2.getText()) ) {
}
else {
if (mismatchedNode == null) {
mismatchedNode = t1;
}
}
}
else {
if (mismatchedNode == null) {
mismatchedNode = t1;
}
}",1,0,0,0,0,0,0,0,0,12,3,21,0,1,0,1,2,2,0,0,2,0.72,0,0
5151_18,18,31,"if ( t2.getSymbol() instanceof TokenTagToken ) {
TokenTagToken tokenTagToken = (TokenTagToken)t2.getSymbol();
labels.map(tokenTagToken.getTokenName(), tree);
if ( tokenTagToken.getLabel()!=null ) {
labels.map(tokenTagToken.getLabel(), tree);
}
}
else if ( t1.getText().equals(t2.getText()) ) {
}
else {
if (mismatchedNode == null) {
mismatchedNode = t1;
}
}",1,0,0,0,0,0,0,0,0,8,2,14,0,0,0,0,2,2,0,0,1,0.63,1,0
5151_19,19,19,TokenTagToken tokenTagToken = (TokenTagToken)t2.getSymbol();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.64,2,1
5151_20,20,20,"labels.map(tokenTagToken.getTokenName(), tree);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,1,0.59,3,2
5151_21,21,23,"if ( tokenTagToken.getLabel()!=null ) {
labels.map(tokenTagToken.getLabel(), tree);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,2,2,0,0,1,0.57,4,3
5151_22,22,22,"labels.map(tokenTagToken.getLabel(), tree);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.56,5,4
5151_25,25,25,else if ( t1.getText().equals(t2.getText()) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.36,8,6
5151_27,27,27,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.1,10,7
5151_28,28,30,"if (mismatchedNode == null) {
mismatchedNode = t1;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,2,0,0,0,0.47,11,7
5151_29,29,29,mismatchedNode = t1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.47,12,8
5151_33,33,33,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.1,16,10
5151_34,34,36,"if (mismatchedNode == null) {
mismatchedNode = t1;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,2,0,0,0,0.47,17,10
5151_35,35,35,mismatchedNode = t1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.47,18,11
5151_39,39,39,return mismatchedNode;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.43,22,13
5151_42,42,81,"if ( tree instanceof ParserRuleContext && patternTree instanceof ParserRuleContext ) {
ParserRuleContext r1 = (ParserRuleContext)tree;
ParserRuleContext r2 = (ParserRuleContext)patternTree;
ParseTree mismatchedNode = null;
RuleTagToken ruleTagToken = getRuleTagToken(r2);
if ( ruleTagToken!=null ) {
ParseTreeMatch m = null;
if ( r1.getRuleContext().getRuleIndex() == r2.getRuleContext().getRuleIndex() ) {
labels.map(ruleTagToken.getRuleName(), tree);
if ( ruleTagToken.getLabel()!=null ) {
labels.map(ruleTagToken.getLabel(), tree);
}
}
else {
if (mismatchedNode == null) {
mismatchedNode = r1;
}
}

return mismatchedNode;
}

if ( r1.getChildCount()!=r2.getChildCount() ) {
if (mismatchedNode == null) {
mismatchedNode = r1;
}

return mismatchedNode;
}

int n = r1.getChildCount();
for (int i = 0; i<n; i++) {
ParseTree childMatch = matchImpl(r1.getChild(i), patternTree.getChild(i), labels);
if ( childMatch != null ) {
return childMatch;
}
}

return mismatchedNode;
}",1,0,0,0,0,0,0,0,0,24,4,40,0,0,1,1,2,2,0,0,1,0.54,25,14
5151_43,43,43,ParserRuleContext r1 = (ParserRuleContext)tree;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,26,14
5151_44,44,44,ParserRuleContext r2 = (ParserRuleContext)patternTree;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.23,27,15
5151_45,45,45,ParseTree mismatchedNode = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.41,28,16
5151_46,46,46,RuleTagToken ruleTagToken = getRuleTagToken(r2);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.54,29,17
5151_47,47,62,"if ( ruleTagToken!=null ) {
ParseTreeMatch m = null;
if ( r1.getRuleContext().getRuleIndex() == r2.getRuleContext().getRuleIndex() ) {
labels.map(ruleTagToken.getRuleName(), tree);
if ( ruleTagToken.getLabel()!=null ) {
labels.map(ruleTagToken.getLabel(), tree);
}
}
else {
if (mismatchedNode == null) {
mismatchedNode = r1;
}
}

return mismatchedNode;
}",1,0,0,0,0,0,0,0,0,9,3,16,0,1,0,1,2,2,0,0,1,0.55,30,18
5151_48,48,48,ParseTreeMatch m = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.21,31,19
5151_49,49,59,"if ( r1.getRuleContext().getRuleIndex() == r2.getRuleContext().getRuleIndex() ) {
labels.map(ruleTagToken.getRuleName(), tree);
if ( ruleTagToken.getLabel()!=null ) {
labels.map(ruleTagToken.getLabel(), tree);
}
}
else {
if (mismatchedNode == null) {
mismatchedNode = r1;
}
}",1,0,0,0,0,0,0,0,0,6,2,11,0,0,0,1,2,2,0,0,1,0.55,32,20
5151_50,50,50,"labels.map(ruleTagToken.getRuleName(), tree);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,1,0.49,33,21
5151_51,51,53,"if ( ruleTagToken.getLabel()!=null ) {
labels.map(ruleTagToken.getLabel(), tree);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,2,2,0,0,1,0.51,34,22
5151_52,52,52,"labels.map(ruleTagToken.getLabel(), tree);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.51,35,23
5151_55,55,55,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.1,38,25
5151_56,56,58,"if (mismatchedNode == null) {
mismatchedNode = r1;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,2,0,0,0,0.47,39,25
5151_57,57,57,mismatchedNode = r1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.49,40,26
5151_61,61,61,return mismatchedNode;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.43,44,28
5151_64,64,70,"if ( r1.getChildCount()!=r2.getChildCount() ) {
if (mismatchedNode == null) {
mismatchedNode = r1;
}

return mismatchedNode;
}",1,0,0,0,0,0,0,0,0,3,2,7,0,0,1,1,2,2,0,0,0,0.42,47,29
5151_65,65,67,"if (mismatchedNode == null) {
mismatchedNode = r1;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,2,2,0,0,0,0.47,48,29
5151_66,66,66,mismatchedNode = r1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.49,49,30
5151_69,69,69,return mismatchedNode;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.43,52,32
5151_72,72,72,int n = r1.getChildCount();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.36,55,33
5151_73,73,78,"for (int i = 0; i<n; i++) {
ParseTree childMatch = matchImpl(r1.getChild(i), patternTree.getChild(i), labels);
if ( childMatch != null ) {
return childMatch;
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,1,0,1,2,2,0,0,0,0.34,56,33
5151_74,74,74,"ParseTree childMatch = matchImpl(r1.getChild(i), patternTree.getChild(i), labels);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.3,57,34
5151_75,75,77,"if ( childMatch != null ) {
return childMatch;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,2,0,0,0,0.26,58,35
5151_76,76,76,return childMatch;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.24,59,36
5151_80,80,80,return mismatchedNode;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.43,63,38
5151_83,83,83,return tree;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.12,66,39
5150_1,1,1,"public ParseTreePattern compile(String pattern, int patternRuleIndex) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,4,0.68,26,14
5150_2,2,2,List<? extends Token> tokenList = tokenize(pattern);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,1,0,1,0.44,25,13
5150_3,3,3,ListTokenSource tokenSrc = new ListTokenSource(tokenList);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,1,0,0,0.34,24,12
5150_4,4,4,CommonTokenStream tokens = new CommonTokenStream(tokenSrc);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,8,5,1,0,0,0.4,23,11
5150_6,6,10,"ParserInterpreter parserInterp = new ParserInterpreter(parser.getGrammarFileName(),
parser.getVocabulary(),
Arrays.asList(parser.getRuleNames()),
parser.getATNWithBypassAlts(),
tokens);",0,0,0,0,0,1,0,0,0,0,0,5,0,0,1,1,8,5,1,0,0,0.46,17,10
5150_12,12,12,ParseTree tree = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,5,1,0,2,0.65,15,9
5150_13,13,25,"try {
parserInterp.setErrorHandler(new BailErrorStrategy());
tree = parserInterp.parse(patternRuleIndex);
}
catch (ParseCancellationException e) {
throw (RecognitionException)e.getCause();
}
catch (RecognitionException re) {
throw re;
}
catch (Exception e) {
throw new CannotInvokeStartRule(e);
}",0,0,0,0,1,0,0,0,0,8,1,13,0,1,0,1,8,5,1,0,3,0.52,2,0
5150_14,14,14,parserInterp.setErrorHandler(new BailErrorStrategy());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,1,0,0,0.38,13,7
5150_15,15,15,tree = parserInterp.parse(patternRuleIndex);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,1,0,3,0.66,12,6
5150_17,17,17,catch (ParseCancellationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.42,10,5
5150_18,18,18,throw (RecognitionException)e.getCause();,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,5,1,0,0,0.29,9,4
5150_20,20,20,catch (RecognitionException re) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.28,7,3
5150_21,21,21,throw re;,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,5,1,0,0,0.27,6,2
5150_23,23,23,catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.26,4,1
5150_24,24,24,throw new CannotInvokeStartRule(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,5,1,0,0,0.31,3,0
5150_27,27,29,"if ( tokens.LA(1)!=Token.EOF ) {
throw new StartRuleDoesNotConsumeFullPattern();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,8,5,1,0,1,0.45,0,0
5150_28,28,28,throw new StartRuleDoesNotConsumeFullPattern();,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,5,1,0,1,0.47,1,0
5150_31,31,31,"return new ParseTreePattern(this, pattern, patternRuleIndex, tree);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,8,5,1,0,3,0.67,4,2
5149_1,1,2,"public static void _findAllNodes(ParseTree t, int index, boolean findTokens,
List<? super ParseTree> nodes)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.42,10,6
5149_4,4,11,"if ( findTokens && t instanceof TerminalNode ) {
TerminalNode tnode = (TerminalNode)t;
if ( tnode.getSymbol().getType()==index ) nodes.add(t);
}
else if ( !findTokens && t instanceof ParserRuleContext ) {
ParserRuleContext ctx = (ParserRuleContext)t;
if ( ctx.getRuleIndex() == index ) nodes.add(t);
}",1,0,0,0,0,0,0,0,0,5,1,8,0,0,0,0,2,2,0,0,0,0.38,1,0
5149_5,5,5,TerminalNode tnode = (TerminalNode)t;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.35,7,4
5149_6,6,6,if ( tnode.getSymbol().getType()==index ) nodes.add(t);,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.39,6,3
5149_8,8,8,else if ( !findTokens && t instanceof ParserRuleContext ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.32,4,2
5149_9,9,9,ParserRuleContext ctx = (ParserRuleContext)t;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.29,3,1
5149_10,10,10,if ( ctx.getRuleIndex() == index ) nodes.add(t);,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.37,2,0
5149_12,12,14,"for (int i = 0; i < t.getChildCount(); i++){
_findAllNodes(t.getChild(i), index, findTokens, nodes);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,0,0,0,2,2,0,0,0,0.41,0,0
5149_13,13,13,"_findAllNodes(t.getChild(i), index, findTokens, nodes);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.43,1,0
5148_1,1,2,"public static void _findAllNodes(ParseTree t, int index, boolean findTokens,
List<? super ParseTree> nodes)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,1,0.51,2,0
5148_4,4,11,"if ( findTokens && t instanceof TerminalNode ) {
TerminalNode tnode = (TerminalNode)t;
if ( tnode.getSymbol().getType()==index ) nodes.add(t);
}
else if ( !findTokens && t instanceof ParserRuleContext ) {
ParserRuleContext ctx = (ParserRuleContext)t;
if ( ctx.getRuleIndex() == index ) nodes.add(t);
}",1,0,0,0,0,0,0,0,0,5,1,8,0,0,0,0,4,3,0,0,1,0.48,0,0
5148_5,5,5,TerminalNode tnode = (TerminalNode)t;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.56,1,0
5148_6,6,6,if ( tnode.getSymbol().getType()==index ) nodes.add(t);,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.48,2,1
5148_8,8,8,else if ( !findTokens && t instanceof ParserRuleContext ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.33,4,3
5148_9,9,9,ParserRuleContext ctx = (ParserRuleContext)t;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.33,5,3
5148_10,10,10,if ( ctx.getRuleIndex() == index ) nodes.add(t);,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.47,6,4
5148_12,12,14,"for (int i = 0; i < t.getChildCount(); i++){
_findAllNodes(t.getChild(i), index, findTokens, nodes);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,1,0.5,8,6
5148_13,13,13,"_findAllNodes(t.getChild(i), index, findTokens, nodes);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.51,9,6
5147_1,1,2,"@Override
public void remove(int el) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,0,0.39,21,17
5147_3,3,3,"throw new IllegalStateException(""can't alter readonly IntervalSet"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,5,0,0,1,0.54,20,16
5147_4,4,4,int n = intervals.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.56,19,15
5147_5,5,29,"for (int i = 0; i < n; i++) {
Interval I = intervals.get(i);
int a = I.a;
int b = I.b;
if ( el<a ) {
break;
}
if ( el==a && el==b ) {
intervals.remove(i);
break;
}
if ( el==a ) {
I.a++;
break;
}
if ( el==b ) {
I.b--;
break;
}
if ( el>a && el<b ) {
int oldb = I.b;
I.b = el-1;
add(el+1, oldb);
}
}",0,0,1,0,0,0,0,0,0,18,2,25,0,1,0,0,5,5,0,0,2,0.68,0,0
5147_6,6,6,Interval I = intervals.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.64,17,13
5147_7,7,7,int a = I.a;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.42,16,12
5147_8,8,8,int b = I.b;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.69,15,11
5147_9,9,11,"if ( el<a ) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,5,0,0,0,0.39,12,9
5147_10,10,10,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,5,0,0,0,0.39,13,9
5147_12,12,15,"if ( el==a && el==b ) {
intervals.remove(i);
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,5,0,0,2,0.69,8,6
5147_13,13,13,intervals.remove(i);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.57,10,7
5147_14,14,14,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,5,0,0,0,0.39,9,6
5147_16,16,19,"if ( el==a ) {
I.a++;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,5,0,0,0,0.39,4,3
5147_17,17,17,I.a++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.0,6,4
5147_18,18,18,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,5,0,0,0,0.39,5,3
5147_20,20,23,"if ( el==b ) {
I.b--;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,5,0,0,1,0.68,0,0
5147_21,21,21,I.b--;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.75,2,1
5147_22,22,22,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,5,0,0,0,0.39,1,0
5147_24,24,28,"if ( el>a && el<b ) {
int oldb = I.b;
I.b = el-1;
add(el+1, oldb);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,5,5,0,0,1,0.59,0,0
5147_25,25,25,int oldb = I.b;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.65,1,0
5147_26,26,26,I.b = el-1;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.57,2,1
5147_27,27,27,"add(el+1, oldb);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.27,3,2
5146_1,1,2,"@Override
public boolean contains(int el) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,6,0,0,0,0.37,4,3
5146_3,3,3,int n = intervals.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,6,0,0,1,0.53,3,2
5146_4,4,4,int l = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.43,2,1
5146_5,5,5,int r = n - 1;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.37,1,0
5146_6,6,18,"while (l <= r) {
int m = (l + r) / 2;
Interval I = intervals.get(m);
int a = I.a;
int b = I.b;
if ( b<el ) {
l = m + 1;
} else if ( a>el ) {
r = m - 1;
} else {
return true;
}
}",0,1,0,0,0,0,0,0,0,10,2,13,0,1,0,0,7,6,0,0,1,0.47,0,0
5146_7,7,7,int m = (l + r) / 2;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.42,1,0
5146_8,8,8,Interval I = intervals.get(m);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,0,0,1,0.58,2,1
5146_9,9,9,int a = I.a;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.38,3,2
5146_10,10,10,int b = I.b;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.4,4,3
5146_11,11,17,"if ( b<el ) {
l = m + 1;
} else if ( a>el ) {
r = m - 1;
} else {
return true;
}",1,0,0,0,0,0,0,0,0,5,1,7,0,1,0,0,7,6,0,0,0,0.38,5,4
5146_12,12,12,l = m + 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.37,6,5
5146_13,13,13,} else if ( a>el ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.3,7,6
5146_14,14,14,r = m - 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.26,8,7
5146_15,15,15,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.3,9,8
5146_16,16,16,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.31,10,9
5146_19,19,19,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.31,13,11
5145_1,1,2,"@Override
public IntervalSet and(IntSet other) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,0,0,0,0.34,29,22
5145_3,3,5,"if ( other==null ) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,3,0,0,0,0.16,26,20
5145_4,4,4,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.16,27,20
5145_7,7,7,List<Interval> myIntervals = this.intervals;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,3,0,0,0,0.44,24,19
5145_8,8,8,List<Interval> theirIntervals = ((IntervalSet)other).intervals;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.43,23,18
5145_9,9,9,IntervalSet intersection = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.47,22,17
5145_10,10,10,int mySize = myIntervals.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,6,3,0,0,0,0.39,21,16
5145_11,11,11,int theirSize = theirIntervals.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,6,3,0,0,0,0.39,20,15
5145_12,12,12,int i = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.35,19,14
5145_13,13,13,int j = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.45,18,13
5145_14,14,49,"while ( i<mySize && j<theirSize ) {
Interval mine = myIntervals.get(i);
Interval theirs = theirIntervals.get(j);
if ( mine.startsBeforeDisjoint(theirs) ) {
i++;
}
else if ( theirs.startsBeforeDisjoint(mine) ) {
j++;
}
else if ( mine.properlyContains(theirs) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
j++;
}
else if ( theirs.properlyContains(mine) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
i++;
}
else if ( !mine.disjoint(theirs) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
if ( mine.startsAfterNonDisjoint(theirs) ) {
j++;
}
else if ( theirs.startsAfterNonDisjoint(mine) ) {
i++;
}
}
}",0,1,0,0,0,0,0,0,0,24,3,36,0,1,0,0,6,3,0,0,4,0.74,0,0
5145_15,15,15,Interval mine = myIntervals.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,6,3,0,0,2,0.69,16,11
5145_16,16,16,Interval theirs = theirIntervals.get(j);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,3,0,0,1,0.63,15,10
5145_17,17,48,"if ( mine.startsBeforeDisjoint(theirs) ) {
i++;
}
else if ( theirs.startsBeforeDisjoint(mine) ) {
j++;
}
else if ( mine.properlyContains(theirs) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
j++;
}
else if ( theirs.properlyContains(mine) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
i++;
}
else if ( !mine.disjoint(theirs) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
if ( mine.startsAfterNonDisjoint(theirs) ) {
j++;
}
else if ( theirs.startsAfterNonDisjoint(mine) ) {
i++;
}
}",1,0,0,0,0,0,0,0,0,21,2,32,0,1,0,0,6,3,0,0,3,0.68,0,0
5145_18,18,18,i++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.0,13,8
5145_20,20,20,else if ( theirs.startsBeforeDisjoint(mine) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.42,11,7
5145_21,21,21,j++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.52,10,6
5145_23,23,23,else if ( mine.properlyContains(theirs) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.49,8,5
5145_24,24,26,"if ( intersection==null ) {
intersection = new IntervalSet();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,0,0,1,0.52,5,3
5145_25,25,25,intersection = new IntervalSet();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.51,6,3
5145_27,27,27,intersection.add(mine.intersection(theirs));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,3,0.84,4,2
5145_28,28,28,j++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.52,3,1
5145_30,30,30,else if ( theirs.properlyContains(mine) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.49,1,0
5145_31,31,33,"if ( intersection==null ) {
intersection = new IntervalSet();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,0,0,1,0.52,0,0
5145_32,32,32,intersection = new IntervalSet();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.51,1,0
5145_34,34,34,intersection.add(mine.intersection(theirs));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,3,0.84,3,2
5145_35,35,35,i++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.0,4,2
5145_37,37,37,else if ( !mine.disjoint(theirs) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.45,6,4
5145_38,38,40,"if ( intersection==null ) {
intersection = new IntervalSet();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,0,0,1,0.52,7,4
5145_39,39,39,intersection = new IntervalSet();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.51,8,5
5145_41,41,41,intersection.add(mine.intersection(theirs));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,3,0.84,10,7
5145_42,42,47,"if ( mine.startsAfterNonDisjoint(theirs) ) {
j++;
}
else if ( theirs.startsAfterNonDisjoint(mine) ) {
i++;
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,0,6,3,0,0,1,0.5,11,7
5145_43,43,43,j++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.52,12,8
5145_45,45,45,else if ( theirs.startsAfterNonDisjoint(mine) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.42,14,10
5145_46,46,46,i++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.0,15,10
5145_50,50,52,"if ( intersection==null ) {
return new IntervalSet();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,0,0,1,0.45,19,12
5145_51,51,51,return new IntervalSet();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.37,20,12
5145_53,53,53,return intersection;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.5,22,14
5144_1,1,2,"@Override
public IntervalSet and(IntSet other) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,1,0,1,0.46,19,15
5144_3,3,5,"if ( other==null ) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,4,1,0,0,0.29,16,13
5144_4,4,4,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.29,17,13
5144_7,7,7,List<Interval> myIntervals = this.intervals;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,4,1,0,1,0.66,14,12
5144_8,8,8,List<Interval> theirIntervals = ((IntervalSet)other).intervals;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.62,13,11
5144_9,9,9,IntervalSet intersection = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.53,12,10
5144_10,10,10,int mySize = myIntervals.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,6,4,1,0,1,0.5,11,9
5144_11,11,11,int theirSize = theirIntervals.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,6,4,1,0,1,0.5,10,8
5144_12,12,12,int i = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.36,9,7
5144_13,13,13,int j = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.43,8,6
5144_14,14,49,"while ( i<mySize && j<theirSize ) {
Interval mine = myIntervals.get(i);
Interval theirs = theirIntervals.get(j);
if ( mine.startsBeforeDisjoint(theirs) ) {
i++;
}
else if ( theirs.startsBeforeDisjoint(mine) ) {
j++;
}
else if ( mine.properlyContains(theirs) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
j++;
}
else if ( theirs.properlyContains(mine) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
i++;
}
else if ( !mine.disjoint(theirs) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
if ( mine.startsAfterNonDisjoint(theirs) ) {
j++;
}
else if ( theirs.startsAfterNonDisjoint(mine) ) {
i++;
}
}
}",0,1,0,0,0,0,0,0,0,24,3,36,0,1,0,0,6,4,1,0,1,0.5,0,0
5144_15,15,15,Interval mine = myIntervals.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,6,4,1,0,1,0.54,6,4
5144_16,16,16,Interval theirs = theirIntervals.get(j);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,4,1,0,1,0.6,5,3
5144_17,17,48,"if ( mine.startsBeforeDisjoint(theirs) ) {
i++;
}
else if ( theirs.startsBeforeDisjoint(mine) ) {
j++;
}
else if ( mine.properlyContains(theirs) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
j++;
}
else if ( theirs.properlyContains(mine) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
i++;
}
else if ( !mine.disjoint(theirs) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
if ( mine.startsAfterNonDisjoint(theirs) ) {
j++;
}
else if ( theirs.startsAfterNonDisjoint(mine) ) {
i++;
}
}",1,0,0,0,0,0,0,0,0,21,2,32,0,1,0,0,6,4,1,0,1,0.48,0,0
5144_18,18,18,i++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.0,3,1
5144_20,20,20,else if ( theirs.startsBeforeDisjoint(mine) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.3,1,0
5144_21,21,21,j++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.46,0,0
5144_23,23,23,else if ( mine.properlyContains(theirs) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.35,2,1
5144_24,24,26,"if ( intersection==null ) {
intersection = new IntervalSet();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,1,0,1,0.52,3,1
5144_25,25,25,intersection = new IntervalSet();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.53,4,2
5144_27,27,27,intersection.add(mine.intersection(theirs));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.4,6,4
5144_28,28,28,j++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.46,7,4
5144_30,30,30,else if ( theirs.properlyContains(mine) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.35,9,6
5144_31,31,33,"if ( intersection==null ) {
intersection = new IntervalSet();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,1,0,1,0.52,10,6
5144_32,32,32,intersection = new IntervalSet();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.53,11,7
5144_34,34,34,intersection.add(mine.intersection(theirs));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.4,13,9
5144_35,35,35,i++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.0,14,9
5144_37,37,37,else if ( !mine.disjoint(theirs) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.26,16,11
5144_38,38,40,"if ( intersection==null ) {
intersection = new IntervalSet();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,1,0,1,0.52,17,11
5144_39,39,39,intersection = new IntervalSet();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.53,18,12
5144_41,41,41,intersection.add(mine.intersection(theirs));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.4,20,14
5144_42,42,47,"if ( mine.startsAfterNonDisjoint(theirs) ) {
j++;
}
else if ( theirs.startsAfterNonDisjoint(mine) ) {
i++;
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,0,6,4,1,0,0,0.38,21,14
5144_43,43,43,j++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.46,22,15
5144_45,45,45,else if ( theirs.startsAfterNonDisjoint(mine) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.32,24,17
5144_46,46,46,i++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.0,25,17
5144_50,50,52,"if ( intersection==null ) {
return new IntervalSet();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,1,0,1,0.51,29,19
5144_51,51,51,return new IntervalSet();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.48,30,19
5144_53,53,53,return intersection;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.43,32,21
5143_1,1,2,"@Override
public IntervalSet and(IntSet other) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,1,0,1,0.46,16,13
5143_3,3,5,"if ( other==null ) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,4,1,0,0,0.29,13,11
5143_4,4,4,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.29,14,11
5143_7,7,7,List<Interval> myIntervals = this.intervals;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,4,1,0,1,0.66,11,10
5143_8,8,8,List<Interval> theirIntervals = ((IntervalSet)other).intervals;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.62,10,9
5143_9,9,9,IntervalSet intersection = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.53,9,8
5143_10,10,10,int mySize = myIntervals.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,6,4,1,0,1,0.5,8,7
5143_11,11,11,int theirSize = theirIntervals.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,6,4,1,0,1,0.5,7,6
5143_12,12,12,int i = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.36,6,5
5143_13,13,13,int j = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.43,5,4
5143_14,14,49,"while ( i<mySize && j<theirSize ) {
Interval mine = myIntervals.get(i);
Interval theirs = theirIntervals.get(j);
if ( mine.startsBeforeDisjoint(theirs) ) {
i++;
}
else if ( theirs.startsBeforeDisjoint(mine) ) {
j++;
}
else if ( mine.properlyContains(theirs) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
j++;
}
else if ( theirs.properlyContains(mine) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
i++;
}
else if ( !mine.disjoint(theirs) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
if ( mine.startsAfterNonDisjoint(theirs) ) {
j++;
}
else if ( theirs.startsAfterNonDisjoint(mine) ) {
i++;
}
}
}",0,1,0,0,0,0,0,0,0,24,3,36,0,1,0,0,6,4,1,0,1,0.5,0,0
5143_15,15,15,Interval mine = myIntervals.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,6,4,1,0,1,0.54,3,2
5143_16,16,16,Interval theirs = theirIntervals.get(j);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,4,1,0,1,0.6,2,1
5143_17,17,48,"if ( mine.startsBeforeDisjoint(theirs) ) {
i++;
}
else if ( theirs.startsBeforeDisjoint(mine) ) {
j++;
}
else if ( mine.properlyContains(theirs) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
j++;
}
else if ( theirs.properlyContains(mine) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
i++;
}
else if ( !mine.disjoint(theirs) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
if ( mine.startsAfterNonDisjoint(theirs) ) {
j++;
}
else if ( theirs.startsAfterNonDisjoint(mine) ) {
i++;
}
}",1,0,0,0,0,0,0,0,0,21,2,32,0,1,0,0,6,4,1,0,1,0.48,0,0
5143_18,18,18,i++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.0,0,0
5143_20,20,20,else if ( theirs.startsBeforeDisjoint(mine) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.3,2,1
5143_21,21,21,j++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.46,3,1
5143_23,23,23,else if ( mine.properlyContains(theirs) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.35,5,3
5143_24,24,26,"if ( intersection==null ) {
intersection = new IntervalSet();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,1,0,1,0.52,6,3
5143_25,25,25,intersection = new IntervalSet();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.53,7,4
5143_27,27,27,intersection.add(mine.intersection(theirs));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.4,9,6
5143_28,28,28,j++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.46,10,6
5143_30,30,30,else if ( theirs.properlyContains(mine) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.35,12,8
5143_31,31,33,"if ( intersection==null ) {
intersection = new IntervalSet();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,1,0,1,0.52,13,8
5143_32,32,32,intersection = new IntervalSet();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.53,14,9
5143_34,34,34,intersection.add(mine.intersection(theirs));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.4,16,11
5143_35,35,35,i++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.0,17,11
5143_37,37,37,else if ( !mine.disjoint(theirs) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.26,19,13
5143_38,38,40,"if ( intersection==null ) {
intersection = new IntervalSet();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,1,0,1,0.52,20,13
5143_39,39,39,intersection = new IntervalSet();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.53,21,14
5143_41,41,41,intersection.add(mine.intersection(theirs));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.4,23,16
5143_42,42,47,"if ( mine.startsAfterNonDisjoint(theirs) ) {
j++;
}
else if ( theirs.startsAfterNonDisjoint(mine) ) {
i++;
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,0,6,4,1,0,0,0.38,24,16
5143_43,43,43,j++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.46,25,17
5143_45,45,45,else if ( theirs.startsAfterNonDisjoint(mine) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.32,27,19
5143_46,46,46,i++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.0,28,19
5143_50,50,52,"if ( intersection==null ) {
return new IntervalSet();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,1,0,1,0.51,32,21
5143_51,51,51,return new IntervalSet();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.48,33,21
5143_53,53,53,return intersection;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.43,35,23
5142_1,1,2,"@Override
public IntervalSet and(IntSet other) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,0,0,1,0.5,12,9
5142_3,3,5,"if ( other==null ) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,4,0,0,0,0.2,9,7
5142_4,4,4,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.2,10,7
5142_7,7,7,List<Interval> myIntervals = this.intervals;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,4,0,0,2,0.86,7,6
5142_8,8,8,List<Interval> theirIntervals = ((IntervalSet)other).intervals;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,0,0,2,0.8,6,5
5142_9,9,9,IntervalSet intersection = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.56,5,4
5142_10,10,10,int mySize = myIntervals.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,6,4,0,0,1,0.55,4,3
5142_11,11,11,int theirSize = theirIntervals.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,6,4,0,0,1,0.55,3,2
5142_12,12,12,int i = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.41,2,1
5142_13,13,13,int j = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.47,1,0
5142_14,14,49,"while ( i<mySize && j<theirSize ) {
Interval mine = myIntervals.get(i);
Interval theirs = theirIntervals.get(j);
if ( mine.startsBeforeDisjoint(theirs) ) {
i++;
}
else if ( theirs.startsBeforeDisjoint(mine) ) {
j++;
}
else if ( mine.properlyContains(theirs) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
j++;
}
else if ( theirs.properlyContains(mine) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
i++;
}
else if ( !mine.disjoint(theirs) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
if ( mine.startsAfterNonDisjoint(theirs) ) {
j++;
}
else if ( theirs.startsAfterNonDisjoint(mine) ) {
i++;
}
}
}",0,1,0,0,0,0,0,0,0,24,3,36,0,1,0,0,6,4,0,0,1,0.57,0,0
5142_15,15,15,Interval mine = myIntervals.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,6,4,0,0,1,0.62,1,0
5142_16,16,16,Interval theirs = theirIntervals.get(j);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,4,0,0,1,0.68,2,1
5142_17,17,48,"if ( mine.startsBeforeDisjoint(theirs) ) {
i++;
}
else if ( theirs.startsBeforeDisjoint(mine) ) {
j++;
}
else if ( mine.properlyContains(theirs) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
j++;
}
else if ( theirs.properlyContains(mine) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
i++;
}
else if ( !mine.disjoint(theirs) ) {
if ( intersection==null ) {
intersection = new IntervalSet();
}
intersection.add(mine.intersection(theirs));
if ( mine.startsAfterNonDisjoint(theirs) ) {
j++;
}
else if ( theirs.startsAfterNonDisjoint(mine) ) {
i++;
}
}",1,0,0,0,0,0,0,0,0,21,2,32,0,1,0,0,6,4,0,0,1,0.55,3,2
5142_18,18,18,i++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.0,4,3
5142_20,20,20,else if ( theirs.startsBeforeDisjoint(mine) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.34,6,5
5142_21,21,21,j++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.48,7,5
5142_23,23,23,else if ( mine.properlyContains(theirs) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.38,9,7
5142_24,24,26,"if ( intersection==null ) {
intersection = new IntervalSet();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,0,0,1,0.54,10,7
5142_25,25,25,intersection = new IntervalSet();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.55,11,8
5142_27,27,27,intersection.add(mine.intersection(theirs));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.43,13,10
5142_28,28,28,j++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.48,14,10
5142_30,30,30,else if ( theirs.properlyContains(mine) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.38,16,12
5142_31,31,33,"if ( intersection==null ) {
intersection = new IntervalSet();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,0,0,1,0.54,17,12
5142_32,32,32,intersection = new IntervalSet();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.55,18,13
5142_34,34,34,intersection.add(mine.intersection(theirs));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.43,20,15
5142_35,35,35,i++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.0,21,15
5142_37,37,37,else if ( !mine.disjoint(theirs) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.29,23,17
5142_38,38,40,"if ( intersection==null ) {
intersection = new IntervalSet();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,0,0,1,0.54,24,17
5142_39,39,39,intersection = new IntervalSet();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.55,25,18
5142_41,41,41,intersection.add(mine.intersection(theirs));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.43,27,20
5142_42,42,47,"if ( mine.startsAfterNonDisjoint(theirs) ) {
j++;
}
else if ( theirs.startsAfterNonDisjoint(mine) ) {
i++;
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,0,6,4,0,0,0,0.41,28,20
5142_43,43,43,j++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.48,29,21
5142_45,45,45,else if ( theirs.startsAfterNonDisjoint(mine) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.35,31,23
5142_46,46,46,i++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.0,32,23
5142_50,50,52,"if ( intersection==null ) {
return new IntervalSet();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,0,0,1,0.51,36,25
5142_51,51,51,return new IntervalSet();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.48,37,25
5142_53,53,53,return intersection;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.39,39,27
5141_1,1,1,"public static IntervalSet subtract(IntervalSet left, IntervalSet right) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.47,58,39
5141_2,2,4,"if (left == null || left.isNil()) {
return new IntervalSet();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,7,4,1,0,1,0.42,55,37
5141_3,3,3,return new IntervalSet();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.44,56,37
5141_6,6,6,IntervalSet result = new IntervalSet(left);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,4,1,0,2,0.56,53,36
5141_7,7,9,"if (right == null || right.isNil()) {
return result;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,7,4,1,0,1,0.37,50,34
5141_8,8,8,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.47,51,34
5141_11,11,11,int resultI = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,4,1,0,1,0.53,48,33
5141_12,12,12,int rightI = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,0,0.36,47,32
5141_13,13,63,"while (resultI < result.intervals.size() && rightI < right.intervals.size()) {
Interval resultInterval = result.intervals.get(resultI);
Interval rightInterval = right.intervals.get(rightI);


if (rightInterval.b < resultInterval.a) {
rightI++;
continue;
}

if (rightInterval.a > resultInterval.b) {
resultI++;
continue;
}

Interval beforeCurrent = null;
Interval afterCurrent = null;
if (rightInterval.a > resultInterval.a) {
beforeCurrent = new Interval(resultInterval.a, rightInterval.a - 1);
}

if (rightInterval.b < resultInterval.b) {
afterCurrent = new Interval(rightInterval.b + 1, resultInterval.b);
}

if (beforeCurrent != null) {
if (afterCurrent != null) {
result.intervals.set(resultI, beforeCurrent);
result.intervals.add(resultI + 1, afterCurrent);
resultI++;
rightI++;
continue;
}
else {
result.intervals.set(resultI, beforeCurrent);
resultI++;
continue;
}
}
else {
if (afterCurrent != null) {
result.intervals.set(resultI, afterCurrent);
rightI++;
continue;
}
else {
result.intervals.remove(resultI);
continue;
}
}
}",0,1,0,0,0,0,0,0,0,33,3,51,0,1,0,1,7,4,1,0,4,0.72,0,0
5141_14,14,14,Interval resultInterval = result.intervals.get(resultI);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,7,4,1,0,2,0.72,45,30
5141_15,15,15,Interval rightInterval = right.intervals.get(rightI);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,7,4,1,0,1,0.51,44,29
5141_18,18,21,"if (rightInterval.b < resultInterval.a) {
rightI++;
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,7,4,1,0,2,0.55,38,26
5141_19,19,19,rightI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.21,40,27
5141_20,20,20,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.2,39,26
5141_23,23,26,"if (rightInterval.a > resultInterval.b) {
resultI++;
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,7,4,1,0,2,0.61,33,23
5141_24,24,24,resultI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.62,35,24
5141_25,25,25,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.2,34,23
5141_28,28,28,Interval beforeCurrent = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,4,1,0,2,0.65,31,22
5141_29,29,29,Interval afterCurrent = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,4,1,0,2,0.65,30,21
5141_30,30,32,"if (rightInterval.a > resultInterval.a) {
beforeCurrent = new Interval(resultInterval.a, rightInterval.a - 1);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,7,4,1,0,3,0.7,27,19
5141_31,31,31,"beforeCurrent = new Interval(resultInterval.a, rightInterval.a - 1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,3,0.68,28,19
5141_34,34,36,"if (rightInterval.b < resultInterval.b) {
afterCurrent = new Interval(rightInterval.b + 1, resultInterval.b);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,4,1,0,3,0.64,23,17
5141_35,35,35,"afterCurrent = new Interval(rightInterval.b + 1, resultInterval.b);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,3,0.64,24,17
5141_38,38,62,"if (beforeCurrent != null) {
if (afterCurrent != null) {
result.intervals.set(resultI, beforeCurrent);
result.intervals.add(resultI + 1, afterCurrent);
resultI++;
rightI++;
continue;
}
else {
result.intervals.set(resultI, beforeCurrent);
resultI++;
continue;
}
}
else {
if (afterCurrent != null) {
result.intervals.set(resultI, afterCurrent);
rightI++;
continue;
}
else {
result.intervals.remove(resultI);
continue;
}
}",1,0,0,0,0,0,0,0,0,18,2,25,0,0,1,0,7,4,1,0,4,0.72,0,0
5141_39,39,50,"if (afterCurrent != null) {
result.intervals.set(resultI, beforeCurrent);
result.intervals.add(resultI + 1, afterCurrent);
resultI++;
rightI++;
continue;
}
else {
result.intervals.set(resultI, beforeCurrent);
resultI++;
continue;
}",1,0,0,0,0,0,0,0,0,9,1,12,0,0,0,0,7,4,1,0,3,0.68,9,6
5141_40,40,40,"result.intervals.set(resultI, beforeCurrent);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,3,0.73,19,14
5141_41,41,41,"result.intervals.add(resultI + 1, afterCurrent);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,3,0.71,18,13
5141_42,42,42,resultI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.62,17,12
5141_43,43,43,rightI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.21,16,11
5141_44,44,44,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.2,15,10
5141_46,46,46,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.19,13,9
5141_47,47,47,"result.intervals.set(resultI, beforeCurrent);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,3,0.73,12,8
5141_48,48,48,resultI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.62,11,7
5141_49,49,49,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.2,10,6
5141_52,52,52,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.19,7,5
5141_53,53,61,"if (afterCurrent != null) {
result.intervals.set(resultI, afterCurrent);
rightI++;
continue;
}
else {
result.intervals.remove(resultI);
continue;
}",1,0,0,0,0,0,0,0,0,6,1,9,0,0,0,0,7,4,1,0,4,0.72,0,0
5141_54,54,54,"result.intervals.set(resultI, afterCurrent);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,3,0.73,5,3
5141_55,55,55,rightI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.21,4,2
5141_56,56,56,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.2,3,1
5141_58,58,58,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.19,1,0
5141_59,59,59,result.intervals.remove(resultI);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,3,0.82,0,0
5141_60,60,60,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.2,1,0
5141_65,65,65,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,4,1,0,1,0.47,6,2
5140_1,1,1,"public static IntervalSet subtract(IntervalSet left, IntervalSet right) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.54,53,35
5140_2,2,4,"if (left == null || left.isNil()) {
return new IntervalSet();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,2,0,0,1,0.45,50,33
5140_3,3,3,return new IntervalSet();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.48,51,33
5140_6,6,6,IntervalSet result = new IntervalSet(left);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.52,48,32
5140_7,7,9,"if (right == null || right.isNil()) {
return result;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,2,0,0,0,0.21,45,30
5140_8,8,8,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.17,46,30
5140_11,11,11,int resultI = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.36,43,29
5140_12,12,12,int rightI = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.37,42,28
5140_13,13,63,"while (resultI < result.intervals.size() && rightI < right.intervals.size()) {
Interval resultInterval = result.intervals.get(resultI);
Interval rightInterval = right.intervals.get(rightI);


if (rightInterval.b < resultInterval.a) {
rightI++;
continue;
}

if (rightInterval.a > resultInterval.b) {
resultI++;
continue;
}

Interval beforeCurrent = null;
Interval afterCurrent = null;
if (rightInterval.a > resultInterval.a) {
beforeCurrent = new Interval(resultInterval.a, rightInterval.a - 1);
}

if (rightInterval.b < resultInterval.b) {
afterCurrent = new Interval(rightInterval.b + 1, resultInterval.b);
}

if (beforeCurrent != null) {
if (afterCurrent != null) {
result.intervals.set(resultI, beforeCurrent);
result.intervals.add(resultI + 1, afterCurrent);
resultI++;
rightI++;
continue;
}
else {
result.intervals.set(resultI, beforeCurrent);
resultI++;
continue;
}
}
else {
if (afterCurrent != null) {
result.intervals.set(resultI, afterCurrent);
rightI++;
continue;
}
else {
result.intervals.remove(resultI);
continue;
}
}
}",0,1,0,0,0,0,0,0,0,33,3,51,0,1,0,1,3,2,0,0,2,0.66,0,0
5140_14,14,14,Interval resultInterval = result.intervals.get(resultI);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,3,2,0,0,1,0.58,40,26
5140_15,15,15,Interval rightInterval = right.intervals.get(rightI);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,3,2,0,0,1,0.58,39,25
5140_18,18,21,"if (rightInterval.b < resultInterval.a) {
rightI++;
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,2,0,0,1,0.52,33,22
5140_19,19,19,rightI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,35,23
5140_20,20,20,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.17,34,22
5140_23,23,26,"if (rightInterval.a > resultInterval.b) {
resultI++;
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,2,0,0,1,0.52,28,19
5140_24,24,24,resultI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.2,30,20
5140_25,25,25,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.17,29,19
5140_28,28,28,Interval beforeCurrent = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,0,0,2,0.75,26,18
5140_29,29,29,Interval afterCurrent = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.75,25,17
5140_30,30,32,"if (rightInterval.a > resultInterval.a) {
beforeCurrent = new Interval(resultInterval.a, rightInterval.a - 1);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,2,0,0,2,0.71,22,15
5140_31,31,31,"beforeCurrent = new Interval(resultInterval.a, rightInterval.a - 1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.71,23,15
5140_34,34,36,"if (rightInterval.b < resultInterval.b) {
afterCurrent = new Interval(rightInterval.b + 1, resultInterval.b);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,2,0.67,18,13
5140_35,35,35,"afterCurrent = new Interval(rightInterval.b + 1, resultInterval.b);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.68,19,13
5140_38,38,62,"if (beforeCurrent != null) {
if (afterCurrent != null) {
result.intervals.set(resultI, beforeCurrent);
result.intervals.add(resultI + 1, afterCurrent);
resultI++;
rightI++;
continue;
}
else {
result.intervals.set(resultI, beforeCurrent);
resultI++;
continue;
}
}
else {
if (afterCurrent != null) {
result.intervals.set(resultI, afterCurrent);
rightI++;
continue;
}
else {
result.intervals.remove(resultI);
continue;
}
}",1,0,0,0,0,0,0,0,0,18,2,25,0,0,1,0,3,2,0,0,2,0.62,0,0
5140_39,39,50,"if (afterCurrent != null) {
result.intervals.set(resultI, beforeCurrent);
result.intervals.add(resultI + 1, afterCurrent);
resultI++;
rightI++;
continue;
}
else {
result.intervals.set(resultI, beforeCurrent);
resultI++;
continue;
}",1,0,0,0,0,0,0,0,0,9,1,12,0,0,0,0,3,2,0,0,2,0.63,4,2
5140_40,40,40,"result.intervals.set(resultI, beforeCurrent);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,2,0.67,14,10
5140_41,41,41,"result.intervals.add(resultI + 1, afterCurrent);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,2,0.66,13,9
5140_42,42,42,resultI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.2,12,8
5140_43,43,43,rightI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,11,7
5140_44,44,44,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.17,10,6
5140_46,46,46,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.21,8,5
5140_47,47,47,"result.intervals.set(resultI, beforeCurrent);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,2,0.67,7,4
5140_48,48,48,resultI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.2,6,3
5140_49,49,49,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.17,5,2
5140_52,52,52,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.21,2,1
5140_53,53,61,"if (afterCurrent != null) {
result.intervals.set(resultI, afterCurrent);
rightI++;
continue;
}
else {
result.intervals.remove(resultI);
continue;
}",1,0,0,0,0,0,0,0,0,6,1,9,0,0,0,0,3,2,0,0,2,0.61,0,0
5140_54,54,54,"result.intervals.set(resultI, afterCurrent);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.67,0,0
5140_55,55,55,rightI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,1,0
5140_56,56,56,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.17,2,1
5140_58,58,58,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.21,4,3
5140_59,59,59,result.intervals.remove(resultI);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.51,5,3
5140_60,60,60,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.17,6,4
5140_65,65,65,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.17,11,6
5139_1,1,1,"public static IntervalSet subtract(IntervalSet left, IntervalSet right) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.54,46,30
5139_2,2,4,"if (left == null || left.isNil()) {
return new IntervalSet();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,2,0,0,1,0.45,43,28
5139_3,3,3,return new IntervalSet();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.48,44,28
5139_6,6,6,IntervalSet result = new IntervalSet(left);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.52,41,27
5139_7,7,9,"if (right == null || right.isNil()) {
return result;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,2,0,0,0,0.21,38,25
5139_8,8,8,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.17,39,25
5139_11,11,11,int resultI = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.36,36,24
5139_12,12,12,int rightI = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.37,35,23
5139_13,13,63,"while (resultI < result.intervals.size() && rightI < right.intervals.size()) {
Interval resultInterval = result.intervals.get(resultI);
Interval rightInterval = right.intervals.get(rightI);


if (rightInterval.b < resultInterval.a) {
rightI++;
continue;
}

if (rightInterval.a > resultInterval.b) {
resultI++;
continue;
}

Interval beforeCurrent = null;
Interval afterCurrent = null;
if (rightInterval.a > resultInterval.a) {
beforeCurrent = new Interval(resultInterval.a, rightInterval.a - 1);
}

if (rightInterval.b < resultInterval.b) {
afterCurrent = new Interval(rightInterval.b + 1, resultInterval.b);
}

if (beforeCurrent != null) {
if (afterCurrent != null) {
result.intervals.set(resultI, beforeCurrent);
result.intervals.add(resultI + 1, afterCurrent);
resultI++;
rightI++;
continue;
}
else {
result.intervals.set(resultI, beforeCurrent);
resultI++;
continue;
}
}
else {
if (afterCurrent != null) {
result.intervals.set(resultI, afterCurrent);
rightI++;
continue;
}
else {
result.intervals.remove(resultI);
continue;
}
}
}",0,1,0,0,0,0,0,0,0,33,3,51,0,1,0,1,3,2,0,0,2,0.66,0,0
5139_14,14,14,Interval resultInterval = result.intervals.get(resultI);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,3,2,0,0,1,0.58,33,21
5139_15,15,15,Interval rightInterval = right.intervals.get(rightI);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,3,2,0,0,1,0.58,32,20
5139_18,18,21,"if (rightInterval.b < resultInterval.a) {
rightI++;
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,2,0,0,1,0.52,26,17
5139_19,19,19,rightI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,28,18
5139_20,20,20,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.17,27,17
5139_23,23,26,"if (rightInterval.a > resultInterval.b) {
resultI++;
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,2,0,0,1,0.52,21,14
5139_24,24,24,resultI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.2,23,15
5139_25,25,25,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.17,22,14
5139_28,28,28,Interval beforeCurrent = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,0,0,2,0.75,19,13
5139_29,29,29,Interval afterCurrent = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.75,18,12
5139_30,30,32,"if (rightInterval.a > resultInterval.a) {
beforeCurrent = new Interval(resultInterval.a, rightInterval.a - 1);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,2,0,0,2,0.71,15,10
5139_31,31,31,"beforeCurrent = new Interval(resultInterval.a, rightInterval.a - 1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.71,16,10
5139_34,34,36,"if (rightInterval.b < resultInterval.b) {
afterCurrent = new Interval(rightInterval.b + 1, resultInterval.b);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,2,0.67,11,8
5139_35,35,35,"afterCurrent = new Interval(rightInterval.b + 1, resultInterval.b);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.68,12,8
5139_38,38,62,"if (beforeCurrent != null) {
if (afterCurrent != null) {
result.intervals.set(resultI, beforeCurrent);
result.intervals.add(resultI + 1, afterCurrent);
resultI++;
rightI++;
continue;
}
else {
result.intervals.set(resultI, beforeCurrent);
resultI++;
continue;
}
}
else {
if (afterCurrent != null) {
result.intervals.set(resultI, afterCurrent);
rightI++;
continue;
}
else {
result.intervals.remove(resultI);
continue;
}
}",1,0,0,0,0,0,0,0,0,18,2,25,0,0,1,0,3,2,0,0,2,0.62,0,0
5139_39,39,50,"if (afterCurrent != null) {
result.intervals.set(resultI, beforeCurrent);
result.intervals.add(resultI + 1, afterCurrent);
resultI++;
rightI++;
continue;
}
else {
result.intervals.set(resultI, beforeCurrent);
resultI++;
continue;
}",1,0,0,0,0,0,0,0,0,9,1,12,0,0,0,0,3,2,0,0,2,0.63,0,0
5139_40,40,40,"result.intervals.set(resultI, beforeCurrent);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,2,0.67,7,5
5139_41,41,41,"result.intervals.add(resultI + 1, afterCurrent);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,2,0.66,6,4
5139_42,42,42,resultI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.2,5,3
5139_43,43,43,rightI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,4,2
5139_44,44,44,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.17,3,1
5139_46,46,46,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.21,1,0
5139_47,47,47,"result.intervals.set(resultI, beforeCurrent);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,2,0.67,0,0
5139_48,48,48,resultI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.2,1,0
5139_49,49,49,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.17,2,1
5139_52,52,52,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.21,5,3
5139_53,53,61,"if (afterCurrent != null) {
result.intervals.set(resultI, afterCurrent);
rightI++;
continue;
}
else {
result.intervals.remove(resultI);
continue;
}",1,0,0,0,0,0,0,0,0,6,1,9,0,0,0,0,3,2,0,0,2,0.61,6,3
5139_54,54,54,"result.intervals.set(resultI, afterCurrent);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.67,7,4
5139_55,55,55,rightI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,8,5
5139_56,56,56,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.17,9,6
5139_58,58,58,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.21,11,8
5139_59,59,59,result.intervals.remove(resultI);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.51,12,8
5139_60,60,60,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.17,13,9
5139_65,65,65,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.17,18,11
5138_1,1,1,"public static IntervalSet subtract(IntervalSet left, IntervalSet right) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.54,39,24
5138_2,2,4,"if (left == null || left.isNil()) {
return new IntervalSet();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,2,0,0,1,0.49,36,22
5138_3,3,3,return new IntervalSet();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.49,37,22
5138_6,6,6,IntervalSet result = new IntervalSet(left);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,0,0,1,0.54,34,21
5138_7,7,9,"if (right == null || right.isNil()) {
return result;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,4,2,0,0,0,0.29,31,19
5138_8,8,8,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.16,32,19
5138_11,11,11,int resultI = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.37,29,18
5138_12,12,12,int rightI = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.42,28,17
5138_13,13,63,"while (resultI < result.intervals.size() && rightI < right.intervals.size()) {
Interval resultInterval = result.intervals.get(resultI);
Interval rightInterval = right.intervals.get(rightI);


if (rightInterval.b < resultInterval.a) {
rightI++;
continue;
}

if (rightInterval.a > resultInterval.b) {
resultI++;
continue;
}

Interval beforeCurrent = null;
Interval afterCurrent = null;
if (rightInterval.a > resultInterval.a) {
beforeCurrent = new Interval(resultInterval.a, rightInterval.a - 1);
}

if (rightInterval.b < resultInterval.b) {
afterCurrent = new Interval(rightInterval.b + 1, resultInterval.b);
}

if (beforeCurrent != null) {
if (afterCurrent != null) {
result.intervals.set(resultI, beforeCurrent);
result.intervals.add(resultI + 1, afterCurrent);
resultI++;
rightI++;
continue;
}
else {
result.intervals.set(resultI, beforeCurrent);
resultI++;
continue;
}
}
else {
if (afterCurrent != null) {
result.intervals.set(resultI, afterCurrent);
rightI++;
continue;
}
else {
result.intervals.remove(resultI);
continue;
}
}
}",0,1,0,0,0,0,0,0,0,33,3,51,0,1,0,1,4,2,0,0,2,0.67,0,0
5138_14,14,14,Interval resultInterval = result.intervals.get(resultI);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,4,2,0,0,1,0.51,26,15
5138_15,15,15,Interval rightInterval = right.intervals.get(rightI);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,4,2,0,0,1,0.58,25,14
5138_18,18,21,"if (rightInterval.b < resultInterval.a) {
rightI++;
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,4,2,0,0,1,0.59,19,11
5138_19,19,19,rightI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.35,21,12
5138_20,20,20,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.26,20,11
5138_23,23,26,"if (rightInterval.a > resultInterval.b) {
resultI++;
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,4,2,0,0,1,0.58,14,8
5138_24,24,24,resultI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.18,16,9
5138_25,25,25,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.26,15,8
5138_28,28,28,Interval beforeCurrent = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,2,0,0,2,0.66,12,7
5138_29,29,29,Interval afterCurrent = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.66,11,6
5138_30,30,32,"if (rightInterval.a > resultInterval.a) {
beforeCurrent = new Interval(resultInterval.a, rightInterval.a - 1);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,2,0,0,2,0.68,8,4
5138_31,31,31,"beforeCurrent = new Interval(resultInterval.a, rightInterval.a - 1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.68,9,4
5138_34,34,36,"if (rightInterval.b < resultInterval.b) {
afterCurrent = new Interval(rightInterval.b + 1, resultInterval.b);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,0,0,2,0.71,4,2
5138_35,35,35,"afterCurrent = new Interval(rightInterval.b + 1, resultInterval.b);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.71,5,2
5138_38,38,62,"if (beforeCurrent != null) {
if (afterCurrent != null) {
result.intervals.set(resultI, beforeCurrent);
result.intervals.add(resultI + 1, afterCurrent);
resultI++;
rightI++;
continue;
}
else {
result.intervals.set(resultI, beforeCurrent);
resultI++;
continue;
}
}
else {
if (afterCurrent != null) {
result.intervals.set(resultI, afterCurrent);
rightI++;
continue;
}
else {
result.intervals.remove(resultI);
continue;
}
}",1,0,0,0,0,0,0,0,0,18,2,25,0,0,1,0,4,2,0,0,2,0.59,0,0
5138_39,39,50,"if (afterCurrent != null) {
result.intervals.set(resultI, beforeCurrent);
result.intervals.add(resultI + 1, afterCurrent);
resultI++;
rightI++;
continue;
}
else {
result.intervals.set(resultI, beforeCurrent);
resultI++;
continue;
}",1,0,0,0,0,0,0,0,0,9,1,12,0,0,0,0,4,2,0,0,2,0.59,0,0
5138_40,40,40,"result.intervals.set(resultI, beforeCurrent);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,2,0.58,0,0
5138_41,41,41,"result.intervals.add(resultI + 1, afterCurrent);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,2,0.61,1,0
5138_42,42,42,resultI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.18,2,1
5138_43,43,43,rightI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.35,3,2
5138_44,44,44,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.26,4,3
5138_46,46,46,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.26,6,5
5138_47,47,47,"result.intervals.set(resultI, beforeCurrent);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,2,0.58,7,5
5138_48,48,48,resultI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.18,8,6
5138_49,49,49,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.26,9,7
5138_52,52,52,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.26,12,9
5138_53,53,61,"if (afterCurrent != null) {
result.intervals.set(resultI, afterCurrent);
rightI++;
continue;
}
else {
result.intervals.remove(resultI);
continue;
}",1,0,0,0,0,0,0,0,0,6,1,9,0,0,0,0,4,2,0,0,2,0.59,13,9
5138_54,54,54,"result.intervals.set(resultI, afterCurrent);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.58,14,10
5138_55,55,55,rightI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.35,15,11
5138_56,56,56,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.26,16,12
5138_58,58,58,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.26,18,14
5138_59,59,59,result.intervals.remove(resultI);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.51,19,14
5138_60,60,60,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.26,20,15
5138_65,65,65,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.16,25,17
5137_1,1,1,"public static IntervalSet subtract(IntervalSet left, IntervalSet right) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,1,0,2,0.65,7,4
5137_2,2,4,"if (left == null || left.isNil()) {
return new IntervalSet();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,7,2,1,0,2,0.68,4,2
5137_3,3,3,return new IntervalSet();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,2,1,0,2,0.63,5,2
5137_6,6,6,IntervalSet result = new IntervalSet(left);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,2,1,0,1,0.57,2,1
5137_7,7,9,"if (right == null || right.isNil()) {
return result;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,7,2,1,0,2,0.61,0,0
5137_8,8,8,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,2,1,0,1,0.44,0,0
5137_11,11,11,int resultI = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,2,1,0,0,0.25,3,1
5137_12,12,12,int rightI = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,2,1,0,1,0.46,4,1
5137_13,13,63,"while (resultI < result.intervals.size() && rightI < right.intervals.size()) {
Interval resultInterval = result.intervals.get(resultI);
Interval rightInterval = right.intervals.get(rightI);


if (rightInterval.b < resultInterval.a) {
rightI++;
continue;
}

if (rightInterval.a > resultInterval.b) {
resultI++;
continue;
}

Interval beforeCurrent = null;
Interval afterCurrent = null;
if (rightInterval.a > resultInterval.a) {
beforeCurrent = new Interval(resultInterval.a, rightInterval.a - 1);
}

if (rightInterval.b < resultInterval.b) {
afterCurrent = new Interval(rightInterval.b + 1, resultInterval.b);
}

if (beforeCurrent != null) {
if (afterCurrent != null) {
result.intervals.set(resultI, beforeCurrent);
result.intervals.add(resultI + 1, afterCurrent);
resultI++;
rightI++;
continue;
}
else {
result.intervals.set(resultI, beforeCurrent);
resultI++;
continue;
}
}
else {
if (afterCurrent != null) {
result.intervals.set(resultI, afterCurrent);
rightI++;
continue;
}
else {
result.intervals.remove(resultI);
continue;
}
}
}",0,1,0,0,0,0,0,0,0,33,3,51,0,1,0,1,7,2,1,0,3,0.6,5,2
5137_14,14,14,Interval resultInterval = result.intervals.get(resultI);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,7,2,1,0,0,0.27,6,3
5137_15,15,15,Interval rightInterval = right.intervals.get(rightI);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,7,2,1,0,1,0.51,7,4
5137_18,18,21,"if (rightInterval.b < resultInterval.a) {
rightI++;
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,7,2,1,0,1,0.45,10,6
5137_19,19,19,rightI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,1,0,1,0.68,11,6
5137_20,20,20,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,1,0,0,0.2,12,7
5137_23,23,26,"if (rightInterval.a > resultInterval.b) {
resultI++;
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,7,2,1,0,1,0.39,15,9
5137_24,24,24,resultI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,1,0,0,0.15,16,9
5137_25,25,25,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,1,0,0,0.2,17,10
5137_28,28,28,Interval beforeCurrent = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,2,1,0,1,0.51,20,12
5137_29,29,29,Interval afterCurrent = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,2,1,0,1,0.51,21,12
5137_30,30,32,"if (rightInterval.a > resultInterval.a) {
beforeCurrent = new Interval(resultInterval.a, rightInterval.a - 1);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,7,2,1,0,2,0.48,22,13
5137_31,31,31,"beforeCurrent = new Interval(resultInterval.a, rightInterval.a - 1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,1,0,2,0.47,23,14
5137_34,34,36,"if (rightInterval.b < resultInterval.b) {
afterCurrent = new Interval(rightInterval.b + 1, resultInterval.b);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,2,1,0,2,0.47,26,16
5137_35,35,35,"afterCurrent = new Interval(rightInterval.b + 1, resultInterval.b);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,1,0,2,0.47,27,16
5137_38,38,62,"if (beforeCurrent != null) {
if (afterCurrent != null) {
result.intervals.set(resultI, beforeCurrent);
result.intervals.add(resultI + 1, afterCurrent);
resultI++;
rightI++;
continue;
}
else {
result.intervals.set(resultI, beforeCurrent);
resultI++;
continue;
}
}
else {
if (afterCurrent != null) {
result.intervals.set(resultI, afterCurrent);
rightI++;
continue;
}
else {
result.intervals.remove(resultI);
continue;
}
}",1,0,0,0,0,0,0,0,0,18,2,25,0,0,1,0,7,2,1,0,3,0.61,30,18
5137_39,39,50,"if (afterCurrent != null) {
result.intervals.set(resultI, beforeCurrent);
result.intervals.add(resultI + 1, afterCurrent);
resultI++;
rightI++;
continue;
}
else {
result.intervals.set(resultI, beforeCurrent);
resultI++;
continue;
}",1,0,0,0,0,0,0,0,0,9,1,12,0,0,0,0,7,2,1,0,3,0.6,31,18
5137_40,40,40,"result.intervals.set(resultI, beforeCurrent);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,2,1,0,2,0.55,32,19
5137_41,41,41,"result.intervals.add(resultI + 1, afterCurrent);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,2,1,0,1,0.35,33,20
5137_42,42,42,resultI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,2,1,0,0,0.15,34,21
5137_43,43,43,rightI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,1,0,1,0.68,35,22
5137_44,44,44,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,1,0,0,0.2,36,23
5137_46,46,46,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,1,0,0,0.29,38,25
5137_47,47,47,"result.intervals.set(resultI, beforeCurrent);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,2,1,0,2,0.55,39,25
5137_48,48,48,resultI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,2,1,0,0,0.15,40,26
5137_49,49,49,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,1,0,0,0.2,41,27
5137_52,52,52,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,1,0,0,0.29,44,29
5137_53,53,61,"if (afterCurrent != null) {
result.intervals.set(resultI, afterCurrent);
rightI++;
continue;
}
else {
result.intervals.remove(resultI);
continue;
}",1,0,0,0,0,0,0,0,0,6,1,9,0,0,0,0,7,2,1,0,3,0.6,45,29
5137_54,54,54,"result.intervals.set(resultI, afterCurrent);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,1,0,2,0.55,46,30
5137_55,55,55,rightI++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,1,0,1,0.68,47,31
5137_56,56,56,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,1,0,0,0.2,48,32
5137_58,58,58,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,1,0,0,0.29,50,34
5137_59,59,59,result.intervals.remove(resultI);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,1,0,0,0.24,51,34
5137_60,60,60,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,1,0,0,0.2,52,35
5137_65,65,65,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,2,1,0,1,0.44,57,37
5136_1,1,2,"@Override
public IntervalSet addAll(IntSet set) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,1,1,0,3,0.79,7,4
5136_3,3,5,"if ( set==null ) {
return this;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,1,1,0,1,0.42,4,2
5136_4,4,4,return this;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.1,5,2
5136_7,7,19,"if (set instanceof IntervalSet) {
IntervalSet other = (IntervalSet)set;
int n = other.intervals.size();
for (int i = 0; i < n; i++) {
Interval I = other.intervals.get(i);
this.add(I.a,I.b);
}
}
else {
for (int value : set.toList()) {
add(value);
}
}",1,0,0,0,0,0,0,0,0,8,2,13,0,0,1,1,4,1,1,0,3,0.79,0,0
5136_8,8,8,IntervalSet other = (IntervalSet)set;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,2,0.79,1,0
5136_9,9,9,int n = other.intervals.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,1,0.5,0,0
5136_10,10,13,"for (int i = 0; i < n; i++) {
Interval I = other.intervals.get(i);
this.add(I.a,I.b);
}",0,0,1,0,0,0,0,0,0,2,1,4,0,1,0,0,4,1,1,0,2,0.67,1,0
5136_11,11,11,Interval I = other.intervals.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,1,0.59,2,1
5136_12,12,12,"this.add(I.a,I.b);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,1,0.63,3,2
5136_15,15,15,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.18,6,4
5136_16,16,18,"for (int value : set.toList()) {
add(value);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,4,1,1,0,2,0.64,7,4
5136_17,17,17,add(value);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,1,0.6,8,5
5136_21,21,21,return this;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,1,1,0,0,0.1,12,7
5135_1,1,1,protected void add(Interval addition) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.35,27,20
5135_2,2,2,"throw new IllegalStateException(""can't alter readonly IntervalSet"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,2,0,0,0,0.29,26,19
5135_3,3,5,"if ( addition.b<addition.a ) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,2,0,0,0,0.37,23,17
5135_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,24,17
5135_6,6,32,"for (ListIterator<Interval> iter = intervals.listIterator(); iter.hasNext();) {
Interval r = iter.next();
if ( addition.equals(r) ) {
return;
}
if ( addition.adjacent(r) || !addition.disjoint(r) ) {
Interval bigger = addition.union(r);
iter.set(bigger);
while ( iter.hasNext() ) {
Interval next = iter.next();
if ( !bigger.adjacent(next) && bigger.disjoint(next) ) {
break;
}

iter.remove();
iter.previous();
iter.set(bigger.union(next));
iter.next();
}
return;
}
if ( addition.startsBeforeDisjoint(r) ) {
iter.previous();
iter.add(addition);
return;
}
}",0,0,1,0,0,0,0,0,0,19,4,27,1,0,0,0,2,2,0,0,1,0.5,0,0
5135_7,7,7,Interval r = iter.next();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.55,21,15
5135_8,8,10,"if ( addition.equals(r) ) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,2,0,0,1,0.55,18,13
5135_9,9,9,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,19,13
5135_11,11,26,"if ( addition.adjacent(r) || !addition.disjoint(r) ) {
Interval bigger = addition.union(r);
iter.set(bigger);
while ( iter.hasNext() ) {
Interval next = iter.next();
if ( !bigger.adjacent(next) && bigger.disjoint(next) ) {
break;
}

iter.remove();
iter.previous();
iter.set(bigger.union(next));
iter.next();
}
return;
}",1,0,0,0,0,0,0,0,0,11,3,16,1,1,0,0,2,2,0,0,1,0.49,2,1
5135_12,12,12,Interval bigger = addition.union(r);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.58,16,11
5135_13,13,13,iter.set(bigger);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.24,15,10
5135_14,14,24,"while ( iter.hasNext() ) {
Interval next = iter.next();
if ( !bigger.adjacent(next) && bigger.disjoint(next) ) {
break;
}

iter.remove();
iter.previous();
iter.set(bigger.union(next));
iter.next();
}",0,1,0,0,0,0,0,0,0,7,2,11,1,1,0,0,2,2,0,0,0,0.27,4,2
5135_15,15,15,Interval next = iter.next();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.26,13,8
5135_16,16,18,"if ( !bigger.adjacent(next) && bigger.disjoint(next) ) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,2,2,0,0,0,0.19,10,6
5135_17,17,17,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,2,0,0,0,0.13,11,6
5135_20,20,20,iter.remove();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.29,8,5
5135_21,21,21,iter.previous();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.26,7,4
5135_22,22,22,iter.set(bigger.union(next));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.23,6,3
5135_23,23,23,iter.next();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.2,5,2
5135_25,25,25,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,3,1
5135_27,27,31,"if ( addition.startsBeforeDisjoint(r) ) {
iter.previous();
iter.add(addition);
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,0,2,2,0,0,1,0.5,0,0
5135_28,28,28,iter.previous();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.26,0,0
5135_29,29,29,iter.add(addition);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.3,1,0
5135_30,30,30,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,2,1
5135_33,33,33,intervals.add(addition);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0.29,5,3
5134_1,1,1,protected void add(Interval addition) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.46,11,8
5134_2,2,2,"throw new IllegalStateException(""can't alter readonly IntervalSet"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,0,0,1,0.48,10,7
5134_3,3,5,"if ( addition.b<addition.a ) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,3,0,0,0,0.34,7,5
5134_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.15,8,5
5134_6,6,32,"for (ListIterator<Interval> iter = intervals.listIterator(); iter.hasNext();) {
Interval r = iter.next();
if ( addition.equals(r) ) {
return;
}
if ( addition.adjacent(r) || !addition.disjoint(r) ) {
Interval bigger = addition.union(r);
iter.set(bigger);
while ( iter.hasNext() ) {
Interval next = iter.next();
if ( !bigger.adjacent(next) && bigger.disjoint(next) ) {
break;
}

iter.remove();
iter.previous();
iter.set(bigger.union(next));
iter.next();
}
return;
}
if ( addition.startsBeforeDisjoint(r) ) {
iter.previous();
iter.add(addition);
return;
}
}",0,0,1,0,0,0,0,0,0,19,4,27,1,0,0,0,5,3,0,0,2,0.61,0,0
5134_7,7,7,Interval r = iter.next();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.69,5,3
5134_8,8,10,"if ( addition.equals(r) ) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,3,0,0,0,0.3,2,1
5134_9,9,9,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.15,3,1
5134_11,11,26,"if ( addition.adjacent(r) || !addition.disjoint(r) ) {
Interval bigger = addition.union(r);
iter.set(bigger);
while ( iter.hasNext() ) {
Interval next = iter.next();
if ( !bigger.adjacent(next) && bigger.disjoint(next) ) {
break;
}

iter.remove();
iter.previous();
iter.set(bigger.union(next));
iter.next();
}
return;
}",1,0,0,0,0,0,0,0,0,11,3,16,1,1,0,0,5,3,0,0,2,0.63,0,0
5134_12,12,12,Interval bigger = addition.union(r);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.58,0,0
5134_13,13,13,iter.set(bigger);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,3,0,0,0,0.36,1,0
5134_14,14,24,"while ( iter.hasNext() ) {
Interval next = iter.next();
if ( !bigger.adjacent(next) && bigger.disjoint(next) ) {
break;
}

iter.remove();
iter.previous();
iter.set(bigger.union(next));
iter.next();
}",0,1,0,0,0,0,0,0,0,7,2,11,1,1,0,0,5,3,0,0,2,0.66,2,1
5134_15,15,15,Interval next = iter.next();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.73,3,2
5134_16,16,18,"if ( !bigger.adjacent(next) && bigger.disjoint(next) ) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,5,3,0,0,1,0.6,4,3
5134_17,17,17,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,3,0,0,0,0.38,5,4
5134_20,20,20,iter.remove();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,5,3,0,0,0,0.36,8,6
5134_21,21,21,iter.previous();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.37,9,6
5134_22,22,22,iter.set(bigger.union(next));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.57,10,7
5134_23,23,23,iter.next();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.59,11,8
5134_25,25,25,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.15,13,10
5134_27,27,31,"if ( addition.startsBeforeDisjoint(r) ) {
iter.previous();
iter.add(addition);
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,0,5,3,0,0,0,0.38,15,11
5134_28,28,28,iter.previous();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.37,16,11
5134_29,29,29,iter.add(addition);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.32,17,12
5134_30,30,30,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.15,18,13
5134_33,33,33,intervals.add(addition);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,3,0,0,1,0.48,21,15
5133_1,1,1,protected void add(Interval addition) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,1,0,0,0.33,5,3
5133_2,2,2,"throw new IllegalStateException(""can't alter readonly IntervalSet"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,7,1,0,0,0.36,4,2
5133_3,3,5,"if ( addition.b<addition.a ) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,7,1,0,0,0.34,1,0
5133_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,7,1,0,0,0.23,2,0
5133_6,6,32,"for (ListIterator<Interval> iter = intervals.listIterator(); iter.hasNext();) {
Interval r = iter.next();
if ( addition.equals(r) ) {
return;
}
if ( addition.adjacent(r) || !addition.disjoint(r) ) {
Interval bigger = addition.union(r);
iter.set(bigger);
while ( iter.hasNext() ) {
Interval next = iter.next();
if ( !bigger.adjacent(next) && bigger.disjoint(next) ) {
break;
}

iter.remove();
iter.previous();
iter.set(bigger.union(next));
iter.next();
}
return;
}
if ( addition.startsBeforeDisjoint(r) ) {
iter.previous();
iter.add(addition);
return;
}
}",0,0,1,0,0,0,0,0,0,19,4,27,1,0,0,0,8,7,1,0,2,0.58,0,0
5133_7,7,7,Interval r = iter.next();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,7,1,0,1,0.48,1,0
5133_8,8,10,"if ( addition.equals(r) ) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,8,7,1,0,0,0.34,2,1
5133_9,9,9,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,7,1,0,0,0.23,3,2
5133_11,11,26,"if ( addition.adjacent(r) || !addition.disjoint(r) ) {
Interval bigger = addition.union(r);
iter.set(bigger);
while ( iter.hasNext() ) {
Interval next = iter.next();
if ( !bigger.adjacent(next) && bigger.disjoint(next) ) {
break;
}

iter.remove();
iter.previous();
iter.set(bigger.union(next));
iter.next();
}
return;
}",1,0,0,0,0,0,0,0,0,11,3,16,1,1,0,0,8,7,1,0,1,0.5,5,4
5133_12,12,12,Interval bigger = addition.union(r);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,7,1,0,0,0.39,6,4
5133_13,13,13,iter.set(bigger);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,7,1,0,1,0.51,7,5
5133_14,14,24,"while ( iter.hasNext() ) {
Interval next = iter.next();
if ( !bigger.adjacent(next) && bigger.disjoint(next) ) {
break;
}

iter.remove();
iter.previous();
iter.set(bigger.union(next));
iter.next();
}",0,1,0,0,0,0,0,0,0,7,2,11,1,1,0,0,8,7,1,0,1,0.53,8,6
5133_15,15,15,Interval next = iter.next();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,7,1,0,1,0.5,9,7
5133_16,16,18,"if ( !bigger.adjacent(next) && bigger.disjoint(next) ) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,8,7,1,0,0,0.37,10,8
5133_17,17,17,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,8,7,1,0,0,0.3,11,9
5133_20,20,20,iter.remove();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,8,7,1,0,1,0.52,14,11
5133_21,21,21,iter.previous();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,7,1,0,1,0.54,15,11
5133_22,22,22,iter.set(bigger.union(next));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,7,1,0,1,0.49,16,12
5133_23,23,23,iter.next();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,7,1,0,1,0.55,17,13
5133_25,25,25,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,7,1,0,0,0.23,19,15
5133_27,27,31,"if ( addition.startsBeforeDisjoint(r) ) {
iter.previous();
iter.add(addition);
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,0,8,7,1,0,1,0.46,21,16
5133_28,28,28,iter.previous();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,7,1,0,1,0.54,22,16
5133_29,29,29,iter.add(addition);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,7,1,0,1,0.51,23,17
5133_30,30,30,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,7,1,0,0,0.23,24,18
5133_33,33,33,intervals.add(addition);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,8,7,1,0,0,0.35,27,20
5132_1,1,2,"@Override
public SemanticContext evalPrecedence(Recognizer<?, ?> parser, RuleContext parserCallStack) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,0,0,1,0.46,7,6
5132_3,3,3,boolean differs = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.3,6,5
5132_4,4,4,List<SemanticContext> operands = new ArrayList<SemanticContext>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.52,5,4
5132_5,5,14,"for (SemanticContext context : opnds) {
SemanticContext evaluated = context.evalPrecedence(parser, parserCallStack);
differs |= (evaluated != context);
if (evaluated == NONE) {
return NONE;
}
else if (evaluated != null) {
operands.add(evaluated);
}
}",0,0,0,1,0,0,0,0,0,6,2,10,0,1,0,1,4,2,0,0,1,0.53,0,0
5132_6,6,6,"SemanticContext evaluated = context.evalPrecedence(parser, parserCallStack);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.46,3,2
5132_7,7,7,differs |= (evaluated != context);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.45,2,1
5132_8,8,13,"if (evaluated == NONE) {
return NONE;
}
else if (evaluated != null) {
operands.add(evaluated);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,0,4,2,0,0,0,0.41,0,0
5132_9,9,9,return NONE;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.37,0,0
5132_11,11,11,else if (evaluated != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.4,2,1
5132_12,12,12,operands.add(evaluated);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.26,3,1
5132_16,16,18,"if (!differs) {
return this;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,0,0,0,0.27,7,3
5132_17,17,17,return this;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.35,8,3
5132_20,20,22,"if (operands.isEmpty()) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,0,0,0,0.32,11,5
5132_21,21,21,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.33,12,5
5132_24,24,24,SemanticContext result = operands.get(0);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,4,2,0,0,1,0.43,15,7
5132_25,25,27,"for (int i = 1; i < operands.size(); i++) {
result = SemanticContext.or(result, operands.get(i));
}",0,0,1,0,0,0,0,0,0,1,1,3,1,1,0,1,4,2,0,0,1,0.38,16,7
5132_26,26,26,"result = SemanticContext.or(result, operands.get(i));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.43,17,8
5132_29,29,29,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.29,20,10
5131_1,1,2,"@Override
public SemanticContext evalPrecedence(Recognizer<?, ?> parser, RuleContext parserCallStack) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,1,0,1,0.48,7,6
5131_3,3,3,boolean differs = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.52,6,5
5131_4,4,4,List<SemanticContext> operands = new ArrayList<SemanticContext>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.5,5,4
5131_5,5,14,"for (SemanticContext context : opnds) {
SemanticContext evaluated = context.evalPrecedence(parser, parserCallStack);
differs |= (evaluated != context);
if (evaluated == null) {
return null;
}
else if (evaluated != NONE) {
operands.add(evaluated);
}
}",0,0,0,1,0,0,0,0,0,6,2,10,0,1,0,1,4,3,1,0,1,0.56,0,0
5131_6,6,6,"SemanticContext evaluated = context.evalPrecedence(parser, parserCallStack);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.46,3,2
5131_7,7,7,differs |= (evaluated != context);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.45,2,1
5131_8,8,13,"if (evaluated == null) {
return null;
}
else if (evaluated != NONE) {
operands.add(evaluated);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,0,4,3,1,0,0,0.43,0,0
5131_9,9,9,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.42,0,0
5131_11,11,11,else if (evaluated != NONE) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.42,2,1
5131_12,12,12,operands.add(evaluated);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.26,3,1
5131_16,16,18,"if (!differs) {
return this;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,1,0,0,0.37,7,3
5131_17,17,17,return this;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.51,8,3
5131_20,20,22,"if (operands.isEmpty()) {
return NONE;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,1,0,0,0.43,11,5
5131_21,21,21,return NONE;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.48,12,5
5131_24,24,24,SemanticContext result = operands.get(0);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,4,3,1,0,1,0.4,15,7
5131_25,25,27,"for (int i = 1; i < operands.size(); i++) {
result = SemanticContext.and(result, operands.get(i));
}",0,0,1,0,0,0,0,0,0,1,1,3,1,1,0,1,4,3,1,0,1,0.35,16,7
5131_26,26,26,"result = SemanticContext.and(result, operands.get(i));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.4,17,8
5131_29,29,29,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,1,0,0,0.39,20,10
5130_1,1,1,public String getTokenName(int t) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,7,0,0,0,0.48,26,14
5130_2,2,2,"if ( t==-1 ) return ""EOF"";",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,12,7,0,0,0,0.36,25,13
5130_4,4,31,"if ( atn.grammarType == ATNType.LEXER &&
t >= Character.MIN_VALUE && t <= Character.MAX_VALUE )
{
switch (t) {
case '\n':
return ""'\\n'"";
case '\r':
return ""'\\r'"";
case '\t':
return ""'\\t'"";
case '\b':
return ""'\\b'"";
case '\f':
return ""'\\f'"";
case '\\':
return ""'\\\\'"";
case '\'':
return ""'\\''"";
default:
if ( Character.UnicodeBlock.of((char)t)==Character.UnicodeBlock.BASIC_LATIN &&
!Character.isISOControl((char)t) ) {
return '\''+Character.toString((char)t)+'\'';
}
String hex = Integer.toHexString(t|0x10000).toUpperCase().substring(1,5);
String unicodeStr = ""'\\u""+hex+""'"";
return unicodeStr;
}
}",1,0,0,0,0,0,0,0,0,15,3,28,0,0,1,1,12,7,0,0,3,0.62,0,0
5130_5,5,5,t >= Character.MIN_VALUE && t <= Character.MAX_VALUE ),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,7,0,0,2,0.68,22,11
5130_7,7,7,switch (t) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,7,0,0,0,0.33,20,10
5130_8,8,9,"case '\n':
return ""'\\n'"";",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,12,7,0,0,0,0.41,18,9
5130_10,10,11,"case '\r':
return ""'\\r'"";",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,12,7,0,0,0,0.36,16,8
5130_12,12,13,"case '\t':
return ""'\\t'"";",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,12,7,0,0,0,0.3,14,7
5130_14,14,15,"case '\b':
return ""'\\b'"";",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,12,7,0,0,0,0.41,12,6
5130_16,16,17,"case '\f':
return ""'\\f'"";",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,12,7,0,0,0,0.44,10,5
5130_18,18,19,"case '\\':
return ""'\\\\'"";",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,12,7,0,0,0,0.3,8,4
5130_20,20,21,"case '\'':
return ""'\\''"";",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,12,7,0,0,0,0.3,6,3
5130_22,22,23,"default:
if ( Character.UnicodeBlock.of((char)t)==Character.UnicodeBlock.BASIC_LATIN &&",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,12,7,0,0,0,0.53,4,2
5130_24,24,24,!Character.isISOControl((char)t) ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,7,0,0,0,0.48,3,1
5130_25,25,25,return '\''+Character.toString((char)t)+'\'';,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,12,7,0,0,0,0.5,2,0
5130_27,27,27,"String hex = Integer.toHexString(t|0x10000).toUpperCase().substring(1,5);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,7,0,0,0,0.59,0,0
5130_28,28,28,"String unicodeStr = ""'\\u""+hex+""'"";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,7,0,0,1,0.68,1,0
5130_29,29,29,return unicodeStr;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,12,7,0,0,0,0.54,2,1
5130_33,33,35,"if (tokenNames != null && t >= 0 && t < tokenNames.size()) {
return tokenNames.get(t);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,12,7,0,0,0,0.43,6,3
5130_34,34,34,return tokenNames.get(t);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,12,7,0,0,0,0.37,7,3
5130_37,37,37,return String.valueOf(t);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,12,7,0,0,1,0.53,10,5
5122_1,1,2,"    public GrammarDependencies analyze(Set<File> grammarFiles,
Set<File> importGrammarFiles, Tool tool) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,2,2,0,1,0.54,7,5
5122_3,3,3,"log.debug(""Analysing grammar dependencies "" + sourceDirectory);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,2,0,0,0.38,6,4
5122_5,5,5,Collection<File> grammarsAndTokens = new HashSet<File>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,2,0,2,0.63,4,3
5122_6,6,6,grammarsAndTokens.addAll(importGrammarFiles);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,2,0,2,0.67,3,2
5122_7,7,7,grammarsAndTokens.addAll(grammarFiles);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,5,2,2,0,2,0.63,2,1
5122_9,9,12,"for (File grammarFile : grammarsAndTokens) {
if (!grammarFile.getName().endsWith("".tokens""))
analyse(grammarFile, grammarsAndTokens, tool);
}",0,0,0,1,0,0,0,0,0,2,1,4,0,0,1,1,5,2,2,0,2,0.66,0,0
5122_10,10,11,"if (!grammarFile.getName().endsWith("".tokens""))
analyse(grammarFile, grammarsAndTokens, tool);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,5,2,2,0,2,0.64,0,0
5122_11,11,11,"analyse(grammarFile, grammarsAndTokens, tool);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,2,0.65,1,0
5122_14,14,24,"for (File grammarFile : grammarFiles) {
Collection<String> usages = findUsages(getRelativePath(grammarFile));

if (!usages.isEmpty()) {
grammars.put(grammarFile,
new AbstractMap.SimpleImmutableEntry<byte[], Collection<String>>(
MojoUtils.checksum(grammarFile), usages));

log.debug(""  "" + getRelativePath(grammarFile) + "" used by "" + usages);
}
}",0,0,0,1,0,0,0,0,0,4,2,11,0,0,1,1,5,2,2,0,1,0.53,4,2
5122_15,15,15,Collection<String> usages = findUsages(getRelativePath(grammarFile));,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,2,2,0,1,0.53,5,2
5122_17,17,23,"if (!usages.isEmpty()) {
grammars.put(grammarFile,
new AbstractMap.SimpleImmutableEntry<byte[], Collection<String>>(
MojoUtils.checksum(grammarFile), usages));

log.debug(""  "" + getRelativePath(grammarFile) + "" used by "" + usages);
}",1,0,0,0,0,0,0,0,0,2,1,7,0,0,1,0,5,2,2,0,1,0.51,7,4
5122_18,18,20,"grammars.put(grammarFile,
new AbstractMap.SimpleImmutableEntry<byte[], Collection<String>>(
MojoUtils.checksum(grammarFile), usages));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,5,2,2,0,1,0.52,8,4
5122_22,22,22,"log.debug(""  "" + getRelativePath(grammarFile) + "" used by "" + usages);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,2,0,1,0.47,12,6
5122_26,26,36,"for (File grammarFile : importGrammarFiles) {
Collection<String> usages = findUsages(grammarFile.getName());

if (!usages.isEmpty()) {
grammars.put(grammarFile,
new AbstractMap.SimpleImmutableEntry<byte[], Collection<String>>(
MojoUtils.checksum(grammarFile), usages));

log.debug(""  "" + grammarFile.getName() + "" imported by "" + usages);
}
}",0,0,0,1,0,0,0,0,0,4,2,11,0,0,1,1,5,2,2,0,1,0.55,16,7
5122_27,27,27,Collection<String> usages = findUsages(grammarFile.getName());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,2,2,0,1,0.52,17,7
5122_29,29,35,"if (!usages.isEmpty()) {
grammars.put(grammarFile,
new AbstractMap.SimpleImmutableEntry<byte[], Collection<String>>(
MojoUtils.checksum(grammarFile), usages));

log.debug(""  "" + grammarFile.getName() + "" imported by "" + usages);
}",1,0,0,0,0,0,0,0,0,2,1,7,0,0,1,0,5,2,2,0,1,0.53,19,9
5122_30,30,32,"grammars.put(grammarFile,
new AbstractMap.SimpleImmutableEntry<byte[], Collection<String>>(
MojoUtils.checksum(grammarFile), usages));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,5,2,2,0,1,0.52,20,9
5122_34,34,34,"log.debug(""  "" + grammarFile.getName() + "" imported by "" + usages);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,2,0,1,0.52,24,11
5122_38,38,38,return this;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,2,2,0,0,0.18,28,12
5121_1,1,2,"    public GrammarDependencies analyze(Set<File> grammarFiles,
Set<File> importGrammarFiles, Tool tool) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,2,0.62,2,1
5121_3,3,3,"log.debug(""Analysing grammar dependencies "" + sourceDirectory);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,2,0.64,1,0
5121_5,5,5,Collection<File> grammarsAndTokens = new HashSet<File>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,1,0.49,0,0
5121_6,6,6,grammarsAndTokens.addAll(importGrammarFiles);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,1,0.57,1,0
5121_7,7,7,grammarsAndTokens.addAll(grammarFiles);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,4,0,0,1,0.57,2,1
5121_9,9,12,"for (File grammarFile : grammarsAndTokens) {
if (!grammarFile.getName().endsWith("".tokens""))
analyse(grammarFile, grammarsAndTokens, tool);
}",0,0,0,1,0,0,0,0,0,2,1,4,0,0,1,1,4,4,0,0,1,0.57,4,3
5121_10,10,11,"if (!grammarFile.getName().endsWith("".tokens""))
analyse(grammarFile, grammarsAndTokens, tool);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,4,4,0,0,1,0.56,5,3
5121_11,11,11,"analyse(grammarFile, grammarsAndTokens, tool);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.6,6,4
5121_14,14,24,"for (File grammarFile : grammarFiles) {
Collection<String> usages = findUsages(getRelativePath(grammarFile));

if (!usages.isEmpty()) {
grammars.put(grammarFile,
new AbstractMap.SimpleImmutableEntry<byte[], Collection<String>>(
MojoUtils.checksum(grammarFile), usages));

log.debug(""  "" + getRelativePath(grammarFile) + "" used by "" + usages);
}
}",0,0,0,1,0,0,0,0,0,4,2,11,0,0,1,1,4,4,0,0,1,0.53,9,6
5121_15,15,15,Collection<String> usages = findUsages(getRelativePath(grammarFile));,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,1,0.47,10,6
5121_17,17,23,"if (!usages.isEmpty()) {
grammars.put(grammarFile,
new AbstractMap.SimpleImmutableEntry<byte[], Collection<String>>(
MojoUtils.checksum(grammarFile), usages));

log.debug(""  "" + getRelativePath(grammarFile) + "" used by "" + usages);
}",1,0,0,0,0,0,0,0,0,2,1,7,0,0,1,0,4,4,0,0,1,0.52,12,8
5121_18,18,20,"grammars.put(grammarFile,
new AbstractMap.SimpleImmutableEntry<byte[], Collection<String>>(
MojoUtils.checksum(grammarFile), usages));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,4,4,0,0,1,0.55,13,8
5121_22,22,22,"log.debug(""  "" + getRelativePath(grammarFile) + "" used by "" + usages);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.45,17,10
5121_26,26,36,"for (File grammarFile : importGrammarFiles) {
Collection<String> usages = findUsages(grammarFile.getName());

if (!usages.isEmpty()) {
grammars.put(grammarFile,
new AbstractMap.SimpleImmutableEntry<byte[], Collection<String>>(
MojoUtils.checksum(grammarFile), usages));

log.debug(""  "" + grammarFile.getName() + "" imported by "" + usages);
}
}",0,0,0,1,0,0,0,0,0,4,2,11,0,0,1,1,4,4,0,0,1,0.54,21,11
5121_27,27,27,Collection<String> usages = findUsages(grammarFile.getName());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,1,0.48,22,11
5121_29,29,35,"if (!usages.isEmpty()) {
grammars.put(grammarFile,
new AbstractMap.SimpleImmutableEntry<byte[], Collection<String>>(
MojoUtils.checksum(grammarFile), usages));

log.debug(""  "" + grammarFile.getName() + "" imported by "" + usages);
}",1,0,0,0,0,0,0,0,0,2,1,7,0,0,1,0,4,4,0,0,1,0.53,24,13
5121_30,30,32,"grammars.put(grammarFile,
new AbstractMap.SimpleImmutableEntry<byte[], Collection<String>>(
MojoUtils.checksum(grammarFile), usages));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,4,4,0,0,1,0.55,25,13
5121_34,34,34,"log.debug(""  "" + grammarFile.getName() + "" imported by "" + usages);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.49,29,15
5121_38,38,38,return this;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.19,33,16
4881_1,1,1,public Future<VoidResult> update(UpdateFunc updateFunc) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.29,15,11
4881_2,2,2,MatrixTransportClient matrixClient = PSAgentContext.get().getMatrixTransportClient();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.39,14,10
4881_3,3,3,UpdateParam param = updateFunc.getParam();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,1,0,0,0.25,13,9
4881_5,5,5,List<PartitionUpdateParam> partParams = param.split();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,1,0,0,0.31,11,8
4881_7,7,7,int size = partParams.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,1,0,0,0.22,9,7
4881_8,8,8,UpdatePSFRequest request = new UpdatePSFRequest(updateFunc);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.57,8,6
4881_9,9,9,ResponseCache cache = new MapResponseCache(size);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.38,7,5
4881_10,10,10,FutureResult<VoidResult> result = new FutureResult<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.3,6,4
4881_11,11,11,int requestId = request.getRequestId();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,1,0,1,0.64,5,3
4881_13,13,13,"requests.put(requestId, request);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,3,2,1,0,1,0.71,3,2
4881_14,14,14,"requestIdToResponseCache.put(requestId, cache);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,1,0,1,0.64,2,1
4881_15,15,15,"requestIdToResultMap.put(requestId, result);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,3,2,1,0,1,0.57,1,0
4881_17,17,20,"for (int i = 0; i < size; i++) {
sendUpdateUDFRequest(matrixClient, requestId, partParams.get(i).getMatrixId(),
partParams.get(i).getPartKey().getPartitionId(), updateFunc, partParams.get(i));
}",0,0,1,0,0,0,0,0,0,1,1,4,0,0,1,1,3,2,1,0,2,0.66,0,0
4881_18,18,19,"sendUpdateUDFRequest(matrixClient, requestId, partParams.get(i).getMatrixId(),
partParams.get(i).getPartKey().getPartitionId(), updateFunc, partParams.get(i));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,2,0.67,1,0
4881_22,22,22,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,2,1,0,0,0.19,5,2
4880_1,1,1,public Future<VoidResult> update(UpdateFunc updateFunc) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.39,3,2
4880_2,2,2,MatrixTransportClient matrixClient = PSAgentContext.get().getMatrixTransportClient();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.47,2,1
4880_3,3,3,UpdateParam param = updateFunc.getParam();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,5,0,0,1,0.61,1,0
4880_5,5,5,List<PartitionUpdateParam> partParams = param.split();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,5,0,0,3,0.75,0,0
4880_7,7,7,int size = partParams.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,5,0,0,1,0.56,2,1
4880_8,8,8,UpdatePSFRequest request = new UpdatePSFRequest(updateFunc);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.4,3,1
4880_9,9,9,ResponseCache cache = new MapResponseCache(size);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.32,4,2
4880_10,10,10,FutureResult<VoidResult> result = new FutureResult<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.21,5,3
4880_11,11,11,int requestId = request.getRequestId();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,5,0,0,0,0.34,6,4
4880_13,13,13,"requests.put(requestId, request);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,5,5,0,0,0,0.33,8,6
4880_14,14,14,"requestIdToResponseCache.put(requestId, cache);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,5,0,0,0,0.31,9,6
4880_15,15,15,"requestIdToResultMap.put(requestId, result);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,5,5,0,0,0,0.31,10,7
4880_17,17,20,"for (int i = 0; i < size; i++) {
sendUpdateUDFRequest(matrixClient, requestId, partParams.get(i).getMatrixId(),
partParams.get(i).getPartKey().getPartitionId(), updateFunc, partParams.get(i));
}",0,0,1,0,0,0,0,0,0,1,1,4,0,0,1,1,5,5,0,0,3,0.64,12,9
4880_18,18,19,"sendUpdateUDFRequest(matrixClient, requestId, partParams.get(i).getMatrixId(),
partParams.get(i).getPartKey().getPartitionId(), updateFunc, partParams.get(i));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,3,0.64,13,9
4880_22,22,22,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,5,0,0,0,0.17,17,11
4879_1,1,1,"public FutureResult<Vector[]> getRows(int matrixId, int[] rowIds) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,2,0.68,2,1
4879_2,2,2,"checkParams(matrixId, rowIds);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,1,1,0,1,0.53,1,0
4879_4,4,5,"List<PartitionKey> parts =
PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId, rowIds[0]);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,0,3,1,1,0,3,0.78,0,0
4879_6,6,6,"GetRowsRequest request = new GetRowsRequest(matrixId, rowIds);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,1,1,0,2,0.7,2,1
4879_8,8,8,int requestId = request.getRequestId();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,1,1,0,1,0.49,4,2
4879_9,9,9,FutureResult<Vector[]> result = new FutureResult<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.32,5,2
4879_10,10,10,ResponseCache responseCache = new MapResponseCache(parts.size());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.34,6,3
4879_11,11,11,"requests.put(requestId, request);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,1,0,0,0.28,7,4
4879_12,12,12,"requestIdToResultMap.put(requestId, result);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,1,0,0,0.32,8,5
4879_13,13,13,"requestIdToResponseCache.put(requestId, responseCache);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,3,1,1,0,0,0.31,9,6
4879_15,15,15,MatrixTransportClient matrixClient = PSAgentContext.get().getMatrixTransportClient();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,1,1,0,1,0.5,11,8
4879_16,16,20,"for (PartitionKey part : parts) {
LOG.info(""Get row "" + part);
sendGetRowsRequest(matrixClient, requestId, part.getMatrixId(), rowIds,
part.getPartitionId());
}",0,0,0,1,0,0,0,0,0,2,1,5,0,1,0,1,3,1,1,0,3,0.76,12,8
4879_17,17,17,"LOG.info(""Get row "" + part);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,2,0.69,13,9
4879_18,18,19,"sendGetRowsRequest(matrixClient, requestId, part.getMatrixId(), rowIds,
part.getPartitionId());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,3,1,1,0,3,0.76,14,10
4879_22,22,22,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,1,1,0,0,0.19,18,12
4878_1,1,1,"  public FutureResult<Vector> getRow(int matrixId, int rowId) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,2,0.68,2,1
4878_2,2,2,"checkParams(matrixId, rowId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,1,1,0,1,0.53,1,0
4878_4,4,5,"List<PartitionKey> parts =
PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId, rowId);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,0,3,1,1,0,3,0.78,0,0
4878_6,6,6,"GetRowRequest request = new GetRowRequest(matrixId, rowId);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,1,1,0,2,0.7,2,1
4878_8,8,8,int requestId = request.getRequestId();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,1,1,0,1,0.49,4,2
4878_9,9,9,FutureResult<Vector> result = new FutureResult<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.32,5,2
4878_10,10,10,ResponseCache responseCache = new MapResponseCache(parts.size());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.34,6,3
4878_11,11,11,"requests.put(requestId, request);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,1,0,0,0.28,7,4
4878_12,12,12,"requestIdToResultMap.put(requestId, result);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,1,0,0,0.32,8,5
4878_13,13,13,"requestIdToResponseCache.put(requestId, responseCache);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,3,1,1,0,0,0.31,9,6
4878_15,15,15,MatrixTransportClient matrixClient = PSAgentContext.get().getMatrixTransportClient();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,1,1,0,1,0.5,11,8
4878_16,16,19,"for (PartitionKey part : parts) {
LOG.info(""Get row "" + part);
sendGetRowRequest(matrixClient, requestId, part.getMatrixId(), rowId, part.getPartitionId());
}",0,0,0,1,0,0,0,0,0,2,1,4,0,1,0,1,3,1,1,0,3,0.76,12,8
4878_17,17,17,"LOG.info(""Get row "" + part);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,2,0.69,13,9
4878_18,18,18,"sendGetRowRequest(matrixClient, requestId, part.getMatrixId(), rowId, part.getPartitionId());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,3,0.76,14,10
4878_21,21,21,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,1,1,0,0,0.19,17,12
4877_1,1,1,"throws InterruptedException, ExecutionException ",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,4,0,0,0,0.15,3,2
4877_2,2,2,MatrixTransportClient matrixClient = PSAgentContext.get().getMatrixTransportClient();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.48,2,1
4877_3,3,3,GetParam param = func.getParam();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,0,0,1,0.66,1,0
4877_5,5,5,List<PartitionGetParam> partParams = param.split();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,2,0.68,0,0
4877_6,6,6,int size = partParams.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,5,4,0,0,1,0.55,1,0
4877_8,8,8,GetPSFRequest request = new GetPSFRequest(func);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,4,0,0,0,0.41,3,2
4877_10,10,10,int requestId = request.getRequestId();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,4,0,0,0,0.31,5,3
4877_11,11,11,FutureResult<GetResult> result = new FutureResult<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.18,6,3
4877_12,12,12,ResponseCache cache = new MapResponseCache(size);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.27,7,4
4877_13,13,13,"requests.put(requestId, request);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,4,0,0,0,0.31,8,5
4877_14,14,14,"requestIdToResponseCache.put(requestId, cache);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,4,0,0,0,0.29,9,6
4877_15,15,15,"requestIdToResultMap.put(requestId, result);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,5,4,0,0,0,0.27,10,7
4877_17,17,20,"for (int i = 0; i < size; i++) {
sendGetUDFRequest(matrixClient, requestId, partParams.get(i).getMatrixId(),
partParams.get(i).getPartKey().getPartitionId(), func, partParams.get(i));
}",0,0,1,0,0,0,0,0,0,1,1,4,0,0,1,0,5,4,0,0,2,0.6,12,9
4877_18,18,19,"sendGetUDFRequest(matrixClient, requestId, partParams.get(i).getMatrixId(),
partParams.get(i).getPartKey().getPartitionId(), func, partParams.get(i));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,0,0,2,0.61,13,9
4877_21,21,21,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.13,16,11
4876_1,1,1,private FutureResult<Vector[]> get(IndexGetRowsRequest request) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.46,31,20
4876_2,2,3,"MatrixMeta matrixMeta = PSAgentContext.get().getMatrixMetaManager()
.getMatrixMeta(request.getMatrixId());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,4,0,0,0,0.31,29,19
4876_4,4,4,PartitionKey[] matrixParts = matrixMeta.getPartitionKeys();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.46,28,18
4876_5,5,10,"for (PartitionKey part : matrixParts) {
if (part.getStartRow() != 0 || part.getEndRow() != matrixMeta.getRowNum()) {
throw new UnsupportedOperationException(
""Get rows by indices only support column-partitioned matrix now"");
}
}",0,0,0,1,0,0,0,0,0,2,2,6,0,1,0,1,4,4,0,0,1,0.47,22,15
4876_6,6,9,"if (part.getStartRow() != 0 || part.getEndRow() != matrixMeta.getRowNum()) {
throw new UnsupportedOperationException(
""Get rows by indices only support column-partitioned matrix now"");
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,4,4,0,0,1,0.47,23,15
4876_7,7,8,"throw new UnsupportedOperationException(
""Get rows by indices only support column-partitioned matrix now"");",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,4,4,0,0,1,0.49,24,15
4876_12,12,12,FutureResult<Vector[]> result = new FutureResult<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.62,20,14
4876_13,13,13,long startTs = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.26,19,13
4876_14,14,14,KeyPart[] splits;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.24,18,12
4876_15,15,22,"if (request instanceof IntIndexGetRowsRequest) {
splits = RouterUtils.split(matrixMeta, -1, ((IntIndexGetRowsRequest) request).getIndices());
} else if (request instanceof LongIndexGetRowsRequest) {
splits = RouterUtils.split(matrixMeta, -1, ((LongIndexGetRowsRequest) request).getIndices());
} else {
throw new UnsupportedOperationException(
""Unsupport index request type "" + request.getClass().toString());
}",1,0,0,0,0,0,0,0,0,5,1,8,0,1,0,0,4,4,0,0,0,0.38,10,6
4876_16,16,16,"splits = RouterUtils.split(matrixMeta, -1, ((IntIndexGetRowsRequest) request).getIndices());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.34,16,10
4876_17,17,17,} else if (request instanceof LongIndexGetRowsRequest) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.29,15,9
4876_18,18,18,"splits = RouterUtils.split(matrixMeta, -1, ((LongIndexGetRowsRequest) request).getIndices());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.33,14,8
4876_19,19,19,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.08,13,7
4876_20,20,21,"throw new UnsupportedOperationException(
""Unsupport index request type "" + request.getClass().toString());",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,4,4,0,0,0,0.36,11,6
4876_23,23,23,"LOG.info(""Get by indices split use time: "" + (System.currentTimeMillis() - startTs));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.27,9,5
4876_25,25,25,assert matrixParts.length == splits.length;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.3,7,4
4876_27,27,27,int needRequestPartNum = noEmptyPartNum(splits);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.29,5,3
4876_28,28,31,"if (needRequestPartNum == 0) {
result.set(null);
return result;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,4,4,0,0,1,0.43,1,0
4876_29,29,29,result.set(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.48,3,1
4876_30,30,30,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.47,2,0
4876_33,33,33,ResponseCache cache = new MapResponseCache(needRequestPartNum);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.53,0,0
4876_34,34,34,int requestId = request.getRequestId();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.26,1,0
4876_35,35,35,"requestIdToResponseCache.put(requestId, cache);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,1,0.45,2,1
4876_36,36,36,"requestIdToResultMap.put(requestId, result);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,1,0.5,3,2
4876_37,37,37,"requests.put(requestId, request);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,4,0,0,0,0.26,4,3
4876_39,39,39,MatrixTransportClient matrixClient = PSAgentContext.get().getMatrixTransportClient();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.33,6,5
4876_40,40,45,"for (int i = 0; i < splits.length; i++) {
if (splits[i] != null && splits[i].size() > 0) {
sendIndexGetRowsRequest(matrixClient, requestId, request.getMatrixId(), request.getRowIds(),
matrixParts[i].getPartitionId(), splits[i], request.getFunc());
}
}",0,0,1,0,0,0,0,0,0,2,2,6,0,1,0,0,4,4,0,0,1,0.41,7,5
4876_41,41,44,"if (splits[i] != null && splits[i].size() > 0) {
sendIndexGetRowsRequest(matrixClient, requestId, request.getMatrixId(), request.getRowIds(),
matrixParts[i].getPartitionId(), splits[i], request.getFunc());
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,4,4,0,0,1,0.41,8,6
4876_42,42,43,"sendIndexGetRowsRequest(matrixClient, requestId, request.getMatrixId(), request.getRowIds(),
matrixParts[i].getPartitionId(), splits[i], request.getFunc());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,1,0.4,9,7
4876_46,46,46,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.47,13,9
4875_1,1,1,private FutureResult<Vector[]> get(IndexGetRowsRequest request) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.5,25,16
4875_2,2,3,"MatrixMeta matrixMeta = PSAgentContext.get().getMatrixMetaManager()
.getMatrixMeta(request.getMatrixId());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,4,0,0,1,0.41,23,15
4875_4,4,4,PartitionKey[] matrixParts = matrixMeta.getPartitionKeys();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.46,22,14
4875_5,5,10,"for (PartitionKey part : matrixParts) {
if (part.getStartRow() != 0 || part.getEndRow() != matrixMeta.getRowNum()) {
throw new UnsupportedOperationException(
""Get rows by indices only support column-partitioned matrix now"");
}
}",0,0,0,1,0,0,0,0,0,2,2,6,0,1,0,1,4,4,0,0,1,0.48,16,11
4875_6,6,9,"if (part.getStartRow() != 0 || part.getEndRow() != matrixMeta.getRowNum()) {
throw new UnsupportedOperationException(
""Get rows by indices only support column-partitioned matrix now"");
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,4,4,0,0,1,0.47,17,11
4875_7,7,8,"throw new UnsupportedOperationException(
""Get rows by indices only support column-partitioned matrix now"");",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,4,4,0,0,1,0.46,18,11
4875_12,12,12,FutureResult<Vector[]> result = new FutureResult<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.31,14,10
4875_13,13,13,long startTs = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.25,13,9
4875_14,14,14,KeyPart[] splits;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.34,12,8
4875_15,15,22,"if (request instanceof IntIndexGetRowsRequest) {
splits = RouterUtils.split(matrixMeta, -1, ((IntIndexGetRowsRequest) request).getIndices());
} else if (request instanceof LongIndexGetRowsRequest) {
splits = RouterUtils.split(matrixMeta, -1, ((LongIndexGetRowsRequest) request).getIndices());
} else {
throw new UnsupportedOperationException(
""Unsupport index request type "" + request.getClass().toString());
}",1,0,0,0,0,0,0,0,0,5,1,8,0,1,0,0,4,4,0,0,1,0.56,4,2
4875_16,16,16,"splits = RouterUtils.split(matrixMeta, -1, ((IntIndexGetRowsRequest) request).getIndices());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.51,10,6
4875_17,17,17,} else if (request instanceof LongIndexGetRowsRequest) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.49,9,5
4875_18,18,18,"splits = RouterUtils.split(matrixMeta, -1, ((LongIndexGetRowsRequest) request).getIndices());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.5,8,4
4875_19,19,19,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.19,7,3
4875_20,20,21,"throw new UnsupportedOperationException(
""Unsupport index request type "" + request.getClass().toString());",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,4,4,0,0,1,0.53,5,2
4875_23,23,23,"LOG.info(""Get by indices split use time: "" + (System.currentTimeMillis() - startTs));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.29,3,1
4875_25,25,25,assert matrixParts.length == splits.length;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.35,1,0
4875_27,27,27,int needRequestPartNum = noEmptyPartNum(splits);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,2,0.61,0,0
4875_28,28,31,"if (needRequestPartNum == 0) {
result.set(null);
return result;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,4,4,0,0,1,0.46,1,0
4875_29,29,29,result.set(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.3,2,1
4875_30,30,30,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.26,3,2
4875_33,33,33,ResponseCache cache = new MapResponseCache(needRequestPartNum);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.46,6,4
4875_34,34,34,int requestId = request.getRequestId();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.53,7,4
4875_35,35,35,"requestIdToResponseCache.put(requestId, cache);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,1,0.46,8,5
4875_36,36,36,"requestIdToResultMap.put(requestId, result);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,1,0.47,9,6
4875_37,37,37,"requests.put(requestId, request);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,4,0,0,1,0.59,10,7
4875_39,39,39,MatrixTransportClient matrixClient = PSAgentContext.get().getMatrixTransportClient();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.33,12,9
4875_40,40,45,"for (int i = 0; i < splits.length; i++) {
if (splits[i] != null && splits[i].size() > 0) {
sendIndexGetRowsRequest(matrixClient, requestId, request.getMatrixId(), request.getRowIds(),
matrixParts[i].getPartitionId(), splits[i], request.getFunc());
}
}",0,0,1,0,0,0,0,0,0,2,2,6,0,1,0,0,4,4,0,0,2,0.56,13,9
4875_41,41,44,"if (splits[i] != null && splits[i].size() > 0) {
sendIndexGetRowsRequest(matrixClient, requestId, request.getMatrixId(), request.getRowIds(),
matrixParts[i].getPartitionId(), splits[i], request.getFunc());
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,4,4,0,0,2,0.57,14,10
4875_42,42,43,"sendIndexGetRowsRequest(matrixClient, requestId, request.getMatrixId(), request.getRowIds(),
matrixParts[i].getPartitionId(), splits[i], request.getFunc());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,2,0.57,15,11
4875_46,46,46,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.26,19,13
4874_1,1,1,private FutureResult<Vector[]> get(IndexGetRowsRequest request) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.57,10,5
4874_2,2,3,"MatrixMeta matrixMeta = PSAgentContext.get().getMatrixMetaManager()
.getMatrixMeta(request.getMatrixId());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,4,0,0,1,0.54,8,4
4874_4,4,4,PartitionKey[] matrixParts = matrixMeta.getPartitionKeys();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.46,7,3
4874_5,5,10,"for (PartitionKey part : matrixParts) {
if (part.getStartRow() != 0 || part.getEndRow() != matrixMeta.getRowNum()) {
throw new UnsupportedOperationException(
""Get rows by indices only support column-partitioned matrix now"");
}
}",0,0,0,1,0,0,0,0,0,2,2,6,0,1,0,1,5,4,0,0,1,0.45,1,0
4874_6,6,9,"if (part.getStartRow() != 0 || part.getEndRow() != matrixMeta.getRowNum()) {
throw new UnsupportedOperationException(
""Get rows by indices only support column-partitioned matrix now"");
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,5,4,0,0,1,0.43,2,0
4874_7,7,8,"throw new UnsupportedOperationException(
""Get rows by indices only support column-partitioned matrix now"");",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,5,4,0,0,1,0.41,3,0
4874_12,12,12,FutureResult<Vector[]> result = new FutureResult<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,4,0,0,0,0.33,0,0
4874_13,13,13,long startTs = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.31,1,0
4874_14,14,14,KeyPart[] splits;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.54,2,1
4874_15,15,22,"if (request instanceof IntIndexGetRowsRequest) {
splits = RouterUtils.split(matrixMeta, -1, ((IntIndexGetRowsRequest) request).getIndices());
} else if (request instanceof LongIndexGetRowsRequest) {
splits = RouterUtils.split(matrixMeta, -1, ((LongIndexGetRowsRequest) request).getIndices());
} else {
throw new UnsupportedOperationException(
""Unsupport index request type "" + request.getClass().toString());
}",1,0,0,0,0,0,0,0,0,5,1,8,0,1,0,0,5,4,0,0,2,0.63,3,2
4874_16,16,16,"splits = RouterUtils.split(matrixMeta, -1, ((IntIndexGetRowsRequest) request).getIndices());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.64,4,3
4874_17,17,17,} else if (request instanceof LongIndexGetRowsRequest) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.57,5,4
4874_18,18,18,"splits = RouterUtils.split(matrixMeta, -1, ((LongIndexGetRowsRequest) request).getIndices());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.63,6,5
4874_19,19,19,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.18,7,6
4874_20,20,21,"throw new UnsupportedOperationException(
""Unsupport index request type "" + request.getClass().toString());",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,5,4,0,0,1,0.53,8,7
4874_23,23,23,"LOG.info(""Get by indices split use time: "" + (System.currentTimeMillis() - startTs));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,4,0,0,1,0.43,11,9
4874_25,25,25,assert matrixParts.length == splits.length;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,4,0,0,1,0.52,13,10
4874_27,27,27,int needRequestPartNum = noEmptyPartNum(splits);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,2,0.66,15,11
4874_28,28,31,"if (needRequestPartNum == 0) {
result.set(null);
return result;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,5,4,0,0,1,0.52,16,11
4874_29,29,29,result.set(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.25,17,12
4874_30,30,30,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.18,18,13
4874_33,33,33,ResponseCache cache = new MapResponseCache(needRequestPartNum);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,4,0,0,1,0.55,21,15
4874_34,34,34,int requestId = request.getRequestId();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.64,22,15
4874_35,35,35,"requestIdToResponseCache.put(requestId, cache);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,4,0,0,1,0.56,23,16
4874_36,36,36,"requestIdToResultMap.put(requestId, result);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,4,0,0,1,0.56,24,17
4874_37,37,37,"requests.put(requestId, request);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,5,4,0,0,1,0.68,25,18
4874_39,39,39,MatrixTransportClient matrixClient = PSAgentContext.get().getMatrixTransportClient();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,0,0.42,27,20
4874_40,40,45,"for (int i = 0; i < splits.length; i++) {
if (splits[i] != null && splits[i].size() > 0) {
sendIndexGetRowsRequest(matrixClient, requestId, request.getMatrixId(), request.getRowIds(),
matrixParts[i].getPartitionId(), splits[i], request.getFunc());
}
}",0,0,1,0,0,0,0,0,0,2,2,6,0,1,0,0,5,4,0,0,3,0.7,28,20
4874_41,41,44,"if (splits[i] != null && splits[i].size() > 0) {
sendIndexGetRowsRequest(matrixClient, requestId, request.getMatrixId(), request.getRowIds(),
matrixParts[i].getPartitionId(), splits[i], request.getFunc());
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,5,4,0,0,3,0.7,29,21
4874_42,42,43,"sendIndexGetRowsRequest(matrixClient, requestId, request.getMatrixId(), request.getRowIds(),
matrixParts[i].getPartitionId(), splits[i], request.getFunc());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,0,0,3,0.69,30,22
4874_46,46,46,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.18,34,24
4873_1,1,1,private FutureResult<Vector> get(IndexGetRowRequest request) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.53,32,22
4873_2,2,3,"MatrixMeta matrixMeta = PSAgentContext.get().getMatrixMetaManager()
.getMatrixMeta(request.getMatrixId());",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,3,3,0,0,1,0.51,30,21
4873_5,5,5,PartitionKey[] parts = matrixMeta.getPartitionKeys();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.47,28,20
4873_7,7,7,FutureResult<Vector> result = new FutureResult<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.32,26,19
4873_8,8,8,KeyPart[] splits;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.28,25,18
4873_9,9,9,long startTs = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.27,24,17
4873_10,10,17,"if (request instanceof IntIndexGetRowRequest) {
splits = RouterUtils.split(matrixMeta, -1, ((IntIndexGetRowRequest) request).getKeys());
} else if (request instanceof LongIndexGetRowRequest) {
splits = RouterUtils.split(matrixMeta, -1, ((LongIndexGetRowRequest) request).getKeys());
} else {
throw new UnsupportedOperationException(
""Unsupport index request type "" + request.getClass().toString());
}",1,0,0,0,0,0,0,0,0,5,1,8,0,0,0,0,3,3,0,0,1,0.52,16,11
4873_11,11,11,"splits = RouterUtils.split(matrixMeta, -1, ((IntIndexGetRowRequest) request).getKeys());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.52,22,15
4873_12,12,12,} else if (request instanceof LongIndexGetRowRequest) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.54,21,14
4873_13,13,13,"splits = RouterUtils.split(matrixMeta, -1, ((LongIndexGetRowRequest) request).getKeys());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.51,20,13
4873_14,14,14,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.08,19,12
4873_15,15,16,"throw new UnsupportedOperationException(
""Unsupport index request type "" + request.getClass().toString());",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,3,3,0,0,1,0.47,17,11
4873_18,18,18,"LOG.info(""Get by indices split use time: "" + (System.currentTimeMillis() - startTs));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.35,15,10
4873_20,20,20,assert parts.length == splits.length;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.31,13,9
4873_22,22,22,int needRequestPartNum = noEmptyPartNum(splits);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,1,0.49,11,8
4873_23,23,26,"if (needRequestPartNum == 0) {
result.set(null);
return result;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,3,3,0,0,1,0.43,7,5
4873_24,24,24,result.set(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.25,9,6
4873_25,25,25,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.19,8,5
4873_28,28,28,ResponseCache cache = new MapResponseCache(needRequestPartNum);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.54,5,4
4873_29,29,29,int requestId = request.getRequestId();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.64,4,3
4873_30,30,30,"requestIdToResponseCache.put(requestId, cache);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,1,0.58,3,2
4873_31,31,31,"requestIdToResultMap.put(requestId, result);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,1,0.55,2,1
4873_32,32,32,"requests.put(requestId, request);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,3,3,0,0,1,0.66,1,0
4873_34,34,34,MatrixTransportClient matrixClient = PSAgentContext.get().getMatrixTransportClient();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.41,0,0
4873_35,35,40,"for (int i = 0; i < splits.length; i++) {
if (splits[i] != null && splits[i].size() > 0) {
sendIndexGetRowRequest(matrixClient, requestId, request.getMatrixId(),
request.getRowId(), parts[i].getPartitionId(), splits[i], request.getFunc());
}
}",0,0,1,0,0,0,0,0,0,2,2,6,0,1,0,1,3,3,0,0,3,0.74,1,0
4873_36,36,39,"if (splits[i] != null && splits[i].size() > 0) {
sendIndexGetRowRequest(matrixClient, requestId, request.getMatrixId(),
request.getRowId(), parts[i].getPartitionId(), splits[i], request.getFunc());
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,3,3,0,0,3,0.75,2,1
4873_37,37,38,"sendIndexGetRowRequest(matrixClient, requestId, request.getMatrixId(),
request.getRowId(), parts[i].getPartitionId(), splits[i], request.getFunc());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,3,0.77,3,2
4873_42,42,42,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.19,8,4
4872_1,1,1,private FutureResult<Vector> get(IndexGetRowRequest request) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.46,26,17
4872_2,2,3,"MatrixMeta matrixMeta = PSAgentContext.get().getMatrixMetaManager()
.getMatrixMeta(request.getMatrixId());",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,4,4,0,0,0,0.31,24,16
4872_5,5,5,PartitionKey[] parts = matrixMeta.getPartitionKeys();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,4,0,0,1,0.46,22,15
4872_7,7,7,FutureResult<Vector> result = new FutureResult<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.62,20,14
4872_8,8,8,KeyPart[] splits;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.24,19,13
4872_9,9,9,long startTs = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.26,18,12
4872_10,10,17,"if (request instanceof IntIndexGetRowRequest) {
splits = RouterUtils.split(matrixMeta, -1, ((IntIndexGetRowRequest) request).getKeys());
} else if (request instanceof LongIndexGetRowRequest) {
splits = RouterUtils.split(matrixMeta, -1, ((LongIndexGetRowRequest) request).getKeys());
} else {
throw new UnsupportedOperationException(
""Unsupport index request type "" + request.getClass().toString());
}",1,0,0,0,0,0,0,0,0,5,1,8,0,0,0,0,4,4,0,0,0,0.37,10,6
4872_11,11,11,"splits = RouterUtils.split(matrixMeta, -1, ((IntIndexGetRowRequest) request).getKeys());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.33,16,10
4872_12,12,12,} else if (request instanceof LongIndexGetRowRequest) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.29,15,9
4872_13,13,13,"splits = RouterUtils.split(matrixMeta, -1, ((LongIndexGetRowRequest) request).getKeys());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.31,14,8
4872_14,14,14,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.08,13,7
4872_15,15,16,"throw new UnsupportedOperationException(
""Unsupport index request type "" + request.getClass().toString());",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,4,4,0,0,0,0.36,11,6
4872_18,18,18,"LOG.info(""Get by indices split use time: "" + (System.currentTimeMillis() - startTs));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.27,9,5
4872_20,20,20,assert parts.length == splits.length;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.28,7,4
4872_22,22,22,int needRequestPartNum = noEmptyPartNum(splits);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.29,5,3
4872_23,23,26,"if (needRequestPartNum == 0) {
result.set(null);
return result;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,4,4,0,0,1,0.43,1,0
4872_24,24,24,result.set(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.48,3,1
4872_25,25,25,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.47,2,0
4872_28,28,28,ResponseCache cache = new MapResponseCache(needRequestPartNum);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.53,0,0
4872_29,29,29,int requestId = request.getRequestId();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.26,1,0
4872_30,30,30,"requestIdToResponseCache.put(requestId, cache);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,1,0.45,2,1
4872_31,31,31,"requestIdToResultMap.put(requestId, result);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,1,0.5,3,2
4872_32,32,32,"requests.put(requestId, request);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,4,0,0,0,0.26,4,3
4872_34,34,34,MatrixTransportClient matrixClient = PSAgentContext.get().getMatrixTransportClient();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.33,6,5
4872_35,35,40,"for (int i = 0; i < splits.length; i++) {
if (splits[i] != null && splits[i].size() > 0) {
sendIndexGetRowRequest(matrixClient, requestId, request.getMatrixId(),
request.getRowId(), parts[i].getPartitionId(), splits[i], request.getFunc());
}
}",0,0,1,0,0,0,0,0,0,2,2,6,0,1,0,1,4,4,0,0,1,0.41,7,5
4872_36,36,39,"if (splits[i] != null && splits[i].size() > 0) {
sendIndexGetRowRequest(matrixClient, requestId, request.getMatrixId(),
request.getRowId(), parts[i].getPartitionId(), splits[i], request.getFunc());
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,4,4,0,0,1,0.41,8,6
4872_37,37,38,"sendIndexGetRowRequest(matrixClient, requestId, request.getMatrixId(),
request.getRowId(), parts[i].getPartitionId(), splits[i], request.getFunc());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,1,0.4,9,7
4872_42,42,42,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.47,14,9
4871_1,1,1,private FutureResult<Vector> get(IndexGetRowRequest request) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.5,20,13
4871_2,2,3,"MatrixMeta matrixMeta = PSAgentContext.get().getMatrixMetaManager()
.getMatrixMeta(request.getMatrixId());",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,4,4,0,0,1,0.41,18,12
4871_5,5,5,PartitionKey[] parts = matrixMeta.getPartitionKeys();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,4,0,0,1,0.46,16,11
4871_7,7,7,FutureResult<Vector> result = new FutureResult<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.31,14,10
4871_8,8,8,KeyPart[] splits;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.34,13,9
4871_9,9,9,long startTs = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.25,12,8
4871_10,10,17,"if (request instanceof IntIndexGetRowRequest) {
splits = RouterUtils.split(matrixMeta, -1, ((IntIndexGetRowRequest) request).getKeys());
} else if (request instanceof LongIndexGetRowRequest) {
splits = RouterUtils.split(matrixMeta, -1, ((LongIndexGetRowRequest) request).getKeys());
} else {
throw new UnsupportedOperationException(
""Unsupport index request type "" + request.getClass().toString());
}",1,0,0,0,0,0,0,0,0,5,1,8,0,0,0,0,4,4,0,0,1,0.56,4,2
4871_11,11,11,"splits = RouterUtils.split(matrixMeta, -1, ((IntIndexGetRowRequest) request).getKeys());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.51,10,6
4871_12,12,12,} else if (request instanceof LongIndexGetRowRequest) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.49,9,5
4871_13,13,13,"splits = RouterUtils.split(matrixMeta, -1, ((LongIndexGetRowRequest) request).getKeys());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.5,8,4
4871_14,14,14,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.19,7,3
4871_15,15,16,"throw new UnsupportedOperationException(
""Unsupport index request type "" + request.getClass().toString());",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,4,4,0,0,1,0.53,5,2
4871_18,18,18,"LOG.info(""Get by indices split use time: "" + (System.currentTimeMillis() - startTs));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.29,3,1
4871_20,20,20,assert parts.length == splits.length;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.35,1,0
4871_22,22,22,int needRequestPartNum = noEmptyPartNum(splits);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,2,0.61,0,0
4871_23,23,26,"if (needRequestPartNum == 0) {
result.set(null);
return result;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,4,4,0,0,1,0.46,1,0
4871_24,24,24,result.set(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.3,2,1
4871_25,25,25,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.26,3,2
4871_28,28,28,ResponseCache cache = new MapResponseCache(needRequestPartNum);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.46,6,4
4871_29,29,29,int requestId = request.getRequestId();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.53,7,4
4871_30,30,30,"requestIdToResponseCache.put(requestId, cache);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,1,0.46,8,5
4871_31,31,31,"requestIdToResultMap.put(requestId, result);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,1,0.47,9,6
4871_32,32,32,"requests.put(requestId, request);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,4,0,0,1,0.59,10,7
4871_34,34,34,MatrixTransportClient matrixClient = PSAgentContext.get().getMatrixTransportClient();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.33,12,9
4871_35,35,40,"for (int i = 0; i < splits.length; i++) {
if (splits[i] != null && splits[i].size() > 0) {
sendIndexGetRowRequest(matrixClient, requestId, request.getMatrixId(),
request.getRowId(), parts[i].getPartitionId(), splits[i], request.getFunc());
}
}",0,0,1,0,0,0,0,0,0,2,2,6,0,1,0,1,4,4,0,0,2,0.57,13,9
4871_36,36,39,"if (splits[i] != null && splits[i].size() > 0) {
sendIndexGetRowRequest(matrixClient, requestId, request.getMatrixId(),
request.getRowId(), parts[i].getPartitionId(), splits[i], request.getFunc());
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,4,4,0,0,2,0.57,14,10
4871_37,37,38,"sendIndexGetRowRequest(matrixClient, requestId, request.getMatrixId(),
request.getRowId(), parts[i].getPartitionId(), splits[i], request.getFunc());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,2,0.57,15,11
4871_42,42,42,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.26,20,13
4870_1,1,1,private FutureResult<Vector> get(IndexGetRowRequest request) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.57,5,2
4870_2,2,3,"MatrixMeta matrixMeta = PSAgentContext.get().getMatrixMetaManager()
.getMatrixMeta(request.getMatrixId());",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,5,4,0,0,1,0.54,3,1
4870_5,5,5,PartitionKey[] parts = matrixMeta.getPartitionKeys();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,4,0,0,1,0.47,1,0
4870_7,7,7,FutureResult<Vector> result = new FutureResult<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,4,0,0,0,0.33,0,0
4870_8,8,8,KeyPart[] splits;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.54,1,0
4870_9,9,9,long startTs = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.31,2,1
4870_10,10,17,"if (request instanceof IntIndexGetRowRequest) {
splits = RouterUtils.split(matrixMeta, -1, ((IntIndexGetRowRequest) request).getKeys());
} else if (request instanceof LongIndexGetRowRequest) {
splits = RouterUtils.split(matrixMeta, -1, ((LongIndexGetRowRequest) request).getKeys());
} else {
throw new UnsupportedOperationException(
""Unsupport index request type "" + request.getClass().toString());
}",1,0,0,0,0,0,0,0,0,5,1,8,0,0,0,0,5,4,0,0,2,0.63,3,2
4870_11,11,11,"splits = RouterUtils.split(matrixMeta, -1, ((IntIndexGetRowRequest) request).getKeys());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.64,4,3
4870_12,12,12,} else if (request instanceof LongIndexGetRowRequest) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.57,5,4
4870_13,13,13,"splits = RouterUtils.split(matrixMeta, -1, ((LongIndexGetRowRequest) request).getKeys());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.63,6,5
4870_14,14,14,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.18,7,6
4870_15,15,16,"throw new UnsupportedOperationException(
""Unsupport index request type "" + request.getClass().toString());",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,5,4,0,0,1,0.53,8,7
4870_18,18,18,"LOG.info(""Get by indices split use time: "" + (System.currentTimeMillis() - startTs));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,4,0,0,1,0.43,11,9
4870_20,20,20,assert parts.length == splits.length;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,4,0,0,1,0.54,13,10
4870_22,22,22,int needRequestPartNum = noEmptyPartNum(splits);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,2,0.66,15,11
4870_23,23,26,"if (needRequestPartNum == 0) {
result.set(null);
return result;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,5,4,0,0,1,0.52,16,11
4870_24,24,24,result.set(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.25,17,12
4870_25,25,25,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.18,18,13
4870_28,28,28,ResponseCache cache = new MapResponseCache(needRequestPartNum);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,4,0,0,1,0.55,21,15
4870_29,29,29,int requestId = request.getRequestId();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.64,22,15
4870_30,30,30,"requestIdToResponseCache.put(requestId, cache);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,4,0,0,1,0.56,23,16
4870_31,31,31,"requestIdToResultMap.put(requestId, result);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,4,0,0,1,0.56,24,17
4870_32,32,32,"requests.put(requestId, request);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,5,4,0,0,1,0.68,25,18
4870_34,34,34,MatrixTransportClient matrixClient = PSAgentContext.get().getMatrixTransportClient();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,0,0.42,27,20
4870_35,35,40,"for (int i = 0; i < splits.length; i++) {
if (splits[i] != null && splits[i].size() > 0) {
sendIndexGetRowRequest(matrixClient, requestId, request.getMatrixId(),
request.getRowId(), parts[i].getPartitionId(), splits[i], request.getFunc());
}
}",0,0,1,0,0,0,0,0,0,2,2,6,0,1,0,1,5,4,0,0,3,0.7,28,20
4870_36,36,39,"if (splits[i] != null && splits[i].size() > 0) {
sendIndexGetRowRequest(matrixClient, requestId, request.getMatrixId(),
request.getRowId(), parts[i].getPartitionId(), splits[i], request.getFunc());
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,5,4,0,0,3,0.7,29,21
4870_37,37,38,"sendIndexGetRowRequest(matrixClient, requestId, request.getMatrixId(),
request.getRowId(), parts[i].getPartitionId(), splits[i], request.getFunc());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,0,0,3,0.69,30,22
4870_42,42,42,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,4,0,0,0,0.18,35,24
4869_1,1,2,"private void checkpoint(List<Integer> matrixIds, int checkpointId, boolean cloneFirst,
boolean sortFirst) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.37,26,14
4869_3,3,5,"if (matrixIds == null || matrixIds.isEmpty()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,4,0,0,0,0.33,23,12
4869_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.22,24,12
4869_7,7,7,List<PSMatrixSaveContext> saveContexts = new ArrayList<>(matrixIds.size());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,4,4,0,0,0,0.39,21,11
4869_8,8,8,List<Path> checkpointItemPaths = new ArrayList<>(matrixIds.size());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,4,4,0,0,2,0.67,20,10
4869_9,9,9,List<Path> tempPaths = new ArrayList<>(matrixIds.size());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,4,4,0,0,2,0.68,19,9
4869_11,11,24,"for (int matrixId : matrixIds) {
Path checkpointItemPath = genCheckpointPath(matrixId, checkpointId);
Path tempPath = genTmpCheckpointPath(checkpointItemPath);
checkpointItemPaths.add(checkpointItemPath);
tempPaths.add(tempPath);

MatrixMeta meta = context.getMatrixMetaManager().getMatrixMeta(matrixId);
saveContexts.add(
new PSMatrixSaveContext(matrixId,
new ArrayList<>(meta.getPartitionMetas().keySet()),
null, SnapshotFormat.class.getName(),
tempPath.toString(),
cloneFirst, sortFirst));
}",0,0,0,1,0,0,0,0,0,6,1,14,0,0,1,1,4,4,0,0,3,0.72,4,2
4869_12,12,12,"Path checkpointItemPath = genCheckpointPath(matrixId, checkpointId);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,2,0.68,16,7
4869_13,13,13,Path tempPath = genTmpCheckpointPath(checkpointItemPath);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,3,0.84,15,6
4869_14,14,14,checkpointItemPaths.add(checkpointItemPath);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,2,0.73,14,5
4869_15,15,15,tempPaths.add(tempPath);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,4,0,0,2,0.81,13,4
4869_17,17,17,MatrixMeta meta = context.getMatrixMetaManager().getMatrixMeta(matrixId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.36,11,3
4869_18,18,23,"saveContexts.add(
new PSMatrixSaveContext(matrixId,
new ArrayList<>(meta.getPartitionMetas().keySet()),
null, SnapshotFormat.class.getName(),
tempPath.toString(),
cloneFirst, sortFirst));",0,0,0,0,0,0,0,0,0,0,0,6,0,1,0,0,4,4,0,0,2,0.58,5,2
4869_26,26,26,context.getIOExecutors(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.29,2,1
4869_27,27,27,".save(new PSMatricesSaveContext(-1, -1, saveContexts), dumpParallel);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.35,1,0
4869_29,29,29,FileSystem fs = baseDirPath.getFileSystem(context.getConf());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,1,0.56,0,0
4869_30,30,33,"for (int i = 0; i < matrixIds.size(); i++) {
HdfsUtil.rename(tempPaths.get(i), checkpointItemPaths.get(i), fs);
clearOldCheckpoint(fs, genMatrixPath(matrixIds.get(0)));
}",0,0,1,0,0,0,0,0,0,2,1,4,0,1,0,0,4,4,0,0,4,0.74,1,0
4869_31,31,31,"HdfsUtil.rename(tempPaths.get(i), checkpointItemPaths.get(i), fs);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,4,0.82,2,1
4869_32,32,32,"clearOldCheckpoint(fs, genMatrixPath(matrixIds.get(0)));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,1,0.54,3,2
4868_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,1,0,0,0.35,0,0
4868_2,2,7,"if (stat instanceof LocatedFileStatus) {
return ((LocatedFileStatus) stat).getBlockLocations();
} else {
FileSystem fs = stat.getPath().getFileSystem(conf);
return fs.getFileBlockLocations(stat, 0, stat.getLen());
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,5,3,1,0,5,0.83,0,0
4868_3,3,3,return ((LocatedFileStatus) stat).getBlockLocations();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,4,0.78,1,0
4868_4,4,4,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.13,2,1
4868_5,5,5,FileSystem fs = stat.getPath().getFileSystem(conf);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,3,0.74,3,2
4868_6,6,6,"return fs.getFileBlockLocations(stat, 0, stat.getLen());",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,3,1,0,4,0.72,4,3
4867_1,1,2,"private void handleSplittableFiles(List<InputSplit> splits, List<FileInfo> fileInfos,
long maxSize)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,0,0,1,0.52,39,24
4867_3,3,3,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,4,0,0,0,0.2,38,23
4867_4,4,6,"if (fileInfos.isEmpty()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,4,0,0,1,0.43,35,21
4867_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.27,36,21
4867_8,8,8,long currentSplitLen = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,4,0,0,1,0.56,33,20
4867_9,9,9,long currentBlockOffset = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.5,32,19
4867_10,10,10,List<BlockInfo> splitBlocks = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.7,31,18
4867_11,11,11,int fileNum = fileInfos.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.33,30,17
4867_12,12,12,int blockNum;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.59,29,16
4867_13,13,40,"for (int fileIndex = 0; fileIndex < fileNum; fileIndex++) {
FileInfo fileInfo = fileInfos.get(fileIndex);

blockNum = fileInfo.blockLocations.length;
for (int blockIndex = 0; blockIndex < blockNum; ) {
BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];
if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}
}
}",0,0,1,0,0,0,0,0,0,15,3,28,0,1,0,1,5,4,0,0,2,0.67,1,0
4867_14,14,14,FileInfo fileInfo = fileInfos.get(fileIndex);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,0,0,0,0.26,27,14
4867_16,16,16,blockNum = fileInfo.blockLocations.length;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,5,4,0,0,1,0.53,25,13
4867_17,17,39,"for (int blockIndex = 0; blockIndex < blockNum; ) {
BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];
if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}
}",0,0,1,0,0,0,0,0,0,12,2,23,0,1,0,0,5,4,0,0,2,0.69,2,0
4867_18,18,18,BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.52,23,11
4867_19,19,38,"if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}",1,0,0,0,0,0,0,0,0,10,1,20,0,1,0,0,5,4,0,0,2,0.68,3,0
4867_20,20,22,"splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,5,4,0,0,2,0.67,19,9
4867_24,24,24,currentSplitLen += (blockLocation.getLength() - currentBlockOffset);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,0,0,2,0.67,17,8
4867_25,25,25,blockIndex++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,4,0,0,1,0.57,16,7
4867_27,27,27,currentBlockOffset = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,0,0,1,0.46,14,6
4867_28,28,28,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.27,13,5
4867_29,29,29,currentBlockOffset += maxSize - currentSplitLen;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,2,0.65,12,4
4867_30,30,32,"splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));",0,0,0,0,0,0,0,0,0,0,0,3,1,1,0,0,5,4,0,0,2,0.66,9,3
4867_33,33,33,splits.add(generateSplit(splitBlocks));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,5,4,0,0,2,0.8,8,2
4867_35,35,35,splitBlocks.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,4,0,0,2,0.76,6,1
4867_37,37,37,currentSplitLen = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,0,0,1,0.54,4,0
4867_42,42,44,"if (!splitBlocks.isEmpty()) {
splits.add(generateSplit(splitBlocks));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,5,4,0,0,3,0.93,0,0
4867_43,43,43,splits.add(generateSplit(splitBlocks));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.8,1,0
4866_1,1,2,"private void handleSplittableFiles(List<InputSplit> splits, List<FileInfo> fileInfos,
long maxSize)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,0,0,1,0.46,34,23
4866_3,3,3,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,0,0,0,0.31,33,22
4866_4,4,6,"if (fileInfos.isEmpty()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,2,0,0,0,0.27,30,20
4866_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.18,31,20
4866_8,8,8,long currentSplitLen = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,2,0,0,2,0.7,28,19
4866_9,9,9,long currentBlockOffset = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.48,27,18
4866_10,10,10,List<BlockInfo> splitBlocks = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.45,26,17
4866_11,11,11,int fileNum = fileInfos.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.37,25,16
4866_12,12,12,int blockNum;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.37,24,15
4866_13,13,40,"for (int fileIndex = 0; fileIndex < fileNum; fileIndex++) {
FileInfo fileInfo = fileInfos.get(fileIndex);

blockNum = fileInfo.blockLocations.length;
for (int blockIndex = 0; blockIndex < blockNum; ) {
BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];
if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}
}
}",0,0,1,0,0,0,0,0,0,15,3,28,0,1,0,1,4,2,0,0,4,0.71,0,0
4866_14,14,14,FileInfo fileInfo = fileInfos.get(fileIndex);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.3,22,13
4866_16,16,16,blockNum = fileInfo.blockLocations.length;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,2,0,0,1,0.46,20,12
4866_17,17,39,"for (int blockIndex = 0; blockIndex < blockNum; ) {
BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];
if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}
}",0,0,1,0,0,0,0,0,0,12,2,23,0,1,0,0,4,2,0,0,4,0.72,0,0
4866_18,18,18,BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.29,18,10
4866_19,19,38,"if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}",1,0,0,0,0,0,0,0,0,10,1,20,0,1,0,0,4,2,0,0,4,0.73,0,0
4866_20,20,22,"splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,4,2,0,0,3,0.58,14,8
4866_24,24,24,currentSplitLen += (blockLocation.getLength() - currentBlockOffset);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,3,0.7,12,7
4866_25,25,25,blockIndex++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.28,11,6
4866_27,27,27,currentBlockOffset = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,1,0.5,9,5
4866_28,28,28,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.25,8,4
4866_29,29,29,currentBlockOffset += maxSize - currentSplitLen;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,2,0.66,7,3
4866_30,30,32,"splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));",0,0,0,0,0,0,0,0,0,0,0,3,1,1,0,0,4,2,0,0,2,0.55,4,2
4866_33,33,33,splits.add(generateSplit(splitBlocks));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,2,0,0,1,0.56,3,1
4866_35,35,35,splitBlocks.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,2,0.7,1,0
4866_37,37,37,currentSplitLen = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,2,0.75,0,0
4866_42,42,44,"if (!splitBlocks.isEmpty()) {
splits.add(generateSplit(splitBlocks));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,4,2,0,0,1,0.53,5,1
4866_43,43,43,splits.add(generateSplit(splitBlocks));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.56,6,1
4865_1,1,2,"private void handleSplittableFiles(List<InputSplit> splits, List<FileInfo> fileInfos,
long maxSize)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,0,0,2,0.52,32,22
4865_3,3,3,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,0,0,0,0.25,31,21
4865_4,4,6,"if (fileInfos.isEmpty()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,3,0,0,0,0.22,28,19
4865_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.13,29,19
4865_8,8,8,long currentSplitLen = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,3,0,0,1,0.47,26,18
4865_9,9,9,long currentBlockOffset = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.48,25,17
4865_10,10,10,List<BlockInfo> splitBlocks = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,0,0,3,0.74,24,16
4865_11,11,11,int fileNum = fileInfos.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.34,23,15
4865_12,12,12,int blockNum;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.58,22,14
4865_13,13,40,"for (int fileIndex = 0; fileIndex < fileNum; fileIndex++) {
FileInfo fileInfo = fileInfos.get(fileIndex);

blockNum = fileInfo.blockLocations.length;
for (int blockIndex = 0; blockIndex < blockNum; ) {
BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];
if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}
}
}",0,0,1,0,0,0,0,0,0,15,3,28,0,1,0,1,5,3,0,0,3,0.64,0,0
4865_14,14,14,FileInfo fileInfo = fileInfos.get(fileIndex);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,3,0,0,0,0.29,20,12
4865_16,16,16,blockNum = fileInfo.blockLocations.length;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,5,3,0,0,1,0.52,18,11
4865_17,17,39,"for (int blockIndex = 0; blockIndex < blockNum; ) {
BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];
if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}
}",0,0,1,0,0,0,0,0,0,12,2,23,0,1,0,0,5,3,0,0,3,0.65,0,0
4865_18,18,18,BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.53,16,9
4865_19,19,38,"if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}",1,0,0,0,0,0,0,0,0,10,1,20,0,1,0,0,5,3,0,0,3,0.64,0,0
4865_20,20,22,"splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,5,3,0,0,2,0.53,12,7
4865_24,24,24,currentSplitLen += (blockLocation.getLength() - currentBlockOffset);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,0,0,2,0.56,10,6
4865_25,25,25,blockIndex++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,0,0,1,0.6,9,5
4865_27,27,27,currentBlockOffset = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,0,0,1,0.45,7,4
4865_28,28,28,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.25,6,3
4865_29,29,29,currentBlockOffset += maxSize - currentSplitLen;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.53,5,2
4865_30,30,32,"splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));",0,0,0,0,0,0,0,0,0,0,0,3,1,1,0,0,5,3,0,0,2,0.52,2,1
4865_33,33,33,splits.add(generateSplit(splitBlocks));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,5,3,0,0,2,0.66,1,0
4865_35,35,35,splitBlocks.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,3,0,0,3,0.86,0,0
4865_37,37,37,currentSplitLen = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,0,0,1,0.45,2,1
4865_42,42,44,"if (!splitBlocks.isEmpty()) {
splits.add(generateSplit(splitBlocks));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,5,3,0,0,2,0.67,7,2
4865_43,43,43,splits.add(generateSplit(splitBlocks));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,2,0.66,8,2
4864_1,1,2,"private void handleSplittableFiles(List<InputSplit> splits, List<FileInfo> fileInfos,
long maxSize)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,7,1,0,3,0.62,26,19
4864_3,3,3,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,10,7,1,0,0,0.32,25,18
4864_4,4,6,"if (fileInfos.isEmpty()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,10,7,1,0,0,0.32,22,16
4864_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,7,1,0,0,0.22,23,16
4864_8,8,8,long currentSplitLen = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,10,7,1,0,2,0.67,20,15
4864_9,9,9,long currentBlockOffset = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,7,1,0,2,0.57,19,14
4864_10,10,10,List<BlockInfo> splitBlocks = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,7,1,0,3,0.69,18,13
4864_11,11,11,int fileNum = fileInfos.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,7,1,0,1,0.5,17,12
4864_12,12,12,int blockNum;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,7,1,0,1,0.56,16,11
4864_13,13,40,"for (int fileIndex = 0; fileIndex < fileNum; fileIndex++) {
FileInfo fileInfo = fileInfos.get(fileIndex);

blockNum = fileInfo.blockLocations.length;
for (int blockIndex = 0; blockIndex < blockNum; ) {
BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];
if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}
}
}",0,0,1,0,0,0,0,0,0,15,3,28,0,1,0,1,10,7,1,0,8,0.82,0,0
4864_14,14,14,FileInfo fileInfo = fileInfos.get(fileIndex);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,10,7,1,0,0,0.35,14,9
4864_16,16,16,blockNum = fileInfo.blockLocations.length;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,10,7,1,0,2,0.6,12,8
4864_17,17,39,"for (int blockIndex = 0; blockIndex < blockNum; ) {
BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];
if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}
}",0,0,1,0,0,0,0,0,0,12,2,23,0,1,0,0,10,7,1,0,8,0.84,0,0
4864_18,18,18,BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,7,1,0,1,0.5,10,6
4864_19,19,38,"if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}",1,0,0,0,0,0,0,0,0,10,1,20,0,1,0,0,10,7,1,0,8,0.85,0,0
4864_20,20,22,"splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,10,7,1,0,5,0.72,6,4
4864_24,24,24,currentSplitLen += (blockLocation.getLength() - currentBlockOffset);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,10,7,1,0,4,0.75,4,3
4864_25,25,25,blockIndex++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,10,7,1,0,1,0.5,3,2
4864_27,27,27,currentBlockOffset = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,10,7,1,0,2,0.59,1,1
4864_28,28,28,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,0,0.24,0,0
4864_29,29,29,currentBlockOffset += maxSize - currentSplitLen;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,7,1,0,5,0.85,0,0
4864_30,30,32,"splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));",0,0,0,0,0,0,0,0,0,0,0,3,1,1,0,0,10,7,1,0,6,0.77,1,0
4864_33,33,33,splits.add(generateSplit(splitBlocks));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,10,7,1,0,3,0.77,4,2
4864_35,35,35,splitBlocks.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,10,7,1,0,2,0.65,6,3
4864_37,37,37,currentSplitLen = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,10,7,1,0,2,0.71,8,4
4864_42,42,44,"if (!splitBlocks.isEmpty()) {
splits.add(generateSplit(splitBlocks));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,10,7,1,0,3,0.75,13,5
4864_43,43,43,splits.add(generateSplit(splitBlocks));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,3,0.77,14,5
4863_1,1,2,"private void handleSplittableFiles(List<InputSplit> splits, List<FileInfo> fileInfos,
long maxSize)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,0,0,0,0.32,24,17
4863_3,3,3,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,0,0,0,0.28,23,16
4863_4,4,6,"if (fileInfos.isEmpty()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,2,0,0,0,0.19,20,14
4863_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.09,21,14
4863_8,8,8,long currentSplitLen = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,2,0,0,1,0.51,18,13
4863_9,9,9,long currentBlockOffset = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,0,0,3,0.78,17,12
4863_10,10,10,List<BlockInfo> splitBlocks = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.49,16,11
4863_11,11,11,int fileNum = fileInfos.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.33,15,10
4863_12,12,12,int blockNum;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.59,14,9
4863_13,13,40,"for (int fileIndex = 0; fileIndex < fileNum; fileIndex++) {
FileInfo fileInfo = fileInfos.get(fileIndex);

blockNum = fileInfo.blockLocations.length;
for (int blockIndex = 0; blockIndex < blockNum; ) {
BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];
if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}
}
}",0,0,1,0,0,0,0,0,0,15,3,28,0,1,0,1,4,2,0,0,4,0.77,0,0
4863_14,14,14,FileInfo fileInfo = fileInfos.get(fileIndex);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.25,12,7
4863_16,16,16,blockNum = fileInfo.blockLocations.length;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,2,0,0,1,0.51,10,6
4863_17,17,39,"for (int blockIndex = 0; blockIndex < blockNum; ) {
BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];
if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}
}",0,0,1,0,0,0,0,0,0,12,2,23,0,1,0,0,4,2,0,0,4,0.79,0,0
4863_18,18,18,BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.52,8,4
4863_19,19,38,"if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}",1,0,0,0,0,0,0,0,0,10,1,20,0,1,0,0,4,2,0,0,4,0.79,0,0
4863_20,20,22,"splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,4,2,0,0,3,0.68,4,2
4863_24,24,24,currentSplitLen += (blockLocation.getLength() - currentBlockOffset);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,3,0.74,2,1
4863_25,25,25,blockIndex++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,0,0,1,0.54,1,0
4863_27,27,27,currentBlockOffset = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,3,0.84,0,0
4863_28,28,28,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.18,1,0
4863_29,29,29,currentBlockOffset += maxSize - currentSplitLen;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,3,0.76,2,1
4863_30,30,32,"splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));",0,0,0,0,0,0,0,0,0,0,0,3,1,1,0,0,4,2,0,0,3,0.66,3,2
4863_33,33,33,splits.add(generateSplit(splitBlocks));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,2,0,0,1,0.43,6,4
4863_35,35,35,splitBlocks.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,2,0.72,8,5
4863_37,37,37,currentSplitLen = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,1,0.53,10,6
4863_42,42,44,"if (!splitBlocks.isEmpty()) {
splits.add(generateSplit(splitBlocks));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,4,2,0,0,1,0.45,15,7
4863_43,43,43,splits.add(generateSplit(splitBlocks));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.43,16,7
4862_1,1,2,"private void handleSplittableFiles(List<InputSplit> splits, List<FileInfo> fileInfos,
long maxSize)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,3,1,0,1,0.43,21,15
4862_3,3,3,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,3,1,0,0,0.29,20,14
4862_4,4,6,"if (fileInfos.isEmpty()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,7,3,1,0,0,0.27,17,12
4862_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.15,18,12
4862_8,8,8,long currentSplitLen = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,3,1,0,2,0.63,15,11
4862_9,9,9,long currentBlockOffset = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,3,1,0,2,0.59,14,10
4862_10,10,10,List<BlockInfo> splitBlocks = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,3,1,0,2,0.54,13,9
4862_11,11,11,int fileNum = fileInfos.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.37,12,8
4862_12,12,12,int blockNum;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,1,0,1,0.53,11,7
4862_13,13,40,"for (int fileIndex = 0; fileIndex < fileNum; fileIndex++) {
FileInfo fileInfo = fileInfos.get(fileIndex);

blockNum = fileInfo.blockLocations.length;
for (int blockIndex = 0; blockIndex < blockNum; ) {
BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];
if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}
}
}",0,0,1,0,0,0,0,0,0,15,3,28,0,1,0,1,7,3,1,0,4,0.67,0,0
4862_14,14,14,FileInfo fileInfo = fileInfos.get(fileIndex);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,3,1,0,0,0.33,9,5
4862_16,16,16,blockNum = fileInfo.blockLocations.length;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,7,3,1,0,2,0.6,7,4
4862_17,17,39,"for (int blockIndex = 0; blockIndex < blockNum; ) {
BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];
if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}
}",0,0,1,0,0,0,0,0,0,12,2,23,0,1,0,0,7,3,1,0,4,0.68,0,0
4862_18,18,18,BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,1,0,1,0.53,5,2
4862_19,19,38,"if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}",1,0,0,0,0,0,0,0,0,10,1,20,0,1,0,0,7,3,1,0,4,0.68,0,0
4862_20,20,22,"splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,7,3,1,0,4,0.63,1,0
4862_24,24,24,currentSplitLen += (blockLocation.getLength() - currentBlockOffset);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,3,1,0,4,0.73,0,0
4862_25,25,25,blockIndex++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,3,1,0,1,0.57,1,0
4862_27,27,27,currentBlockOffset = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,3,1,0,2,0.61,3,2
4862_28,28,28,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.23,4,2
4862_29,29,29,currentBlockOffset += maxSize - currentSplitLen;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,1,0,3,0.68,5,3
4862_30,30,32,"splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));",0,0,0,0,0,0,0,0,0,0,0,3,1,1,0,0,7,3,1,0,3,0.6,6,4
4862_33,33,33,splits.add(generateSplit(splitBlocks));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,7,3,1,0,2,0.63,9,6
4862_35,35,35,splitBlocks.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,3,1,0,2,0.63,11,7
4862_37,37,37,currentSplitLen = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,3,1,0,2,0.66,13,8
4862_42,42,44,"if (!splitBlocks.isEmpty()) {
splits.add(generateSplit(splitBlocks));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,7,3,1,0,2,0.63,18,9
4862_43,43,43,splits.add(generateSplit(splitBlocks));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,2,0.63,19,9
4861_1,1,2,"private void handleSplittableFiles(List<InputSplit> splits, List<FileInfo> fileInfos,
long maxSize)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,12,7,2,0,2,0.52,17,14
4861_3,3,3,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,12,7,2,0,0,0.17,16,13
4861_4,4,6,"if (fileInfos.isEmpty()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,12,7,2,0,0,0.26,13,11
4861_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,12,7,2,0,0,0.2,14,11
4861_8,8,8,long currentSplitLen = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,12,7,2,0,2,0.65,11,10
4861_9,9,9,long currentBlockOffset = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,12,7,2,0,2,0.69,10,9
4861_10,10,10,List<BlockInfo> splitBlocks = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,12,7,2,0,2,0.56,9,8
4861_11,11,11,int fileNum = fileInfos.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,12,7,2,0,1,0.52,8,7
4861_12,12,12,int blockNum;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,7,2,0,1,0.66,7,6
4861_13,13,40,"for (int fileIndex = 0; fileIndex < fileNum; fileIndex++) {
FileInfo fileInfo = fileInfos.get(fileIndex);

blockNum = fileInfo.blockLocations.length;
for (int blockIndex = 0; blockIndex < blockNum; ) {
BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];
if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}
}
}",0,0,1,0,0,0,0,0,0,15,3,28,0,1,0,1,12,7,2,0,4,0.72,0,0
4861_14,14,14,FileInfo fileInfo = fileInfos.get(fileIndex);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,12,7,2,0,0,0.3,5,4
4861_16,16,16,blockNum = fileInfo.blockLocations.length;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,12,7,2,0,1,0.56,3,3
4861_17,17,39,"for (int blockIndex = 0; blockIndex < blockNum; ) {
BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];
if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}
}",0,0,1,0,0,0,0,0,0,12,2,23,0,1,0,0,12,7,2,0,4,0.74,0,0
4861_18,18,18,BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,7,2,0,1,0.52,1,1
4861_19,19,38,"if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}",1,0,0,0,0,0,0,0,0,10,1,20,0,1,0,0,12,7,2,0,4,0.74,0,0
4861_20,20,22,"splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,12,7,2,0,3,0.62,0,0
4861_24,24,24,currentSplitLen += (blockLocation.getLength() - currentBlockOffset);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,12,7,2,0,3,0.71,4,1
4861_25,25,25,blockIndex++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,12,7,2,0,1,0.56,5,1
4861_27,27,27,currentBlockOffset = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,12,7,2,0,2,0.71,7,3
4861_28,28,28,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,7,2,0,0,0.28,8,3
4861_29,29,29,currentBlockOffset += maxSize - currentSplitLen;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,7,2,0,4,0.83,9,4
4861_30,30,32,"splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));",0,0,0,0,0,0,0,0,0,0,0,3,1,1,0,0,12,7,2,0,4,0.7,10,5
4861_33,33,33,splits.add(generateSplit(splitBlocks));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,12,7,2,0,2,0.63,13,7
4861_35,35,35,splitBlocks.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,12,7,2,0,2,0.63,15,8
4861_37,37,37,currentSplitLen = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,12,7,2,0,2,0.68,17,9
4861_42,42,44,"if (!splitBlocks.isEmpty()) {
splits.add(generateSplit(splitBlocks));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,12,7,2,0,2,0.63,22,10
4861_43,43,43,splits.add(generateSplit(splitBlocks));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,7,2,0,2,0.63,23,10
4860_1,1,2,"private void handleSplittableFiles(List<InputSplit> splits, List<FileInfo> fileInfos,
long maxSize)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,1,0.52,5,3
4860_3,3,3,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,2,0,0,0,0.15,4,2
4860_4,4,6,"if (fileInfos.isEmpty()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,2,2,0,0,0,0.18,1,0
4860_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.08,2,0
4860_8,8,8,long currentSplitLen = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,2,2,0,0,1,0.56,0,0
4860_9,9,9,long currentBlockOffset = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.59,1,0
4860_10,10,10,List<BlockInfo> splitBlocks = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,2,0.78,2,1
4860_11,11,11,int fileNum = fileInfos.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,3,2
4860_12,12,12,int blockNum;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.69,4,3
4860_13,13,40,"for (int fileIndex = 0; fileIndex < fileNum; fileIndex++) {
FileInfo fileInfo = fileInfos.get(fileIndex);

blockNum = fileInfo.blockLocations.length;
for (int blockIndex = 0; blockIndex < blockNum; ) {
BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];
if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}
}
}",0,0,1,0,0,0,0,0,0,15,3,28,0,1,0,1,2,2,0,0,2,0.74,5,4
4860_14,14,14,FileInfo fileInfo = fileInfos.get(fileIndex);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.26,6,5
4860_16,16,16,blockNum = fileInfo.blockLocations.length;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,2,0,0,1,0.62,8,7
4860_17,17,39,"for (int blockIndex = 0; blockIndex < blockNum; ) {
BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];
if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}
}",0,0,1,0,0,0,0,0,0,12,2,23,0,1,0,0,2,2,0,0,2,0.75,9,7
4860_18,18,18,BlockLocation blockLocation = fileInfo.blockLocations[blockIndex];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.62,10,8
4860_19,19,38,"if (currentSplitLen + blockLocation.getLength() - currentBlockOffset <= maxSize) {
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));

currentSplitLen += (blockLocation.getLength() - currentBlockOffset);
blockIndex++;

currentBlockOffset = 0;
} else {
currentBlockOffset += maxSize - currentSplitLen;
splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));
splits.add(generateSplit(splitBlocks));

splitBlocks.clear();

currentSplitLen = 0;
}",1,0,0,0,0,0,0,0,0,10,1,20,0,1,0,0,2,2,0,0,2,0.75,11,9
4860_20,20,22,"splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset,
blockLocation.getLength() - currentBlockOffset, blockLocation.getHosts(), null));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,2,2,0,0,2,0.73,12,10
4860_24,24,24,currentSplitLen += (blockLocation.getLength() - currentBlockOffset);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,2,0.76,16,12
4860_25,25,25,blockIndex++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,1,0.68,17,12
4860_27,27,27,currentBlockOffset = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,1,0.55,19,14
4860_28,28,28,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,20,14
4860_29,29,29,currentBlockOffset += maxSize - currentSplitLen;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,2,0.74,21,15
4860_30,30,32,"splitBlocks.add(new BlockInfo(fileInfo.stat.getPath(),
blockLocation.getOffset() + currentBlockOffset, maxSize - currentSplitLen,
blockLocation.getHosts(), null));",0,0,0,0,0,0,0,0,0,0,0,3,1,1,0,0,2,2,0,0,2,0.73,22,16
4860_33,33,33,splits.add(generateSplit(splitBlocks));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,2,2,0,0,2,0.88,25,18
4860_35,35,35,splitBlocks.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,2,0.87,27,19
4860_37,37,37,currentSplitLen = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,1,0.54,29,20
4860_42,42,44,"if (!splitBlocks.isEmpty()) {
splits.add(generateSplit(splitBlocks));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,2,2,0,0,2,0.87,34,21
4860_43,43,43,splits.add(generateSplit(splitBlocks));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,2,0.88,35,21
4859_1,1,2,"@Override
public List<InputSplit> getSplits(JobContext job) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.29,39,25
4859_3,3,3,Configuration conf = job.getConfiguration();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.23,38,24
4859_4,4,4,"int needSplitNum = conf.getInt(SPLIT_NUMBER, -1);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.22,37,23
4859_5,5,5,"long maxSize = conf.getLong(""mapreduce.input.fileinputformat.split.maxsize"", 1024 * 1024 * 1024);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.29,36,22
4859_6,6,6,"float compressFactor = conf.getFloat(COMPRESS_FACTOR, 1.0f);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.33,35,21
4859_8,8,8,List<FileStatus> stats = listStatus(job);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.47,33,20
4859_9,9,9,List<InputSplit> splits = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.26,32,19
4859_10,10,12,"if (stats.size() == 0) {
return splits;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,3,0,0,0,0.25,29,17
4859_11,11,11,return splits;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.27,30,17
4859_14,14,14,Collections.shuffle(stats);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.32,27,16
4859_16,16,16,long totalFileSize = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.54,25,15
4859_17,17,17,List<FileInfo> fileInfos = new ArrayList<>(stats.size());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.49,24,14
4859_18,18,18,List<FileInfo> unSplittableFiles = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.53,23,13
4859_19,19,27,"for (FileStatus status : stats) {
FileInfo fileInfo = new FileInfo(status, getBlocks(status, conf));
if (isSplitable(job, status.getPath())) {
fileInfos.add(fileInfo);
} else {
unSplittableFiles.add(fileInfo);
}
totalFileSize += status.getLen();
}",0,0,0,1,0,0,0,0,0,6,2,9,0,1,0,1,3,3,0,0,1,0.54,14,6
4859_20,20,20,"FileInfo fileInfo = new FileInfo(status, getBlocks(status, conf));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.55,21,11
4859_21,21,25,"if (isSplitable(job, status.getPath())) {
fileInfos.add(fileInfo);
} else {
unSplittableFiles.add(fileInfo);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,3,3,0,0,1,0.53,16,7
4859_22,22,22,fileInfos.add(fileInfo);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.52,19,9
4859_23,23,23,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.2,18,8
4859_24,24,24,unSplittableFiles.add(fileInfo);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.58,17,7
4859_26,26,26,totalFileSize += status.getLen();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.45,15,6
4859_29,29,31,"if(needSplitNum <= 0) {
needSplitNum = (int)(totalFileSize / maxSize);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,1,0.43,10,4
4859_30,30,30,needSplitNum = (int)(totalFileSize / maxSize);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.44,11,4
4859_33,33,33,"maxSize = adjustMaxSize(totalFileSize, needSplitNum);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.42,8,3
4859_36,36,38,"if (fileInfos.isEmpty()) {
compressFactor = 1.0f;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,1,0.46,3,1
4859_37,37,37,compressFactor = 1.0f;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.31,4,1
4859_40,40,40,"handleSplittableFiles(splits, fileInfos, maxSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,2,0.76,1,0
4859_42,42,42,"handleUnsplittableFiles(splits, unSplittableFiles, maxSize, compressFactor);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,3,0.75,0,0
4859_44,44,44,return splits;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.27,2,1
4858_1,1,2,"@Override
public List<InputSplit> getSplits(JobContext job) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.29,37,24
4858_3,3,3,Configuration conf = job.getConfiguration();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.23,36,23
4858_4,4,4,"int needSplitNum = conf.getInt(SPLIT_NUMBER, -1);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.22,35,22
4858_5,5,5,"long maxSize = conf.getLong(""mapreduce.input.fileinputformat.split.maxsize"", 1024 * 1024 * 1024);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.29,34,21
4858_6,6,6,"float compressFactor = conf.getFloat(COMPRESS_FACTOR, 1.0f);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.33,33,20
4858_8,8,8,List<FileStatus> stats = listStatus(job);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.47,31,19
4858_9,9,9,List<InputSplit> splits = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.26,30,18
4858_10,10,12,"if (stats.size() == 0) {
return splits;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,3,0,0,0,0.25,27,16
4858_11,11,11,return splits;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.27,28,16
4858_14,14,14,Collections.shuffle(stats);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.32,25,15
4858_16,16,16,long totalFileSize = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.54,23,14
4858_17,17,17,List<FileInfo> fileInfos = new ArrayList<>(stats.size());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.49,22,13
4858_18,18,18,List<FileInfo> unSplittableFiles = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,2,0.53,21,12
4858_19,19,27,"for (FileStatus status : stats) {
FileInfo fileInfo = new FileInfo(status, getBlocks(status, conf));
if (isSplitable(job, status.getPath())) {
fileInfos.add(fileInfo);
} else {
unSplittableFiles.add(fileInfo);
}
totalFileSize += status.getLen();
}",0,0,0,1,0,0,0,0,0,6,2,9,0,1,0,1,3,3,0,0,2,0.54,12,5
4858_20,20,20,"FileInfo fileInfo = new FileInfo(status, getBlocks(status, conf));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.55,19,10
4858_21,21,25,"if (isSplitable(job, status.getPath())) {
fileInfos.add(fileInfo);
} else {
unSplittableFiles.add(fileInfo);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,3,3,0,0,2,0.53,14,6
4858_22,22,22,fileInfos.add(fileInfo);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.52,17,8
4858_23,23,23,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.2,16,7
4858_24,24,24,unSplittableFiles.add(fileInfo);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.58,15,6
4858_26,26,26,totalFileSize += status.getLen();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.45,13,5
4858_29,29,31,"if(needSplitNum <= 0) {
needSplitNum = (int)(totalFileSize / maxSize);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,1,0.43,8,3
4858_30,30,30,needSplitNum = (int)(totalFileSize / maxSize);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.44,9,3
4858_33,33,33,"maxSize = adjustMaxSize(totalFileSize, needSplitNum);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.42,6,2
4858_36,36,38,"if (fileInfos.isEmpty()) {
compressFactor = 1.0f;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,1,0.46,1,0
4858_37,37,37,compressFactor = 1.0f;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.31,2,0
4858_40,40,40,"handleSplittableFiles(splits, fileInfos, maxSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,3,0.76,0,0
4858_42,42,42,"handleUnsplittableFiles(splits, unSplittableFiles, maxSize, compressFactor);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,3,0.75,2,1
4858_44,44,44,return splits;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.27,4,2
4857_1,1,2,"@Override
public List<InputSplit> getSplits(JobContext job) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,1,0,1,0.39,30,21
4857_3,3,3,Configuration conf = job.getConfiguration();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.21,29,20
4857_4,4,4,"int needSplitNum = conf.getInt(SPLIT_NUMBER, -1);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.51,28,19
4857_5,5,5,"long maxSize = conf.getLong(""mapreduce.input.fileinputformat.split.maxsize"", 1024 * 1024 * 1024);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,3,0.66,27,18
4857_6,6,6,"float compressFactor = conf.getFloat(COMPRESS_FACTOR, 1.0f);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,6,4,1,0,0,0.53,26,17
4857_8,8,8,List<FileStatus> stats = listStatus(job);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,4,1,0,0,0.28,24,16
4857_9,9,9,List<InputSplit> splits = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.47,23,15
4857_10,10,12,"if (stats.size() == 0) {
return splits;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,6,4,1,0,2,0.62,20,13
4857_11,11,11,return splits;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.54,21,13
4857_14,14,14,Collections.shuffle(stats);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,1,0,0,0.39,18,12
4857_16,16,16,long totalFileSize = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,4,1,0,1,0.54,16,11
4857_17,17,17,List<FileInfo> fileInfos = new ArrayList<>(stats.size());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.43,15,10
4857_18,18,18,List<FileInfo> unSplittableFiles = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.31,14,9
4857_19,19,27,"for (FileStatus status : stats) {
FileInfo fileInfo = new FileInfo(status, getBlocks(status, conf));
if (isSplitable(job, status.getPath())) {
fileInfos.add(fileInfo);
} else {
unSplittableFiles.add(fileInfo);
}
totalFileSize += status.getLen();
}",0,0,0,1,0,0,0,0,0,6,2,9,0,1,0,1,6,4,1,0,1,0.42,5,2
4857_20,20,20,"FileInfo fileInfo = new FileInfo(status, getBlocks(status, conf));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.28,12,7
4857_21,21,25,"if (isSplitable(job, status.getPath())) {
fileInfos.add(fileInfo);
} else {
unSplittableFiles.add(fileInfo);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,6,4,1,0,0,0.3,7,3
4857_22,22,22,fileInfos.add(fileInfo);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.28,10,5
4857_23,23,23,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.26,9,4
4857_24,24,24,unSplittableFiles.add(fileInfo);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.27,8,3
4857_26,26,26,totalFileSize += status.getLen();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.49,6,2
4857_29,29,31,"if(needSplitNum <= 0) {
needSplitNum = (int)(totalFileSize / maxSize);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,4,1,0,3,0.67,1,0
4857_30,30,30,needSplitNum = (int)(totalFileSize / maxSize);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,3,0.69,2,0
4857_33,33,33,"maxSize = adjustMaxSize(totalFileSize, needSplitNum);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,1,0,4,0.8,0,0
4857_36,36,38,"if (fileInfos.isEmpty()) {
compressFactor = 1.0f;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,4,1,0,0,0.49,3,1
4857_37,37,37,compressFactor = 1.0f;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.55,4,1
4857_40,40,40,"handleSplittableFiles(splits, fileInfos, maxSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,1,0,3,0.63,7,3
4857_42,42,42,"handleUnsplittableFiles(splits, unSplittableFiles, maxSize, compressFactor);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,1,0,3,0.67,9,4
4857_44,44,44,return splits;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,4,1,0,1,0.54,11,5
4856_1,1,2,"@Override
public List<InputSplit> getSplits(JobContext job) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,1,0.44,13,9
4856_3,3,3,Configuration conf = job.getConfiguration();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.44,12,8
4856_4,4,4,"int needSplitNum = conf.getInt(SPLIT_NUMBER, -1);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.39,11,7
4856_5,5,5,"long maxSize = conf.getLong(""mapreduce.input.fileinputformat.split.maxsize"", 1024 * 1024 * 1024);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.45,10,6
4856_6,6,6,"float compressFactor = conf.getFloat(COMPRESS_FACTOR, 1.0f);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,3,2,1,0,1,0.53,9,5
4856_8,8,8,List<FileStatus> stats = listStatus(job);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,1,0,1,0.46,7,4
4856_9,9,9,List<InputSplit> splits = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.28,6,3
4856_10,10,12,"if (stats.size() == 0) {
return splits;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,2,1,0,0,0.23,3,1
4856_11,11,11,return splits;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.23,4,1
4856_14,14,14,Collections.shuffle(stats);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,1,0,0,0.3,1,0
4856_16,16,16,long totalFileSize = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,1,0,1,0.48,0,0
4856_17,17,17,List<FileInfo> fileInfos = new ArrayList<>(stats.size());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.48,1,0
4856_18,18,18,List<FileInfo> unSplittableFiles = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.5,2,1
4856_19,19,27,"for (FileStatus status : stats) {
FileInfo fileInfo = new FileInfo(status, getBlocks(status, conf));
if (isSplitable(job, status.getPath())) {
fileInfos.add(fileInfo);
} else {
unSplittableFiles.add(fileInfo);
}
totalFileSize += status.getLen();
}",0,0,0,1,0,0,0,0,0,6,2,9,0,1,0,1,3,2,1,0,3,0.75,3,2
4856_20,20,20,"FileInfo fileInfo = new FileInfo(status, getBlocks(status, conf));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,3,0.79,4,3
4856_21,21,25,"if (isSplitable(job, status.getPath())) {
fileInfos.add(fileInfo);
} else {
unSplittableFiles.add(fileInfo);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,3,2,1,0,2,0.62,5,4
4856_22,22,22,fileInfos.add(fileInfo);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.52,6,5
4856_23,23,23,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.11,7,6
4856_24,24,24,unSplittableFiles.add(fileInfo);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.52,8,7
4856_26,26,26,totalFileSize += status.getLen();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,2,0.61,10,9
4856_29,29,31,"if(needSplitNum <= 0) {
needSplitNum = (int)(totalFileSize / maxSize);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,1,0,1,0.36,13,10
4856_30,30,30,needSplitNum = (int)(totalFileSize / maxSize);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.38,14,10
4856_33,33,33,"maxSize = adjustMaxSize(totalFileSize, needSplitNum);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,1,0,1,0.36,17,12
4856_36,36,38,"if (fileInfos.isEmpty()) {
compressFactor = 1.0f;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,1,0,1,0.45,20,13
4856_37,37,37,compressFactor = 1.0f;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.35,21,13
4856_40,40,40,"handleSplittableFiles(splits, fileInfos, maxSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,1,0,1,0.51,24,15
4856_42,42,42,"handleUnsplittableFiles(splits, unSplittableFiles, maxSize, compressFactor);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,1,0,1,0.51,26,16
4856_44,44,44,return splits;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,2,1,0,0,0.23,28,17
4855_1,1,2,"@Override
public List<InputSplit> getSplits(JobContext job) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.28,11,8
4855_3,3,3,Configuration conf = job.getConfiguration();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.11,10,7
4855_4,4,4,"int needSplitNum = conf.getInt(SPLIT_NUMBER, -1);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.18,9,6
4855_5,5,5,"long maxSize = conf.getLong(""mapreduce.input.fileinputformat.split.maxsize"", 1024 * 1024 * 1024);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.25,8,5
4855_6,6,6,"float compressFactor = conf.getFloat(COMPRESS_FACTOR, 1.0f);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.39,7,4
4855_8,8,8,List<FileStatus> stats = listStatus(job);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,2,2,0,0,1,0.64,5,3
4855_9,9,9,List<InputSplit> splits = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.24,4,2
4855_10,10,12,"if (stats.size() == 0) {
return splits;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,2,2,0,0,0,0.25,1,0
4855_11,11,11,return splits;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,2,0
4855_14,14,14,Collections.shuffle(stats);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,1,0.35,0,0
4855_16,16,16,long totalFileSize = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,2,2,0,0,1,0.68,2,1
4855_17,17,17,List<FileInfo> fileInfos = new ArrayList<>(stats.size());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.68,3,1
4855_18,18,18,List<FileInfo> unSplittableFiles = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.7,4,2
4855_19,19,27,"for (FileStatus status : stats) {
FileInfo fileInfo = new FileInfo(status, getBlocks(status, conf));
if (isSplitable(job, status.getPath())) {
fileInfos.add(fileInfo);
} else {
unSplittableFiles.add(fileInfo);
}
totalFileSize += status.getLen();
}",0,0,0,1,0,0,0,0,0,6,2,9,0,1,0,1,2,2,0,0,1,0.68,5,3
4855_20,20,20,"FileInfo fileInfo = new FileInfo(status, getBlocks(status, conf));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.68,6,4
4855_21,21,25,"if (isSplitable(job, status.getPath())) {
fileInfos.add(fileInfo);
} else {
unSplittableFiles.add(fileInfo);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,2,2,0,0,1,0.7,7,5
4855_22,22,22,fileInfos.add(fileInfo);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.75,8,6
4855_23,23,23,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.12,9,7
4855_24,24,24,unSplittableFiles.add(fileInfo);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.75,10,8
4855_26,26,26,totalFileSize += status.getLen();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.65,12,10
4855_29,29,31,"if(needSplitNum <= 0) {
needSplitNum = (int)(totalFileSize / maxSize);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,1,0.58,15,11
4855_30,30,30,needSplitNum = (int)(totalFileSize / maxSize);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.6,16,11
4855_33,33,33,"maxSize = adjustMaxSize(totalFileSize, needSplitNum);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,1,0.58,19,13
4855_36,36,38,"if (fileInfos.isEmpty()) {
compressFactor = 1.0f;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,1,0.65,22,14
4855_37,37,37,compressFactor = 1.0f;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.39,23,14
4855_40,40,40,"handleSplittableFiles(splits, fileInfos, maxSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,1,0.68,26,16
4855_42,42,42,"handleUnsplittableFiles(splits, unSplittableFiles, maxSize, compressFactor);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,1,0.68,28,17
4855_44,44,44,return splits;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.25,30,18
4854_1,1,2,"@Override
public List<InputSplit> getSplits(JobContext job) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,1,0.43,5,4
4854_3,3,3,Configuration conf = job.getConfiguration();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.24,4,3
4854_4,4,4,"int needSplitNum = conf.getInt(SPLIT_NUMBER, -1);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.25,3,2
4854_5,5,5,"long maxSize = conf.getLong(""mapreduce.input.fileinputformat.split.maxsize"", 1024 * 1024 * 1024);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.42,2,1
4854_6,6,6,"float compressFactor = conf.getFloat(COMPRESS_FACTOR, 1.0f);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,3,2,1,0,0,0.36,1,0
4854_8,8,8,List<FileStatus> stats = listStatus(job);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,1,0,1,0.4,0,0
4854_9,9,9,List<InputSplit> splits = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.43,1,0
4854_10,10,12,"if (stats.size() == 0) {
return splits;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,2,1,0,0,0.27,2,1
4854_11,11,11,return splits;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.25,3,2
4854_14,14,14,Collections.shuffle(stats);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,1,0,0,0.29,6,4
4854_16,16,16,long totalFileSize = 0L;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,1,0,1,0.47,8,5
4854_17,17,17,List<FileInfo> fileInfos = new ArrayList<>(stats.size());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.44,9,5
4854_18,18,18,List<FileInfo> unSplittableFiles = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.43,10,6
4854_19,19,27,"for (FileStatus status : stats) {
FileInfo fileInfo = new FileInfo(status, getBlocks(status, conf));
if (isSplitable(job, status.getPath())) {
fileInfos.add(fileInfo);
} else {
unSplittableFiles.add(fileInfo);
}
totalFileSize += status.getLen();
}",0,0,0,1,0,0,0,0,0,6,2,9,0,1,0,1,3,2,1,0,1,0.48,11,7
4854_20,20,20,"FileInfo fileInfo = new FileInfo(status, getBlocks(status, conf));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.46,12,8
4854_21,21,25,"if (isSplitable(job, status.getPath())) {
fileInfos.add(fileInfo);
} else {
unSplittableFiles.add(fileInfo);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,3,2,1,0,1,0.46,13,9
4854_22,22,22,fileInfos.add(fileInfo);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.5,14,10
4854_23,23,23,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.16,15,11
4854_24,24,24,unSplittableFiles.add(fileInfo);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.5,16,12
4854_26,26,26,totalFileSize += status.getLen();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.46,18,14
4854_29,29,31,"if(needSplitNum <= 0) {
needSplitNum = (int)(totalFileSize / maxSize);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,1,0,1,0.39,21,15
4854_30,30,30,needSplitNum = (int)(totalFileSize / maxSize);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.41,22,15
4854_33,33,33,"maxSize = adjustMaxSize(totalFileSize, needSplitNum);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,1,0,1,0.4,25,17
4854_36,36,38,"if (fileInfos.isEmpty()) {
compressFactor = 1.0f;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,1,0,1,0.47,28,18
4854_37,37,37,compressFactor = 1.0f;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.37,29,18
4854_40,40,40,"handleSplittableFiles(splits, fileInfos, maxSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,1,0,1,0.47,32,20
4854_42,42,42,"handleUnsplittableFiles(splits, unSplittableFiles, maxSize, compressFactor);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,1,0,1,0.49,34,21
4854_44,44,44,return splits;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,2,1,0,0,0.25,36,22
4820_1,1,1,throws SQLException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,1,1,0,0,0.33,8,5
4820_2,2,4,"if (explicitCommit) {
connection.commit();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,1,1,0,0,0.56,5,3
4820_3,3,3,connection.commit();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.55,6,3
4820_6,6,14,"try {
runnable.run();
}
catch (Exception e) {
if (explicitCommit) {
connection.rollback();
}
throw e;
}",0,0,0,0,1,0,0,0,0,5,2,9,0,0,1,0,3,1,1,0,1,0.49,0,0
4820_7,7,7,runnable.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.26,2,1
4820_9,9,9,catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.31,0,0
4820_10,10,12,"if (explicitCommit) {
connection.rollback();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,1,1,0,1,0.61,0,0
4820_11,11,11,connection.rollback();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.6,1,0
4820_13,13,13,throw e;,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,1,1,0,0,0.28,3,2
4819_1,1,1,throws SQLException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,1,1,0,0,0.33,0,0
4819_2,2,4,"if (explicitCommit) {
connection.commit();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,1,1,0,1,0.6,0,0
4819_3,3,3,connection.commit();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.57,1,0
4819_6,6,14,"try {
runnable.run();
}
catch (Exception e) {
if (explicitCommit) {
connection.rollback();
}
throw e;
}",0,0,0,0,1,0,0,0,0,5,2,9,0,0,1,0,3,1,1,0,1,0.48,4,2
4819_7,7,7,runnable.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.24,5,2
4819_9,9,9,catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.32,7,4
4819_10,10,12,"if (explicitCommit) {
connection.rollback();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,1,1,0,1,0.58,8,4
4819_11,11,11,connection.rollback();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.51,9,5
4819_13,13,13,throw e;,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,1,1,0,0,0.29,11,7
4818_1,1,1,  private void truncate(Table table) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.4,7,4
4818_2,2,2,"log.debug(""Clearing table ["" + table.getName() + ""]"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.38,6,3
4818_4,4,11,"try {
runRecoverably(() ->
sqlExecutor.execute(sqlDialect.truncateTableStatements(table), connection)
);
} catch (SQLException | RuntimeSqlException e) {
log.debug(""Failed to truncate table, attempting a delete"", e);
sqlExecutor.execute(sqlDialect.deleteAllFromTableStatements(table), connection);
}",0,0,0,0,1,0,0,0,0,4,1,8,0,0,1,0,4,4,0,0,3,0.65,0,0
4818_5,5,6,"runRecoverably(() ->
sqlExecutor.execute(sqlDialect.truncateTableStatements(table), connection)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.38,2,1
4818_8,8,8,} catch (SQLException | RuntimeSqlException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.49,0,0
4818_9,9,9,"log.debug(""Failed to truncate table, attempting a delete"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.65,0,0
4818_10,10,10,"sqlExecutor.execute(sqlDialect.deleteAllFromTableStatements(table), connection);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.46,1,0
4817_1,1,1,  private void truncate(Table table) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.5,2,1
4817_2,2,2,"log.debug(""Clearing table ["" + table.getName() + ""]"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.34,1,0
4817_4,4,11,"try {
runRecoverably(() ->
sqlExecutor.execute(sqlDialect.truncateTableStatements(table), connection)
);
} catch (SQLException | RuntimeSqlException e) {
log.debug(""Failed to truncate table, attempting a delete"", e);
sqlExecutor.execute(sqlDialect.deleteAllFromTableStatements(table), connection);
}",0,0,0,0,1,0,0,0,0,4,1,8,0,0,1,0,3,3,0,0,2,0.56,0,0
4817_5,5,6,"runRecoverably(() ->
sqlExecutor.execute(sqlDialect.truncateTableStatements(table), connection)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,1,0.46,1,0
4817_8,8,8,} catch (SQLException | RuntimeSqlException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.45,4,2
4817_9,9,9,"log.debug(""Failed to truncate table, attempting a delete"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.5,5,2
4817_10,10,10,"sqlExecutor.execute(sqlDialect.deleteAllFromTableStatements(table), connection);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.29,6,3
4816_1,1,2,"  @Override
protected String escapeSql(String literalValue) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,1,0.55,1,1
4816_3,3,3,String escaped = super.escapeSql(literalValue);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,1,0,1,0.61,0,0
4816_4,4,4,"return StringUtils.replace(escaped, ""\\'"", ""'||TRIM('\\ ')||''"");",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,5,1,0,1,0.59,0,0
4815_1,1,2,"  @Override
public Collection<String> renameIndexStatements(Table table, final String fromIndexName, final String toIndexName) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,11,5,1,0,1,0.45,12,7
4815_3,3,3,"Index newIndex, existingIndex;",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,11,5,1,0,2,0.64,11,6
4815_5,5,23,"try {
newIndex = Iterables.find(table.indexes(), new Predicate<Index>() {
@Override public boolean apply(Index input) {
return input.getName().equals(toIndexName);
}
});

existingIndex = newIndex.isUnique() ? index(fromIndexName).columns(newIndex.columnNames()).unique() :
index(fromIndexName).columns(newIndex.columnNames());
} catch (NoSuchElementException nsee) {
existingIndex = Iterables.find(table.indexes(), new Predicate<Index>() {
@Override public boolean apply(Index input) {
return input.getName().equals(fromIndexName);
}
});

newIndex = existingIndex.isUnique() ? index(toIndexName).columns(existingIndex.columnNames()).unique() :
index(toIndexName).columns(existingIndex.columnNames());
}",0,0,0,0,1,0,0,0,0,9,3,19,0,0,1,1,11,5,1,0,3,0.6,0,0
4815_6,6,6,"newIndex = Iterables.find(table.indexes(), new Predicate<Index>() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,1,0,2,0.61,8,4
4815_7,7,7,@Override public boolean apply(Index input) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,1,0,1,0.39,7,3
4815_8,8,8,return input.getName().equals(toIndexName);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,5,1,0,1,0.39,6,2
4815_12,12,13,"existingIndex = newIndex.isUnique() ? index(fromIndexName).columns(newIndex.columnNames()).unique() :
index(fromIndexName).columns(newIndex.columnNames());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,11,5,1,0,2,0.6,1,1
4815_14,14,14,} catch (NoSuchElementException nsee) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,1,0,0,0.38,0,0
4815_15,15,15,"existingIndex = Iterables.find(table.indexes(), new Predicate<Index>() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,1,0,2,0.57,0,0
4815_16,16,16,@Override public boolean apply(Index input) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,1,0,1,0.39,1,0
4815_17,17,17,return input.getName().equals(fromIndexName);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,5,1,0,1,0.39,2,1
4815_21,21,22,"newIndex = existingIndex.isUnique() ? index(toIndexName).columns(existingIndex.columnNames()).unique() :
index(toIndexName).columns(existingIndex.columnNames());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,11,5,1,0,2,0.56,6,3
4815_25,25,28,"return ImmutableList.<String>builder()
.addAll(indexDropStatements(table, existingIndex))
.addAll(indexDeploymentStatements(table, newIndex))
.build();",0,0,0,0,0,0,1,0,0,0,0,4,0,0,1,0,11,5,1,0,2,0.51,10,4
4814_1,1,2,"  @Override
public Collection<String> alterTableChangeColumnStatements(Table table, Column oldColumn, Column newColumn) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.37,35,19
4814_3,3,3,List<String> result = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.16,34,18
4814_4,4,4,"List<Index> indexesToRebuild = indexesToDropWhenModifyingColumn(table, oldColumn);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,1,0.68,33,17
4814_6,6,8,"for(Index index : indexesToRebuild) {
result.addAll(indexDropStatements(table, index));
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,1,0.67,29,15
4814_7,7,7,"result.addAll(indexDropStatements(table, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.32,30,15
4814_10,10,12,"if (oldColumn.isPrimaryKey()) {
result.add(dropPrimaryKeyConstraintStatement(table));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,0,0.36,25,13
4814_11,11,11,result.add(dropPrimaryKeyConstraintStatement(table));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.35,26,13
4814_14,14,19,"if (!newColumn.getName().equals(oldColumn.getName())) {
result.add(""ALTER TABLE "" + qualifiedTableName(table)
+ "" RENAME COLUMN "" + oldColumn.getName()
+ "" TO "" + newColumn.getName()
);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,0,1,1,2,2,0,0,0,0.44,18,9
4814_15,15,15,"result.add(""ALTER TABLE "" + qualifiedTableName(table)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.45,22,11
4814_16,16,16,"+ "" RENAME COLUMN "" + oldColumn.getName()",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0.38,21,10
4814_17,17,17,"+ "" TO "" + newColumn.getName()",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0.31,20,9
4814_21,21,29,"if (oldColumn.getType() != newColumn.getType()
||oldColumn.getScale() != newColumn.getScale()
||oldColumn.getWidth() != newColumn.getWidth()
) {
result.add(
""ALTER TABLE "" + qualifiedTableName(table) + "" ALTER COLUMN "" + newColumn.getName()
+ "" TYPE "" + sqlRepresentationOfColumnType(newColumn, false, false, true)
);
}",1,0,0,0,0,0,0,0,0,4,1,9,0,0,1,1,2,2,0,0,0,0.46,8,4
4814_22,22,22,||oldColumn.getScale() != newColumn.getScale(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.34,15,7
4814_23,23,23,||oldColumn.getWidth() != newColumn.getWidth(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.35,14,6
4814_25,25,26,"result.add(
""ALTER TABLE "" + qualifiedTableName(table) + "" ALTER COLUMN "" + newColumn.getName()",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.45,11,5
4814_27,27,27,"+ "" TYPE "" + sqlRepresentationOfColumnType(newColumn, false, false, true)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.41,10,4
4814_31,31,31,"result.addAll(changeColumnNullability(table, oldColumn, newColumn));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.43,6,3
4814_33,33,36,"if (oldColumn.isAutoNumbered() != newColumn.isAutoNumbered()) {
result.addAll(alterTableDropColumnStatements(table, oldColumn));
result.addAll(alterTableAddColumnStatements(table, newColumn));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,2,2,0,0,0,0.41,1,0
4814_34,34,34,"result.addAll(alterTableDropColumnStatements(table, oldColumn));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.38,3,1
4814_35,35,35,"result.addAll(alterTableAddColumnStatements(table, newColumn));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.37,2,0
4814_38,38,38,List<Column> primaryKeys = primaryKeysForTable(table);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.36,0,0
4814_39,39,41,"if ((newColumn.isPrimaryKey() || oldColumn.isPrimaryKey()) && !primaryKeys.isEmpty()) {
result.add(addPrimaryKeyConstraintStatement(table, namesOfColumns(primaryKeys)));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,2,2,0,0,0,0.36,1,0
4814_40,40,40,"result.add(addPrimaryKeyConstraintStatement(table, namesOfColumns(primaryKeys)));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.35,2,1
4814_43,43,45,"for(Index index : indexesToRebuild) {
result.addAll(indexDeploymentStatements(table, index));
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,1,0.68,5,3
4814_44,44,44,"result.addAll(indexDeploymentStatements(table, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.38,6,3
4814_47,47,47,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.25,9,5
4813_1,1,2,"@Override
public Collection<String> internalTableDeploymentStatements(Table table) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,3,0.74,2,1
4813_3,3,3,List<String> statements = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.51,1,0
4813_5,5,5,StringBuilder createTableStatement = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,3,0.71,0,0
4813_6,6,6,"createTableStatement.append(""CREATE "");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,3,0.85,1,0
4813_8,8,11,"if (table.isTemporary()) {
createTableStatement.append(""TEMPORARY "");
TEMPORARY_TABLES.add(table.getName());
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,4,3,0,0,3,0.73,3,2
4813_9,9,9,"createTableStatement.append(""TEMPORARY "");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.78,4,2
4813_10,10,10,TEMPORARY_TABLES.add(table.getName());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.52,5,3
4813_13,13,13,"createTableStatement.append(""TABLE "");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,4,3,0,0,3,0.85,8,5
4813_14,14,14,createTableStatement.append(qualifiedTableName(table));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.79,9,5
4813_15,15,15,"createTableStatement.append("" ("");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,3,0,0,3,0.83,10,6
4813_17,17,17,List<String> primaryKeys = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.42,12,8
4813_18,18,18,boolean first = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,13,8
4813_19,19,19,Column autoNumbered = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.4,14,9
4813_20,20,39,"for (Column column : table.columns()) {
if (!first) {
createTableStatement.append("", "");
}
createTableStatement.append(column.getName() + "" "");
createTableStatement.append(sqlRepresentationOfColumnType(column));
if (column.isAutoNumbered()) {
autoNumbered = column;
int autoNumberStart = autoNumbered.getAutoNumberStart() == -1 ? 1 : autoNumbered.getAutoNumberStart();
statements.add(""DROP SEQUENCE IF EXISTS "" + schemaNamePrefix() + createNuoDBGeneratorSequenceName(table, column));
statements.add(""CREATE SEQUENCE "" + schemaNamePrefix() + createNuoDBGeneratorSequenceName(table, autoNumbered) + "" START WITH "" + autoNumberStart);
createTableStatement.append("" GENERATED BY DEFAULT AS IDENTITY("" + createNuoDBGeneratorSequenceName(table, autoNumbered) + "")"");
}

if (column.isPrimaryKey()) {
primaryKeys.add(column.getName());
}

first = false;
}",0,0,0,1,0,0,0,0,0,13,2,20,0,1,0,1,4,3,0,0,3,0.69,15,10
4813_21,21,23,"if (!first) {
createTableStatement.append("", "");
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,3,0,0,3,0.77,16,11
4813_22,22,22,"createTableStatement.append("", "");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.83,17,12
4813_24,24,24,"createTableStatement.append(column.getName() + "" "");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.73,19,14
4813_25,25,25,createTableStatement.append(sqlRepresentationOfColumnType(column));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.72,20,14
4813_26,26,32,"if (column.isAutoNumbered()) {
autoNumbered = column;
int autoNumberStart = autoNumbered.getAutoNumberStart() == -1 ? 1 : autoNumbered.getAutoNumberStart();
statements.add(""DROP SEQUENCE IF EXISTS "" + schemaNamePrefix() + createNuoDBGeneratorSequenceName(table, column));
statements.add(""CREATE SEQUENCE "" + schemaNamePrefix() + createNuoDBGeneratorSequenceName(table, autoNumbered) + "" START WITH "" + autoNumberStart);
createTableStatement.append("" GENERATED BY DEFAULT AS IDENTITY("" + createNuoDBGeneratorSequenceName(table, autoNumbered) + "")"");
}",1,0,0,0,0,0,0,0,0,5,1,7,1,1,0,1,4,3,0,0,3,0.67,21,15
4813_27,27,27,autoNumbered = column;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.4,22,16
4813_28,28,28,int autoNumberStart = autoNumbered.getAutoNumberStart() == -1 ? 1 : autoNumbered.getAutoNumberStart();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.3,23,17
4813_29,29,29,"statements.add(""DROP SEQUENCE IF EXISTS "" + schemaNamePrefix() + createNuoDBGeneratorSequenceName(table, column));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.67,24,18
4813_30,30,30,"statements.add(""CREATE SEQUENCE "" + schemaNamePrefix() + createNuoDBGeneratorSequenceName(table, autoNumbered) + "" START WITH "" + autoNumberStart);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.68,25,19
4813_31,31,31,"createTableStatement.append("" GENERATED BY DEFAULT AS IDENTITY("" + createNuoDBGeneratorSequenceName(table, autoNumbered) + "")"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.73,26,20
4813_34,34,36,"if (column.isPrimaryKey()) {
primaryKeys.add(column.getName());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,0,0.39,29,22
4813_35,35,35,primaryKeys.add(column.getName());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,30,22
4813_38,38,38,first = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.29,33,24
4813_41,41,45,"if (!primaryKeys.isEmpty()) {
createTableStatement.append("", PRIMARY KEY ("");
createTableStatement.append(Joiner.on("", "").join(primaryKeys));
createTableStatement.append("")"");
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,3,0,0,3,0.77,36,25
4813_42,42,42,"createTableStatement.append("", PRIMARY KEY ("");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.78,37,25
4813_43,43,43,"createTableStatement.append(Joiner.on("", "").join(primaryKeys));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.76,38,26
4813_44,44,44,"createTableStatement.append("")"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.83,39,27
4813_47,47,47,"createTableStatement.append("")"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,3,0,0,3,0.83,42,29
4813_48,48,48,statements.add(createTableStatement.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,3,0.79,43,29
4813_50,50,50,return statements;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.55,45,31
4812_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,0,0.35,57,37
4812_2,2,2,char[] bufferToTest;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.45,56,36
4812_3,3,3,int indexToTest;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.37,55,35
4812_5,5,5,final int maxRefSize = 8;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.4,53,34
4812_6,6,6,int additionalCharsRequired = maxRefSize-remaining;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,4,3,0,0,0,0.38,52,33
4812_8,8,30,"if (additionalCharsRequired > 0) {
bufferToTest = new char[maxRefSize];
System.arraycopy(cbuf, ampersandIndex, bufferToTest, 0, remaining);

int writeIdx = remaining;
System.arraycopy(temporary, 0, bufferToTest, writeIdx, Math.min(maxRefSize-writeIdx, temporary.length));
writeIdx += Math.min(maxRefSize-writeIdx, temporary.length);

delegateReader.mark(maxRefSize);
while (writeIdx < maxRefSize) {
int additionalCharsRead = delegateReader.read(bufferToTest, writeIdx, maxRefSize-writeIdx);
if (additionalCharsRead < 0) {
break;
}
writeIdx += additionalCharsRead;
}

indexToTest = 0;
delegateReader.reset();
} else {
bufferToTest = cbuf;
indexToTest = ampersandIndex;
}",1,0,0,0,0,0,0,0,0,16,3,23,0,0,1,1,4,3,0,0,0,0.46,28,16
4812_9,9,9,bufferToTest = new char[maxRefSize];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.46,49,31
4812_10,10,10,"System.arraycopy(cbuf, ampersandIndex, bufferToTest, 0, remaining);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,0,0.43,48,30
4812_12,12,12,int writeIdx = remaining;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.3,46,29
4812_13,13,13,"System.arraycopy(temporary, 0, bufferToTest, writeIdx, Math.min(maxRefSize-writeIdx, temporary.length));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,0,0.48,45,28
4812_14,14,14,"writeIdx += Math.min(maxRefSize-writeIdx, temporary.length);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,3,0,0,0,0.46,44,27
4812_16,16,16,delegateReader.mark(maxRefSize);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.44,42,26
4812_17,17,23,"while (writeIdx < maxRefSize) {
int additionalCharsRead = delegateReader.read(bufferToTest, writeIdx, maxRefSize-writeIdx);
if (additionalCharsRead < 0) {
break;
}
writeIdx += additionalCharsRead;
}",0,1,0,0,0,0,0,0,0,4,2,7,0,1,0,1,4,3,0,0,0,0.43,35,21
4812_18,18,18,"int additionalCharsRead = delegateReader.read(bufferToTest, writeIdx, maxRefSize-writeIdx);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.44,40,24
4812_19,19,21,"if (additionalCharsRead < 0) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,0,0.29,37,22
4812_20,20,20,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.21,38,22
4812_22,22,22,writeIdx += additionalCharsRead;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.3,36,21
4812_25,25,25,indexToTest = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.39,33,20
4812_26,26,26,delegateReader.reset();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.44,32,19
4812_27,27,27,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.27,31,18
4812_28,28,28,bufferToTest = cbuf;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.47,30,17
4812_29,29,29,indexToTest = ampersandIndex;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,29,16
4812_32,32,34,"if (bufferToTest[indexToTest+1] != '#') {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,0,0.39,24,14
4812_33,33,33,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.18,25,14
4812_36,36,36,int semiColonPos = -1;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.37,22,13
4812_37,37,42,"for (int i = 0; i < bufferToTest.length-indexToTest; i++) {
if (bufferToTest[indexToTest+i] == ';') {
semiColonPos = i;
break;
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,1,0,1,4,3,0,0,0,0.44,16,9
4812_38,38,41,"if (bufferToTest[indexToTest+i] == ';') {
semiColonPos = i;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,4,3,0,0,0,0.44,17,9
4812_39,39,39,semiColonPos = i;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.41,19,10
4812_40,40,40,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.21,18,9
4812_44,44,46,"if (semiColonPos == -1) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,0,0.35,12,7
4812_45,45,45,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.18,13,7
4812_48,48,48,int reference;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,1,0.55,10,6
4812_49,49,53,"if (bufferToTest[indexToTest+2] == 'x') {
reference = parseReference(bufferToTest, indexToTest+3, semiColonPos-3, 16);
} else {
reference = parseReference(bufferToTest, indexToTest+2, semiColonPos-2, 10);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,1,4,3,0,0,1,0.57,5,2
4812_50,50,50,"reference = parseReference(bufferToTest, indexToTest+3, semiColonPos-3, 16);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.55,8,4
4812_51,51,51,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.27,7,3
4812_52,52,52,"reference = parseReference(bufferToTest, indexToTest+2, semiColonPos-2, 10);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.55,6,2
4812_55,55,57,"if (reference == -1) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,1,0.42,1,0
4812_56,56,56,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.18,2,0
4812_59,59,61,"if (Escaping.isCharValidForXml(reference)) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,2,0.58,0,0
4812_60,60,60,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.18,1,0
4812_63,63,63,int referenceLength = semiColonPos+1;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.5,4,2
4812_65,65,65,int toGobble = referenceLength-remaining;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.49,6,3
4812_67,67,67,int temporaryLength = temporary.length;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.38,8,4
4812_68,68,78,"if (temporaryLength > 0 && toGobble > 0) {
if (toGobble >= temporaryLength) {
temporary = new char[0];
} else {
char[] newTemporary = new char[temporaryLength - toGobble];
System.arraycopy(temporary, toGobble, newTemporary, 0, temporaryLength - toGobble);
temporary = newTemporary;

}
toGobble -= temporaryLength;
}",1,0,0,0,0,0,0,0,0,7,2,11,0,1,0,1,4,3,0,0,0,0.42,9,4
4812_69,69,76,"if (toGobble >= temporaryLength) {
temporary = new char[0];
} else {
char[] newTemporary = new char[temporaryLength - toGobble];
System.arraycopy(temporary, toGobble, newTemporary, 0, temporaryLength - toGobble);
temporary = newTemporary;

}",1,0,0,0,0,0,0,0,0,5,1,8,0,1,0,0,4,3,0,0,0,0.42,10,5
4812_70,70,70,temporary = new char[0];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.37,11,6
4812_71,71,71,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.27,12,7
4812_72,72,72,char[] newTemporary = new char[temporaryLength - toGobble];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.37,13,8
4812_73,73,73,"System.arraycopy(temporary, toGobble, newTemporary, 0, temporaryLength - toGobble);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.43,14,9
4812_74,74,74,temporary = newTemporary;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,0,0.39,15,10
4812_77,77,77,toGobble -= temporaryLength;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.39,18,12
4812_80,80,84,"while (toGobble > 0) {
int charsRead = delegateReader.read(new char[toGobble], 0, toGobble);
if (charsRead == -1) throw new IllegalStateException(""Unexpected EOF"");
toGobble -= charsRead;
}",0,1,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,3,0,0,0,0.39,21,13
4812_81,81,81,"int charsRead = delegateReader.read(new char[toGobble], 0, toGobble);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.4,22,13
4812_82,82,82,"throw new IllegalStateException(""Unexpected EOF"");",0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,4,3,0,0,0,0.33,23,14
4812_83,83,83,toGobble -= charsRead;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.22,24,15
4812_86,86,86,"return new ReferenceInfo(reference, referenceLength);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.53,27,17
4811_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,2,0,0,0,0.45,42,28
4811_2,2,2,char[] bufferToTest;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.37,41,27
4811_3,3,3,int indexToTest;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.32,40,26
4811_5,5,5,final int maxRefSize = 8;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.45,38,25
4811_6,6,6,int additionalCharsRequired = maxRefSize-remaining;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.44,37,24
4811_8,8,30,"if (additionalCharsRequired > 0) {
bufferToTest = new char[maxRefSize];
System.arraycopy(cbuf, ampersandIndex, bufferToTest, 0, remaining);

int writeIdx = remaining;
System.arraycopy(temporary, 0, bufferToTest, writeIdx, Math.min(maxRefSize-writeIdx, temporary.length));
writeIdx += Math.min(maxRefSize-writeIdx, temporary.length);

delegateReader.mark(maxRefSize);
while (writeIdx < maxRefSize) {
int additionalCharsRead = delegateReader.read(bufferToTest, writeIdx, maxRefSize-writeIdx);
if (additionalCharsRead < 0) {
break;
}
writeIdx += additionalCharsRead;
}

indexToTest = 0;
delegateReader.reset();
} else {
bufferToTest = cbuf;
indexToTest = ampersandIndex;
}",1,0,0,0,0,0,0,0,0,16,3,23,0,0,1,1,2,2,0,0,0,0.56,13,7
4811_9,9,9,bufferToTest = new char[maxRefSize];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.45,34,22
4811_10,10,10,"System.arraycopy(cbuf, ampersandIndex, bufferToTest, 0, remaining);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.54,33,21
4811_12,12,12,int writeIdx = remaining;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.51,31,20
4811_13,13,13,"System.arraycopy(temporary, 0, bufferToTest, writeIdx, Math.min(maxRefSize-writeIdx, temporary.length));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.57,30,19
4811_14,14,14,"writeIdx += Math.min(maxRefSize-writeIdx, temporary.length);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,2,2,0,0,0,0.54,29,18
4811_16,16,16,delegateReader.mark(maxRefSize);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.56,27,17
4811_17,17,23,"while (writeIdx < maxRefSize) {
int additionalCharsRead = delegateReader.read(bufferToTest, writeIdx, maxRefSize-writeIdx);
if (additionalCharsRead < 0) {
break;
}
writeIdx += additionalCharsRead;
}",0,1,0,0,0,0,0,0,0,4,2,7,0,1,0,1,2,2,0,0,0,0.54,20,12
4811_18,18,18,"int additionalCharsRead = delegateReader.read(bufferToTest, writeIdx, maxRefSize-writeIdx);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.55,25,15
4811_19,19,21,"if (additionalCharsRead < 0) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,2,0,0,0,0.41,22,13
4811_20,20,20,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,2,0,0,0,0.45,23,13
4811_22,22,22,writeIdx += additionalCharsRead;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.51,21,12
4811_25,25,25,indexToTest = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.34,18,11
4811_26,26,26,delegateReader.reset();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.58,17,10
4811_27,27,27,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.28,16,9
4811_28,28,28,bufferToTest = cbuf;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.36,15,8
4811_29,29,29,indexToTest = ampersandIndex;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.32,14,7
4811_32,32,34,"if (bufferToTest[indexToTest+1] != '#') {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,0,0.34,9,5
4811_33,33,33,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.27,10,5
4811_36,36,36,int semiColonPos = -1;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.5,7,4
4811_37,37,42,"for (int i = 0; i < bufferToTest.length-indexToTest; i++) {
if (bufferToTest[indexToTest+i] == ';') {
semiColonPos = i;
break;
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,1,0,1,2,2,0,0,0,0.48,1,0
4811_38,38,41,"if (bufferToTest[indexToTest+i] == ';') {
semiColonPos = i;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,2,2,0,0,0,0.51,2,0
4811_39,39,39,semiColonPos = i;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.56,4,1
4811_40,40,40,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,2,0,0,0,0.45,3,0
4811_44,44,46,"if (semiColonPos == -1) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,0,0.48,0,0
4811_45,45,45,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.27,1,0
4811_48,48,48,int reference;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.31,4,2
4811_49,49,53,"if (bufferToTest[indexToTest+2] == 'x') {
reference = parseReference(bufferToTest, indexToTest+3, semiColonPos-3, 16);
} else {
reference = parseReference(bufferToTest, indexToTest+2, semiColonPos-2, 10);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,1,2,2,0,0,0,0.48,5,2
4811_50,50,50,"reference = parseReference(bufferToTest, indexToTest+3, semiColonPos-3, 16);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.49,6,3
4811_51,51,51,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.28,7,4
4811_52,52,52,"reference = parseReference(bufferToTest, indexToTest+2, semiColonPos-2, 10);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.49,8,5
4811_55,55,57,"if (reference == -1) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,0,0.29,11,7
4811_56,56,56,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.27,12,7
4811_59,59,61,"if (Escaping.isCharValidForXml(reference)) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,0,0.4,15,9
4811_60,60,60,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.27,16,9
4811_63,63,63,int referenceLength = semiColonPos+1;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.49,19,11
4811_65,65,65,int toGobble = referenceLength-remaining;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.34,21,12
4811_67,67,67,int temporaryLength = temporary.length;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.39,23,13
4811_68,68,78,"if (temporaryLength > 0 && toGobble > 0) {
if (toGobble >= temporaryLength) {
temporary = new char[0];
} else {
char[] newTemporary = new char[temporaryLength - toGobble];
System.arraycopy(temporary, toGobble, newTemporary, 0, temporaryLength - toGobble);
temporary = newTemporary;

}
toGobble -= temporaryLength;
}",1,0,0,0,0,0,0,0,0,7,2,11,0,1,0,1,2,2,0,0,0,0.52,24,13
4811_69,69,76,"if (toGobble >= temporaryLength) {
temporary = new char[0];
} else {
char[] newTemporary = new char[temporaryLength - toGobble];
System.arraycopy(temporary, toGobble, newTemporary, 0, temporaryLength - toGobble);
temporary = newTemporary;

}",1,0,0,0,0,0,0,0,0,5,1,8,0,1,0,0,2,2,0,0,0,0.52,25,14
4811_70,70,70,temporary = new char[0];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.37,26,15
4811_71,71,71,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.28,27,16
4811_72,72,72,char[] newTemporary = new char[temporaryLength - toGobble];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.37,28,17
4811_73,73,73,"System.arraycopy(temporary, toGobble, newTemporary, 0, temporaryLength - toGobble);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.54,29,18
4811_74,74,74,temporary = newTemporary;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.35,30,19
4811_77,77,77,toGobble -= temporaryLength;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.39,33,21
4811_80,80,84,"while (toGobble > 0) {
int charsRead = delegateReader.read(new char[toGobble], 0, toGobble);
if (charsRead == -1) throw new IllegalStateException(""Unexpected EOF"");
toGobble -= charsRead;
}",0,1,0,0,0,0,0,0,0,3,1,5,0,0,1,1,2,2,0,0,0,0.52,36,22
4811_81,81,81,"int charsRead = delegateReader.read(new char[toGobble], 0, toGobble);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.52,37,22
4811_82,82,82,"throw new IllegalStateException(""Unexpected EOF"");",0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,2,2,0,0,0,0.46,38,23
4811_83,83,83,toGobble -= charsRead;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.37,39,24
4811_86,86,86,"return new ReferenceInfo(reference, referenceLength);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.32,42,26
4810_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,2,1,0,0,0.37,30,21
4810_2,2,2,char[] bufferToTest;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.58,29,20
4810_3,3,3,int indexToTest;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,2,1,0,0,0.38,28,19
4810_5,5,5,final int maxRefSize = 8;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,2,1,0,0,0.38,26,18
4810_6,6,6,int additionalCharsRequired = maxRefSize-remaining;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,6,2,1,0,1,0.49,25,17
4810_8,8,30,"if (additionalCharsRequired > 0) {
bufferToTest = new char[maxRefSize];
System.arraycopy(cbuf, ampersandIndex, bufferToTest, 0, remaining);

int writeIdx = remaining;
System.arraycopy(temporary, 0, bufferToTest, writeIdx, Math.min(maxRefSize-writeIdx, temporary.length));
writeIdx += Math.min(maxRefSize-writeIdx, temporary.length);

delegateReader.mark(maxRefSize);
while (writeIdx < maxRefSize) {
int additionalCharsRead = delegateReader.read(bufferToTest, writeIdx, maxRefSize-writeIdx);
if (additionalCharsRead < 0) {
break;
}
writeIdx += additionalCharsRead;
}

indexToTest = 0;
delegateReader.reset();
} else {
bufferToTest = cbuf;
indexToTest = ampersandIndex;
}",1,0,0,0,0,0,0,0,0,16,3,23,0,0,1,1,6,2,1,0,1,0.52,1,0
4810_9,9,9,bufferToTest = new char[maxRefSize];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,1,0,1,0.49,22,15
4810_10,10,10,"System.arraycopy(cbuf, ampersandIndex, bufferToTest, 0, remaining);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,2,1,0,0,0.45,21,14
4810_12,12,12,int writeIdx = remaining;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,2,1,0,0,0.44,19,13
4810_13,13,13,"System.arraycopy(temporary, 0, bufferToTest, writeIdx, Math.min(maxRefSize-writeIdx, temporary.length));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,2,1,0,0,0.47,18,12
4810_14,14,14,"writeIdx += Math.min(maxRefSize-writeIdx, temporary.length);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,6,2,1,0,0,0.45,17,11
4810_16,16,16,delegateReader.mark(maxRefSize);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,2,1,0,0,0.33,15,10
4810_17,17,23,"while (writeIdx < maxRefSize) {
int additionalCharsRead = delegateReader.read(bufferToTest, writeIdx, maxRefSize-writeIdx);
if (additionalCharsRead < 0) {
break;
}
writeIdx += additionalCharsRead;
}",0,1,0,0,0,0,0,0,0,4,2,7,0,1,0,1,6,2,1,0,1,0.52,8,5
4810_18,18,18,"int additionalCharsRead = delegateReader.read(bufferToTest, writeIdx, maxRefSize-writeIdx);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,1,0,1,0.51,13,8
4810_19,19,21,"if (additionalCharsRead < 0) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,2,1,0,1,0.54,10,6
4810_20,20,20,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,2,1,0,0,0.42,11,6
4810_22,22,22,writeIdx += additionalCharsRead;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,1,0,1,0.53,9,5
4810_25,25,25,indexToTest = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,2,1,0,0,0.39,6,4
4810_26,26,26,delegateReader.reset();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.34,5,3
4810_27,27,27,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.27,4,2
4810_28,28,28,bufferToTest = cbuf;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.36,3,1
4810_29,29,29,indexToTest = ampersandIndex;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.32,2,0
4810_32,32,34,"if (bufferToTest[indexToTest+1] != '#') {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,2,1,0,0,0.33,0,0
4810_33,33,33,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.17,1,0
4810_36,36,36,int semiColonPos = -1;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,2,1,0,0,0.43,4,2
4810_37,37,42,"for (int i = 0; i < bufferToTest.length-indexToTest; i++) {
if (bufferToTest[indexToTest+i] == ';') {
semiColonPos = i;
break;
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,1,0,1,6,2,1,0,0,0.45,5,2
4810_38,38,41,"if (bufferToTest[indexToTest+i] == ';') {
semiColonPos = i;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,6,2,1,0,0,0.42,6,3
4810_39,39,39,semiColonPos = i;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.43,7,4
4810_40,40,40,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,2,1,0,0,0.42,8,5
4810_44,44,46,"if (semiColonPos == -1) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,2,1,0,0,0.39,12,7
4810_45,45,45,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.17,13,7
4810_48,48,48,int reference;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,2,1,0,0,0.34,16,9
4810_49,49,53,"if (bufferToTest[indexToTest+2] == 'x') {
reference = parseReference(bufferToTest, indexToTest+3, semiColonPos-3, 16);
} else {
reference = parseReference(bufferToTest, indexToTest+2, semiColonPos-2, 10);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,1,6,2,1,0,0,0.47,17,9
4810_50,50,50,"reference = parseReference(bufferToTest, indexToTest+3, semiColonPos-3, 16);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.41,18,10
4810_51,51,51,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.27,19,11
4810_52,52,52,"reference = parseReference(bufferToTest, indexToTest+2, semiColonPos-2, 10);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.47,20,12
4810_55,55,57,"if (reference == -1) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,2,1,0,0,0.24,23,14
4810_56,56,56,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.17,24,14
4810_59,59,61,"if (Escaping.isCharValidForXml(reference)) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,2,1,0,1,0.45,27,16
4810_60,60,60,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.17,28,16
4810_63,63,63,int referenceLength = semiColonPos+1;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,2,1,0,0,0.45,31,18
4810_65,65,65,int toGobble = referenceLength-remaining;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,2,1,0,0,0.42,33,19
4810_67,67,67,int temporaryLength = temporary.length;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,2,1,0,0,0.46,35,20
4810_68,68,78,"if (temporaryLength > 0 && toGobble > 0) {
if (toGobble >= temporaryLength) {
temporary = new char[0];
} else {
char[] newTemporary = new char[temporaryLength - toGobble];
System.arraycopy(temporary, toGobble, newTemporary, 0, temporaryLength - toGobble);
temporary = newTemporary;

}
toGobble -= temporaryLength;
}",1,0,0,0,0,0,0,0,0,7,2,11,0,1,0,1,6,2,1,0,1,0.55,36,20
4810_69,69,76,"if (toGobble >= temporaryLength) {
temporary = new char[0];
} else {
char[] newTemporary = new char[temporaryLength - toGobble];
System.arraycopy(temporary, toGobble, newTemporary, 0, temporaryLength - toGobble);
temporary = newTemporary;

}",1,0,0,0,0,0,0,0,0,5,1,8,0,1,0,0,6,2,1,0,1,0.54,37,21
4810_70,70,70,temporary = new char[0];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.52,38,22
4810_71,71,71,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.27,39,23
4810_72,72,72,char[] newTemporary = new char[temporaryLength - toGobble];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,1,0,1,0.53,40,24
4810_73,73,73,"System.arraycopy(temporary, toGobble, newTemporary, 0, temporaryLength - toGobble);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,1,0,0,0.47,41,25
4810_74,74,74,temporary = newTemporary;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,2,1,0,0,0.24,42,26
4810_77,77,77,toGobble -= temporaryLength;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,1,0,0,0.44,45,28
4810_80,80,84,"while (toGobble > 0) {
int charsRead = delegateReader.read(new char[toGobble], 0, toGobble);
if (charsRead == -1) throw new IllegalStateException(""Unexpected EOF"");
toGobble -= charsRead;
}",0,1,0,0,0,0,0,0,0,3,1,5,0,0,1,1,6,2,1,0,1,0.54,48,29
4810_81,81,81,"int charsRead = delegateReader.read(new char[toGobble], 0, toGobble);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,1,0,1,0.55,49,29
4810_82,82,82,"throw new IllegalStateException(""Unexpected EOF"");",0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,6,2,1,0,0,0.35,50,30
4810_83,83,83,toGobble -= charsRead;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,1,0,1,0.58,51,31
4810_86,86,86,"return new ReferenceInfo(reference, referenceLength);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,2,1,0,0,0.33,54,33
4809_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,2,2,0,0,0.24,24,17
4809_2,2,2,char[] bufferToTest;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,2,2,0,1,0.5,23,16
4809_3,3,3,int indexToTest;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,2,2,0,0,0.34,22,15
4809_5,5,5,final int maxRefSize = 8;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,2,2,0,0,0.31,20,14
4809_6,6,6,int additionalCharsRequired = maxRefSize-remaining;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,6,2,2,0,1,0.42,19,13
4809_8,8,30,"if (additionalCharsRequired > 0) {
bufferToTest = new char[maxRefSize];
System.arraycopy(cbuf, ampersandIndex, bufferToTest, 0, remaining);

int writeIdx = remaining;
System.arraycopy(temporary, 0, bufferToTest, writeIdx, Math.min(maxRefSize-writeIdx, temporary.length));
writeIdx += Math.min(maxRefSize-writeIdx, temporary.length);

delegateReader.mark(maxRefSize);
while (writeIdx < maxRefSize) {
int additionalCharsRead = delegateReader.read(bufferToTest, writeIdx, maxRefSize-writeIdx);
if (additionalCharsRead < 0) {
break;
}
writeIdx += additionalCharsRead;
}

indexToTest = 0;
delegateReader.reset();
} else {
bufferToTest = cbuf;
indexToTest = ampersandIndex;
}",1,0,0,0,0,0,0,0,0,16,3,23,0,0,1,1,6,2,2,0,2,0.53,0,0
4809_9,9,9,bufferToTest = new char[maxRefSize];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,2,0,1,0.4,16,11
4809_10,10,10,"System.arraycopy(cbuf, ampersandIndex, bufferToTest, 0, remaining);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,2,2,0,0,0.38,15,10
4809_12,12,12,int writeIdx = remaining;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,2,2,0,0,0.39,13,9
4809_13,13,13,"System.arraycopy(temporary, 0, bufferToTest, writeIdx, Math.min(maxRefSize-writeIdx, temporary.length));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,2,2,0,0,0.41,12,8
4809_14,14,14,"writeIdx += Math.min(maxRefSize-writeIdx, temporary.length);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,6,2,2,0,0,0.4,11,7
4809_16,16,16,delegateReader.mark(maxRefSize);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,2,2,0,0,0.28,9,6
4809_17,17,23,"while (writeIdx < maxRefSize) {
int additionalCharsRead = delegateReader.read(bufferToTest, writeIdx, maxRefSize-writeIdx);
if (additionalCharsRead < 0) {
break;
}
writeIdx += additionalCharsRead;
}",0,1,0,0,0,0,0,0,0,4,2,7,0,1,0,1,6,2,2,0,1,0.47,2,1
4809_18,18,18,"int additionalCharsRead = delegateReader.read(bufferToTest, writeIdx, maxRefSize-writeIdx);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,2,0,1,0.45,7,4
4809_19,19,21,"if (additionalCharsRead < 0) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,2,2,0,1,0.48,4,2
4809_20,20,20,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,2,2,0,0,0.31,5,2
4809_22,22,22,writeIdx += additionalCharsRead;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,2,0,1,0.49,3,1
4809_25,25,25,indexToTest = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,2,2,0,0,0.35,0,0
4809_26,26,26,delegateReader.reset();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,1,0.48,0,0
4809_27,27,27,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.3,1,0
4809_28,28,28,bufferToTest = cbuf;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.31,2,1
4809_29,29,29,indexToTest = ampersandIndex;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.28,3,2
4809_32,32,34,"if (bufferToTest[indexToTest+1] != '#') {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,2,2,0,0,0.33,6,4
4809_33,33,33,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.22,7,4
4809_36,36,36,int semiColonPos = -1;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,2,2,0,0,0.39,10,6
4809_37,37,42,"for (int i = 0; i < bufferToTest.length-indexToTest; i++) {
if (bufferToTest[indexToTest+i] == ';') {
semiColonPos = i;
break;
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,1,0,1,6,2,2,0,0,0.4,11,6
4809_38,38,41,"if (bufferToTest[indexToTest+i] == ';') {
semiColonPos = i;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,6,2,2,0,0,0.38,12,7
4809_39,39,39,semiColonPos = i;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.39,13,8
4809_40,40,40,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,2,2,0,0,0.31,14,9
4809_44,44,46,"if (semiColonPos == -1) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,2,2,0,0,0.37,18,11
4809_45,45,45,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.22,19,11
4809_48,48,48,int reference;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,2,2,0,0,0.31,22,13
4809_49,49,53,"if (bufferToTest[indexToTest+2] == 'x') {
reference = parseReference(bufferToTest, indexToTest+3, semiColonPos-3, 16);
} else {
reference = parseReference(bufferToTest, indexToTest+2, semiColonPos-2, 10);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,1,6,2,2,0,0,0.39,23,13
4809_50,50,50,"reference = parseReference(bufferToTest, indexToTest+3, semiColonPos-3, 16);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.38,24,14
4809_51,51,51,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.3,25,15
4809_52,52,52,"reference = parseReference(bufferToTest, indexToTest+2, semiColonPos-2, 10);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.36,26,16
4809_55,55,57,"if (reference == -1) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,2,2,0,0,0.28,29,18
4809_56,56,56,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.22,30,18
4809_59,59,61,"if (Escaping.isCharValidForXml(reference)) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,2,2,0,1,0.43,33,20
4809_60,60,60,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.22,34,20
4809_63,63,63,int referenceLength = semiColonPos+1;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,2,2,0,0,0.41,37,22
4809_65,65,65,int toGobble = referenceLength-remaining;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,2,2,0,1,0.39,39,23
4809_67,67,67,int temporaryLength = temporary.length;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,2,2,0,0,0.42,41,24
4809_68,68,78,"if (temporaryLength > 0 && toGobble > 0) {
if (toGobble >= temporaryLength) {
temporary = new char[0];
} else {
char[] newTemporary = new char[temporaryLength - toGobble];
System.arraycopy(temporary, toGobble, newTemporary, 0, temporaryLength - toGobble);
temporary = newTemporary;

}
toGobble -= temporaryLength;
}",1,0,0,0,0,0,0,0,0,7,2,11,0,1,0,1,6,2,2,0,2,0.48,42,24
4809_69,69,76,"if (toGobble >= temporaryLength) {
temporary = new char[0];
} else {
char[] newTemporary = new char[temporaryLength - toGobble];
System.arraycopy(temporary, toGobble, newTemporary, 0, temporaryLength - toGobble);
temporary = newTemporary;

}",1,0,0,0,0,0,0,0,0,5,1,8,0,1,0,0,6,2,2,0,2,0.47,43,25
4809_70,70,70,temporary = new char[0];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,1,0.46,44,26
4809_71,71,71,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.3,45,27
4809_72,72,72,char[] newTemporary = new char[temporaryLength - toGobble];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,2,0,2,0.48,46,28
4809_73,73,73,"System.arraycopy(temporary, toGobble, newTemporary, 0, temporaryLength - toGobble);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,2,0,1,0.4,47,29
4809_74,74,74,temporary = newTemporary;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,2,2,0,0,0.26,48,30
4809_77,77,77,toGobble -= temporaryLength;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,2,0,1,0.41,51,32
4809_80,80,84,"while (toGobble > 0) {
int charsRead = delegateReader.read(new char[toGobble], 0, toGobble);
if (charsRead == -1) throw new IllegalStateException(""Unexpected EOF"");
toGobble -= charsRead;
}",0,1,0,0,0,0,0,0,0,3,1,5,0,0,1,1,6,2,2,0,2,0.45,54,33
4809_81,81,81,"int charsRead = delegateReader.read(new char[toGobble], 0, toGobble);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,2,0,2,0.47,55,33
4809_82,82,82,"throw new IllegalStateException(""Unexpected EOF"");",0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,6,2,2,0,0,0.29,56,34
4809_83,83,83,toGobble -= charsRead;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,2,0,2,0.48,57,35
4809_86,86,86,"return new ReferenceInfo(reference, referenceLength);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,2,2,0,0,0.37,60,37
4808_1,1,1,"private int processEscape(char[] cbuf, int off, int charsRead, int idx, int sequenceLength, String escapedString) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.69,5,3
4808_2,2,2,"int charsRemainingInBuffer = Math.max(charsRead - idx - sequenceLength, 0);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.5,4,2
4808_4,4,4,char[] escapedChars = escapedString.toCharArray();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,2,0.77,2,1
4808_5,5,5,char[] newTemporary = new char[escapedChars.length + charsRemainingInBuffer + temporary.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,3,2,0,0,1,0.66,1,0
4808_7,7,7,"System.arraycopy(escapedChars, 0, newTemporary, 0, escapedChars.length);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,1,0.65,0,0
4808_9,9,9,"System.arraycopy(cbuf, off + idx + sequenceLength, newTemporary, escapedChars.length, charsRemainingInBuffer);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,1,0.64,2,1
4808_11,11,11,"System.arraycopy(temporary, 0, newTemporary, escapedChars.length + charsRemainingInBuffer, temporary.length);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,1,0.64,4,2
4808_13,13,13,temporary = newTemporary;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.43,6,3
4808_14,14,14,skipChars = 2;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.43,7,3
4808_16,16,16,return idx;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.47,9,5
4807_1,1,2,"@Override
public int read(char[] cbuf, int off, int len) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.29,27,20
4807_3,3,3,int charsRead;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.31,26,19
4807_5,5,19,"if (temporary.length == 0) {
charsRead = delegateReader.read(cbuf, off, len);
} else {
if (temporary.length > len) {
System.arraycopy(temporary, 0, cbuf, off, len);
charsRead = len;
char[] newTemporary = new char[temporary.length-len];
System.arraycopy(temporary, len, newTemporary, 0, temporary.length-len);
temporary = newTemporary;
} else {
System.arraycopy(temporary, 0, cbuf, off, temporary.length);
charsRead = temporary.length;
temporary = new char[] {};
}
}",1,0,0,0,0,0,0,0,0,12,3,15,0,0,1,1,2,2,0,0,0,0.33,10,6
4807_6,6,6,"charsRead = delegateReader.read(cbuf, off, len);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.35,23,17
4807_7,7,7,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.07,22,16
4807_8,8,18,"if (temporary.length > len) {
System.arraycopy(temporary, 0, cbuf, off, len);
charsRead = len;
char[] newTemporary = new char[temporary.length-len];
System.arraycopy(temporary, len, newTemporary, 0, temporary.length-len);
temporary = newTemporary;
} else {
System.arraycopy(temporary, 0, cbuf, off, temporary.length);
charsRead = temporary.length;
temporary = new char[] {};
}",1,0,0,0,0,0,0,0,0,9,2,11,0,0,0,0,2,2,0,0,0,0.31,11,6
4807_9,9,9,"System.arraycopy(temporary, 0, cbuf, off, len);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.32,20,14
4807_10,10,10,charsRead = len;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.31,19,13
4807_11,11,11,char[] newTemporary = new char[temporary.length-len];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.31,18,12
4807_12,12,12,"System.arraycopy(temporary, len, newTemporary, 0, temporary.length-len);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.31,17,11
4807_13,13,13,temporary = newTemporary;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.2,16,10
4807_14,14,14,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.07,15,9
4807_15,15,15,"System.arraycopy(temporary, 0, cbuf, off, temporary.length);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.32,14,8
4807_16,16,16,charsRead = temporary.length;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.31,13,7
4807_17,17,17,temporary = new char[] {};,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.3,12,6
4807_21,21,48,"for (int idx = 0; idx < charsRead; idx++) {
if (skipChars > 0) {
skipChars--;
continue;
}

char testChar = cbuf[off + idx];

if (testChar == '&') {
ReferenceInfo characterReferenceToTransform = characterReferenceToTransform(cbuf, off + idx, charsRead - idx);
if (characterReferenceToTransform != null) {
String escapedString = String.format(""\\u%04x"", characterReferenceToTransform.referenceValue);
return processEscape(cbuf, off, charsRead, idx, characterReferenceToTransform.sequenceLength, escapedString);
}
}

if (testChar == '\\' && inputVersion == 2) {
return processEscape(cbuf, off, charsRead, idx, 1, ""\\\\"");
}

if (testChar == '\ufffe') {
return processEscape(cbuf, off, charsRead, idx, 1, ""\\ufffe"");
}

if (testChar == '\uffff') {
return processEscape(cbuf, off, charsRead, idx, 1, ""\\uffff"");
}
}",0,0,1,0,0,0,0,0,0,15,3,28,0,0,1,1,2,2,0,0,0,0.4,0,0
4807_22,22,25,"if (skipChars > 0) {
skipChars--;
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,2,2,0,0,0,0.34,4,2
4807_23,23,23,skipChars--;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.35,6,3
4807_24,24,24,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.21,5,2
4807_27,27,27,char testChar = cbuf[off + idx];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.44,2,1
4807_29,29,35,"if (testChar == '&') {
ReferenceInfo characterReferenceToTransform = characterReferenceToTransform(cbuf, off + idx, charsRead - idx);
if (characterReferenceToTransform != null) {
String escapedString = String.format(""\\u%04x"", characterReferenceToTransform.referenceValue);
return processEscape(cbuf, off, charsRead, idx, characterReferenceToTransform.sequenceLength, escapedString);
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,1,2,2,0,0,0,0.39,0,0
4807_30,30,30,"ReferenceInfo characterReferenceToTransform = characterReferenceToTransform(cbuf, off + idx, charsRead - idx);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.4,0,0
4807_31,31,34,"if (characterReferenceToTransform != null) {
String escapedString = String.format(""\\u%04x"", characterReferenceToTransform.referenceValue);
return processEscape(cbuf, off, charsRead, idx, characterReferenceToTransform.sequenceLength, escapedString);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,2,2,0,0,0,0.38,1,0
4807_32,32,32,"String escapedString = String.format(""\\u%04x"", characterReferenceToTransform.referenceValue);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.35,2,1
4807_33,33,33,"return processEscape(cbuf, off, charsRead, idx, characterReferenceToTransform.sequenceLength, escapedString);",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.39,3,2
4807_37,37,39,"if (testChar == '\\' && inputVersion == 2) {
return processEscape(cbuf, off, charsRead, idx, 1, ""\\\\"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,0,0.37,7,4
4807_38,38,38,"return processEscape(cbuf, off, charsRead, idx, 1, ""\\\\"");",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.4,8,4
4807_41,41,43,"if (testChar == '\ufffe') {
return processEscape(cbuf, off, charsRead, idx, 1, ""\\ufffe"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,0,0.4,11,6
4807_42,42,42,"return processEscape(cbuf, off, charsRead, idx, 1, ""\\ufffe"");",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.4,12,6
4807_45,45,47,"if (testChar == '\uffff') {
return processEscape(cbuf, off, charsRead, idx, 1, ""\\uffff"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,2,2,0,0,0,0.4,15,8
4807_46,46,46,"return processEscape(cbuf, off, charsRead, idx, 1, ""\\uffff"");",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.4,16,8
4807_50,50,50,return charsRead;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.31,20,10
4806_1,1,2,"@Override
public int read(char[] cbuf, int off, int len) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,0,0.45,12,11
4806_3,3,3,int charsRead;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,5,0,0,0,0.39,11,10
4806_5,5,19,"if (temporary.length == 0) {
charsRead = delegateReader.read(cbuf, off, len);
} else {
if (temporary.length > len) {
System.arraycopy(temporary, 0, cbuf, off, len);
charsRead = len;
char[] newTemporary = new char[temporary.length-len];
System.arraycopy(temporary, len, newTemporary, 0, temporary.length-len);
temporary = newTemporary;
} else {
System.arraycopy(temporary, 0, cbuf, off, temporary.length);
charsRead = temporary.length;
temporary = new char[] {};
}
}",1,0,0,0,0,0,0,0,0,12,3,15,0,0,1,1,5,5,0,0,1,0.6,0,0
4806_6,6,6,"charsRead = delegateReader.read(cbuf, off, len);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.47,8,8
4806_7,7,7,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.14,7,7
4806_8,8,18,"if (temporary.length > len) {
System.arraycopy(temporary, 0, cbuf, off, len);
charsRead = len;
char[] newTemporary = new char[temporary.length-len];
System.arraycopy(temporary, len, newTemporary, 0, temporary.length-len);
temporary = newTemporary;
} else {
System.arraycopy(temporary, 0, cbuf, off, temporary.length);
charsRead = temporary.length;
temporary = new char[] {};
}",1,0,0,0,0,0,0,0,0,9,2,11,0,0,0,0,5,5,0,0,1,0.61,0,0
4806_9,9,9,"System.arraycopy(temporary, 0, cbuf, off, len);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.6,5,5
4806_10,10,10,charsRead = len;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.5,4,4
4806_11,11,11,char[] newTemporary = new char[temporary.length-len];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.6,3,3
4806_12,12,12,"System.arraycopy(temporary, len, newTemporary, 0, temporary.length-len);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.63,2,2
4806_13,13,13,temporary = newTemporary;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.68,1,1
4806_14,14,14,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.14,0,0
4806_15,15,15,"System.arraycopy(temporary, 0, cbuf, off, temporary.length);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.61,0,0
4806_16,16,16,charsRead = temporary.length;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.59,1,0
4806_17,17,17,temporary = new char[] {};,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.59,2,1
4806_21,21,48,"for (int idx = 0; idx < charsRead; idx++) {
if (skipChars > 0) {
skipChars--;
continue;
}

char testChar = cbuf[off + idx];

if (testChar == '&') {
ReferenceInfo characterReferenceToTransform = characterReferenceToTransform(cbuf, off + idx, charsRead - idx);
if (characterReferenceToTransform != null) {
String escapedString = String.format(""\\u%04x"", characterReferenceToTransform.referenceValue);
return processEscape(cbuf, off, charsRead, idx, characterReferenceToTransform.sequenceLength, escapedString);
}
}

if (testChar == '\\' && inputVersion == 2) {
return processEscape(cbuf, off, charsRead, idx, 1, ""\\\\"");
}

if (testChar == '\ufffe') {
return processEscape(cbuf, off, charsRead, idx, 1, ""\\ufffe"");
}

if (testChar == '\uffff') {
return processEscape(cbuf, off, charsRead, idx, 1, ""\\uffff"");
}
}",0,0,1,0,0,0,0,0,0,15,3,28,0,0,1,1,5,5,0,0,0,0.42,6,3
4806_22,22,25,"if (skipChars > 0) {
skipChars--;
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,5,5,0,0,0,0.35,7,3
4806_23,23,23,skipChars--;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.36,8,4
4806_24,24,24,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.18,9,5
4806_27,27,27,char testChar = cbuf[off + idx];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,5,0,0,0,0.4,12,7
4806_29,29,35,"if (testChar == '&') {
ReferenceInfo characterReferenceToTransform = characterReferenceToTransform(cbuf, off + idx, charsRead - idx);
if (characterReferenceToTransform != null) {
String escapedString = String.format(""\\u%04x"", characterReferenceToTransform.referenceValue);
return processEscape(cbuf, off, charsRead, idx, characterReferenceToTransform.sequenceLength, escapedString);
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,1,5,5,0,0,0,0.42,14,8
4806_30,30,30,"ReferenceInfo characterReferenceToTransform = characterReferenceToTransform(cbuf, off + idx, charsRead - idx);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.43,15,8
4806_31,31,34,"if (characterReferenceToTransform != null) {
String escapedString = String.format(""\\u%04x"", characterReferenceToTransform.referenceValue);
return processEscape(cbuf, off, charsRead, idx, characterReferenceToTransform.sequenceLength, escapedString);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,5,0,0,0,0.41,16,9
4806_32,32,32,"String escapedString = String.format(""\\u%04x"", characterReferenceToTransform.referenceValue);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.4,17,10
4806_33,33,33,"return processEscape(cbuf, off, charsRead, idx, characterReferenceToTransform.sequenceLength, escapedString);",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.43,18,11
4806_37,37,39,"if (testChar == '\\' && inputVersion == 2) {
return processEscape(cbuf, off, charsRead, idx, 1, ""\\\\"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,5,0,0,0,0.38,22,13
4806_38,38,38,"return processEscape(cbuf, off, charsRead, idx, 1, ""\\\\"");",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.38,23,13
4806_41,41,43,"if (testChar == '\ufffe') {
return processEscape(cbuf, off, charsRead, idx, 1, ""\\ufffe"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,5,0,0,0,0.38,26,15
4806_42,42,42,"return processEscape(cbuf, off, charsRead, idx, 1, ""\\ufffe"");",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.38,27,15
4806_45,45,47,"if (testChar == '\uffff') {
return processEscape(cbuf, off, charsRead, idx, 1, ""\\uffff"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,5,5,0,0,0,0.38,30,17
4806_46,46,46,"return processEscape(cbuf, off, charsRead, idx, 1, ""\\uffff"");",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.38,31,17
4806_50,50,50,return charsRead;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,5,0,0,0,0.34,35,19
4805_1,1,2,"@Override
public int read(char[] cbuf, int off, int len) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,5,1,0,1,0.47,2,1
4805_3,3,3,int charsRead;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,5,1,0,1,0.5,1,0
4805_5,5,19,"if (temporary.length == 0) {
charsRead = delegateReader.read(cbuf, off, len);
} else {
if (temporary.length > len) {
System.arraycopy(temporary, 0, cbuf, off, len);
charsRead = len;
char[] newTemporary = new char[temporary.length-len];
System.arraycopy(temporary, len, newTemporary, 0, temporary.length-len);
temporary = newTemporary;
} else {
System.arraycopy(temporary, 0, cbuf, off, temporary.length);
charsRead = temporary.length;
temporary = new char[] {};
}
}",1,0,0,0,0,0,0,0,0,12,3,15,0,0,1,1,7,5,1,0,2,0.62,0,0
4805_6,6,6,"charsRead = delegateReader.read(cbuf, off, len);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.58,1,0
4805_7,7,7,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.26,2,1
4805_8,8,18,"if (temporary.length > len) {
System.arraycopy(temporary, 0, cbuf, off, len);
charsRead = len;
char[] newTemporary = new char[temporary.length-len];
System.arraycopy(temporary, len, newTemporary, 0, temporary.length-len);
temporary = newTemporary;
} else {
System.arraycopy(temporary, 0, cbuf, off, temporary.length);
charsRead = temporary.length;
temporary = new char[] {};
}",1,0,0,0,0,0,0,0,0,9,2,11,0,0,0,0,7,5,1,0,2,0.62,3,2
4805_9,9,9,"System.arraycopy(temporary, 0, cbuf, off, len);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.55,4,3
4805_10,10,10,charsRead = len;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.59,5,4
4805_11,11,11,char[] newTemporary = new char[temporary.length-len];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.53,6,5
4805_12,12,12,"System.arraycopy(temporary, len, newTemporary, 0, temporary.length-len);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.58,7,6
4805_13,13,13,temporary = newTemporary;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.59,8,7
4805_14,14,14,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.26,9,8
4805_15,15,15,"System.arraycopy(temporary, 0, cbuf, off, temporary.length);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.56,10,9
4805_16,16,16,charsRead = temporary.length;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,2,0.65,11,10
4805_17,17,17,temporary = new char[] {};,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.51,12,11
4805_21,21,48,"for (int idx = 0; idx < charsRead; idx++) {
if (skipChars > 0) {
skipChars--;
continue;
}

char testChar = cbuf[off + idx];

if (testChar == '&') {
ReferenceInfo characterReferenceToTransform = characterReferenceToTransform(cbuf, off + idx, charsRead - idx);
if (characterReferenceToTransform != null) {
String escapedString = String.format(""\\u%04x"", characterReferenceToTransform.referenceValue);
return processEscape(cbuf, off, charsRead, idx, characterReferenceToTransform.sequenceLength, escapedString);
}
}

if (testChar == '\\' && inputVersion == 2) {
return processEscape(cbuf, off, charsRead, idx, 1, ""\\\\"");
}

if (testChar == '\ufffe') {
return processEscape(cbuf, off, charsRead, idx, 1, ""\\ufffe"");
}

if (testChar == '\uffff') {
return processEscape(cbuf, off, charsRead, idx, 1, ""\\uffff"");
}
}",0,0,1,0,0,0,0,0,0,15,3,28,0,0,1,1,7,5,1,0,1,0.47,16,13
4805_22,22,25,"if (skipChars > 0) {
skipChars--;
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,7,5,1,0,0,0.33,17,13
4805_23,23,23,skipChars--;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.35,18,14
4805_24,24,24,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.17,19,15
4805_27,27,27,char testChar = cbuf[off + idx];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,5,1,0,0,0.42,22,17
4805_29,29,35,"if (testChar == '&') {
ReferenceInfo characterReferenceToTransform = characterReferenceToTransform(cbuf, off + idx, charsRead - idx);
if (characterReferenceToTransform != null) {
String escapedString = String.format(""\\u%04x"", characterReferenceToTransform.referenceValue);
return processEscape(cbuf, off, charsRead, idx, characterReferenceToTransform.sequenceLength, escapedString);
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,1,7,5,1,0,1,0.47,24,18
4805_30,30,30,"ReferenceInfo characterReferenceToTransform = characterReferenceToTransform(cbuf, off + idx, charsRead - idx);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.49,25,18
4805_31,31,34,"if (characterReferenceToTransform != null) {
String escapedString = String.format(""\\u%04x"", characterReferenceToTransform.referenceValue);
return processEscape(cbuf, off, charsRead, idx, characterReferenceToTransform.sequenceLength, escapedString);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,7,5,1,0,1,0.45,26,19
4805_32,32,32,"String escapedString = String.format(""\\u%04x"", characterReferenceToTransform.referenceValue);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,1,0,0,0.37,27,20
4805_33,33,33,"return processEscape(cbuf, off, charsRead, idx, characterReferenceToTransform.sequenceLength, escapedString);",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.47,28,21
4805_37,37,39,"if (testChar == '\\' && inputVersion == 2) {
return processEscape(cbuf, off, charsRead, idx, 1, ""\\\\"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,5,1,0,1,0.44,32,23
4805_38,38,38,"return processEscape(cbuf, off, charsRead, idx, 1, ""\\\\"");",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.46,33,23
4805_41,41,43,"if (testChar == '\ufffe') {
return processEscape(cbuf, off, charsRead, idx, 1, ""\\ufffe"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,5,1,0,1,0.46,36,25
4805_42,42,42,"return processEscape(cbuf, off, charsRead, idx, 1, ""\\ufffe"");",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.46,37,25
4805_45,45,47,"if (testChar == '\uffff') {
return processEscape(cbuf, off, charsRead, idx, 1, ""\\uffff"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,7,5,1,0,1,0.46,40,27
4805_46,46,46,"return processEscape(cbuf, off, charsRead, idx, 1, ""\\uffff"");",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.46,41,27
4805_50,50,50,return charsRead;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,5,1,0,1,0.48,45,29
4804_1,1,1,"protected static List<Column> createColumnsFrom(Collection<ColumnBuilder> originalColumns, Map<AName, Integer> primaryKey) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,12,1,0,4,0.65,3,2
4804_2,2,2,"final List<Column> primaryKeyColumns = new ArrayList<>(Collections.nCopies(primaryKey.size(), null));",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,17,12,1,0,3,0.61,2,1
4804_3,3,3,final List<Supplier<Column>> results = new ArrayList<>(originalColumns.size());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,17,12,1,0,2,0.48,1,0
4804_5,5,5,"Iterator<Integer> numberer = IntStream.rangeClosed(0, primaryKey.size()).iterator();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,17,12,1,0,2,0.53,0,0
4804_6,6,15,"for (ColumnBuilder column : originalColumns) {
if (primaryKey.containsKey(named(column.getName()))) {
Integer primaryKeyPosition = primaryKey.get(named(column.getName()));
primaryKeyColumns.set(primaryKeyPosition, column.primaryKey());
results.add(() -> primaryKeyColumns.get(numberer.next()));
}
else {
results.add(Suppliers.ofInstance(column));
}
}",0,0,0,1,0,0,0,0,0,6,2,10,0,1,0,1,17,12,1,0,5,0.72,1,0
4804_7,7,14,"if (primaryKey.containsKey(named(column.getName()))) {
Integer primaryKeyPosition = primaryKey.get(named(column.getName()));
primaryKeyColumns.set(primaryKeyPosition, column.primaryKey());
results.add(() -> primaryKeyColumns.get(numberer.next()));
}
else {
results.add(Suppliers.ofInstance(column));
}",1,0,0,0,0,0,0,0,0,5,1,8,0,0,0,0,17,12,1,0,4,0.69,2,1
4804_8,8,8,Integer primaryKeyPosition = primaryKey.get(named(column.getName()));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,17,12,1,0,4,0.69,3,2
4804_9,9,9,"primaryKeyColumns.set(primaryKeyPosition, column.primaryKey());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,17,12,1,0,4,0.79,4,3
4804_10,10,10,results.add(() -> primaryKeyColumns.get(numberer.next()));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,17,12,1,0,3,0.59,5,4
4804_12,12,12,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,12,1,0,0,0.29,7,6
4804_13,13,13,results.add(Suppliers.ofInstance(column));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,12,1,0,1,0.42,8,6
4804_17,17,17,return results.stream().map(Supplier::get).collect(Collectors.toList());,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,17,12,1,0,0,0.38,12,8
4803_1,1,1,"  protected Map<AName, Map<AName, ColumnBuilder>> loadAllColumns() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,10,3,0,2,0.59,50,32
4803_2,2,2,"final Map<AName, ImmutableMap.Builder<AName, ColumnBuilder>> columnMappingBuilders = Maps.toMap(tableNames.get().keySet(), k -> ImmutableMap.builder());",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,16,10,3,0,2,0.62,49,31
4803_4,4,57,"try {
final DatabaseMetaData databaseMetaData = connection.getMetaData();

try (ResultSet columnResultSet = databaseMetaData.getColumns(null, schemaName, null, null)) {
while (columnResultSet.next()) {
String tableName = columnResultSet.getString(COLUMN_TABLE_NAME);
RealName realTableName = tableNames.get().get(named(tableName));
if (realTableName == null) {
continue;
}

RealName columnName = readColumnName(columnResultSet);
try {
String typeName = columnResultSet.getString(COLUMN_TYPE_NAME);
int typeCode = columnResultSet.getInt(COLUMN_DATA_TYPE);
int width = columnResultSet.getInt(COLUMN_SIZE);
int scale = columnResultSet.getInt(COLUMN_DECIMAL_DIGITS);

try {
DataType dataType = dataTypeFromSqlType(typeCode, typeName, width);

ColumnBuilder column = SchemaUtils.column(columnName.getRealName(), dataType, width, scale);
column = setColumnNullability(realTableName, column, columnResultSet);
column = setColumnAutonumbered(realTableName, column, columnResultSet);
column = setColumnDefaultValue(realTableName, column, columnResultSet);
column = setAdditionalColumnMetadata(realTableName, column, columnResultSet);

if (log.isDebugEnabled()) {
log.debug(""Found column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}

columnMappingBuilders.get(realTableName).put(columnName, column);
}
catch (UnexpectedDataTypeException e) {
ColumnBuilder column = new UnsupportedDataTypeColumn(columnName, typeName, typeCode, width, scale, columnResultSet);

if (log.isDebugEnabled()) {
log.debug(""Found unsupported column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}

columnMappingBuilders.get(realTableName).put(columnName, column);
}
}
catch (SQLException e) {
throw new RuntimeSqlException(""Error reading metadata for column [""+columnName+""] on table [""+tableName+""]"", e);
}
}

return ImmutableMap.copyOf(Maps.transformValues(columnMappingBuilders, v -> v.build()));
}
}
catch (SQLException e) {
throw new RuntimeSqlException(e);
}",0,0,0,0,1,0,0,0,0,33,6,54,0,0,1,0,16,10,3,0,6,0.62,0,0
4803_5,5,5,final DatabaseMetaData databaseMetaData = connection.getMetaData();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,16,10,3,0,0,0.32,46,29
4803_7,7,53,"try (ResultSet columnResultSet = databaseMetaData.getColumns(null, schemaName, null, null)) {
while (columnResultSet.next()) {
String tableName = columnResultSet.getString(COLUMN_TABLE_NAME);
RealName realTableName = tableNames.get().get(named(tableName));
if (realTableName == null) {
continue;
}

RealName columnName = readColumnName(columnResultSet);
try {
String typeName = columnResultSet.getString(COLUMN_TYPE_NAME);
int typeCode = columnResultSet.getInt(COLUMN_DATA_TYPE);
int width = columnResultSet.getInt(COLUMN_SIZE);
int scale = columnResultSet.getInt(COLUMN_DECIMAL_DIGITS);

try {
DataType dataType = dataTypeFromSqlType(typeCode, typeName, width);

ColumnBuilder column = SchemaUtils.column(columnName.getRealName(), dataType, width, scale);
column = setColumnNullability(realTableName, column, columnResultSet);
column = setColumnAutonumbered(realTableName, column, columnResultSet);
column = setColumnDefaultValue(realTableName, column, columnResultSet);
column = setAdditionalColumnMetadata(realTableName, column, columnResultSet);

if (log.isDebugEnabled()) {
log.debug(""Found column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}

columnMappingBuilders.get(realTableName).put(columnName, column);
}
catch (UnexpectedDataTypeException e) {
ColumnBuilder column = new UnsupportedDataTypeColumn(columnName, typeName, typeCode, width, scale, columnResultSet);

if (log.isDebugEnabled()) {
log.debug(""Found unsupported column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}

columnMappingBuilders.get(realTableName).put(columnName, column);
}
}
catch (SQLException e) {
throw new RuntimeSqlException(""Error reading metadata for column [""+columnName+""] on table [""+tableName+""]"", e);
}
}

return ImmutableMap.copyOf(Maps.transformValues(columnMappingBuilders, v -> v.build()));
}",0,0,0,0,1,0,0,0,0,29,5,47,0,0,1,0,16,10,3,0,6,0.62,0,0
4803_8,8,50,"while (columnResultSet.next()) {
String tableName = columnResultSet.getString(COLUMN_TABLE_NAME);
RealName realTableName = tableNames.get().get(named(tableName));
if (realTableName == null) {
continue;
}

RealName columnName = readColumnName(columnResultSet);
try {
String typeName = columnResultSet.getString(COLUMN_TYPE_NAME);
int typeCode = columnResultSet.getInt(COLUMN_DATA_TYPE);
int width = columnResultSet.getInt(COLUMN_SIZE);
int scale = columnResultSet.getInt(COLUMN_DECIMAL_DIGITS);

try {
DataType dataType = dataTypeFromSqlType(typeCode, typeName, width);

ColumnBuilder column = SchemaUtils.column(columnName.getRealName(), dataType, width, scale);
column = setColumnNullability(realTableName, column, columnResultSet);
column = setColumnAutonumbered(realTableName, column, columnResultSet);
column = setColumnDefaultValue(realTableName, column, columnResultSet);
column = setAdditionalColumnMetadata(realTableName, column, columnResultSet);

if (log.isDebugEnabled()) {
log.debug(""Found column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}

columnMappingBuilders.get(realTableName).put(columnName, column);
}
catch (UnexpectedDataTypeException e) {
ColumnBuilder column = new UnsupportedDataTypeColumn(columnName, typeName, typeCode, width, scale, columnResultSet);

if (log.isDebugEnabled()) {
log.debug(""Found unsupported column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}

columnMappingBuilders.get(realTableName).put(columnName, column);
}
}
catch (SQLException e) {
throw new RuntimeSqlException(""Error reading metadata for column [""+columnName+""] on table [""+tableName+""]"", e);
}
}",0,1,0,0,0,0,0,0,0,27,4,43,0,0,0,1,16,10,3,0,3,0.56,1,0
4803_9,9,9,String tableName = columnResultSet.getString(COLUMN_TABLE_NAME);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,16,10,3,0,0,0.4,42,26
4803_10,10,10,RealName realTableName = tableNames.get().get(named(tableName));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,16,10,3,0,0,0.33,41,25
4803_11,11,13,"if (realTableName == null) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,16,10,3,0,0,0.31,38,23
4803_12,12,12,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,10,3,0,0,0.21,39,23
4803_15,15,15,RealName columnName = readColumnName(columnResultSet);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,16,10,3,0,0,0.39,36,22
4803_16,16,49,"try {
String typeName = columnResultSet.getString(COLUMN_TYPE_NAME);
int typeCode = columnResultSet.getInt(COLUMN_DATA_TYPE);
int width = columnResultSet.getInt(COLUMN_SIZE);
int scale = columnResultSet.getInt(COLUMN_DECIMAL_DIGITS);

try {
DataType dataType = dataTypeFromSqlType(typeCode, typeName, width);

ColumnBuilder column = SchemaUtils.column(columnName.getRealName(), dataType, width, scale);
column = setColumnNullability(realTableName, column, columnResultSet);
column = setColumnAutonumbered(realTableName, column, columnResultSet);
column = setColumnDefaultValue(realTableName, column, columnResultSet);
column = setAdditionalColumnMetadata(realTableName, column, columnResultSet);

if (log.isDebugEnabled()) {
log.debug(""Found column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}

columnMappingBuilders.get(realTableName).put(columnName, column);
}
catch (UnexpectedDataTypeException e) {
ColumnBuilder column = new UnsupportedDataTypeColumn(columnName, typeName, typeCode, width, scale, columnResultSet);

if (log.isDebugEnabled()) {
log.debug(""Found unsupported column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}

columnMappingBuilders.get(realTableName).put(columnName, column);
}
}
catch (SQLException e) {
throw new RuntimeSqlException(""Error reading metadata for column [""+columnName+""] on table [""+tableName+""]"", e);
}",0,0,0,0,1,0,0,0,0,21,3,34,0,1,0,0,16,10,3,0,3,0.57,2,0
4803_17,17,17,String typeName = columnResultSet.getString(COLUMN_TYPE_NAME);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,16,10,3,0,0,0.39,34,20
4803_18,18,18,int typeCode = columnResultSet.getInt(COLUMN_DATA_TYPE);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,16,10,3,0,0,0.35,33,19
4803_19,19,19,int width = columnResultSet.getInt(COLUMN_SIZE);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,16,10,3,0,0,0.38,32,18
4803_20,20,20,int scale = columnResultSet.getInt(COLUMN_DECIMAL_DIGITS);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,16,10,3,0,0,0.42,31,17
4803_22,22,45,"try {
DataType dataType = dataTypeFromSqlType(typeCode, typeName, width);

ColumnBuilder column = SchemaUtils.column(columnName.getRealName(), dataType, width, scale);
column = setColumnNullability(realTableName, column, columnResultSet);
column = setColumnAutonumbered(realTableName, column, columnResultSet);
column = setColumnDefaultValue(realTableName, column, columnResultSet);
column = setAdditionalColumnMetadata(realTableName, column, columnResultSet);

if (log.isDebugEnabled()) {
log.debug(""Found column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}

columnMappingBuilders.get(realTableName).put(columnName, column);
}
catch (UnexpectedDataTypeException e) {
ColumnBuilder column = new UnsupportedDataTypeColumn(columnName, typeName, typeCode, width, scale, columnResultSet);

if (log.isDebugEnabled()) {
log.debug(""Found unsupported column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}

columnMappingBuilders.get(realTableName).put(columnName, column);
}",0,0,0,0,1,0,0,0,0,14,2,24,0,0,1,0,16,10,3,0,3,0.57,6,2
4803_23,23,23,"DataType dataType = dataTypeFromSqlType(typeCode, typeName, width);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,16,10,3,0,0,0.33,28,15
4803_25,25,25,"ColumnBuilder column = SchemaUtils.column(columnName.getRealName(), dataType, width, scale);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,16,10,3,0,1,0.5,26,14
4803_26,26,26,"column = setColumnNullability(realTableName, column, columnResultSet);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,16,10,3,0,0,0.42,25,13
4803_27,27,27,"column = setColumnAutonumbered(realTableName, column, columnResultSet);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,16,10,3,0,0,0.4,24,12
4803_28,28,28,"column = setColumnDefaultValue(realTableName, column, columnResultSet);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,16,10,3,0,1,0.43,23,11
4803_29,29,29,"column = setAdditionalColumnMetadata(realTableName, column, columnResultSet);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,16,10,3,0,0,0.39,22,10
4803_31,31,33,"if (log.isDebugEnabled()) {
log.debug(""Found column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,16,10,3,0,0,0.39,18,8
4803_32,32,32,"log.debug(""Found column ["" + column + ""] on table ["" + tableName + ""]: "" + column);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,10,3,0,0,0.41,19,8
4803_35,35,35,"columnMappingBuilders.get(realTableName).put(columnName, column);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,16,10,3,0,2,0.55,16,7
4803_37,37,37,catch (UnexpectedDataTypeException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,10,3,0,0,0.34,14,6
4803_38,38,38,"ColumnBuilder column = new UnsupportedDataTypeColumn(columnName, typeName, typeCode, width, scale, columnResultSet);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,16,10,3,0,1,0.51,13,5
4803_40,40,42,"if (log.isDebugEnabled()) {
log.debug(""Found unsupported column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,16,10,3,0,0,0.43,9,3
4803_41,41,41,"log.debug(""Found unsupported column ["" + column + ""] on table ["" + tableName + ""]: "" + column);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,10,3,0,0,0.46,10,3
4803_44,44,44,"columnMappingBuilders.get(realTableName).put(columnName, column);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,16,10,3,0,2,0.55,7,2
4803_47,47,47,catch (SQLException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,10,3,0,0,0.28,4,1
4803_48,48,48,"throw new RuntimeSqlException(""Error reading metadata for column [""+columnName+""] on table [""+tableName+""]"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,16,10,3,0,0,0.4,3,0
4803_52,52,52,"return ImmutableMap.copyOf(Maps.transformValues(columnMappingBuilders, v -> v.build()));",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,16,10,3,0,6,0.76,0,0
4803_55,55,55,catch (SQLException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,10,3,0,0,0.28,3,1
4803_56,56,56,throw new RuntimeSqlException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,16,10,3,0,0,0.34,4,1
4802_1,1,1,"  protected Map<AName, Map<AName, ColumnBuilder>> loadAllColumns() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.5,11,9
4802_2,2,2,"final Map<AName, ImmutableMap.Builder<AName, ColumnBuilder>> columnMappingBuilders = Maps.toMap(tableNames.get().keySet(), k -> ImmutableMap.builder());",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,0,0,2,0.54,10,8
4802_4,4,57,"try {
final DatabaseMetaData databaseMetaData = connection.getMetaData();

try (ResultSet columnResultSet = databaseMetaData.getColumns(null, schemaName, null, null)) {
while (columnResultSet.next()) {
String tableName = columnResultSet.getString(COLUMN_TABLE_NAME);
RealName realTableName = tableNames.get().get(named(tableName));
if (realTableName == null) {
continue;
}

RealName columnName = readColumnName(columnResultSet);
try {
String typeName = columnResultSet.getString(COLUMN_TYPE_NAME);
int typeCode = columnResultSet.getInt(COLUMN_DATA_TYPE);
int width = columnResultSet.getInt(COLUMN_SIZE);
int scale = columnResultSet.getInt(COLUMN_DECIMAL_DIGITS);

try {
DataType dataType = dataTypeFromSqlType(typeCode, typeName, width);

ColumnBuilder column = SchemaUtils.column(columnName.getRealName(), dataType, width, scale);
column = setColumnNullability(realTableName, column, columnResultSet);
column = setColumnAutonumbered(realTableName, column, columnResultSet);
column = setColumnDefaultValue(realTableName, column, columnResultSet);
column = setAdditionalColumnMetadata(realTableName, column, columnResultSet);

if (log.isDebugEnabled()) {
log.debug(""Found column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}

columnMappingBuilders.get(realTableName).put(columnName, column);
}
catch (UnexpectedDataTypeException e) {
ColumnBuilder column = new UnsupportedDataTypeColumn(columnName, typeName, typeCode, width, scale, columnResultSet);

if (log.isDebugEnabled()) {
log.debug(""Found unsupported column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}

columnMappingBuilders.get(realTableName).put(columnName, column);
}
}
catch (SQLException e) {
throw new RuntimeSqlException(""Error reading metadata for column [""+columnName+""] on table [""+tableName+""]"", e);
}
}

return ImmutableMap.copyOf(Maps.transformValues(columnMappingBuilders, v -> v.build()));
}
}
catch (SQLException e) {
throw new RuntimeSqlException(e);
}",0,0,0,0,1,0,0,0,0,33,6,54,0,0,1,0,4,2,0,0,2,0.64,0,0
4802_5,5,5,final DatabaseMetaData databaseMetaData = connection.getMetaData();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.34,7,6
4802_7,7,53,"try (ResultSet columnResultSet = databaseMetaData.getColumns(null, schemaName, null, null)) {
while (columnResultSet.next()) {
String tableName = columnResultSet.getString(COLUMN_TABLE_NAME);
RealName realTableName = tableNames.get().get(named(tableName));
if (realTableName == null) {
continue;
}

RealName columnName = readColumnName(columnResultSet);
try {
String typeName = columnResultSet.getString(COLUMN_TYPE_NAME);
int typeCode = columnResultSet.getInt(COLUMN_DATA_TYPE);
int width = columnResultSet.getInt(COLUMN_SIZE);
int scale = columnResultSet.getInt(COLUMN_DECIMAL_DIGITS);

try {
DataType dataType = dataTypeFromSqlType(typeCode, typeName, width);

ColumnBuilder column = SchemaUtils.column(columnName.getRealName(), dataType, width, scale);
column = setColumnNullability(realTableName, column, columnResultSet);
column = setColumnAutonumbered(realTableName, column, columnResultSet);
column = setColumnDefaultValue(realTableName, column, columnResultSet);
column = setAdditionalColumnMetadata(realTableName, column, columnResultSet);

if (log.isDebugEnabled()) {
log.debug(""Found column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}

columnMappingBuilders.get(realTableName).put(columnName, column);
}
catch (UnexpectedDataTypeException e) {
ColumnBuilder column = new UnsupportedDataTypeColumn(columnName, typeName, typeCode, width, scale, columnResultSet);

if (log.isDebugEnabled()) {
log.debug(""Found unsupported column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}

columnMappingBuilders.get(realTableName).put(columnName, column);
}
}
catch (SQLException e) {
throw new RuntimeSqlException(""Error reading metadata for column [""+columnName+""] on table [""+tableName+""]"", e);
}
}

return ImmutableMap.copyOf(Maps.transformValues(columnMappingBuilders, v -> v.build()));
}",0,0,0,0,1,0,0,0,0,29,5,47,0,0,1,0,4,2,0,0,2,0.65,0,0
4802_8,8,50,"while (columnResultSet.next()) {
String tableName = columnResultSet.getString(COLUMN_TABLE_NAME);
RealName realTableName = tableNames.get().get(named(tableName));
if (realTableName == null) {
continue;
}

RealName columnName = readColumnName(columnResultSet);
try {
String typeName = columnResultSet.getString(COLUMN_TYPE_NAME);
int typeCode = columnResultSet.getInt(COLUMN_DATA_TYPE);
int width = columnResultSet.getInt(COLUMN_SIZE);
int scale = columnResultSet.getInt(COLUMN_DECIMAL_DIGITS);

try {
DataType dataType = dataTypeFromSqlType(typeCode, typeName, width);

ColumnBuilder column = SchemaUtils.column(columnName.getRealName(), dataType, width, scale);
column = setColumnNullability(realTableName, column, columnResultSet);
column = setColumnAutonumbered(realTableName, column, columnResultSet);
column = setColumnDefaultValue(realTableName, column, columnResultSet);
column = setAdditionalColumnMetadata(realTableName, column, columnResultSet);

if (log.isDebugEnabled()) {
log.debug(""Found column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}

columnMappingBuilders.get(realTableName).put(columnName, column);
}
catch (UnexpectedDataTypeException e) {
ColumnBuilder column = new UnsupportedDataTypeColumn(columnName, typeName, typeCode, width, scale, columnResultSet);

if (log.isDebugEnabled()) {
log.debug(""Found unsupported column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}

columnMappingBuilders.get(realTableName).put(columnName, column);
}
}
catch (SQLException e) {
throw new RuntimeSqlException(""Error reading metadata for column [""+columnName+""] on table [""+tableName+""]"", e);
}
}",0,1,0,0,0,0,0,0,0,27,4,43,0,0,0,1,4,2,0,0,2,0.65,0,0
4802_9,9,9,String tableName = columnResultSet.getString(COLUMN_TABLE_NAME);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,2,0.63,3,3
4802_10,10,10,RealName realTableName = tableNames.get().get(named(tableName));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.52,2,2
4802_11,11,13,"if (realTableName == null) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,4,2,0,0,1,0.5,0,0
4802_12,12,12,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.17,0,0
4802_15,15,15,RealName columnName = readColumnName(columnResultSet);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,0,0,1,0.54,2,0
4802_16,16,49,"try {
String typeName = columnResultSet.getString(COLUMN_TYPE_NAME);
int typeCode = columnResultSet.getInt(COLUMN_DATA_TYPE);
int width = columnResultSet.getInt(COLUMN_SIZE);
int scale = columnResultSet.getInt(COLUMN_DECIMAL_DIGITS);

try {
DataType dataType = dataTypeFromSqlType(typeCode, typeName, width);

ColumnBuilder column = SchemaUtils.column(columnName.getRealName(), dataType, width, scale);
column = setColumnNullability(realTableName, column, columnResultSet);
column = setColumnAutonumbered(realTableName, column, columnResultSet);
column = setColumnDefaultValue(realTableName, column, columnResultSet);
column = setAdditionalColumnMetadata(realTableName, column, columnResultSet);

if (log.isDebugEnabled()) {
log.debug(""Found column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}

columnMappingBuilders.get(realTableName).put(columnName, column);
}
catch (UnexpectedDataTypeException e) {
ColumnBuilder column = new UnsupportedDataTypeColumn(columnName, typeName, typeCode, width, scale, columnResultSet);

if (log.isDebugEnabled()) {
log.debug(""Found unsupported column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}

columnMappingBuilders.get(realTableName).put(columnName, column);
}
}
catch (SQLException e) {
throw new RuntimeSqlException(""Error reading metadata for column [""+columnName+""] on table [""+tableName+""]"", e);
}",0,0,0,0,1,0,0,0,0,21,3,34,0,1,0,0,4,2,0,0,2,0.65,3,0
4802_17,17,17,String typeName = columnResultSet.getString(COLUMN_TYPE_NAME);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.5,4,1
4802_18,18,18,int typeCode = columnResultSet.getInt(COLUMN_DATA_TYPE);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,4,2,0,0,1,0.48,5,2
4802_19,19,19,int width = columnResultSet.getInt(COLUMN_SIZE);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,4,2,0,0,1,0.52,6,3
4802_20,20,20,int scale = columnResultSet.getInt(COLUMN_DECIMAL_DIGITS);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,4,2,0,0,1,0.5,7,4
4802_22,22,45,"try {
DataType dataType = dataTypeFromSqlType(typeCode, typeName, width);

ColumnBuilder column = SchemaUtils.column(columnName.getRealName(), dataType, width, scale);
column = setColumnNullability(realTableName, column, columnResultSet);
column = setColumnAutonumbered(realTableName, column, columnResultSet);
column = setColumnDefaultValue(realTableName, column, columnResultSet);
column = setAdditionalColumnMetadata(realTableName, column, columnResultSet);

if (log.isDebugEnabled()) {
log.debug(""Found column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}

columnMappingBuilders.get(realTableName).put(columnName, column);
}
catch (UnexpectedDataTypeException e) {
ColumnBuilder column = new UnsupportedDataTypeColumn(columnName, typeName, typeCode, width, scale, columnResultSet);

if (log.isDebugEnabled()) {
log.debug(""Found unsupported column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}

columnMappingBuilders.get(realTableName).put(columnName, column);
}",0,0,0,0,1,0,0,0,0,14,2,24,0,0,1,0,4,2,0,0,2,0.67,9,6
4802_23,23,23,"DataType dataType = dataTypeFromSqlType(typeCode, typeName, width);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.35,10,6
4802_25,25,25,"ColumnBuilder column = SchemaUtils.column(columnName.getRealName(), dataType, width, scale);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,0,0,1,0.53,12,8
4802_26,26,26,"column = setColumnNullability(realTableName, column, columnResultSet);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,2,0.69,13,8
4802_27,27,27,"column = setColumnAutonumbered(realTableName, column, columnResultSet);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,2,0.66,14,9
4802_28,28,28,"column = setColumnDefaultValue(realTableName, column, columnResultSet);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,2,0.64,15,10
4802_29,29,29,"column = setAdditionalColumnMetadata(realTableName, column, columnResultSet);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,2,0.64,16,11
4802_31,31,33,"if (log.isDebugEnabled()) {
log.debug(""Found column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,0,0,2,0.69,18,13
4802_32,32,32,"log.debug(""Found column ["" + column + ""] on table ["" + tableName + ""]: "" + column);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.74,19,13
4802_35,35,35,"columnMappingBuilders.get(realTableName).put(columnName, column);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,2,0.62,22,15
4802_37,37,37,catch (UnexpectedDataTypeException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.35,24,16
4802_38,38,38,"ColumnBuilder column = new UnsupportedDataTypeColumn(columnName, typeName, typeCode, width, scale, columnResultSet);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,0,0,1,0.53,25,16
4802_40,40,42,"if (log.isDebugEnabled()) {
log.debug(""Found unsupported column ["" + column + ""] on table ["" + tableName + ""]: "" + column);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,0,0,2,0.69,27,18
4802_41,41,41,"log.debug(""Found unsupported column ["" + column + ""] on table ["" + tableName + ""]: "" + column);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.74,28,18
4802_44,44,44,"columnMappingBuilders.get(realTableName).put(columnName, column);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,2,0.62,31,20
4802_47,47,47,catch (SQLException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.38,34,21
4802_48,48,48,"throw new RuntimeSqlException(""Error reading metadata for column [""+columnName+""] on table [""+tableName+""]"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,0,0,2,0.6,35,21
4802_52,52,52,"return ImmutableMap.copyOf(Maps.transformValues(columnMappingBuilders, v -> v.build()));",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,0,0,1,0.45,39,23
4802_55,55,55,catch (SQLException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.38,42,24
4802_56,56,56,throw new RuntimeSqlException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,0,0,0,0.33,43,24
4692_1,1,1,        static boolean hasSelectedDescendants(TreeNode treeNode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,2,0.81,17,8
4692_3,3,3,Enumeration<?> children = treeNode.children();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,1,1,0,0,0.55,15,7
4692_4,4,22,"while (children.hasMoreElements()) {

TreeNode childNode = (TreeNode) children.nextElement();

Object childsUserObject =
((DefaultMutableTreeNode) childNode).getUserObject();
if (childsUserObject instanceof CheckableResource) {
CheckableResource childResource =
((CheckableResource) childsUserObject);

if (childResource.isSelected()) {
return true;
}
}

if (hasSelectedDescendants(childNode)) {
return true;
}
}",0,1,0,0,0,0,0,0,0,8,3,19,0,1,0,0,3,1,1,0,2,0.71,0,0
4692_6,6,6,TreeNode childNode = (TreeNode) children.nextElement();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,1,1,0,0,0.54,12,5
4692_8,8,9,"Object childsUserObject =
((DefaultMutableTreeNode) childNode).getUserObject();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,3,1,1,0,0,0.46,9,4
4692_10,10,17,"if (childsUserObject instanceof CheckableResource) {
CheckableResource childResource =
((CheckableResource) childsUserObject);

if (childResource.isSelected()) {
return true;
}
}",1,0,0,0,0,0,0,0,0,3,2,8,0,1,0,1,3,1,1,0,1,0.57,1,0
4692_11,11,12,"CheckableResource childResource =
((CheckableResource) childsUserObject);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,3,1,1,0,0,0.33,6,2
4692_14,14,16,"if (childResource.isSelected()) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,1,1,0,1,0.63,2,0
4692_15,15,15,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.16,3,0
4692_19,19,21,"if (hasSelectedDescendants(childNode)) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,1,1,0,2,0.79,0,0
4692_20,20,20,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.16,1,0
4692_23,23,23,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.25,4,2
4691_1,1,1,        static boolean hasSelectedDescendants(TreeNode treeNode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.67,12,6
4691_3,3,3,Enumeration<?> children = treeNode.children();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,1,1,0,0,0.29,10,5
4691_4,4,22,"while (children.hasMoreElements()) {

TreeNode childNode = (TreeNode) children.nextElement();

Object childsUserObject =
((DefaultMutableTreeNode) childNode).getUserObject();
if (childsUserObject instanceof CheckableResource) {
CheckableResource childResource =
((CheckableResource) childsUserObject);

if (childResource.isSelected()) {
return true;
}
}

if (hasSelectedDescendants(childNode)) {
return true;
}
}",0,1,0,0,0,0,0,0,0,8,3,19,0,1,0,0,2,1,1,0,1,0.59,0,0
4691_6,6,6,TreeNode childNode = (TreeNode) children.nextElement();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,1,1,0,0,0.27,7,3
4691_8,8,9,"Object childsUserObject =
((DefaultMutableTreeNode) childNode).getUserObject();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,2,1,1,0,0,0.25,4,2
4691_10,10,17,"if (childsUserObject instanceof CheckableResource) {
CheckableResource childResource =
((CheckableResource) childsUserObject);

if (childResource.isSelected()) {
return true;
}
}",1,0,0,0,0,0,0,0,0,3,2,8,0,1,0,1,2,1,1,0,1,0.58,0,0
4691_11,11,12,"CheckableResource childResource =
((CheckableResource) childsUserObject);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,2,1,1,0,0,0.12,1,0
4691_14,14,16,"if (childResource.isSelected()) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,2,1,1,0,1,0.66,0,0
4691_15,15,15,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.17,1,0
4691_19,19,21,"if (hasSelectedDescendants(childNode)) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,2,1,1,0,1,0.65,5,2
4691_20,20,20,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.17,6,2
4691_23,23,23,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.2,9,4
4690_1,1,2,"        static void checkOrUncheckParentNodesRecursively(TreeNode node,
boolean checkParentNode) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,1,1,0.61,25,15
4690_4,4,6,"if (node == null) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,1,0,0.34,21,13
4690_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,1,0,0.22,22,13
4690_8,8,8,TreeNode parentNode = node.getParent();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,1,0,0.51,19,12
4690_9,9,11,"if (parentNode == null) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,3,0,1,0,0.36,16,10
4690_10,10,10,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,1,0,0.22,17,10
4690_13,13,14,"Object parentUserObject =
((DefaultMutableTreeNode) parentNode).getUserObject();",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,3,3,0,1,0,0.49,13,9
4690_16,16,16,CheckableResource parentNodeResource = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,1,0,0.37,11,8
4690_17,17,19,"if (parentUserObject instanceof CheckableResource) {
parentNodeResource = ((CheckableResource) parentUserObject);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,3,0,1,0,0.38,8,6
4690_18,18,18,parentNodeResource = ((CheckableResource) parentUserObject);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,1,0,0.37,9,6
4690_21,21,33,"if (parentNodeResource != null) {

if (parentNodeResource.isSelected() == checkParentNode) {
return;
} else if (checkParentNode) {
parentNodeResource.setSelected(true);
} else {

if (doesNotHaveSelectedChildren(parentNode)) {
parentNodeResource.setSelected(false);
}
}
}",1,0,0,0,0,0,0,0,0,7,3,13,0,0,1,1,3,3,0,1,1,0.58,0,0
4690_23,23,32,"if (parentNodeResource.isSelected() == checkParentNode) {
return;
} else if (checkParentNode) {
parentNodeResource.setSelected(true);
} else {

if (doesNotHaveSelectedChildren(parentNode)) {
parentNodeResource.setSelected(false);
}
}",1,0,0,0,0,0,0,0,0,6,2,10,0,0,1,0,3,3,0,1,1,0.59,0,0
4690_24,24,24,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,1,0,0.22,3,3
4690_25,25,25,} else if (checkParentNode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,1,0,0.45,2,2
4690_26,26,26,parentNodeResource.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,1,1,0.57,1,1
4690_27,27,27,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,1,0,0.3,0,0
4690_29,29,31,"if (doesNotHaveSelectedChildren(parentNode)) {
parentNodeResource.setSelected(false);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,3,0,1,1,0.6,1,0
4690_30,30,30,parentNodeResource.setSelected(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,1,1,0.57,2,0
4690_35,35,36,"checkOrUncheckParentNodesRecursively(parentNode,
checkParentNode);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,3,3,0,1,1,0.59,7,2
4689_1,1,3,"        public Component getTreeCellRendererComponent(JTree tree, Object value,
boolean isNodeSelected, boolean isNodeExpanded, boolean isLeaf,
int row, boolean hasFocus) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,5,5,0,0,3,0.66,13,8
4689_5,5,5,"String stringValue = """";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,0,0.28,11,7
4689_6,6,11,"if (value != null) {
String toStringValue = value.toString();
if (toStringValue != null) {
stringValue = toStringValue;
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,1,5,5,0,0,0,0.29,5,3
4689_7,7,7,String toStringValue = value.toString();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.27,9,5
4689_8,8,10,"if (toStringValue != null) {
stringValue = toStringValue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,5,0,0,0,0.29,6,3
4689_9,9,9,stringValue = toStringValue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.27,7,3
4689_13,13,13,renderer.setSelected(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,2,0.61,3,2
4689_14,14,14,renderer.setText(stringValue);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.49,2,1
4689_15,15,15,renderer.setEnabled(tree.isEnabled());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,5,0,0,1,0.49,1,0
4689_17,17,23,"if (isNodeSelected) {
renderer.setForeground(selectionForeground);
renderer.setBackground(selectionBackground);
} else {
renderer.setForeground(textForeground);
renderer.setBackground(textBackground);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,1,1,5,5,0,0,3,0.68,0,0
4689_18,18,18,renderer.setForeground(selectionForeground);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.62,1,0
4689_19,19,19,renderer.setBackground(selectionBackground);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.61,2,1
4689_20,20,20,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.28,3,2
4689_21,21,21,renderer.setForeground(textForeground);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.51,4,3
4689_22,22,22,renderer.setBackground(textBackground);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.51,5,4
4689_25,25,48,"if (value != null) {
if (value instanceof DefaultMutableTreeNode) {

DefaultMutableTreeNode node =
(DefaultMutableTreeNode) value;

Object userObject = node.getUserObject();
if (userObject instanceof CheckableResource) {

CheckableResource resource = (CheckableResource) userObject;
renderer.setText(resource.getText());
renderer.setSelected(resource.isSelected());
renderer.setEnabled(resource.isEnabled());

String hyperLink = resource.getResourceLocator().getFeatureInfoURL();
if (hyperLink == null) {
renderer.showHyperLink(false);
} else {
renderer.setHyperLink(hyperLink);
renderer.showHyperLink(true);
}
}
}
}",1,0,0,0,0,0,0,0,0,14,4,24,0,0,1,1,5,5,0,0,3,0.63,8,6
4689_26,26,47,"if (value instanceof DefaultMutableTreeNode) {

DefaultMutableTreeNode node =
(DefaultMutableTreeNode) value;

Object userObject = node.getUserObject();
if (userObject instanceof CheckableResource) {

CheckableResource resource = (CheckableResource) userObject;
renderer.setText(resource.getText());
renderer.setSelected(resource.isSelected());
renderer.setEnabled(resource.isEnabled());

String hyperLink = resource.getResourceLocator().getFeatureInfoURL();
if (hyperLink == null) {
renderer.showHyperLink(false);
} else {
renderer.setHyperLink(hyperLink);
renderer.showHyperLink(true);
}
}
}",1,0,0,0,0,0,0,0,0,13,3,22,0,0,0,0,5,5,0,0,3,0.63,9,6
4689_28,28,29,"DefaultMutableTreeNode node =
(DefaultMutableTreeNode) value;",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,5,5,0,0,1,0.56,11,8
4689_31,31,31,Object userObject = node.getUserObject();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,1,0.39,14,9
4689_32,32,46,"if (userObject instanceof CheckableResource) {

CheckableResource resource = (CheckableResource) userObject;
renderer.setText(resource.getText());
renderer.setSelected(resource.isSelected());
renderer.setEnabled(resource.isEnabled());

String hyperLink = resource.getResourceLocator().getFeatureInfoURL();
if (hyperLink == null) {
renderer.showHyperLink(false);
} else {
renderer.setHyperLink(hyperLink);
renderer.showHyperLink(true);
}
}",1,0,0,0,0,0,0,0,0,10,2,15,0,1,0,0,5,5,0,0,2,0.57,15,9
4689_34,34,34,CheckableResource resource = (CheckableResource) userObject;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,0,0.27,17,11
4689_35,35,35,renderer.setText(resource.getText());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.51,18,11
4689_36,36,36,renderer.setSelected(resource.isSelected());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.67,19,12
4689_37,37,37,renderer.setEnabled(resource.isEnabled());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,1,0.46,20,13
4689_39,39,39,String hyperLink = resource.getResourceLocator().getFeatureInfoURL();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,0,0.41,22,15
4689_40,40,45,"if (hyperLink == null) {
renderer.showHyperLink(false);
} else {
renderer.setHyperLink(hyperLink);
renderer.showHyperLink(true);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,5,5,0,0,1,0.52,23,15
4689_41,41,41,renderer.showHyperLink(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.53,24,16
4689_42,42,42,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.28,25,17
4689_43,43,43,renderer.setHyperLink(hyperLink);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.52,26,18
4689_44,44,44,renderer.showHyperLink(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.54,27,19
4689_50,50,50,return renderer;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,5,0,0,1,0.51,33,21
4688_1,1,3,"        public Component getTreeCellRendererComponent(JTree tree, Object value,
boolean isNodeSelected, boolean isNodeExpanded, boolean isLeaf,
int row, boolean hasFocus) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,4,3,0,0,1,0.47,1,0
4688_5,5,5,"String stringValue = """";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,2,0.9,0,0
4688_6,6,11,"if (value != null) {
String toStringValue = value.toString();
if (toStringValue != null) {
stringValue = toStringValue;
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,1,4,3,0,0,2,0.84,1,0
4688_7,7,7,String toStringValue = value.toString();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,2,0.9,2,1
4688_8,8,10,"if (toStringValue != null) {
stringValue = toStringValue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,2,0.84,3,2
4688_9,9,9,stringValue = toStringValue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.9,4,3
4688_13,13,13,renderer.setSelected(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.3,8,5
4688_14,14,14,renderer.setText(stringValue);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.7,9,5
4688_15,15,15,renderer.setEnabled(tree.isEnabled());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.28,10,6
4688_17,17,23,"if (isNodeSelected) {
renderer.setForeground(selectionForeground);
renderer.setBackground(selectionBackground);
} else {
renderer.setForeground(textForeground);
renderer.setBackground(textBackground);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,1,1,4,3,0,0,0,0.32,12,8
4688_18,18,18,renderer.setForeground(selectionForeground);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.33,13,8
4688_19,19,19,renderer.setBackground(selectionBackground);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.28,14,9
4688_20,20,20,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.23,15,10
4688_21,21,21,renderer.setForeground(textForeground);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.34,16,11
4688_22,22,22,renderer.setBackground(textBackground);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.3,17,12
4688_25,25,48,"if (value != null) {
if (value instanceof DefaultMutableTreeNode) {

DefaultMutableTreeNode node =
(DefaultMutableTreeNode) value;

Object userObject = node.getUserObject();
if (userObject instanceof CheckableResource) {

CheckableResource resource = (CheckableResource) userObject;
renderer.setText(resource.getText());
renderer.setSelected(resource.isSelected());
renderer.setEnabled(resource.isEnabled());

String hyperLink = resource.getResourceLocator().getFeatureInfoURL();
if (hyperLink == null) {
renderer.showHyperLink(false);
} else {
renderer.setHyperLink(hyperLink);
renderer.showHyperLink(true);
}
}
}
}",1,0,0,0,0,0,0,0,0,14,4,24,0,0,1,1,4,3,0,0,2,0.57,20,14
4688_26,26,47,"if (value instanceof DefaultMutableTreeNode) {

DefaultMutableTreeNode node =
(DefaultMutableTreeNode) value;

Object userObject = node.getUserObject();
if (userObject instanceof CheckableResource) {

CheckableResource resource = (CheckableResource) userObject;
renderer.setText(resource.getText());
renderer.setSelected(resource.isSelected());
renderer.setEnabled(resource.isEnabled());

String hyperLink = resource.getResourceLocator().getFeatureInfoURL();
if (hyperLink == null) {
renderer.showHyperLink(false);
} else {
renderer.setHyperLink(hyperLink);
renderer.showHyperLink(true);
}
}
}",1,0,0,0,0,0,0,0,0,13,3,22,0,0,0,0,4,3,0,0,2,0.57,21,14
4688_28,28,29,"DefaultMutableTreeNode node =
(DefaultMutableTreeNode) value;",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,4,3,0,0,1,0.47,23,16
4688_31,31,31,Object userObject = node.getUserObject();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.32,26,17
4688_32,32,46,"if (userObject instanceof CheckableResource) {

CheckableResource resource = (CheckableResource) userObject;
renderer.setText(resource.getText());
renderer.setSelected(resource.isSelected());
renderer.setEnabled(resource.isEnabled());

String hyperLink = resource.getResourceLocator().getFeatureInfoURL();
if (hyperLink == null) {
renderer.showHyperLink(false);
} else {
renderer.setHyperLink(hyperLink);
renderer.showHyperLink(true);
}
}",1,0,0,0,0,0,0,0,0,10,2,15,0,1,0,0,4,3,0,0,1,0.45,27,17
4688_34,34,34,CheckableResource resource = (CheckableResource) userObject;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.28,29,19
4688_35,35,35,renderer.setText(resource.getText());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.34,30,19
4688_36,36,36,renderer.setSelected(resource.isSelected());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.33,31,20
4688_37,37,37,renderer.setEnabled(resource.isEnabled());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,0,0.3,32,21
4688_39,39,39,String hyperLink = resource.getResourceLocator().getFeatureInfoURL();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,1,0.47,34,23
4688_40,40,45,"if (hyperLink == null) {
renderer.showHyperLink(false);
} else {
renderer.setHyperLink(hyperLink);
renderer.showHyperLink(true);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,4,3,0,0,0,0.31,35,23
4688_41,41,41,renderer.showHyperLink(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.27,36,24
4688_42,42,42,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.23,37,25
4688_43,43,43,renderer.setHyperLink(hyperLink);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,38,26
4688_44,44,44,renderer.showHyperLink(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.29,39,27
4688_50,50,50,return renderer;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.22,45,29
4687_1,1,1,"private void buildLocatorTree(DefaultMutableTreeNode treeNode, Element xmlNode) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,2,0,0,0.46,60,37
4687_3,3,3,"String name = getAttribute(xmlNode, NAME.getText());",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,3,2,0,0,0.4,58,36
4687_5,5,8,"ResourceLocator locator = new ResourceLocator(
getAttribute(xmlNode, URL.getText()),
getAttribute(xmlNode, PATH.getText())
);",0,0,0,0,0,1,0,0,0,0,0,4,0,1,1,0,5,3,2,0,1,0.49,53,35
4687_9,9,9,locator.setName(name);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,2,0,1,0.46,52,34
4687_11,11,41,"if (xmlNode.getTagName().equalsIgnoreCase(""Resource"")) {

String resourceType = getAttribute(xmlNode, RESOURCE_TYPE.getText());
locator.setType(resourceType);

String infoLink = getAttribute(xmlNode, HYPERLINK.getText());
if (infoLink == null) {
infoLink = getAttribute(xmlNode, INFOLINK.getText());
}
locator.setFeatureInfoURL(infoLink);

String sampleId = getAttribute(xmlNode, SAMPLE_ID.getText());
if (sampleId == null) {
sampleId = getAttribute(xmlNode, ID.getText());
}
locator.setSampleId(sampleId);
locator.setDescription(getAttribute(xmlNode, DESCRIPTION.getText()));
locator.setTrackLine(getAttribute(xmlNode, TRACK_LINE.getText()));
locator.setName(name);
locator.setCoverage(getAttribute(xmlNode, COVERAGE.getText()));

String colorString = getAttribute(xmlNode, COLOR.getText());
if (colorString != null) {
try {
Color c = ColorUtilities.stringToColor(colorString);
locator.setColor(c);
} catch (Exception e) {
System.err.println(""Error setting color: "" + e.getLocalizedMessage());
}
}
}",1,0,0,0,0,0,0,0,0,21,3,31,0,0,1,1,5,3,2,0,2,0.56,20,12
4687_13,13,13,"String resourceType = getAttribute(xmlNode, RESOURCE_TYPE.getText());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,2,0,1,0.5,48,32
4687_14,14,14,locator.setType(resourceType);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,2,0,2,0.57,47,31
4687_16,16,16,"String infoLink = getAttribute(xmlNode, HYPERLINK.getText());",0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,5,3,2,0,0,0.4,45,30
4687_17,17,19,"if (infoLink == null) {
infoLink = getAttribute(xmlNode, INFOLINK.getText());
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,3,2,0,0,0.39,42,28
4687_18,18,18,"infoLink = getAttribute(xmlNode, INFOLINK.getText());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,2,0,0,0.4,43,28
4687_20,20,20,locator.setFeatureInfoURL(infoLink);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,2,0,1,0.44,41,27
4687_22,22,22,"String sampleId = getAttribute(xmlNode, SAMPLE_ID.getText());",0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,5,3,2,0,0,0.43,39,26
4687_23,23,25,"if (sampleId == null) {
sampleId = getAttribute(xmlNode, ID.getText());
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,3,2,0,0,0.43,36,24
4687_24,24,24,"sampleId = getAttribute(xmlNode, ID.getText());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,2,0,0,0.43,37,24
4687_26,26,26,locator.setSampleId(sampleId);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,2,0,1,0.51,35,23
4687_27,27,27,"locator.setDescription(getAttribute(xmlNode, DESCRIPTION.getText()));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,3,2,0,1,0.51,34,22
4687_28,28,28,"locator.setTrackLine(getAttribute(xmlNode, TRACK_LINE.getText()));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,3,2,0,1,0.51,33,21
4687_29,29,29,locator.setName(name);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,2,0,1,0.46,32,20
4687_30,30,30,"locator.setCoverage(getAttribute(xmlNode, COVERAGE.getText()));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,2,0,1,0.52,31,19
4687_32,32,32,"String colorString = getAttribute(xmlNode, COLOR.getText());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,2,0,0,0.42,29,18
4687_33,33,40,"if (colorString != null) {
try {
Color c = ColorUtilities.stringToColor(colorString);
locator.setColor(c);
} catch (Exception e) {
System.err.println(""Error setting color: "" + e.getLocalizedMessage());
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,0,5,3,2,0,1,0.43,21,12
4687_34,34,39,"try {
Color c = ColorUtilities.stringToColor(colorString);
locator.setColor(c);
} catch (Exception e) {
System.err.println(""Error setting color: "" + e.getLocalizedMessage());
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,0,0,5,3,2,0,1,0.43,22,12
4687_35,35,35,Color c = ColorUtilities.stringToColor(colorString);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,2,0,0,0.37,26,15
4687_36,36,36,locator.setColor(c);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,2,0,1,0.53,25,14
4687_37,37,37,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,2,0,0,0.12,24,13
4687_38,38,38,"System.err.println(""Error setting color: "" + e.getLocalizedMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,2,0,1,0.43,23,12
4687_43,43,43,NodeList nodeList = xmlNode.getChildNodes();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,3,2,0,0,0.47,18,11
4687_44,44,44,Node xmlChildNode;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,3,2,0,0,0.5,17,10
4687_46,46,60,"for (int i = 0; i < nodeList.getLength(); i++) {

xmlChildNode = nodeList.item(i);
String nodeName = xmlChildNode.getNodeName();
if (nodeName.equalsIgnoreCase(""#text"")) {
continue;
}

if (xmlChildNode instanceof Element) {
String categoryLabel = getAttribute((Element) xmlChildNode, NAME.getText());
DefaultMutableTreeNode treeChildNode = new DefaultMutableTreeNode(categoryLabel);
treeNode.add(treeChildNode);
buildLocatorTree(treeChildNode, (Element) xmlChildNode);
}
}",0,0,1,0,0,0,0,0,0,9,2,15,0,0,1,1,5,3,2,0,0,0.46,1,0
4687_48,48,48,xmlChildNode = nodeList.item(i);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,5,3,2,0,0,0.46,13,8
4687_49,49,49,String nodeName = xmlChildNode.getNodeName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,2,0,0,0.45,12,7
4687_50,50,52,"if (nodeName.equalsIgnoreCase(""#text"")) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,5,3,2,0,0,0.35,9,5
4687_51,51,51,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,2,0,0,0.23,10,5
4687_54,54,59,"if (xmlChildNode instanceof Element) {
String categoryLabel = getAttribute((Element) xmlChildNode, NAME.getText());
DefaultMutableTreeNode treeChildNode = new DefaultMutableTreeNode(categoryLabel);
treeNode.add(treeChildNode);
buildLocatorTree(treeChildNode, (Element) xmlChildNode);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,1,0,5,3,2,0,0,0.47,2,0
4687_55,55,55,"String categoryLabel = getAttribute((Element) xmlChildNode, NAME.getText());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,2,0,0,0.42,6,3
4687_56,56,56,DefaultMutableTreeNode treeChildNode = new DefaultMutableTreeNode(categoryLabel);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,2,0,0,0.46,5,2
4687_57,57,57,treeNode.add(treeChildNode);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,2,0,0,0.5,4,1
4687_58,58,58,"buildLocatorTree(treeChildNode, (Element) xmlChildNode);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,2,0,0,0.47,3,0
4687_62,62,72,"if (treeNode.isLeaf()) {
CheckableResource resource = new CheckableResource(name, false, locator);
treeNode.setUserObject(resource);
treeNode.setAllowsChildren(false);
leafResources.add(resource);
} else {
locator = new ResourceLocator(name);
CheckableResource resource = new CheckableResource(name, false, locator);
treeNode.setUserObject(resource);
treeNode.setAllowsChildren(true);
}",1,0,0,0,0,0,0,0,0,9,1,11,0,0,1,0,5,3,2,0,3,0.67,0,0
4687_63,63,63,"CheckableResource resource = new CheckableResource(name, false, locator);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,2,0,1,0.49,1,0
4687_64,64,64,treeNode.setUserObject(resource);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,2,0,2,0.65,2,1
4687_65,65,65,treeNode.setAllowsChildren(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,2,0,1,0.56,3,2
4687_66,66,66,leafResources.add(resource);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,2,0,2,0.71,4,3
4687_67,67,67,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,2,0,0,0.25,5,4
4687_68,68,68,locator = new ResourceLocator(name);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,2,0,1,0.43,6,5
4687_69,69,69,"CheckableResource resource = new CheckableResource(name, false, locator);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,2,0,1,0.49,7,6
4687_70,70,70,treeNode.setUserObject(resource);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,2,0,2,0.65,8,7
4687_71,71,71,treeNode.setAllowsChildren(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,2,0,1,0.56,9,8
4686_1,1,1,private DefaultMutableTreeNode createTreeFromDOM(Document document) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,2,0.64,17,8
4686_3,3,4,"Element rootElement =
(Element) document.getElementsByTagName(GLOBAL).item(0);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,6,4,1,0,1,0.48,14,7
4686_6,6,8,"if (rootElement == null) {
return new DefaultMutableTreeNode("""");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,4,1,0,3,0.68,10,5
4686_7,7,7,"return new DefaultMutableTreeNode("""");",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,2,0.62,11,5
4686_10,10,10,String nodeName = rootElement.getNodeName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,1,0,2,0.61,8,4
4686_11,11,14,"if (!nodeName.equalsIgnoreCase(GLOBAL)) {
throw new RuntimeException(rootElement +
"" is not the root of the xml document!"");
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,6,4,1,0,2,0.54,4,2
4686_12,12,13,"throw new RuntimeException(rootElement +
"" is not the root of the xml document!"");",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,6,4,1,0,1,0.51,5,2
4686_16,16,16,"String rootLabel = getAttribute(rootElement, ""name"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,1,0,1,0.56,2,1
4686_17,17,17,DefaultMutableTreeNode rootNode = new DefaultMutableTreeNode(rootLabel);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,6,4,1,0,3,0.75,1,0
4686_19,19,19,"buildLocatorTree(rootNode, rootElement);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,1,0,4,0.85,0,0
4686_21,21,21,return rootNode;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,4,1,0,2,0.69,2,1
4685_1,1,1,public void showResourceTreeDialog(JFrame parent) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.34,44,30
4685_2,2,2,newLocators = new LinkedHashSet<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.26,43,29
4685_3,3,3,deselectedLocators = new LinkedHashSet<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,1,1,0,1,0.26,42,28
4685_5,5,5,"dialog = new JDialog(parent, ""Available Features"", true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,1,1,0,0,0.35,40,27
4685_7,7,7,JPanel treePanel = new JPanel(new BorderLayout());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,1,1,0,0,0.34,38,26
4685_8,8,8,JScrollPane pane = new JScrollPane(dialogTree);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.35,37,25
4685_9,9,9,"treePanel.add(pane, BorderLayout.CENTER);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,1,1,0,1,0.45,36,24
4685_11,11,11,"pane.setPreferredSize(new Dimension(650, 500));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,1,1,0,0,0.31,34,23
4685_12,12,12,pane.setOpaque(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.25,33,22
4685_13,13,13,Color backGroundColor = HiCGlobals.isDarkulaModeEnabled ? Color.BLACK : Color.WHITE;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,1,0.46,32,21
4685_14,14,14,pane.setBackground(backGroundColor);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,1,0.45,31,20
4685_15,15,15,pane.setViewportView(dialogTree);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,1,1,0,0,0.26,30,19
4685_17,17,17,dialog.setBackground(backGroundColor);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,4,1,1,0,1,0.42,28,18
4685_18,18,18,dialog.getContentPane().setBackground(backGroundColor);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,1,1,0,1,0.42,27,17
4685_20,20,20,Component[] children = treePanel.getComponents();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,1,1,0,0,0.31,25,16
4685_21,21,25,"if (children != null) {
for (Component child : children) {
child.setBackground(backGroundColor);
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,1,0,1,4,1,1,0,1,0.46,20,13
4685_22,22,24,"for (Component child : children) {
child.setBackground(backGroundColor);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,4,1,1,0,1,0.43,21,13
4685_23,23,23,child.setBackground(backGroundColor);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,1,0.41,22,13
4685_27,27,27,JPanel buttonPanel = new JPanel();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,1,1,0,0,0.35,18,12
4685_28,28,28,"JButton okButton = new JButton(""OK"");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.35,17,11
4685_29,29,29,"JButton cancelButton = new JButton(""Cancel"");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,1,1,0,0,0.43,16,10
4685_31,31,31,cancelButton.addActionListener(new ActionListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,1,1,0,1,0.52,14,9
4685_32,32,33,"@Override
public void actionPerformed(ActionEvent actionEvent) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,1,1,0,0,0.29,12,8
4685_35,35,35,dialog.dispose();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,1,1,0,0,0.4,10,7
4685_36,36,36,LinkedHashSet<ResourceLocator> selectedLocators = getSelectedResourceLocators();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.28,9,6
4685_37,37,37,LinkedHashSet<ResourceLocator> newlyAddedLocators = new LinkedHashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.29,8,5
4685_38,38,42,"for (ResourceLocator locator : selectedLocators) {
if (!loadedLocators.contains(locator)) {
newlyAddedLocators.add(locator);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,1,0,0,4,1,1,0,1,0.43,3,2
4685_39,39,41,"if (!loadedLocators.contains(locator)) {
newlyAddedLocators.add(locator);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,1,1,0,1,0.44,4,2
4685_40,40,40,newlyAddedLocators.add(locator);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,1,0.47,5,2
4685_43,43,45,"for (ResourceLocator locator : newlyAddedLocators) {
remove(locator);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,0,4,1,1,0,0,0.28,0,0
4685_44,44,44,remove(locator);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.29,1,0
4685_46,46,48,"for (ResourceLocator locator : loadedLocators) {
addBack(locator);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,4,1,1,0,2,0.59,0,0
4685_47,47,47,addBack(locator);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,2,0.74,1,0
4685_53,53,53,okButton.addActionListener(new ActionListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,1,1,0,1,0.48,7,2
4685_54,54,55,"@Override
public void actionPerformed(ActionEvent actionEvent) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,1,1,0,0,0.29,8,2
4685_56,56,56,dialog.dispose();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.4,10,4
4685_57,57,57,LinkedHashSet<ResourceLocator> selectedLocators = getSelectedResourceLocators();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.28,11,4
4685_58,58,62,"for (ResourceLocator locator : selectedLocators) {
if (!loadedLocators.contains(locator)) {
newLocators.add(locator);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,1,1,0,0,4,1,1,0,1,0.42,12,5
4685_59,59,61,"if (!loadedLocators.contains(locator)) {
newLocators.add(locator);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,1,1,0,1,0.43,13,6
4685_60,60,60,newLocators.add(locator);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,1,0.46,14,7
4685_63,63,67,"for (ResourceLocator locator : loadedLocators) {
if (!selectedLocators.contains(locator)) {
deselectedLocators.add(locator);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,1,1,0,0,4,1,1,0,2,0.42,17,9
4685_64,64,66,"if (!selectedLocators.contains(locator)) {
deselectedLocators.add(locator);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,1,1,0,2,0.45,18,9
4685_65,65,65,deselectedLocators.add(locator);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,2,0.48,19,10
4685_68,68,68,loadedLocators.addAll(newLocators);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,1,0.45,22,12
4685_69,69,71,"for (ResourceLocator locator : deselectedLocators) {
loadedLocators.remove(locator);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,4,1,1,0,1,0.27,23,12
4685_70,70,70,loadedLocators.remove(locator);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.28,24,13
4685_72,72,72,dialogTree.clearSelection();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.28,26,15
4685_76,76,76,buttonPanel.add(okButton);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,4,1,1,0,1,0.47,30,16
4685_77,77,77,buttonPanel.add(cancelButton);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,1,1,0,1,0.55,31,16
4685_79,79,79,dialog.add(treePanel);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,4,1,1,0,1,0.49,33,18
4685_80,80,80,"dialog.add(buttonPanel, BorderLayout.PAGE_END);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,1,1,0,1,0.44,34,18
4685_82,82,82,dialog.setResizable(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,1,1,0,0,0.24,36,20
4685_83,83,83,dialog.pack();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,1,1,0,0,0.29,37,20
4685_85,85,85,dialog.setLocationRelativeTo(parent);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,1,1,0,0,0.27,39,22
4685_86,86,86,dialog.setVisible(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,1,1,0,0,0.25,40,22
4684_1,1,1,public void showResourceTreeDialog(JFrame parent) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.37,41,28
4684_2,2,2,newLocators = new LinkedHashSet<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.32,40,27
4684_3,3,3,deselectedLocators = new LinkedHashSet<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,1,0,0,0.32,39,26
4684_5,5,5,"dialog = new JDialog(parent, ""Available Features"", true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,1,0,0,0.37,37,25
4684_7,7,7,JPanel treePanel = new JPanel(new BorderLayout());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,3,1,0,0,0.39,35,24
4684_8,8,8,JScrollPane pane = new JScrollPane(dialogTree);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.37,34,23
4684_9,9,9,"treePanel.add(pane, BorderLayout.CENTER);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,3,1,0,0,0.34,33,22
4684_11,11,11,"pane.setPreferredSize(new Dimension(650, 500));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,3,1,0,0,0.39,31,21
4684_12,12,12,pane.setOpaque(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.28,30,20
4684_13,13,13,Color backGroundColor = HiCGlobals.isDarkulaModeEnabled ? Color.BLACK : Color.WHITE;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.44,29,19
4684_14,14,14,pane.setBackground(backGroundColor);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.4,28,18
4684_15,15,15,pane.setViewportView(dialogTree);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,3,1,0,0,0.3,27,17
4684_17,17,17,dialog.setBackground(backGroundColor);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,6,3,1,0,1,0.39,25,16
4684_18,18,18,dialog.getContentPane().setBackground(backGroundColor);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,6,3,1,0,1,0.4,24,15
4684_20,20,20,Component[] children = treePanel.getComponents();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,1,0,0,0.36,22,14
4684_21,21,25,"if (children != null) {
for (Component child : children) {
child.setBackground(backGroundColor);
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,1,0,1,6,3,1,0,1,0.42,17,11
4684_22,22,24,"for (Component child : children) {
child.setBackground(backGroundColor);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,6,3,1,0,1,0.42,18,11
4684_23,23,23,child.setBackground(backGroundColor);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.4,19,11
4684_27,27,27,JPanel buttonPanel = new JPanel();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,3,1,0,0,0.39,15,10
4684_28,28,28,"JButton okButton = new JButton(""OK"");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.41,14,9
4684_29,29,29,"JButton cancelButton = new JButton(""Cancel"");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,3,1,0,0,0.42,13,8
4684_31,31,31,cancelButton.addActionListener(new ActionListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,1,0,0,0.4,11,7
4684_32,32,33,"@Override
public void actionPerformed(ActionEvent actionEvent) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,1,0,0,0.33,9,6
4684_35,35,35,dialog.dispose();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,1,0,0,0.45,7,5
4684_36,36,36,LinkedHashSet<ResourceLocator> selectedLocators = getSelectedResourceLocators();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.44,6,4
4684_37,37,37,LinkedHashSet<ResourceLocator> newlyAddedLocators = new LinkedHashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.35,5,3
4684_38,38,42,"for (ResourceLocator locator : selectedLocators) {
if (!loadedLocators.contains(locator)) {
newlyAddedLocators.add(locator);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,1,0,0,6,3,1,0,1,0.41,0,0
4684_39,39,41,"if (!loadedLocators.contains(locator)) {
newlyAddedLocators.add(locator);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,3,1,0,0,0.34,1,0
4684_40,40,40,newlyAddedLocators.add(locator);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.35,2,0
4684_43,43,45,"for (ResourceLocator locator : newlyAddedLocators) {
remove(locator);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,0,6,3,1,0,1,0.44,0,0
4684_44,44,44,remove(locator);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.51,1,0
4684_46,46,48,"for (ResourceLocator locator : loadedLocators) {
addBack(locator);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,6,3,1,0,1,0.41,3,2
4684_47,47,47,addBack(locator);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.46,4,2
4684_53,53,53,okButton.addActionListener(new ActionListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,1,0,0,0.39,10,4
4684_54,54,55,"@Override
public void actionPerformed(ActionEvent actionEvent) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,1,0,0,0.33,11,4
4684_56,56,56,dialog.dispose();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.45,13,6
4684_57,57,57,LinkedHashSet<ResourceLocator> selectedLocators = getSelectedResourceLocators();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.44,14,6
4684_58,58,62,"for (ResourceLocator locator : selectedLocators) {
if (!loadedLocators.contains(locator)) {
newLocators.add(locator);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,1,1,0,0,6,3,1,0,1,0.4,15,7
4684_59,59,61,"if (!loadedLocators.contains(locator)) {
newLocators.add(locator);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,3,1,0,0,0.31,16,8
4684_60,60,60,newLocators.add(locator);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.28,17,9
4684_63,63,67,"for (ResourceLocator locator : loadedLocators) {
if (!selectedLocators.contains(locator)) {
deselectedLocators.add(locator);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,1,1,0,0,6,3,1,0,1,0.4,20,11
4684_64,64,66,"if (!selectedLocators.contains(locator)) {
deselectedLocators.add(locator);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,3,1,0,1,0.4,21,11
4684_65,65,65,deselectedLocators.add(locator);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.27,22,12
4684_68,68,68,loadedLocators.addAll(newLocators);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.32,25,14
4684_69,69,71,"for (ResourceLocator locator : deselectedLocators) {
loadedLocators.remove(locator);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,6,3,1,0,1,0.41,26,14
4684_70,70,70,loadedLocators.remove(locator);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.46,27,15
4684_72,72,72,dialogTree.clearSelection();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.45,29,17
4684_76,76,76,buttonPanel.add(okButton);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,6,3,1,0,0,0.37,33,18
4684_77,77,77,buttonPanel.add(cancelButton);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,6,3,1,0,0,0.38,34,18
4684_79,79,79,dialog.add(treePanel);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,6,3,1,0,0,0.31,36,20
4684_80,80,80,"dialog.add(buttonPanel, BorderLayout.PAGE_END);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,6,3,1,0,0,0.37,37,20
4684_82,82,82,dialog.setResizable(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,1,0,0,0.29,39,22
4684_83,83,83,dialog.pack();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,1,0,0,0.42,40,22
4684_85,85,85,dialog.setLocationRelativeTo(parent);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,1,0,0,0.28,42,24
4684_86,86,86,dialog.setVisible(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,1,0,0,0.29,43,24
4683_1,1,1,public void showResourceTreeDialog(JFrame parent) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.37,34,23
4683_2,2,2,newLocators = new LinkedHashSet<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.46,33,22
4683_3,3,3,deselectedLocators = new LinkedHashSet<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,1,1,0,1,0.48,32,21
4683_5,5,5,"dialog = new JDialog(parent, ""Available Features"", true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,1,0,0,0.34,30,20
4683_7,7,7,JPanel treePanel = new JPanel(new BorderLayout());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,1,1,0,0,0.36,28,19
4683_8,8,8,JScrollPane pane = new JScrollPane(dialogTree);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,0,0.35,27,18
4683_9,9,9,"treePanel.add(pane, BorderLayout.CENTER);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,1,1,0,0,0.31,26,17
4683_11,11,11,"pane.setPreferredSize(new Dimension(650, 500));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,1,1,0,0,0.32,24,16
4683_12,12,12,pane.setOpaque(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,0,0.22,23,15
4683_13,13,13,Color backGroundColor = HiCGlobals.isDarkulaModeEnabled ? Color.BLACK : Color.WHITE;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,0,0.31,22,14
4683_14,14,14,pane.setBackground(backGroundColor);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,0,0.28,21,13
4683_15,15,15,pane.setViewportView(dialogTree);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,1,1,0,0,0.27,20,12
4683_17,17,17,dialog.setBackground(backGroundColor);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,3,1,1,0,0,0.25,18,11
4683_18,18,18,dialog.getContentPane().setBackground(backGroundColor);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,3,1,1,0,1,0.45,17,10
4683_20,20,20,Component[] children = treePanel.getComponents();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,1,1,0,1,0.47,15,9
4683_21,21,25,"if (children != null) {
for (Component child : children) {
child.setBackground(backGroundColor);
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,1,0,1,3,1,1,0,0,0.27,10,6
4683_22,22,24,"for (Component child : children) {
child.setBackground(backGroundColor);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,3,1,1,0,0,0.27,11,6
4683_23,23,23,child.setBackground(backGroundColor);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.26,12,6
4683_27,27,27,JPanel buttonPanel = new JPanel();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,1,1,0,0,0.38,8,5
4683_28,28,28,"JButton okButton = new JButton(""OK"");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.38,7,4
4683_29,29,29,"JButton cancelButton = new JButton(""Cancel"");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,1,1,0,0,0.36,6,3
4683_31,31,31,cancelButton.addActionListener(new ActionListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,1,0,0,0.3,4,2
4683_32,32,33,"@Override
public void actionPerformed(ActionEvent actionEvent) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,1,0,0,0.28,2,1
4683_35,35,35,dialog.dispose();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,1,0,0,0.36,0,0
4683_36,36,36,LinkedHashSet<ResourceLocator> selectedLocators = getSelectedResourceLocators();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,1,1,0,3,0.85,0,0
4683_37,37,37,LinkedHashSet<ResourceLocator> newlyAddedLocators = new LinkedHashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,1,0.52,1,0
4683_38,38,42,"for (ResourceLocator locator : selectedLocators) {
if (!loadedLocators.contains(locator)) {
newlyAddedLocators.add(locator);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,1,0,0,3,1,1,0,2,0.75,2,1
4683_39,39,41,"if (!loadedLocators.contains(locator)) {
newlyAddedLocators.add(locator);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,1,1,0,1,0.61,3,2
4683_40,40,40,newlyAddedLocators.add(locator);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.59,4,3
4683_43,43,45,"for (ResourceLocator locator : newlyAddedLocators) {
remove(locator);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,0,3,1,1,0,1,0.64,7,5
4683_44,44,44,remove(locator);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.54,8,5
4683_46,46,48,"for (ResourceLocator locator : loadedLocators) {
addBack(locator);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,3,1,1,0,1,0.6,10,7
4683_47,47,47,addBack(locator);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.5,11,7
4683_53,53,53,okButton.addActionListener(new ActionListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,1,0,0,0.32,17,9
4683_54,54,55,"@Override
public void actionPerformed(ActionEvent actionEvent) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,1,0,0,0.28,18,9
4683_56,56,56,dialog.dispose();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.36,20,11
4683_57,57,57,LinkedHashSet<ResourceLocator> selectedLocators = getSelectedResourceLocators();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,3,0.85,21,11
4683_58,58,62,"for (ResourceLocator locator : selectedLocators) {
if (!loadedLocators.contains(locator)) {
newLocators.add(locator);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,1,1,0,0,3,1,1,0,2,0.75,22,12
4683_59,59,61,"if (!loadedLocators.contains(locator)) {
newLocators.add(locator);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,1,1,0,1,0.58,23,13
4683_60,60,60,newLocators.add(locator);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.54,24,14
4683_63,63,67,"for (ResourceLocator locator : loadedLocators) {
if (!selectedLocators.contains(locator)) {
deselectedLocators.add(locator);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,1,1,0,0,3,1,1,0,2,0.78,27,16
4683_64,64,66,"if (!selectedLocators.contains(locator)) {
deselectedLocators.add(locator);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,1,1,0,2,0.78,28,16
4683_65,65,65,deselectedLocators.add(locator);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.6,29,17
4683_68,68,68,loadedLocators.addAll(newLocators);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.54,32,19
4683_69,69,71,"for (ResourceLocator locator : deselectedLocators) {
loadedLocators.remove(locator);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,3,1,1,0,1,0.65,33,19
4683_70,70,70,loadedLocators.remove(locator);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.59,34,20
4683_72,72,72,dialogTree.clearSelection();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.46,36,22
4683_76,76,76,buttonPanel.add(okButton);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,3,1,1,0,0,0.35,40,23
4683_77,77,77,buttonPanel.add(cancelButton);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,3,1,1,0,0,0.33,41,23
4683_79,79,79,dialog.add(treePanel);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,1,1,0,0,0.28,43,25
4683_80,80,80,"dialog.add(buttonPanel, BorderLayout.PAGE_END);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,1,1,0,0,0.35,44,25
4683_82,82,82,dialog.setResizable(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,1,0,0,0.23,46,27
4683_83,83,83,dialog.pack();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,1,1,0,0,0.31,47,27
4683_85,85,85,dialog.setLocationRelativeTo(parent);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,1,0,1,0.47,49,29
4683_86,86,86,dialog.setVisible(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,1,1,0,0,0.24,50,29
4682_1,1,1,public void mousePressed(MouseEvent e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,0,0.43,5,4
4682_2,2,2,"int selRow = dialogTree.getRowForLocation(e.getX(), e.getY());",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,10,7,1,0,1,0.47,4,3
4682_3,3,3,"final TreePath selPath = dialogTree.getPathForLocation(e.getX(), e.getY());",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,10,7,1,0,1,0.47,3,2
4682_4,4,22,"if (selRow != -1 && selPath != null) {
if (SwingUtilities.isRightMouseButton(e)) {

if (addedNodes != null &&
addedNodes.contains(selPath.getLastPathComponent())) {
JPopupMenu menu = new JPopupMenu(""popup"");

JMenuItem menuItem = new JMenuItem(""Remove feature"");
menuItem.addActionListener(new ActionListener() {
@Override
public void actionPerformed(ActionEvent e) {
removeFeature((DefaultMutableTreeNode) selPath.getLastPathComponent());
}
});
menu.add(menuItem);
menu.show(dialogTree, e.getX(), e.getY());
}
}
}",1,0,0,0,0,0,0,0,0,10,5,19,1,1,0,0,10,7,1,0,5,0.64,0,0
4682_5,5,21,"if (SwingUtilities.isRightMouseButton(e)) {

if (addedNodes != null &&
addedNodes.contains(selPath.getLastPathComponent())) {
JPopupMenu menu = new JPopupMenu(""popup"");

JMenuItem menuItem = new JMenuItem(""Remove feature"");
menuItem.addActionListener(new ActionListener() {
@Override
public void actionPerformed(ActionEvent e) {
removeFeature((DefaultMutableTreeNode) selPath.getLastPathComponent());
}
});
menu.add(menuItem);
menu.show(dialogTree, e.getX(), e.getY());
}
}",1,0,0,0,0,0,0,0,0,9,4,17,0,0,0,0,10,7,1,0,5,0.64,0,0
4682_7,7,20,"if (addedNodes != null &&
addedNodes.contains(selPath.getLastPathComponent())) {
JPopupMenu menu = new JPopupMenu(""popup"");

JMenuItem menuItem = new JMenuItem(""Remove feature"");
menuItem.addActionListener(new ActionListener() {
@Override
public void actionPerformed(ActionEvent e) {
removeFeature((DefaultMutableTreeNode) selPath.getLastPathComponent());
}
});
menu.add(menuItem);
menu.show(dialogTree, e.getX(), e.getY());
}",1,0,0,0,0,0,0,0,0,8,3,14,0,0,1,0,10,7,1,0,5,0.64,0,0
4682_8,8,8,addedNodes.contains(selPath.getLastPathComponent())) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,1,0.41,1,0
4682_9,9,9,"JPopupMenu menu = new JPopupMenu(""popup"");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,10,7,1,0,0,0.39,2,1
4682_11,11,11,"JMenuItem menuItem = new JMenuItem(""Remove feature"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,10,7,1,0,1,0.49,4,3
4682_12,12,12,menuItem.addActionListener(new ActionListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,7,1,0,0,0.37,5,3
4682_13,13,14,"@Override
public void actionPerformed(ActionEvent e) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,7,1,0,0,0.38,6,4
4682_15,15,15,removeFeature((DefaultMutableTreeNode) selPath.getLastPathComponent());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,5,0.71,8,6
4682_18,18,18,menu.add(menuItem);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,7,1,0,0,0.37,11,7
4682_19,19,19,"menu.show(dialogTree, e.getX(), e.getY());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,7,1,0,1,0.5,12,7
4681_1,1,1,"private IGVFeature getFeatureAtPixel(int x, Context context, TrackPanel.Orientation orientation) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.49,38,27
4681_3,3,3,HiCGridAxis gridAxis;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.36,36,26
4681_4,4,8,"try {
gridAxis = orientation == TrackPanel.Orientation.X ? hic.getZd().getXGridAxis() : hic.getZd().getYGridAxis();
} catch (Exception e) {
return null;
}",0,0,0,0,1,0,0,0,0,3,1,5,0,1,0,1,3,2,0,0,1,0.55,31,22
4681_5,5,5,gridAxis = orientation == TrackPanel.Orientation.X ? hic.getZd().getXGridAxis() : hic.getZd().getYGridAxis();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.45,34,24
4681_6,6,6,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.23,33,23
4681_7,7,7,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.59,32,22
4681_10,10,10,int binOrigin = (int) (context.getBinOrigin());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.3,29,21
4681_11,11,11,int bin = binOrigin + (int) (x / hic.getScaleFactor());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.44,28,20
4681_13,13,13,int start = (int) gridAxis.getGenomicStart(bin);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.34,26,19
4681_14,14,14,int end = (int) gridAxis.getGenomicEnd(bin);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.36,25,18
4681_15,15,15,int middle = (int) gridAxis.getGenomicMid(bin);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.41,24,17
4681_17,17,17,String chr = context.getChromosome().getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.19,22,16
4681_19,19,19,"int b1 = Math.max(0, bin - 2);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.45,20,15
4681_20,20,20,int b2 = bin + 2;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.35,19,14
4681_21,21,21,int buffer = (int) ((gridAxis.getGenomicEnd(b2) - gridAxis.getGenomicStart(b1)) / 2);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.36,18,13
4681_23,23,23,int maxFeatureLength = 284000;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.39,16,12
4681_24,24,24,Iterator<?> iter;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.14,15,11
4681_25,25,33,"try {
iter = featureSource.getFeatures(chr, start, end);
if (!iter.hasNext()) {
iter = featureSource.getFeatures(""chr"" + chr, start, end);
}
} catch (IOException error) {
System.err.println(""Error getting feature source "" + error);
return null;
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,0,3,2,0,0,1,0.44,6,4
4681_26,26,26,"iter = featureSource.getFeatures(chr, start, end);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.3,13,9
4681_27,27,29,"if (!iter.hasNext()) {
iter = featureSource.getFeatures(""chr"" + chr, start, end);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,3,2,0,0,0,0.29,10,7
4681_28,28,28,"iter = featureSource.getFeatures(""chr"" + chr, start, end);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,11,7
4681_30,30,30,} catch (IOException error) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,9,6
4681_31,31,31,"System.err.println(""Error getting feature source "" + error);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,8,5
4681_32,32,32,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.59,7,4
4681_34,34,34,List<Feature> allFeatures = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.3,5,3
4681_35,35,37,"while (iter.hasNext()) {
allFeatures.add((Feature) iter.next());
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,2,0,0,0,0.32,2,1
4681_36,36,36,allFeatures.add((Feature) iter.next());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.34,3,1
4681_39,39,39,"List<Feature> featuresAtMouse = FeatureUtils.getAllFeaturesAt(middle, maxFeatureLength, buffer, allFeatures);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.44,0,0
4681_40,40,48,"if (featuresAtMouse != null && featuresAtMouse.size() > 0) {
featuresAtMouse.sort(new Comparator<Feature>() {
@Override
public int compare(Feature feature, Feature feature1) {
return ((feature.getEnd() - feature.getStart()) - (feature1.getEnd() - feature1.getStart()));
}
});
return (IGVFeature) featuresAtMouse.get(0);
}",1,0,0,0,0,0,0,0,0,4,3,9,0,1,0,1,3,2,0,0,1,0.54,0,0
4681_41,41,41,featuresAtMouse.sort(new Comparator<Feature>() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.42,1,0
4681_42,42,43,"@Override
public int compare(Feature feature, Feature feature1) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.43,2,1
4681_44,44,44,return ((feature.getEnd() - feature.getStart()) - (feature1.getEnd() - feature1.getStart()));,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.41,4,3
4681_47,47,47,return (IGVFeature) featuresAtMouse.get(0);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.54,7,4
4681_50,50,50,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,2,0,0,1,0.59,10,5
4678_1,1,1,private static int bSearch(int distance) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,3,0.79,0,0
4678_2,2,2,int lower = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.59,0,0
4678_3,3,3,int upper = bins.length - 1;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.54,1,0
4678_4,4,4,int index;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.55,2,1
4678_5,5,16,"while (lower <= upper) {
index = (lower + upper) / 2;
if (bins[index] < distance) {
lower = index + 1;
}
else if (bins[index]>distance) {
upper=index-1;
}
else {
return index;
}
}",0,1,0,0,0,0,0,0,0,7,2,12,0,1,0,0,5,5,0,0,1,0.52,3,2
4678_6,6,6,index = (lower + upper) / 2;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.38,4,3
4678_7,7,15,"if (bins[index] < distance) {
lower = index + 1;
}
else if (bins[index]>distance) {
upper=index-1;
}
else {
return index;
}",1,0,0,0,0,0,0,0,0,5,1,9,0,1,0,0,5,5,0,0,1,0.52,5,4
4678_8,8,8,lower = index + 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.37,6,5
4678_10,10,10,else if (bins[index]>distance) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.56,8,7
4678_11,11,11,upper=index-1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.37,9,7
4678_13,13,13,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.25,11,9
4678_14,14,14,return index;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.35,12,9
4678_17,17,17,return lower;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.39,15,11
4677_1,1,1,"private int distHindIII(boolean strand, int chrIndex, int pos, int frag, boolean rep, int index) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,22,14,3,0,3,0.46,0,0
4677_2,2,2,int dist1;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,22,14,3,0,0,0.35,0,0
4677_3,3,3,int dist2;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,22,14,3,0,0,0.35,1,0
4677_4,4,4,int[] sites = fragmentCalculation.getSites(getChromosomeNameFromIndex(chrIndex));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,22,14,3,0,4,0.71,2,1
4677_5,5,5,int arr = sites.length;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,22,14,3,0,1,0.55,3,2
4677_6,6,8,"if (frag >= arr) {
return 0;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,22,14,3,0,0,0.45,4,3
4677_7,7,7,return 0;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,22,14,3,0,0,0.34,5,4
4677_9,9,13,"if (frag == 0) {
dist1 = pos;
} else {
dist1 = Math.abs(pos - sites[frag - 1]);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,1,22,14,3,0,1,0.54,7,6
4677_10,10,10,dist1 = pos;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,22,14,3,0,0,0.33,8,6
4677_11,11,11,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,22,14,3,0,0,0.31,9,7
4677_12,12,12,dist1 = Math.abs(pos - sites[frag - 1]);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,22,14,3,0,1,0.58,10,8
4677_15,15,15,dist2 = Math.abs(pos - sites[frag]);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,22,14,3,0,1,0.62,13,10
4677_16,16,16,"int retVal = Math.min(dist1, dist2);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,22,14,3,0,0,0.51,14,10
4677_17,17,29,"if ((retVal == dist1) && (rep)) {
if (strand) {
resultsContainer.fivePrimeEnd[index]++;
} else {
resultsContainer.threePrimeEnd[index]++;
}
} else if ((retVal == dist2) && (rep)) {
if (!strand) {
resultsContainer.fivePrimeEnd[index]++;
} else {
resultsContainer.threePrimeEnd[index]++;
}
}",1,0,0,0,0,0,0,0,0,9,2,13,0,1,0,0,22,14,3,0,2,0.61,15,11
4677_18,18,22,"if (strand) {
resultsContainer.fivePrimeEnd[index]++;
} else {
resultsContainer.threePrimeEnd[index]++;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,22,14,3,0,2,0.62,16,12
4677_19,19,19,resultsContainer.fivePrimeEnd[index]++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,22,14,3,0,2,0.63,17,13
4677_20,20,20,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,22,14,3,0,0,0.31,18,14
4677_21,21,21,resultsContainer.threePrimeEnd[index]++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,22,14,3,0,2,0.59,19,15
4677_23,23,23,} else if ((retVal == dist2) && (rep)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,22,14,3,0,0,0.44,21,17
4677_24,24,28,"if (!strand) {
resultsContainer.fivePrimeEnd[index]++;
} else {
resultsContainer.threePrimeEnd[index]++;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,22,14,3,0,2,0.62,22,17
4677_25,25,25,resultsContainer.fivePrimeEnd[index]++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,22,14,3,0,2,0.63,23,18
4677_26,26,26,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,22,14,3,0,0,0.31,24,19
4677_27,27,27,resultsContainer.threePrimeEnd[index]++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,22,14,3,0,2,0.59,25,20
4677_30,30,30,return retVal;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,22,14,3,0,0,0.44,28,22
4673_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,20,14,1,0,0,0.36,41,31
4673_3,3,3,"Map<NormalizationType, Map<String, NormalizationVector>> normVectors = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,20,14,1,0,3,0.53,39,30
4673_5,5,70,"for (String fname : fnames) {
BufferedReader vectorReader;
if (fname.endsWith("".gz"")) {
InputStream fileStream = new FileInputStream(fname);
InputStream gzipStream = new GZIPInputStream(fileStream);
Reader decoder = new InputStreamReader(gzipStream, StandardCharsets.UTF_8);
vectorReader = new BufferedReader(decoder, 4194304);
} else {
vectorReader = new BufferedReader(new InputStreamReader(new FileInputStream(fname)), HiCGlobals.bufferSize);
}

Chromosome chr = null;
int resolution = -1;
HiC.Unit unit = null;
NormalizationType customNormType = null;
boolean needsToBeScaledTo = false;

String nextLine = vectorReader.readLine();
while (nextLine != null) {
if (nextLine.startsWith(""vector"")) {
String[] tokens = nextLine.split(""\\s+"");
chr = chromosomeHandler.getChromosomeFromName(tokens[2]);
if (chr == null) {
System.err.println(""Skipping "" + tokens[2] + "" which isn't in dataset"");
nextLine = skipLinesUntilTextEncountered(vectorReader, ""vector"");
continue;
}

customNormType = normalizationHandler.getNormTypeFromString(tokens[1]);
resolution = Integer.parseInt(tokens[3]);
unit = HiC.Unit.valueOf(tokens[4]);
needsToBeScaledTo = tokens[0].toLowerCase().contains(""scale"");
}
if (chr != null && customNormType != null) {
if (HiCGlobals.printVerboseComments) {
System.out.println(""Adding norm "" + customNormType + "" for chr "" + chr.getName() + "" at "" + resolution + "" "" + unit + "" resolution."");
}

long size = (chr.getLength() / resolution + 1);
ListOfDoubleArrays data = new ListOfDoubleArrays(size);
int i = 0;
nextLine = vectorReader.readLine();
while (nextLine != null && !(nextLine.startsWith(""vector""))) {
if (nextLine.equalsIgnoreCase(""nan"") || nextLine.equals(""."")) {
data.set(i, Double.NaN);
} else {
data.set(i, Double.parseDouble(nextLine));
}
i++;
if (i > size) {
throw new IOException(""More values than resolution would indicate"");
}
nextLine = vectorReader.readLine();
}

if (!normVectors.containsKey(customNormType)) {
normVectors.put(customNormType, new HashMap<>());
}
NormalizationVector vector = new NormalizationVector(customNormType, chr.getIndex(), unit, resolution, data, needsToBeScaledTo);
normVectors.get(customNormType).put(vector.getKey(), vector);

} else {
System.err.println(""Chromosome vector null"");
}
}
}",0,0,0,1,0,0,0,0,0,48,5,66,0,0,1,1,20,14,1,0,8,0.66,0,0
4673_6,6,6,BufferedReader vectorReader;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,20,14,1,0,1,0.55,36,28
4673_7,7,14,"if (fname.endsWith("".gz"")) {
InputStream fileStream = new FileInputStream(fname);
InputStream gzipStream = new GZIPInputStream(fileStream);
Reader decoder = new InputStreamReader(gzipStream, StandardCharsets.UTF_8);
vectorReader = new BufferedReader(decoder, 4194304);
} else {
vectorReader = new BufferedReader(new InputStreamReader(new FileInputStream(fname)), HiCGlobals.bufferSize);
}",1,0,0,0,0,0,0,0,0,6,1,8,0,1,0,1,20,14,1,0,3,0.61,28,21
4673_8,8,8,InputStream fileStream = new FileInputStream(fname);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,20,14,1,0,2,0.51,34,26
4673_9,9,9,InputStream gzipStream = new GZIPInputStream(fileStream);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,20,14,1,0,2,0.49,33,25
4673_10,10,10,"Reader decoder = new InputStreamReader(gzipStream, StandardCharsets.UTF_8);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,20,14,1,0,1,0.54,32,24
4673_11,11,11,"vectorReader = new BufferedReader(decoder, 4194304);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,20,14,1,0,2,0.61,31,23
4673_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,14,1,0,0,0.25,30,22
4673_13,13,13,"vectorReader = new BufferedReader(new InputStreamReader(new FileInputStream(fname)), HiCGlobals.bufferSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,14,1,0,3,0.6,29,21
4673_16,16,16,Chromosome chr = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,20,14,1,0,0,0.22,26,20
4673_17,17,17,int resolution = -1;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,20,14,1,0,0,0.31,25,19
4673_18,18,18,HiC.Unit unit = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,20,14,1,0,0,0.35,24,18
4673_19,19,19,NormalizationType customNormType = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,20,14,1,0,2,0.38,23,17
4673_20,20,20,boolean needsToBeScaledTo = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,20,14,1,0,0,0.36,22,16
4673_22,22,22,String nextLine = vectorReader.readLine();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,20,14,1,0,2,0.6,20,15
4673_23,23,69,"while (nextLine != null) {
if (nextLine.startsWith(""vector"")) {
String[] tokens = nextLine.split(""\\s+"");
chr = chromosomeHandler.getChromosomeFromName(tokens[2]);
if (chr == null) {
System.err.println(""Skipping "" + tokens[2] + "" which isn't in dataset"");
nextLine = skipLinesUntilTextEncountered(vectorReader, ""vector"");
continue;
}

customNormType = normalizationHandler.getNormTypeFromString(tokens[1]);
resolution = Integer.parseInt(tokens[3]);
unit = HiC.Unit.valueOf(tokens[4]);
needsToBeScaledTo = tokens[0].toLowerCase().contains(""scale"");
}
if (chr != null && customNormType != null) {
if (HiCGlobals.printVerboseComments) {
System.out.println(""Adding norm "" + customNormType + "" for chr "" + chr.getName() + "" at "" + resolution + "" "" + unit + "" resolution."");
}

long size = (chr.getLength() / resolution + 1);
ListOfDoubleArrays data = new ListOfDoubleArrays(size);
int i = 0;
nextLine = vectorReader.readLine();
while (nextLine != null && !(nextLine.startsWith(""vector""))) {
if (nextLine.equalsIgnoreCase(""nan"") || nextLine.equals(""."")) {
data.set(i, Double.NaN);
} else {
data.set(i, Double.parseDouble(nextLine));
}
i++;
if (i > size) {
throw new IOException(""More values than resolution would indicate"");
}
nextLine = vectorReader.readLine();
}

if (!normVectors.containsKey(customNormType)) {
normVectors.put(customNormType, new HashMap<>());
}
NormalizationVector vector = new NormalizationVector(customNormType, chr.getIndex(), unit, resolution, data, needsToBeScaledTo);
normVectors.get(customNormType).put(vector.getKey(), vector);

} else {
System.err.println(""Chromosome vector null"");
}
}",0,1,0,0,0,0,0,0,0,33,4,47,1,1,0,0,20,14,1,0,7,0.64,0,0
4673_24,24,37,"if (nextLine.startsWith(""vector"")) {
String[] tokens = nextLine.split(""\\s+"");
chr = chromosomeHandler.getChromosomeFromName(tokens[2]);
if (chr == null) {
System.err.println(""Skipping "" + tokens[2] + "" which isn't in dataset"");
nextLine = skipLinesUntilTextEncountered(vectorReader, ""vector"");
continue;
}

customNormType = normalizationHandler.getNormTypeFromString(tokens[1]);
resolution = Integer.parseInt(tokens[3]);
unit = HiC.Unit.valueOf(tokens[4]);
needsToBeScaledTo = tokens[0].toLowerCase().contains(""scale"");
}",1,0,0,0,0,0,0,0,0,10,2,14,1,1,0,0,20,14,1,0,4,0.56,5,3
4673_25,25,25,"String[] tokens = nextLine.split(""\\s+"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,20,14,1,0,1,0.47,17,12
4673_26,26,26,chr = chromosomeHandler.getChromosomeFromName(tokens[2]);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,20,14,1,0,0,0.34,16,11
4673_27,27,31,"if (chr == null) {
System.err.println(""Skipping "" + tokens[2] + "" which isn't in dataset"");
nextLine = skipLinesUntilTextEncountered(vectorReader, ""vector"");
continue;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,1,20,14,1,0,2,0.58,11,7
4673_28,28,28,"System.err.println(""Skipping "" + tokens[2] + "" which isn't in dataset"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,14,1,0,0,0.43,14,9
4673_29,29,29,"nextLine = skipLinesUntilTextEncountered(vectorReader, ""vector"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,14,1,0,2,0.62,13,8
4673_30,30,30,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,14,1,0,0,0.28,12,7
4673_33,33,33,customNormType = normalizationHandler.getNormTypeFromString(tokens[1]);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,20,14,1,0,2,0.39,9,6
4673_34,34,34,resolution = Integer.parseInt(tokens[3]);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,20,14,1,0,0,0.37,8,5
4673_35,35,35,unit = HiC.Unit.valueOf(tokens[4]);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,20,14,1,0,0,0.4,7,4
4673_36,36,36,"needsToBeScaledTo = tokens[0].toLowerCase().contains(""scale"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,20,14,1,0,0,0.37,6,3
4673_38,38,68,"if (chr != null && customNormType != null) {
if (HiCGlobals.printVerboseComments) {
System.out.println(""Adding norm "" + customNormType + "" for chr "" + chr.getName() + "" at "" + resolution + "" "" + unit + "" resolution."");
}

long size = (chr.getLength() / resolution + 1);
ListOfDoubleArrays data = new ListOfDoubleArrays(size);
int i = 0;
nextLine = vectorReader.readLine();
while (nextLine != null && !(nextLine.startsWith(""vector""))) {
if (nextLine.equalsIgnoreCase(""nan"") || nextLine.equals(""."")) {
data.set(i, Double.NaN);
} else {
data.set(i, Double.parseDouble(nextLine));
}
i++;
if (i > size) {
throw new IOException(""More values than resolution would indicate"");
}
nextLine = vectorReader.readLine();
}

if (!normVectors.containsKey(customNormType)) {
normVectors.put(customNormType, new HashMap<>());
}
NormalizationVector vector = new NormalizationVector(customNormType, chr.getIndex(), unit, resolution, data, needsToBeScaledTo);
normVectors.get(customNormType).put(vector.getKey(), vector);

} else {
System.err.println(""Chromosome vector null"");
}",1,0,0,0,0,0,0,0,0,21,3,31,1,1,0,0,20,14,1,0,7,0.65,0,0
4673_39,39,41,"if (HiCGlobals.printVerboseComments) {
System.out.println(""Adding norm "" + customNormType + "" for chr "" + chr.getName() + "" at "" + resolution + "" "" + unit + "" resolution."");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,20,14,1,0,2,0.44,1,0
4673_40,40,40,"System.out.println(""Adding norm "" + customNormType + "" for chr "" + chr.getName() + "" at "" + resolution + "" "" + unit + "" resolution."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,14,1,0,2,0.4,2,0
4673_43,43,43,long size = (chr.getLength() / resolution + 1);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,20,14,1,0,1,0.4,0,0
4673_44,44,44,ListOfDoubleArrays data = new ListOfDoubleArrays(size);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,20,14,1,0,1,0.44,1,0
4673_45,45,45,int i = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,20,14,1,0,0,0.28,2,1
4673_46,46,46,nextLine = vectorReader.readLine();,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,20,14,1,0,2,0.62,3,2
4673_47,47,58,"while (nextLine != null && !(nextLine.startsWith(""vector""))) {
if (nextLine.equalsIgnoreCase(""nan"") || nextLine.equals(""."")) {
data.set(i, Double.NaN);
} else {
data.set(i, Double.parseDouble(nextLine));
}
i++;
if (i > size) {
throw new IOException(""More values than resolution would indicate"");
}
nextLine = vectorReader.readLine();
}",0,1,0,0,0,0,0,0,0,8,2,12,1,1,0,1,20,14,1,0,4,0.61,4,3
4673_48,48,52,"if (nextLine.equalsIgnoreCase(""nan"") || nextLine.equals(""."")) {
data.set(i, Double.NaN);
} else {
data.set(i, Double.parseDouble(nextLine));
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,20,14,1,0,1,0.46,5,4
4673_49,49,49,"data.set(i, Double.NaN);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,14,1,0,0,0.37,6,5
4673_50,50,50,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,14,1,0,0,0.25,7,6
4673_51,51,51,"data.set(i, Double.parseDouble(nextLine));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,14,1,0,1,0.46,8,7
4673_53,53,53,i++;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,20,14,1,0,0,0.0,10,9
4673_54,54,56,"if (i > size) {
throw new IOException(""More values than resolution would indicate"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,20,14,1,0,2,0.49,11,9
4673_55,55,55,"throw new IOException(""More values than resolution would indicate"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,20,14,1,0,2,0.5,12,10
4673_57,57,57,nextLine = vectorReader.readLine();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,14,1,0,2,0.62,14,12
4673_60,60,62,"if (!normVectors.containsKey(customNormType)) {
normVectors.put(customNormType, new HashMap<>());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,20,14,1,0,4,0.57,17,13
4673_61,61,61,"normVectors.put(customNormType, new HashMap<>());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,14,1,0,4,0.59,18,13
4673_63,63,63,"NormalizationVector vector = new NormalizationVector(customNormType, chr.getIndex(), unit, resolution, data, needsToBeScaledTo);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,20,14,1,0,4,0.58,20,15
4673_64,64,64,"normVectors.get(customNormType).put(vector.getKey(), vector);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,20,14,1,0,3,0.55,21,15
4673_66,66,66,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,14,1,0,0,0.25,23,17
4673_67,67,67,"System.err.println(""Chromosome vector null"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,14,1,0,1,0.54,24,17
4673_72,72,72,return normVectors;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,20,14,1,0,2,0.54,29,19
4672_1,1,2,"private static NormVectorInfo completeCalculationsNecessaryForUpdatingCustomNormalizations(
final Dataset ds, String[] filePaths, boolean overwriteHicFileFooter) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.34,92,51
4672_4,4,5,"Map<NormalizationType, Map<String, NormalizationVector>> normalizationVectorMap = readVectorFile(filePaths,
ds.getChromosomeHandler(), ds.getNormalizationHandler());",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,2,2,0,0,1,0.29,89,50
4672_7,7,7,ChromosomeHandler chromosomeHandler = ds.getChromosomeHandler();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,2,2,0,0,1,0.32,87,49
4672_8,8,8,"Map<String, Integer> fragCountMap = ds.getFragmentCounts();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,86,48
4672_9,9,9,List<HiCZoom> resolutions = ds.getAllPossibleResolutions();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.33,85,47
4672_11,11,11,List<BufferedByteWriter> normVectorBuffers = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.32,83,46
4672_12,12,12,List<NormalizationVectorIndexEntry> normVectorIndices = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.29,82,45
4672_13,13,13,"Map<String, ExpectedValueFunction> expectedValueFunctionMap = ds.getExpectedValueFunctionMap();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.31,81,44
4672_15,15,20,"for (Iterator<Map.Entry<String, ExpectedValueFunction>> it = expectedValueFunctionMap.entrySet().iterator(); it.hasNext(); ) {
Map.Entry<String, ExpectedValueFunction> entry = it.next();
if (entry.getKey().contains(""NONE"")) {
it.remove();
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,0,1,1,2,2,0,0,0,0.27,74,40
4672_16,16,16,"Map.Entry<String, ExpectedValueFunction> entry = it.next();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.27,78,42
4672_17,17,19,"if (entry.getKey().contains(""NONE"")) {
it.remove();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,2,0,0,0,0.19,75,40
4672_18,18,18,it.remove();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.09,76,40
4672_22,22,45,"if (overwriteHicFileFooter) {
for (HiCZoom zoom : resolutions) {
for (NormalizationType type : NormalizationHandler.getAllNormTypes()) {
for (Chromosome chr : chromosomeHandler.getChromosomeArrayWithoutAllByAll()) {
NormalizationVector existingNorm = ds.getNormalizationVector(chr.getIndex(), zoom, type);
if (existingNorm != null) {
long position = 0;
for (int i=0; i < normVectorBuffers.size(); i++) {
position += normVectorBuffers.get(i).bytesWritten();
}
putFloatArraysIntoBufferList(normVectorBuffers, existingNorm.getData().convertToFloats().getValues());

long newPos = 0;
for (int i=0; i < normVectorBuffers.size(); i++) {
newPos += normVectorBuffers.get(i).bytesWritten();
}
int sizeInBytes = (int) (newPos - position);
normVectorIndices.add(new NormalizationVectorIndexEntry(
type.toString(), chr.getIndex(), zoom.getUnit().toString(), zoom.getBinSize(), position, sizeInBytes));
}
}
}
}
}",1,0,0,0,0,0,0,0,0,14,6,24,0,0,1,1,2,2,0,0,1,0.32,49,25
4672_23,23,44,"for (HiCZoom zoom : resolutions) {
for (NormalizationType type : NormalizationHandler.getAllNormTypes()) {
for (Chromosome chr : chromosomeHandler.getChromosomeArrayWithoutAllByAll()) {
NormalizationVector existingNorm = ds.getNormalizationVector(chr.getIndex(), zoom, type);
if (existingNorm != null) {
long position = 0;
for (int i=0; i < normVectorBuffers.size(); i++) {
position += normVectorBuffers.get(i).bytesWritten();
}
putFloatArraysIntoBufferList(normVectorBuffers, existingNorm.getData().convertToFloats().getValues());

long newPos = 0;
for (int i=0; i < normVectorBuffers.size(); i++) {
newPos += normVectorBuffers.get(i).bytesWritten();
}
int sizeInBytes = (int) (newPos - position);
normVectorIndices.add(new NormalizationVectorIndexEntry(
type.toString(), chr.getIndex(), zoom.getUnit().toString(), zoom.getBinSize(), position, sizeInBytes));
}
}
}
}",0,0,0,1,0,0,0,0,0,13,5,22,0,0,0,0,2,2,0,0,1,0.32,50,25
4672_24,24,43,"for (NormalizationType type : NormalizationHandler.getAllNormTypes()) {
for (Chromosome chr : chromosomeHandler.getChromosomeArrayWithoutAllByAll()) {
NormalizationVector existingNorm = ds.getNormalizationVector(chr.getIndex(), zoom, type);
if (existingNorm != null) {
long position = 0;
for (int i=0; i < normVectorBuffers.size(); i++) {
position += normVectorBuffers.get(i).bytesWritten();
}
putFloatArraysIntoBufferList(normVectorBuffers, existingNorm.getData().convertToFloats().getValues());

long newPos = 0;
for (int i=0; i < normVectorBuffers.size(); i++) {
newPos += normVectorBuffers.get(i).bytesWritten();
}
int sizeInBytes = (int) (newPos - position);
normVectorIndices.add(new NormalizationVectorIndexEntry(
type.toString(), chr.getIndex(), zoom.getUnit().toString(), zoom.getBinSize(), position, sizeInBytes));
}
}
}",0,0,0,1,0,0,0,0,0,12,4,20,0,0,0,0,2,2,0,0,1,0.32,51,25
4672_25,25,42,"for (Chromosome chr : chromosomeHandler.getChromosomeArrayWithoutAllByAll()) {
NormalizationVector existingNorm = ds.getNormalizationVector(chr.getIndex(), zoom, type);
if (existingNorm != null) {
long position = 0;
for (int i=0; i < normVectorBuffers.size(); i++) {
position += normVectorBuffers.get(i).bytesWritten();
}
putFloatArraysIntoBufferList(normVectorBuffers, existingNorm.getData().convertToFloats().getValues());

long newPos = 0;
for (int i=0; i < normVectorBuffers.size(); i++) {
newPos += normVectorBuffers.get(i).bytesWritten();
}
int sizeInBytes = (int) (newPos - position);
normVectorIndices.add(new NormalizationVectorIndexEntry(
type.toString(), chr.getIndex(), zoom.getUnit().toString(), zoom.getBinSize(), position, sizeInBytes));
}
}",0,0,0,1,0,0,0,0,0,11,3,18,0,0,0,0,2,2,0,0,1,0.32,52,25
4672_26,26,26,"NormalizationVector existingNorm = ds.getNormalizationVector(chr.getIndex(), zoom, type);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.3,68,35
4672_27,27,41,"if (existingNorm != null) {
long position = 0;
for (int i=0; i < normVectorBuffers.size(); i++) {
position += normVectorBuffers.get(i).bytesWritten();
}
putFloatArraysIntoBufferList(normVectorBuffers, existingNorm.getData().convertToFloats().getValues());

long newPos = 0;
for (int i=0; i < normVectorBuffers.size(); i++) {
newPos += normVectorBuffers.get(i).bytesWritten();
}
int sizeInBytes = (int) (newPos - position);
normVectorIndices.add(new NormalizationVectorIndexEntry(
type.toString(), chr.getIndex(), zoom.getUnit().toString(), zoom.getBinSize(), position, sizeInBytes));
}",1,0,0,0,0,0,0,0,0,9,2,15,1,1,0,0,2,2,0,0,0,0.31,53,25
4672_28,28,28,long position = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.31,66,33
4672_29,29,31,"for (int i=0; i < normVectorBuffers.size(); i++) {
position += normVectorBuffers.get(i).bytesWritten();
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,2,2,0,0,0,0.32,63,31
4672_30,30,30,position += normVectorBuffers.get(i).bytesWritten();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.32,64,31
4672_32,32,32,"putFloatArraysIntoBufferList(normVectorBuffers, existingNorm.getData().convertToFloats().getValues());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.26,62,30
4672_34,34,34,long newPos = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.35,60,29
4672_35,35,37,"for (int i=0; i < normVectorBuffers.size(); i++) {
newPos += normVectorBuffers.get(i).bytesWritten();
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,2,2,0,0,0,0.33,57,27
4672_36,36,36,newPos += normVectorBuffers.get(i).bytesWritten();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.34,58,27
4672_38,38,38,int sizeInBytes = (int) (newPos - position);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.32,56,26
4672_39,39,40,"normVectorIndices.add(new NormalizationVectorIndexEntry(
type.toString(), chr.getIndex(), zoom.getUnit().toString(), zoom.getBinSize(), position, sizeInBytes));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,2,2,0,0,0,0.28,54,25
4672_47,47,47,ExecutorService executor = HiCGlobals.newFixedThreadPool();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.45,47,24
4672_48,48,81,"for (NormalizationType customNormType : normalizationVectorMap.keySet()) {
final Map<String, NormalizationVector> normVectorsByChrAndZoom = normalizationVectorMap.get(customNormType);
final Set<String> keySet = new HashSet<>(normVectorsByChrAndZoom.keySet());
final Map<Integer, Integer> chrAndResolutionWhichFailed = new HashMap<>();

for (final String key : keySet) {
final NormalizationVector nv = normVectorsByChrAndZoom.get(key);
if (chrAndResolutionWhichFailed.containsKey(nv.getChrIdx()) && nv.getResolution() < chrAndResolutionWhichFailed.get(nv.getChrIdx())) {
normVectorsByChrAndZoom.remove(key);
continue;
}
if (nv.doesItNeedToBeScaledTo()) {
Runnable worker = new Runnable() {
@Override
public void run() {
NormalizationVector newScaledVector = nv.mmbaScaleToVector(ds);
synchronized (normVectorsByChrAndZoom) {
if (newScaledVector != null) {
normVectorsByChrAndZoom.put(key, newScaledVector);
} else {
normVectorsByChrAndZoom.remove(key);
int currResolution = nv.getResolution();
int chrIndx = nv.getChrIdx();
if (currResolution < chrAndResolutionWhichFailed.get(chrIndx)) {
chrAndResolutionWhichFailed.put(chrIndx, currResolution);
}
}
}
}
};
executor.execute(worker);
}
}
}",0,0,0,1,0,0,0,0,0,16,8,34,0,1,0,1,2,2,0,0,0,0.38,13,7
4672_49,49,49,"final Map<String, NormalizationVector> normVectorsByChrAndZoom = normalizationVectorMap.get(customNormType);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.21,45,22
4672_50,50,50,final Set<String> keySet = new HashSet<>(normVectorsByChrAndZoom.keySet());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.28,44,21
4672_51,51,51,"final Map<Integer, Integer> chrAndResolutionWhichFailed = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.33,43,20
4672_53,53,80,"for (final String key : keySet) {
final NormalizationVector nv = normVectorsByChrAndZoom.get(key);
if (chrAndResolutionWhichFailed.containsKey(nv.getChrIdx()) && nv.getResolution() < chrAndResolutionWhichFailed.get(nv.getChrIdx())) {
normVectorsByChrAndZoom.remove(key);
continue;
}
if (nv.doesItNeedToBeScaledTo()) {
Runnable worker = new Runnable() {
@Override
public void run() {
NormalizationVector newScaledVector = nv.mmbaScaleToVector(ds);
synchronized (normVectorsByChrAndZoom) {
if (newScaledVector != null) {
normVectorsByChrAndZoom.put(key, newScaledVector);
} else {
normVectorsByChrAndZoom.remove(key);
int currResolution = nv.getResolution();
int chrIndx = nv.getChrIdx();
if (currResolution < chrAndResolutionWhichFailed.get(chrIndx)) {
chrAndResolutionWhichFailed.put(chrIndx, currResolution);
}
}
}
}
};
executor.execute(worker);
}
}",0,0,0,1,0,0,0,0,0,12,7,28,0,0,1,0,2,2,0,0,0,0.38,14,7
4672_54,54,54,final NormalizationVector nv = normVectorsByChrAndZoom.get(key);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.22,40,18
4672_55,55,58,"if (chrAndResolutionWhichFailed.containsKey(nv.getChrIdx()) && nv.getResolution() < chrAndResolutionWhichFailed.get(nv.getChrIdx())) {
normVectorsByChrAndZoom.remove(key);
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,2,2,0,0,0,0.25,36,15
4672_56,56,56,normVectorsByChrAndZoom.remove(key);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.23,38,16
4672_57,57,57,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.14,37,15
4672_59,59,79,"if (nv.doesItNeedToBeScaledTo()) {
Runnable worker = new Runnable() {
@Override
public void run() {
NormalizationVector newScaledVector = nv.mmbaScaleToVector(ds);
synchronized (normVectorsByChrAndZoom) {
if (newScaledVector != null) {
normVectorsByChrAndZoom.put(key, newScaledVector);
} else {
normVectorsByChrAndZoom.remove(key);
int currResolution = nv.getResolution();
int chrIndx = nv.getChrIdx();
if (currResolution < chrAndResolutionWhichFailed.get(chrIndx)) {
chrAndResolutionWhichFailed.put(chrIndx, currResolution);
}
}
}
}
};
executor.execute(worker);
}",1,0,0,0,0,0,0,0,0,7,6,21,1,1,0,0,2,2,0,0,0,0.39,15,7
4672_60,60,77,"Runnable worker = new Runnable() {
@Override
public void run() {
NormalizationVector newScaledVector = nv.mmbaScaleToVector(ds);
synchronized (normVectorsByChrAndZoom) {
if (newScaledVector != null) {
normVectorsByChrAndZoom.put(key, newScaledVector);
} else {
normVectorsByChrAndZoom.remove(key);
int currResolution = nv.getResolution();
int chrIndx = nv.getChrIdx();
if (currResolution < chrAndResolutionWhichFailed.get(chrIndx)) {
chrAndResolutionWhichFailed.put(chrIndx, currResolution);
}
}
}
}
};",0,0,0,0,0,1,0,0,0,5,5,18,0,1,0,0,2,2,0,0,0,0.32,17,8
4672_63,63,63,NormalizationVector newScaledVector = nv.mmbaScaleToVector(ds);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,31,12
4672_65,65,74,"if (newScaledVector != null) {
normVectorsByChrAndZoom.put(key, newScaledVector);
} else {
normVectorsByChrAndZoom.remove(key);
int currResolution = nv.getResolution();
int chrIndx = nv.getChrIdx();
if (currResolution < chrAndResolutionWhichFailed.get(chrIndx)) {
chrAndResolutionWhichFailed.put(chrIndx, currResolution);
}
}",1,0,0,0,0,0,0,0,0,3,2,10,0,0,0,0,2,2,0,0,0,0.3,20,8
4672_69,69,69,int currResolution = nv.getResolution();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.29,25,10
4672_70,70,70,int chrIndx = nv.getChrIdx();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.23,24,9
4672_71,71,73,"if (currResolution < chrAndResolutionWhichFailed.get(chrIndx)) {
chrAndResolutionWhichFailed.put(chrIndx, currResolution);
}",1,0,0,0,0,0,0,0,0,0,1,3,0,1,0,0,2,2,0,0,0,0.31,21,8
4672_78,78,78,executor.execute(worker);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.51,16,7
4672_83,83,83,executor.shutdown();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.56,11,6
4672_84,84,85,"while (!executor.isTerminated()) {
}",0,1,0,0,0,0,0,0,0,0,1,2,0,1,0,1,2,2,0,0,0,0.51,9,5
4672_87,87,104,"for (HiCZoom zoom : resolutions) {
Map<String, Integer> fcm = zoom.getUnit() == HiC.Unit.FRAG ? fragCountMap : null;

for (NormalizationType customNormType : normalizationVectorMap.keySet()) {

ExpectedValueCalculation evLoaded = new ExpectedValueCalculation(chromosomeHandler, zoom.getBinSize(), fcm, customNormType);
String key = ExpectedValueFunctionImpl.getKey(zoom, customNormType);

for (Chromosome chr : chromosomeHandler.getChromosomeArrayWithoutAllByAll()) {
MatrixZoomData zd = HiCFileTools.getMatrixZoomData(ds, chr, chr, zoom);
if (zd == null) continue;

handleLoadedVector(customNormType, chr.getIndex(), zoom, normalizationVectorMap.get(customNormType),
normVectorBuffers, normVectorIndices, zd, evLoaded);
}
expectedValueFunctionMap.put(key, evLoaded.getExpectedValueFunction());
}
}",0,0,0,1,0,0,0,0,0,9,3,18,0,0,1,1,2,2,0,0,1,0.32,0,0
4672_88,88,88,"Map<String, Integer> fcm = zoom.getUnit() == HiC.Unit.FRAG ? fragCountMap : null;",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.27,6,3
4672_90,90,103,"for (NormalizationType customNormType : normalizationVectorMap.keySet()) {

ExpectedValueCalculation evLoaded = new ExpectedValueCalculation(chromosomeHandler, zoom.getBinSize(), fcm, customNormType);
String key = ExpectedValueFunctionImpl.getKey(zoom, customNormType);

for (Chromosome chr : chromosomeHandler.getChromosomeArrayWithoutAllByAll()) {
MatrixZoomData zd = HiCFileTools.getMatrixZoomData(ds, chr, chr, zoom);
if (zd == null) continue;

handleLoadedVector(customNormType, chr.getIndex(), zoom, normalizationVectorMap.get(customNormType),
normVectorBuffers, normVectorIndices, zd, evLoaded);
}
expectedValueFunctionMap.put(key, evLoaded.getExpectedValueFunction());
}",0,0,0,1,0,0,0,0,0,7,2,14,0,0,1,0,2,2,0,0,1,0.32,0,0
4672_92,92,92,"ExpectedValueCalculation evLoaded = new ExpectedValueCalculation(chromosomeHandler, zoom.getBinSize(), fcm, customNormType);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,1,0.32,2,1
4672_93,93,93,"String key = ExpectedValueFunctionImpl.getKey(zoom, customNormType);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.25,1,0
4672_95,95,101,"for (Chromosome chr : chromosomeHandler.getChromosomeArrayWithoutAllByAll()) {
MatrixZoomData zd = HiCFileTools.getMatrixZoomData(ds, chr, chr, zoom);
if (zd == null) continue;

handleLoadedVector(customNormType, chr.getIndex(), zoom, normalizationVectorMap.get(customNormType),
normVectorBuffers, normVectorIndices, zd, evLoaded);
}",0,0,0,1,0,0,0,0,0,3,1,7,0,1,1,0,2,2,0,0,1,0.33,0,0
4672_96,96,96,"MatrixZoomData zd = HiCFileTools.getMatrixZoomData(ds, chr, chr, zoom);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.32,1,0
4672_97,97,97,if (zd == null) continue;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.1,2,1
4672_99,99,100,"handleLoadedVector(customNormType, chr.getIndex(), zoom, normalizationVectorMap.get(customNormType),
normVectorBuffers, normVectorIndices, zd, evLoaded);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,2,2,0,0,0,0.32,4,3
4672_102,102,102,"expectedValueFunctionMap.put(key, evLoaded.getExpectedValueFunction());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.33,7,4
4672_106,106,106,ds.setExpectedValueFunctionMap(expectedValueFunctionMap);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.32,11,5
4672_107,107,107,"return new NormVectorInfo(normalizationVectorMap, normVectorBuffers, normVectorIndices, expectedValueFunctionMap);",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.28,12,5
4671_1,1,2,"private static NormVectorInfo completeCalculationsNecessaryForUpdatingCustomNormalizations(
final Dataset ds, String[] filePaths, boolean overwriteHicFileFooter) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.31,81,45
4671_4,4,5,"Map<NormalizationType, Map<String, NormalizationVector>> normalizationVectorMap = readVectorFile(filePaths,
ds.getChromosomeHandler(), ds.getNormalizationHandler());",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,3,3,0,0,0,0.29,78,44
4671_7,7,7,ChromosomeHandler chromosomeHandler = ds.getChromosomeHandler();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.34,76,43
4671_8,8,8,"Map<String, Integer> fragCountMap = ds.getFragmentCounts();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.28,75,42
4671_9,9,9,List<HiCZoom> resolutions = ds.getAllPossibleResolutions();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.2,74,41
4671_11,11,11,List<BufferedByteWriter> normVectorBuffers = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.26,72,40
4671_12,12,12,List<NormalizationVectorIndexEntry> normVectorIndices = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,71,39
4671_13,13,13,"Map<String, ExpectedValueFunction> expectedValueFunctionMap = ds.getExpectedValueFunctionMap();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.32,70,38
4671_15,15,20,"for (Iterator<Map.Entry<String, ExpectedValueFunction>> it = expectedValueFunctionMap.entrySet().iterator(); it.hasNext(); ) {
Map.Entry<String, ExpectedValueFunction> entry = it.next();
if (entry.getKey().contains(""NONE"")) {
it.remove();
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,0,1,1,3,3,0,0,0,0.31,63,34
4671_16,16,16,"Map.Entry<String, ExpectedValueFunction> entry = it.next();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.32,67,36
4671_17,17,19,"if (entry.getKey().contains(""NONE"")) {
it.remove();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,0,0.17,64,34
4671_18,18,18,it.remove();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.14,65,34
4671_22,22,45,"if (overwriteHicFileFooter) {
for (HiCZoom zoom : resolutions) {
for (NormalizationType type : NormalizationHandler.getAllNormTypes()) {
for (Chromosome chr : chromosomeHandler.getChromosomeArrayWithoutAllByAll()) {
NormalizationVector existingNorm = ds.getNormalizationVector(chr.getIndex(), zoom, type);
if (existingNorm != null) {
long position = 0;
for (int i=0; i < normVectorBuffers.size(); i++) {
position += normVectorBuffers.get(i).bytesWritten();
}
putFloatArraysIntoBufferList(normVectorBuffers, existingNorm.getData().convertToFloats().getValues());

long newPos = 0;
for (int i=0; i < normVectorBuffers.size(); i++) {
newPos += normVectorBuffers.get(i).bytesWritten();
}
int sizeInBytes = (int) (newPos - position);
normVectorIndices.add(new NormalizationVectorIndexEntry(
type.toString(), chr.getIndex(), zoom.getUnit().toString(), zoom.getBinSize(), position, sizeInBytes));
}
}
}
}
}",1,0,0,0,0,0,0,0,0,14,6,24,0,0,1,1,3,3,0,0,0,0.31,38,19
4671_23,23,44,"for (HiCZoom zoom : resolutions) {
for (NormalizationType type : NormalizationHandler.getAllNormTypes()) {
for (Chromosome chr : chromosomeHandler.getChromosomeArrayWithoutAllByAll()) {
NormalizationVector existingNorm = ds.getNormalizationVector(chr.getIndex(), zoom, type);
if (existingNorm != null) {
long position = 0;
for (int i=0; i < normVectorBuffers.size(); i++) {
position += normVectorBuffers.get(i).bytesWritten();
}
putFloatArraysIntoBufferList(normVectorBuffers, existingNorm.getData().convertToFloats().getValues());

long newPos = 0;
for (int i=0; i < normVectorBuffers.size(); i++) {
newPos += normVectorBuffers.get(i).bytesWritten();
}
int sizeInBytes = (int) (newPos - position);
normVectorIndices.add(new NormalizationVectorIndexEntry(
type.toString(), chr.getIndex(), zoom.getUnit().toString(), zoom.getBinSize(), position, sizeInBytes));
}
}
}
}",0,0,0,1,0,0,0,0,0,13,5,22,0,0,0,0,3,3,0,0,0,0.3,39,19
4671_24,24,43,"for (NormalizationType type : NormalizationHandler.getAllNormTypes()) {
for (Chromosome chr : chromosomeHandler.getChromosomeArrayWithoutAllByAll()) {
NormalizationVector existingNorm = ds.getNormalizationVector(chr.getIndex(), zoom, type);
if (existingNorm != null) {
long position = 0;
for (int i=0; i < normVectorBuffers.size(); i++) {
position += normVectorBuffers.get(i).bytesWritten();
}
putFloatArraysIntoBufferList(normVectorBuffers, existingNorm.getData().convertToFloats().getValues());

long newPos = 0;
for (int i=0; i < normVectorBuffers.size(); i++) {
newPos += normVectorBuffers.get(i).bytesWritten();
}
int sizeInBytes = (int) (newPos - position);
normVectorIndices.add(new NormalizationVectorIndexEntry(
type.toString(), chr.getIndex(), zoom.getUnit().toString(), zoom.getBinSize(), position, sizeInBytes));
}
}
}",0,0,0,1,0,0,0,0,0,12,4,20,0,0,0,0,3,3,0,0,0,0.3,40,19
4671_25,25,42,"for (Chromosome chr : chromosomeHandler.getChromosomeArrayWithoutAllByAll()) {
NormalizationVector existingNorm = ds.getNormalizationVector(chr.getIndex(), zoom, type);
if (existingNorm != null) {
long position = 0;
for (int i=0; i < normVectorBuffers.size(); i++) {
position += normVectorBuffers.get(i).bytesWritten();
}
putFloatArraysIntoBufferList(normVectorBuffers, existingNorm.getData().convertToFloats().getValues());

long newPos = 0;
for (int i=0; i < normVectorBuffers.size(); i++) {
newPos += normVectorBuffers.get(i).bytesWritten();
}
int sizeInBytes = (int) (newPos - position);
normVectorIndices.add(new NormalizationVectorIndexEntry(
type.toString(), chr.getIndex(), zoom.getUnit().toString(), zoom.getBinSize(), position, sizeInBytes));
}
}",0,0,0,1,0,0,0,0,0,11,3,18,0,0,0,0,3,3,0,0,0,0.3,41,19
4671_26,26,26,"NormalizationVector existingNorm = ds.getNormalizationVector(chr.getIndex(), zoom, type);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,3,0,0,0,0.23,57,29
4671_27,27,41,"if (existingNorm != null) {
long position = 0;
for (int i=0; i < normVectorBuffers.size(); i++) {
position += normVectorBuffers.get(i).bytesWritten();
}
putFloatArraysIntoBufferList(normVectorBuffers, existingNorm.getData().convertToFloats().getValues());

long newPos = 0;
for (int i=0; i < normVectorBuffers.size(); i++) {
newPos += normVectorBuffers.get(i).bytesWritten();
}
int sizeInBytes = (int) (newPos - position);
normVectorIndices.add(new NormalizationVectorIndexEntry(
type.toString(), chr.getIndex(), zoom.getUnit().toString(), zoom.getBinSize(), position, sizeInBytes));
}",1,0,0,0,0,0,0,0,0,9,2,15,1,1,0,0,3,3,0,0,0,0.29,42,19
4671_28,28,28,long position = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.31,55,27
4671_29,29,31,"for (int i=0; i < normVectorBuffers.size(); i++) {
position += normVectorBuffers.get(i).bytesWritten();
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,0,0.27,52,25
4671_30,30,30,position += normVectorBuffers.get(i).bytesWritten();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.28,53,25
4671_32,32,32,"putFloatArraysIntoBufferList(normVectorBuffers, existingNorm.getData().convertToFloats().getValues());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.2,51,24
4671_34,34,34,long newPos = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.28,49,23
4671_35,35,37,"for (int i=0; i < normVectorBuffers.size(); i++) {
newPos += normVectorBuffers.get(i).bytesWritten();
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,0,0.27,46,21
4671_36,36,36,newPos += normVectorBuffers.get(i).bytesWritten();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.27,47,21
4671_38,38,38,int sizeInBytes = (int) (newPos - position);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.23,45,20
4671_39,39,40,"normVectorIndices.add(new NormalizationVectorIndexEntry(
type.toString(), chr.getIndex(), zoom.getUnit().toString(), zoom.getBinSize(), position, sizeInBytes));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,3,3,0,0,0,0.29,43,19
4671_47,47,47,ExecutorService executor = HiCGlobals.newFixedThreadPool();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,1,0.55,36,18
4671_48,48,81,"for (NormalizationType customNormType : normalizationVectorMap.keySet()) {
final Map<String, NormalizationVector> normVectorsByChrAndZoom = normalizationVectorMap.get(customNormType);
final Set<String> keySet = new HashSet<>(normVectorsByChrAndZoom.keySet());
final Map<Integer, Integer> chrAndResolutionWhichFailed = new HashMap<>();

for (final String key : keySet) {
final NormalizationVector nv = normVectorsByChrAndZoom.get(key);
if (chrAndResolutionWhichFailed.containsKey(nv.getChrIdx()) && nv.getResolution() < chrAndResolutionWhichFailed.get(nv.getChrIdx())) {
normVectorsByChrAndZoom.remove(key);
continue;
}
if (nv.doesItNeedToBeScaledTo()) {
Runnable worker = new Runnable() {
@Override
public void run() {
NormalizationVector newScaledVector = nv.mmbaScaleToVector(ds);
synchronized (normVectorsByChrAndZoom) {
if (newScaledVector != null) {
normVectorsByChrAndZoom.put(key, newScaledVector);
} else {
normVectorsByChrAndZoom.remove(key);
int currResolution = nv.getResolution();
int chrIndx = nv.getChrIdx();
if (currResolution < chrAndResolutionWhichFailed.get(chrIndx)) {
chrAndResolutionWhichFailed.put(chrIndx, currResolution);
}
}
}
}
};
executor.execute(worker);
}
}
}",0,0,0,1,0,0,0,0,0,16,8,34,0,1,0,1,3,3,0,0,0,0.39,2,1
4671_49,49,49,"final Map<String, NormalizationVector> normVectorsByChrAndZoom = normalizationVectorMap.get(customNormType);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.21,34,16
4671_50,50,50,final Set<String> keySet = new HashSet<>(normVectorsByChrAndZoom.keySet());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.22,33,15
4671_51,51,51,"final Map<Integer, Integer> chrAndResolutionWhichFailed = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.24,32,14
4671_53,53,80,"for (final String key : keySet) {
final NormalizationVector nv = normVectorsByChrAndZoom.get(key);
if (chrAndResolutionWhichFailed.containsKey(nv.getChrIdx()) && nv.getResolution() < chrAndResolutionWhichFailed.get(nv.getChrIdx())) {
normVectorsByChrAndZoom.remove(key);
continue;
}
if (nv.doesItNeedToBeScaledTo()) {
Runnable worker = new Runnable() {
@Override
public void run() {
NormalizationVector newScaledVector = nv.mmbaScaleToVector(ds);
synchronized (normVectorsByChrAndZoom) {
if (newScaledVector != null) {
normVectorsByChrAndZoom.put(key, newScaledVector);
} else {
normVectorsByChrAndZoom.remove(key);
int currResolution = nv.getResolution();
int chrIndx = nv.getChrIdx();
if (currResolution < chrAndResolutionWhichFailed.get(chrIndx)) {
chrAndResolutionWhichFailed.put(chrIndx, currResolution);
}
}
}
}
};
executor.execute(worker);
}
}",0,0,0,1,0,0,0,0,0,12,7,28,0,0,1,0,3,3,0,0,0,0.4,3,1
4671_54,54,54,final NormalizationVector nv = normVectorsByChrAndZoom.get(key);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,3,0,0,0,0.29,29,12
4671_55,55,58,"if (chrAndResolutionWhichFailed.containsKey(nv.getChrIdx()) && nv.getResolution() < chrAndResolutionWhichFailed.get(nv.getChrIdx())) {
normVectorsByChrAndZoom.remove(key);
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,3,3,0,0,0,0.32,25,9
4671_56,56,56,normVectorsByChrAndZoom.remove(key);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.2,27,10
4671_57,57,57,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.21,26,9
4671_59,59,79,"if (nv.doesItNeedToBeScaledTo()) {
Runnable worker = new Runnable() {
@Override
public void run() {
NormalizationVector newScaledVector = nv.mmbaScaleToVector(ds);
synchronized (normVectorsByChrAndZoom) {
if (newScaledVector != null) {
normVectorsByChrAndZoom.put(key, newScaledVector);
} else {
normVectorsByChrAndZoom.remove(key);
int currResolution = nv.getResolution();
int chrIndx = nv.getChrIdx();
if (currResolution < chrAndResolutionWhichFailed.get(chrIndx)) {
chrAndResolutionWhichFailed.put(chrIndx, currResolution);
}
}
}
}
};
executor.execute(worker);
}",1,0,0,0,0,0,0,0,0,7,6,21,1,1,0,0,3,3,0,0,0,0.41,4,1
4671_60,60,77,"Runnable worker = new Runnable() {
@Override
public void run() {
NormalizationVector newScaledVector = nv.mmbaScaleToVector(ds);
synchronized (normVectorsByChrAndZoom) {
if (newScaledVector != null) {
normVectorsByChrAndZoom.put(key, newScaledVector);
} else {
normVectorsByChrAndZoom.remove(key);
int currResolution = nv.getResolution();
int chrIndx = nv.getChrIdx();
if (currResolution < chrAndResolutionWhichFailed.get(chrIndx)) {
chrAndResolutionWhichFailed.put(chrIndx, currResolution);
}
}
}
}
};",0,0,0,0,0,1,0,0,0,5,5,18,0,1,0,0,3,3,0,0,0,0.4,6,2
4671_63,63,63,NormalizationVector newScaledVector = nv.mmbaScaleToVector(ds);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.29,20,6
4671_65,65,74,"if (newScaledVector != null) {
normVectorsByChrAndZoom.put(key, newScaledVector);
} else {
normVectorsByChrAndZoom.remove(key);
int currResolution = nv.getResolution();
int chrIndx = nv.getChrIdx();
if (currResolution < chrAndResolutionWhichFailed.get(chrIndx)) {
chrAndResolutionWhichFailed.put(chrIndx, currResolution);
}
}",1,0,0,0,0,0,0,0,0,3,2,10,0,0,0,0,3,3,0,0,0,0.32,9,2
4671_69,69,69,int currResolution = nv.getResolution();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.32,14,4
4671_70,70,70,int chrIndx = nv.getChrIdx();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.35,13,3
4671_71,71,73,"if (currResolution < chrAndResolutionWhichFailed.get(chrIndx)) {
chrAndResolutionWhichFailed.put(chrIndx, currResolution);
}",1,0,0,0,0,0,0,0,0,0,1,3,0,1,0,0,3,3,0,0,0,0.3,10,2
4671_78,78,78,executor.execute(worker);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.46,5,1
4671_83,83,83,executor.shutdown();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.51,0,0
4671_84,84,85,"while (!executor.isTerminated()) {
}",0,1,0,0,0,0,0,0,0,0,1,2,0,1,0,1,3,3,0,0,0,0.44,0,0
4671_87,87,104,"for (HiCZoom zoom : resolutions) {
Map<String, Integer> fcm = zoom.getUnit() == HiC.Unit.FRAG ? fragCountMap : null;

for (NormalizationType customNormType : normalizationVectorMap.keySet()) {

ExpectedValueCalculation evLoaded = new ExpectedValueCalculation(chromosomeHandler, zoom.getBinSize(), fcm, customNormType);
String key = ExpectedValueFunctionImpl.getKey(zoom, customNormType);

for (Chromosome chr : chromosomeHandler.getChromosomeArrayWithoutAllByAll()) {
MatrixZoomData zd = HiCFileTools.getMatrixZoomData(ds, chr, chr, zoom);
if (zd == null) continue;

handleLoadedVector(customNormType, chr.getIndex(), zoom, normalizationVectorMap.get(customNormType),
normVectorBuffers, normVectorIndices, zd, evLoaded);
}
expectedValueFunctionMap.put(key, evLoaded.getExpectedValueFunction());
}
}",0,0,0,1,0,0,0,0,0,9,3,18,0,0,1,1,3,3,0,0,0,0.32,3,1
4671_88,88,88,"Map<String, Integer> fcm = zoom.getUnit() == HiC.Unit.FRAG ? fragCountMap : null;",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.26,4,1
4671_90,90,103,"for (NormalizationType customNormType : normalizationVectorMap.keySet()) {

ExpectedValueCalculation evLoaded = new ExpectedValueCalculation(chromosomeHandler, zoom.getBinSize(), fcm, customNormType);
String key = ExpectedValueFunctionImpl.getKey(zoom, customNormType);

for (Chromosome chr : chromosomeHandler.getChromosomeArrayWithoutAllByAll()) {
MatrixZoomData zd = HiCFileTools.getMatrixZoomData(ds, chr, chr, zoom);
if (zd == null) continue;

handleLoadedVector(customNormType, chr.getIndex(), zoom, normalizationVectorMap.get(customNormType),
normVectorBuffers, normVectorIndices, zd, evLoaded);
}
expectedValueFunctionMap.put(key, evLoaded.getExpectedValueFunction());
}",0,0,0,1,0,0,0,0,0,7,2,14,0,0,1,0,3,3,0,0,0,0.32,6,3
4671_92,92,92,"ExpectedValueCalculation evLoaded = new ExpectedValueCalculation(chromosomeHandler, zoom.getBinSize(), fcm, customNormType);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.31,8,4
4671_93,93,93,"String key = ExpectedValueFunctionImpl.getKey(zoom, customNormType);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.31,9,4
4671_95,95,101,"for (Chromosome chr : chromosomeHandler.getChromosomeArrayWithoutAllByAll()) {
MatrixZoomData zd = HiCFileTools.getMatrixZoomData(ds, chr, chr, zoom);
if (zd == null) continue;

handleLoadedVector(customNormType, chr.getIndex(), zoom, normalizationVectorMap.get(customNormType),
normVectorBuffers, normVectorIndices, zd, evLoaded);
}",0,0,0,1,0,0,0,0,0,3,1,7,0,1,1,0,3,3,0,0,0,0.31,11,6
4671_96,96,96,"MatrixZoomData zd = HiCFileTools.getMatrixZoomData(ds, chr, chr, zoom);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.26,12,6
4671_97,97,97,if (zd == null) continue;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.27,13,7
4671_99,99,100,"handleLoadedVector(customNormType, chr.getIndex(), zoom, normalizationVectorMap.get(customNormType),
normVectorBuffers, normVectorIndices, zd, evLoaded);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,3,3,0,0,0,0.29,15,9
4671_102,102,102,"expectedValueFunctionMap.put(key, evLoaded.getExpectedValueFunction());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.34,18,10
4671_106,106,106,ds.setExpectedValueFunctionMap(expectedValueFunctionMap);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.32,22,11
4671_107,107,107,"return new NormVectorInfo(normalizationVectorMap, normVectorBuffers, normVectorIndices, expectedValueFunctionMap);",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.32,23,11
4670_1,1,1,public int removeLayer(AnnotationLayerHandler handler) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,3,0,1,0.43,5,5
4670_2,2,2,int returnCode = -1;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,4,3,0,0,0.27,4,4
4670_3,3,9,"if (annotationLayerHandlers != null && annotationLayerHandlers.size() > 1) {
returnCode = annotationLayerHandlers.size() - 1 - annotationLayerHandlers.indexOf(handler);
annotationLayerHandlers.remove(handler);
if (handler == activeLayer) {
setActiveLayerHandler(annotationLayerHandlers.get(0));
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,1,0,0,10,4,3,0,3,0.52,0,0
4670_4,4,4,returnCode = annotationLayerHandlers.size() - 1 - annotationLayerHandlers.indexOf(handler);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,3,0,1,0.41,2,2
4670_5,5,5,annotationLayerHandlers.remove(handler);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,3,0,1,0.4,1,1
4670_6,6,8,"if (handler == activeLayer) {
setActiveLayerHandler(annotationLayerHandlers.get(0));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,4,3,0,3,0.58,0,0
4670_7,7,7,setActiveLayerHandler(annotationLayerHandlers.get(0));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,3,0,3,0.56,0,0
4670_10,10,10,updateLayerDeleteStatus();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,3,0,1,0.36,3,1
4670_11,11,11,return returnCode;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,4,3,0,0,0.22,4,1
4669_1,1,1,private void unsafeSetInitialZoom() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.51,15,11
4669_3,3,36,"if (hic.isInPearsonsMode()) {
initialZoom = hic.getMatrix().getFirstPearsonZoomData(HiC.Unit.BP).getZoom();
} else if (ChromosomeHandler.isAllByAll(hic.getXContext().getChromosome())) {
mainViewPanel.getResolutionSlider().setEnabled(false);
initialZoom = hic.getMatrix().getFirstZoomData().getZoom();
} else {
mainViewPanel.getResolutionSlider().setEnabled(true);

initialZoom = hic.getMatrix().getFirstZoomData().getZoom();

if (hic.getZoom() != null) {
HiC.Unit currentUnit = hic.getZoom().getUnit();
List<HiCZoom> zooms = (currentUnit == HiC.Unit.BP ? hic.getDataset().getBpZooms() :
hic.getDataset().getFragZooms());
int pixels = mainViewPanel.getHeatmapPanel().getMinimumDimension();
long len;
if (currentUnit == HiC.Unit.BP) {
len = (Math.max(hic.getXContext().getChrLength(), hic.getYContext().getChrLength()));
} else {
len = Math.max(hic.getDataset().getFragmentCounts().get(hic.getXContext().getChromosome().getName()),
hic.getDataset().getFragmentCounts().get(hic.getYContext().getChromosome().getName()));
}

int maxNBins = pixels;
long bp_bin = len / maxNBins;
initialZoom = zooms.get(zooms.size() - 1);
for (int z = 1; z < zooms.size(); z++) {
if (zooms.get(z).getBinSize() < bp_bin) {
initialZoom = zooms.get(z - 1);
break;
}
}
}
}",1,0,0,0,0,0,0,0,0,23,4,34,1,0,1,0,4,2,1,0,1,0.57,0,0
4669_4,4,4,initialZoom = hic.getMatrix().getFirstPearsonZoomData(HiC.Unit.BP).getZoom();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.54,12,9
4669_5,5,5,} else if (ChromosomeHandler.isAllByAll(hic.getXContext().getChromosome())) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.37,11,8
4669_6,6,6,mainViewPanel.getResolutionSlider().setEnabled(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.41,10,7
4669_7,7,7,initialZoom = hic.getMatrix().getFirstZoomData().getZoom();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.55,9,6
4669_8,8,8,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.31,8,5
4669_9,9,9,mainViewPanel.getResolutionSlider().setEnabled(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.41,7,4
4669_11,11,11,initialZoom = hic.getMatrix().getFirstZoomData().getZoom();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,1,0.55,5,3
4669_13,13,35,"if (hic.getZoom() != null) {
HiC.Unit currentUnit = hic.getZoom().getUnit();
List<HiCZoom> zooms = (currentUnit == HiC.Unit.BP ? hic.getDataset().getBpZooms() :
hic.getDataset().getFragZooms());
int pixels = mainViewPanel.getHeatmapPanel().getMinimumDimension();
long len;
if (currentUnit == HiC.Unit.BP) {
len = (Math.max(hic.getXContext().getChrLength(), hic.getYContext().getChrLength()));
} else {
len = Math.max(hic.getDataset().getFragmentCounts().get(hic.getXContext().getChromosome().getName()),
hic.getDataset().getFragmentCounts().get(hic.getYContext().getChromosome().getName()));
}

int maxNBins = pixels;
long bp_bin = len / maxNBins;
initialZoom = zooms.get(zooms.size() - 1);
for (int z = 1; z < zooms.size(); z++) {
if (zooms.get(z).getBinSize() < bp_bin) {
initialZoom = zooms.get(z - 1);
break;
}
}
}",1,0,0,0,0,0,0,0,0,15,3,23,0,0,1,0,4,2,1,0,1,0.56,0,0
4669_14,14,14,HiC.Unit currentUnit = hic.getZoom().getUnit();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.51,2,1
4669_15,15,16,"List<HiCZoom> zooms = (currentUnit == HiC.Unit.BP ? hic.getDataset().getBpZooms() :
hic.getDataset().getFragZooms());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,2,1,0,1,0.55,0,0
4669_17,17,17,int pixels = mainViewPanel.getHeatmapPanel().getMinimumDimension();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.53,0,0
4669_18,18,18,long len;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.26,1,0
4669_19,19,24,"if (currentUnit == HiC.Unit.BP) {
len = (Math.max(hic.getXContext().getChrLength(), hic.getYContext().getChrLength()));
} else {
len = Math.max(hic.getDataset().getFragmentCounts().get(hic.getXContext().getChromosome().getName()),
hic.getDataset().getFragmentCounts().get(hic.getYContext().getChromosome().getName()));
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,1,4,2,1,0,0,0.4,2,1
4669_20,20,20,"len = (Math.max(hic.getXContext().getChrLength(), hic.getYContext().getChrLength()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.4,3,2
4669_21,21,21,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.31,4,3
4669_22,22,23,"len = Math.max(hic.getDataset().getFragmentCounts().get(hic.getXContext().getChromosome().getName()),
hic.getDataset().getFragmentCounts().get(hic.getYContext().getChromosome().getName()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,0,0.39,5,4
4669_26,26,26,int maxNBins = pixels;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.4,9,6
4669_27,27,27,long bp_bin = len / maxNBins;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.34,10,6
4669_28,28,28,initialZoom = zooms.get(zooms.size() - 1);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,1,0.58,11,7
4669_29,29,34,"for (int z = 1; z < zooms.size(); z++) {
if (zooms.get(z).getBinSize() < bp_bin) {
initialZoom = zooms.get(z - 1);
break;
}
}",0,0,1,0,0,0,0,0,0,3,2,6,1,1,0,0,4,2,1,0,1,0.56,12,8
4669_30,30,33,"if (zooms.get(z).getBinSize() < bp_bin) {
initialZoom = zooms.get(z - 1);
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,4,2,1,0,1,0.56,13,9
4669_31,31,31,initialZoom = zooms.get(z - 1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.58,14,10
4669_32,32,32,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,2,1,0,0,0.35,15,11
4669_37,37,38,"hic.unsafeActuallySetZoomAndLocation(hic.getXContext().getChromosome().toString(), hic.getYContext().getChromosome().toString(),
initialZoom, 0, 0, -1, true, HiC.ZoomCallType.INITIAL, true, isResolutionLocked() ? 1 : 0, true);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,4,2,1,0,1,0.46,20,13
4668_1,1,1,private void unsafeSetInitialZoom() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,2,0.58,11,8
4668_3,3,36,"if (hic.isInPearsonsMode()) {
initialZoom = hic.getMatrix().getFirstPearsonZoomData(HiC.Unit.BP).getZoom();
} else if (ChromosomeHandler.isAllByAll(hic.getXContext().getChromosome())) {
mainViewPanel.getResolutionSlider().setEnabled(false);
initialZoom = hic.getMatrix().getFirstZoomData().getZoom();
} else {
mainViewPanel.getResolutionSlider().setEnabled(true);

initialZoom = hic.getMatrix().getFirstZoomData().getZoom();

if (hic.getZoom() != null) {
HiC.Unit currentUnit = hic.getZoom().getUnit();
List<HiCZoom> zooms = (currentUnit == HiC.Unit.BP ? hic.getDataset().getBpZooms() :
hic.getDataset().getFragZooms());
int pixels = mainViewPanel.getHeatmapPanel().getMinimumDimension();
long len;
if (currentUnit == HiC.Unit.BP) {
len = (Math.max(hic.getXContext().getChrLength(), hic.getYContext().getChrLength()));
} else {
len = Math.max(hic.getDataset().getFragmentCounts().get(hic.getXContext().getChromosome().getName()),
hic.getDataset().getFragmentCounts().get(hic.getYContext().getChromosome().getName()));
}

int maxNBins = pixels;
long bp_bin = len / maxNBins;
initialZoom = zooms.get(zooms.size() - 1);
for (int z = 1; z < zooms.size(); z++) {
if (zooms.get(z).getBinSize() < bp_bin) {
initialZoom = zooms.get(z - 1);
break;
}
}
}
}",1,0,0,0,0,0,0,0,0,23,4,34,1,0,1,0,6,3,0,0,5,0.68,0,0
4668_4,4,4,initialZoom = hic.getMatrix().getFirstPearsonZoomData(HiC.Unit.BP).getZoom();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,3,0.59,8,6
4668_5,5,5,} else if (ChromosomeHandler.isAllByAll(hic.getXContext().getChromosome())) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.35,7,5
4668_6,6,6,mainViewPanel.getResolutionSlider().setEnabled(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.36,6,4
4668_7,7,7,initialZoom = hic.getMatrix().getFirstZoomData().getZoom();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,3,0.6,5,3
4668_8,8,8,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.28,4,2
4668_9,9,9,mainViewPanel.getResolutionSlider().setEnabled(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,0,0,0,0.36,3,1
4668_11,11,11,initialZoom = hic.getMatrix().getFirstZoomData().getZoom();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,0,0,3,0.6,1,0
4668_13,13,35,"if (hic.getZoom() != null) {
HiC.Unit currentUnit = hic.getZoom().getUnit();
List<HiCZoom> zooms = (currentUnit == HiC.Unit.BP ? hic.getDataset().getBpZooms() :
hic.getDataset().getFragZooms());
int pixels = mainViewPanel.getHeatmapPanel().getMinimumDimension();
long len;
if (currentUnit == HiC.Unit.BP) {
len = (Math.max(hic.getXContext().getChrLength(), hic.getYContext().getChrLength()));
} else {
len = Math.max(hic.getDataset().getFragmentCounts().get(hic.getXContext().getChromosome().getName()),
hic.getDataset().getFragmentCounts().get(hic.getYContext().getChromosome().getName()));
}

int maxNBins = pixels;
long bp_bin = len / maxNBins;
initialZoom = zooms.get(zooms.size() - 1);
for (int z = 1; z < zooms.size(); z++) {
if (zooms.get(z).getBinSize() < bp_bin) {
initialZoom = zooms.get(z - 1);
break;
}
}
}",1,0,0,0,0,0,0,0,0,15,3,23,0,0,1,0,6,3,0,0,5,0.67,0,0
4668_14,14,14,HiC.Unit currentUnit = hic.getZoom().getUnit();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,3,0.57,1,0
4668_15,15,16,"List<HiCZoom> zooms = (currentUnit == HiC.Unit.BP ? hic.getDataset().getBpZooms() :
hic.getDataset().getFragZooms());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,6,3,0,0,3,0.58,2,1
4668_17,17,17,int pixels = mainViewPanel.getHeatmapPanel().getMinimumDimension();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.42,4,3
4668_18,18,18,long len;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.29,5,3
4668_19,19,24,"if (currentUnit == HiC.Unit.BP) {
len = (Math.max(hic.getXContext().getChrLength(), hic.getYContext().getChrLength()));
} else {
len = Math.max(hic.getDataset().getFragmentCounts().get(hic.getXContext().getChromosome().getName()),
hic.getDataset().getFragmentCounts().get(hic.getYContext().getChromosome().getName()));
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,1,6,3,0,0,2,0.45,6,4
4668_20,20,20,"len = (Math.max(hic.getXContext().getChrLength(), hic.getYContext().getChrLength()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.35,7,5
4668_21,21,21,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.28,8,6
4668_22,22,23,"len = Math.max(hic.getDataset().getFragmentCounts().get(hic.getXContext().getChromosome().getName()),
hic.getDataset().getFragmentCounts().get(hic.getYContext().getChromosome().getName()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,0,0,1,0.37,9,7
4668_26,26,26,int maxNBins = pixels;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,0,0,0,0.34,13,9
4668_27,27,27,long bp_bin = len / maxNBins;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.32,14,9
4668_28,28,28,initialZoom = zooms.get(zooms.size() - 1);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,0,0,2,0.64,15,10
4668_29,29,34,"for (int z = 1; z < zooms.size(); z++) {
if (zooms.get(z).getBinSize() < bp_bin) {
initialZoom = zooms.get(z - 1);
break;
}
}",0,0,1,0,0,0,0,0,0,3,2,6,1,1,0,0,6,3,0,0,2,0.56,16,11
4668_30,30,33,"if (zooms.get(z).getBinSize() < bp_bin) {
initialZoom = zooms.get(z - 1);
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,6,3,0,0,2,0.57,17,12
4668_31,31,31,initialZoom = zooms.get(z - 1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,2,0.62,18,13
4668_32,32,32,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,3,0,0,0,0.28,19,14
4668_37,37,38,"hic.unsafeActuallySetZoomAndLocation(hic.getXContext().getChromosome().toString(), hic.getYContext().getChromosome().toString(),
initialZoom, 0, 0, -1, true, HiC.ZoomCallType.INITIAL, true, isResolutionLocked() ? 1 : 0, true);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,6,3,0,0,3,0.51,24,16
4656_1,1,1,private void checkHorizontalScrollBar(BasicComboPopup popup) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,1,1,0.51,21,12
4656_3,3,3,JViewport viewport = scrollPane.getViewport();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,6,1,1,2,0.58,19,11
4656_4,4,4,Point p = viewport.getViewPosition();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,1,1,0,0.45,18,10
4656_5,5,5,p.x = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,1,1,0,0.45,17,9
4656_6,6,6,viewport.setViewPosition(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,7,6,1,1,0,0.46,16,8
4656_9,9,12,"if (!scrollBarRequired) {
scrollPane.setHorizontalScrollBar(null);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,7,6,1,1,2,0.62,10,5
4656_10,10,10,scrollPane.setHorizontalScrollBar(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,1,2,0.65,12,6
4656_11,11,11,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,6,1,1,0,0.16,11,5
4656_15,15,15,JScrollBar horizontal = scrollPane.getHorizontalScrollBar();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,6,1,1,2,0.68,7,4
4656_17,17,21,"if (horizontal == null) {
horizontal = new JScrollBar(JScrollBar.HORIZONTAL);
scrollPane.setHorizontalScrollBar(horizontal);
scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,7,6,1,1,3,0.68,1,0
4656_18,18,18,horizontal = new JScrollBar(JScrollBar.HORIZONTAL);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,1,1,1,0.58,4,2
4656_19,19,19,scrollPane.setHorizontalScrollBar(horizontal);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,1,1,2,0.69,3,1
4656_20,20,20,scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,1,3,0.7,2,0
4656_24,24,30,"if (horizontalScrollBarWillBeVisible(popup, scrollPane)) {
Dimension scrollPaneSize = scrollPane.getPreferredSize();
scrollPaneSize.height += horizontal.getPreferredSize().height;
scrollPane.setPreferredSize(scrollPaneSize);
scrollPane.setMaximumSize(scrollPaneSize);
scrollPane.revalidate();
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,1,0,7,6,1,1,3,0.71,1,0
4656_25,25,25,Dimension scrollPaneSize = scrollPane.getPreferredSize();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,7,6,1,1,2,0.67,2,0
4656_26,26,26,scrollPaneSize.height += horizontal.getPreferredSize().height;,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,6,1,1,3,0.7,3,1
4656_27,27,27,scrollPane.setPreferredSize(scrollPaneSize);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,1,1,2,0.67,4,2
4656_28,28,28,scrollPane.setMaximumSize(scrollPaneSize);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,1,1,2,0.68,5,3
4656_29,29,29,scrollPane.revalidate();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,1,2,0.72,6,4
4655_1,1,1,private void checkHorizontalScrollBar(BasicComboPopup popup) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,1,1,0.49,12,7
4655_3,3,3,JViewport viewport = scrollPane.getViewport();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,2,2,1,0,0.38,10,6
4655_4,4,4,Point p = viewport.getViewPosition();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,2,1,0,0.44,9,5
4655_5,5,5,p.x = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,2,1,0,0.5,8,4
4655_6,6,6,viewport.setViewPosition(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,2,2,1,0,0.45,7,3
4655_9,9,12,"if (!scrollBarRequired) {
scrollPane.setHorizontalScrollBar(null);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,6,2,2,1,1,0.49,1,0
4655_10,10,10,scrollPane.setHorizontalScrollBar(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,1,1,0.52,3,1
4655_11,11,11,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,2,2,1,0,0.19,2,0
4655_15,15,15,JScrollBar horizontal = scrollPane.getHorizontalScrollBar();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,2,2,1,1,0.5,1,0
4655_17,17,21,"if (horizontal == null) {
horizontal = new JScrollBar(JScrollBar.HORIZONTAL);
scrollPane.setHorizontalScrollBar(horizontal);
scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,6,2,2,1,2,0.6,3,1
4655_18,18,18,horizontal = new JScrollBar(JScrollBar.HORIZONTAL);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,2,1,1,0.54,4,1
4655_19,19,19,scrollPane.setHorizontalScrollBar(horizontal);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,2,1,1,0.53,5,2
4655_20,20,20,scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,1,2,0.56,6,3
4655_24,24,30,"if (horizontalScrollBarWillBeVisible(popup, scrollPane)) {
Dimension scrollPaneSize = scrollPane.getPreferredSize();
scrollPaneSize.height += horizontal.getPreferredSize().height;
scrollPane.setPreferredSize(scrollPaneSize);
scrollPane.setMaximumSize(scrollPaneSize);
scrollPane.revalidate();
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,1,0,6,2,2,1,1,0.51,10,5
4655_25,25,25,Dimension scrollPaneSize = scrollPane.getPreferredSize();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,2,2,1,0,0.42,11,5
4655_26,26,26,scrollPaneSize.height += horizontal.getPreferredSize().height;,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,2,2,1,1,0.49,12,6
4655_27,27,27,scrollPane.setPreferredSize(scrollPaneSize);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,2,1,0,0.39,13,7
4655_28,28,28,scrollPane.setMaximumSize(scrollPaneSize);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,2,1,0,0.41,14,8
4655_29,29,29,scrollPane.revalidate();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,1,0,0.47,15,9
4654_1,1,1,private void checkHorizontalScrollBar(BasicComboPopup popup) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,1,0,0.47,6,4
4654_3,3,3,JViewport viewport = scrollPane.getViewport();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,1,0,0.42,4,3
4654_4,4,4,Point p = viewport.getViewPosition();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,1,0,0.46,3,2
4654_5,5,5,p.x = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,1,0,0.48,2,1
4654_6,6,6,viewport.setViewPosition(p);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,1,0,0.47,1,0
4654_9,9,12,"if (!scrollBarRequired) {
scrollPane.setHorizontalScrollBar(null);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,4,3,0,1,0,0.49,1,0
4654_10,10,10,scrollPane.setHorizontalScrollBar(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,1,0,0.5,2,0
4654_11,11,11,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,1,0,0.22,3,1
4654_15,15,15,JScrollBar horizontal = scrollPane.getHorizontalScrollBar();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,1,0,0.52,7,3
4654_17,17,21,"if (horizontal == null) {
horizontal = new JScrollBar(JScrollBar.HORIZONTAL);
scrollPane.setHorizontalScrollBar(horizontal);
scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,3,0,1,1,0.58,9,4
4654_18,18,18,horizontal = new JScrollBar(JScrollBar.HORIZONTAL);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,1,0,0.52,10,4
4654_19,19,19,scrollPane.setHorizontalScrollBar(horizontal);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,1,0,0.53,11,5
4654_20,20,20,scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,1,1,0.57,12,6
4654_24,24,30,"if (horizontalScrollBarWillBeVisible(popup, scrollPane)) {
Dimension scrollPaneSize = scrollPane.getPreferredSize();
scrollPaneSize.height += horizontal.getPreferredSize().height;
scrollPane.setPreferredSize(scrollPaneSize);
scrollPane.setMaximumSize(scrollPaneSize);
scrollPane.revalidate();
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,1,0,4,3,0,1,0,0.52,16,8
4654_25,25,25,Dimension scrollPaneSize = scrollPane.getPreferredSize();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,3,0,1,0,0.47,17,8
4654_26,26,26,scrollPaneSize.height += horizontal.getPreferredSize().height;,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,1,0,0.49,18,9
4654_27,27,27,scrollPane.setPreferredSize(scrollPaneSize);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,1,0,0.42,19,10
4654_28,28,28,scrollPane.setMaximumSize(scrollPaneSize);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,1,0,0.44,20,11
4654_29,29,29,scrollPane.revalidate();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,1,0,0.53,21,12
4653_1,1,1,private void popupWider(BasicComboPopup popup) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,1,0,0.43,15,6
4653_2,2,3,"@SuppressWarnings(""unchecked"")
JList<E> list = (JList<E>) popup.getList();",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,2,2,0,1,0,0.34,13,5
4653_6,6,8,"int popupWidth = list.getPreferredSize().width
+ 5
+ getScrollBarWidth(popup, scrollPane);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,2,2,0,1,1,0.58,8,4
4653_10,10,12,"if (maximumWidth != -1) {
popupWidth = Math.min(popupWidth, maximumWidth);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,1,1,0.73,4,2
4653_11,11,11,"popupWidth = Math.min(popupWidth, maximumWidth);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,1,1,0.74,5,2
4653_14,14,14,Dimension scrollPaneSize = scrollPane.getPreferredSize();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,1,0,0.52,2,1
4653_15,15,15,"popupWidth = Math.max(popupWidth, scrollPaneSize.width);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,1,1,0.7,1,0
4653_18,18,18,scrollPaneSize.width = popupWidth;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,2,0,1,1,0.65,1,0
4653_19,19,19,scrollPane.setPreferredSize(scrollPaneSize);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,1,0,0.44,2,0
4653_20,20,20,scrollPane.setMaximumSize(scrollPaneSize);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,1,0,0.47,3,1
4652_1,1,1,private void popupWider(BasicComboPopup popup) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,15,1,1,1,0.57,3,1
4652_2,2,3,"@SuppressWarnings(""unchecked"")
JList<E> list = (JList<E>) popup.getList();",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,20,15,1,1,1,0.44,1,0
4652_6,6,8,"int popupWidth = list.getPreferredSize().width
+ 5
+ getScrollBarWidth(popup, scrollPane);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,20,15,1,1,5,0.72,1,0
4652_10,10,12,"if (maximumWidth != -1) {
popupWidth = Math.min(popupWidth, maximumWidth);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,20,15,1,1,3,0.76,5,1
4652_11,11,11,"popupWidth = Math.min(popupWidth, maximumWidth);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,15,1,1,3,0.77,6,1
4652_14,14,14,Dimension scrollPaneSize = scrollPane.getPreferredSize();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,20,15,1,1,3,0.68,9,3
4652_15,15,15,"popupWidth = Math.max(popupWidth, scrollPaneSize.width);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,20,15,1,1,4,0.78,10,3
4652_18,18,18,scrollPaneSize.width = popupWidth;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,20,15,1,1,4,0.79,13,5
4652_19,19,19,scrollPane.setPreferredSize(scrollPaneSize);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,20,15,1,1,3,0.68,14,5
4652_20,20,20,scrollPane.setMaximumSize(scrollPaneSize);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,20,15,1,1,3,0.68,15,6
4525_1,1,1,"private boolean windowCommand(Socket client, String command, String parameters) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,3,0.68,12,8
4525_2,2,2,boolean success = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.25,11,7
4525_3,3,3,BufferedWriter out = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,0,0,0,0.38,10,6
4525_5,5,45,"try {
int index = parameters.indexOf(' ');
if (index == -1) {
index = parameters.length();
}
final String code = parameters.substring(0, index);
int hashCode = (int) Long.parseLong(code, 16);

if (index < parameters.length()) {
parameters = parameters.substring(index + 1);
} else {
parameters = """";
}

final View window = findWindow(hashCode);
if (window == null) {
return false;
}

final Method dispatch = ViewDebug.class.getDeclaredMethod(""dispatchCommand"", View.class, String.class, String.class, OutputStream.class);
dispatch.setAccessible(true);
dispatch.invoke(null, window, command, parameters, new UncloseableOutputStream(client.getOutputStream()));

if (!client.isOutputShutdown()) {
out = new BufferedWriter(new OutputStreamWriter(client.getOutputStream()));
out.write(""DONE\n"");
out.flush();
}

} catch (Exception e) {
Log.w(LOG_TAG, ""Could not send command "" + command + "" with parameters "" + parameters, e);
success = false;
} finally {
if (out != null) {
try {
out.close();
} catch (IOException e) {
success = false;
}
}
}",0,0,0,0,1,0,0,0,0,28,3,41,0,0,1,1,5,4,0,0,3,0.65,0,0
4525_6,6,6,int index = parameters.indexOf(' ');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.46,7,4
4525_7,7,9,"if (index == -1) {
index = parameters.length();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,4,0,0,1,0.48,4,2
4525_8,8,8,index = parameters.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.55,5,2
4525_10,10,10,"final String code = parameters.substring(0, index);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.46,3,1
4525_11,11,11,"int hashCode = (int) Long.parseLong(code, 16);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,5,4,0,0,0,0.35,2,0
4525_13,13,17,"if (index < parameters.length()) {
parameters = parameters.substring(index + 1);
} else {
parameters = """";
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,5,4,0,0,1,0.57,0,0
4525_14,14,14,parameters = parameters.substring(index + 1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.55,1,0
4525_15,15,15,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.21,2,1
4525_16,16,16,"parameters = """";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.69,3,2
4525_19,19,19,final View window = findWindow(hashCode);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,1,0.51,6,4
4525_20,20,22,"if (window == null) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,5,4,0,0,1,0.4,7,4
4525_21,21,21,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.2,8,5
4525_24,24,24,"final Method dispatch = ViewDebug.class.getDeclaredMethod(""dispatchCommand"", View.class, String.class, String.class, OutputStream.class);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,1,0.5,11,7
4525_25,25,25,dispatch.setAccessible(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.34,12,7
4525_26,26,26,"dispatch.invoke(null, window, command, parameters, new UncloseableOutputStream(client.getOutputStream()));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,0,0,3,0.67,13,8
4525_28,28,32,"if (!client.isOutputShutdown()) {
out = new BufferedWriter(new OutputStreamWriter(client.getOutputStream()));
out.write(""DONE\n"");
out.flush();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,5,4,0,0,0,0.43,15,10
4525_29,29,29,out = new BufferedWriter(new OutputStreamWriter(client.getOutputStream()));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.44,16,10
4525_30,30,30,"out.write(""DONE\n"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.32,17,11
4525_31,31,31,out.flush();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.3,18,12
4525_34,34,34,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.34,21,14
4525_35,35,35,"Log.w(LOG_TAG, ""Could not send command "" + command + "" with parameters "" + parameters, e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.63,22,14
4525_36,36,36,success = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.24,23,15
4525_37,37,37,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.22,24,16
4525_38,38,44,"if (out != null) {
try {
out.close();
} catch (IOException e) {
success = false;
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,0,0,5,4,0,0,0,0.33,25,17
4525_39,39,43,"try {
out.close();
} catch (IOException e) {
success = false;
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,5,4,0,0,0,0.34,26,18
4525_40,40,40,out.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.24,27,19
4525_41,41,41,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.37,28,20
4525_42,42,42,success = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.24,29,21
4525_47,47,47,return success;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,4,0,0,0,0.25,34,23
4524_1,1,1,"private boolean windowCommand(Socket client, String command, String parameters) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.46,5,3
4524_2,2,2,boolean success = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.21,4,2
4524_3,3,3,BufferedWriter out = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.37,3,1
4524_5,5,45,"try {
int index = parameters.indexOf(' ');
if (index == -1) {
index = parameters.length();
}
final String code = parameters.substring(0, index);
int hashCode = (int) Long.parseLong(code, 16);

if (index < parameters.length()) {
parameters = parameters.substring(index + 1);
} else {
parameters = """";
}

final View window = findWindow(hashCode);
if (window == null) {
return false;
}

final Method dispatch = ViewDebug.class.getDeclaredMethod(""dispatchCommand"", View.class, String.class, String.class, OutputStream.class);
dispatch.setAccessible(true);
dispatch.invoke(null, window, command, parameters, new UncloseableOutputStream(client.getOutputStream()));

if (!client.isOutputShutdown()) {
out = new BufferedWriter(new OutputStreamWriter(client.getOutputStream()));
out.write(""DONE\n"");
out.flush();
}

} catch (Exception e) {
Log.w(LOG_TAG, ""Could not send command "" + command + "" with parameters "" + parameters, e);
success = false;
} finally {
if (out != null) {
try {
out.close();
} catch (IOException e) {
success = false;
}
}
}",0,0,0,0,1,0,0,0,0,28,3,41,0,0,1,1,4,2,1,0,4,0.7,0,0
4524_6,6,6,int index = parameters.indexOf(' ');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.34,0,0
4524_7,7,9,"if (index == -1) {
index = parameters.length();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,2,1,0,0,0.34,1,0
4524_8,8,8,index = parameters.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.36,2,1
4524_10,10,10,"final String code = parameters.substring(0, index);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.45,4,3
4524_11,11,11,"int hashCode = (int) Long.parseLong(code, 16);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,4,2,1,0,2,0.6,5,3
4524_13,13,17,"if (index < parameters.length()) {
parameters = parameters.substring(index + 1);
} else {
parameters = """";
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,2,1,0,0,0.35,7,5
4524_14,14,14,parameters = parameters.substring(index + 1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.31,8,5
4524_15,15,15,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.16,9,6
4524_16,16,16,"parameters = """";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.32,10,7
4524_19,19,19,final View window = findWindow(hashCode);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,4,0.9,13,9
4524_20,20,22,"if (window == null) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,4,2,1,0,1,0.41,14,9
4524_21,21,21,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.2,15,10
4524_24,24,24,"final Method dispatch = ViewDebug.class.getDeclaredMethod(""dispatchCommand"", View.class, String.class, String.class, OutputStream.class);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.38,18,12
4524_25,25,25,dispatch.setAccessible(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.32,19,12
4524_26,26,26,"dispatch.invoke(null, window, command, parameters, new UncloseableOutputStream(client.getOutputStream()));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,1,0.47,20,13
4524_28,28,32,"if (!client.isOutputShutdown()) {
out = new BufferedWriter(new OutputStreamWriter(client.getOutputStream()));
out.write(""DONE\n"");
out.flush();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,2,1,0,0,0.35,22,15
4524_29,29,29,out = new BufferedWriter(new OutputStreamWriter(client.getOutputStream()));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.37,23,15
4524_30,30,30,"out.write(""DONE\n"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.29,24,16
4524_31,31,31,out.flush();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.21,25,17
4524_34,34,34,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.28,28,19
4524_35,35,35,"Log.w(LOG_TAG, ""Could not send command "" + command + "" with parameters "" + parameters, e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.34,29,19
4524_36,36,36,success = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.27,30,20
4524_37,37,37,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.18,31,21
4524_38,38,44,"if (out != null) {
try {
out.close();
} catch (IOException e) {
success = false;
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,0,0,4,2,1,0,0,0.32,32,22
4524_39,39,43,"try {
out.close();
} catch (IOException e) {
success = false;
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,4,2,1,0,0,0.32,33,23
4524_40,40,40,out.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.27,34,24
4524_41,41,41,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.3,35,25
4524_42,42,42,success = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.27,36,26
4524_47,47,47,return success;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.29,41,28
4481_1,1,3,"@Nullable
@Override
public BrowserRoot onGetRoot(@NonNull String clientPackageName, int clientUid, @Nullable Bundle rootHints) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,9,4,3,0,0,0.4,0,0
4481_4,4,6,"if (!mPackageValidator.isKnownCaller(clientPackageName, clientUid)) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,9,4,3,0,0,0.39,0,0
4481_5,5,5,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,4,3,0,0,0.29,1,0
4481_8,8,15,"Predicate<Bundle> isSystemMediaQuery = (hints) -> {
if (hints == null) {return false;}
if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.Q) {return false;}
if (hints.getBoolean(BrowserRoot.EXTRA_RECENT)) {return true;}
if (hints.getBoolean(BrowserRoot.EXTRA_SUGGESTED)) {return true;}
if (hints.getBoolean(BrowserRoot.EXTRA_OFFLINE)) {return true;}
return false;
};",0,0,0,0,0,1,0,0,0,6,2,8,0,1,1,0,9,4,3,0,0,0.42,4,2
4481_9,9,9,if (hints == null) {return false;},1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,9,4,3,0,0,0.31,5,2
4481_10,10,10,if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.Q) {return false;},1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,9,4,3,0,0,0.38,6,3
4481_11,11,11,if (hints.getBoolean(BrowserRoot.EXTRA_RECENT)) {return true;},1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,9,4,3,0,0,0.4,7,4
4481_12,12,12,if (hints.getBoolean(BrowserRoot.EXTRA_SUGGESTED)) {return true;},1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,9,4,3,0,0,0.38,8,5
4481_13,13,13,if (hints.getBoolean(BrowserRoot.EXTRA_OFFLINE)) {return true;},1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,9,4,3,0,0,0.4,9,6
4481_14,14,14,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,4,3,0,0,0.34,10,7
4481_16,16,18,"if (isSystemMediaQuery.test(rootHints)) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,9,4,3,0,0,0.34,12,9
4481_17,17,17,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,4,3,0,0,0.29,13,9
4481_20,20,20,"return new BrowserRoot(AutoMediaIDHelper.MEDIA_ID_ROOT, null);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,9,4,3,0,0,0.37,16,11
4480_1,1,1,public void setPosition(final int position) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.43,0,0
4480_2,2,2,playerHandler.removeMessages(SET_POSITION);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,1,0.46,0,0
4480_3,3,3,"playerHandler.obtainMessage(SET_POSITION, position, 0).sendToTarget();",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,1,0.48,1,0
4479_1,1,1,public void playSongAt(final int position) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.41,0,0
4479_2,2,2,playerHandler.removeMessages(PLAY_SONG);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,1,0.43,0,0
4479_3,3,3,"playerHandler.obtainMessage(PLAY_SONG, position, 0).sendToTarget();",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,1,0.47,1,0
4478_1,1,2,"    @Override
public void onCreate() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,6,3,0,0,0.45,14,10
4478_3,3,3,super.onCreate();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,3,0,0,0.3,13,9
4478_4,4,4,final PowerManager powerManager = (PowerManager) getSystemService(Context.POWER_SERVICE);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,6,3,0,0,0.37,12,8
4478_5,5,5,"wakeLock = powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, getClass().getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,6,3,0,0,0.41,11,7
4478_6,6,6,wakeLock.setReferenceCounted(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,10,6,3,0,0,0.37,10,6
4478_8,8,8,"musicPlayerHandlerThread = new HandlerThread(""PlaybackHandler"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,10,6,3,0,3,0.7,8,5
4478_9,9,9,musicPlayerHandlerThread.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,3,0,2,0.6,7,4
4478_10,10,10,"playerHandler = new PlaybackHandler(this, musicPlayerHandlerThread.getLooper());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,10,6,3,0,3,0.63,6,3
4478_12,12,12,playback = new MultiPlayer(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,10,6,3,0,1,0.47,4,2
4478_13,13,13,playback.setCallbacks(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,10,6,3,0,1,0.53,3,1
4478_15,15,15,setupMediaSession();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,10,6,3,0,0,0.37,1,0
4478_17,17,17,"queueSaveHandlerThread = new HandlerThread(""QueueSaveHandler"", Process.THREAD_PRIORITY_BACKGROUND);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,10,6,3,0,4,0.73,0,0
4478_18,18,18,queueSaveHandlerThread.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,3,0,4,0.76,1,0
4478_19,19,19,"queueSaveHandler = new QueueSaveHandler(this, queueSaveHandlerThread.getLooper());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,10,6,3,0,4,0.75,2,1
4478_21,21,21,uiThreadHandler = new Handler();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,10,6,3,0,2,0.61,4,3
4478_23,23,23,"registerReceiver(widgetIntentReceiver, new IntentFilter(APP_WIDGET_UPDATE));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,10,6,3,0,0,0.36,6,4
4478_24,24,24,"registerReceiver(updateFavoriteReceiver, new IntentFilter(FAVORITE_STATE_CHANGED));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,10,6,3,0,0,0.42,7,4
4478_26,26,26,initNotification();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,10,6,3,0,0,0.33,9,6
4478_28,28,28,"mediaStoreObserver = new MediaStoreObserver(this, playerHandler);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,10,6,3,0,1,0.43,11,7
4478_29,29,29,"throttledSeekHandler = new ThrottledSeekHandler(this, playerHandler);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,3,0,1,0.53,12,7
4478_30,30,31,"getContentResolver().registerContentObserver(
MediaStore.Audio.Media.INTERNAL_CONTENT_URI, true, mediaStoreObserver);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,10,6,3,0,0,0.37,13,8
4478_32,32,33,"getContentResolver().registerContentObserver(
MediaStore.Audio.Media.EXTERNAL_CONTENT_URI, true, mediaStoreObserver);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,1,10,6,3,0,0,0.36,15,10
4478_35,35,35,PreferenceUtil.getInstance().registerOnSharedPreferenceChangedListener(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,10,6,3,0,0,0.38,18,11
4478_37,37,37,restoreState();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,10,6,3,0,0,0.3,20,12
4478_39,39,39,"mPackageValidator = new PackageValidator(this, R.xml.allowed_media_browser_callers);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,10,6,3,0,0,0.34,22,13
4478_40,40,40,mMusicProvider = new AutoMusicProvider(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,10,6,3,0,0,0.33,23,13
4478_42,42,42,"sendBroadcast(new Intent(VINYL_MUSIC_PLAYER_PACKAGE_NAME + "".VINYL_MUSIC_PLAYER_MUSIC_SERVICE_CREATED""));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,10,6,3,0,0,0.36,25,15
4478_44,44,44,mediaStoreObserver.onChange(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,10,6,3,0,0,0.34,27,16
4432_1,1,2,"        @Override
public String toExternalCategoryUrl(SlingHttpServletRequest request, Page page, CategoryUrlFormat.Params params) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,1,0,0,0.3,2,2
4432_3,3,3,"String externalPath = externalize(page, params.getPage());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.21,1,1
4432_4,4,10,"if (externalPath != null) {
params = new CategoryUrlFormat.Params(params);
params.setPage(externalPath);
return urlProvider.toCategoryUrl(request, null, params);
} else {
return urlProvider.toCategoryUrl(request, page, params);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,1,0,0,2,1,1,0,0,0.24,0,0
4432_5,5,5,params = new CategoryUrlFormat.Params(params);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.22,0,0
4432_6,6,6,params.setPage(externalPath);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.23,1,0
4432_7,7,7,"return urlProvider.toCategoryUrl(request, null, params);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.21,2,1
4432_8,8,8,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.1,3,2
4432_9,9,9,"return urlProvider.toCategoryUrl(request, page, params);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.22,4,3
4431_1,1,2,"        @Override
public String toExternalProductUrl(SlingHttpServletRequest request, Page page, ProductUrlFormat.Params params) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,1,0,0,0.3,2,2
4431_3,3,3,"String externalPath = externalize(page, params.getPage());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.21,1,1
4431_4,4,10,"if (externalPath != null) {
params = new ProductUrlFormat.Params(params);
params.setPage(externalPath);
return urlProvider.toProductUrl(request, null, params);
} else {
return urlProvider.toProductUrl(request, page, params);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,1,0,0,2,1,1,0,0,0.24,0,0
4431_5,5,5,params = new ProductUrlFormat.Params(params);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.21,0,0
4431_6,6,6,params.setPage(externalPath);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.23,1,0
4431_7,7,7,"return urlProvider.toProductUrl(request, null, params);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.19,2,1
4431_8,8,8,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.1,3,2
4431_9,9,9,"return urlProvider.toProductUrl(request, page, params);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.2,4,3
4430_1,1,1,    public SitemapLinkExternalizer getExternalizer(ResourceResolver resourceResolver) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,3,0.61,0,0
4430_2,2,9,"try {
if (externalizerService instanceof com.adobe.aem.wcm.seo.sitemap.externalizer.SitemapLinkExternalizer) {
return new SeoSitemapLinkExternalizer(
(com.adobe.aem.wcm.seo.sitemap.externalizer.SitemapLinkExternalizer) externalizerService, resourceResolver);
}
} catch (NoClassDefFoundError ex) {
LOGGER.debug(""Could not load com.adobe.aem.wcm.seo.sitemap.externalizer.SitemapLinkExternalizer"", ex);
}",0,0,0,0,1,0,0,0,0,4,2,8,0,0,0,1,7,7,0,0,5,0.68,0,0
4430_3,3,6,"if (externalizerService instanceof com.adobe.aem.wcm.seo.sitemap.externalizer.SitemapLinkExternalizer) {
return new SeoSitemapLinkExternalizer(
(com.adobe.aem.wcm.seo.sitemap.externalizer.SitemapLinkExternalizer) externalizerService, resourceResolver);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,7,7,0,0,4,0.65,1,0
4430_4,4,5,"return new SeoSitemapLinkExternalizer(
(com.adobe.aem.wcm.seo.sitemap.externalizer.SitemapLinkExternalizer) externalizerService, resourceResolver);",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,7,7,0,0,4,0.63,2,1
4430_7,7,7,} catch (NoClassDefFoundError ex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.42,5,3
4430_8,8,8,"LOGGER.debug(""Could not load com.adobe.aem.wcm.seo.sitemap.externalizer.SitemapLinkExternalizer"", ex);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,4,0.62,6,3
4430_11,11,11,"return new SlingSitemapLinkExternalizer(externalizerService, resourceResolver);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,7,0,0,3,0.59,9,5
4429_1,1,1,    public static boolean isCategoryPage(Page currentPage) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,2,0.62,5,3
4429_2,2,2,Page categoryPage = getCategoryPage(currentPage);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,4,1,0,2,0.66,4,2
4429_3,3,5,"if (categoryPage == null) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,9,4,1,0,2,0.56,1,0
4429_4,4,4,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,4,1,0,0,0.28,2,0
4429_7,7,7,"String currentPagePath = currentPage.getPath().substring(currentPage.getPath().lastIndexOf(""/content/""));",0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,9,4,1,0,2,0.54,0,0
4429_8,8,8,"String categoryPagePath = categoryPage.getPath().substring(categoryPage.getPath().lastIndexOf(""/content/""));",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,9,4,1,0,3,0.65,1,0
4429_10,10,10,"return currentPagePath.equals(categoryPagePath) || currentPagePath.startsWith(categoryPagePath + ""/"");",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,9,4,1,0,3,0.67,3,2
4428_1,1,1,    public static boolean isProductPage(Page currentPage) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,2,0.66,5,3
4428_2,2,2,Page productPage = getProductPage(currentPage);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,1,0,2,0.7,4,2
4428_3,3,5,"if (productPage == null) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,9,5,1,0,2,0.6,1,0
4428_4,4,4,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,5,1,0,0,0.27,2,0
4428_7,7,7,"String currentPagePath = currentPage.getPath().substring(currentPage.getPath().lastIndexOf(""/content/""));",0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,9,5,1,0,2,0.54,0,0
4428_8,8,8,"String productPagePath = productPage.getPath().substring(productPage.getPath().lastIndexOf(""/content/""));",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,9,5,1,0,3,0.68,1,0
4428_10,10,10,"return currentPagePath.equals(productPagePath) || currentPagePath.startsWith(productPagePath + ""/"");",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,9,5,1,0,3,0.7,3,2
4427_1,1,2,"    @Nullable
protected static Page getGenericPage(String pageTypeProperty, Page page) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,16,13,3,0,2,0.64,10,7
4427_3,3,3,InheritanceValueMap properties = new HierarchyNodeInheritanceValueMap(page.getContentResource());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,16,13,3,0,2,0.53,9,6
4427_4,4,4,"String genericPagePath = properties.getInherited(pageTypeProperty, String.class);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,16,13,3,0,2,0.6,8,5
4427_6,6,21,"if (StringUtils.isBlank(genericPagePath) && LaunchUtils.isLaunchBasedPath(page.getPath())) {

Page productionPage = toLaunchProductionPage(page);
if (productionPage != page) {
properties = new HierarchyNodeInheritanceValueMap(productionPage.getContentResource());
genericPagePath = properties.getInherited(pageTypeProperty, String.class);

if (genericPagePath != null) {
Resource launchResource = LaunchUtils.getLaunchResource(page.getContentResource());
String genericPagePathInLaunch = launchResource.getPath() + genericPagePath;
if (page.getPageManager().getPage(genericPagePathInLaunch) != null) {
genericPagePath = genericPagePathInLaunch;
}
}
}
}",1,0,0,0,0,0,0,0,0,9,4,16,0,0,1,1,16,13,3,0,4,0.67,0,0
4427_8,8,8,Page productionPage = toLaunchProductionPage(page);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,16,13,3,0,3,0.77,4,3
4427_9,9,20,"if (productionPage != page) {
properties = new HierarchyNodeInheritanceValueMap(productionPage.getContentResource());
genericPagePath = properties.getInherited(pageTypeProperty, String.class);

if (genericPagePath != null) {
Resource launchResource = LaunchUtils.getLaunchResource(page.getContentResource());
String genericPagePathInLaunch = launchResource.getPath() + genericPagePath;
if (page.getPageManager().getPage(genericPagePathInLaunch) != null) {
genericPagePath = genericPagePathInLaunch;
}
}
}",1,0,0,0,0,0,0,0,0,7,3,12,0,1,0,0,16,13,3,0,4,0.66,0,0
4427_10,10,10,properties = new HierarchyNodeInheritanceValueMap(productionPage.getContentResource());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,16,13,3,0,3,0.57,2,1
4427_11,11,11,"genericPagePath = properties.getInherited(pageTypeProperty, String.class);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,16,13,3,0,2,0.61,1,0
4427_13,13,19,"if (genericPagePath != null) {
Resource launchResource = LaunchUtils.getLaunchResource(page.getContentResource());
String genericPagePathInLaunch = launchResource.getPath() + genericPagePath;
if (page.getPageManager().getPage(genericPagePathInLaunch) != null) {
genericPagePath = genericPagePathInLaunch;
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,16,13,3,0,2,0.59,0,0
4427_14,14,14,Resource launchResource = LaunchUtils.getLaunchResource(page.getContentResource());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,16,13,3,0,2,0.57,1,0
4427_15,15,15,String genericPagePathInLaunch = launchResource.getPath() + genericPagePath;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,16,13,3,0,2,0.57,2,1
4427_16,16,18,"if (page.getPageManager().getPage(genericPagePathInLaunch) != null) {
genericPagePath = genericPagePathInLaunch;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,16,13,3,0,2,0.6,3,2
4427_17,17,17,genericPagePath = genericPagePathInLaunch;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,13,3,0,2,0.59,4,3
4427_23,23,26,"if (StringUtils.isBlank(genericPagePath)) {
LOGGER.warn(""Page property {} not found at {}"", pageTypeProperty, page.getPath());
return null;
}",1,0,0,0,0,0,0,0,0,2,2,4,0,0,1,1,16,13,3,0,3,0.62,10,5
4427_24,24,24,"LOGGER.warn(""Page property {} not found at {}"", pageTypeProperty, page.getPath());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,13,3,0,3,0.67,11,5
4427_25,25,25,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,16,13,3,0,0,0.29,12,6
4427_28,28,28,PageManager pageManager = page.getPageManager();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,16,13,3,0,1,0.53,15,8
4427_29,29,29,Page genericPage = pageManager.getPage(genericPagePath);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,16,13,3,0,1,0.57,16,8
4427_30,30,33,"if (genericPage == null) {
LOGGER.warn(""No page found at {}"", genericPagePath);
return null;
}",1,0,0,0,0,0,0,0,0,2,2,4,0,1,0,1,16,13,3,0,2,0.58,17,9
4427_31,31,31,"LOGGER.warn(""No page found at {}"", genericPagePath);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,13,3,0,2,0.61,18,10
4427_32,32,32,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,16,13,3,0,0,0.29,19,11
4427_35,35,35,return genericPage;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,16,13,3,0,1,0.51,22,13
4426_1,1,2,"    @Nullable
protected static Page getGenericPage(String pageTypeProperty, Page page) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,2,0.67,5,3
4426_3,3,3,InheritanceValueMap properties = new HierarchyNodeInheritanceValueMap(page.getContentResource());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,3,0.7,4,2
4426_4,4,4,"String genericPagePath = properties.getInherited(pageTypeProperty, String.class);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,5,5,0,0,2,0.6,3,1
4426_6,6,21,"if (StringUtils.isBlank(genericPagePath) && LaunchUtils.isLaunchBasedPath(page.getPath())) {

Page productionPage = toLaunchProductionPage(page);
if (productionPage != page) {
properties = new HierarchyNodeInheritanceValueMap(productionPage.getContentResource());
genericPagePath = properties.getInherited(pageTypeProperty, String.class);

if (genericPagePath != null) {
Resource launchResource = LaunchUtils.getLaunchResource(page.getContentResource());
String genericPagePathInLaunch = launchResource.getPath() + genericPagePath;
if (page.getPageManager().getPage(genericPagePathInLaunch) != null) {
genericPagePath = genericPagePathInLaunch;
}
}
}
}",1,0,0,0,0,0,0,0,0,9,4,16,0,0,1,1,5,5,0,0,4,0.73,0,0
4426_8,8,8,Page productionPage = toLaunchProductionPage(page);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,2,0.72,0,0
4426_9,9,20,"if (productionPage != page) {
properties = new HierarchyNodeInheritanceValueMap(productionPage.getContentResource());
genericPagePath = properties.getInherited(pageTypeProperty, String.class);

if (genericPagePath != null) {
Resource launchResource = LaunchUtils.getLaunchResource(page.getContentResource());
String genericPagePathInLaunch = launchResource.getPath() + genericPagePath;
if (page.getPageManager().getPage(genericPagePathInLaunch) != null) {
genericPagePath = genericPagePathInLaunch;
}
}
}",1,0,0,0,0,0,0,0,0,7,3,12,0,1,0,0,5,5,0,0,4,0.73,1,0
4426_10,10,10,properties = new HierarchyNodeInheritanceValueMap(productionPage.getContentResource());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,4,0.76,2,1
4426_11,11,11,"genericPagePath = properties.getInherited(pageTypeProperty, String.class);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,2,0.62,3,2
4426_13,13,19,"if (genericPagePath != null) {
Resource launchResource = LaunchUtils.getLaunchResource(page.getContentResource());
String genericPagePathInLaunch = launchResource.getPath() + genericPagePath;
if (page.getPageManager().getPage(genericPagePathInLaunch) != null) {
genericPagePath = genericPagePathInLaunch;
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,5,5,0,0,1,0.47,5,4
4426_14,14,14,Resource launchResource = LaunchUtils.getLaunchResource(page.getContentResource());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.42,6,4
4426_15,15,15,String genericPagePathInLaunch = launchResource.getPath() + genericPagePath;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.44,7,5
4426_16,16,18,"if (page.getPageManager().getPage(genericPagePathInLaunch) != null) {
genericPagePath = genericPagePathInLaunch;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,5,0,0,1,0.48,8,6
4426_17,17,17,genericPagePath = genericPagePathInLaunch;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.46,9,7
4426_23,23,26,"if (StringUtils.isBlank(genericPagePath)) {
LOGGER.warn(""Page property {} not found at {}"", pageTypeProperty, page.getPath());
return null;
}",1,0,0,0,0,0,0,0,0,2,2,4,0,0,1,1,5,5,0,0,2,0.57,15,9
4426_24,24,24,"LOGGER.warn(""Page property {} not found at {}"", pageTypeProperty, page.getPath());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.62,16,9
4426_25,25,25,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.14,17,10
4426_28,28,28,PageManager pageManager = page.getPageManager();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,1,0.54,20,12
4426_29,29,29,Page genericPage = pageManager.getPage(genericPagePath);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.54,21,12
4426_30,30,33,"if (genericPage == null) {
LOGGER.warn(""No page found at {}"", genericPagePath);
return null;
}",1,0,0,0,0,0,0,0,0,2,2,4,0,1,0,1,5,5,0,0,1,0.47,22,13
4426_31,31,31,"LOGGER.warn(""No page found at {}"", genericPagePath);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.5,23,14
4426_32,32,32,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.14,24,15
4426_35,35,35,return genericPage;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,5,0,0,1,0.44,27,17
4425_1,1,2,"    @Nullable
protected static Page getGenericPage(String pageTypeProperty, Page page) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,1,0,1,0.57,3,2
4425_3,3,3,InheritanceValueMap properties = new HierarchyNodeInheritanceValueMap(page.getContentResource());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.46,2,1
4425_4,4,4,"String genericPagePath = properties.getInherited(pageTypeProperty, String.class);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,4,3,1,0,1,0.5,1,0
4425_6,6,21,"if (StringUtils.isBlank(genericPagePath) && LaunchUtils.isLaunchBasedPath(page.getPath())) {

Page productionPage = toLaunchProductionPage(page);
if (productionPage != page) {
properties = new HierarchyNodeInheritanceValueMap(productionPage.getContentResource());
genericPagePath = properties.getInherited(pageTypeProperty, String.class);

if (genericPagePath != null) {
Resource launchResource = LaunchUtils.getLaunchResource(page.getContentResource());
String genericPagePathInLaunch = launchResource.getPath() + genericPagePath;
if (page.getPageManager().getPage(genericPagePathInLaunch) != null) {
genericPagePath = genericPagePathInLaunch;
}
}
}
}",1,0,0,0,0,0,0,0,0,9,4,16,0,0,1,1,4,3,1,0,2,0.68,0,0
4425_8,8,8,Page productionPage = toLaunchProductionPage(page);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,1,0,2,0.79,2,1
4425_9,9,20,"if (productionPage != page) {
properties = new HierarchyNodeInheritanceValueMap(productionPage.getContentResource());
genericPagePath = properties.getInherited(pageTypeProperty, String.class);

if (genericPagePath != null) {
Resource launchResource = LaunchUtils.getLaunchResource(page.getContentResource());
String genericPagePathInLaunch = launchResource.getPath() + genericPagePath;
if (page.getPageManager().getPage(genericPagePathInLaunch) != null) {
genericPagePath = genericPagePathInLaunch;
}
}
}",1,0,0,0,0,0,0,0,0,7,3,12,0,1,0,0,4,3,1,0,2,0.67,3,1
4425_10,10,10,properties = new HierarchyNodeInheritanceValueMap(productionPage.getContentResource());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.47,4,2
4425_11,11,11,"genericPagePath = properties.getInherited(pageTypeProperty, String.class);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,1,0,1,0.51,5,3
4425_13,13,19,"if (genericPagePath != null) {
Resource launchResource = LaunchUtils.getLaunchResource(page.getContentResource());
String genericPagePathInLaunch = launchResource.getPath() + genericPagePath;
if (page.getPageManager().getPage(genericPagePathInLaunch) != null) {
genericPagePath = genericPagePathInLaunch;
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,4,3,1,0,2,0.68,7,5
4425_14,14,14,Resource launchResource = LaunchUtils.getLaunchResource(page.getContentResource());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,2,0.67,8,5
4425_15,15,15,String genericPagePathInLaunch = launchResource.getPath() + genericPagePath;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,2,0.67,9,6
4425_16,16,18,"if (page.getPageManager().getPage(genericPagePathInLaunch) != null) {
genericPagePath = genericPagePathInLaunch;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,1,0,2,0.7,10,7
4425_17,17,17,genericPagePath = genericPagePathInLaunch;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.71,11,8
4425_23,23,26,"if (StringUtils.isBlank(genericPagePath)) {
LOGGER.warn(""Page property {} not found at {}"", pageTypeProperty, page.getPath());
return null;
}",1,0,0,0,0,0,0,0,0,2,2,4,0,0,1,1,4,3,1,0,2,0.64,17,10
4425_24,24,24,"LOGGER.warn(""Page property {} not found at {}"", pageTypeProperty, page.getPath());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.68,18,10
4425_25,25,25,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.25,19,11
4425_28,28,28,PageManager pageManager = page.getPageManager();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,1,0,1,0.55,22,13
4425_29,29,29,Page genericPage = pageManager.getPage(genericPagePath);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.59,23,13
4425_30,30,33,"if (genericPage == null) {
LOGGER.warn(""No page found at {}"", genericPagePath);
return null;
}",1,0,0,0,0,0,0,0,0,2,2,4,0,1,0,1,4,3,1,0,2,0.67,24,14
4425_31,31,31,"LOGGER.warn(""No page found at {}"", genericPagePath);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.71,25,15
4425_32,32,32,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.25,26,16
4425_35,35,35,return genericPage;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,1,0,1,0.52,29,18
4305_1,1,2,"@Override
public void writeTo(final OutputStream out) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.36,81,54
4305_3,3,5,"if (out == null) {
throw new IllegalStateException(""Output stream cannot be null."");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,2,0,0,0,0.36,78,52
4305_4,4,4,"throw new IllegalStateException(""Output stream cannot be null."");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,0,0,0,0.37,79,52
4305_7,7,7,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.24,76,51
4305_9,9,11,"OutputStream os = contentEncoding != null
? new GZIPOutputStream(out, BUFFER_SIZE)
: out;",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,3,2,0,0,0,0.37,72,50
4305_13,13,13,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.28,70,49
4305_15,15,15,Set<String> keys = jsonParams.keySet();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,0,0,1,0.5,68,48
4305_17,17,17,int keysCount = keys.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.28,66,47
4305_18,18,82,"if (0 < keysCount) {
int keysProcessed = 0;
boolean isFileWrapper;

for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}

long elapsedTime = System.currentTimeMillis() - now;

if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}

AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");
}",1,0,0,0,0,0,0,0,0,46,7,65,0,1,0,1,3,2,0,0,2,0.58,1,0
4305_19,19,19,int keysProcessed = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,64,45
4305_20,20,20,boolean isFileWrapper;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.27,63,44
4305_22,22,71,"for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}",0,0,0,1,0,0,0,0,0,37,6,50,0,0,1,1,3,2,0,0,2,0.59,12,6
4305_23,23,23,keysProcessed++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.33,60,42
4305_25,25,70,"try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}",0,0,0,0,1,0,0,0,0,35,5,46,0,0,1,0,3,2,0,0,2,0.58,13,6
4305_26,26,26,Object value = jsonParams.get(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,2,0.65,57,40
4305_28,28,28,os.write(escape(key));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,3,2,0,0,0,0.33,55,39
4305_29,29,29,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,3,2,0,0,0,0.28,54,38
4305_31,31,65,"if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}",1,0,0,0,0,0,0,0,0,28,4,35,0,0,1,0,3,2,0,0,2,0.58,18,9
4305_32,32,32,os.write(JSON_NULL);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.53,51,36
4305_33,33,33,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.11,50,35
4305_34,34,34,isFileWrapper = value instanceof RequestParams.FileWrapper;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.32,49,34
4305_36,36,64,"if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}",1,0,0,0,0,0,0,0,0,24,3,29,0,0,1,0,3,2,0,0,2,0.58,19,9
4305_37,37,37,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.28,46,32
4305_39,39,43,"if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,3,2,0,0,0,0.33,40,28
4305_40,40,40,"writeToFromFile(os, (RequestParams.FileWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.29,43,30
4305_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.11,42,29
4305_42,42,42,"writeToFromStream(os, (RequestParams.StreamWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.34,41,28
4305_45,45,45,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.28,38,27
4305_46,46,46,} else if (value instanceof JsonValueInterface) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.54,37,26
4305_47,47,47,os.write(((JsonValueInterface) value).getEscapedJsonValue());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.54,36,25
4305_48,48,48,} else if (value instanceof org.json.JSONObject) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.7,35,24
4305_49,49,49,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,34,23
4305_50,50,50,} else if (value instanceof org.json.JSONArray) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.59,33,22
4305_51,51,51,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,32,21
4305_52,52,52,} else if (value instanceof Boolean) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.29,31,20
4305_53,53,53,os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.52,30,19
4305_54,54,54,} else if (value instanceof Long) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.34,29,18
4305_55,55,55,"os.write((((Number) value).longValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.32,28,17
4305_56,56,56,} else if (value instanceof Double) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,27,16
4305_57,57,57,"os.write((((Number) value).doubleValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,26,15
4305_58,58,58,} else if (value instanceof Float) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.29,25,14
4305_59,59,59,"os.write((((Number) value).floatValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,24,13
4305_60,60,60,} else if (value instanceof Integer) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,23,12
4305_61,61,61,"os.write((((Number) value).intValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,22,11
4305_62,62,62,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.11,21,10
4305_63,63,63,os.write(escape(value.toString()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,20,9
4305_66,66,66,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.14,17,8
4305_67,67,69,"if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,0,0.35,14,6
4305_68,68,68,"os.write(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.28,15,6
4305_73,73,73,long elapsedTime = System.currentTimeMillis() - now;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.24,10,5
4305_75,75,79,"if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,3,2,0,0,0,0.34,4,1
4305_76,76,76,os.write(elapsedField);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.35,7,3
4305_77,77,77,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.28,6,2
4305_78,78,78,"os.write((elapsedTime + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.29,5,1
4305_81,81,81,"AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,1,0.49,2,0
4305_84,84,84,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.28,0,0
4305_86,86,86,os.flush();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.31,2,1
4305_87,87,87,AsyncHttpClient.silentCloseOutputStream(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.5,3,1
4301_1,1,2,"@Override
public void writeTo(final OutputStream out) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.3,36,22
4301_3,3,5,"if (out == null) {
throw new IllegalStateException(""Output stream cannot be null."");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,3,0,0,0,0.27,33,20
4301_4,4,4,"throw new IllegalStateException(""Output stream cannot be null."");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,0,0.27,34,20
4301_7,7,7,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.28,31,19
4301_9,9,11,"OutputStream os = contentEncoding != null
? new GZIPOutputStream(out, BUFFER_SIZE)
: out;",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,3,3,0,0,0,0.33,27,18
4301_13,13,13,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.33,25,17
4301_15,15,15,Set<String> keys = jsonParams.keySet();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.36,23,16
4301_17,17,17,int keysCount = keys.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.34,21,15
4301_18,18,82,"if (0 < keysCount) {
int keysProcessed = 0;
boolean isFileWrapper;

for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}

long elapsedTime = System.currentTimeMillis() - now;

if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}

AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");
}",1,0,0,0,0,0,0,0,0,46,7,65,0,1,0,1,3,3,0,0,0,0.39,0,0
4301_19,19,19,int keysProcessed = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.31,19,13
4301_20,20,20,boolean isFileWrapper;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.3,18,12
4301_22,22,71,"for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}",0,0,0,1,0,0,0,0,0,37,6,50,0,0,1,1,3,3,0,0,0,0.38,0,0
4301_23,23,23,keysProcessed++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.29,15,10
4301_25,25,70,"try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}",0,0,0,0,1,0,0,0,0,35,5,46,0,0,1,0,3,3,0,0,0,0.38,0,0
4301_26,26,26,Object value = jsonParams.get(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.36,12,8
4301_28,28,28,os.write(escape(key));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,3,3,0,0,0,0.34,10,7
4301_29,29,29,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,3,3,0,0,0,0.33,9,6
4301_31,31,65,"if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}",1,0,0,0,0,0,0,0,0,28,4,35,0,0,1,0,3,3,0,0,0,0.38,0,0
4301_32,32,32,os.write(JSON_NULL);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.34,6,4
4301_33,33,33,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.21,5,3
4301_34,34,34,isFileWrapper = value instanceof RequestParams.FileWrapper;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.34,4,2
4301_36,36,64,"if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}",1,0,0,0,0,0,0,0,0,24,3,29,0,0,1,0,3,3,0,0,0,0.38,0,0
4301_37,37,37,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.33,1,0
4301_39,39,43,"if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,3,3,0,0,0,0.34,0,0
4301_40,40,40,"writeToFromFile(os, (RequestParams.FileWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,1,0
4301_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.21,2,1
4301_42,42,42,"writeToFromStream(os, (RequestParams.StreamWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.35,3,2
4301_45,45,45,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.33,6,4
4301_46,46,46,} else if (value instanceof JsonValueInterface) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,7,4
4301_47,47,47,os.write(((JsonValueInterface) value).getEscapedJsonValue());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.34,8,5
4301_48,48,48,} else if (value instanceof org.json.JSONObject) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,9,6
4301_49,49,49,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,10,7
4301_50,50,50,} else if (value instanceof org.json.JSONArray) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.35,11,8
4301_51,51,51,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,12,9
4301_52,52,52,} else if (value instanceof Boolean) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,13,10
4301_53,53,53,os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,14,11
4301_54,54,54,} else if (value instanceof Long) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,15,12
4301_55,55,55,"os.write((((Number) value).longValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.35,16,13
4301_56,56,56,} else if (value instanceof Double) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.37,17,14
4301_57,57,57,"os.write((((Number) value).doubleValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.37,18,15
4301_58,58,58,} else if (value instanceof Float) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.35,19,16
4301_59,59,59,"os.write((((Number) value).floatValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.34,20,17
4301_60,60,60,} else if (value instanceof Integer) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.31,21,18
4301_61,61,61,"os.write((((Number) value).intValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,22,19
4301_62,62,62,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.21,23,20
4301_63,63,63,os.write(escape(value.toString()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,24,21
4301_66,66,66,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.17,27,23
4301_67,67,69,"if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,0,0.34,28,23
4301_68,68,68,"os.write(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,29,24
4301_73,73,73,long elapsedTime = System.currentTimeMillis() - now;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.27,34,26
4301_75,75,79,"if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,3,3,0,0,0,0.29,36,27
4301_76,76,76,os.write(elapsedField);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,0,0.29,37,27
4301_77,77,77,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,0,0.33,38,28
4301_78,78,78,"os.write((elapsedTime + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,0,0.28,39,29
4301_81,81,81,"AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.37,42,31
4301_84,84,84,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.33,45,32
4301_86,86,86,os.flush();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.39,47,33
4301_87,87,87,AsyncHttpClient.silentCloseOutputStream(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.33,48,33
4300_1,1,2,"@Override
public void writeTo(final OutputStream out) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.37,33,20
4300_3,3,5,"if (out == null) {
throw new IllegalStateException(""Output stream cannot be null."");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,2,2,0,0,0,0.33,30,18
4300_4,4,4,"throw new IllegalStateException(""Output stream cannot be null."");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,2,0,0,0,0.33,31,18
4300_7,7,7,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.23,28,17
4300_9,9,11,"OutputStream os = contentEncoding != null
? new GZIPOutputStream(out, BUFFER_SIZE)
: out;",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,2,2,0,0,0,0.43,24,16
4300_13,13,13,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.46,22,15
4300_15,15,15,Set<String> keys = jsonParams.keySet();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.25,20,14
4300_17,17,17,int keysCount = keys.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.12,18,13
4300_18,18,82,"if (0 < keysCount) {
int keysProcessed = 0;
boolean isFileWrapper;

for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}

long elapsedTime = System.currentTimeMillis() - now;

if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}

AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");
}",1,0,0,0,0,0,0,0,0,46,7,65,0,1,0,1,2,2,0,0,2,0.63,0,0
4300_19,19,19,int keysProcessed = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,16,11
4300_20,20,20,boolean isFileWrapper;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,1,0.7,15,10
4300_22,22,71,"for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}",0,0,0,1,0,0,0,0,0,37,6,50,0,0,1,1,2,2,0,0,1,0.55,0,0
4300_23,23,23,keysProcessed++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.21,12,8
4300_25,25,70,"try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}",0,0,0,0,1,0,0,0,0,35,5,46,0,0,1,0,2,2,0,0,1,0.55,0,0
4300_26,26,26,Object value = jsonParams.get(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.25,9,6
4300_28,28,28,os.write(escape(key));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,2,2,0,0,0,0.41,7,5
4300_29,29,29,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,2,2,0,0,0,0.46,6,4
4300_31,31,65,"if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}",1,0,0,0,0,0,0,0,0,28,4,35,0,0,1,0,2,2,0,0,1,0.55,0,0
4300_32,32,32,os.write(JSON_NULL);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.43,3,2
4300_33,33,33,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.12,2,1
4300_34,34,34,isFileWrapper = value instanceof RequestParams.FileWrapper;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,1,0.65,1,0
4300_36,36,64,"if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}",1,0,0,0,0,0,0,0,0,24,3,29,0,0,1,0,2,2,0,0,1,0.54,0,0
4300_37,37,37,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.46,1,0
4300_39,39,43,"if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,2,2,0,0,1,0.62,3,2
4300_40,40,40,"writeToFromFile(os, (RequestParams.FileWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.65,4,2
4300_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.12,5,3
4300_42,42,42,"writeToFromStream(os, (RequestParams.StreamWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.44,6,4
4300_45,45,45,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.46,9,6
4300_46,46,46,} else if (value instanceof JsonValueInterface) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,10,6
4300_47,47,47,os.write(((JsonValueInterface) value).getEscapedJsonValue());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.36,11,7
4300_48,48,48,} else if (value instanceof org.json.JSONObject) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.3,12,8
4300_49,49,49,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.37,13,9
4300_50,50,50,} else if (value instanceof org.json.JSONArray) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.31,14,10
4300_51,51,51,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.37,15,11
4300_52,52,52,} else if (value instanceof Boolean) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,16,12
4300_53,53,53,os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.37,17,13
4300_54,54,54,} else if (value instanceof Long) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.23,18,14
4300_55,55,55,"os.write((((Number) value).longValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.34,19,15
4300_56,56,56,} else if (value instanceof Double) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,20,16
4300_57,57,57,"os.write((((Number) value).doubleValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.34,21,17
4300_58,58,58,} else if (value instanceof Float) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,22,18
4300_59,59,59,"os.write((((Number) value).floatValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.35,23,19
4300_60,60,60,} else if (value instanceof Integer) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,24,20
4300_61,61,61,"os.write((((Number) value).intValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,25,21
4300_62,62,62,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.12,26,22
4300_63,63,63,os.write(escape(value.toString()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.39,27,23
4300_66,66,66,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.3,30,25
4300_67,67,69,"if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,2,0,0,0,0.35,31,25
4300_68,68,68,"os.write(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.46,32,26
4300_73,73,73,long elapsedTime = System.currentTimeMillis() - now;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.23,37,28
4300_75,75,79,"if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,2,2,0,0,0,0.39,39,29
4300_76,76,76,os.write(elapsedField);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.39,40,29
4300_77,77,77,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.46,41,30
4300_78,78,78,"os.write((elapsedTime + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.38,42,31
4300_81,81,81,"AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,1,0.56,45,33
4300_84,84,84,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.46,48,34
4300_86,86,86,os.flush();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.47,50,35
4300_87,87,87,AsyncHttpClient.silentCloseOutputStream(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.42,51,35
4296_1,1,2,"@Override
public void writeTo(final OutputStream out) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.27,23,13
4296_3,3,5,"if (out == null) {
throw new IllegalStateException(""Output stream cannot be null."");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,3,0,0,1,0.46,20,11
4296_4,4,4,"throw new IllegalStateException(""Output stream cannot be null."");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,1,0.43,21,11
4296_7,7,7,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.29,18,10
4296_9,9,11,"OutputStream os = contentEncoding != null
? new GZIPOutputStream(out, BUFFER_SIZE)
: out;",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,3,3,0,0,1,0.47,14,9
4296_13,13,13,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.35,12,8
4296_15,15,15,Set<String> keys = jsonParams.keySet();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.28,10,7
4296_17,17,17,int keysCount = keys.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.26,8,6
4296_18,18,82,"if (0 < keysCount) {
int keysProcessed = 0;
boolean isFileWrapper;

for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}

long elapsedTime = System.currentTimeMillis() - now;

if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}

AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");
}",1,0,0,0,0,0,0,0,0,46,7,65,0,1,0,1,3,3,0,0,2,0.65,0,0
4296_19,19,19,int keysProcessed = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.22,6,4
4296_20,20,20,boolean isFileWrapper;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.32,5,3
4296_22,22,71,"for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}",0,0,0,1,0,0,0,0,0,37,6,50,0,0,1,1,3,3,0,0,2,0.65,0,0
4296_23,23,23,keysProcessed++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.24,2,1
4296_25,25,70,"try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}",0,0,0,0,1,0,0,0,0,35,5,46,0,0,1,0,3,3,0,0,2,0.65,0,0
4296_26,26,26,Object value = jsonParams.get(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.45,0,0
4296_28,28,28,os.write(escape(key));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,3,3,0,0,0,0.36,2,1
4296_29,29,29,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,3,3,0,0,0,0.35,3,1
4296_31,31,65,"if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}",1,0,0,0,0,0,0,0,0,28,4,35,0,0,1,0,3,3,0,0,2,0.66,5,3
4296_32,32,32,os.write(JSON_NULL);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.57,6,3
4296_33,33,33,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.26,7,4
4296_34,34,34,isFileWrapper = value instanceof RequestParams.FileWrapper;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.49,8,5
4296_36,36,64,"if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}",1,0,0,0,0,0,0,0,0,24,3,29,0,0,1,0,3,3,0,0,1,0.55,10,7
4296_37,37,37,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.35,11,7
4296_39,39,43,"if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,3,3,0,0,1,0.51,13,9
4296_40,40,40,"writeToFromFile(os, (RequestParams.FileWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.52,14,9
4296_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.26,15,10
4296_42,42,42,"writeToFromStream(os, (RequestParams.StreamWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.51,16,11
4296_45,45,45,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.35,19,13
4296_46,46,46,} else if (value instanceof JsonValueInterface) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.56,20,13
4296_47,47,47,os.write(((JsonValueInterface) value).getEscapedJsonValue());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.58,21,14
4296_48,48,48,} else if (value instanceof org.json.JSONObject) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.49,22,15
4296_49,49,49,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.5,23,16
4296_50,50,50,} else if (value instanceof org.json.JSONArray) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.48,24,17
4296_51,51,51,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.5,25,18
4296_52,52,52,} else if (value instanceof Boolean) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.53,26,19
4296_53,53,53,os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.51,27,20
4296_54,54,54,} else if (value instanceof Long) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.54,28,21
4296_55,55,55,"os.write((((Number) value).longValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.56,29,22
4296_56,56,56,} else if (value instanceof Double) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.59,30,23
4296_57,57,57,"os.write((((Number) value).doubleValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.57,31,24
4296_58,58,58,} else if (value instanceof Float) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.56,32,25
4296_59,59,59,"os.write((((Number) value).floatValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.56,33,26
4296_60,60,60,} else if (value instanceof Integer) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.56,34,27
4296_61,61,61,"os.write((((Number) value).intValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.55,35,28
4296_62,62,62,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.26,36,29
4296_63,63,63,os.write(escape(value.toString()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.53,37,30
4296_66,66,66,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.15,40,32
4296_67,67,69,"if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,1,0.53,41,32
4296_68,68,68,"os.write(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.35,42,33
4296_73,73,73,long elapsedTime = System.currentTimeMillis() - now;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.32,47,35
4296_75,75,79,"if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,3,3,0,0,1,0.54,49,36
4296_76,76,76,os.write(elapsedField);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,0,0.41,50,36
4296_77,77,77,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,0,0.35,51,37
4296_78,78,78,"os.write((elapsedTime + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,0,0.34,52,38
4296_81,81,81,"AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.41,55,40
4296_84,84,84,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.35,58,41
4296_86,86,86,os.flush();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.36,60,42
4296_87,87,87,AsyncHttpClient.silentCloseOutputStream(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.35,61,42
4292_1,1,2,"@Override
public void writeTo(final OutputStream out) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,0,0,0,0.36,10,4
4292_3,3,5,"if (out == null) {
throw new IllegalStateException(""Output stream cannot be null."");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,2,0,0,0,0.31,7,2
4292_4,4,4,"throw new IllegalStateException(""Output stream cannot be null."");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,0,0,0,0.31,8,2
4292_7,7,7,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.28,5,1
4292_9,9,11,"OutputStream os = contentEncoding != null
? new GZIPOutputStream(out, BUFFER_SIZE)
: out;",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,4,2,0,0,0,0.32,1,0
4292_13,13,13,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.28,0,0
4292_15,15,15,Set<String> keys = jsonParams.keySet();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,0,0,1,0.5,2,1
4292_17,17,17,int keysCount = keys.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,0,0,0,0.25,4,2
4292_18,18,82,"if (0 < keysCount) {
int keysProcessed = 0;
boolean isFileWrapper;

for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}

long elapsedTime = System.currentTimeMillis() - now;

if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}

AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");
}",1,0,0,0,0,0,0,0,0,46,7,65,0,1,0,1,4,2,0,0,2,0.55,5,2
4292_19,19,19,int keysProcessed = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.27,6,3
4292_20,20,20,boolean isFileWrapper;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.31,7,4
4292_22,22,71,"for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}",0,0,0,1,0,0,0,0,0,37,6,50,0,0,1,1,4,2,0,0,2,0.54,9,6
4292_23,23,23,keysProcessed++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.31,10,6
4292_25,25,70,"try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}",0,0,0,0,1,0,0,0,0,35,5,46,0,0,1,0,4,2,0,0,2,0.54,12,8
4292_26,26,26,Object value = jsonParams.get(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,0,0,2,0.58,13,8
4292_28,28,28,os.write(escape(key));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,4,2,0,0,0,0.32,15,10
4292_29,29,29,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,2,0,0,0,0.28,16,10
4292_31,31,65,"if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}",1,0,0,0,0,0,0,0,0,28,4,35,0,0,1,0,4,2,0,0,2,0.54,18,12
4292_32,32,32,os.write(JSON_NULL);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.48,19,12
4292_33,33,33,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.23,20,13
4292_34,34,34,isFileWrapper = value instanceof RequestParams.FileWrapper;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.34,21,14
4292_36,36,64,"if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}",1,0,0,0,0,0,0,0,0,24,3,29,0,0,1,0,4,2,0,0,2,0.54,23,16
4292_37,37,37,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.28,24,16
4292_39,39,43,"if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,2,0,0,0,0.31,26,18
4292_40,40,40,"writeToFromFile(os, (RequestParams.FileWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.29,27,18
4292_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.23,28,19
4292_42,42,42,"writeToFromStream(os, (RequestParams.StreamWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.3,29,20
4292_45,45,45,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.28,32,22
4292_46,46,46,} else if (value instanceof JsonValueInterface) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.53,33,22
4292_47,47,47,os.write(((JsonValueInterface) value).getEscapedJsonValue());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.49,34,23
4292_48,48,48,} else if (value instanceof org.json.JSONObject) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.67,35,24
4292_49,49,49,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.33,36,25
4292_50,50,50,} else if (value instanceof org.json.JSONArray) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.57,37,26
4292_51,51,51,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.33,38,27
4292_52,52,52,} else if (value instanceof Boolean) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.35,39,28
4292_53,53,53,os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.5,40,29
4292_54,54,54,} else if (value instanceof Long) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.38,41,30
4292_55,55,55,"os.write((((Number) value).longValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.31,42,31
4292_56,56,56,} else if (value instanceof Double) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.34,43,32
4292_57,57,57,"os.write((((Number) value).doubleValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.29,44,33
4292_58,58,58,} else if (value instanceof Float) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.33,45,34
4292_59,59,59,"os.write((((Number) value).floatValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.29,46,35
4292_60,60,60,} else if (value instanceof Integer) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.39,47,36
4292_61,61,61,"os.write((((Number) value).intValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.29,48,37
4292_62,62,62,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.23,49,38
4292_63,63,63,os.write(escape(value.toString()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.34,50,39
4292_66,66,66,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.14,53,41
4292_67,67,69,"if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,2,0,0,0,0.34,54,41
4292_68,68,68,"os.write(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.28,55,42
4292_73,73,73,long elapsedTime = System.currentTimeMillis() - now;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.27,60,44
4292_75,75,79,"if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,2,0,0,0,0.33,62,45
4292_76,76,76,os.write(elapsedField);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,0,0,0,0.34,63,45
4292_77,77,77,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,0,0,0,0.28,64,46
4292_78,78,78,"os.write((elapsedTime + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,0,0,0,0.29,65,47
4292_81,81,81,"AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,1,0.49,68,49
4292_84,84,84,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.28,71,50
4292_86,86,86,os.flush();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,2,0,0,0,0.35,73,51
4292_87,87,87,AsyncHttpClient.silentCloseOutputStream(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.35,74,51
4286_1,1,1,static byte[] escape(String string) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.34,0,0
4286_2,2,4,"if (string == null) {
return JSON_NULL;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,2,0,0,2,0.78,0,0
4286_3,3,3,return JSON_NULL;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.81,1,0
4286_6,6,6,StringBuilder sb = new StringBuilder(128);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.36,4,2
4286_8,8,8,"sb.append('""');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.39,6,3
4286_10,10,10,"int length = string.length(), pos = -1;",0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,3,2,0,0,0,0.29,8,4
4286_11,11,49,"while (++pos < length) {
char ch = string.charAt(pos);
switch (ch) {
case '""':
sb.append(""\\\"""");
break;
case '\\':
sb.append(""\\\\"");
break;
case '\b':
sb.append(""\\b"");
break;
case '\f':
sb.append(""\\f"");
break;
case '\n':
sb.append(""\\n"");
break;
case '\r':
sb.append(""\\r"");
break;
case '\t':
sb.append(""\\t"");
break;
default:
if ((ch <= '\u001F') || (ch >= '\u007F' && ch <= '\u009F') || (ch >= '\u2000' && ch <= '\u20FF')) {
String intString = Integer.toHexString(ch);
sb.append(""\\u"");
int intLength = 4 - intString.length();
for (int zero = 0; zero < intLength; zero++) {
sb.append('0');
}
sb.append(intString.toUpperCase(Locale.US));
} else {
sb.append(ch);
}
break;
}
}",0,1,0,0,0,0,0,0,0,26,4,39,1,1,0,1,3,2,0,0,0,0.48,9,4
4286_12,12,12,char ch = string.charAt(pos);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.45,10,5
4286_13,13,13,switch (ch) {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.55,11,6
4286_14,14,15,"case '""':
sb.append(""\\\"""");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.39,12,7
4286_16,16,16,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,14,9
4286_17,17,18,"case '\\':
sb.append(""\\\\"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.39,15,9
4286_19,19,19,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,17,11
4286_20,20,21,"case '\b':
sb.append(""\\b"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.39,18,11
4286_22,22,22,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,20,13
4286_23,23,24,"case '\f':
sb.append(""\\f"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.41,21,13
4286_25,25,25,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,23,15
4286_26,26,27,"case '\n':
sb.append(""\\n"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.39,24,15
4286_28,28,28,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,26,17
4286_29,29,30,"case '\r':
sb.append(""\\r"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.38,27,17
4286_31,31,31,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,29,19
4286_32,32,33,"case '\t':
sb.append(""\\t"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.39,30,19
4286_34,34,34,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,32,21
4286_35,35,36,"default:
if ((ch <= '\u001F') || (ch >= '\u007F' && ch <= '\u009F') || (ch >= '\u2000' && ch <= '\u20FF')) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.58,33,21
4286_37,37,37,String intString = Integer.toHexString(ch);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.46,35,23
4286_38,38,38,"sb.append(""\\u"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.47,36,23
4286_39,39,39,int intLength = 4 - intString.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.35,37,24
4286_40,40,42,"for (int zero = 0; zero < intLength; zero++) {
sb.append('0');
}",0,0,1,0,0,0,0,0,0,1,1,3,1,1,0,0,3,2,0,0,0,0.38,38,25
4286_41,41,41,sb.append('0');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.39,39,26
4286_43,43,43,sb.append(intString.toUpperCase(Locale.US));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.42,41,28
4286_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.39,42,28
4286_45,45,45,sb.append(ch);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.52,43,29
4286_47,47,47,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,45,31
4286_51,51,51,"sb.append('""');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.39,49,32
4286_53,53,53,return sb.toString().getBytes();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,2,0,0,1,0.6,51,33
4285_1,1,2,"@Override
public void sendResponseMessage(HttpResponse response) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.42,0,0
4285_3,3,14,"if (!Thread.currentThread().isInterrupted()) {
StatusLine status = response.getStatusLine();
byte[] responseBody;
responseBody = getResponseData(response.getEntity());
if (!Thread.currentThread().isInterrupted()) {
if (status.getStatusCode() >= 300) {
sendFailureMessage(status.getStatusCode(), response.getAllHeaders(), responseBody, new HttpResponseException(status.getStatusCode(), status.getReasonPhrase()));
} else {
sendSuccessMessage(status.getStatusCode(), response.getAllHeaders(), responseBody);
}
}
}",1,0,0,0,0,0,0,0,0,8,3,12,0,0,0,0,3,3,0,0,0,0.36,0,0
4285_4,4,4,StatusLine status = response.getStatusLine();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.29,1,0
4285_5,5,5,byte[] responseBody;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.31,2,1
4285_6,6,6,responseBody = getResponseData(response.getEntity());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.32,3,2
4285_7,7,13,"if (!Thread.currentThread().isInterrupted()) {
if (status.getStatusCode() >= 300) {
sendFailureMessage(status.getStatusCode(), response.getAllHeaders(), responseBody, new HttpResponseException(status.getStatusCode(), status.getReasonPhrase()));
} else {
sendSuccessMessage(status.getStatusCode(), response.getAllHeaders(), responseBody);
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,1,0,0,3,3,0,0,0,0.36,4,3
4285_8,8,12,"if (status.getStatusCode() >= 300) {
sendFailureMessage(status.getStatusCode(), response.getAllHeaders(), responseBody, new HttpResponseException(status.getStatusCode(), status.getReasonPhrase()));
} else {
sendSuccessMessage(status.getStatusCode(), response.getAllHeaders(), responseBody);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,3,3,0,0,0,0.36,5,4
4285_9,9,9,"sendFailureMessage(status.getStatusCode(), response.getAllHeaders(), responseBody, new HttpResponseException(status.getStatusCode(), status.getReasonPhrase()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.36,6,5
4285_10,10,10,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.06,7,6
4285_11,11,11,"sendSuccessMessage(status.getStatusCode(), response.getAllHeaders(), responseBody);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,8,7
4284_1,1,1,    protected void postRunnable(Runnable runnable) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.53,2,2
4284_2,2,8,"if (runnable != null) {
if (getUseSynchronousMode() || handler == null) {
runnable.run();
} else {
handler.post(runnable);
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,0,0,6,3,2,0,3,0.63,0,0
4284_3,3,7,"if (getUseSynchronousMode() || handler == null) {
runnable.run();
} else {
handler.post(runnable);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,6,3,2,0,3,0.64,0,0
4284_4,4,4,runnable.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.64,0,0
4284_5,5,5,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.12,1,0
4284_6,6,6,handler.post(runnable);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.62,2,1
4283_1,1,2,"    @Override
public void setUseSynchronousMode(boolean sync) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,0,0,0,0.42,6,4
4283_3,3,6,"if (!sync && looper == null) {
sync = true;
AsyncHttpClient.log.w(LOG_TAG, ""Current thread has not called Looper.prepare(). Forcing synchronous mode."");
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,6,4,0,0,2,0.55,2,1
4283_4,4,4,sync = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.32,4,2
4283_5,5,5,"AsyncHttpClient.log.w(LOG_TAG, ""Current thread has not called Looper.prepare(). Forcing synchronous mode."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,2,0.56,3,1
4283_8,8,12,"if (!sync && handler == null) {
handler = new ResponderHandler(this, looper);
} else if (sync && handler != null) {
handler = null;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,6,4,0,0,1,0.59,0,0
4283_9,9,9,"handler = new ResponderHandler(this, looper);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.62,0,0
4283_10,10,10,} else if (sync && handler != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.48,1,0
4283_11,11,11,handler = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.57,2,1
4283_14,14,14,useSynchronousMode = sync;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,0,0,0,0.38,5,3
4282_1,1,2,"    @Override
public void setUseSynchronousMode(boolean sync) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,2,0.72,5,3
4282_3,3,6,"if (!sync && looper == null) {
sync = true;
AsyncHttpClient.log.w(LOG_TAG, ""Current thread has not called Looper.prepare(). Forcing synchronous mode."");
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,3,3,0,0,1,0.54,1,0
4282_4,4,4,sync = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,3,1
4282_5,5,5,"AsyncHttpClient.log.w(LOG_TAG, ""Current thread has not called Looper.prepare(). Forcing synchronous mode."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.54,2,0
4282_8,8,12,"if (!sync && handler == null) {
handler = new ResponderHandler(this, looper);
} else if (sync && handler != null) {
handler = null;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,3,3,0,0,0,0.39,0,0
4282_9,9,9,"handler = new ResponderHandler(this, looper);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.37,1,0
4282_10,10,10,} else if (sync && handler != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.37,2,1
4282_11,11,11,handler = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,3,2
4282_14,14,14,useSynchronousMode = sync;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,2,0.83,6,4
4281_1,1,2,"    @Override
public void setUseSynchronousMode(boolean sync) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,2,0,2,0.6,0,0
4281_3,3,6,"if (!sync && looper == null) {
sync = true;
AsyncHttpClient.log.w(LOG_TAG, ""Current thread has not called Looper.prepare(). Forcing synchronous mode."");
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,6,3,2,0,3,0.61,0,0
4281_4,4,4,sync = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.32,1,0
4281_5,5,5,"AsyncHttpClient.log.w(LOG_TAG, ""Current thread has not called Looper.prepare(). Forcing synchronous mode."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,3,0.62,2,1
4281_8,8,12,"if (!sync && handler == null) {
handler = new ResponderHandler(this, looper);
} else if (sync && handler != null) {
handler = null;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,6,3,2,0,1,0.46,5,3
4281_9,9,9,"handler = new ResponderHandler(this, looper);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.51,6,3
4281_10,10,10,} else if (sync && handler != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.34,7,4
4281_11,11,11,handler = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.34,8,5
4281_14,14,14,useSynchronousMode = sync;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,2,0,1,0.56,11,7
4279_1,1,2,"@Override
public ResponseHandlerInterface getResponseHandler() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,0,0,0,0.28,45,8
4279_3,3,56,"return new RangeFileAsyncHttpResponseHandler(file) {

@Override
public void onSuccess(int statusCode, Header[] headers, File file) {
debugHeaders(LOG_TAG, headers);
debugStatusCode(LOG_TAG, statusCode);

if (fileSize < 1) {
boolean supportsRange = false;
for (Header header : headers) {
String headerName = header.getName();
if (CONTENT_LENGTH.equals(headerName)) {
fileSize = Long.parseLong(header.getValue());
} else if (ACCEPT_RANGES.equals(headerName)) {
supportsRange = true;
}
}

if (!supportsRange || fileSize < 1) {
Toast.makeText(
RangeResponseSample.this,
""Unable to determine remote file's size, or\nremote server doesn't support ranges"",
Toast.LENGTH_LONG
).show();
}
}

if (fileSize > 0) {
debugFileResponse(file);
sendNextRangeRequest();
}
}

@Override
public void onFailure(int statusCode, Header[] headers, Throwable e, File file) {
debugHeaders(LOG_TAG, headers);
debugStatusCode(LOG_TAG, statusCode);
debugThrowable(LOG_TAG, e);
debugFileResponse(file);
}

@Override
public void updateRequestHeaders(HttpUriRequest uriRequest) {
super.updateRequestHeaders(uriRequest);

long length = file.length();

uriRequest.setHeader(""Range"", ""bytes="" + length + ""-"" + (length + CHUNK_SIZE - 1));
}

void debugFileResponse(File file) {
debugResponse(LOG_TAG, ""File size thus far: "" + file.length() + "" bytes"");
}
};",0,0,0,0,0,0,1,0,0,8,5,54,0,0,0,0,5,4,0,0,4,0.64,0,0
4279_10,10,28,"if (fileSize < 1) {
boolean supportsRange = false;
for (Header header : headers) {
String headerName = header.getName();
if (CONTENT_LENGTH.equals(headerName)) {
fileSize = Long.parseLong(header.getValue());
} else if (ACCEPT_RANGES.equals(headerName)) {
supportsRange = true;
}
}

if (!supportsRange || fileSize < 1) {
Toast.makeText(
RangeResponseSample.this,
""Unable to determine remote file's size, or\nremote server doesn't support ranges"",
Toast.LENGTH_LONG
).show();
}
}",1,0,0,0,0,0,0,0,0,5,3,19,0,0,1,1,5,4,0,0,2,0.55,19,1
4279_11,11,11,boolean supportsRange = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.31,36,5
4279_12,12,19,"for (Header header : headers) {
String headerName = header.getName();
if (CONTENT_LENGTH.equals(headerName)) {
fileSize = Long.parseLong(header.getValue());
} else if (ACCEPT_RANGES.equals(headerName)) {
supportsRange = true;
}
}",0,0,0,1,0,0,0,0,0,2,2,8,0,1,0,1,5,4,0,0,2,0.54,28,2
4279_13,13,13,String headerName = header.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.29,34,3
4279_14,14,18,"if (CONTENT_LENGTH.equals(headerName)) {
fileSize = Long.parseLong(header.getValue());
} else if (ACCEPT_RANGES.equals(headerName)) {
supportsRange = true;
}",1,0,0,0,0,0,0,0,0,0,1,5,0,1,0,0,5,4,0,0,2,0.56,29,2
4279_21,21,27,"if (!supportsRange || fileSize < 1) {
Toast.makeText(
RangeResponseSample.this,
""Unable to determine remote file's size, or\nremote server doesn't support ranges"",
Toast.LENGTH_LONG
).show();
}",1,0,0,0,0,0,0,0,0,0,1,7,0,0,1,0,5,4,0,0,1,0.5,20,1
4279_30,30,33,"if (fileSize > 0) {
debugFileResponse(file);
sendNextRangeRequest();
}",1,0,0,0,0,0,0,0,0,0,1,4,0,0,1,0,5,4,0,0,0,0.41,14,0
4279_48,48,48,long length = file.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,4,0,0,1,0.63,0,0
4268_1,1,2,"        @Override
public void onClick(DialogInterface dialog, int which) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.25,7,4
4268_3,3,3,switch (which) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.23,6,3
4268_4,4,5,"case DialogInterface.BUTTON_POSITIVE:
dialog.dismiss();",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,3,3,0,0,0,0.23,4,2
4268_7,7,7,userName = ((EditText) dialogView.findViewById(R.id.field_username)).getText().toString();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,3,0,0,0,0.36,2,1
4268_8,8,8,passWord = ((EditText) dialogView.findViewById(R.id.field_password)).getText().toString();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,3,0,0,0,0.31,1,0
4268_10,10,10,retryRequest();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.2,0,0
4268_12,12,12,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,1,3,3,0,0,0,0.06,2,1
4268_14,14,15,"case DialogInterface.BUTTON_NEGATIVE:
dialog.dismiss();",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,3,3,0,0,0,0.24,4,2
4268_17,17,17,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,3,3,0,0,0,0.06,7,3
4267_1,1,2,"        @Override
public void onClick(DialogInterface dialog, int which) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,0,0,0,0.27,4,2
4267_3,3,3,switch (which) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.31,3,1
4267_4,4,5,"case DialogInterface.BUTTON_POSITIVE:
dialog.dismiss();",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,4,2,0,0,0,0.28,1,0
4267_7,7,7,userName = ((EditText) dialogView.findViewById(R.id.field_username)).getText().toString();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,4,2,0,0,1,0.5,0,0
4267_8,8,8,passWord = ((EditText) dialogView.findViewById(R.id.field_password)).getText().toString();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,2,0,0,1,0.5,1,0
4267_10,10,10,retryRequest();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.28,3,2
4267_12,12,12,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,1,4,2,0,0,0,0.27,5,3
4267_14,14,15,"case DialogInterface.BUTTON_NEGATIVE:
dialog.dismiss();",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,4,2,0,0,0,0.29,7,4
4267_17,17,17,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,4,2,0,0,0,0.27,10,5
4266_1,1,2,"        @Override
public void onClick(DialogInterface dialog, int which) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,1,0.71,2,2
4266_3,3,3,switch (which) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.39,1,1
4266_4,4,5,"case DialogInterface.BUTTON_POSITIVE:
dialog.dismiss();",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,2,1,0,0,-1,0.83,0,0
4266_7,7,7,userName = ((EditText) dialogView.findViewById(R.id.field_username)).getText().toString();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,2,1,0,0,1,0.58,2,1
4266_8,8,8,passWord = ((EditText) dialogView.findViewById(R.id.field_password)).getText().toString();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,2,1,0,0,1,0.57,3,1
4266_10,10,10,retryRequest();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,1,0,0,0,0.34,5,3
4266_12,12,12,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,1,2,1,0,0,0,0.22,7,4
4266_14,14,15,"case DialogInterface.BUTTON_NEGATIVE:
dialog.dismiss();",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,2,1,0,0,2,0.84,9,5
4266_17,17,17,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,2,1,0,0,0,0.22,12,6
4265_1,1,2,"@Override
public ResponseHandlerInterface getResponseHandler() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,1,0,0,0.37,48,15
4265_3,3,62,"return new BaseJsonHttpResponseHandler<SampleJSON>() {

@Override
public void onStart() {
clearOutputs();
}

@Override
public void onSuccess(int statusCode, Header[] headers, String rawJsonResponse, SampleJSON response) {
debugHeaders(LOG_TAG, headers);
debugStatusCode(LOG_TAG, statusCode);
if (response != null) {
debugResponse(LOG_TAG, rawJsonResponse);
}
}

@Override
public void onFailure(int statusCode, Header[] headers, Throwable throwable, String rawJsonData, SampleJSON errorResponse) {
debugHeaders(LOG_TAG, headers);
debugStatusCode(LOG_TAG, statusCode);
debugThrowable(LOG_TAG, throwable);

if (statusCode == 401) {
String realm = ""Protected Page"";
String authType = null;

for (Header header : headers) {
String headerName = header.getName();
if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}
}

if (authType != null && HEADER_BASIC.equals(authType)) {
Log.d(LOG_TAG, HEADER_REALM_PREFIX + realm);

postRunnable(new DialogRunnable(realm));
}
}
}

@Override
protected SampleJSON parseResponse(String rawJsonData, boolean isFailure) throws Throwable {
return new ObjectMapper().readValues(new JsonFactory().createParser(rawJsonData), SampleJSON.class).next();
}
};",0,0,0,0,0,0,1,0,0,16,8,60,0,0,0,0,6,4,1,0,1,0.42,0,0
4265_14,14,16,"if (response != null) {
debugResponse(LOG_TAG, rawJsonResponse);
}",1,0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,6,4,1,0,0,0.35,34,13
4265_25,25,55,"if (statusCode == 401) {
String realm = ""Protected Page"";
String authType = null;

for (Header header : headers) {
String headerName = header.getName();
if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}
}

if (authType != null && HEADER_BASIC.equals(authType)) {
Log.d(LOG_TAG, HEADER_REALM_PREFIX + realm);

postRunnable(new DialogRunnable(realm));
}
}",1,0,0,0,0,0,0,0,0,12,6,31,0,0,1,0,6,4,1,0,1,0.41,0,0
4265_26,26,26,"String realm = ""Protected Page"";",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.31,24,11
4265_27,27,27,String authType = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.27,23,10
4265_29,29,48,"for (Header header : headers) {
String headerName = header.getName();
if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}
}",0,0,0,1,0,0,0,0,0,8,5,20,0,0,1,1,6,4,1,0,0,0.32,2,1
4265_30,30,30,String headerName = header.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.28,20,8
4265_31,31,47,"if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}",1,0,0,0,0,0,0,0,0,6,4,17,0,1,0,0,6,4,1,0,0,0.32,3,1
4265_32,32,32,String headerValue = header.getValue().trim();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.27,18,6
4265_33,33,33,String headerValueLowerCase = headerValue.toLowerCase(Locale.US);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,6,4,1,0,0,0.28,17,5
4265_35,35,35,int charPos = headerValueLowerCase.indexOf(' ');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,1,0,0,0.25,15,4
4265_36,36,46,"if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}",1,0,0,0,0,0,0,0,0,2,3,11,0,1,0,0,6,4,1,0,0,0.29,4,1
4265_39,39,45,"if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}",1,0,0,0,0,0,0,0,0,1,2,7,0,0,1,0,6,4,1,0,0,0.29,5,1
4265_42,42,44,"if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}",1,0,0,0,0,0,0,0,0,0,1,3,0,0,1,0,6,4,1,0,0,0.26,6,1
4265_50,50,54,"if (authType != null && HEADER_BASIC.equals(authType)) {
Log.d(LOG_TAG, HEADER_REALM_PREFIX + realm);

postRunnable(new DialogRunnable(realm));
}",1,0,0,0,0,0,0,0,0,0,1,5,0,0,1,0,6,4,1,0,1,0.44,0,0
4265_59,59,59,throws Throwable ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,4,1,0,0,0.31,8,0
4265_60,60,60,"return new ObjectMapper().readValues(new JsonFactory().createParser(rawJsonData), SampleJSON.class).next();",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.3,9,0
4264_1,1,2,"@Override
public ResponseHandlerInterface getResponseHandler() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.32,47,14
4264_3,3,62,"return new BaseJsonHttpResponseHandler<SampleJSON>() {

@Override
public void onStart() {
clearOutputs();
}

@Override
public void onSuccess(int statusCode, Header[] headers, String rawJsonResponse, SampleJSON response) {
debugHeaders(LOG_TAG, headers);
debugStatusCode(LOG_TAG, statusCode);
if (response != null) {
debugResponse(LOG_TAG, rawJsonResponse);
}
}

@Override
public void onFailure(int statusCode, Header[] headers, Throwable throwable, String rawJsonData, SampleJSON errorResponse) {
debugHeaders(LOG_TAG, headers);
debugStatusCode(LOG_TAG, statusCode);
debugThrowable(LOG_TAG, throwable);

if (statusCode == 401) {
String realm = ""Protected Page"";
String authType = null;

for (Header header : headers) {
String headerName = header.getName();
if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}
}

if (authType != null && HEADER_BASIC.equals(authType)) {
Log.d(LOG_TAG, HEADER_REALM_PREFIX + realm);

postRunnable(new DialogRunnable(realm));
}
}
}

@Override
protected SampleJSON parseResponse(String rawJsonData, boolean isFailure) throws Throwable {
return new ObjectMapper().readValues(new JsonFactory().createParser(rawJsonData), SampleJSON.class).next();
}
};",0,0,0,0,0,0,1,0,0,16,8,60,0,0,0,0,4,3,0,0,3,0.62,0,0
4264_14,14,16,"if (response != null) {
debugResponse(LOG_TAG, rawJsonResponse);
}",1,0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,4,3,0,0,0,0.39,33,12
4264_25,25,55,"if (statusCode == 401) {
String realm = ""Protected Page"";
String authType = null;

for (Header header : headers) {
String headerName = header.getName();
if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}
}

if (authType != null && HEADER_BASIC.equals(authType)) {
Log.d(LOG_TAG, HEADER_REALM_PREFIX + realm);

postRunnable(new DialogRunnable(realm));
}
}",1,0,0,0,0,0,0,0,0,12,6,31,0,0,1,0,4,3,0,0,2,0.55,0,0
4264_26,26,26,"String realm = ""Protected Page"";",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.44,23,10
4264_27,27,27,String authType = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.51,22,9
4264_29,29,48,"for (Header header : headers) {
String headerName = header.getName();
if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}
}",0,0,0,1,0,0,0,0,0,8,5,20,0,0,1,1,4,3,0,0,1,0.48,1,0
4264_30,30,30,String headerName = header.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.27,19,7
4264_31,31,47,"if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}",1,0,0,0,0,0,0,0,0,6,4,17,0,1,0,0,4,3,0,0,1,0.49,2,0
4264_32,32,32,String headerValue = header.getValue().trim();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.29,17,5
4264_33,33,33,String headerValueLowerCase = headerValue.toLowerCase(Locale.US);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,4,3,0,0,0,0.34,16,4
4264_35,35,35,int charPos = headerValueLowerCase.indexOf(' ');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.36,14,3
4264_36,36,46,"if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}",1,0,0,0,0,0,0,0,0,2,3,11,0,1,0,0,4,3,0,0,1,0.49,3,0
4264_39,39,45,"if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}",1,0,0,0,0,0,0,0,0,1,2,7,0,0,1,0,4,3,0,0,0,0.4,4,0
4264_42,42,44,"if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}",1,0,0,0,0,0,0,0,0,0,1,3,0,0,1,0,4,3,0,0,0,0.4,5,0
4264_50,50,54,"if (authType != null && HEADER_BASIC.equals(authType)) {
Log.d(LOG_TAG, HEADER_REALM_PREFIX + realm);

postRunnable(new DialogRunnable(realm));
}",1,0,0,0,0,0,0,0,0,0,1,5,0,0,1,0,4,3,0,0,2,0.55,0,0
4264_59,59,59,throws Throwable ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,0,0.39,9,1
4264_60,60,60,"return new ObjectMapper().readValues(new JsonFactory().createParser(rawJsonData), SampleJSON.class).next();",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.57,10,1
4263_1,1,2,"@Override
public ResponseHandlerInterface getResponseHandler() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,0,0,0,0.35,39,13
4263_3,3,62,"return new BaseJsonHttpResponseHandler<SampleJSON>() {

@Override
public void onStart() {
clearOutputs();
}

@Override
public void onSuccess(int statusCode, Header[] headers, String rawJsonResponse, SampleJSON response) {
debugHeaders(LOG_TAG, headers);
debugStatusCode(LOG_TAG, statusCode);
if (response != null) {
debugResponse(LOG_TAG, rawJsonResponse);
}
}

@Override
public void onFailure(int statusCode, Header[] headers, Throwable throwable, String rawJsonData, SampleJSON errorResponse) {
debugHeaders(LOG_TAG, headers);
debugStatusCode(LOG_TAG, statusCode);
debugThrowable(LOG_TAG, throwable);

if (statusCode == 401) {
String realm = ""Protected Page"";
String authType = null;

for (Header header : headers) {
String headerName = header.getName();
if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}
}

if (authType != null && HEADER_BASIC.equals(authType)) {
Log.d(LOG_TAG, HEADER_REALM_PREFIX + realm);

postRunnable(new DialogRunnable(realm));
}
}
}

@Override
protected SampleJSON parseResponse(String rawJsonData, boolean isFailure) throws Throwable {
return new ObjectMapper().readValues(new JsonFactory().createParser(rawJsonData), SampleJSON.class).next();
}
};",0,0,0,0,0,0,1,0,0,16,8,60,0,0,0,0,6,5,0,0,2,0.62,0,0
4263_14,14,16,"if (response != null) {
debugResponse(LOG_TAG, rawJsonResponse);
}",1,0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,6,5,0,0,0,0.42,25,11
4263_25,25,55,"if (statusCode == 401) {
String realm = ""Protected Page"";
String authType = null;

for (Header header : headers) {
String headerName = header.getName();
if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}
}

if (authType != null && HEADER_BASIC.equals(authType)) {
Log.d(LOG_TAG, HEADER_REALM_PREFIX + realm);

postRunnable(new DialogRunnable(realm));
}
}",1,0,0,0,0,0,0,0,0,12,6,31,0,0,1,0,6,5,0,0,2,0.64,0,0
4263_26,26,26,"String realm = ""Protected Page"";",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.58,15,9
4263_27,27,27,String authType = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,5,0,0,0,0.4,14,8
4263_29,29,48,"for (Header header : headers) {
String headerName = header.getName();
if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}
}",0,0,0,1,0,0,0,0,0,8,5,20,0,0,1,1,6,5,0,0,2,0.63,0,0
4263_30,30,30,String headerName = header.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.38,11,6
4263_31,31,47,"if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}",1,0,0,0,0,0,0,0,0,6,4,17,0,1,0,0,6,5,0,0,2,0.64,0,0
4263_32,32,32,String headerValue = header.getValue().trim();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.42,9,4
4263_33,33,33,String headerValueLowerCase = headerValue.toLowerCase(Locale.US);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,6,5,0,0,0,0.39,8,3
4263_35,35,35,int charPos = headerValueLowerCase.indexOf(' ');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,5,0,0,0,0.46,6,2
4263_36,36,46,"if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}",1,0,0,0,0,0,0,0,0,2,3,11,0,1,0,0,6,5,0,0,2,0.68,0,0
4263_39,39,45,"if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}",1,0,0,0,0,0,0,0,0,1,2,7,0,0,1,0,6,5,0,0,2,0.7,0,0
4263_42,42,44,"if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}",1,0,0,0,0,0,0,0,0,0,1,3,0,0,1,0,6,5,0,0,1,0.68,0,0
4263_50,50,54,"if (authType != null && HEADER_BASIC.equals(authType)) {
Log.d(LOG_TAG, HEADER_REALM_PREFIX + realm);

postRunnable(new DialogRunnable(realm));
}",1,0,0,0,0,0,0,0,0,0,1,5,0,0,1,0,6,5,0,0,1,0.46,8,1
4263_59,59,59,throws Throwable ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,5,0,0,0,0.32,17,2
4263_60,60,60,"return new ObjectMapper().readValues(new JsonFactory().createParser(rawJsonData), SampleJSON.class).next();",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.45,18,2
4262_1,1,2,"@Override
public ResponseHandlerInterface getResponseHandler() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,1,0.45,32,10
4262_3,3,62,"return new BaseJsonHttpResponseHandler<SampleJSON>() {

@Override
public void onStart() {
clearOutputs();
}

@Override
public void onSuccess(int statusCode, Header[] headers, String rawJsonResponse, SampleJSON response) {
debugHeaders(LOG_TAG, headers);
debugStatusCode(LOG_TAG, statusCode);
if (response != null) {
debugResponse(LOG_TAG, rawJsonResponse);
}
}

@Override
public void onFailure(int statusCode, Header[] headers, Throwable throwable, String rawJsonData, SampleJSON errorResponse) {
debugHeaders(LOG_TAG, headers);
debugStatusCode(LOG_TAG, statusCode);
debugThrowable(LOG_TAG, throwable);

if (statusCode == 401) {
String realm = ""Protected Page"";
String authType = null;

for (Header header : headers) {
String headerName = header.getName();
if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}
}

if (authType != null && HEADER_BASIC.equals(authType)) {
Log.d(LOG_TAG, HEADER_REALM_PREFIX + realm);

postRunnable(new DialogRunnable(realm));
}
}
}

@Override
protected SampleJSON parseResponse(String rawJsonData, boolean isFailure) throws Throwable {
return new ObjectMapper().readValues(new JsonFactory().createParser(rawJsonData), SampleJSON.class).next();
}
};",0,0,0,0,0,0,1,0,0,16,8,60,0,0,0,0,4,2,1,0,3,0.6,0,0
4262_14,14,16,"if (response != null) {
debugResponse(LOG_TAG, rawJsonResponse);
}",1,0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,4,2,1,0,0,0.35,18,8
4262_25,25,55,"if (statusCode == 401) {
String realm = ""Protected Page"";
String authType = null;

for (Header header : headers) {
String headerName = header.getName();
if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}
}

if (authType != null && HEADER_BASIC.equals(authType)) {
Log.d(LOG_TAG, HEADER_REALM_PREFIX + realm);

postRunnable(new DialogRunnable(realm));
}
}",1,0,0,0,0,0,0,0,0,12,6,31,0,0,1,0,4,2,1,0,3,0.6,0,0
4262_26,26,26,"String realm = ""Protected Page"";",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.37,8,6
4262_27,27,27,String authType = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,2,0.63,7,5
4262_29,29,48,"for (Header header : headers) {
String headerName = header.getName();
if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}
}",0,0,0,1,0,0,0,0,0,8,5,20,0,0,1,1,4,2,1,0,3,0.58,0,0
4262_30,30,30,String headerName = header.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.46,4,3
4262_31,31,47,"if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}",1,0,0,0,0,0,0,0,0,6,4,17,0,1,0,0,4,2,1,0,3,0.57,0,0
4262_32,32,32,String headerValue = header.getValue().trim();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.43,2,1
4262_33,33,33,String headerValueLowerCase = headerValue.toLowerCase(Locale.US);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.31,1,0
4262_35,35,35,int charPos = headerValueLowerCase.indexOf(' ');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.29,0,0
4262_36,36,46,"if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}",1,0,0,0,0,0,0,0,0,2,3,11,0,1,0,0,4,2,1,0,2,0.49,1,0
4262_39,39,45,"if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}",1,0,0,0,0,0,0,0,0,1,2,7,0,0,1,0,4,2,1,0,0,0.34,4,2
4262_42,42,44,"if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}",1,0,0,0,0,0,0,0,0,0,1,3,0,0,1,0,4,2,1,0,0,0.32,7,3
4262_50,50,54,"if (authType != null && HEADER_BASIC.equals(authType)) {
Log.d(LOG_TAG, HEADER_REALM_PREFIX + realm);

postRunnable(new DialogRunnable(realm));
}",1,0,0,0,0,0,0,0,0,0,1,5,0,0,1,0,4,2,1,0,2,0.59,15,4
4262_59,59,59,throws Throwable ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,1,0,0,0.37,24,5
4262_60,60,60,"return new ObjectMapper().readValues(new JsonFactory().createParser(rawJsonData), SampleJSON.class).next();",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.45,25,5
4261_1,1,2,"@Override
public ResponseHandlerInterface getResponseHandler() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,0,0,0,0.35,26,5
4261_3,3,62,"return new BaseJsonHttpResponseHandler<SampleJSON>() {

@Override
public void onStart() {
clearOutputs();
}

@Override
public void onSuccess(int statusCode, Header[] headers, String rawJsonResponse, SampleJSON response) {
debugHeaders(LOG_TAG, headers);
debugStatusCode(LOG_TAG, statusCode);
if (response != null) {
debugResponse(LOG_TAG, rawJsonResponse);
}
}

@Override
public void onFailure(int statusCode, Header[] headers, Throwable throwable, String rawJsonData, SampleJSON errorResponse) {
debugHeaders(LOG_TAG, headers);
debugStatusCode(LOG_TAG, statusCode);
debugThrowable(LOG_TAG, throwable);

if (statusCode == 401) {
String realm = ""Protected Page"";
String authType = null;

for (Header header : headers) {
String headerName = header.getName();
if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}
}

if (authType != null && HEADER_BASIC.equals(authType)) {
Log.d(LOG_TAG, HEADER_REALM_PREFIX + realm);

postRunnable(new DialogRunnable(realm));
}
}
}

@Override
protected SampleJSON parseResponse(String rawJsonData, boolean isFailure) throws Throwable {
return new ObjectMapper().readValues(new JsonFactory().createParser(rawJsonData), SampleJSON.class).next();
}
};",0,0,0,0,0,0,1,0,0,16,8,60,0,0,0,0,6,5,0,0,3,0.64,0,0
4261_14,14,16,"if (response != null) {
debugResponse(LOG_TAG, rawJsonResponse);
}",1,0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,6,5,0,0,0,0.38,12,3
4261_25,25,55,"if (statusCode == 401) {
String realm = ""Protected Page"";
String authType = null;

for (Header header : headers) {
String headerName = header.getName();
if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}
}

if (authType != null && HEADER_BASIC.equals(authType)) {
Log.d(LOG_TAG, HEADER_REALM_PREFIX + realm);

postRunnable(new DialogRunnable(realm));
}
}",1,0,0,0,0,0,0,0,0,12,6,31,0,0,1,0,6,5,0,0,3,0.66,0,0
4261_26,26,26,"String realm = ""Protected Page"";",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.39,2,1
4261_27,27,27,String authType = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,5,0,0,0,0.36,1,0
4261_29,29,48,"for (Header header : headers) {
String headerName = header.getName();
if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}
}",0,0,0,1,0,0,0,0,0,8,5,20,0,0,1,1,6,5,0,0,3,0.66,0,0
4261_30,30,30,String headerName = header.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.57,1,0
4261_31,31,47,"if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}",1,0,0,0,0,0,0,0,0,6,4,17,0,1,0,0,6,5,0,0,3,0.65,2,1
4261_32,32,32,String headerValue = header.getValue().trim();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.55,3,2
4261_33,33,33,String headerValueLowerCase = headerValue.toLowerCase(Locale.US);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,6,5,0,0,1,0.52,4,3
4261_35,35,35,int charPos = headerValueLowerCase.indexOf(' ');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,5,0,0,1,0.5,6,5
4261_36,36,46,"if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}",1,0,0,0,0,0,0,0,0,2,3,11,0,1,0,0,6,5,0,0,1,0.55,7,5
4261_39,39,45,"if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}",1,0,0,0,0,0,0,0,0,1,2,7,0,0,1,0,6,5,0,0,1,0.55,10,7
4261_42,42,44,"if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}",1,0,0,0,0,0,0,0,0,0,1,3,0,0,1,0,6,5,0,0,0,0.4,13,8
4261_50,50,54,"if (authType != null && HEADER_BASIC.equals(authType)) {
Log.d(LOG_TAG, HEADER_REALM_PREFIX + realm);

postRunnable(new DialogRunnable(realm));
}",1,0,0,0,0,0,0,0,0,0,1,5,0,0,1,0,6,5,0,0,1,0.58,21,9
4261_59,59,59,throws Throwable ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,5,0,0,0,0.42,30,10
4261_60,60,60,"return new ObjectMapper().readValues(new JsonFactory().createParser(rawJsonData), SampleJSON.class).next();",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.42,31,10
4260_1,1,2,"@Override
public ResponseHandlerInterface getResponseHandler() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,1,0,0,0.36,22,2
4260_3,3,62,"return new BaseJsonHttpResponseHandler<SampleJSON>() {

@Override
public void onStart() {
clearOutputs();
}

@Override
public void onSuccess(int statusCode, Header[] headers, String rawJsonResponse, SampleJSON response) {
debugHeaders(LOG_TAG, headers);
debugStatusCode(LOG_TAG, statusCode);
if (response != null) {
debugResponse(LOG_TAG, rawJsonResponse);
}
}

@Override
public void onFailure(int statusCode, Header[] headers, Throwable throwable, String rawJsonData, SampleJSON errorResponse) {
debugHeaders(LOG_TAG, headers);
debugStatusCode(LOG_TAG, statusCode);
debugThrowable(LOG_TAG, throwable);

if (statusCode == 401) {
String realm = ""Protected Page"";
String authType = null;

for (Header header : headers) {
String headerName = header.getName();
if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}
}

if (authType != null && HEADER_BASIC.equals(authType)) {
Log.d(LOG_TAG, HEADER_REALM_PREFIX + realm);

postRunnable(new DialogRunnable(realm));
}
}
}

@Override
protected SampleJSON parseResponse(String rawJsonData, boolean isFailure) throws Throwable {
return new ObjectMapper().readValues(new JsonFactory().createParser(rawJsonData), SampleJSON.class).next();
}
};",0,0,0,0,0,0,1,0,0,16,8,60,0,0,0,0,5,3,1,0,0,0.43,0,0
4260_14,14,16,"if (response != null) {
debugResponse(LOG_TAG, rawJsonResponse);
}",1,0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,5,3,1,0,0,0.38,8,0
4260_25,25,55,"if (statusCode == 401) {
String realm = ""Protected Page"";
String authType = null;

for (Header header : headers) {
String headerName = header.getName();
if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}
}

if (authType != null && HEADER_BASIC.equals(authType)) {
Log.d(LOG_TAG, HEADER_REALM_PREFIX + realm);

postRunnable(new DialogRunnable(realm));
}
}",1,0,0,0,0,0,0,0,0,12,6,31,0,0,1,0,5,3,1,0,0,0.43,0,0
4260_26,26,26,"String realm = ""Protected Page"";",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.45,1,0
4260_27,27,27,String authType = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,3,1,0,0,0.37,2,1
4260_29,29,48,"for (Header header : headers) {
String headerName = header.getName();
if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}
}",0,0,0,1,0,0,0,0,0,8,5,20,0,0,1,1,5,3,1,0,0,0.41,4,3
4260_30,30,30,String headerName = header.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.28,5,3
4260_31,31,47,"if (HEADER_WWW_AUTHENTICATE.equalsIgnoreCase(headerName)) {
String headerValue = header.getValue().trim();
String headerValueLowerCase = headerValue.toLowerCase(Locale.US);

int charPos = headerValueLowerCase.indexOf(' ');
if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}
}",1,0,0,0,0,0,0,0,0,6,4,17,0,1,0,0,5,3,1,0,0,0.41,6,4
4260_32,32,32,String headerValue = header.getValue().trim();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.34,7,5
4260_33,33,33,String headerValueLowerCase = headerValue.toLowerCase(Locale.US);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,5,3,1,0,0,0.34,8,6
4260_35,35,35,int charPos = headerValueLowerCase.indexOf(' ');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,1,0,0,0.25,10,8
4260_36,36,46,"if (0 < charPos) {
authType = headerValueLowerCase.substring(0, charPos);

if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}
}",1,0,0,0,0,0,0,0,0,2,3,11,0,1,0,0,5,3,1,0,0,0.4,11,8
4260_39,39,45,"if (headerValueLowerCase.substring(1 + charPos).startsWith(HEADER_REALM_PREFIX)) {
realm = headerValue.substring(1 + charPos + HEADER_REALM_PREFIX.length());

if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}
}",1,0,0,0,0,0,0,0,0,1,2,7,0,0,1,0,5,3,1,0,0,0.42,14,10
4260_42,42,44,"if (realm.charAt(0) == '""' || realm.charAt(0) == '\'') {
realm = realm.substring(1, realm.length() - 1);
}",1,0,0,0,0,0,0,0,0,0,1,3,0,0,1,0,5,3,1,0,0,0.43,17,11
4260_50,50,54,"if (authType != null && HEADER_BASIC.equals(authType)) {
Log.d(LOG_TAG, HEADER_REALM_PREFIX + realm);

postRunnable(new DialogRunnable(realm));
}",1,0,0,0,0,0,0,0,0,0,1,5,0,0,1,0,5,3,1,0,0,0.46,25,12
4260_59,59,59,throws Throwable ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,1,0,0,0.37,34,13
4260_60,60,60,"return new ObjectMapper().readValues(new JsonFactory().createParser(rawJsonData), SampleJSON.class).next();",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.41,35,13
4253_1,1,1,throws JSONException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,12,7,2,0,0,0.36,15,13
4253_2,2,3,"if (null == responseBody)
return null;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,12,7,2,0,0,0.27,13,11
4253_3,3,3,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,12,7,2,0,0,0.23,13,11
4253_4,4,4,Object result = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,12,7,2,0,0,0.25,12,10
4253_5,5,5,"String jsonString = getResponseString(responseBody, getCharset());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,7,2,0,1,0.57,11,9
4253_6,6,21,"if (jsonString != null) {
jsonString = jsonString.trim();
if (useRFC5179CompatibilityMode) {
if (jsonString.startsWith(""{"") || jsonString.startsWith(""["")) {
result = new JSONTokener(jsonString).nextValue();
}
} else {
if ((jsonString.startsWith(""{"") && jsonString.endsWith(""}""))
|| jsonString.startsWith(""["") && jsonString.endsWith(""]"")) {
result = new JSONTokener(jsonString).nextValue();
}
else if (jsonString.startsWith(""\"""") && jsonString.endsWith(""\"""")) {
result = jsonString.substring(1, jsonString.length() - 1);
}
}
}",1,0,0,0,0,0,0,0,0,10,4,16,0,1,0,0,12,7,2,0,2,0.62,0,0
4253_7,7,7,jsonString = jsonString.trim();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,7,2,0,1,0.57,9,7
4253_8,8,20,"if (useRFC5179CompatibilityMode) {
if (jsonString.startsWith(""{"") || jsonString.startsWith(""["")) {
result = new JSONTokener(jsonString).nextValue();
}
} else {
if ((jsonString.startsWith(""{"") && jsonString.endsWith(""}""))
|| jsonString.startsWith(""["") && jsonString.endsWith(""]"")) {
result = new JSONTokener(jsonString).nextValue();
}
else if (jsonString.startsWith(""\"""") && jsonString.endsWith(""\"""")) {
result = jsonString.substring(1, jsonString.length() - 1);
}
}",1,0,0,0,0,0,0,0,0,8,3,13,0,1,0,0,12,7,2,0,2,0.62,0,0
4253_9,9,11,"if (jsonString.startsWith(""{"") || jsonString.startsWith(""["")) {
result = new JSONTokener(jsonString).nextValue();
}",1,0,0,0,0,0,0,0,0,1,2,3,0,0,0,0,12,7,2,0,2,0.59,5,4
4253_10,10,10,result = new JSONTokener(jsonString).nextValue();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,7,2,0,2,0.59,6,4
4253_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,7,2,0,0,0.34,4,3
4253_13,13,19,"if ((jsonString.startsWith(""{"") && jsonString.endsWith(""}""))
|| jsonString.startsWith(""["") && jsonString.endsWith(""]"")) {
result = new JSONTokener(jsonString).nextValue();
}
else if (jsonString.startsWith(""\"""") && jsonString.endsWith(""\"""")) {
result = jsonString.substring(1, jsonString.length() - 1);
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,0,0,12,7,2,0,2,0.63,0,0
4253_14,14,14,"|| jsonString.startsWith(""["") && jsonString.endsWith(""]"")) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,7,2,0,1,0.52,2,1
4253_15,15,15,result = new JSONTokener(jsonString).nextValue();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,7,2,0,2,0.59,1,0
4253_17,17,17,"else if (jsonString.startsWith(""\"""") && jsonString.endsWith(""\"""")) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,7,2,0,1,0.52,0,0
4253_18,18,18,"result = jsonString.substring(1, jsonString.length() - 1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,7,2,0,1,0.56,1,0
4253_22,22,24,"if (result == null) {
result = jsonString;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,12,7,2,0,1,0.48,5,2
4253_23,23,23,result = jsonString;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,7,2,0,1,0.54,6,2
4253_25,25,25,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,12,7,2,0,0,0.25,8,4
4252_1,1,1,throws JSONException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,10,8,1,0,1,0.53,11,10
4252_2,2,3,"if (null == responseBody)
return null;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,10,8,1,0,0,0.31,9,8
4252_3,3,3,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,8,1,0,0,0.25,9,8
4252_4,4,4,Object result = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,8,1,0,1,0.45,8,7
4252_5,5,5,"String jsonString = getResponseString(responseBody, getCharset());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,8,1,0,2,0.66,7,6
4252_6,6,21,"if (jsonString != null) {
jsonString = jsonString.trim();
if (useRFC5179CompatibilityMode) {
if (jsonString.startsWith(""{"") || jsonString.startsWith(""["")) {
result = new JSONTokener(jsonString).nextValue();
}
} else {
if ((jsonString.startsWith(""{"") && jsonString.endsWith(""}""))
|| jsonString.startsWith(""["") && jsonString.endsWith(""]"")) {
result = new JSONTokener(jsonString).nextValue();
}
else if (jsonString.startsWith(""\"""") && jsonString.endsWith(""\"""")) {
result = jsonString.substring(1, jsonString.length() - 1);
}
}
}",1,0,0,0,0,0,0,0,0,10,4,16,0,1,0,0,10,8,1,0,2,0.68,0,0
4252_7,7,7,jsonString = jsonString.trim();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,8,1,0,2,0.76,5,4
4252_8,8,20,"if (useRFC5179CompatibilityMode) {
if (jsonString.startsWith(""{"") || jsonString.startsWith(""["")) {
result = new JSONTokener(jsonString).nextValue();
}
} else {
if ((jsonString.startsWith(""{"") && jsonString.endsWith(""}""))
|| jsonString.startsWith(""["") && jsonString.endsWith(""]"")) {
result = new JSONTokener(jsonString).nextValue();
}
else if (jsonString.startsWith(""\"""") && jsonString.endsWith(""\"""")) {
result = jsonString.substring(1, jsonString.length() - 1);
}
}",1,0,0,0,0,0,0,0,0,8,3,13,0,1,0,0,10,8,1,0,2,0.66,0,0
4252_9,9,11,"if (jsonString.startsWith(""{"") || jsonString.startsWith(""["")) {
result = new JSONTokener(jsonString).nextValue();
}",1,0,0,0,0,0,0,0,0,1,2,3,0,0,0,0,10,8,1,0,2,0.66,1,1
4252_10,10,10,result = new JSONTokener(jsonString).nextValue();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,1,0,2,0.63,2,1
4252_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,1,0,0,0.25,0,0
4252_13,13,19,"if ((jsonString.startsWith(""{"") && jsonString.endsWith(""}""))
|| jsonString.startsWith(""["") && jsonString.endsWith(""]"")) {
result = new JSONTokener(jsonString).nextValue();
}
else if (jsonString.startsWith(""\"""") && jsonString.endsWith(""\"""")) {
result = jsonString.substring(1, jsonString.length() - 1);
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,0,0,10,8,1,0,2,0.68,0,0
4252_14,14,14,"|| jsonString.startsWith(""["") && jsonString.endsWith(""]"")) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,1,0,2,0.7,1,0
4252_15,15,15,result = new JSONTokener(jsonString).nextValue();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,1,0,2,0.63,2,1
4252_17,17,17,"else if (jsonString.startsWith(""\"""") && jsonString.endsWith(""\"""")) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,1,0,2,0.67,4,3
4252_18,18,18,"result = jsonString.substring(1, jsonString.length() - 1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,1,0,2,0.66,5,3
4252_22,22,24,"if (result == null) {
result = jsonString;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,10,8,1,0,2,0.62,9,5
4252_23,23,23,result = jsonString;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,1,0,2,0.71,10,5
4252_25,25,25,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,10,8,1,0,0,0.27,12,7
4251_1,1,2,"@Override
public final void onFailure(final int statusCode, final Header[] headers, final byte[] responseBytes, final Throwable throwable) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,1,0,0,0.38,37,8
4251_3,3,45,"if (responseBytes != null) {
Runnable parser = new Runnable() {
@Override
public void run() {
try {
final Object jsonResponse = parseResponse(responseBytes);
postRunnable(new Runnable() {
@Override
public void run() {
if (!useRFC5179CompatibilityMode && jsonResponse == null) {
onFailure(statusCode, headers, (String) null, throwable);
} else if (jsonResponse instanceof JSONObject) {
onFailure(statusCode, headers, throwable, (JSONObject) jsonResponse);
} else if (jsonResponse instanceof JSONArray) {
onFailure(statusCode, headers, throwable, (JSONArray) jsonResponse);
} else if (jsonResponse instanceof String) {
onFailure(statusCode, headers, (String) jsonResponse, throwable);
} else {
onFailure(statusCode, headers, new JSONException(""Unexpected response type "" + jsonResponse.getClass().getName()), (JSONObject) null);
}
}
});

} catch (final JSONException ex) {
postRunnable(new Runnable() {
@Override
public void run() {
onFailure(statusCode, headers, ex, (JSONObject) null);
}
});

}
}
};
if (!getUseSynchronousMode() && !getUsePoolThread()) {
new Thread(parser).start();
} else {
parser.run();
}
} else {
AsyncHttpClient.log.v(LOG_TAG, ""response body is null, calling onFailure(Throwable, JSONObject)"");
onFailure(statusCode, headers, throwable, (JSONObject) null);
}",1,0,0,0,0,0,0,0,0,11,7,43,0,0,0,0,6,4,1,0,4,0.59,0,0
4251_4,4,36,"Runnable parser = new Runnable() {
@Override
public void run() {
try {
final Object jsonResponse = parseResponse(responseBytes);
postRunnable(new Runnable() {
@Override
public void run() {
if (!useRFC5179CompatibilityMode && jsonResponse == null) {
onFailure(statusCode, headers, (String) null, throwable);
} else if (jsonResponse instanceof JSONObject) {
onFailure(statusCode, headers, throwable, (JSONObject) jsonResponse);
} else if (jsonResponse instanceof JSONArray) {
onFailure(statusCode, headers, throwable, (JSONArray) jsonResponse);
} else if (jsonResponse instanceof String) {
onFailure(statusCode, headers, (String) jsonResponse, throwable);
} else {
onFailure(statusCode, headers, new JSONException(""Unexpected response type "" + jsonResponse.getClass().getName()), (JSONObject) null);
}
}
});

} catch (final JSONException ex) {
postRunnable(new Runnable() {
@Override
public void run() {
onFailure(statusCode, headers, ex, (JSONObject) null);
}
});

}
}
};",0,0,0,0,0,1,0,0,0,3,6,33,0,1,0,0,6,4,1,0,2,0.5,3,3
4251_7,7,34,"try {
final Object jsonResponse = parseResponse(responseBytes);
postRunnable(new Runnable() {
@Override
public void run() {
if (!useRFC5179CompatibilityMode && jsonResponse == null) {
onFailure(statusCode, headers, (String) null, throwable);
} else if (jsonResponse instanceof JSONObject) {
onFailure(statusCode, headers, throwable, (JSONObject) jsonResponse);
} else if (jsonResponse instanceof JSONArray) {
onFailure(statusCode, headers, throwable, (JSONArray) jsonResponse);
} else if (jsonResponse instanceof String) {
onFailure(statusCode, headers, (String) jsonResponse, throwable);
} else {
onFailure(statusCode, headers, new JSONException(""Unexpected response type "" + jsonResponse.getClass().getName()), (JSONObject) null);
}
}
});

} catch (final JSONException ex) {
postRunnable(new Runnable() {
@Override
public void run() {
onFailure(statusCode, headers, ex, (JSONObject) null);
}
});

}",0,0,0,0,1,0,0,0,0,2,4,28,0,0,0,0,6,4,1,0,2,0.49,5,3
4251_8,8,8,final Object jsonResponse = parseResponse(responseBytes);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.31,31,4
4251_12,12,22,"if (!useRFC5179CompatibilityMode && jsonResponse == null) {
onFailure(statusCode, headers, (String) null, throwable);
} else if (jsonResponse instanceof JSONObject) {
onFailure(statusCode, headers, throwable, (JSONObject) jsonResponse);
} else if (jsonResponse instanceof JSONArray) {
onFailure(statusCode, headers, throwable, (JSONArray) jsonResponse);
} else if (jsonResponse instanceof String) {
onFailure(statusCode, headers, (String) jsonResponse, throwable);
} else {
onFailure(statusCode, headers, new JSONException(""Unexpected response type "" + jsonResponse.getClass().getName()), (JSONObject) null);
}",1,0,0,0,0,0,0,0,0,0,1,11,0,0,0,0,6,4,1,0,1,0.4,17,3
4251_37,37,41,"if (!getUseSynchronousMode() && !getUsePoolThread()) {
new Thread(parser).start();
} else {
parser.run();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,6,4,1,0,4,0.66,0,0
4251_38,38,38,new Thread(parser).start();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.48,1,1
4251_39,39,39,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.21,0,0
4251_40,40,40,parser.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.56,0,0
4251_42,42,42,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.21,2,1
4251_43,43,43,"AsyncHttpClient.log.v(LOG_TAG, ""response body is null, calling onFailure(Throwable, JSONObject)"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.37,3,1
4251_44,44,44,"onFailure(statusCode, headers, throwable, (JSONObject) null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.3,4,2
4250_1,1,2,"@Override
public final void onFailure(final int statusCode, final Header[] headers, final byte[] responseBytes, final Throwable throwable) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,0,0,0,0.31,9,4
4250_3,3,45,"if (responseBytes != null) {
Runnable parser = new Runnable() {
@Override
public void run() {
try {
final Object jsonResponse = parseResponse(responseBytes);
postRunnable(new Runnable() {
@Override
public void run() {
if (!useRFC5179CompatibilityMode && jsonResponse == null) {
onFailure(statusCode, headers, (String) null, throwable);
} else if (jsonResponse instanceof JSONObject) {
onFailure(statusCode, headers, throwable, (JSONObject) jsonResponse);
} else if (jsonResponse instanceof JSONArray) {
onFailure(statusCode, headers, throwable, (JSONArray) jsonResponse);
} else if (jsonResponse instanceof String) {
onFailure(statusCode, headers, (String) jsonResponse, throwable);
} else {
onFailure(statusCode, headers, new JSONException(""Unexpected response type "" + jsonResponse.getClass().getName()), (JSONObject) null);
}
}
});

} catch (final JSONException ex) {
postRunnable(new Runnable() {
@Override
public void run() {
onFailure(statusCode, headers, ex, (JSONObject) null);
}
});

}
}
};
if (!getUseSynchronousMode() && !getUsePoolThread()) {
new Thread(parser).start();
} else {
parser.run();
}
} else {
AsyncHttpClient.log.v(LOG_TAG, ""response body is null, calling onFailure(Throwable, JSONObject)"");
onFailure(statusCode, headers, throwable, (JSONObject) null);
}",1,0,0,0,0,0,0,0,0,11,7,43,0,0,0,0,5,3,0,0,2,0.56,0,0
4250_4,4,36,"Runnable parser = new Runnable() {
@Override
public void run() {
try {
final Object jsonResponse = parseResponse(responseBytes);
postRunnable(new Runnable() {
@Override
public void run() {
if (!useRFC5179CompatibilityMode && jsonResponse == null) {
onFailure(statusCode, headers, (String) null, throwable);
} else if (jsonResponse instanceof JSONObject) {
onFailure(statusCode, headers, throwable, (JSONObject) jsonResponse);
} else if (jsonResponse instanceof JSONArray) {
onFailure(statusCode, headers, throwable, (JSONArray) jsonResponse);
} else if (jsonResponse instanceof String) {
onFailure(statusCode, headers, (String) jsonResponse, throwable);
} else {
onFailure(statusCode, headers, new JSONException(""Unexpected response type "" + jsonResponse.getClass().getName()), (JSONObject) null);
}
}
});

} catch (final JSONException ex) {
postRunnable(new Runnable() {
@Override
public void run() {
onFailure(statusCode, headers, ex, (JSONObject) null);
}
});

}
}
};",0,0,0,0,0,1,0,0,0,3,6,33,0,1,0,0,5,3,0,0,2,0.57,0,0
4250_7,7,34,"try {
final Object jsonResponse = parseResponse(responseBytes);
postRunnable(new Runnable() {
@Override
public void run() {
if (!useRFC5179CompatibilityMode && jsonResponse == null) {
onFailure(statusCode, headers, (String) null, throwable);
} else if (jsonResponse instanceof JSONObject) {
onFailure(statusCode, headers, throwable, (JSONObject) jsonResponse);
} else if (jsonResponse instanceof JSONArray) {
onFailure(statusCode, headers, throwable, (JSONArray) jsonResponse);
} else if (jsonResponse instanceof String) {
onFailure(statusCode, headers, (String) jsonResponse, throwable);
} else {
onFailure(statusCode, headers, new JSONException(""Unexpected response type "" + jsonResponse.getClass().getName()), (JSONObject) null);
}
}
});

} catch (final JSONException ex) {
postRunnable(new Runnable() {
@Override
public void run() {
onFailure(statusCode, headers, ex, (JSONObject) null);
}
});

}",0,0,0,0,1,0,0,0,0,2,4,28,0,0,0,0,5,3,0,0,2,0.56,0,0
4250_8,8,8,final Object jsonResponse = parseResponse(responseBytes);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.48,3,0
4250_12,12,22,"if (!useRFC5179CompatibilityMode && jsonResponse == null) {
onFailure(statusCode, headers, (String) null, throwable);
} else if (jsonResponse instanceof JSONObject) {
onFailure(statusCode, headers, throwable, (JSONObject) jsonResponse);
} else if (jsonResponse instanceof JSONArray) {
onFailure(statusCode, headers, throwable, (JSONArray) jsonResponse);
} else if (jsonResponse instanceof String) {
onFailure(statusCode, headers, (String) jsonResponse, throwable);
} else {
onFailure(statusCode, headers, new JSONException(""Unexpected response type "" + jsonResponse.getClass().getName()), (JSONObject) null);
}",1,0,0,0,0,0,0,0,0,0,1,11,0,0,0,0,5,3,0,0,2,0.57,0,0
4250_37,37,41,"if (!getUseSynchronousMode() && !getUsePoolThread()) {
new Thread(parser).start();
} else {
parser.run();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,5,3,0,0,0,0.34,25,1
4250_38,38,38,new Thread(parser).start();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.34,26,1
4250_39,39,39,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.28,27,2
4250_40,40,40,parser.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.36,28,3
4250_42,42,42,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.28,30,5
4250_43,43,43,"AsyncHttpClient.log.v(LOG_TAG, ""response body is null, calling onFailure(Throwable, JSONObject)"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,2,0.54,31,5
4250_44,44,44,"onFailure(statusCode, headers, throwable, (JSONObject) null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,2,0.57,32,6
4249_1,1,2,"@Override
public final void onSuccess(final int statusCode, final Header[] headers, final byte[] responseBytes) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,1,0,0,0.38,39,9
4249_3,3,46,"if (statusCode != HttpStatus.SC_NO_CONTENT) {
Runnable parser = new Runnable() {
@Override
public void run() {
try {
final Object jsonResponse = parseResponse(responseBytes);
postRunnable(new Runnable() {
@Override
public void run() {
if (!useRFC5179CompatibilityMode && jsonResponse == null) {
onSuccess(statusCode, headers, (String) null);
} else if (jsonResponse instanceof JSONObject) {
onSuccess(statusCode, headers, (JSONObject) jsonResponse);
} else if (jsonResponse instanceof JSONArray) {
onSuccess(statusCode, headers, (JSONArray) jsonResponse);
} else if (jsonResponse instanceof String) {
if (useRFC5179CompatibilityMode) {
onFailure(statusCode, headers, (String) jsonResponse, new JSONException(""Response cannot be parsed as JSON data""));
} else {
onSuccess(statusCode, headers, (String) jsonResponse);
}
} else {
onFailure(statusCode, headers, new JSONException(""Unexpected response type "" + jsonResponse.getClass().getName()), (JSONObject) null);
}
}
});
} catch (final JSONException ex) {
postRunnable(new Runnable() {
@Override
public void run() {
onFailure(statusCode, headers, ex, (JSONObject) null);
}
});
}
}
};
if (!getUseSynchronousMode() && !getUsePoolThread()) {
new Thread(parser).start();
} else {
parser.run();
}
} else {
onSuccess(statusCode, headers, new JSONObject());
}",1,0,0,0,0,0,0,0,0,11,8,44,0,0,0,0,6,4,1,0,4,0.59,0,0
4249_4,4,38,"Runnable parser = new Runnable() {
@Override
public void run() {
try {
final Object jsonResponse = parseResponse(responseBytes);
postRunnable(new Runnable() {
@Override
public void run() {
if (!useRFC5179CompatibilityMode && jsonResponse == null) {
onSuccess(statusCode, headers, (String) null);
} else if (jsonResponse instanceof JSONObject) {
onSuccess(statusCode, headers, (JSONObject) jsonResponse);
} else if (jsonResponse instanceof JSONArray) {
onSuccess(statusCode, headers, (JSONArray) jsonResponse);
} else if (jsonResponse instanceof String) {
if (useRFC5179CompatibilityMode) {
onFailure(statusCode, headers, (String) jsonResponse, new JSONException(""Response cannot be parsed as JSON data""));
} else {
onSuccess(statusCode, headers, (String) jsonResponse);
}
} else {
onFailure(statusCode, headers, new JSONException(""Unexpected response type "" + jsonResponse.getClass().getName()), (JSONObject) null);
}
}
});
} catch (final JSONException ex) {
postRunnable(new Runnable() {
@Override
public void run() {
onFailure(statusCode, headers, ex, (JSONObject) null);
}
});
}
}
};",0,0,0,0,0,1,0,0,0,4,7,35,0,1,0,0,6,4,1,0,2,0.5,3,3
4249_7,7,36,"try {
final Object jsonResponse = parseResponse(responseBytes);
postRunnable(new Runnable() {
@Override
public void run() {
if (!useRFC5179CompatibilityMode && jsonResponse == null) {
onSuccess(statusCode, headers, (String) null);
} else if (jsonResponse instanceof JSONObject) {
onSuccess(statusCode, headers, (JSONObject) jsonResponse);
} else if (jsonResponse instanceof JSONArray) {
onSuccess(statusCode, headers, (JSONArray) jsonResponse);
} else if (jsonResponse instanceof String) {
if (useRFC5179CompatibilityMode) {
onFailure(statusCode, headers, (String) jsonResponse, new JSONException(""Response cannot be parsed as JSON data""));
} else {
onSuccess(statusCode, headers, (String) jsonResponse);
}
} else {
onFailure(statusCode, headers, new JSONException(""Unexpected response type "" + jsonResponse.getClass().getName()), (JSONObject) null);
}
}
});
} catch (final JSONException ex) {
postRunnable(new Runnable() {
@Override
public void run() {
onFailure(statusCode, headers, ex, (JSONObject) null);
}
});
}",0,0,0,0,1,0,0,0,0,3,5,30,0,0,0,0,6,4,1,0,2,0.49,5,3
4249_8,8,8,final Object jsonResponse = parseResponse(responseBytes);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.31,33,5
4249_12,12,26,"if (!useRFC5179CompatibilityMode && jsonResponse == null) {
onSuccess(statusCode, headers, (String) null);
} else if (jsonResponse instanceof JSONObject) {
onSuccess(statusCode, headers, (JSONObject) jsonResponse);
} else if (jsonResponse instanceof JSONArray) {
onSuccess(statusCode, headers, (JSONArray) jsonResponse);
} else if (jsonResponse instanceof String) {
if (useRFC5179CompatibilityMode) {
onFailure(statusCode, headers, (String) jsonResponse, new JSONException(""Response cannot be parsed as JSON data""));
} else {
onSuccess(statusCode, headers, (String) jsonResponse);
}
} else {
onFailure(statusCode, headers, new JSONException(""Unexpected response type "" + jsonResponse.getClass().getName()), (JSONObject) null);
}",1,0,0,0,0,0,0,0,0,1,2,15,0,0,0,0,6,4,1,0,1,0.4,15,3
4249_19,19,23,"if (useRFC5179CompatibilityMode) {
onFailure(statusCode, headers, (String) jsonResponse, new JSONException(""Response cannot be parsed as JSON data""));
} else {
onSuccess(statusCode, headers, (String) jsonResponse);
}",1,0,0,0,0,0,0,0,0,0,1,5,0,0,0,0,6,4,1,0,1,0.4,18,3
4249_39,39,43,"if (!getUseSynchronousMode() && !getUsePoolThread()) {
new Thread(parser).start();
} else {
parser.run();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,6,4,1,0,4,0.66,0,0
4249_40,40,40,new Thread(parser).start();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.48,1,1
4249_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.21,0,0
4249_42,42,42,parser.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.56,0,0
4249_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.21,2,1
4249_45,45,45,"onSuccess(statusCode, headers, new JSONObject());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.31,3,1
4248_1,1,2,"@Override
public final void onSuccess(final int statusCode, final Header[] headers, final byte[] responseBytes) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,1,0,0,0.33,16,5
4248_3,3,46,"if (statusCode != HttpStatus.SC_NO_CONTENT) {
Runnable parser = new Runnable() {
@Override
public void run() {
try {
final Object jsonResponse = parseResponse(responseBytes);
postRunnable(new Runnable() {
@Override
public void run() {
if (!useRFC5179CompatibilityMode && jsonResponse == null) {
onSuccess(statusCode, headers, (String) null);
} else if (jsonResponse instanceof JSONObject) {
onSuccess(statusCode, headers, (JSONObject) jsonResponse);
} else if (jsonResponse instanceof JSONArray) {
onSuccess(statusCode, headers, (JSONArray) jsonResponse);
} else if (jsonResponse instanceof String) {
if (useRFC5179CompatibilityMode) {
onFailure(statusCode, headers, (String) jsonResponse, new JSONException(""Response cannot be parsed as JSON data""));
} else {
onSuccess(statusCode, headers, (String) jsonResponse);
}
} else {
onFailure(statusCode, headers, new JSONException(""Unexpected response type "" + jsonResponse.getClass().getName()), (JSONObject) null);
}
}
});
} catch (final JSONException ex) {
postRunnable(new Runnable() {
@Override
public void run() {
onFailure(statusCode, headers, ex, (JSONObject) null);
}
});
}
}
};
if (!getUseSynchronousMode() && !getUsePoolThread()) {
new Thread(parser).start();
} else {
parser.run();
}
} else {
onSuccess(statusCode, headers, new JSONObject());
}",1,0,0,0,0,0,0,0,0,11,8,44,0,0,0,0,6,4,1,0,2,0.56,0,0
4248_4,4,38,"Runnable parser = new Runnable() {
@Override
public void run() {
try {
final Object jsonResponse = parseResponse(responseBytes);
postRunnable(new Runnable() {
@Override
public void run() {
if (!useRFC5179CompatibilityMode && jsonResponse == null) {
onSuccess(statusCode, headers, (String) null);
} else if (jsonResponse instanceof JSONObject) {
onSuccess(statusCode, headers, (JSONObject) jsonResponse);
} else if (jsonResponse instanceof JSONArray) {
onSuccess(statusCode, headers, (JSONArray) jsonResponse);
} else if (jsonResponse instanceof String) {
if (useRFC5179CompatibilityMode) {
onFailure(statusCode, headers, (String) jsonResponse, new JSONException(""Response cannot be parsed as JSON data""));
} else {
onSuccess(statusCode, headers, (String) jsonResponse);
}
} else {
onFailure(statusCode, headers, new JSONException(""Unexpected response type "" + jsonResponse.getClass().getName()), (JSONObject) null);
}
}
});
} catch (final JSONException ex) {
postRunnable(new Runnable() {
@Override
public void run() {
onFailure(statusCode, headers, ex, (JSONObject) null);
}
});
}
}
};",0,0,0,0,0,1,0,0,0,4,7,35,0,1,0,0,6,4,1,0,2,0.56,0,0
4248_7,7,36,"try {
final Object jsonResponse = parseResponse(responseBytes);
postRunnable(new Runnable() {
@Override
public void run() {
if (!useRFC5179CompatibilityMode && jsonResponse == null) {
onSuccess(statusCode, headers, (String) null);
} else if (jsonResponse instanceof JSONObject) {
onSuccess(statusCode, headers, (JSONObject) jsonResponse);
} else if (jsonResponse instanceof JSONArray) {
onSuccess(statusCode, headers, (JSONArray) jsonResponse);
} else if (jsonResponse instanceof String) {
if (useRFC5179CompatibilityMode) {
onFailure(statusCode, headers, (String) jsonResponse, new JSONException(""Response cannot be parsed as JSON data""));
} else {
onSuccess(statusCode, headers, (String) jsonResponse);
}
} else {
onFailure(statusCode, headers, new JSONException(""Unexpected response type "" + jsonResponse.getClass().getName()), (JSONObject) null);
}
}
});
} catch (final JSONException ex) {
postRunnable(new Runnable() {
@Override
public void run() {
onFailure(statusCode, headers, ex, (JSONObject) null);
}
});
}",0,0,0,0,1,0,0,0,0,3,5,30,0,0,0,0,6,4,1,0,2,0.55,0,0
4248_8,8,8,final Object jsonResponse = parseResponse(responseBytes);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.49,10,1
4248_12,12,26,"if (!useRFC5179CompatibilityMode && jsonResponse == null) {
onSuccess(statusCode, headers, (String) null);
} else if (jsonResponse instanceof JSONObject) {
onSuccess(statusCode, headers, (JSONObject) jsonResponse);
} else if (jsonResponse instanceof JSONArray) {
onSuccess(statusCode, headers, (JSONArray) jsonResponse);
} else if (jsonResponse instanceof String) {
if (useRFC5179CompatibilityMode) {
onFailure(statusCode, headers, (String) jsonResponse, new JSONException(""Response cannot be parsed as JSON data""));
} else {
onSuccess(statusCode, headers, (String) jsonResponse);
}
} else {
onFailure(statusCode, headers, new JSONException(""Unexpected response type "" + jsonResponse.getClass().getName()), (JSONObject) null);
}",1,0,0,0,0,0,0,0,0,1,2,15,0,0,0,0,6,4,1,0,2,0.57,0,0
4248_19,19,23,"if (useRFC5179CompatibilityMode) {
onFailure(statusCode, headers, (String) jsonResponse, new JSONException(""Response cannot be parsed as JSON data""));
} else {
onSuccess(statusCode, headers, (String) jsonResponse);
}",1,0,0,0,0,0,0,0,0,0,1,5,0,0,0,0,6,4,1,0,2,0.57,0,0
4248_39,39,43,"if (!getUseSynchronousMode() && !getUsePoolThread()) {
new Thread(parser).start();
} else {
parser.run();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,6,4,1,0,0,0.36,20,1
4248_40,40,40,new Thread(parser).start();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.36,21,1
4248_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.29,22,2
4248_42,42,42,parser.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.38,23,3
4248_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.29,25,5
4248_45,45,45,"onSuccess(statusCode, headers, new JSONObject());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.47,26,5
4247_1,1,2,"@Override
public final void onSuccess(final int statusCode, final Header[] headers, final byte[] responseBytes) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,0,0,0,0.29,9,4
4247_3,3,46,"if (statusCode != HttpStatus.SC_NO_CONTENT) {
Runnable parser = new Runnable() {
@Override
public void run() {
try {
final Object jsonResponse = parseResponse(responseBytes);
postRunnable(new Runnable() {
@Override
public void run() {
if (!useRFC5179CompatibilityMode && jsonResponse == null) {
onSuccess(statusCode, headers, (String) null);
} else if (jsonResponse instanceof JSONObject) {
onSuccess(statusCode, headers, (JSONObject) jsonResponse);
} else if (jsonResponse instanceof JSONArray) {
onSuccess(statusCode, headers, (JSONArray) jsonResponse);
} else if (jsonResponse instanceof String) {
if (useRFC5179CompatibilityMode) {
onFailure(statusCode, headers, (String) jsonResponse, new JSONException(""Response cannot be parsed as JSON data""));
} else {
onSuccess(statusCode, headers, (String) jsonResponse);
}
} else {
onFailure(statusCode, headers, new JSONException(""Unexpected response type "" + jsonResponse.getClass().getName()), (JSONObject) null);
}
}
});
} catch (final JSONException ex) {
postRunnable(new Runnable() {
@Override
public void run() {
onFailure(statusCode, headers, ex, (JSONObject) null);
}
});
}
}
};
if (!getUseSynchronousMode() && !getUsePoolThread()) {
new Thread(parser).start();
} else {
parser.run();
}
} else {
onSuccess(statusCode, headers, new JSONObject());
}",1,0,0,0,0,0,0,0,0,11,8,44,0,0,0,0,5,3,0,0,2,0.58,0,0
4247_4,4,38,"Runnable parser = new Runnable() {
@Override
public void run() {
try {
final Object jsonResponse = parseResponse(responseBytes);
postRunnable(new Runnable() {
@Override
public void run() {
if (!useRFC5179CompatibilityMode && jsonResponse == null) {
onSuccess(statusCode, headers, (String) null);
} else if (jsonResponse instanceof JSONObject) {
onSuccess(statusCode, headers, (JSONObject) jsonResponse);
} else if (jsonResponse instanceof JSONArray) {
onSuccess(statusCode, headers, (JSONArray) jsonResponse);
} else if (jsonResponse instanceof String) {
if (useRFC5179CompatibilityMode) {
onFailure(statusCode, headers, (String) jsonResponse, new JSONException(""Response cannot be parsed as JSON data""));
} else {
onSuccess(statusCode, headers, (String) jsonResponse);
}
} else {
onFailure(statusCode, headers, new JSONException(""Unexpected response type "" + jsonResponse.getClass().getName()), (JSONObject) null);
}
}
});
} catch (final JSONException ex) {
postRunnable(new Runnable() {
@Override
public void run() {
onFailure(statusCode, headers, ex, (JSONObject) null);
}
});
}
}
};",0,0,0,0,0,1,0,0,0,4,7,35,0,1,0,0,5,3,0,0,2,0.56,0,0
4247_7,7,36,"try {
final Object jsonResponse = parseResponse(responseBytes);
postRunnable(new Runnable() {
@Override
public void run() {
if (!useRFC5179CompatibilityMode && jsonResponse == null) {
onSuccess(statusCode, headers, (String) null);
} else if (jsonResponse instanceof JSONObject) {
onSuccess(statusCode, headers, (JSONObject) jsonResponse);
} else if (jsonResponse instanceof JSONArray) {
onSuccess(statusCode, headers, (JSONArray) jsonResponse);
} else if (jsonResponse instanceof String) {
if (useRFC5179CompatibilityMode) {
onFailure(statusCode, headers, (String) jsonResponse, new JSONException(""Response cannot be parsed as JSON data""));
} else {
onSuccess(statusCode, headers, (String) jsonResponse);
}
} else {
onFailure(statusCode, headers, new JSONException(""Unexpected response type "" + jsonResponse.getClass().getName()), (JSONObject) null);
}
}
});
} catch (final JSONException ex) {
postRunnable(new Runnable() {
@Override
public void run() {
onFailure(statusCode, headers, ex, (JSONObject) null);
}
});
}",0,0,0,0,1,0,0,0,0,3,5,30,0,0,0,0,5,3,0,0,2,0.56,0,0
4247_8,8,8,final Object jsonResponse = parseResponse(responseBytes);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.48,3,0
4247_12,12,26,"if (!useRFC5179CompatibilityMode && jsonResponse == null) {
onSuccess(statusCode, headers, (String) null);
} else if (jsonResponse instanceof JSONObject) {
onSuccess(statusCode, headers, (JSONObject) jsonResponse);
} else if (jsonResponse instanceof JSONArray) {
onSuccess(statusCode, headers, (JSONArray) jsonResponse);
} else if (jsonResponse instanceof String) {
if (useRFC5179CompatibilityMode) {
onFailure(statusCode, headers, (String) jsonResponse, new JSONException(""Response cannot be parsed as JSON data""));
} else {
onSuccess(statusCode, headers, (String) jsonResponse);
}
} else {
onFailure(statusCode, headers, new JSONException(""Unexpected response type "" + jsonResponse.getClass().getName()), (JSONObject) null);
}",1,0,0,0,0,0,0,0,0,1,2,15,0,0,0,0,5,3,0,0,2,0.57,0,0
4247_19,19,23,"if (useRFC5179CompatibilityMode) {
onFailure(statusCode, headers, (String) jsonResponse, new JSONException(""Response cannot be parsed as JSON data""));
} else {
onSuccess(statusCode, headers, (String) jsonResponse);
}",1,0,0,0,0,0,0,0,0,0,1,5,0,0,0,0,5,3,0,0,1,0.46,7,1
4247_39,39,43,"if (!getUseSynchronousMode() && !getUsePoolThread()) {
new Thread(parser).start();
} else {
parser.run();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,5,3,0,0,0,0.34,27,2
4247_40,40,40,new Thread(parser).start();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.34,28,2
4247_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.28,29,3
4247_42,42,42,parser.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.36,30,4
4247_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.28,32,6
4247_45,45,45,"onSuccess(statusCode, headers, new JSONObject());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.42,33,6
4246_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,4,0,0,0,0.3,10,8
4246_2,2,2,os.write(STREAM_NAME);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.35,9,7
4246_3,3,3,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.33,8,6
4246_4,4,4,os.write(escape(name));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.32,7,5
4246_5,5,5,"os.write(',');",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,4,0,0,0,0.33,6,4
4246_7,7,7,os.write(STREAM_TYPE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,4,4,0,0,0,0.35,4,3
4246_8,8,8,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.33,3,2
4246_9,9,9,os.write(escape(contentType));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,1,0.48,2,1
4246_10,10,10,"os.write(',');",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,4,0,0,0,0.33,1,0
4246_12,12,12,os.write(STREAM_CONTENTS);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,4,4,0,0,1,0.53,0,0
4246_13,13,13,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.33,1,0
4246_14,14,14,"os.write('""');",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.33,2,1
4245_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,1,0,0,0.38,5,4
4245_2,2,2,os.write(STREAM_NAME);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,1,0.48,4,3
4245_3,3,3,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,0,0.36,3,2
4245_4,4,4,os.write(escape(name));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,0,0.33,2,1
4245_5,5,5,"os.write(',');",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,3,1,0,0,0.36,1,0
4245_7,7,7,os.write(STREAM_TYPE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,4,3,1,0,2,0.68,0,0
4245_8,8,8,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,0,0.36,1,0
4245_9,9,9,os.write(escape(contentType));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,2,0.66,2,1
4245_10,10,10,"os.write(',');",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,3,1,0,0,0.36,3,2
4245_12,12,12,os.write(STREAM_CONTENTS);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,4,3,1,0,2,0.67,5,4
4245_13,13,13,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,0,0.36,6,4
4245_14,14,14,"os.write('""');",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,0,0.36,7,5
4244_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,1,0,0,0.41,0,0
4244_2,2,2,os.write(STREAM_NAME);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,1,0,2,0.74,0,0
4244_3,3,3,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,1,0,0,0.38,1,0
4244_4,4,4,os.write(escape(name));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,1,0,1,0.56,2,1
4244_5,5,5,"os.write(',');",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,2,1,0,0,0.38,3,2
4244_7,7,7,os.write(STREAM_TYPE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,2,1,0,1,0.52,5,4
4244_8,8,8,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,1,0,0,0.38,6,4
4244_9,9,9,os.write(escape(contentType));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,1,0,0,0.33,7,5
4244_10,10,10,"os.write(',');",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,2,1,0,0,0.38,8,6
4244_12,12,12,os.write(STREAM_CONTENTS);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,2,1,0,1,0.51,10,8
4244_13,13,13,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,1,0,0,0.38,11,8
4244_14,14,14,"os.write('""');",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,1,0,0,0.38,12,9
4243_1,1,1,"private void writeToFromFile(OutputStream os, RequestParams.FileWrapper wrapper)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.56,22,12
4243_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,4,2,0,0,0,0.45,21,11
4243_4,4,4,"writeMetaData(os, wrapper.file.getName(), wrapper.contentType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.45,19,10
4243_6,6,6,int bytesRead;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.37,17,9
4243_7,7,7,"long bytesWritten = 0, totalSize = wrapper.file.length();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.45,16,8
4243_9,9,9,FileInputStream in = new FileInputStream(wrapper.file);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,0,0,2,0.73,14,7
4243_11,11,12,"Base64OutputStream bos =
new Base64OutputStream(os, Base64.NO_CLOSE | Base64.NO_WRAP);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,4,2,0,0,2,0.72,11,6
4243_14,14,18,"while ((bytesRead = in.read(buffer)) != -1) {
bos.write(buffer, 0, bytesRead);
bytesWritten += bytesRead;
progressHandler.sendProgressMessage(bytesWritten, totalSize);
}",0,1,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,2,0,0,0,0.44,5,2
4243_15,15,15,"bos.write(buffer, 0, bytesRead);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.48,8,4
4243_16,16,16,bytesWritten += bytesRead;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.43,7,3
4243_17,17,17,"progressHandler.sendProgressMessage(bytesWritten, totalSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.36,6,2
4243_20,20,20,AsyncHttpClient.silentCloseOutputStream(bos);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,2,0.66,3,1
4243_22,22,22,endMetaData(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.39,1,0
4243_24,24,24,AsyncHttpClient.silentCloseInputStream(in);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,3,0.72,0,0
4242_1,1,1,"private void writeToFromFile(OutputStream os, RequestParams.FileWrapper wrapper)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.37,20,11
4242_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,3,3,0,0,0,0.21,19,10
4242_4,4,4,"writeMetaData(os, wrapper.file.getName(), wrapper.contentType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,2,0.61,17,9
4242_6,6,6,int bytesRead;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.35,15,8
4242_7,7,7,"long bytesWritten = 0, totalSize = wrapper.file.length();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.36,14,7
4242_9,9,9,FileInputStream in = new FileInputStream(wrapper.file);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.29,12,6
4242_11,11,12,"Base64OutputStream bos =
new Base64OutputStream(os, Base64.NO_CLOSE | Base64.NO_WRAP);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,3,3,0,0,0,0.4,9,5
4242_14,14,18,"while ((bytesRead = in.read(buffer)) != -1) {
bos.write(buffer, 0, bytesRead);
bytesWritten += bytesRead;
progressHandler.sendProgressMessage(bytesWritten, totalSize);
}",0,1,0,0,0,0,0,0,0,3,1,5,0,0,1,1,3,3,0,0,0,0.37,3,1
4242_15,15,15,"bos.write(buffer, 0, bytesRead);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.38,6,3
4242_16,16,16,bytesWritten += bytesRead;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.39,5,2
4242_17,17,17,"progressHandler.sendProgressMessage(bytesWritten, totalSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.36,4,1
4242_20,20,20,AsyncHttpClient.silentCloseOutputStream(bos);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.36,1,0
4242_22,22,22,endMetaData(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,3,0.92,0,0
4242_24,24,24,AsyncHttpClient.silentCloseInputStream(in);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.31,2,1
4241_1,1,1,"private void writeToFromFile(OutputStream os, RequestParams.FileWrapper wrapper)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.63,18,10
4241_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,4,2,0,0,0,0.44,17,9
4241_4,4,4,"writeMetaData(os, wrapper.file.getName(), wrapper.contentType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.42,15,8
4241_6,6,6,int bytesRead;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.5,13,7
4241_7,7,7,"long bytesWritten = 0, totalSize = wrapper.file.length();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.49,12,6
4241_9,9,9,FileInputStream in = new FileInputStream(wrapper.file);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,0,0,1,0.58,10,5
4241_11,11,12,"Base64OutputStream bos =
new Base64OutputStream(os, Base64.NO_CLOSE | Base64.NO_WRAP);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,4,2,0,0,3,0.81,7,4
4241_14,14,18,"while ((bytesRead = in.read(buffer)) != -1) {
bos.write(buffer, 0, bytesRead);
bytesWritten += bytesRead;
progressHandler.sendProgressMessage(bytesWritten, totalSize);
}",0,1,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,2,0,0,0,0.48,1,0
4241_15,15,15,"bos.write(buffer, 0, bytesRead);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.52,4,2
4241_16,16,16,bytesWritten += bytesRead;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.53,3,1
4241_17,17,17,"progressHandler.sendProgressMessage(bytesWritten, totalSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.42,2,0
4241_20,20,20,AsyncHttpClient.silentCloseOutputStream(bos);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,3,0.75,0,0
4241_22,22,22,endMetaData(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.43,2,1
4241_24,24,24,AsyncHttpClient.silentCloseInputStream(in);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,2,0.64,4,2
4240_1,1,1,"private void writeToFromFile(OutputStream os, RequestParams.FileWrapper wrapper)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.52,12,6
4240_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,5,4,1,0,0,0.27,11,5
4240_4,4,4,"writeMetaData(os, wrapper.file.getName(), wrapper.contentType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,4,1,0,2,0.56,9,4
4240_6,6,6,int bytesRead;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,4,1,0,1,0.55,7,3
4240_7,7,7,"long bytesWritten = 0, totalSize = wrapper.file.length();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,1,0,1,0.48,6,2
4240_9,9,9,FileInputStream in = new FileInputStream(wrapper.file);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,4,1,0,1,0.54,4,1
4240_11,11,12,"Base64OutputStream bos =
new Base64OutputStream(os, Base64.NO_CLOSE | Base64.NO_WRAP);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,5,4,1,0,0,0.49,1,0
4240_14,14,18,"while ((bytesRead = in.read(buffer)) != -1) {
bos.write(buffer, 0, bytesRead);
bytesWritten += bytesRead;
progressHandler.sendProgressMessage(bytesWritten, totalSize);
}",0,1,0,0,0,0,0,0,0,3,1,5,0,0,1,1,5,4,1,0,1,0.58,0,0
4240_15,15,15,"bos.write(buffer, 0, bytesRead);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.61,1,0
4240_16,16,16,bytesWritten += bytesRead;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.54,2,1
4240_17,17,17,"progressHandler.sendProgressMessage(bytesWritten, totalSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.34,3,2
4240_20,20,20,AsyncHttpClient.silentCloseOutputStream(bos);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,4,1,0,0,0.42,6,4
4240_22,22,22,endMetaData(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,4,1,0,1,0.55,8,5
4240_24,24,24,AsyncHttpClient.silentCloseInputStream(in);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,1,0,0,0.29,10,6
4239_1,1,1,"private void writeToFromFile(OutputStream os, RequestParams.FileWrapper wrapper)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.59,9,5
4239_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,4,4,0,0,0,0.33,8,4
4239_4,4,4,"writeMetaData(os, wrapper.file.getName(), wrapper.contentType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,2,0.66,6,3
4239_6,6,6,int bytesRead;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.45,4,2
4239_7,7,7,"long bytesWritten = 0, totalSize = wrapper.file.length();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,1,0.63,3,1
4239_9,9,9,FileInputStream in = new FileInputStream(wrapper.file);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,4,0,0,1,0.65,1,0
4239_11,11,12,"Base64OutputStream bos =
new Base64OutputStream(os, Base64.NO_CLOSE | Base64.NO_WRAP);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,4,4,0,0,1,0.64,0,0
4239_14,14,18,"while ((bytesRead = in.read(buffer)) != -1) {
bos.write(buffer, 0, bytesRead);
bytesWritten += bytesRead;
progressHandler.sendProgressMessage(bytesWritten, totalSize);
}",0,1,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,4,0,0,0,0.54,3,1
4239_15,15,15,"bos.write(buffer, 0, bytesRead);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.57,4,1
4239_16,16,16,bytesWritten += bytesRead;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.47,5,2
4239_17,17,17,"progressHandler.sendProgressMessage(bytesWritten, totalSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.38,6,3
4239_20,20,20,AsyncHttpClient.silentCloseOutputStream(bos);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.48,9,5
4239_22,22,22,endMetaData(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.45,11,6
4239_24,24,24,AsyncHttpClient.silentCloseInputStream(in);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.36,13,7
4238_1,1,1,"private void writeToFromFile(OutputStream os, RequestParams.FileWrapper wrapper)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.55,7,4
4238_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,3,2,0,0,0,0.33,6,3
4238_4,4,4,"writeMetaData(os, wrapper.file.getName(), wrapper.contentType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,1,0.49,4,2
4238_6,6,6,int bytesRead;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,0,0,1,0.52,2,1
4238_7,7,7,"long bytesWritten = 0, totalSize = wrapper.file.length();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,1,0.48,1,0
4238_9,9,9,FileInputStream in = new FileInputStream(wrapper.file);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,0,0,1,0.59,0,0
4238_11,11,12,"Base64OutputStream bos =
new Base64OutputStream(os, Base64.NO_CLOSE | Base64.NO_WRAP);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,3,2,0,0,0,0.5,2,1
4238_14,14,18,"while ((bytesRead = in.read(buffer)) != -1) {
bos.write(buffer, 0, bytesRead);
bytesWritten += bytesRead;
progressHandler.sendProgressMessage(bytesWritten, totalSize);
}",0,1,0,0,0,0,0,0,0,3,1,5,0,0,1,1,3,2,0,0,1,0.57,5,2
4238_15,15,15,"bos.write(buffer, 0, bytesRead);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.61,6,2
4238_16,16,16,bytesWritten += bytesRead;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.51,7,3
4238_17,17,17,"progressHandler.sendProgressMessage(bytesWritten, totalSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.26,8,4
4238_20,20,20,AsyncHttpClient.silentCloseOutputStream(bos);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.52,11,6
4238_22,22,22,endMetaData(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.33,13,7
4238_24,24,24,AsyncHttpClient.silentCloseInputStream(in);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.41,15,8
4237_1,1,1,"private void writeToFromFile(OutputStream os, RequestParams.FileWrapper wrapper)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.37,2,1
4237_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,3,3,0,0,0,0.27,1,0
4237_4,4,4,"writeMetaData(os, wrapper.file.getName(), wrapper.contentType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,2,0.59,0,0
4237_6,6,6,int bytesRead;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.34,2,1
4237_7,7,7,"long bytesWritten = 0, totalSize = wrapper.file.length();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.35,3,1
4237_9,9,9,FileInputStream in = new FileInputStream(wrapper.file);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.3,5,3
4237_11,11,12,"Base64OutputStream bos =
new Base64OutputStream(os, Base64.NO_CLOSE | Base64.NO_WRAP);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,3,3,0,0,0,0.4,7,4
4237_14,14,18,"while ((bytesRead = in.read(buffer)) != -1) {
bos.write(buffer, 0, bytesRead);
bytesWritten += bytesRead;
progressHandler.sendProgressMessage(bytesWritten, totalSize);
}",0,1,0,0,0,0,0,0,0,3,1,5,0,0,1,1,3,3,0,0,1,0.51,10,5
4237_15,15,15,"bos.write(buffer, 0, bytesRead);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.36,11,5
4237_16,16,16,bytesWritten += bytesRead;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.38,12,6
4237_17,17,17,"progressHandler.sendProgressMessage(bytesWritten, totalSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.53,13,7
4237_20,20,20,AsyncHttpClient.silentCloseOutputStream(bos);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.4,16,9
4237_22,22,22,endMetaData(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,2,0.71,18,10
4237_24,24,24,AsyncHttpClient.silentCloseInputStream(in);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.36,20,11
4236_1,1,1,"private void writeToFromStream(OutputStream os, RequestParams.StreamWrapper entry)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.59,18,9
4236_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,4,2,0,0,0,0.45,17,8
4236_4,4,4,"writeMetaData(os, entry.name, entry.contentType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.42,15,7
4236_6,6,6,int bytesRead;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.37,13,6
4236_8,8,9,"Base64OutputStream bos =
new Base64OutputStream(os, Base64.NO_CLOSE | Base64.NO_WRAP);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,4,2,0,0,2,0.72,10,5
4236_11,11,13,"while ((bytesRead = entry.inputStream.read(buffer)) != -1) {
bos.write(buffer, 0, bytesRead);
}",0,1,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,0,0,2,0.64,6,3
4236_12,12,12,"bos.write(buffer, 0, bytesRead);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.48,7,3
4236_15,15,15,AsyncHttpClient.silentCloseOutputStream(bos);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,2,0.66,4,2
4236_17,17,17,endMetaData(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.39,2,1
4236_19,19,21,"if (entry.autoClose) {
AsyncHttpClient.silentCloseInputStream(entry.inputStream);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,4,2,0,0,3,0.74,0,0
4236_20,20,20,AsyncHttpClient.silentCloseInputStream(entry.inputStream);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,3,0.75,0,0
4235_1,1,1,"private void writeToFromStream(OutputStream os, RequestParams.StreamWrapper entry)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.56,17,8
4235_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,3,2,0,0,0,0.42,16,7
4235_4,4,4,"writeMetaData(os, entry.name, entry.contentType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.35,14,6
4235_6,6,6,int bytesRead;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.35,12,5
4235_8,8,9,"Base64OutputStream bos =
new Base64OutputStream(os, Base64.NO_CLOSE | Base64.NO_WRAP);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,3,2,0,0,2,0.74,9,4
4235_11,11,13,"while ((bytesRead = entry.inputStream.read(buffer)) != -1) {
bos.write(buffer, 0, bytesRead);
}",0,1,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,2,0.64,5,2
4235_12,12,12,"bos.write(buffer, 0, bytesRead);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.42,6,2
4235_15,15,15,AsyncHttpClient.silentCloseOutputStream(bos);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,2,0.66,3,1
4235_17,17,17,endMetaData(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.33,1,0
4235_19,19,21,"if (entry.autoClose) {
AsyncHttpClient.silentCloseInputStream(entry.inputStream);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,2,0,0,3,0.81,0,0
4235_20,20,20,AsyncHttpClient.silentCloseInputStream(entry.inputStream);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,3,0.82,1,0
4234_1,1,1,"private void writeToFromStream(OutputStream os, RequestParams.StreamWrapper entry)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,15,7
4234_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,3,3,0,0,0,0.21,14,6
4234_4,4,4,"writeMetaData(os, entry.name, entry.contentType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,2,0.63,12,5
4234_6,6,6,int bytesRead;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.35,10,4
4234_8,8,9,"Base64OutputStream bos =
new Base64OutputStream(os, Base64.NO_CLOSE | Base64.NO_WRAP);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,3,3,0,0,0,0.4,7,3
4234_11,11,13,"while ((bytesRead = entry.inputStream.read(buffer)) != -1) {
bos.write(buffer, 0, bytesRead);
}",0,1,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,0,0.37,3,1
4234_12,12,12,"bos.write(buffer, 0, bytesRead);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,4,1
4234_15,15,15,AsyncHttpClient.silentCloseOutputStream(bos);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.36,1,0
4234_17,17,17,endMetaData(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,3,0.92,0,0
4234_19,19,21,"if (entry.autoClose) {
AsyncHttpClient.silentCloseInputStream(entry.inputStream);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,3,0,0,0,0.32,2,1
4234_20,20,20,AsyncHttpClient.silentCloseInputStream(entry.inputStream);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,3,1
4233_1,1,1,"private void writeToFromStream(OutputStream os, RequestParams.StreamWrapper entry)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.67,13,6
4233_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,4,2,0,0,0,0.44,12,5
4233_4,4,4,"writeMetaData(os, entry.name, entry.contentType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.41,10,4
4233_6,6,6,int bytesRead;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.5,8,3
4233_8,8,9,"Base64OutputStream bos =
new Base64OutputStream(os, Base64.NO_CLOSE | Base64.NO_WRAP);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,4,2,0,0,3,0.81,5,2
4233_11,11,13,"while ((bytesRead = entry.inputStream.read(buffer)) != -1) {
bos.write(buffer, 0, bytesRead);
}",0,1,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,0,0,1,0.57,1,0
4233_12,12,12,"bos.write(buffer, 0, bytesRead);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.52,2,0
4233_15,15,15,AsyncHttpClient.silentCloseOutputStream(bos);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,3,0.75,0,0
4233_17,17,17,endMetaData(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.43,2,1
4233_19,19,21,"if (entry.autoClose) {
AsyncHttpClient.silentCloseInputStream(entry.inputStream);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,4,2,0,0,2,0.64,4,2
4233_20,20,20,AsyncHttpClient.silentCloseInputStream(entry.inputStream);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.65,5,2
4232_1,1,1,"private void writeToFromStream(OutputStream os, RequestParams.StreamWrapper entry)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.53,9,4
4232_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,6,5,1,0,0,0.36,8,3
4232_4,4,4,"writeMetaData(os, entry.name, entry.contentType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,5,1,0,1,0.48,6,2
4232_6,6,6,int bytesRead;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,5,1,0,1,0.58,4,1
4232_8,8,9,"Base64OutputStream bos =
new Base64OutputStream(os, Base64.NO_CLOSE | Base64.NO_WRAP);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,6,5,1,0,1,0.59,1,0
4232_11,11,13,"while ((bytesRead = entry.inputStream.read(buffer)) != -1) {
bos.write(buffer, 0, bytesRead);
}",0,1,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,5,1,0,3,0.71,0,0
4232_12,12,12,"bos.write(buffer, 0, bytesRead);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.58,1,0
4232_15,15,15,AsyncHttpClient.silentCloseOutputStream(bos);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,5,1,0,1,0.49,4,2
4232_17,17,17,endMetaData(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,5,1,0,1,0.53,6,3
4232_19,19,21,"if (entry.autoClose) {
AsyncHttpClient.silentCloseInputStream(entry.inputStream);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,6,5,1,0,2,0.53,8,4
4232_20,20,20,AsyncHttpClient.silentCloseInputStream(entry.inputStream);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,2,0.55,9,4
4231_1,1,1,"private void writeToFromStream(OutputStream os, RequestParams.StreamWrapper entry)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.48,6,3
4231_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,4,4,0,0,0,0.33,5,2
4231_4,4,4,"writeMetaData(os, entry.name, entry.contentType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,1,0.55,3,1
4231_6,6,6,int bytesRead;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.45,1,0
4231_8,8,9,"Base64OutputStream bos =
new Base64OutputStream(os, Base64.NO_CLOSE | Base64.NO_WRAP);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,4,4,0,0,1,0.64,0,0
4231_11,11,13,"while ((bytesRead = entry.inputStream.read(buffer)) != -1) {
bos.write(buffer, 0, bytesRead);
}",0,1,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,4,0,0,0,0.54,3,1
4231_12,12,12,"bos.write(buffer, 0, bytesRead);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.57,4,1
4231_15,15,15,AsyncHttpClient.silentCloseOutputStream(bos);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.48,7,3
4231_17,17,17,endMetaData(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.45,9,4
4231_19,19,21,"if (entry.autoClose) {
AsyncHttpClient.silentCloseInputStream(entry.inputStream);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,4,4,0,0,0,0.37,11,5
4231_20,20,20,AsyncHttpClient.silentCloseInputStream(entry.inputStream);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.38,12,5
4230_1,1,1,"private void writeToFromStream(OutputStream os, RequestParams.StreamWrapper entry)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,2,1
4230_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,3,3,0,0,0,0.27,1,0
4230_4,4,4,"writeMetaData(os, entry.name, entry.contentType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,2,0.6,0,0
4230_6,6,6,int bytesRead;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.34,2,1
4230_8,8,9,"Base64OutputStream bos =
new Base64OutputStream(os, Base64.NO_CLOSE | Base64.NO_WRAP);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,3,3,0,0,0,0.4,4,2
4230_11,11,13,"while ((bytesRead = entry.inputStream.read(buffer)) != -1) {
bos.write(buffer, 0, bytesRead);
}",0,1,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,0,0.34,7,3
4230_12,12,12,"bos.write(buffer, 0, bytesRead);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.36,8,3
4230_15,15,15,AsyncHttpClient.silentCloseOutputStream(bos);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.4,11,5
4230_17,17,17,endMetaData(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,2,0.71,13,6
4230_19,19,21,"if (entry.autoClose) {
AsyncHttpClient.silentCloseInputStream(entry.inputStream);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,3,0,0,0,0.35,15,7
4230_20,20,20,AsyncHttpClient.silentCloseInputStream(entry.inputStream);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.35,16,7
4229_1,1,2,"@Override
public void writeTo(final OutputStream out) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,1,0.51,83,55
4229_3,3,5,"if (out == null) {
throw new IllegalStateException(""Output stream cannot be null."");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,2,0,0,1,0.47,80,53
4229_4,4,4,"throw new IllegalStateException(""Output stream cannot be null."");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,0,0,1,0.48,81,53
4229_7,7,7,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.28,78,52
4229_9,9,11,"OutputStream os = contentEncoding != null
? new GZIPOutputStream(out, BUFFER_SIZE)
: out;",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,3,2,0,0,2,0.66,74,51
4229_13,13,13,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.4,72,50
4229_15,15,15,Set<String> keys = jsonParams.keySet();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.27,70,49
4229_17,17,17,int keysCount = keys.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.29,68,48
4229_18,18,82,"if (0 < keysCount) {
int keysProcessed = 0;
boolean isFileWrapper;

for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}

long elapsedTime = System.currentTimeMillis() - now;

if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}

AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");
}",1,0,0,0,0,0,0,0,0,46,7,65,0,1,0,1,3,2,0,0,1,0.49,3,1
4229_19,19,19,int keysProcessed = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.28,66,46
4229_20,20,20,boolean isFileWrapper;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.38,65,45
4229_22,22,71,"for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}",0,0,0,1,0,0,0,0,0,37,6,50,0,0,1,1,3,2,0,0,1,0.46,14,7
4229_23,23,23,keysProcessed++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.26,62,43
4229_25,25,70,"try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}",0,0,0,0,1,0,0,0,0,35,5,46,0,0,1,0,3,2,0,0,1,0.46,15,7
4229_26,26,26,Object value = jsonParams.get(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.29,59,41
4229_28,28,28,os.write(escape(key));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,3,2,0,0,0,0.37,57,40
4229_29,29,29,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,3,2,0,0,0,0.4,56,39
4229_31,31,65,"if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}",1,0,0,0,0,0,0,0,0,28,4,35,0,0,1,0,3,2,0,0,1,0.46,20,10
4229_32,32,32,os.write(JSON_NULL);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.36,53,37
4229_33,33,33,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.14,52,36
4229_34,34,34,isFileWrapper = value instanceof RequestParams.FileWrapper;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.36,51,35
4229_36,36,64,"if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}",1,0,0,0,0,0,0,0,0,24,3,29,0,0,1,0,3,2,0,0,1,0.46,21,10
4229_37,37,37,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.4,48,33
4229_39,39,43,"if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,3,2,0,0,1,0.51,42,29
4229_40,40,40,"writeToFromFile(os, (RequestParams.FileWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.39,45,31
4229_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.14,44,30
4229_42,42,42,"writeToFromStream(os, (RequestParams.StreamWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.54,43,29
4229_45,45,45,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.4,40,28
4229_46,46,46,} else if (value instanceof JsonValueInterface) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.27,39,27
4229_47,47,47,os.write(((JsonValueInterface) value).getEscapedJsonValue());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.34,38,26
4229_48,48,48,} else if (value instanceof org.json.JSONObject) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,37,25
4229_49,49,49,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.37,36,24
4229_50,50,50,} else if (value instanceof org.json.JSONArray) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.33,35,23
4229_51,51,51,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.37,34,22
4229_52,52,52,} else if (value instanceof Boolean) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,33,21
4229_53,53,53,os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.34,32,20
4229_54,54,54,} else if (value instanceof Long) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.28,31,19
4229_55,55,55,"os.write((((Number) value).longValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.37,30,18
4229_56,56,56,} else if (value instanceof Double) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.25,29,17
4229_57,57,57,"os.write((((Number) value).doubleValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.36,28,16
4229_58,58,58,} else if (value instanceof Float) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.25,27,15
4229_59,59,59,"os.write((((Number) value).floatValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.36,26,14
4229_60,60,60,} else if (value instanceof Integer) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.25,25,13
4229_61,61,61,"os.write((((Number) value).intValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.37,24,12
4229_62,62,62,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.14,23,11
4229_63,63,63,os.write(escape(value.toString()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,22,10
4229_66,66,66,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.28,19,9
4229_67,67,69,"if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,0,0.35,16,7
4229_68,68,68,"os.write(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.4,17,7
4229_73,73,73,long elapsedTime = System.currentTimeMillis() - now;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.28,12,6
4229_75,75,79,"if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,3,2,0,0,0,0.38,6,2
4229_76,76,76,os.write(elapsedField);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.37,9,4
4229_77,77,77,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.4,8,3
4229_78,78,78,"os.write((elapsedTime + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.39,7,2
4229_81,81,81,"AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.4,4,1
4229_84,84,84,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.4,1,0
4229_86,86,86,os.flush();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.63,0,0
4229_87,87,87,AsyncHttpClient.silentCloseOutputStream(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.55,1,0
4228_1,1,2,"@Override
public void writeTo(final OutputStream out) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,1,0,0,0.3,72,49
4228_3,3,5,"if (out == null) {
throw new IllegalStateException(""Output stream cannot be null."");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,4,1,0,0,0.28,69,47
4228_4,4,4,"throw new IllegalStateException(""Output stream cannot be null."");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,4,1,0,0,0.28,70,47
4228_7,7,7,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,1,0,1,0.56,67,46
4228_9,9,11,"OutputStream os = contentEncoding != null
? new GZIPOutputStream(out, BUFFER_SIZE)
: out;",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,6,4,1,0,0,0.42,63,45
4228_13,13,13,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,1,0,0,0.46,61,44
4228_15,15,15,Set<String> keys = jsonParams.keySet();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,1,0,0,0.3,59,43
4228_17,17,17,int keysCount = keys.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,1,0,0,0.32,57,42
4228_18,18,82,"if (0 < keysCount) {
int keysProcessed = 0;
boolean isFileWrapper;

for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}

long elapsedTime = System.currentTimeMillis() - now;

if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}

AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");
}",1,0,0,0,0,0,0,0,0,46,7,65,0,1,0,1,6,4,1,0,3,0.58,0,0
4228_19,19,19,int keysProcessed = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.33,55,40
4228_20,20,20,boolean isFileWrapper;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.45,54,39
4228_22,22,71,"for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}",0,0,0,1,0,0,0,0,0,37,6,50,0,0,1,1,6,4,1,0,1,0.5,3,1
4228_23,23,23,keysProcessed++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.22,51,37
4228_25,25,70,"try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}",0,0,0,0,1,0,0,0,0,35,5,46,0,0,1,0,6,4,1,0,1,0.5,4,1
4228_26,26,26,Object value = jsonParams.get(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.29,48,35
4228_28,28,28,os.write(escape(key));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,6,4,1,0,0,0.43,46,34
4228_29,29,29,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,6,4,1,0,0,0.46,45,33
4228_31,31,65,"if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}",1,0,0,0,0,0,0,0,0,28,4,35,0,0,1,0,6,4,1,0,0,0.46,9,4
4228_32,32,32,os.write(JSON_NULL);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.44,42,31
4228_33,33,33,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.23,41,30
4228_34,34,34,isFileWrapper = value instanceof RequestParams.FileWrapper;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.45,40,29
4228_36,36,64,"if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}",1,0,0,0,0,0,0,0,0,24,3,29,0,0,1,0,6,4,1,0,0,0.46,10,4
4228_37,37,37,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.46,37,27
4228_39,39,43,"if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,6,4,1,0,0,0.46,31,23
4228_40,40,40,"writeToFromFile(os, (RequestParams.FileWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.48,34,25
4228_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.23,33,24
4228_42,42,42,"writeToFromStream(os, (RequestParams.StreamWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.42,32,23
4228_45,45,45,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,1,0,0,0.46,29,22
4228_46,46,46,} else if (value instanceof JsonValueInterface) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.32,28,21
4228_47,47,47,os.write(((JsonValueInterface) value).getEscapedJsonValue());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.42,27,20
4228_48,48,48,} else if (value instanceof org.json.JSONObject) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.34,26,19
4228_49,49,49,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.42,25,18
4228_50,50,50,} else if (value instanceof org.json.JSONArray) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.38,24,17
4228_51,51,51,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.42,23,16
4228_52,52,52,} else if (value instanceof Boolean) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.29,22,15
4228_53,53,53,os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.42,21,14
4228_54,54,54,} else if (value instanceof Long) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.37,20,13
4228_55,55,55,"os.write((((Number) value).longValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.44,19,12
4228_56,56,56,} else if (value instanceof Double) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.38,18,11
4228_57,57,57,"os.write((((Number) value).doubleValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.42,17,10
4228_58,58,58,} else if (value instanceof Float) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.38,16,9
4228_59,59,59,"os.write((((Number) value).floatValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.42,15,8
4228_60,60,60,} else if (value instanceof Integer) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.36,14,7
4228_61,61,61,"os.write((((Number) value).intValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.42,13,6
4228_62,62,62,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.23,12,5
4228_63,63,63,os.write(escape(value.toString()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.44,11,4
4228_66,66,66,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.26,8,3
4228_67,67,69,"if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,4,1,0,1,0.49,5,1
4228_68,68,68,"os.write(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.46,6,1
4228_73,73,73,long elapsedTime = System.currentTimeMillis() - now;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,1,0,2,0.64,1,0
4228_75,75,79,"if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,6,4,1,0,2,0.6,0,0
4228_76,76,76,os.write(elapsedField);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,1,0,1,0.56,1,0
4228_77,77,77,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,1,0,0,0.46,2,1
4228_78,78,78,"os.write((elapsedTime + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,1,0,2,0.63,3,2
4228_81,81,81,"AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,1,0,3,0.66,6,4
4228_84,84,84,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,1,0,0,0.46,9,5
4228_86,86,86,os.flush();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,4,1,0,0,0.49,11,6
4228_87,87,87,AsyncHttpClient.silentCloseOutputStream(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.41,12,6
4227_1,1,2,"@Override
public void writeTo(final OutputStream out) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,1,0,0,0.41,70,48
4227_3,3,5,"if (out == null) {
throw new IllegalStateException(""Output stream cannot be null."");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,4,1,0,0,0.29,67,46
4227_4,4,4,"throw new IllegalStateException(""Output stream cannot be null."");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,4,1,0,0,0.3,68,46
4227_7,7,7,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,1,0,0,0.5,65,45
4227_9,9,11,"OutputStream os = contentEncoding != null
? new GZIPOutputStream(out, BUFFER_SIZE)
: out;",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,6,4,1,0,1,0.57,61,44
4227_13,13,13,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,1,0,0,0.59,59,43
4227_15,15,15,Set<String> keys = jsonParams.keySet();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,1,0,0,0.35,57,42
4227_17,17,17,int keysCount = keys.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,1,0,0,0.41,55,41
4227_18,18,82,"if (0 < keysCount) {
int keysProcessed = 0;
boolean isFileWrapper;

for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}

long elapsedTime = System.currentTimeMillis() - now;

if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}

AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");
}",1,0,0,0,0,0,0,0,0,46,7,65,0,1,0,1,6,4,1,0,1,0.59,0,0
4227_19,19,19,int keysProcessed = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.37,53,39
4227_20,20,20,boolean isFileWrapper;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.52,52,38
4227_22,22,71,"for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}",0,0,0,1,0,0,0,0,0,37,6,50,0,0,1,1,6,4,1,0,0,0.54,1,0
4227_23,23,23,keysProcessed++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.3,49,36
4227_25,25,70,"try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}",0,0,0,0,1,0,0,0,0,35,5,46,0,0,1,0,6,4,1,0,0,0.54,2,0
4227_26,26,26,Object value = jsonParams.get(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.35,46,34
4227_28,28,28,os.write(escape(key));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,6,4,1,0,0,0.52,44,33
4227_29,29,29,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,6,4,1,0,0,0.59,43,32
4227_31,31,65,"if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}",1,0,0,0,0,0,0,0,0,28,4,35,0,0,1,0,6,4,1,0,0,0.53,7,3
4227_32,32,32,os.write(JSON_NULL);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.51,40,30
4227_33,33,33,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.25,39,29
4227_34,34,34,isFileWrapper = value instanceof RequestParams.FileWrapper;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.5,38,28
4227_36,36,64,"if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}",1,0,0,0,0,0,0,0,0,24,3,29,0,0,1,0,6,4,1,0,0,0.53,8,3
4227_37,37,37,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.59,35,26
4227_39,39,43,"if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,6,4,1,0,0,0.54,29,22
4227_40,40,40,"writeToFromFile(os, (RequestParams.FileWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.55,32,24
4227_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.25,31,23
4227_42,42,42,"writeToFromStream(os, (RequestParams.StreamWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.51,30,22
4227_45,45,45,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,1,0,0,0.59,27,21
4227_46,46,46,} else if (value instanceof JsonValueInterface) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.36,26,20
4227_47,47,47,os.write(((JsonValueInterface) value).getEscapedJsonValue());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.48,25,19
4227_48,48,48,} else if (value instanceof org.json.JSONObject) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.37,24,18
4227_49,49,49,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.5,23,17
4227_50,50,50,} else if (value instanceof org.json.JSONArray) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.37,22,16
4227_51,51,51,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.5,21,15
4227_52,52,52,} else if (value instanceof Boolean) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.37,20,14
4227_53,53,53,os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.49,19,13
4227_54,54,54,} else if (value instanceof Long) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.42,18,12
4227_55,55,55,"os.write((((Number) value).longValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.51,17,11
4227_56,56,56,} else if (value instanceof Double) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.4,16,10
4227_57,57,57,"os.write((((Number) value).doubleValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.5,15,9
4227_58,58,58,} else if (value instanceof Float) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.44,14,8
4227_59,59,59,"os.write((((Number) value).floatValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.52,13,7
4227_60,60,60,} else if (value instanceof Integer) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.41,12,6
4227_61,61,61,"os.write((((Number) value).intValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.5,11,5
4227_62,62,62,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.25,10,4
4227_63,63,63,os.write(escape(value.toString()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.5,9,3
4227_66,66,66,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.22,6,2
4227_67,67,69,"if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,4,1,0,0,0.52,3,0
4227_68,68,68,"os.write(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.59,4,0
4227_73,73,73,long elapsedTime = System.currentTimeMillis() - now;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,1,0,0,0.55,0,0
4227_75,75,79,"if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,6,4,1,0,0,0.58,2,1
4227_76,76,76,os.write(elapsedField);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,1,0,0,0.6,3,1
4227_77,77,77,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,1,0,0,0.59,4,2
4227_78,78,78,"os.write((elapsedTime + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,1,0,0,0.59,5,3
4227_81,81,81,"AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,1,0,1,0.63,8,5
4227_84,84,84,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,1,0,0,0.59,11,6
4227_86,86,86,os.flush();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,4,1,0,0,0.54,13,7
4227_87,87,87,AsyncHttpClient.silentCloseOutputStream(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.49,14,7
4226_1,1,2,"@Override
public void writeTo(final OutputStream out) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,4,0,0,1,0.44,64,46
4226_3,3,5,"if (out == null) {
throw new IllegalStateException(""Output stream cannot be null."");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,7,4,0,0,1,0.46,61,44
4226_4,4,4,"throw new IllegalStateException(""Output stream cannot be null."");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,4,0,0,1,0.47,62,44
4226_7,7,7,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,4,0,0,0,0.32,59,43
4226_9,9,11,"OutputStream os = contentEncoding != null
? new GZIPOutputStream(out, BUFFER_SIZE)
: out;",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,7,4,0,0,0,0.43,55,42
4226_13,13,13,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,4,0,0,0,0.41,53,41
4226_15,15,15,Set<String> keys = jsonParams.keySet();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,4,0,0,0,0.34,51,40
4226_17,17,17,int keysCount = keys.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,4,0,0,0,0.37,49,39
4226_18,18,82,"if (0 < keysCount) {
int keysProcessed = 0;
boolean isFileWrapper;

for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}

long elapsedTime = System.currentTimeMillis() - now;

if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}

AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");
}",1,0,0,0,0,0,0,0,0,46,7,65,0,1,0,1,7,4,0,0,0,0.44,0,0
4226_19,19,19,int keysProcessed = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.35,47,37
4226_20,20,20,boolean isFileWrapper;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,4,0,0,0,0.29,46,36
4226_22,22,71,"for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}",0,0,0,1,0,0,0,0,0,37,6,50,0,0,1,1,7,4,0,0,0,0.43,0,0
4226_23,23,23,keysProcessed++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,4,0,0,0,0.23,43,34
4226_25,25,70,"try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}",0,0,0,0,1,0,0,0,0,35,5,46,0,0,1,0,7,4,0,0,0,0.43,0,0
4226_26,26,26,Object value = jsonParams.get(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,4,0,0,0,0.31,40,32
4226_28,28,28,os.write(escape(key));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,7,4,0,0,0,0.42,38,31
4226_29,29,29,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,7,4,0,0,0,0.41,37,30
4226_31,31,65,"if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}",1,0,0,0,0,0,0,0,0,28,4,35,0,0,1,0,7,4,0,0,0,0.43,1,1
4226_32,32,32,os.write(JSON_NULL);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.42,34,28
4226_33,33,33,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.28,33,27
4226_34,34,34,isFileWrapper = value instanceof RequestParams.FileWrapper;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,4,0,0,0,0.35,32,26
4226_36,36,64,"if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}",1,0,0,0,0,0,0,0,0,24,3,29,0,0,1,0,7,4,0,0,0,0.43,2,1
4226_37,37,37,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,4,0,0,0,0.41,29,24
4226_39,39,43,"if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,7,4,0,0,0,0.38,23,20
4226_40,40,40,"writeToFromFile(os, (RequestParams.FileWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.36,26,22
4226_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.28,25,21
4226_42,42,42,"writeToFromStream(os, (RequestParams.StreamWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.38,24,20
4226_45,45,45,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,4,0,0,0,0.41,21,19
4226_46,46,46,} else if (value instanceof JsonValueInterface) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.36,20,18
4226_47,47,47,os.write(((JsonValueInterface) value).getEscapedJsonValue());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.39,19,17
4226_48,48,48,} else if (value instanceof org.json.JSONObject) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.39,18,16
4226_49,49,49,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.4,17,15
4226_50,50,50,} else if (value instanceof org.json.JSONArray) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.4,16,14
4226_51,51,51,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.4,15,13
4226_52,52,52,} else if (value instanceof Boolean) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.31,14,12
4226_53,53,53,os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.4,13,11
4226_54,54,54,} else if (value instanceof Long) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.38,12,10
4226_55,55,55,"os.write((((Number) value).longValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.38,11,9
4226_56,56,56,} else if (value instanceof Double) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.37,10,8
4226_57,57,57,"os.write((((Number) value).doubleValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.38,9,7
4226_58,58,58,} else if (value instanceof Float) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.42,8,6
4226_59,59,59,"os.write((((Number) value).floatValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.42,7,5
4226_60,60,60,} else if (value instanceof Integer) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.37,6,4
4226_61,61,61,"os.write((((Number) value).intValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.39,5,3
4226_62,62,62,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.28,4,2
4226_63,63,63,os.write(escape(value.toString()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.41,3,1
4226_66,66,66,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.23,0,0
4226_67,67,69,"if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,4,0,0,0,0.38,0,0
4226_68,68,68,"os.write(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.41,1,0
4226_73,73,73,long elapsedTime = System.currentTimeMillis() - now;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,4,0,0,0,0.33,6,2
4226_75,75,79,"if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,7,4,0,0,0,0.41,8,3
4226_76,76,76,os.write(elapsedField);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,4,0,0,0,0.4,9,3
4226_77,77,77,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,4,0,0,0,0.41,10,4
4226_78,78,78,"os.write((elapsedTime + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,4,0,0,0,0.42,11,5
4226_81,81,81,"AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,4,0,0,0,0.45,14,7
4226_84,84,84,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,4,0,0,0,0.41,17,8
4226_86,86,86,os.flush();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,7,4,0,0,0,0.43,19,9
4226_87,87,87,AsyncHttpClient.silentCloseOutputStream(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,0,0,0,0.41,20,9
4225_1,1,2,"@Override
public void writeTo(final OutputStream out) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.39,31,19
4225_3,3,5,"if (out == null) {
throw new IllegalStateException(""Output stream cannot be null."");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,3,0,0,0,0.35,28,17
4225_4,4,4,"throw new IllegalStateException(""Output stream cannot be null."");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,0,0.35,29,17
4225_7,7,7,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.3,26,16
4225_9,9,11,"OutputStream os = contentEncoding != null
? new GZIPOutputStream(out, BUFFER_SIZE)
: out;",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,3,3,0,0,0,0.44,22,15
4225_13,13,13,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.46,20,14
4225_15,15,15,Set<String> keys = jsonParams.keySet();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.27,18,13
4225_17,17,17,int keysCount = keys.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.22,16,12
4225_18,18,82,"if (0 < keysCount) {
int keysProcessed = 0;
boolean isFileWrapper;

for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}

long elapsedTime = System.currentTimeMillis() - now;

if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}

AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");
}",1,0,0,0,0,0,0,0,0,46,7,65,0,1,0,1,3,3,0,0,2,0.58,0,0
4225_19,19,19,int keysProcessed = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.21,14,10
4225_20,20,20,boolean isFileWrapper;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,2,0.8,13,9
4225_22,22,71,"for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}",0,0,0,1,0,0,0,0,0,37,6,50,0,0,1,1,3,3,0,0,2,0.58,0,0
4225_23,23,23,keysProcessed++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.19,10,7
4225_25,25,70,"try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}",0,0,0,0,1,0,0,0,0,35,5,46,0,0,1,0,3,3,0,0,2,0.58,0,0
4225_26,26,26,Object value = jsonParams.get(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.27,7,5
4225_28,28,28,os.write(escape(key));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,3,3,0,0,0,0.39,5,4
4225_29,29,29,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,3,3,0,0,0,0.46,4,3
4225_31,31,65,"if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}",1,0,0,0,0,0,0,0,0,28,4,35,0,0,1,0,3,3,0,0,2,0.59,0,0
4225_32,32,32,os.write(JSON_NULL);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.42,1,1
4225_33,33,33,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.19,0,0
4225_34,34,34,isFileWrapper = value instanceof RequestParams.FileWrapper;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,2,0.67,0,0
4225_36,36,64,"if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}",1,0,0,0,0,0,0,0,0,24,3,29,0,0,1,0,3,3,0,0,2,0.58,2,1
4225_37,37,37,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.46,3,1
4225_39,39,43,"if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,3,3,0,0,2,0.66,5,3
4225_40,40,40,"writeToFromFile(os, (RequestParams.FileWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.67,6,3
4225_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.19,7,4
4225_42,42,42,"writeToFromStream(os, (RequestParams.StreamWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.52,8,5
4225_45,45,45,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.46,11,7
4225_46,46,46,} else if (value instanceof JsonValueInterface) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,12,7
4225_47,47,47,os.write(((JsonValueInterface) value).getEscapedJsonValue());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,13,8
4225_48,48,48,} else if (value instanceof org.json.JSONObject) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.27,14,9
4225_49,49,49,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.39,15,10
4225_50,50,50,} else if (value instanceof org.json.JSONArray) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.27,16,11
4225_51,51,51,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.39,17,12
4225_52,52,52,} else if (value instanceof Boolean) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.28,18,13
4225_53,53,53,os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.41,19,14
4225_54,54,54,} else if (value instanceof Long) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.22,20,15
4225_55,55,55,"os.write((((Number) value).longValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.36,21,16
4225_56,56,56,} else if (value instanceof Double) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.24,22,17
4225_57,57,57,"os.write((((Number) value).doubleValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.37,23,18
4225_58,58,58,} else if (value instanceof Float) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.21,24,19
4225_59,59,59,"os.write((((Number) value).floatValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.36,25,20
4225_60,60,60,} else if (value instanceof Integer) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.28,26,21
4225_61,61,61,"os.write((((Number) value).intValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.37,27,22
4225_62,62,62,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.19,28,23
4225_63,63,63,os.write(escape(value.toString()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.4,29,24
4225_66,66,66,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,32,26
4225_67,67,69,"if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,0,0.37,33,26
4225_68,68,68,"os.write(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.46,34,27
4225_73,73,73,long elapsedTime = System.currentTimeMillis() - now;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.29,39,29
4225_75,75,79,"if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,3,3,0,0,0,0.4,41,30
4225_76,76,76,os.write(elapsedField);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,0,0.42,42,30
4225_77,77,77,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,0,0.46,43,31
4225_78,78,78,"os.write((elapsedTime + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,0,0.39,44,32
4225_81,81,81,"AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.4,47,34
4225_84,84,84,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.46,50,35
4225_86,86,86,os.flush();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.42,52,36
4225_87,87,87,AsyncHttpClient.silentCloseOutputStream(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.39,53,36
4224_1,1,2,"@Override
public void writeTo(final OutputStream out) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.37,28,16
4224_3,3,5,"if (out == null) {
throw new IllegalStateException(""Output stream cannot be null."");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,4,0,0,1,0.49,25,14
4224_4,4,4,"throw new IllegalStateException(""Output stream cannot be null."");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,4,0,0,1,0.46,26,14
4224_7,7,7,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.37,23,13
4224_9,9,11,"OutputStream os = contentEncoding != null
? new GZIPOutputStream(out, BUFFER_SIZE)
: out;",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,4,4,0,0,1,0.5,19,12
4224_13,13,13,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.45,17,11
4224_15,15,15,Set<String> keys = jsonParams.keySet();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.31,15,10
4224_17,17,17,int keysCount = keys.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.29,13,9
4224_18,18,82,"if (0 < keysCount) {
int keysProcessed = 0;
boolean isFileWrapper;

for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}

long elapsedTime = System.currentTimeMillis() - now;

if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}

AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");
}",1,0,0,0,0,0,0,0,0,46,7,65,0,1,0,1,4,4,0,0,2,0.65,0,0
4224_19,19,19,int keysProcessed = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.3,11,7
4224_20,20,20,boolean isFileWrapper;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.44,10,6
4224_22,22,71,"for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}",0,0,0,1,0,0,0,0,0,37,6,50,0,0,1,1,4,4,0,0,2,0.65,0,0
4224_23,23,23,keysProcessed++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.26,7,4
4224_25,25,70,"try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}",0,0,0,0,1,0,0,0,0,35,5,46,0,0,1,0,4,4,0,0,2,0.66,0,0
4224_26,26,26,Object value = jsonParams.get(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,1,0.44,4,2
4224_28,28,28,os.write(escape(key));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,4,4,0,0,0,0.41,2,1
4224_29,29,29,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,4,0,0,0,0.45,1,0
4224_31,31,65,"if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}",1,0,0,0,0,0,0,0,0,28,4,35,0,0,1,0,4,4,0,0,2,0.66,0,0
4224_32,32,32,os.write(JSON_NULL);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.59,1,0
4224_33,33,33,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.34,2,1
4224_34,34,34,isFileWrapper = value instanceof RequestParams.FileWrapper;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,1,0.54,3,2
4224_36,36,64,"if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}",1,0,0,0,0,0,0,0,0,24,3,29,0,0,1,0,4,4,0,0,1,0.58,5,4
4224_37,37,37,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.45,6,4
4224_39,39,43,"if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,4,0,0,1,0.55,8,6
4224_40,40,40,"writeToFromFile(os, (RequestParams.FileWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.55,9,6
4224_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.34,10,7
4224_42,42,42,"writeToFromStream(os, (RequestParams.StreamWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.55,11,8
4224_45,45,45,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.45,14,10
4224_46,46,46,} else if (value instanceof JsonValueInterface) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.56,15,10
4224_47,47,47,os.write(((JsonValueInterface) value).getEscapedJsonValue());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.58,16,11
4224_48,48,48,} else if (value instanceof org.json.JSONObject) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.48,17,12
4224_49,49,49,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.54,18,13
4224_50,50,50,} else if (value instanceof org.json.JSONArray) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.48,19,14
4224_51,51,51,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.54,20,15
4224_52,52,52,} else if (value instanceof Boolean) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.54,21,16
4224_53,53,53,os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.56,22,17
4224_54,54,54,} else if (value instanceof Long) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.53,23,18
4224_55,55,55,"os.write((((Number) value).longValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.57,24,19
4224_56,56,56,} else if (value instanceof Double) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.53,25,20
4224_57,57,57,"os.write((((Number) value).doubleValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.57,26,21
4224_58,58,58,} else if (value instanceof Float) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.55,27,22
4224_59,59,59,"os.write((((Number) value).floatValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.58,28,23
4224_60,60,60,} else if (value instanceof Integer) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.54,29,24
4224_61,61,61,"os.write((((Number) value).intValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.57,30,25
4224_62,62,62,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.34,31,26
4224_63,63,63,os.write(escape(value.toString()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.56,32,27
4224_66,66,66,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.19,35,29
4224_67,67,69,"if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,4,0,0,1,0.54,36,29
4224_68,68,68,"os.write(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.45,37,30
4224_73,73,73,long elapsedTime = System.currentTimeMillis() - now;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.38,42,32
4224_75,75,79,"if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,4,0,0,1,0.56,44,33
4224_76,76,76,os.write(elapsedField);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,0,0.47,45,33
4224_77,77,77,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,0,0.45,46,34
4224_78,78,78,"os.write((elapsedTime + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,0,0.41,47,35
4224_81,81,81,"AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.45,50,37
4224_84,84,84,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.45,53,38
4224_86,86,86,os.flush();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.48,55,39
4224_87,87,87,AsyncHttpClient.silentCloseOutputStream(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.41,56,39
4223_1,1,2,"@Override
public void writeTo(final OutputStream out) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,1,0.46,25,14
4223_3,3,5,"if (out == null) {
throw new IllegalStateException(""Output stream cannot be null."");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,3,0,0,0,0.34,22,12
4223_4,4,4,"throw new IllegalStateException(""Output stream cannot be null."");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,0,0.34,23,12
4223_7,7,7,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.25,20,11
4223_9,9,11,"OutputStream os = contentEncoding != null
? new GZIPOutputStream(out, BUFFER_SIZE)
: out;",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,4,3,0,0,0,0.4,16,10
4223_13,13,13,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.61,14,9
4223_15,15,15,Set<String> keys = jsonParams.keySet();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,2,0.65,12,8
4223_17,17,17,int keysCount = keys.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,1,0.52,10,7
4223_18,18,82,"if (0 < keysCount) {
int keysProcessed = 0;
boolean isFileWrapper;

for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}

long elapsedTime = System.currentTimeMillis() - now;

if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}

AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");
}",1,0,0,0,0,0,0,0,0,46,7,65,0,1,0,1,4,3,0,0,4,0.74,0,0
4223_19,19,19,int keysProcessed = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.5,8,5
4223_20,20,20,boolean isFileWrapper;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.36,7,4
4223_22,22,71,"for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}",0,0,0,1,0,0,0,0,0,37,6,50,0,0,1,1,4,3,0,0,4,0.74,0,0
4223_23,23,23,keysProcessed++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.58,4,2
4223_25,25,70,"try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}",0,0,0,0,1,0,0,0,0,35,5,46,0,0,1,0,4,3,0,0,4,0.74,0,0
4223_26,26,26,Object value = jsonParams.get(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,3,0.73,1,0
4223_28,28,28,os.write(escape(key));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,4,3,0,0,2,0.71,0,0
4223_29,29,29,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,3,0,0,1,0.61,1,0
4223_31,31,65,"if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}",1,0,0,0,0,0,0,0,0,28,4,35,0,0,1,0,4,3,0,0,3,0.65,3,2
4223_32,32,32,os.write(JSON_NULL);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.71,4,2
4223_33,33,33,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.15,5,3
4223_34,34,34,isFileWrapper = value instanceof RequestParams.FileWrapper;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.33,6,4
4223_36,36,64,"if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}",1,0,0,0,0,0,0,0,0,24,3,29,0,0,1,0,4,3,0,0,3,0.65,8,6
4223_37,37,37,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.61,9,6
4223_39,39,43,"if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,3,0,0,1,0.46,11,8
4223_40,40,40,"writeToFromFile(os, (RequestParams.FileWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.46,12,8
4223_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.15,13,9
4223_42,42,42,"writeToFromStream(os, (RequestParams.StreamWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.48,14,10
4223_45,45,45,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.61,17,12
4223_46,46,46,} else if (value instanceof JsonValueInterface) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.48,18,12
4223_47,47,47,os.write(((JsonValueInterface) value).getEscapedJsonValue());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.64,19,13
4223_48,48,48,} else if (value instanceof org.json.JSONObject) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.63,20,14
4223_49,49,49,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.52,21,15
4223_50,50,50,} else if (value instanceof org.json.JSONArray) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.54,22,16
4223_51,51,51,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.52,23,17
4223_52,52,52,} else if (value instanceof Boolean) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.29,24,18
4223_53,53,53,os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.66,25,19
4223_54,54,54,} else if (value instanceof Long) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,26,20
4223_55,55,55,"os.write((((Number) value).longValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.47,27,21
4223_56,56,56,} else if (value instanceof Double) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.27,28,22
4223_57,57,57,"os.write((((Number) value).doubleValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.47,29,23
4223_58,58,58,} else if (value instanceof Float) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.27,30,24
4223_59,59,59,"os.write((((Number) value).floatValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.46,31,25
4223_60,60,60,} else if (value instanceof Integer) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.33,32,26
4223_61,61,61,"os.write((((Number) value).intValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.46,33,27
4223_62,62,62,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.15,34,28
4223_63,63,63,os.write(escape(value.toString()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.53,35,29
4223_66,66,66,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.16,38,31
4223_67,67,69,"if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,2,0.65,39,31
4223_68,68,68,"os.write(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.61,40,32
4223_73,73,73,long elapsedTime = System.currentTimeMillis() - now;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.25,45,34
4223_75,75,79,"if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,3,0,0,1,0.52,47,35
4223_76,76,76,os.write(elapsedField);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,1,0.55,48,35
4223_77,77,77,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,1,0.61,49,36
4223_78,78,78,"os.write((elapsedTime + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,1,0.47,50,37
4223_81,81,81,"AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.44,53,39
4223_84,84,84,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.61,56,40
4223_86,86,86,os.flush();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.39,58,41
4223_87,87,87,AsyncHttpClient.silentCloseOutputStream(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.38,59,41
4222_1,1,2,"@Override
public void writeTo(final OutputStream out) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,0,0.23,19,10
4222_3,3,5,"if (out == null) {
throw new IllegalStateException(""Output stream cannot be null."");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,2,1,0,0,0.23,16,8
4222_4,4,4,"throw new IllegalStateException(""Output stream cannot be null."");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,1,0,0,0.24,17,8
4222_7,7,7,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.29,14,7
4222_9,9,11,"OutputStream os = contentEncoding != null
? new GZIPOutputStream(out, BUFFER_SIZE)
: out;",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,4,2,1,0,0,0.28,10,6
4222_13,13,13,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.27,8,5
4222_15,15,15,Set<String> keys = jsonParams.keySet();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,1,0,1,0.53,6,4
4222_17,17,17,int keysCount = keys.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,1,0.52,4,3
4222_18,18,82,"if (0 < keysCount) {
int keysProcessed = 0;
boolean isFileWrapper;

for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}

long elapsedTime = System.currentTimeMillis() - now;

if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}

AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");
}",1,0,0,0,0,0,0,0,0,46,7,65,0,1,0,1,4,2,1,0,2,0.56,0,0
4222_19,19,19,int keysProcessed = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.47,2,1
4222_20,20,20,boolean isFileWrapper;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.26,1,0
4222_22,22,71,"for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}",0,0,0,1,0,0,0,0,0,37,6,50,0,0,1,1,4,2,1,0,2,0.57,0,0
4222_23,23,23,keysProcessed++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,1,0.55,1,0
4222_25,25,70,"try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}",0,0,0,0,1,0,0,0,0,35,5,46,0,0,1,0,4,2,1,0,2,0.56,3,2
4222_26,26,26,Object value = jsonParams.get(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,2,0.6,4,2
4222_28,28,28,os.write(escape(key));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,4,2,1,0,1,0.49,6,4
4222_29,29,29,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,2,1,0,0,0.27,7,4
4222_31,31,65,"if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}",1,0,0,0,0,0,0,0,0,28,4,35,0,0,1,0,4,2,1,0,1,0.49,9,6
4222_32,32,32,os.write(JSON_NULL);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.29,10,6
4222_33,33,33,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.26,11,7
4222_34,34,34,isFileWrapper = value instanceof RequestParams.FileWrapper;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,1,0.4,12,8
4222_36,36,64,"if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}",1,0,0,0,0,0,0,0,0,24,3,29,0,0,1,0,4,2,1,0,1,0.49,14,10
4222_37,37,37,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.27,15,10
4222_39,39,43,"if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,2,1,0,1,0.41,17,12
4222_40,40,40,"writeToFromFile(os, (RequestParams.FileWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.41,18,12
4222_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.26,19,13
4222_42,42,42,"writeToFromStream(os, (RequestParams.StreamWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.43,20,14
4222_45,45,45,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.27,23,16
4222_46,46,46,} else if (value instanceof JsonValueInterface) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.5,24,16
4222_47,47,47,os.write(((JsonValueInterface) value).getEscapedJsonValue());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.5,25,17
4222_48,48,48,} else if (value instanceof org.json.JSONObject) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.43,26,18
4222_49,49,49,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.44,27,19
4222_50,50,50,} else if (value instanceof org.json.JSONArray) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.43,28,20
4222_51,51,51,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.44,29,21
4222_52,52,52,} else if (value instanceof Boolean) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.49,30,22
4222_53,53,53,os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.45,31,23
4222_54,54,54,} else if (value instanceof Long) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.48,32,24
4222_55,55,55,"os.write((((Number) value).longValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.5,33,25
4222_56,56,56,} else if (value instanceof Double) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.51,34,26
4222_57,57,57,"os.write((((Number) value).doubleValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.52,35,27
4222_58,58,58,} else if (value instanceof Float) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.47,36,28
4222_59,59,59,"os.write((((Number) value).floatValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.48,37,29
4222_60,60,60,} else if (value instanceof Integer) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.49,38,30
4222_61,61,61,"os.write((((Number) value).intValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.48,39,31
4222_62,62,62,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.26,40,32
4222_63,63,63,os.write(escape(value.toString()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.46,41,33
4222_66,66,66,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.02,44,35
4222_67,67,69,"if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,2,1,0,1,0.48,45,35
4222_68,68,68,"os.write(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.27,46,36
4222_73,73,73,long elapsedTime = System.currentTimeMillis() - now;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.29,51,38
4222_75,75,79,"if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,2,1,0,0,0.3,53,39
4222_76,76,76,os.write(elapsedField);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.31,54,39
4222_77,77,77,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.27,55,40
4222_78,78,78,"os.write((elapsedTime + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.28,56,41
4222_81,81,81,"AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.33,59,43
4222_84,84,84,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.27,62,44
4222_86,86,86,os.flush();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.37,64,45
4222_87,87,87,AsyncHttpClient.silentCloseOutputStream(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.31,65,45
4221_1,1,2,"@Override
public void writeTo(final OutputStream out) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.29,12,5
4221_3,3,5,"if (out == null) {
throw new IllegalStateException(""Output stream cannot be null."");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,3,0,0,0,0.3,9,3
4221_4,4,4,"throw new IllegalStateException(""Output stream cannot be null."");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,0,0.3,10,3
4221_7,7,7,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.18,7,2
4221_9,9,11,"OutputStream os = contentEncoding != null
? new GZIPOutputStream(out, BUFFER_SIZE)
: out;",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,4,3,0,0,0,0.33,3,1
4221_13,13,13,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.31,1,0
4221_15,15,15,Set<String> keys = jsonParams.keySet();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.56,0,0
4221_17,17,17,int keysCount = keys.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,1,0.56,2,1
4221_18,18,82,"if (0 < keysCount) {
int keysProcessed = 0;
boolean isFileWrapper;

for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}

long elapsedTime = System.currentTimeMillis() - now;

if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}

AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");
}",1,0,0,0,0,0,0,0,0,46,7,65,0,1,0,1,4,3,0,0,1,0.47,3,1
4221_19,19,19,int keysProcessed = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.48,4,2
4221_20,20,20,boolean isFileWrapper;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.31,5,3
4221_22,22,71,"for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}",0,0,0,1,0,0,0,0,0,37,6,50,0,0,1,1,4,3,0,0,1,0.48,7,5
4221_23,23,23,keysProcessed++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.53,8,5
4221_25,25,70,"try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}",0,0,0,0,1,0,0,0,0,35,5,46,0,0,1,0,4,3,0,0,1,0.47,10,7
4221_26,26,26,Object value = jsonParams.get(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.55,11,7
4221_28,28,28,os.write(escape(key));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,4,3,0,0,1,0.5,13,9
4221_29,29,29,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,3,0,0,0,0.31,14,9
4221_31,31,65,"if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}",1,0,0,0,0,0,0,0,0,28,4,35,0,0,1,0,4,3,0,0,0,0.39,16,11
4221_32,32,32,os.write(JSON_NULL);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.4,17,11
4221_33,33,33,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.14,18,12
4221_34,34,34,isFileWrapper = value instanceof RequestParams.FileWrapper;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.3,19,13
4221_36,36,64,"if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}",1,0,0,0,0,0,0,0,0,24,3,29,0,0,1,0,4,3,0,0,0,0.39,21,15
4221_37,37,37,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.31,22,15
4221_39,39,43,"if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,3,0,0,0,0.33,24,17
4221_40,40,40,"writeToFromFile(os, (RequestParams.FileWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,25,17
4221_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.14,26,18
4221_42,42,42,"writeToFromStream(os, (RequestParams.StreamWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,27,19
4221_45,45,45,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.31,30,21
4221_46,46,46,} else if (value instanceof JsonValueInterface) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.39,31,21
4221_47,47,47,os.write(((JsonValueInterface) value).getEscapedJsonValue());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.41,32,22
4221_48,48,48,} else if (value instanceof org.json.JSONObject) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.42,33,23
4221_49,49,49,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.32,34,24
4221_50,50,50,} else if (value instanceof org.json.JSONArray) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.41,35,25
4221_51,51,51,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.32,36,26
4221_52,52,52,} else if (value instanceof Boolean) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,37,27
4221_53,53,53,os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.4,38,28
4221_54,54,54,} else if (value instanceof Long) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.28,39,29
4221_55,55,55,"os.write((((Number) value).longValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,40,30
4221_56,56,56,} else if (value instanceof Double) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.3,41,31
4221_57,57,57,"os.write((((Number) value).doubleValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.33,42,32
4221_58,58,58,} else if (value instanceof Float) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.3,43,33
4221_59,59,59,"os.write((((Number) value).floatValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,44,34
4221_60,60,60,} else if (value instanceof Integer) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.33,45,35
4221_61,61,61,"os.write((((Number) value).intValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.33,46,36
4221_62,62,62,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.14,47,37
4221_63,63,63,os.write(escape(value.toString()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.33,48,38
4221_66,66,66,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.16,51,40
4221_67,67,69,"if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,1,0.5,52,40
4221_68,68,68,"os.write(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,53,41
4221_73,73,73,long elapsedTime = System.currentTimeMillis() - now;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.18,58,43
4221_75,75,79,"if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,3,0,0,0,0.32,60,44
4221_76,76,76,os.write(elapsedField);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,0,0.33,61,44
4221_77,77,77,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,0,0.31,62,45
4221_78,78,78,"os.write((elapsedTime + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,0,0.28,63,46
4221_81,81,81,"AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.33,66,48
4221_84,84,84,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.31,69,49
4221_86,86,86,os.flush();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.27,71,50
4221_87,87,87,AsyncHttpClient.silentCloseOutputStream(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.33,72,50
4220_1,1,2,"@Override
public void writeTo(final OutputStream out) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,13,11,2,0,2,0.54,6,3
4220_3,3,5,"if (out == null) {
throw new IllegalStateException(""Output stream cannot be null."");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,13,11,2,0,2,0.48,3,1
4220_4,4,4,"throw new IllegalStateException(""Output stream cannot be null."");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,13,11,2,0,2,0.49,4,1
4220_7,7,7,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,13,11,2,0,0,0.34,1,0
4220_9,9,11,"OutputStream os = contentEncoding != null
? new GZIPOutputStream(out, BUFFER_SIZE)
: out;",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,13,11,2,0,4,0.71,0,0
4220_13,13,13,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,13,11,2,0,0,0.6,4,1
4220_15,15,15,Set<String> keys = jsonParams.keySet();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,13,11,2,0,0,0.29,6,2
4220_17,17,17,int keysCount = keys.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,13,11,2,0,0,0.35,8,3
4220_18,18,82,"if (0 < keysCount) {
int keysProcessed = 0;
boolean isFileWrapper;

for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}

long elapsedTime = System.currentTimeMillis() - now;

if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}

AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");
}",1,0,0,0,0,0,0,0,0,46,7,65,0,1,0,1,13,11,2,0,1,0.55,9,3
4220_19,19,19,int keysProcessed = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.36,10,4
4220_20,20,20,boolean isFileWrapper;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,13,11,2,0,0,0.43,11,5
4220_22,22,71,"for (String key : keys) {
keysProcessed++;

try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}
}",0,0,0,1,0,0,0,0,0,37,6,50,0,0,1,1,13,11,2,0,1,0.54,13,7
4220_23,23,23,keysProcessed++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,13,11,2,0,0,0.28,14,7
4220_25,25,70,"try {
Object value = jsonParams.get(key);

os.write(escape(key));
os.write(':');

if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}
} finally {
if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}
}",0,0,0,0,1,0,0,0,0,35,5,46,0,0,1,0,13,11,2,0,1,0.54,16,9
4220_26,26,26,Object value = jsonParams.get(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,13,11,2,0,0,0.31,17,9
4220_28,28,28,os.write(escape(key));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,13,11,2,0,0,0.52,19,11
4220_29,29,29,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,13,11,2,0,0,0.6,20,11
4220_31,31,65,"if (value == null) {
os.write(JSON_NULL);
} else {
isFileWrapper = value instanceof RequestParams.FileWrapper;

if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}
}",1,0,0,0,0,0,0,0,0,28,4,35,0,0,1,0,13,11,2,0,1,0.54,22,13
4220_32,32,32,os.write(JSON_NULL);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.51,23,13
4220_33,33,33,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.22,24,14
4220_34,34,34,isFileWrapper = value instanceof RequestParams.FileWrapper;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,13,11,2,0,0,0.44,25,15
4220_36,36,64,"if (isFileWrapper || value instanceof RequestParams.StreamWrapper) {
os.write('{');

if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}

os.write('}');
} else if (value instanceof JsonValueInterface) {
os.write(((JsonValueInterface) value).getEscapedJsonValue());
} else if (value instanceof org.json.JSONObject) {
os.write(value.toString().getBytes());
} else if (value instanceof org.json.JSONArray) {
os.write(value.toString().getBytes());
} else if (value instanceof Boolean) {
os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);
} else if (value instanceof Long) {
os.write((((Number) value).longValue() + """").getBytes());
} else if (value instanceof Double) {
os.write((((Number) value).doubleValue() + """").getBytes());
} else if (value instanceof Float) {
os.write((((Number) value).floatValue() + """").getBytes());
} else if (value instanceof Integer) {
os.write((((Number) value).intValue() + """").getBytes());
} else {
os.write(escape(value.toString()));
}",1,0,0,0,0,0,0,0,0,24,3,29,0,0,1,0,13,11,2,0,1,0.54,27,17
4220_37,37,37,os.write('{');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,13,11,2,0,0,0.6,28,17
4220_39,39,43,"if (isFileWrapper) {
writeToFromFile(os, (RequestParams.FileWrapper) value);
} else {
writeToFromStream(os, (RequestParams.StreamWrapper) value);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,13,11,2,0,1,0.56,30,19
4220_40,40,40,"writeToFromFile(os, (RequestParams.FileWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.51,31,19
4220_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.22,32,20
4220_42,42,42,"writeToFromStream(os, (RequestParams.StreamWrapper) value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,1,0.6,33,21
4220_45,45,45,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,13,11,2,0,0,0.6,36,23
4220_46,46,46,} else if (value instanceof JsonValueInterface) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.35,37,23
4220_47,47,47,os.write(((JsonValueInterface) value).getEscapedJsonValue());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.45,38,24
4220_48,48,48,} else if (value instanceof org.json.JSONObject) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.37,39,25
4220_49,49,49,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.5,40,26
4220_50,50,50,} else if (value instanceof org.json.JSONArray) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.38,41,27
4220_51,51,51,os.write(value.toString().getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.5,42,28
4220_52,52,52,} else if (value instanceof Boolean) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.31,43,29
4220_53,53,53,os.write((Boolean) value ? JSON_TRUE : JSON_FALSE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.45,44,30
4220_54,54,54,} else if (value instanceof Long) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.34,45,31
4220_55,55,55,"os.write((((Number) value).longValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.48,46,32
4220_56,56,56,} else if (value instanceof Double) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.38,47,33
4220_57,57,57,"os.write((((Number) value).doubleValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.48,48,34
4220_58,58,58,} else if (value instanceof Float) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.43,49,35
4220_59,59,59,"os.write((((Number) value).floatValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.5,50,36
4220_60,60,60,} else if (value instanceof Integer) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.35,51,37
4220_61,61,61,"os.write((((Number) value).intValue() + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.48,52,38
4220_62,62,62,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.22,53,39
4220_63,63,63,os.write(escape(value.toString()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.5,54,40
4220_66,66,66,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.33,57,42
4220_67,67,69,"if (elapsedField != null || keysProcessed < keysCount) {
os.write(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,13,11,2,0,0,0.46,58,42
4220_68,68,68,"os.write(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,2,0,0,0.6,59,43
4220_73,73,73,long elapsedTime = System.currentTimeMillis() - now;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,13,11,2,0,0,0.36,64,45
4220_75,75,79,"if (elapsedField != null) {
os.write(elapsedField);
os.write(':');
os.write((elapsedTime + """").getBytes());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,13,11,2,0,0,0.53,66,46
4220_76,76,76,os.write(elapsedField);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,13,11,2,0,0,0.54,67,46
4220_77,77,77,os.write(':');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,13,11,2,0,0,0.6,68,47
4220_78,78,78,"os.write((elapsedTime + """").getBytes());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,13,11,2,0,0,0.52,69,48
4220_81,81,81,"AsyncHttpClient.log.i(LOG_TAG, ""Uploaded JSON in "" + Math.floor(elapsedTime / 1000) + "" seconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,13,11,2,0,0,0.48,72,50
4220_84,84,84,os.write('}');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,13,11,2,0,0,0.6,75,51
4220_86,86,86,os.flush();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,13,11,2,0,0,0.54,77,52
4220_87,87,87,AsyncHttpClient.silentCloseOutputStream(os);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,13,11,2,0,2,0.62,78,52
4218_1,1,1,static byte[] escape(String string) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.0,6,3
4218_2,2,4,"if (string == null) {
return JSON_NULL;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,2,2,0,0,0,0.0,3,1
4218_3,3,3,return JSON_NULL;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.0,4,1
4218_6,6,6,StringBuilder sb = new StringBuilder(128);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.0,1,0
4218_8,8,8,"sb.append('""');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.0,0,0
4218_10,10,10,"int length = string.length(), pos = -1;",0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,2,2,0,0,0,0.0,2,1
4218_11,11,49,"while (++pos < length) {
char ch = string.charAt(pos);
switch (ch) {
case '""':
sb.append(""\\\"""");
break;
case '\\':
sb.append(""\\\\"");
break;
case '\b':
sb.append(""\\b"");
break;
case '\f':
sb.append(""\\f"");
break;
case '\n':
sb.append(""\\n"");
break;
case '\r':
sb.append(""\\r"");
break;
case '\t':
sb.append(""\\t"");
break;
default:
if ((ch <= '\u001F') || (ch >= '\u007F' && ch <= '\u009F') || (ch >= '\u2000' && ch <= '\u20FF')) {
String intString = Integer.toHexString(ch);
sb.append(""\\u"");
int intLength = 4 - intString.length();
for (int zero = 0; zero < intLength; zero++) {
sb.append('0');
}
sb.append(intString.toUpperCase(Locale.US));
} else {
sb.append(ch);
}
break;
}
}",0,1,0,0,0,0,0,0,0,26,4,39,1,1,0,1,2,2,0,0,0,0.0,3,1
4218_12,12,12,char ch = string.charAt(pos);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.0,4,2
4218_13,13,13,switch (ch) {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.0,5,3
4218_14,14,15,"case '""':
sb.append(""\\\"""");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.0,6,4
4218_16,16,16,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,2,0,0,0,0.0,8,6
4218_17,17,18,"case '\\':
sb.append(""\\\\"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.0,9,6
4218_19,19,19,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,2,0,0,0,0.0,11,8
4218_20,20,21,"case '\b':
sb.append(""\\b"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.0,12,8
4218_22,22,22,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,2,0,0,0,0.0,14,10
4218_23,23,24,"case '\f':
sb.append(""\\f"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.0,15,10
4218_25,25,25,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,2,0,0,0,0.0,17,12
4218_26,26,27,"case '\n':
sb.append(""\\n"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.0,18,12
4218_28,28,28,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,2,0,0,0,0.0,20,14
4218_29,29,30,"case '\r':
sb.append(""\\r"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.0,21,14
4218_31,31,31,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,2,0,0,0,0.0,23,16
4218_32,32,33,"case '\t':
sb.append(""\\t"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.0,24,16
4218_34,34,34,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,2,0,0,0,0.0,26,18
4218_35,35,36,"default:
if ((ch <= '\u001F') || (ch >= '\u007F' && ch <= '\u009F') || (ch >= '\u2000' && ch <= '\u20FF')) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.0,27,18
4218_37,37,37,String intString = Integer.toHexString(ch);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.0,29,20
4218_38,38,38,"sb.append(""\\u"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.0,30,20
4218_39,39,39,int intLength = 4 - intString.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.0,31,21
4218_40,40,42,"for (int zero = 0; zero < intLength; zero++) {
sb.append('0');
}",0,0,1,0,0,0,0,0,0,1,1,3,1,1,0,0,2,2,0,0,0,0.0,32,22
4218_41,41,41,sb.append('0');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.0,33,23
4218_43,43,43,sb.append(intString.toUpperCase(Locale.US));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.0,35,25
4218_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.0,36,25
4218_45,45,45,sb.append(ch);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.0,37,26
4218_47,47,47,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,2,0,0,0,0.0,39,28
4218_51,51,51,"sb.append('""');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.0,43,29
4218_53,53,53,return sb.toString().getBytes();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.0,45,30
4217_1,1,1,static byte[] escape(String string) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,2,0.73,4,2
4217_2,2,4,"if (string == null) {
return JSON_NULL;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,5,1,0,1,0.52,1,0
4217_3,3,3,return JSON_NULL;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.35,2,0
4217_6,6,6,StringBuilder sb = new StringBuilder(128);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,5,1,0,2,0.8,0,0
4217_8,8,8,"sb.append('""');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,5,1,0,0,0.59,2,1
4217_10,10,10,"int length = string.length(), pos = -1;",0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,6,5,1,0,1,0.56,4,2
4217_11,11,49,"while (++pos < length) {
char ch = string.charAt(pos);
switch (ch) {
case '""':
sb.append(""\\\"""");
break;
case '\\':
sb.append(""\\\\"");
break;
case '\b':
sb.append(""\\b"");
break;
case '\f':
sb.append(""\\f"");
break;
case '\n':
sb.append(""\\n"");
break;
case '\r':
sb.append(""\\r"");
break;
case '\t':
sb.append(""\\t"");
break;
default:
if ((ch <= '\u001F') || (ch >= '\u007F' && ch <= '\u009F') || (ch >= '\u2000' && ch <= '\u20FF')) {
String intString = Integer.toHexString(ch);
sb.append(""\\u"");
int intLength = 4 - intString.length();
for (int zero = 0; zero < intLength; zero++) {
sb.append('0');
}
sb.append(intString.toUpperCase(Locale.US));
} else {
sb.append(ch);
}
break;
}
}",0,1,0,0,0,0,0,0,0,26,4,39,1,1,0,1,6,5,1,0,1,0.62,5,2
4217_12,12,12,char ch = string.charAt(pos);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,1,0,1,0.68,6,3
4217_13,13,13,switch (ch) {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,1,0,0,0.38,7,4
4217_14,14,15,"case '""':
sb.append(""\\\"""");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,0,0.52,8,5
4217_16,16,16,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,5,1,0,0,0.19,10,7
4217_17,17,18,"case '\\':
sb.append(""\\\\"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,0,0.52,11,7
4217_19,19,19,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,5,1,0,0,0.19,13,9
4217_20,20,21,"case '\b':
sb.append(""\\b"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,0,0.51,14,9
4217_22,22,22,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,5,1,0,0,0.19,16,11
4217_23,23,24,"case '\f':
sb.append(""\\f"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,0,0.52,17,11
4217_25,25,25,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,5,1,0,0,0.19,19,13
4217_26,26,27,"case '\n':
sb.append(""\\n"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,0,0.49,20,13
4217_28,28,28,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,5,1,0,0,0.19,22,15
4217_29,29,30,"case '\r':
sb.append(""\\r"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,0,0.48,23,15
4217_31,31,31,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,5,1,0,0,0.19,25,17
4217_32,32,33,"case '\t':
sb.append(""\\t"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,0,0.52,26,17
4217_34,34,34,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,5,1,0,0,0.19,28,19
4217_35,35,36,"default:
if ((ch <= '\u001F') || (ch >= '\u007F' && ch <= '\u009F') || (ch >= '\u2000' && ch <= '\u20FF')) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,0,0.45,29,19
4217_37,37,37,String intString = Integer.toHexString(ch);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.7,31,21
4217_38,38,38,"sb.append(""\\u"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.64,32,21
4217_39,39,39,int intLength = 4 - intString.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,1,0,1,0.57,33,22
4217_40,40,42,"for (int zero = 0; zero < intLength; zero++) {
sb.append('0');
}",0,0,1,0,0,0,0,0,0,1,1,3,1,1,0,0,6,5,1,0,0,0.49,34,23
4217_41,41,41,sb.append('0');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.52,35,24
4217_43,43,43,sb.append(intString.toUpperCase(Locale.US));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,5,1,0,1,0.59,37,26
4217_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.27,38,26
4217_45,45,45,sb.append(ch);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.58,39,27
4217_47,47,47,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,5,1,0,0,0.19,41,29
4217_51,51,51,"sb.append('""');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,5,1,0,0,0.59,45,30
4217_53,53,53,return sb.toString().getBytes();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,5,1,0,1,0.59,47,31
3587_1,1,2,"        @Override
public boolean canGoForward() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,1,1,0,0,0.3,40,30
3587_3,3,3,Constants.AuthMethod authMethod = selectionMapping.get(selection.getSelectedItemPosition());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,1,1,0,0,0.29,39,29
3587_5,5,53,"if (authMethod == Constants.AuthMethod.PIN || authMethod == Constants.AuthMethod.PASSWORD) {
String password = null;

if (passwordInput.getText() != null)
password = passwordInput.getText().toString();

String confirm = passwordConfirm.getText().toString();

if (password != null && !password.isEmpty()) {
if (password.length() < minLength) {
updateWarning(lengthWarning);
return false;
} else {
if (!confirm.isEmpty()) {
if (confirm.equals(password)) {
hideWarning();
return true;
} else {
updateWarning(passwordMismatchWarning);
return false;
}
} else {
updateWarning(confirmPasswordWarning);
return false;
}
}
} else {
updateWarning(noPasswordWarning);
return false;
}
} else if (authMethod == Constants.AuthMethod.DEVICE) {
Context context = getContext();
if (context == null)
return false;

KeyguardManager km = (KeyguardManager) context.getSystemService(KEYGUARD_SERVICE);

assert km != null;
if (!km.isKeyguardSecure()) {
updateWarning(R.string.settings_toast_auth_device_not_secure);
return false;
}

hideWarning();
return true;
} else {
hideWarning();
return true;
}",1,0,0,0,0,0,0,0,0,36,5,49,0,0,1,0,4,1,1,0,2,0.48,0,0
3587_6,6,6,String password = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,1,1,0,0,0.24,36,27
3587_8,8,9,"if (passwordInput.getText() != null)
password = passwordInput.getText().toString();",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,4,1,1,0,0,0.28,33,25
3587_9,9,9,password = passwordInput.getText().toString();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,1,1,0,0,0.28,33,25
3587_11,11,11,String confirm = passwordConfirm.getText().toString();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,1,1,0,0,0.29,31,24
3587_13,13,34,"if (password != null && !password.isEmpty()) {
if (password.length() < minLength) {
updateWarning(lengthWarning);
return false;
} else {
if (!confirm.isEmpty()) {
if (confirm.equals(password)) {
hideWarning();
return true;
} else {
updateWarning(passwordMismatchWarning);
return false;
}
} else {
updateWarning(confirmPasswordWarning);
return false;
}
}
} else {
updateWarning(noPasswordWarning);
return false;
}",1,0,0,0,0,0,0,0,0,17,4,22,0,0,1,0,4,1,1,0,0,0.35,8,6
3587_14,14,30,"if (password.length() < minLength) {
updateWarning(lengthWarning);
return false;
} else {
if (!confirm.isEmpty()) {
if (confirm.equals(password)) {
hideWarning();
return true;
} else {
updateWarning(passwordMismatchWarning);
return false;
}
} else {
updateWarning(confirmPasswordWarning);
return false;
}
}",1,0,0,0,0,0,0,0,0,13,3,17,0,0,0,0,4,1,1,0,0,0.35,12,9
3587_15,15,15,updateWarning(lengthWarning);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.27,27,21
3587_16,16,16,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.19,26,20
3587_17,17,17,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.24,25,19
3587_18,18,29,"if (!confirm.isEmpty()) {
if (confirm.equals(password)) {
hideWarning();
return true;
} else {
updateWarning(passwordMismatchWarning);
return false;
}
} else {
updateWarning(confirmPasswordWarning);
return false;
}",1,0,0,0,0,0,0,0,0,9,2,12,0,0,0,0,4,1,1,0,0,0.35,13,9
3587_19,19,25,"if (confirm.equals(password)) {
hideWarning();
return true;
} else {
updateWarning(passwordMismatchWarning);
return false;
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,0,0,4,1,1,0,0,0.36,17,12
3587_20,20,20,hideWarning();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.42,22,16
3587_21,21,21,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.22,21,15
3587_22,22,22,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.24,20,14
3587_23,23,23,updateWarning(passwordMismatchWarning);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.3,19,13
3587_24,24,24,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.19,18,12
3587_26,26,26,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.24,16,11
3587_27,27,27,updateWarning(confirmPasswordWarning);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.31,15,10
3587_28,28,28,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.19,14,9
3587_31,31,31,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.24,11,8
3587_32,32,32,updateWarning(noPasswordWarning);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.29,10,7
3587_33,33,33,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.19,9,6
3587_35,35,35,} else if (authMethod == Constants.AuthMethod.DEVICE) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.34,7,5
3587_36,36,36,Context context = getContext();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.28,6,4
3587_37,37,38,"if (context == null)
return false;",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,1,4,1,1,0,0,0.24,4,2
3587_38,38,38,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,4,1,1,0,0,0.19,4,2
3587_40,40,40,KeyguardManager km = (KeyguardManager) context.getSystemService(KEYGUARD_SERVICE);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,1,1,0,2,0.52,2,1
3587_42,42,42,assert km != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,1,1,0,0,0.27,0,0
3587_43,43,46,"if (!km.isKeyguardSecure()) {
updateWarning(R.string.settings_toast_auth_device_not_secure);
return false;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,4,1,1,0,1,0.35,0,0
3587_44,44,44,updateWarning(R.string.settings_toast_auth_device_not_secure);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.35,1,0
3587_45,45,45,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.19,2,1
3587_48,48,48,hideWarning();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,1,1,0,0,0.42,5,3
3587_49,49,49,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.22,6,3
3587_50,50,50,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.24,7,4
3587_51,51,51,hideWarning();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.42,8,5
3587_52,52,52,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.22,9,6
3586_1,1,2,"@Override
protected void onCreate(Bundle savedInstanceState){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,1,0,0,0.38,31,22
3586_3,3,3,super.onCreate(savedInstanceState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,1,1,0,0,0.36,30,21
3586_5,5,5,encryptionFragment = new EncryptionFragment();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,1,0,1,0.62,28,20
3586_6,6,6,authenticationFragment = new AuthenticationFragment();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.6,27,19
3586_7,7,7,androidSyncFragment = new AndroidSyncFragment(encryptionFragment);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.59,26,18
3586_8,8,8,"introFinishedFragment = new IntroFinishedFragment(this, (success, encryptionKey) -> {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.62,25,17
3586_9,9,9,this.setupFinished = success;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.43,24,16
3586_10,10,10,this.encryptionKey = encryptionKey;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.32,23,15
3586_13,13,13,encryptionFragment.setEncryptionChangedCallback(newEncryptionType -> authenticationFragment.updateEncryptionType(newEncryptionType));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,1,0,1,0.49,20,14
3586_15,15,15,setButtonBackFunction(BUTTON_BACK_FUNCTION_BACK);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,1,0,0,0.33,18,13
3586_17,17,17,addSlide(new SimpleSlide.Builder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,1,0,0,0.33,16,12
3586_18,18,18,.title(R.string.intro_slide1_title),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.34,15,11
3586_19,19,19,.description(R.string.intro_slide1_desc),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.36,14,10
3586_20,20,20,.background(R.color.colorPrimary),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.34,13,9
3586_21,21,21,.backgroundDark(R.color.colorPrimaryDark),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.34,12,8
3586_22,22,22,.canGoBackward(false),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.34,11,7
3586_23,23,23,.scrollable(false),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.19,10,6
3586_24,24,24,.build(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.25,9,5
3586_27,27,27,addSlide(new FragmentSlide.Builder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,1,0,1,0.52,6,4
3586_28,28,28,.background(R.color.colorPrimary),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.34,5,3
3586_29,29,29,.backgroundDark(R.color.colorPrimaryDark),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.34,4,2
3586_30,30,30,.fragment(encryptionFragment),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.7,3,1
3586_31,31,31,.build(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.25,2,0
3586_34,34,34,authenticationFragment.setSlidePos(getSlides().size());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,1,0,1,0.5,0,0
3586_36,36,36,addSlide(new FragmentSlide.Builder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,1,0,1,0.52,2,1
3586_37,37,37,.background(R.color.colorPrimary),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.34,3,1
3586_38,38,38,.backgroundDark(R.color.colorPrimaryDark),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.34,4,2
3586_39,39,39,.fragment(authenticationFragment),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.68,5,3
3586_40,40,40,.build(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.25,6,4
3586_43,43,43,addSlide(new FragmentSlide.Builder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,1,0,1,0.52,9,6
3586_44,44,44,.background(R.color.colorPrimary),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.34,10,6
3586_45,45,45,.backgroundDark(R.color.colorPrimaryDark),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.34,11,7
3586_46,46,46,.fragment(androidSyncFragment),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.64,12,8
3586_47,47,47,.build(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.25,13,9
3586_50,50,50,addSlide(new FragmentSlide.Builder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,1,0,1,0.52,16,11
3586_51,51,51,.background(R.color.colorPrimary),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.34,17,11
3586_52,52,52,.backgroundDark(R.color.colorPrimaryDark),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.34,18,12
3586_53,53,53,.fragment(introFinishedFragment),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.76,19,13
3586_54,54,54,.build(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.25,20,14
3586_57,57,57,"addOnNavigationBlockedListener((position, direction) -> {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,1,0,0,0.35,23,16
3586_58,58,59,"if (position == 2)
authenticationFragment.flashWarning();",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,3,1,1,0,1,0.52,24,16
3586_59,59,59,authenticationFragment.flashWarning();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.57,25,17
3586_62,62,62,addOnPageChangeListener(new ViewPager.OnPageChangeListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,1,0,0,0.32,28,19
3586_63,63,64,"@Override
public void onPageSelected(int position) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,1,0,0,0.33,29,19
3586_65,65,66,"if (position == getCount() - 1 && getCurrentSlidePosition() < getCount())
introFinishedFragment.saveSettings(encryptionFragment.getEncryptionType(), authenticationFragment.getAuthMethod(), authenticationFragment.getPassword(), androidSyncFragment.getSyncEnabled());",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,3,1,1,0,1,0.51,31,21
3586_66,66,66,"introFinishedFragment.saveSettings(encryptionFragment.getEncryptionType(), authenticationFragment.getAuthMethod(), authenticationFragment.getPassword(), androidSyncFragment.getSyncEnabled());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.54,32,21
3586_69,69,70,"@Override
public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,3,1,1,0,0,0.34,35,23
3586_73,73,74,"@Override
public void onPageScrollStateChanged(int state) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,3,1,1,0,0,0.36,39,24
3472_1,1,1,private void updatePreferences() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.46,4,4
3472_2,2,2,ContentResolver cr = getContentResolver();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.3,3,3
3472_3,3,3,Context context = getContext();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,1,0,0,0.29,2,2
3472_4,4,4,mServicePreference.setSummary(getServiceName(context));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,1,0,1,0.52,1,1
3472_5,5,8,"if (!shortcutFeatureAvailable(context)) {
Settings.Secure.putInt(
getContentResolver(), Settings.Secure.ACCESSIBILITY_SHORTCUT_ENABLED, 0);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,7,3,1,0,1,0.47,0,0
3472_6,6,7,"Settings.Secure.putInt(
getContentResolver(), Settings.Secure.ACCESSIBILITY_SHORTCUT_ENABLED, 0);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,3,1,0,1,0.43,0,0
3472_9,9,10,"boolean isEnabled = Settings.Secure
.getInt(cr, Settings.Secure.ACCESSIBILITY_SHORTCUT_ENABLED, 1) == 1;",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,7,3,1,0,1,0.45,3,1
3472_11,11,11,mSwitchBar.setChecked(isEnabled);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,1,0,0,0.38,5,2
3472_12,12,13,"final int dialogShown = Settings.Secure.getInt(
cr, Settings.Secure.ACCESSIBILITY_SHORTCUT_DIALOG_SHOWN, 0);",0,0,0,0,0,1,0,0,0,0,0,2,1,1,0,0,7,3,1,0,1,0.44,6,2
3472_14,14,15,"final boolean enabledFromLockScreen = Settings.Secure.getInt(
cr, Settings.Secure.ACCESSIBILITY_SHORTCUT_ON_LOCK_SCREEN, dialogShown) == 1;",0,0,0,0,0,1,0,0,0,0,0,2,1,1,0,0,7,3,1,0,1,0.47,8,4
3472_16,16,16,mOnLockScreenSwitchPreference.setChecked(enabledFromLockScreen);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,1,0,0,0.4,10,5
3472_17,17,17,mServicePreference.setEnabled(mToggleSwitch.isChecked());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,3,1,0,1,0.51,11,5
3472_18,18,18,mOnLockScreenSwitchPreference.setEnabled(mToggleSwitch.isChecked());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,3,1,0,0,0.43,12,6
3289_1,1,1,    public void setCallback(@Nullable UiCallback<Result> callback) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,3,0.77,6,4
3289_2,2,2,synchronized (callbackLock) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,1,0.55,5,3
3289_3,3,4,"if (isCanceled())
return;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,1,8,4,1,0,0,0.37,3,1
3289_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,8,4,1,0,0,0.2,3,1
3289_6,6,6,this.callback = callback;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,8,4,1,0,1,0.69,1,0
3289_8,8,9,"if (awaitedResult != null && callback != null)
emitResultOnMainThread(callback, awaitedResult);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,0,8,4,1,0,3,0.74,0,0
3289_9,9,9,"emitResultOnMainThread(callback, awaitedResult);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,3,0.75,1,0
3283_1,1,2,"@Override
protected void onCreate(Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,5,1,0,1,0.44,6,3
3283_3,3,3,LayoutInflater inflater = LayoutInflater.from(mContext);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.46,5,2
3283_4,4,6,"TypedArray a = mContext.obtainStyledAttributes(null,
com.android.internal.R.styleable.AlertDialog,
com.android.internal.R.attr.alertDialogStyle, 0);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,10,5,1,0,0,0.43,2,1
3283_7,7,47,"if (mProgressStyle == STYLE_HORIZONTAL) {

mViewUpdateHandler = new Handler() {
@Override
public void handleMessage(Message msg) {
super.handleMessage(msg);

int progress = mProgress.getProgress();
int max = mProgress.getMax();
if (mProgressNumberFormat != null) {
String format = mProgressNumberFormat;
mProgressNumber.setText(String.format(format, progress, max));
} else {
mProgressNumber.setText("""");
}
if (mProgressPercentFormat != null) {
double percent = (double) progress / (double) max;
SpannableString tmp = new SpannableString(mProgressPercentFormat.format(percent));
tmp.setSpan(new StyleSpan(android.graphics.Typeface.BOLD),
0, tmp.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
mProgressPercent.setText(tmp);
} else {
mProgressPercent.setText("""");
}
}
};
View view = inflater.inflate(a.getResourceId(
com.android.internal.R.styleable.AlertDialog_horizontalProgressLayout,
R.layout.alert_dialog_progress), null);
mProgress = (ProgressBar) view.findViewById(R.id.progress);
mProgressNumber = (TextView) view.findViewById(R.id.progress_number);
mProgressPercent = (TextView) view.findViewById(R.id.progress_percent);
setView(view);
} else {
View view = inflater.inflate(a.getResourceId(
com.android.internal.R.styleable.AlertDialog_progressLayout,
R.layout.progress_dialog), null);
mProgress = (ProgressBar) view.findViewById(R.id.progress);
mMessageView = (TextView) view.findViewById(R.id.message);
setView(view);
}",1,0,0,0,0,0,0,0,0,27,4,41,0,1,0,0,10,5,1,0,4,0.61,0,0
3283_9,9,9,mViewUpdateHandler = new Handler() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,10,5,1,0,3,0.76,0,0
3283_10,10,11,"@Override
public void handleMessage(Message msg) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,5,1,0,0,0.42,1,0
3283_12,12,12,super.handleMessage(msg);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,10,5,1,0,0,0.38,3,2
3283_14,14,14,int progress = mProgress.getProgress();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,10,5,1,0,0,0.33,5,3
3283_15,15,15,int max = mProgress.getMax();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,5,1,0,0,0.32,6,3
3283_16,16,21,"if (mProgressNumberFormat != null) {
String format = mProgressNumberFormat;
mProgressNumber.setText(String.format(format, progress, max));
} else {
mProgressNumber.setText("""");
}",1,0,0,0,0,0,0,0,0,4,1,6,1,1,0,0,10,5,1,0,1,0.39,7,4
3283_17,17,17,String format = mProgressNumberFormat;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,5,1,0,0,0.33,8,5
3283_18,18,18,"mProgressNumber.setText(String.format(format, progress, max));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,5,1,0,1,0.4,9,6
3283_19,19,19,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.19,10,7
3283_20,20,20,"mProgressNumber.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,1,0.43,11,8
3283_22,22,30,"if (mProgressPercentFormat != null) {
double percent = (double) progress / (double) max;
SpannableString tmp = new SpannableString(mProgressPercentFormat.format(percent));
tmp.setSpan(new StyleSpan(android.graphics.Typeface.BOLD),
0, tmp.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
mProgressPercent.setText(tmp);
} else {
mProgressPercent.setText("""");
}",1,0,0,0,0,0,0,0,0,6,1,9,1,1,0,0,10,5,1,0,1,0.46,13,10
3283_23,23,23,double percent = (double) progress / (double) max;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,5,1,0,0,0.29,14,10
3283_24,24,24,SpannableString tmp = new SpannableString(mProgressPercentFormat.format(percent));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,5,1,0,0,0.39,15,11
3283_25,25,26,"tmp.setSpan(new StyleSpan(android.graphics.Typeface.BOLD),
0, tmp.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,10,5,1,0,0,0.46,16,12
3283_27,27,27,mProgressPercent.setText(tmp);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,5,1,0,1,0.41,18,14
3283_28,28,28,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.19,19,14
3283_29,29,29,"mProgressPercent.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,1,0.43,20,15
3283_33,33,35,"View view = inflater.inflate(a.getResourceId(
com.android.internal.R.styleable.AlertDialog_horizontalProgressLayout,
R.layout.alert_dialog_progress), null);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,10,5,1,0,1,0.47,24,17
3283_36,36,36,mProgress = (ProgressBar) view.findViewById(R.id.progress);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,10,5,1,0,1,0.44,27,18
3283_37,37,37,mProgressNumber = (TextView) view.findViewById(R.id.progress_number);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,10,5,1,0,2,0.5,28,18
3283_38,38,38,mProgressPercent = (TextView) view.findViewById(R.id.progress_percent);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,10,5,1,0,2,0.5,29,19
3283_39,39,39,setView(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,5,1,0,1,0.54,30,20
3283_40,40,40,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.19,31,21
3283_41,41,43,"View view = inflater.inflate(a.getResourceId(
com.android.internal.R.styleable.AlertDialog_progressLayout,
R.layout.progress_dialog), null);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,10,5,1,0,1,0.47,32,22
3283_44,44,44,mProgress = (ProgressBar) view.findViewById(R.id.progress);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,10,5,1,0,1,0.44,35,24
3283_45,45,45,mMessageView = (TextView) view.findViewById(R.id.message);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,10,5,1,0,2,0.56,36,24
3283_46,46,46,setView(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,5,1,0,1,0.54,37,25
3283_48,48,48,a.recycle();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,5,1,0,0,0.44,39,27
3283_49,49,51,"if (mMax > 0) {
setMax(mMax);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,5,1,0,0,0.28,40,27
3283_50,50,50,setMax(mMax);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.25,41,28
3283_52,52,54,"if (mProgressVal > 0) {
setProgress(mProgressVal);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,5,1,0,0,0.33,43,30
3283_53,53,53,setProgress(mProgressVal);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.32,44,30
3283_55,55,57,"if (mSecondaryProgressVal > 0) {
setSecondaryProgress(mSecondaryProgressVal);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,5,1,0,0,0.35,46,32
3283_56,56,56,setSecondaryProgress(mSecondaryProgressVal);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.34,47,32
3283_58,58,60,"if (mIncrementBy > 0) {
incrementProgressBy(mIncrementBy);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,5,1,0,0,0.36,49,34
3283_59,59,59,incrementProgressBy(mIncrementBy);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.35,50,34
3283_61,61,63,"if (mIncrementSecondaryBy > 0) {
incrementSecondaryProgressBy(mIncrementSecondaryBy);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,5,1,0,0,0.38,52,36
3283_62,62,62,incrementSecondaryProgressBy(mIncrementSecondaryBy);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.37,53,36
3283_64,64,66,"if (mProgressDrawable != null) {
setProgressDrawable(mProgressDrawable);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,5,1,0,0,0.35,55,38
3283_65,65,65,setProgressDrawable(mProgressDrawable);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.36,56,38
3283_67,67,69,"if (mIndeterminateDrawable != null) {
setIndeterminateDrawable(mIndeterminateDrawable);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,5,1,0,0,0.34,58,40
3283_68,68,68,setIndeterminateDrawable(mIndeterminateDrawable);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.33,59,40
3283_70,70,72,"if (mMessage != null) {
setMessage(mMessage);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,5,1,0,0,0.32,61,42
3283_71,71,71,setMessage(mMessage);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.33,62,42
3283_73,73,73,setIndeterminate(mIndeterminate);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.28,64,44
3283_74,74,74,onProgressChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,0,0.32,65,44
3283_75,75,75,super.onCreate(savedInstanceState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,1,0,1,0.41,66,45
3282_1,1,2,"@Override
protected void onCreate(Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.28,11,6
3282_3,3,3,LayoutInflater inflater = LayoutInflater.from(mContext);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,10,5
3282_4,4,6,"TypedArray a = mContext.obtainStyledAttributes(null,
com.android.internal.R.styleable.AlertDialog,
com.android.internal.R.attr.alertDialogStyle, 0);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,3,2,0,0,0,0.38,7,4
3282_7,7,47,"if (mProgressStyle == STYLE_HORIZONTAL) {

mViewUpdateHandler = new Handler() {
@Override
public void handleMessage(Message msg) {
super.handleMessage(msg);

int progress = mProgress.getProgress();
int max = mProgress.getMax();
if (mProgressNumberFormat != null) {
String format = mProgressNumberFormat;
mProgressNumber.setText(String.format(format, progress, max));
} else {
mProgressNumber.setText("""");
}
if (mProgressPercentFormat != null) {
double percent = (double) progress / (double) max;
SpannableString tmp = new SpannableString(mProgressPercentFormat.format(percent));
tmp.setSpan(new StyleSpan(android.graphics.Typeface.BOLD),
0, tmp.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
mProgressPercent.setText(tmp);
} else {
mProgressPercent.setText("""");
}
}
};
View view = inflater.inflate(a.getResourceId(
com.android.internal.R.styleable.AlertDialog_horizontalProgressLayout,
R.layout.alert_dialog_progress), null);
mProgress = (ProgressBar) view.findViewById(R.id.progress);
mProgressNumber = (TextView) view.findViewById(R.id.progress_number);
mProgressPercent = (TextView) view.findViewById(R.id.progress_percent);
setView(view);
} else {
View view = inflater.inflate(a.getResourceId(
com.android.internal.R.styleable.AlertDialog_progressLayout,
R.layout.progress_dialog), null);
mProgress = (ProgressBar) view.findViewById(R.id.progress);
mMessageView = (TextView) view.findViewById(R.id.message);
setView(view);
}",1,0,0,0,0,0,0,0,0,27,4,41,0,1,0,0,3,2,0,0,3,0.69,0,0
3282_9,9,9,mViewUpdateHandler = new Handler() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,1,0.41,4,2
3282_10,10,11,"@Override
public void handleMessage(Message msg) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.25,2,1
3282_12,12,12,super.handleMessage(msg);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.34,1,0
3282_14,14,14,int progress = mProgress.getProgress();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.38,0,0
3282_15,15,15,int max = mProgress.getMax();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.42,1,0
3282_16,16,21,"if (mProgressNumberFormat != null) {
String format = mProgressNumberFormat;
mProgressNumber.setText(String.format(format, progress, max));
} else {
mProgressNumber.setText("""");
}",1,0,0,0,0,0,0,0,0,4,1,6,1,1,0,0,3,2,0,0,1,0.57,2,1
3282_17,17,17,String format = mProgressNumberFormat;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.57,3,2
3282_18,18,18,"mProgressNumber.setText(String.format(format, progress, max));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.55,4,3
3282_19,19,19,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.37,5,4
3282_20,20,20,"mProgressNumber.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.56,6,5
3282_22,22,30,"if (mProgressPercentFormat != null) {
double percent = (double) progress / (double) max;
SpannableString tmp = new SpannableString(mProgressPercentFormat.format(percent));
tmp.setSpan(new StyleSpan(android.graphics.Typeface.BOLD),
0, tmp.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
mProgressPercent.setText(tmp);
} else {
mProgressPercent.setText("""");
}",1,0,0,0,0,0,0,0,0,6,1,9,1,1,0,0,3,2,0,0,1,0.56,8,7
3282_23,23,23,double percent = (double) progress / (double) max;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.57,9,7
3282_24,24,24,SpannableString tmp = new SpannableString(mProgressPercentFormat.format(percent));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.54,10,8
3282_25,25,26,"tmp.setSpan(new StyleSpan(android.graphics.Typeface.BOLD),
0, tmp.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,3,2,0,0,0,0.41,11,9
3282_27,27,27,mProgressPercent.setText(tmp);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.51,13,11
3282_28,28,28,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.37,14,11
3282_29,29,29,"mProgressPercent.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.53,15,12
3282_33,33,35,"View view = inflater.inflate(a.getResourceId(
com.android.internal.R.styleable.AlertDialog_horizontalProgressLayout,
R.layout.alert_dialog_progress), null);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,3,2,0,0,0,0.42,19,14
3282_36,36,36,mProgress = (ProgressBar) view.findViewById(R.id.progress);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.37,22,15
3282_37,37,37,mProgressNumber = (TextView) view.findViewById(R.id.progress_number);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,1,0.51,23,15
3282_38,38,38,mProgressPercent = (TextView) view.findViewById(R.id.progress_percent);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,1,0.48,24,16
3282_39,39,39,setView(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.23,25,17
3282_40,40,40,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.37,26,18
3282_41,41,43,"View view = inflater.inflate(a.getResourceId(
com.android.internal.R.styleable.AlertDialog_progressLayout,
R.layout.progress_dialog), null);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,3,2,0,0,0,0.37,27,19
3282_44,44,44,mProgress = (ProgressBar) view.findViewById(R.id.progress);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.37,30,21
3282_45,45,45,mMessageView = (TextView) view.findViewById(R.id.message);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.26,31,21
3282_46,46,46,setView(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.23,32,22
3282_48,48,48,a.recycle();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.37,34,24
3282_49,49,51,"if (mMax > 0) {
setMax(mMax);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,0,0.42,35,24
3282_50,50,50,setMax(mMax);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.42,36,25
3282_52,52,54,"if (mProgressVal > 0) {
setProgress(mProgressVal);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,0,0.45,38,27
3282_53,53,53,setProgress(mProgressVal);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.45,39,27
3282_55,55,57,"if (mSecondaryProgressVal > 0) {
setSecondaryProgress(mSecondaryProgressVal);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,0,0.45,41,29
3282_56,56,56,setSecondaryProgress(mSecondaryProgressVal);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.45,42,29
3282_58,58,60,"if (mIncrementBy > 0) {
incrementProgressBy(mIncrementBy);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,0,0.34,44,31
3282_59,59,59,incrementProgressBy(mIncrementBy);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.34,45,31
3282_61,61,63,"if (mIncrementSecondaryBy > 0) {
incrementSecondaryProgressBy(mIncrementSecondaryBy);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,0,0.36,47,33
3282_62,62,62,incrementSecondaryProgressBy(mIncrementSecondaryBy);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.36,48,33
3282_64,64,66,"if (mProgressDrawable != null) {
setProgressDrawable(mProgressDrawable);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,0,0.42,50,35
3282_65,65,65,setProgressDrawable(mProgressDrawable);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.43,51,35
3282_67,67,69,"if (mIndeterminateDrawable != null) {
setIndeterminateDrawable(mIndeterminateDrawable);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,0,0.45,53,37
3282_68,68,68,setIndeterminateDrawable(mIndeterminateDrawable);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.45,54,37
3282_70,70,72,"if (mMessage != null) {
setMessage(mMessage);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,0,0.23,56,39
3282_71,71,71,setMessage(mMessage);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,57,39
3282_73,73,73,setIndeterminate(mIndeterminate);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.45,59,41
3282_74,74,74,onProgressChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.43,60,41
3282_75,75,75,super.onCreate(savedInstanceState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.34,61,42
3267_1,1,2,"public void performRestore(BackupDataInput input, int appVersionCode,
ParcelFileDescriptor newState)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,6,1,0,2,0.47,30,22
3267_3,3,3,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,9,6,1,0,0,0.36,29,21
3267_4,4,4,boolean alreadyComplained = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,6,1,0,0,0.24,28,20
3267_6,6,6,BackupDataInputStream stream = new BackupDataInputStream(input);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,6,1,0,0,0.34,26,19
3267_7,7,31,"while (input.readNextHeader()) {

String rawKey = input.getKey();
int pos = rawKey.indexOf(':');
if (pos > 0) {
String prefix = rawKey.substring(0, pos);
BackupHelper helper = mHelpers.get(prefix);
if (helper != null) {
stream.dataSize = input.getDataSize();
stream.key = rawKey.substring(pos+1);
helper.restoreEntity(stream);
} else {
if (!alreadyComplained) {
Log.w(TAG, ""Couldn't find helper for: '"" + rawKey + ""'"");
alreadyComplained = true;
}
}
} else {
if (!alreadyComplained) {
Log.w(TAG, ""Entity with no prefix: '"" + rawKey + ""'"");
alreadyComplained = true;
}
}
input.skipEntityData();
}",0,1,0,0,0,0,0,0,0,18,4,25,0,1,0,1,9,6,1,0,1,0.43,1,0
3267_9,9,9,String rawKey = input.getKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,6,1,0,0,0.27,23,17
3267_10,10,10,int pos = rawKey.indexOf(':');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,6,1,0,0,0.31,22,16
3267_11,11,29,"if (pos > 0) {
String prefix = rawKey.substring(0, pos);
BackupHelper helper = mHelpers.get(prefix);
if (helper != null) {
stream.dataSize = input.getDataSize();
stream.key = rawKey.substring(pos+1);
helper.restoreEntity(stream);
} else {
if (!alreadyComplained) {
Log.w(TAG, ""Couldn't find helper for: '"" + rawKey + ""'"");
alreadyComplained = true;
}
}
} else {
if (!alreadyComplained) {
Log.w(TAG, ""Entity with no prefix: '"" + rawKey + ""'"");
alreadyComplained = true;
}
}",1,0,0,0,0,0,0,0,0,14,3,19,0,1,0,0,9,6,1,0,1,0.44,3,1
3267_12,12,12,"String prefix = rawKey.substring(0, pos);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,6,1,0,0,0.31,20,14
3267_13,13,13,BackupHelper helper = mHelpers.get(prefix);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,6,1,0,1,0.55,19,13
3267_14,14,23,"if (helper != null) {
stream.dataSize = input.getDataSize();
stream.key = rawKey.substring(pos+1);
helper.restoreEntity(stream);
} else {
if (!alreadyComplained) {
Log.w(TAG, ""Couldn't find helper for: '"" + rawKey + ""'"");
alreadyComplained = true;
}
}",1,0,0,0,0,0,0,0,0,7,2,10,0,1,0,0,9,6,1,0,1,0.43,9,5
3267_15,15,15,stream.dataSize = input.getDataSize();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,6,1,0,0,0.31,17,11
3267_16,16,16,stream.key = rawKey.substring(pos+1);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,6,1,0,0,0.31,16,10
3267_17,17,17,helper.restoreEntity(stream);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,6,1,0,1,0.49,15,9
3267_18,18,18,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.18,14,8
3267_19,19,22,"if (!alreadyComplained) {
Log.w(TAG, ""Couldn't find helper for: '"" + rawKey + ""'"");
alreadyComplained = true;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,9,6,1,0,1,0.4,10,5
3267_20,20,20,"Log.w(TAG, ""Couldn't find helper for: '"" + rawKey + ""'"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,1,0.42,12,6
3267_21,21,21,alreadyComplained = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.21,11,5
3267_24,24,24,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.18,8,4
3267_25,25,28,"if (!alreadyComplained) {
Log.w(TAG, ""Entity with no prefix: '"" + rawKey + ""'"");
alreadyComplained = true;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,9,6,1,0,0,0.34,4,1
3267_26,26,26,"Log.w(TAG, ""Entity with no prefix: '"" + rawKey + ""'"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.35,6,2
3267_27,27,27,alreadyComplained = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.21,5,1
3267_30,30,30,input.skipEntityData();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.3,2,0
3267_33,33,35,"for (BackupHelper helper: mHelpers.values()) {
helper.writeNewStateDescription(newState);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,1,0,9,6,1,0,3,0.65,0,0
3267_34,34,34,helper.writeNewStateDescription(newState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,3,0.63,1,0
3266_1,1,2,"private void doOneBackup(ParcelFileDescriptor oldState, BackupDataOutput data,
ParcelFileDescriptor newState, Header header, BackupHelper helper)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,2,0.56,4,3
3266_3,3,3,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,0,0.33,3,2
3266_4,4,4,int err;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.37,2,1
3266_5,5,5,FileDescriptor newStateFD = newState.getFileDescriptor();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.5,1,0
3266_7,7,7,"int pos = allocateHeader_native(header, newStateFD);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,2,0.64,0,0
3266_8,8,10,"if (pos < 0) {
throw new IOException(""allocateHeader_native failed (error "" + pos + "")"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,4,3,0,0,2,0.59,1,0
3266_9,9,9,"throw new IOException(""allocateHeader_native failed (error "" + pos + "")"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,2,0.6,2,1
3266_12,12,12,data.setKeyPrefix(header.keyPrefix);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.41,5,3
3266_14,14,14,"helper.performBackup(oldState, data, newState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.34,7,4
3266_16,16,16,"err = writeHeader_native(header, newStateFD, pos);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,3,0,0,1,0.53,9,5
3266_17,17,19,"if (err != 0) {
throw new IOException(""writeHeader_native failed (error "" + err + "")"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,1,0.49,10,5
3266_18,18,18,"throw new IOException(""writeHeader_native failed (error "" + err + "")"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,1,0.49,11,6
3265_1,1,2,"private void doOneBackup(ParcelFileDescriptor oldState, BackupDataOutput data,
ParcelFileDescriptor newState, Header header, BackupHelper helper)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,1,1,0,0,1,0.65,11,7
3265_3,3,3,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0,0,0,0.1,10,6
3265_4,4,4,int err;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.36,9,5
3265_5,5,5,FileDescriptor newStateFD = newState.getFileDescriptor();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,1,0,0,0,0.3,8,4
3265_7,7,7,"int pos = allocateHeader_native(header, newStateFD);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,1,1,0,0,0,0.33,6,3
3265_8,8,10,"if (pos < 0) {
throw new IOException(""allocateHeader_native failed (error "" + pos + "")"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,1,1,0,0,0,0.26,3,1
3265_9,9,9,"throw new IOException(""allocateHeader_native failed (error "" + pos + "")"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0,0,0,0.27,4,1
3265_12,12,12,data.setKeyPrefix(header.keyPrefix);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,0,0,0,0.31,1,0
3265_14,14,14,"helper.performBackup(oldState, data, newState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,0,0,1,0.65,0,0
3265_16,16,16,"err = writeHeader_native(header, newStateFD, pos);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,1,0,0,0,0.33,2,1
3265_17,17,19,"if (err != 0) {
throw new IOException(""writeHeader_native failed (error "" + err + "")"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,1,1,0,0,0,0.28,3,1
3265_18,18,18,"throw new IOException(""writeHeader_native failed (error "" + err + "")"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0,0,0,0.28,4,2
3255_1,1,1,public TestSource getTestSource() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.68,26,16
3255_3,3,9,"if (testSource != null) {
Collection<SchemaSource> schemata = getAllSchemata();
if (testSource.getReferencesSchemata().isEmpty() && !schemata.isEmpty()) {
testSource = TestSourceFactory.createTestSource(testSource, schemata);
}
return testSource;
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,1,4,3,1,0,2,0.69,18,11
3255_4,4,4,Collection<SchemaSource> schemata = getAllSchemata();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.51,23,14
3255_5,5,7,"if (testSource.getReferencesSchemata().isEmpty() && !schemata.isEmpty()) {
testSource = TestSourceFactory.createTestSource(testSource, schemata);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,1,0,2,0.69,20,12
3255_6,6,6,"testSource = TestSourceFactory.createTestSource(testSource, schemata);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.76,21,12
3255_8,8,8,return testSource;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.66,19,11
3255_11,11,11,"testSourceBuilder.setPrefixUri(prefix, datasetURI);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,1,0,3,0.67,16,10
3255_12,12,12,testSourceBuilder.setReferenceSchemata(getAllSchemata());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,3,0.72,15,9
3255_13,13,15,"if (customDereferenceURI != null && ""-"".equals(customDereferenceURI)) {
testSourceBuilder.setInMemFromPipe();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,1,0,3,0.65,12,7
3255_14,14,14,testSourceBuilder.setInMemFromPipe();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,3,0.76,13,7
3255_16,16,26,"if (getEndpointURI() == null || getEndpointURI().isEmpty()) {
String tmpCustomDereferenceURI = datasetURI;
if (customDereferenceURI != null && !customDereferenceURI.isEmpty()) {
tmpCustomDereferenceURI = customDereferenceURI;
}
if (testSourceBuilder.getInMemReader()
== null) {
testSourceBuilder
.setInMemReader(RdfReaderFactory.createDereferenceReader(tmpCustomDereferenceURI));
}
}",1,0,0,0,0,0,0,0,0,6,2,11,0,0,0,1,4,3,1,0,3,0.6,1,0
3255_17,17,17,String tmpCustomDereferenceURI = datasetURI;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.25,10,5
3255_18,18,20,"if (customDereferenceURI != null && !customDereferenceURI.isEmpty()) {
tmpCustomDereferenceURI = customDereferenceURI;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,1,0,0,0.24,7,3
3255_19,19,19,tmpCustomDereferenceURI = customDereferenceURI;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.25,8,3
3255_21,21,25,"if (testSourceBuilder.getInMemReader()
== null) {
testSourceBuilder
.setInMemReader(RdfReaderFactory.createDereferenceReader(tmpCustomDereferenceURI));
}",1,0,0,0,0,0,0,0,0,2,1,5,0,1,0,0,4,3,1,0,3,0.67,2,0
3255_22,22,22,== null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.16,5,1
3255_23,23,24,"testSourceBuilder
.setInMemReader(RdfReaderFactory.createDereferenceReader(tmpCustomDereferenceURI));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,1,0,3,0.66,3,0
3255_28,28,30,"if (this.endpointQueryCacheTTL > 0) {
testSourceBuilder.setCacheTTL(this.endpointQueryCacheTTL);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,1,0,3,0.66,0,0
3255_29,29,29,testSourceBuilder.setCacheTTL(this.endpointQueryCacheTTL);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,3,0.71,1,0
3255_32,32,34,"if (this.endpointQueryDelayMS > 0) {
testSourceBuilder.setQueryDelay(this.endpointQueryDelayMS);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,1,0,3,0.64,4,2
3255_33,33,33,testSourceBuilder.setQueryDelay(this.endpointQueryDelayMS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,3,0.68,5,2
3255_36,36,38,"if (this.endpointQueryPagination > 0) {
testSourceBuilder.setPagination(this.endpointQueryPagination);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,1,0,3,0.67,8,4
3255_37,37,37,testSourceBuilder.setPagination(this.endpointQueryPagination);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,3,0.72,9,4
3255_40,40,42,"if (this.endpointQueryLimit > 0) {
testSourceBuilder.setQueryLimit(this.endpointQueryLimit);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,1,0,3,0.62,12,6
3255_41,41,41,testSourceBuilder.setQueryLimit(this.endpointQueryLimit);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,3,0.67,13,6
3255_44,44,44,testSource = testSourceBuilder.build();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,1,0,2,0.67,16,8
3255_46,46,46,return testSource;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,1,0,2,0.66,18,9
3254_1,1,1,public TestSource getTestSource() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.31,21,15
3254_3,3,9,"if (testSource != null) {
Collection<SchemaSource> schemata = getAllSchemata();
if (testSource.getReferencesSchemata().isEmpty() && !schemata.isEmpty()) {
testSource = TestSourceFactory.createTestSource(testSource, schemata);
}
return testSource;
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,1,6,4,1,0,0,0.35,13,10
3254_4,4,4,Collection<SchemaSource> schemata = getAllSchemata();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.34,18,13
3254_5,5,7,"if (testSource.getReferencesSchemata().isEmpty() && !schemata.isEmpty()) {
testSource = TestSourceFactory.createTestSource(testSource, schemata);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,1,0,0,0.33,15,11
3254_6,6,6,"testSource = TestSourceFactory.createTestSource(testSource, schemata);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.28,16,11
3254_8,8,8,return testSource;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.3,14,10
3254_11,11,11,"testSourceBuilder.setPrefixUri(prefix, datasetURI);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,1,0,1,0.45,11,9
3254_12,12,12,testSourceBuilder.setReferenceSchemata(getAllSchemata());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.42,10,8
3254_13,13,15,"if (customDereferenceURI != null && ""-"".equals(customDereferenceURI)) {
testSourceBuilder.setInMemFromPipe();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,4,1,0,1,0.5,7,6
3254_14,14,14,testSourceBuilder.setInMemFromPipe();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.52,8,6
3254_16,16,26,"if (getEndpointURI() == null || getEndpointURI().isEmpty()) {
String tmpCustomDereferenceURI = datasetURI;
if (customDereferenceURI != null && !customDereferenceURI.isEmpty()) {
tmpCustomDereferenceURI = customDereferenceURI;
}
if (testSourceBuilder.getInMemReader()
== null) {
testSourceBuilder
.setInMemReader(RdfReaderFactory.createDereferenceReader(tmpCustomDereferenceURI));
}
}",1,0,0,0,0,0,0,0,0,6,2,11,0,0,0,1,6,4,1,0,2,0.52,0,0
3254_17,17,17,String tmpCustomDereferenceURI = datasetURI;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.35,5,4
3254_18,18,20,"if (customDereferenceURI != null && !customDereferenceURI.isEmpty()) {
tmpCustomDereferenceURI = customDereferenceURI;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,1,0,0,0.35,2,2
3254_19,19,19,tmpCustomDereferenceURI = customDereferenceURI;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.33,3,2
3254_21,21,25,"if (testSourceBuilder.getInMemReader()
== null) {
testSourceBuilder
.setInMemReader(RdfReaderFactory.createDereferenceReader(tmpCustomDereferenceURI));
}",1,0,0,0,0,0,0,0,0,2,1,5,0,1,0,0,6,4,1,0,2,0.56,0,0
3254_22,22,22,== null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.3,0,0
3254_23,23,24,"testSourceBuilder
.setInMemReader(RdfReaderFactory.createDereferenceReader(tmpCustomDereferenceURI));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,1,0,2,0.57,0,0
3254_28,28,30,"if (this.endpointQueryCacheTTL > 0) {
testSourceBuilder.setCacheTTL(this.endpointQueryCacheTTL);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,4,1,0,1,0.41,5,1
3254_29,29,29,testSourceBuilder.setCacheTTL(this.endpointQueryCacheTTL);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.42,6,1
3254_32,32,34,"if (this.endpointQueryDelayMS > 0) {
testSourceBuilder.setQueryDelay(this.endpointQueryDelayMS);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,4,1,0,1,0.43,9,3
3254_33,33,33,testSourceBuilder.setQueryDelay(this.endpointQueryDelayMS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.44,10,3
3254_36,36,38,"if (this.endpointQueryPagination > 0) {
testSourceBuilder.setPagination(this.endpointQueryPagination);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,4,1,0,1,0.45,13,5
3254_37,37,37,testSourceBuilder.setPagination(this.endpointQueryPagination);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.47,14,5
3254_40,40,42,"if (this.endpointQueryLimit > 0) {
testSourceBuilder.setQueryLimit(this.endpointQueryLimit);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,4,1,0,1,0.41,17,7
3254_41,41,41,testSourceBuilder.setQueryLimit(this.endpointQueryLimit);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.42,18,7
3254_44,44,44,testSource = testSourceBuilder.build();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,1,0,0,0.26,21,9
3254_46,46,46,return testSource;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,4,1,0,0,0.3,23,10
3253_1,1,1,public TestSource getTestSource() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,13,3,0,2,0.66,2,1
3253_3,3,9,"if (testSource != null) {
Collection<SchemaSource> schemata = getAllSchemata();
if (testSource.getReferencesSchemata().isEmpty() && !schemata.isEmpty()) {
testSource = TestSourceFactory.createTestSource(testSource, schemata);
}
return testSource;
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,1,17,13,3,0,6,0.74,0,0
3253_4,4,4,Collection<SchemaSource> schemata = getAllSchemata();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,17,13,3,0,3,0.61,0,0
3253_5,5,7,"if (testSource.getReferencesSchemata().isEmpty() && !schemata.isEmpty()) {
testSource = TestSourceFactory.createTestSource(testSource, schemata);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,17,13,3,0,5,0.72,1,0
3253_6,6,6,"testSource = TestSourceFactory.createTestSource(testSource, schemata);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,13,3,0,4,0.74,2,1
3253_8,8,8,return testSource;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,17,13,3,0,2,0.62,4,3
3253_11,11,11,"testSourceBuilder.setPrefixUri(prefix, datasetURI);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,17,13,3,0,2,0.56,7,4
3253_12,12,12,testSourceBuilder.setReferenceSchemata(getAllSchemata());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,13,3,0,4,0.63,8,4
3253_13,13,15,"if (customDereferenceURI != null && ""-"".equals(customDereferenceURI)) {
testSourceBuilder.setInMemFromPipe();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,17,13,3,0,2,0.53,9,5
3253_14,14,14,testSourceBuilder.setInMemFromPipe();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,13,3,0,2,0.62,10,6
3253_16,16,26,"if (getEndpointURI() == null || getEndpointURI().isEmpty()) {
String tmpCustomDereferenceURI = datasetURI;
if (customDereferenceURI != null && !customDereferenceURI.isEmpty()) {
tmpCustomDereferenceURI = customDereferenceURI;
}
if (testSourceBuilder.getInMemReader()
== null) {
testSourceBuilder
.setInMemReader(RdfReaderFactory.createDereferenceReader(tmpCustomDereferenceURI));
}
}",1,0,0,0,0,0,0,0,0,6,2,11,0,0,0,1,17,13,3,0,3,0.53,12,8
3253_17,17,17,String tmpCustomDereferenceURI = datasetURI;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,17,13,3,0,0,0.31,13,8
3253_18,18,20,"if (customDereferenceURI != null && !customDereferenceURI.isEmpty()) {
tmpCustomDereferenceURI = customDereferenceURI;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,17,13,3,0,0,0.31,14,9
3253_19,19,19,tmpCustomDereferenceURI = customDereferenceURI;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,13,3,0,0,0.31,15,10
3253_21,21,25,"if (testSourceBuilder.getInMemReader()
== null) {
testSourceBuilder
.setInMemReader(RdfReaderFactory.createDereferenceReader(tmpCustomDereferenceURI));
}",1,0,0,0,0,0,0,0,0,2,1,5,0,1,0,0,17,13,3,0,3,0.6,17,12
3253_22,22,22,== null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,13,3,0,0,0.28,18,12
3253_23,23,24,"testSourceBuilder
.setInMemReader(RdfReaderFactory.createDereferenceReader(tmpCustomDereferenceURI));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,17,13,3,0,3,0.59,19,13
3253_28,28,30,"if (this.endpointQueryCacheTTL > 0) {
testSourceBuilder.setCacheTTL(this.endpointQueryCacheTTL);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,17,13,3,0,2,0.49,24,15
3253_29,29,29,testSourceBuilder.setCacheTTL(this.endpointQueryCacheTTL);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,13,3,0,2,0.52,25,15
3253_32,32,34,"if (this.endpointQueryDelayMS > 0) {
testSourceBuilder.setQueryDelay(this.endpointQueryDelayMS);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,17,13,3,0,2,0.51,28,17
3253_33,33,33,testSourceBuilder.setQueryDelay(this.endpointQueryDelayMS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,13,3,0,2,0.53,29,17
3253_36,36,38,"if (this.endpointQueryPagination > 0) {
testSourceBuilder.setPagination(this.endpointQueryPagination);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,17,13,3,0,2,0.55,32,19
3253_37,37,37,testSourceBuilder.setPagination(this.endpointQueryPagination);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,13,3,0,2,0.58,33,19
3253_40,40,42,"if (this.endpointQueryLimit > 0) {
testSourceBuilder.setQueryLimit(this.endpointQueryLimit);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,17,13,3,0,2,0.5,36,21
3253_41,41,41,testSourceBuilder.setQueryLimit(this.endpointQueryLimit);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,13,3,0,2,0.52,37,21
3253_44,44,44,testSource = testSourceBuilder.build();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,17,13,3,0,2,0.63,40,23
3253_46,46,46,return testSource;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,17,13,3,0,2,0.62,42,24
3233_1,1,3,"@Override
protected void reportAmbiguity(DFA dfa, DFAState D, int startIndex, int stopIndex, boolean exact,
BitSet ambigAlts, ATNConfigSet configs)",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,21,11,1,0,2,0.52,10,6
3233_5,5,5,int prediction;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,21,11,1,0,0,0.32,8,5
3233_6,6,11,"if ( ambigAlts!=null ) {
prediction = ambigAlts.nextSetBit(0);
}
else {
prediction = configs.getAlts().nextSetBit(0);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,0,21,11,1,0,0,0.49,2,1
3233_7,7,7,prediction = ambigAlts.nextSetBit(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,21,11,1,0,0,0.46,6,3
3233_9,9,9,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,21,11,1,0,0,0.35,4,2
3233_10,10,10,prediction = configs.getAlts().nextSetBit(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,21,11,1,0,0,0.47,3,1
3233_12,12,16,"if ( configs.fullCtx && prediction != conflictingAltResolvedBySLL ) {
decisions[currentDecision].contextSensitivities.add(
new ContextSensitivityInfo(currentDecision, configs, _input, startIndex, stopIndex)
);
}",1,0,0,0,0,0,0,0,0,1,1,5,1,1,0,0,21,11,1,0,5,0.65,0,0
3233_13,13,14,"decisions[currentDecision].contextSensitivities.add(
new ContextSensitivityInfo(currentDecision, configs, _input, startIndex, stopIndex)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,21,11,1,0,2,0.57,0,0
3233_17,17,19,"decisions[currentDecision].ambiguities.add(
new AmbiguityInfo(currentDecision, configs, ambigAlts,
_input, startIndex, stopIndex, configs.fullCtx)",0,0,0,0,0,0,0,0,0,0,0,3,1,0,0,0,21,11,1,0,1,0.49,4,1
3233_21,21,21,"super.reportAmbiguity(dfa, D, startIndex, stopIndex, exact, ambigAlts, configs);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,21,11,1,0,2,0.52,8,2
3228_1,1,1,"public void setActiveOrAdd(@NonNull Crumb crumb, boolean forceRecreate) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.41,15,10
3228_2,2,32,"if (forceRecreate || !setActive(crumb)) {
clearCrumbs();
final List<File> newPathSet = new ArrayList<>();

newPathSet.add(0, crumb.getFile());

File p = crumb.getFile();
while ((p = p.getParentFile()) != null) {
newPathSet.add(0, p);
}

for (int index = 0; index < newPathSet.size(); index++) {
final File fi = newPathSet.get(index);
crumb = new Crumb(fi);

if (mOldCrumbs != null) {
for (Iterator<Crumb> iterator = mOldCrumbs.iterator(); iterator.hasNext(); ) {
Crumb old = iterator.next();
if (old.equals(crumb)) {
crumb.setScrollPosition(old.getScrollPosition());
iterator.remove();
break;
}
}
}

addCrumb(crumb, true);
}

mOldCrumbs = null;
}",1,0,0,0,0,0,0,0,0,18,5,31,0,0,0,0,5,3,1,0,3,0.58,0,0
3228_3,3,3,clearCrumbs();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.7,13,8
3228_4,4,4,final List<File> newPathSet = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,3,1,0,0,0.27,12,7
3228_6,6,6,"newPathSet.add(0, crumb.getFile());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,3,1,0,0,0.37,10,6
3228_8,8,8,File p = crumb.getFile();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,1,0,0,0.39,8,5
3228_9,9,11,"while ((p = p.getParentFile()) != null) {
newPathSet.add(0, p);
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,1,5,3,1,0,0,0.28,5,3
3228_10,10,10,"newPathSet.add(0, p);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.27,6,3
3228_13,13,29,"for (int index = 0; index < newPathSet.size(); index++) {
final File fi = newPathSet.get(index);
crumb = new Crumb(fi);

if (mOldCrumbs != null) {
for (Iterator<Crumb> iterator = mOldCrumbs.iterator(); iterator.hasNext(); ) {
Crumb old = iterator.next();
if (old.equals(crumb)) {
crumb.setScrollPosition(old.getScrollPosition());
iterator.remove();
break;
}
}
}

addCrumb(crumb, true);
}",0,0,1,0,0,0,0,0,0,10,4,17,0,0,1,1,5,3,1,0,2,0.54,0,0
3228_14,14,14,final File fi = newPathSet.get(index);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.31,2,1
3228_15,15,15,crumb = new Crumb(fi);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,1,0,0,0.48,1,0
3228_17,17,26,"if (mOldCrumbs != null) {
for (Iterator<Crumb> iterator = mOldCrumbs.iterator(); iterator.hasNext(); ) {
Crumb old = iterator.next();
if (old.equals(crumb)) {
crumb.setScrollPosition(old.getScrollPosition());
iterator.remove();
break;
}
}
}",1,0,0,0,0,0,0,0,0,6,3,10,0,0,1,1,5,3,1,0,2,0.56,0,0
3228_18,18,25,"for (Iterator<Crumb> iterator = mOldCrumbs.iterator(); iterator.hasNext(); ) {
Crumb old = iterator.next();
if (old.equals(crumb)) {
crumb.setScrollPosition(old.getScrollPosition());
iterator.remove();
break;
}
}",0,0,1,0,0,0,0,0,0,5,2,8,0,0,0,0,5,3,1,0,2,0.57,1,0
3228_19,19,19,Crumb old = iterator.next();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.45,2,1
3228_20,20,24,"if (old.equals(crumb)) {
crumb.setScrollPosition(old.getScrollPosition());
iterator.remove();
break;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,5,3,1,0,2,0.59,3,2
3228_21,21,21,crumb.setScrollPosition(old.getScrollPosition());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,2,0.67,4,3
3228_22,22,22,iterator.remove();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.28,5,4
3228_23,23,23,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,3,1,0,0,0.22,6,5
3228_28,28,28,"addCrumb(crumb, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,0,0.43,11,7
3228_31,31,31,mOldCrumbs = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,0,0.46,14,8
3217_1,1,1,"@SuppressWarnings(""unchecked"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,0,0.31,16,14
3217_2,2,2,public void onAnimationEnd(Animator animation) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,2,0.72,15,13
3217_3,3,3,animation.removeListener(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,2,0.71,14,12
3217_4,4,4,mPlayingSet.remove(animation);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,2,0.66,13,11
3217_5,5,5,Node animNode = mAnimatorSet.mNodeMap.get(animation);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,1,0,2,0.67,12,10
3217_6,6,6,animNode.done = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,5,1,0,1,0.6,11,9
3217_7,7,28,"if (!mTerminated) {
ArrayList<Node> sortedNodes = mAnimatorSet.mSortedNodes;
boolean allDone = true;
int numSortedNodes = sortedNodes.size();
for (int i = 0; i < numSortedNodes; ++i) {
if (!sortedNodes.get(i).done) {
allDone = false;
break;
}
}
if (allDone) {
if (mListeners != null) {
ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();
int numListeners = tmpListeners.size();
for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationEnd(mAnimatorSet);
}
}
mAnimatorSet.mStarted = false;
}
}",1,0,0,0,0,0,0,0,0,14,4,22,0,0,0,0,9,5,1,0,4,0.71,0,0
3217_8,8,8,ArrayList<Node> sortedNodes = mAnimatorSet.mSortedNodes;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,9,5,1,0,2,0.62,9,7
3217_9,9,9,boolean allDone = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,9,5,1,0,0,0.39,8,6
3217_10,10,10,int numSortedNodes = sortedNodes.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,1,0,0,0.48,7,5
3217_11,11,16,"for (int i = 0; i < numSortedNodes; ++i) {
if (!sortedNodes.get(i).done) {
allDone = false;
break;
}
}",0,0,1,0,0,0,0,0,0,3,2,6,1,1,0,0,9,5,1,0,0,0.47,1,1
3217_12,12,15,"if (!sortedNodes.get(i).done) {
allDone = false;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,9,5,1,0,0,0.44,2,1
3217_13,13,13,allDone = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,0,0.4,4,2
3217_14,14,14,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,9,5,1,0,0,0.36,3,1
3217_17,17,27,"if (allDone) {
if (mListeners != null) {
ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();
int numListeners = tmpListeners.size();
for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationEnd(mAnimatorSet);
}
}
mAnimatorSet.mStarted = false;
}",1,0,0,0,0,0,0,0,0,6,3,11,1,1,0,0,9,5,1,0,4,0.74,0,0
3217_18,18,25,"if (mListeners != null) {
ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();
int numListeners = tmpListeners.size();
for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationEnd(mAnimatorSet);
}
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,0,0,9,5,1,0,4,0.74,0,0
3217_19,19,20,"ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,9,5,1,0,2,0.65,1,0
3217_21,21,21,int numListeners = tmpListeners.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,1,0,1,0.57,3,2
3217_22,22,24,"for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationEnd(mAnimatorSet);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,9,5,1,0,4,0.76,4,2
3217_23,23,23,tmpListeners.get(i).onAnimationEnd(mAnimatorSet);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,4,0.8,5,3
3217_26,26,26,mAnimatorSet.mStarted = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,2,0.65,8,5
3215_1,1,1,private void startIfReady(Animator dependencyAnimation) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,3,0.75,1,1
3215_2,2,4,"if (mAnimatorSet.mTerminated) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,4,1,0,2,0.66,0,0
3215_3,3,3,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.17,0,0
3215_5,5,5,Dependency dependencyToRemove = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.57,2,1
3215_6,6,6,int numDependencies = mNode.tmpDependencies.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.56,3,1
3215_7,7,15,"for (int i = 0; i < numDependencies; ++i) {
Dependency dependency = mNode.tmpDependencies.get(i);
if (dependency.rule == mRule &&
dependency.node.animation == dependencyAnimation) {
dependencyToRemove = dependency;
dependencyAnimation.removeListener(this);
break;
}
}",0,0,1,0,0,0,0,0,0,6,2,9,0,1,0,0,7,4,1,0,2,0.68,4,2
3215_8,8,8,Dependency dependency = mNode.tmpDependencies.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.59,5,3
3215_9,9,14,"if (dependency.rule == mRule &&
dependency.node.animation == dependencyAnimation) {
dependencyToRemove = dependency;
dependencyAnimation.removeListener(this);
break;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,7,4,1,0,2,0.7,6,4
3215_10,10,10,dependency.node.animation == dependencyAnimation) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,2,0.77,7,5
3215_11,11,11,dependencyToRemove = dependency;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.62,8,6
3215_12,12,12,dependencyAnimation.removeListener(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,2,0.68,9,7
3215_13,13,13,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,4,1,0,0,0.26,10,8
3215_16,16,16,mNode.tmpDependencies.remove(dependencyToRemove);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.54,13,10
3215_17,17,20,"if (mNode.tmpDependencies.size() == 0) {
mNode.animation.start();
mAnimatorSet.mPlayingSet.add(mNode.animation);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,7,4,1,0,4,0.75,14,10
3215_18,18,18,mNode.animation.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,2,0.74,15,11
3215_19,19,19,mAnimatorSet.mPlayingSet.add(mNode.animation);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,2,0.7,16,12
3211_1,1,1,"@SuppressWarnings(""unchecked"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,8,3,0,0,0.39,83,56
3211_2,2,3,"@Override
public void start() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,15,8,3,0,1,0.5,81,55
3211_4,4,4,mTerminated = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,8,3,0,0,0.34,80,54
3211_5,5,5,mStarted = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,15,8,3,0,1,0.51,79,53
3211_7,7,11,"if (mDuration >= 0) {
for (Node node : mNodes) {
node.animation.setDuration(mDuration);
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,0,1,0,15,8,3,0,2,0.52,73,50
3211_8,8,10,"for (Node node : mNodes) {
node.animation.setDuration(mDuration);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,15,8,3,0,2,0.53,74,50
3211_9,9,9,node.animation.setDuration(mDuration);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,8,3,0,2,0.58,75,50
3211_12,12,12,sortNodes();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,15,8,3,0,0,0.36,72,49
3211_14,14,14,int numSortedNodes = mSortedNodes.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,15,8,3,0,0,0.38,70,48
3211_15,15,29,"for (int i = 0; i < numSortedNodes; ++i) {
Node node = mSortedNodes.get(i);
ArrayList<AnimatorListener> oldListeners = node.animation.getListeners();
if (oldListeners != null && oldListeners.size() > 0) {
final ArrayList<AnimatorListener> clonedListeners = new
ArrayList<AnimatorListener>(oldListeners);

for (AnimatorListener listener : clonedListeners) {
if (listener instanceof DependencyListener ||
listener instanceof AnimatorSetListener) {
node.animation.removeListener(listener);
}
}
}
}",0,0,0,1,0,0,0,0,0,8,4,15,1,1,0,1,15,8,3,0,2,0.51,55,39
3211_16,16,16,Node node = mSortedNodes.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,15,8,3,0,0,0.34,68,46
3211_17,17,17,ArrayList<AnimatorListener> oldListeners = node.animation.getListeners();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,15,8,3,0,1,0.47,67,45
3211_18,18,28,"if (oldListeners != null && oldListeners.size() > 0) {
final ArrayList<AnimatorListener> clonedListeners = new
ArrayList<AnimatorListener>(oldListeners);

for (AnimatorListener listener : clonedListeners) {
if (listener instanceof DependencyListener ||
listener instanceof AnimatorSetListener) {
node.animation.removeListener(listener);
}
}
}",1,0,0,0,0,0,0,0,0,5,3,11,0,1,0,0,15,8,3,0,2,0.51,56,39
3211_19,19,20,"final ArrayList<AnimatorListener> clonedListeners = new
ArrayList<AnimatorListener>(oldListeners);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,15,8,3,0,1,0.46,64,43
3211_22,22,27,"for (AnimatorListener listener : clonedListeners) {
if (listener instanceof DependencyListener ||
listener instanceof AnimatorSetListener) {
node.animation.removeListener(listener);
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,0,1,0,15,8,3,0,2,0.53,57,39
3211_23,23,26,"if (listener instanceof DependencyListener ||
listener instanceof AnimatorSetListener) {
node.animation.removeListener(listener);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,15,8,3,0,2,0.52,58,39
3211_24,24,24,listener instanceof AnimatorSetListener) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,8,3,0,2,0.57,60,40
3211_25,25,25,node.animation.removeListener(listener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,8,3,0,1,0.47,59,39
3211_31,31,31,final ArrayList<Node> nodesToStart = new ArrayList<Node>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,15,8,3,0,1,0.4,53,38
3211_32,32,49,"for (int i = 0; i < numSortedNodes; ++i) {
Node node = mSortedNodes.get(i);
if (mSetListener == null) {
mSetListener = new AnimatorSetListener(this);
}
if (node.dependencies == null || node.dependencies.size() == 0) {
nodesToStart.add(node);
} else {
int numDependencies = node.dependencies.size();
for (int j = 0; j < numDependencies; ++j) {
Dependency dependency = node.dependencies.get(j);
dependency.node.animation.addListener(
new DependencyListener(this, node, dependency.rule));
}
node.tmpDependencies = (ArrayList<Dependency>) node.dependencies.clone();
}
node.animation.addListener(mSetListener);
}",0,0,1,0,0,0,0,0,0,12,3,18,1,1,0,0,15,8,3,0,3,0.52,35,25
3211_33,33,33,Node node = mSortedNodes.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,15,8,3,0,0,0.34,51,36
3211_34,34,36,"if (mSetListener == null) {
mSetListener = new AnimatorSetListener(this);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,15,8,3,0,2,0.56,48,34
3211_35,35,35,mSetListener = new AnimatorSetListener(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,8,3,0,2,0.57,49,34
3211_37,37,47,"if (node.dependencies == null || node.dependencies.size() == 0) {
nodesToStart.add(node);
} else {
int numDependencies = node.dependencies.size();
for (int j = 0; j < numDependencies; ++j) {
Dependency dependency = node.dependencies.get(j);
dependency.node.animation.addListener(
new DependencyListener(this, node, dependency.rule));
}
node.tmpDependencies = (ArrayList<Dependency>) node.dependencies.clone();
}",1,0,0,0,0,0,0,0,0,7,2,11,1,1,0,0,15,8,3,0,2,0.48,37,26
3211_38,38,38,nodesToStart.add(node);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,8,3,0,1,0.45,46,32
3211_39,39,39,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,8,3,0,0,0.29,45,31
3211_40,40,40,int numDependencies = node.dependencies.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,15,8,3,0,0,0.39,44,30
3211_41,41,45,"for (int j = 0; j < numDependencies; ++j) {
Dependency dependency = node.dependencies.get(j);
dependency.node.animation.addListener(
new DependencyListener(this, node, dependency.rule));
}",0,0,1,0,0,0,0,0,0,2,1,5,0,1,0,0,15,8,3,0,1,0.43,39,27
3211_42,42,42,Dependency dependency = node.dependencies.get(j);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,15,8,3,0,0,0.36,42,28
3211_43,43,44,"dependency.node.animation.addListener(
new DependencyListener(this, node, dependency.rule));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,15,8,3,0,1,0.45,40,27
3211_46,46,46,node.tmpDependencies = (ArrayList<Dependency>) node.dependencies.clone();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,15,8,3,0,0,0.42,38,26
3211_48,48,48,node.animation.addListener(mSetListener);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,15,8,3,0,2,0.53,36,25
3211_50,50,75,"if (mStartDelay <= 0) {
for (Node node : nodesToStart) {
node.animation.start();
mPlayingSet.add(node.animation);
}
} else {
mDelayAnim = ValueAnimator.ofFloat(0f, 1f);
mDelayAnim.setDuration(mStartDelay);
mDelayAnim.addListener(new AnimatorListenerAdapter() {
boolean canceled = false;
public void onAnimationCancel(Animator anim) {
canceled = true;
}
public void onAnimationEnd(Animator anim) {
if (!canceled) {
int numNodes = nodesToStart.size();
for (int i = 0; i < numNodes; ++i) {
Node node = nodesToStart.get(i);
node.animation.start();
mPlayingSet.add(node.animation);
}
}
}
});
mDelayAnim.start();
}",1,0,0,0,0,0,0,0,0,18,5,26,1,1,0,0,15,8,3,0,4,0.61,9,6
3211_51,51,54,"for (Node node : nodesToStart) {
node.animation.start();
mPlayingSet.add(node.animation);
}",0,0,0,1,0,0,0,0,0,2,1,4,0,0,0,0,15,8,3,0,3,0.57,30,21
3211_52,52,52,node.animation.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,15,8,3,0,2,0.62,32,22
3211_53,53,53,mPlayingSet.add(node.animation);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,15,8,3,0,2,0.53,31,21
3211_55,55,55,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,8,3,0,0,0.29,29,20
3211_56,56,56,"mDelayAnim = ValueAnimator.ofFloat(0f, 1f);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,8,3,0,1,0.53,28,19
3211_57,57,57,mDelayAnim.setDuration(mStartDelay);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,8,3,0,3,0.66,27,18
3211_58,58,58,mDelayAnim.addListener(new AnimatorListenerAdapter() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,8,3,0,1,0.49,26,17
3211_59,59,59,boolean canceled = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,15,8,3,0,0,0.36,25,16
3211_60,60,60,public void onAnimationCancel(Animator anim) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,8,3,0,1,0.58,24,15
3211_61,61,61,canceled = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,8,3,0,0,0.37,23,14
3211_63,63,63,public void onAnimationEnd(Animator anim) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,8,3,0,2,0.64,21,13
3211_64,64,71,"if (!canceled) {
int numNodes = nodesToStart.size();
for (int i = 0; i < numNodes; ++i) {
Node node = nodesToStart.get(i);
node.animation.start();
mPlayingSet.add(node.animation);
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,0,0,0,15,8,3,0,3,0.54,13,7
3211_65,65,65,int numNodes = nodesToStart.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,15,8,3,0,1,0.46,19,11
3211_66,66,70,"for (int i = 0; i < numNodes; ++i) {
Node node = nodesToStart.get(i);
node.animation.start();
mPlayingSet.add(node.animation);
}",0,0,1,0,0,0,0,0,0,3,1,5,0,1,0,0,15,8,3,0,3,0.54,14,7
3211_67,67,67,Node node = nodesToStart.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,15,8,3,0,1,0.44,17,9
3211_68,68,68,node.animation.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,15,8,3,0,2,0.62,16,8
3211_69,69,69,mPlayingSet.add(node.animation);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,15,8,3,0,2,0.53,15,7
3211_74,74,74,mDelayAnim.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,8,3,0,2,0.67,10,6
3211_76,76,83,"if (mListeners != null) {
ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();
int numListeners = tmpListeners.size();
for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationStart(this);
}
}",1,0,0,0,0,0,0,0,0,4,2,8,1,1,0,0,15,8,3,0,2,0.49,1,1
3211_77,77,78,"ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,15,8,3,0,1,0.48,6,4
3211_79,79,79,int numListeners = tmpListeners.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,15,8,3,0,0,0.39,5,3
3211_80,80,82,"for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationStart(this);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,15,8,3,0,2,0.49,2,1
3211_81,81,81,tmpListeners.get(i).onAnimationStart(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,8,3,0,2,0.54,3,1
3211_84,84,94,"if (mNodes.size() == 0 && mStartDelay == 0) {
mStarted = false;
if (mListeners != null) {
ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();
int numListeners = tmpListeners.size();
for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationEnd(this);
}
}
}",1,0,0,0,0,0,0,0,0,6,3,11,1,1,0,0,15,8,3,0,3,0.52,0,0
3211_85,85,85,mStarted = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,8,3,0,1,0.51,0,0
3211_86,86,93,"if (mListeners != null) {
ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();
int numListeners = tmpListeners.size();
for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationEnd(this);
}
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,0,0,15,8,3,0,2,0.49,1,0
3211_87,87,88,"ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,15,8,3,0,1,0.48,2,1
3211_89,89,89,int numListeners = tmpListeners.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,15,8,3,0,0,0.39,4,3
3211_90,90,92,"for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationEnd(this);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,15,8,3,0,2,0.49,5,3
3211_91,91,91,tmpListeners.get(i).onAnimationEnd(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,15,8,3,0,2,0.53,6,4
3210_1,1,1,"@SuppressWarnings(""unchecked"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,12,9,0,0,0.38,29,17
3210_2,2,3,"@Override
public void start() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,28,12,9,0,1,0.52,27,16
3210_4,4,4,mTerminated = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,12,9,0,0,0.34,26,15
3210_5,5,5,mStarted = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,28,12,9,0,1,0.55,25,14
3210_7,7,11,"if (mDuration >= 0) {
for (Node node : mNodes) {
node.animation.setDuration(mDuration);
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,0,1,0,28,12,9,0,3,0.71,19,11
3210_8,8,10,"for (Node node : mNodes) {
node.animation.setDuration(mDuration);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,28,12,9,0,3,0.74,20,11
3210_9,9,9,node.animation.setDuration(mDuration);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,12,9,0,3,0.71,21,11
3210_12,12,12,sortNodes();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,28,12,9,0,1,0.59,18,10
3210_14,14,14,int numSortedNodes = mSortedNodes.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,28,12,9,0,1,0.56,16,9
3210_15,15,29,"for (int i = 0; i < numSortedNodes; ++i) {
Node node = mSortedNodes.get(i);
ArrayList<AnimatorListener> oldListeners = node.animation.getListeners();
if (oldListeners != null && oldListeners.size() > 0) {
final ArrayList<AnimatorListener> clonedListeners = new
ArrayList<AnimatorListener>(oldListeners);

for (AnimatorListener listener : clonedListeners) {
if (listener instanceof DependencyListener ||
listener instanceof AnimatorSetListener) {
node.animation.removeListener(listener);
}
}
}
}",0,0,0,1,0,0,0,0,0,8,4,15,1,1,0,1,28,12,9,0,5,0.62,1,0
3210_16,16,16,Node node = mSortedNodes.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,28,12,9,0,1,0.6,14,7
3210_17,17,17,ArrayList<AnimatorListener> oldListeners = node.animation.getListeners();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,28,12,9,0,3,0.62,13,6
3210_18,18,28,"if (oldListeners != null && oldListeners.size() > 0) {
final ArrayList<AnimatorListener> clonedListeners = new
ArrayList<AnimatorListener>(oldListeners);

for (AnimatorListener listener : clonedListeners) {
if (listener instanceof DependencyListener ||
listener instanceof AnimatorSetListener) {
node.animation.removeListener(listener);
}
}
}",1,0,0,0,0,0,0,0,0,5,3,11,0,1,0,0,28,12,9,0,5,0.6,2,0
3210_19,19,20,"final ArrayList<AnimatorListener> clonedListeners = new
ArrayList<AnimatorListener>(oldListeners);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,28,12,9,0,2,0.56,10,4
3210_22,22,27,"for (AnimatorListener listener : clonedListeners) {
if (listener instanceof DependencyListener ||
listener instanceof AnimatorSetListener) {
node.animation.removeListener(listener);
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,0,1,0,28,12,9,0,4,0.6,3,0
3210_23,23,26,"if (listener instanceof DependencyListener ||
listener instanceof AnimatorSetListener) {
node.animation.removeListener(listener);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,28,12,9,0,4,0.61,4,0
3210_24,24,24,listener instanceof AnimatorSetListener) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,12,9,0,2,0.58,6,1
3210_25,25,25,node.animation.removeListener(listener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,12,9,0,2,0.59,5,0
3210_31,31,31,final ArrayList<Node> nodesToStart = new ArrayList<Node>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,28,12,9,0,3,0.69,0,0
3210_32,32,49,"for (int i = 0; i < numSortedNodes; ++i) {
Node node = mSortedNodes.get(i);
if (mSetListener == null) {
mSetListener = new AnimatorSetListener(this);
}
if (node.dependencies == null || node.dependencies.size() == 0) {
nodesToStart.add(node);
} else {
int numDependencies = node.dependencies.size();
for (int j = 0; j < numDependencies; ++j) {
Dependency dependency = node.dependencies.get(j);
dependency.node.animation.addListener(
new DependencyListener(this, node, dependency.rule));
}
node.tmpDependencies = (ArrayList<Dependency>) node.dependencies.clone();
}
node.animation.addListener(mSetListener);
}",0,0,1,0,0,0,0,0,0,12,3,18,1,1,0,0,28,12,9,0,6,0.74,1,0
3210_33,33,33,Node node = mSortedNodes.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,28,12,9,0,1,0.6,2,1
3210_34,34,36,"if (mSetListener == null) {
mSetListener = new AnimatorSetListener(this);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,28,12,9,0,2,0.57,3,2
3210_35,35,35,mSetListener = new AnimatorSetListener(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,12,9,0,2,0.6,4,3
3210_37,37,47,"if (node.dependencies == null || node.dependencies.size() == 0) {
nodesToStart.add(node);
} else {
int numDependencies = node.dependencies.size();
for (int j = 0; j < numDependencies; ++j) {
Dependency dependency = node.dependencies.get(j);
dependency.node.animation.addListener(
new DependencyListener(this, node, dependency.rule));
}
node.tmpDependencies = (ArrayList<Dependency>) node.dependencies.clone();
}",1,0,0,0,0,0,0,0,0,7,2,11,1,1,0,0,28,12,9,0,5,0.74,6,5
3210_38,38,38,nodesToStart.add(node);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,12,9,0,2,0.71,7,5
3210_39,39,39,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,12,9,0,0,0.28,8,6
3210_40,40,40,int numDependencies = node.dependencies.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,28,12,9,0,2,0.64,9,7
3210_41,41,45,"for (int j = 0; j < numDependencies; ++j) {
Dependency dependency = node.dependencies.get(j);
dependency.node.animation.addListener(
new DependencyListener(this, node, dependency.rule));
}",0,0,1,0,0,0,0,0,0,2,1,5,0,1,0,0,28,12,9,0,3,0.67,10,8
3210_42,42,42,Dependency dependency = node.dependencies.get(j);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,28,12,9,0,2,0.66,11,9
3210_43,43,44,"dependency.node.animation.addListener(
new DependencyListener(this, node, dependency.rule));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,28,12,9,0,3,0.66,12,10
3210_46,46,46,node.tmpDependencies = (ArrayList<Dependency>) node.dependencies.clone();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,28,12,9,0,3,0.67,15,12
3210_48,48,48,node.animation.addListener(mSetListener);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,28,12,9,0,3,0.63,17,13
3210_50,50,75,"if (mStartDelay <= 0) {
for (Node node : nodesToStart) {
node.animation.start();
mPlayingSet.add(node.animation);
}
} else {
mDelayAnim = ValueAnimator.ofFloat(0f, 1f);
mDelayAnim.setDuration(mStartDelay);
mDelayAnim.addListener(new AnimatorListenerAdapter() {
boolean canceled = false;
public void onAnimationCancel(Animator anim) {
canceled = true;
}
public void onAnimationEnd(Animator anim) {
if (!canceled) {
int numNodes = nodesToStart.size();
for (int i = 0; i < numNodes; ++i) {
Node node = nodesToStart.get(i);
node.animation.start();
mPlayingSet.add(node.animation);
}
}
}
});
mDelayAnim.start();
}",1,0,0,0,0,0,0,0,0,18,5,26,1,1,0,0,28,12,9,0,4,0.72,19,14
3210_51,51,54,"for (Node node : nodesToStart) {
node.animation.start();
mPlayingSet.add(node.animation);
}",0,0,0,1,0,0,0,0,0,2,1,4,0,0,0,0,28,12,9,0,4,0.78,20,14
3210_52,52,52,node.animation.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,28,12,9,0,3,0.82,21,15
3210_53,53,53,mPlayingSet.add(node.animation);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,28,12,9,0,3,0.66,22,16
3210_55,55,55,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,12,9,0,0,0.28,24,18
3210_56,56,56,"mDelayAnim = ValueAnimator.ofFloat(0f, 1f);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,12,9,0,1,0.58,25,18
3210_57,57,57,mDelayAnim.setDuration(mStartDelay);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,12,9,0,3,0.72,26,19
3210_58,58,58,mDelayAnim.addListener(new AnimatorListenerAdapter() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,12,9,0,1,0.56,27,20
3210_59,59,59,boolean canceled = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,28,12,9,0,0,0.32,28,21
3210_60,60,60,public void onAnimationCancel(Animator anim) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,12,9,0,1,0.59,29,22
3210_61,61,61,canceled = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,12,9,0,0,0.32,30,23
3210_63,63,63,public void onAnimationEnd(Animator anim) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,12,9,0,1,0.61,32,25
3210_64,64,71,"if (!canceled) {
int numNodes = nodesToStart.size();
for (int i = 0; i < numNodes; ++i) {
Node node = nodesToStart.get(i);
node.animation.start();
mPlayingSet.add(node.animation);
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,0,0,0,28,12,9,0,4,0.73,33,25
3210_65,65,65,int numNodes = nodesToStart.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,28,12,9,0,2,0.68,34,26
3210_66,66,70,"for (int i = 0; i < numNodes; ++i) {
Node node = nodesToStart.get(i);
node.animation.start();
mPlayingSet.add(node.animation);
}",0,0,1,0,0,0,0,0,0,3,1,5,0,1,0,0,28,12,9,0,4,0.75,35,27
3210_67,67,67,Node node = nodesToStart.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,28,12,9,0,2,0.71,36,28
3210_68,68,68,node.animation.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,28,12,9,0,3,0.82,37,29
3210_69,69,69,mPlayingSet.add(node.animation);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,28,12,9,0,3,0.66,38,30
3210_74,74,74,mDelayAnim.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,12,9,0,2,0.74,43,32
3210_76,76,83,"if (mListeners != null) {
ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();
int numListeners = tmpListeners.size();
for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationStart(this);
}
}",1,0,0,0,0,0,0,0,0,4,2,8,1,1,0,0,28,12,9,0,3,0.6,45,33
3210_77,77,78,"ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,28,12,9,0,2,0.58,46,33
3210_79,79,79,int numListeners = tmpListeners.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,28,12,9,0,0,0.43,48,35
3210_80,80,82,"for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationStart(this);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,28,12,9,0,2,0.59,49,35
3210_81,81,81,tmpListeners.get(i).onAnimationStart(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,12,9,0,2,0.61,50,36
3210_84,84,94,"if (mNodes.size() == 0 && mStartDelay == 0) {
mStarted = false;
if (mListeners != null) {
ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();
int numListeners = tmpListeners.size();
for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationEnd(this);
}
}
}",1,0,0,0,0,0,0,0,0,6,3,11,1,1,0,0,28,12,9,0,4,0.63,53,38
3210_85,85,85,mStarted = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,12,9,0,1,0.55,54,38
3210_86,86,93,"if (mListeners != null) {
ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();
int numListeners = tmpListeners.size();
for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationEnd(this);
}
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,0,0,28,12,9,0,2,0.54,55,39
3210_87,87,88,"ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,28,12,9,0,2,0.58,56,40
3210_89,89,89,int numListeners = tmpListeners.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,28,12,9,0,0,0.43,58,42
3210_90,90,92,"for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationEnd(this);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,28,12,9,0,1,0.51,59,42
3210_91,91,91,tmpListeners.get(i).onAnimationEnd(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,12,9,0,1,0.52,60,43
3209_1,1,1,"@SuppressWarnings(""unchecked"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,10,0,0,0,0.35,10,6
3209_2,2,3,"@Override
public void start() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,12,10,0,0,0,0.32,8,5
3209_4,4,4,mTerminated = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,10,0,0,0,0.26,7,4
3209_5,5,5,mStarted = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,12,10,0,0,0,0.29,6,3
3209_7,7,11,"if (mDuration >= 0) {
for (Node node : mNodes) {
node.animation.setDuration(mDuration);
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,0,1,0,12,10,0,0,2,0.65,0,0
3209_8,8,10,"for (Node node : mNodes) {
node.animation.setDuration(mDuration);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,12,10,0,0,2,0.69,1,0
3209_9,9,9,node.animation.setDuration(mDuration);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,10,0,0,2,0.63,2,0
3209_12,12,12,sortNodes();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,12,10,0,0,2,0.82,0,0
3209_14,14,14,int numSortedNodes = mSortedNodes.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,12,10,0,0,2,0.72,2,1
3209_15,15,29,"for (int i = 0; i < numSortedNodes; ++i) {
Node node = mSortedNodes.get(i);
ArrayList<AnimatorListener> oldListeners = node.animation.getListeners();
if (oldListeners != null && oldListeners.size() > 0) {
final ArrayList<AnimatorListener> clonedListeners = new
ArrayList<AnimatorListener>(oldListeners);

for (AnimatorListener listener : clonedListeners) {
if (listener instanceof DependencyListener ||
listener instanceof AnimatorSetListener) {
node.animation.removeListener(listener);
}
}
}
}",0,0,0,1,0,0,0,0,0,8,4,15,1,1,0,1,12,10,0,0,3,0.64,3,1
3209_16,16,16,Node node = mSortedNodes.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,10,0,0,2,0.76,4,2
3209_17,17,17,ArrayList<AnimatorListener> oldListeners = node.animation.getListeners();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,10,0,0,2,0.59,5,3
3209_18,18,28,"if (oldListeners != null && oldListeners.size() > 0) {
final ArrayList<AnimatorListener> clonedListeners = new
ArrayList<AnimatorListener>(oldListeners);

for (AnimatorListener listener : clonedListeners) {
if (listener instanceof DependencyListener ||
listener instanceof AnimatorSetListener) {
node.animation.removeListener(listener);
}
}
}",1,0,0,0,0,0,0,0,0,5,3,11,0,1,0,0,12,10,0,0,2,0.56,6,4
3209_19,19,20,"final ArrayList<AnimatorListener> clonedListeners = new
ArrayList<AnimatorListener>(oldListeners);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,12,10,0,0,1,0.46,7,5
3209_22,22,27,"for (AnimatorListener listener : clonedListeners) {
if (listener instanceof DependencyListener ||
listener instanceof AnimatorSetListener) {
node.animation.removeListener(listener);
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,0,1,0,12,10,0,0,2,0.58,10,7
3209_23,23,26,"if (listener instanceof DependencyListener ||
listener instanceof AnimatorSetListener) {
node.animation.removeListener(listener);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,12,10,0,0,2,0.58,11,7
3209_24,24,24,listener instanceof AnimatorSetListener) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,10,0,0,1,0.48,12,8
3209_25,25,25,node.animation.removeListener(listener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,10,0,0,2,0.62,13,9
3209_31,31,31,final ArrayList<Node> nodesToStart = new ArrayList<Node>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,12,10,0,0,1,0.53,19,11
3209_32,32,49,"for (int i = 0; i < numSortedNodes; ++i) {
Node node = mSortedNodes.get(i);
if (mSetListener == null) {
mSetListener = new AnimatorSetListener(this);
}
if (node.dependencies == null || node.dependencies.size() == 0) {
nodesToStart.add(node);
} else {
int numDependencies = node.dependencies.size();
for (int j = 0; j < numDependencies; ++j) {
Dependency dependency = node.dependencies.get(j);
dependency.node.animation.addListener(
new DependencyListener(this, node, dependency.rule));
}
node.tmpDependencies = (ArrayList<Dependency>) node.dependencies.clone();
}
node.animation.addListener(mSetListener);
}",0,0,1,0,0,0,0,0,0,12,3,18,1,1,0,0,12,10,0,0,3,0.65,20,11
3209_33,33,33,Node node = mSortedNodes.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,12,10,0,0,2,0.76,21,12
3209_34,34,36,"if (mSetListener == null) {
mSetListener = new AnimatorSetListener(this);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,12,10,0,0,1,0.43,22,13
3209_35,35,35,mSetListener = new AnimatorSetListener(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,10,0,0,1,0.45,23,14
3209_37,37,47,"if (node.dependencies == null || node.dependencies.size() == 0) {
nodesToStart.add(node);
} else {
int numDependencies = node.dependencies.size();
for (int j = 0; j < numDependencies; ++j) {
Dependency dependency = node.dependencies.get(j);
dependency.node.animation.addListener(
new DependencyListener(this, node, dependency.rule));
}
node.tmpDependencies = (ArrayList<Dependency>) node.dependencies.clone();
}",1,0,0,0,0,0,0,0,0,7,2,11,1,1,0,0,12,10,0,0,2,0.6,25,16
3209_38,38,38,nodesToStart.add(node);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,10,0,0,1,0.62,26,16
3209_39,39,39,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,10,0,0,0,0.27,27,17
3209_40,40,40,int numDependencies = node.dependencies.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,10,0,0,1,0.57,28,18
3209_41,41,45,"for (int j = 0; j < numDependencies; ++j) {
Dependency dependency = node.dependencies.get(j);
dependency.node.animation.addListener(
new DependencyListener(this, node, dependency.rule));
}",0,0,1,0,0,0,0,0,0,2,1,5,0,1,0,0,12,10,0,0,2,0.59,29,19
3209_42,42,42,Dependency dependency = node.dependencies.get(j);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,10,0,0,1,0.57,30,20
3209_43,43,44,"dependency.node.animation.addListener(
new DependencyListener(this, node, dependency.rule));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,12,10,0,0,2,0.6,31,21
3209_46,46,46,node.tmpDependencies = (ArrayList<Dependency>) node.dependencies.clone();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,10,0,0,1,0.56,34,23
3209_48,48,48,node.animation.addListener(mSetListener);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,12,10,0,0,2,0.59,36,24
3209_50,50,75,"if (mStartDelay <= 0) {
for (Node node : nodesToStart) {
node.animation.start();
mPlayingSet.add(node.animation);
}
} else {
mDelayAnim = ValueAnimator.ofFloat(0f, 1f);
mDelayAnim.setDuration(mStartDelay);
mDelayAnim.addListener(new AnimatorListenerAdapter() {
boolean canceled = false;
public void onAnimationCancel(Animator anim) {
canceled = true;
}
public void onAnimationEnd(Animator anim) {
if (!canceled) {
int numNodes = nodesToStart.size();
for (int i = 0; i < numNodes; ++i) {
Node node = nodesToStart.get(i);
node.animation.start();
mPlayingSet.add(node.animation);
}
}
}
});
mDelayAnim.start();
}",1,0,0,0,0,0,0,0,0,18,5,26,1,1,0,0,12,10,0,0,2,0.63,38,25
3209_51,51,54,"for (Node node : nodesToStart) {
node.animation.start();
mPlayingSet.add(node.animation);
}",0,0,0,1,0,0,0,0,0,2,1,4,0,0,0,0,12,10,0,0,2,0.67,39,25
3209_52,52,52,node.animation.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,10,0,0,2,0.69,40,26
3209_53,53,53,mPlayingSet.add(node.animation);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,10,0,0,2,0.61,41,27
3209_55,55,55,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,10,0,0,0,0.27,43,29
3209_56,56,56,"mDelayAnim = ValueAnimator.ofFloat(0f, 1f);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,10,0,0,1,0.56,44,29
3209_57,57,57,mDelayAnim.setDuration(mStartDelay);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,10,0,0,1,0.52,45,30
3209_58,58,58,mDelayAnim.addListener(new AnimatorListenerAdapter() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,10,0,0,1,0.51,46,31
3209_59,59,59,boolean canceled = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,12,10,0,0,0,0.28,47,32
3209_60,60,60,public void onAnimationCancel(Animator anim) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,10,0,0,1,0.55,48,33
3209_61,61,61,canceled = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,10,0,0,0,0.27,49,34
3209_63,63,63,public void onAnimationEnd(Animator anim) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,10,0,0,1,0.57,51,36
3209_64,64,71,"if (!canceled) {
int numNodes = nodesToStart.size();
for (int i = 0; i < numNodes; ++i) {
Node node = nodesToStart.get(i);
node.animation.start();
mPlayingSet.add(node.animation);
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,0,0,0,12,10,0,0,2,0.63,52,36
3209_65,65,65,int numNodes = nodesToStart.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,10,0,0,1,0.6,53,37
3209_66,66,70,"for (int i = 0; i < numNodes; ++i) {
Node node = nodesToStart.get(i);
node.animation.start();
mPlayingSet.add(node.animation);
}",0,0,1,0,0,0,0,0,0,3,1,5,0,1,0,0,12,10,0,0,2,0.64,54,38
3209_67,67,67,Node node = nodesToStart.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,10,0,0,1,0.64,55,39
3209_68,68,68,node.animation.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,10,0,0,2,0.69,56,40
3209_69,69,69,mPlayingSet.add(node.animation);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,10,0,0,2,0.61,57,41
3209_74,74,74,mDelayAnim.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,10,0,0,1,0.56,62,43
3209_76,76,83,"if (mListeners != null) {
ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();
int numListeners = tmpListeners.size();
for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationStart(this);
}
}",1,0,0,0,0,0,0,0,0,4,2,8,1,1,0,0,12,10,0,0,1,0.47,64,44
3209_77,77,78,"ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,12,10,0,0,1,0.47,65,44
3209_79,79,79,int numListeners = tmpListeners.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,10,0,0,0,0.41,67,46
3209_80,80,82,"for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationStart(this);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,12,10,0,0,1,0.47,68,46
3209_81,81,81,tmpListeners.get(i).onAnimationStart(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,10,0,0,1,0.48,69,47
3209_84,84,94,"if (mNodes.size() == 0 && mStartDelay == 0) {
mStarted = false;
if (mListeners != null) {
ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();
int numListeners = tmpListeners.size();
for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationEnd(this);
}
}
}",1,0,0,0,0,0,0,0,0,6,3,11,1,1,0,0,12,10,0,0,2,0.54,72,49
3209_85,85,85,mStarted = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,10,0,0,0,0.32,73,49
3209_86,86,93,"if (mListeners != null) {
ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();
int numListeners = tmpListeners.size();
for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationEnd(this);
}
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,0,0,12,10,0,0,1,0.47,74,50
3209_87,87,88,"ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,12,10,0,0,1,0.47,75,51
3209_89,89,89,int numListeners = tmpListeners.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,10,0,0,0,0.41,77,53
3209_90,90,92,"for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationEnd(this);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,12,10,0,0,1,0.48,78,53
3209_91,91,91,tmpListeners.get(i).onAnimationEnd(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,10,0,0,1,0.49,79,54
3208_1,1,1,"@SuppressWarnings(""unchecked"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,0,0.33,6,4
3208_2,2,3,"@Override
public void start() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,4,1,0,0,0.35,4,3
3208_4,4,4,mTerminated = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,0,0.32,3,2
3208_5,5,5,mStarted = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,4,1,0,0,0.37,2,1
3208_7,7,11,"if (mDuration >= 0) {
for (Node node : mNodes) {
node.animation.setDuration(mDuration);
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,0,1,0,8,4,1,0,3,0.79,0,0
3208_8,8,10,"for (Node node : mNodes) {
node.animation.setDuration(mDuration);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,8,4,1,0,3,0.81,0,0
3208_9,9,9,node.animation.setDuration(mDuration);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,3,0.87,1,0
3208_12,12,12,sortNodes();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,4,1,0,0,0.47,4,2
3208_14,14,14,int numSortedNodes = mSortedNodes.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,8,4,1,0,0,0.47,6,3
3208_15,15,29,"for (int i = 0; i < numSortedNodes; ++i) {
Node node = mSortedNodes.get(i);
ArrayList<AnimatorListener> oldListeners = node.animation.getListeners();
if (oldListeners != null && oldListeners.size() > 0) {
final ArrayList<AnimatorListener> clonedListeners = new
ArrayList<AnimatorListener>(oldListeners);

for (AnimatorListener listener : clonedListeners) {
if (listener instanceof DependencyListener ||
listener instanceof AnimatorSetListener) {
node.animation.removeListener(listener);
}
}
}
}",0,0,0,1,0,0,0,0,0,8,4,15,1,1,0,1,8,4,1,0,2,0.62,7,3
3208_16,16,16,Node node = mSortedNodes.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,1,0,0,0.47,8,4
3208_17,17,17,ArrayList<AnimatorListener> oldListeners = node.animation.getListeners();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,1,0,1,0.56,9,5
3208_18,18,28,"if (oldListeners != null && oldListeners.size() > 0) {
final ArrayList<AnimatorListener> clonedListeners = new
ArrayList<AnimatorListener>(oldListeners);

for (AnimatorListener listener : clonedListeners) {
if (listener instanceof DependencyListener ||
listener instanceof AnimatorSetListener) {
node.animation.removeListener(listener);
}
}
}",1,0,0,0,0,0,0,0,0,5,3,11,0,1,0,0,8,4,1,0,2,0.61,10,6
3208_19,19,20,"final ArrayList<AnimatorListener> clonedListeners = new
ArrayList<AnimatorListener>(oldListeners);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,8,4,1,0,1,0.49,11,7
3208_22,22,27,"for (AnimatorListener listener : clonedListeners) {
if (listener instanceof DependencyListener ||
listener instanceof AnimatorSetListener) {
node.animation.removeListener(listener);
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,0,1,0,8,4,1,0,2,0.64,14,9
3208_23,23,26,"if (listener instanceof DependencyListener ||
listener instanceof AnimatorSetListener) {
node.animation.removeListener(listener);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,8,4,1,0,2,0.65,15,9
3208_24,24,24,listener instanceof AnimatorSetListener) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,2,0.68,16,10
3208_25,25,25,node.animation.removeListener(listener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,1,0.57,17,11
3208_31,31,31,final ArrayList<Node> nodesToStart = new ArrayList<Node>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,4,1,0,0,0.42,23,13
3208_32,32,49,"for (int i = 0; i < numSortedNodes; ++i) {
Node node = mSortedNodes.get(i);
if (mSetListener == null) {
mSetListener = new AnimatorSetListener(this);
}
if (node.dependencies == null || node.dependencies.size() == 0) {
nodesToStart.add(node);
} else {
int numDependencies = node.dependencies.size();
for (int j = 0; j < numDependencies; ++j) {
Dependency dependency = node.dependencies.get(j);
dependency.node.animation.addListener(
new DependencyListener(this, node, dependency.rule));
}
node.tmpDependencies = (ArrayList<Dependency>) node.dependencies.clone();
}
node.animation.addListener(mSetListener);
}",0,0,1,0,0,0,0,0,0,12,3,18,1,1,0,0,8,4,1,0,2,0.63,24,13
3208_33,33,33,Node node = mSortedNodes.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,4,1,0,0,0.47,25,14
3208_34,34,36,"if (mSetListener == null) {
mSetListener = new AnimatorSetListener(this);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,4,1,0,2,0.67,26,15
3208_35,35,35,mSetListener = new AnimatorSetListener(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,2,0.7,27,16
3208_37,37,47,"if (node.dependencies == null || node.dependencies.size() == 0) {
nodesToStart.add(node);
} else {
int numDependencies = node.dependencies.size();
for (int j = 0; j < numDependencies; ++j) {
Dependency dependency = node.dependencies.get(j);
dependency.node.animation.addListener(
new DependencyListener(this, node, dependency.rule));
}
node.tmpDependencies = (ArrayList<Dependency>) node.dependencies.clone();
}",1,0,0,0,0,0,0,0,0,7,2,11,1,1,0,0,8,4,1,0,1,0.53,29,18
3208_38,38,38,nodesToStart.add(node);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,0,0.46,30,18
3208_39,39,39,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,0,0.24,31,19
3208_40,40,40,int numDependencies = node.dependencies.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,1,0,0,0.47,32,20
3208_41,41,45,"for (int j = 0; j < numDependencies; ++j) {
Dependency dependency = node.dependencies.get(j);
dependency.node.animation.addListener(
new DependencyListener(this, node, dependency.rule));
}",0,0,1,0,0,0,0,0,0,2,1,5,0,1,0,0,8,4,1,0,1,0.53,33,21
3208_42,42,42,Dependency dependency = node.dependencies.get(j);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,1,0,0,0.46,34,22
3208_43,43,44,"dependency.node.animation.addListener(
new DependencyListener(this, node, dependency.rule));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,8,4,1,0,1,0.54,35,23
3208_46,46,46,node.tmpDependencies = (ArrayList<Dependency>) node.dependencies.clone();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,1,0,0,0.44,38,25
3208_48,48,48,node.animation.addListener(mSetListener);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,4,1,0,2,0.68,40,26
3208_50,50,75,"if (mStartDelay <= 0) {
for (Node node : nodesToStart) {
node.animation.start();
mPlayingSet.add(node.animation);
}
} else {
mDelayAnim = ValueAnimator.ofFloat(0f, 1f);
mDelayAnim.setDuration(mStartDelay);
mDelayAnim.addListener(new AnimatorListenerAdapter() {
boolean canceled = false;
public void onAnimationCancel(Animator anim) {
canceled = true;
}
public void onAnimationEnd(Animator anim) {
if (!canceled) {
int numNodes = nodesToStart.size();
for (int i = 0; i < numNodes; ++i) {
Node node = nodesToStart.get(i);
node.animation.start();
mPlayingSet.add(node.animation);
}
}
}
});
mDelayAnim.start();
}",1,0,0,0,0,0,0,0,0,18,5,26,1,1,0,0,8,4,1,0,3,0.71,42,27
3208_51,51,54,"for (Node node : nodesToStart) {
node.animation.start();
mPlayingSet.add(node.animation);
}",0,0,0,1,0,0,0,0,0,2,1,4,0,0,0,0,8,4,1,0,2,0.71,43,27
3208_52,52,52,node.animation.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,1,0,1,0.66,44,28
3208_53,53,53,mPlayingSet.add(node.animation);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,1,0,2,0.7,45,29
3208_55,55,55,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,0,0.24,47,31
3208_56,56,56,"mDelayAnim = ValueAnimator.ofFloat(0f, 1f);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,1,0.61,48,31
3208_57,57,57,mDelayAnim.setDuration(mStartDelay);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,3,0.8,49,32
3208_58,58,58,mDelayAnim.addListener(new AnimatorListenerAdapter() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,1,0.55,50,33
3208_59,59,59,boolean canceled = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,4,1,0,0,0.29,51,34
3208_60,60,60,public void onAnimationCancel(Animator anim) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,1,0.61,52,35
3208_61,61,61,canceled = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,0,0.28,53,36
3208_63,63,63,public void onAnimationEnd(Animator anim) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,1,0.63,55,38
3208_64,64,71,"if (!canceled) {
int numNodes = nodesToStart.size();
for (int i = 0; i < numNodes; ++i) {
Node node = nodesToStart.get(i);
node.animation.start();
mPlayingSet.add(node.animation);
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,0,0,0,8,4,1,0,2,0.66,56,38
3208_65,65,65,int numNodes = nodesToStart.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,1,0,0,0.49,57,39
3208_66,66,70,"for (int i = 0; i < numNodes; ++i) {
Node node = nodesToStart.get(i);
node.animation.start();
mPlayingSet.add(node.animation);
}",0,0,1,0,0,0,0,0,0,3,1,5,0,1,0,0,8,4,1,0,2,0.68,58,40
3208_67,67,67,Node node = nodesToStart.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,1,0,0,0.5,59,41
3208_68,68,68,node.animation.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,1,0,1,0.66,60,42
3208_69,69,69,mPlayingSet.add(node.animation);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,1,0,2,0.7,61,43
3208_74,74,74,mDelayAnim.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,1,0.66,66,45
3208_76,76,83,"if (mListeners != null) {
ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();
int numListeners = tmpListeners.size();
for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationStart(this);
}
}",1,0,0,0,0,0,0,0,0,4,2,8,1,1,0,0,8,4,1,0,1,0.51,68,46
3208_77,77,78,"ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,8,4,1,0,1,0.51,69,46
3208_79,79,79,int numListeners = tmpListeners.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,1,0,0,0.39,71,48
3208_80,80,82,"for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationStart(this);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,8,4,1,0,1,0.52,72,48
3208_81,81,81,tmpListeners.get(i).onAnimationStart(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,1,0.56,73,49
3208_84,84,94,"if (mNodes.size() == 0 && mStartDelay == 0) {
mStarted = false;
if (mListeners != null) {
ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();
int numListeners = tmpListeners.size();
for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationEnd(this);
}
}
}",1,0,0,0,0,0,0,0,0,6,3,11,1,1,0,0,8,4,1,0,1,0.52,76,51
3208_85,85,85,mStarted = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,0,0.37,77,51
3208_86,86,93,"if (mListeners != null) {
ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();
int numListeners = tmpListeners.size();
for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationEnd(this);
}
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,0,0,8,4,1,0,1,0.5,78,52
3208_87,87,88,"ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,8,4,1,0,1,0.51,79,53
3208_89,89,89,int numListeners = tmpListeners.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,1,0,0,0.39,81,55
3208_90,90,92,"for (int i = 0; i < numListeners; ++i) {
tmpListeners.get(i).onAnimationEnd(this);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,8,4,1,0,1,0.52,82,55
3208_91,91,91,tmpListeners.get(i).onAnimationEnd(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,1,0.55,83,56
3207_1,1,2,"@Override
public void end() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,0,0,1,0.51,3,3
3207_3,3,3,mTerminated = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.33,2,2
3207_4,4,30,"if (isStarted()) {
if (mSortedNodes.size() != mNodes.size()) {
sortNodes();
for (Node node : mSortedNodes) {
if (mSetListener == null) {
mSetListener = new AnimatorSetListener(this);
}
node.animation.addListener(mSetListener);
}
}
if (mDelayAnim != null) {
mDelayAnim.cancel();
}
if (mSortedNodes.size() > 0) {
for (Node node : mSortedNodes) {
node.animation.end();
}
}
if (mListeners != null) {
ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();
for (AnimatorListener listener : tmpListeners) {
listener.onAnimationEnd(this);
}
}
mStarted = false;
}",1,0,0,0,0,0,0,0,0,16,4,27,0,0,0,0,5,3,0,0,4,0.73,0,0
3207_5,5,13,"if (mSortedNodes.size() != mNodes.size()) {
sortNodes();
for (Node node : mSortedNodes) {
if (mSetListener == null) {
mSetListener = new AnimatorSetListener(this);
}
node.animation.addListener(mSetListener);
}
}",1,0,0,0,0,0,0,0,0,5,3,9,0,0,0,0,5,3,0,0,2,0.65,0,0
3207_6,6,6,sortNodes();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,2,0.79,0,0
3207_7,7,12,"for (Node node : mSortedNodes) {
if (mSetListener == null) {
mSetListener = new AnimatorSetListener(this);
}
node.animation.addListener(mSetListener);
}",0,0,0,1,0,0,0,0,0,3,2,6,0,0,0,0,5,3,0,0,2,0.61,1,0
3207_8,8,10,"if (mSetListener == null) {
mSetListener = new AnimatorSetListener(this);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,3,0,0,0,0.41,2,1
3207_9,9,9,mSetListener = new AnimatorSetListener(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.43,3,2
3207_11,11,11,node.animation.addListener(mSetListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.52,5,4
3207_14,14,16,"if (mDelayAnim != null) {
mDelayAnim.cancel();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,3,0,0,0,0.43,8,5
3207_15,15,15,mDelayAnim.cancel();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.44,9,5
3207_17,17,21,"if (mSortedNodes.size() > 0) {
for (Node node : mSortedNodes) {
node.animation.end();
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,0,0,0,5,3,0,0,3,0.79,11,7
3207_18,18,20,"for (Node node : mSortedNodes) {
node.animation.end();
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,5,3,0,0,3,0.84,12,7
3207_19,19,19,node.animation.end();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,2,0.75,13,8
3207_22,22,28,"if (mListeners != null) {
ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();
for (AnimatorListener listener : tmpListeners) {
listener.onAnimationEnd(this);
}
}",1,0,0,0,0,0,0,0,0,3,2,7,0,0,0,0,5,3,0,0,1,0.48,16,10
3207_23,23,24,"ArrayList<AnimatorListener> tmpListeners =
(ArrayList<AnimatorListener>) mListeners.clone();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,3,0,0,0,0.43,17,10
3207_25,25,27,"for (AnimatorListener listener : tmpListeners) {
listener.onAnimationEnd(this);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,0,5,3,0,0,1,0.51,19,12
3207_26,26,26,listener.onAnimationEnd(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.58,20,12
3207_29,29,29,mStarted = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.57,23,14
3206_1,1,1,"@SuppressWarnings(""unchecked"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,0,0,0,0.36,12,9
3206_2,2,3,"@Override
public void cancel() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,8,0,0,1,0.53,10,8
3206_4,4,4,mTerminated = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,0,0,0,0.34,9,7
3206_5,5,26,"if (isStarted()) {
ArrayList<AnimatorListener> tmpListeners = null;
if (mListeners != null) {
tmpListeners = (ArrayList<AnimatorListener>) mListeners.clone();
for (AnimatorListener listener : tmpListeners) {
listener.onAnimationCancel(this);
}
}
if (mDelayAnim != null && mDelayAnim.isRunning()) {
mDelayAnim.cancel();
} else  if (mSortedNodes.size() > 0) {
for (Node node : mSortedNodes) {
node.animation.cancel();
}
}
if (tmpListeners != null) {
for (AnimatorListener listener : tmpListeners) {
listener.onAnimationEnd(this);
}
}
mStarted = false;
}",1,0,0,0,0,0,0,0,0,14,3,22,0,0,0,0,10,8,0,0,6,0.76,0,0
3206_6,6,6,ArrayList<AnimatorListener> tmpListeners = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,8,0,0,2,0.59,7,5
3206_7,7,12,"if (mListeners != null) {
tmpListeners = (ArrayList<AnimatorListener>) mListeners.clone();
for (AnimatorListener listener : tmpListeners) {
listener.onAnimationCancel(this);
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,0,10,8,0,0,3,0.71,1,1
3206_8,8,8,tmpListeners = (ArrayList<AnimatorListener>) mListeners.clone();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,8,0,0,2,0.63,5,3
3206_9,9,11,"for (AnimatorListener listener : tmpListeners) {
listener.onAnimationCancel(this);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,0,10,8,0,0,3,0.78,2,1
3206_10,10,10,listener.onAnimationCancel(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,0,0,3,0.82,3,1
3206_13,13,19,"if (mDelayAnim != null && mDelayAnim.isRunning()) {
mDelayAnim.cancel();
} else  if (mSortedNodes.size() > 0) {
for (Node node : mSortedNodes) {
node.animation.cancel();
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,0,0,10,8,0,0,3,0.65,0,0
3206_14,14,14,mDelayAnim.cancel();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,0,0,3,0.81,0,0
3206_15,15,15,} else  if (mSortedNodes.size() > 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,0,0,0,0.36,1,0
3206_16,16,18,"for (Node node : mSortedNodes) {
node.animation.cancel();
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,10,8,0,0,2,0.61,2,1
3206_17,17,17,node.animation.cancel();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,0,0,2,0.7,3,2
3206_20,20,24,"if (tmpListeners != null) {
for (AnimatorListener listener : tmpListeners) {
listener.onAnimationEnd(this);
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,0,0,0,10,8,0,0,3,0.72,6,4
3206_21,21,23,"for (AnimatorListener listener : tmpListeners) {
listener.onAnimationEnd(this);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,10,8,0,0,3,0.77,7,4
3206_22,22,22,listener.onAnimationEnd(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,0,0,3,0.8,8,5
3206_25,25,25,mStarted = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,0,0,1,0.51,11,7
3179_1,1,1,"    private PredicateGroup safeMerge(final PredicateGroup src, final PredicateGroup dest) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,2,0.69,10,6
3179_2,2,2,final PredicateGroup merged = dest.clone();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,4,2,0,2,0.6,9,5
3179_4,4,6,"StreamSupport.stream(
Spliterators.spliteratorUnknownSize(src.iterator(), Spliterator.ORDERED),
false).forEach(predicate -> {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,8,4,2,0,1,0.45,5,4
3179_8,8,13,"if (!PredicateConverter.GROUP_PARAMETER_PREFIX.equals(predicate.getName()) &&
PredicateGroup.TYPE.equals(predicate.getType())) {
merged.add(predicate.clone(true));
} else {
merged.add(predicate.clone(false));
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,1,0,8,4,2,0,3,0.6,0,0
3179_9,9,9,PredicateGroup.TYPE.equals(predicate.getType())) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,2,0.49,2,2
3179_10,10,10,merged.add(predicate.clone(true));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,1,0.41,1,1
3179_11,11,11,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.25,0,0
3179_12,12,12,merged.add(predicate.clone(false));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,1,0.41,0,0
3179_16,16,16,return merged;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,8,4,2,0,0,0.41,4,1
3178_1,1,1,"    private PredicateGroup safeMerge(final PredicateGroup src, final PredicateGroup dest) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,2,0.56,8,4
3178_2,2,2,final PredicateGroup merged = dest.clone();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,5,0,0,2,0.47,7,3
3178_4,4,6,"StreamSupport.stream(
Spliterators.spliteratorUnknownSize(src.iterator(), Spliterator.ORDERED),
false).forEach(predicate -> {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,7,5,0,0,1,0.41,3,2
3178_8,8,13,"if (!PredicateConverter.GROUP_PARAMETER_PREFIX.equals(predicate.getName()) &&
PredicateGroup.TYPE.equals(predicate.getType())) {
merged.add(predicate.clone(true));
} else {
merged.add(predicate.clone(false));
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,1,0,7,5,0,0,4,0.61,0,0
3178_9,9,9,PredicateGroup.TYPE.equals(predicate.getType())) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,2,0.41,0,0
3178_10,10,10,merged.add(predicate.clone(true));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,2,0.51,0,0
3178_11,11,11,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.35,1,0
3178_12,12,12,merged.add(predicate.clone(false));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,1,0.4,2,1
3178_16,16,16,return merged;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,5,0,0,0,0.35,6,3
3005_1,1,1,"public static void deleteTracks(@NonNull final Activity activity, @NonNull final List<Song> songs, @Nullable final List<Uri> safUris, @Nullable final Runnable callback) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,10,1,0,0,0.44,18,12
3005_2,2,2,final int songCount = songs.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,14,10,1,0,0,0.43,17,11
3005_3,3,3,final Discography discography = Discography.getInstance();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,14,10,1,0,0,0.33,16,10
3005_5,5,28,"try {
MusicPlayerRemote.removeFromQueue(songs);

final StringBuilder selection = new StringBuilder();
selection.append(BaseColumns._ID + "" IN ("");
for (int i = 0; i < songCount - 1; i++) {
selection.append(songs.get(i).id);
selection.append("","");
}
selection.append(songs.get(songCount - 1).id);
selection.append("")"");

activity.getContentResolver().delete(MediaStore.Audio.Media.EXTERNAL_CONTENT_URI,
selection.toString(), null);

if (Build.VERSION.SDK_INT < Build.VERSION_CODES.Q) {
for (int i = 0; i < songCount; i++) {
final Uri safUri = safUris == null || safUris.size() <= i ? null : safUris.get(i);
SAFUtil.delete(activity, songs.get(i).data, safUri);
}
}
} catch (SecurityException e) {
e.printStackTrace();
}",0,0,0,0,1,0,0,0,0,15,3,24,0,0,1,1,14,10,1,0,4,0.57,0,0
3005_6,6,6,MusicPlayerRemote.removeFromQueue(songs);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,14,10,1,0,1,0.51,13,8
3005_8,8,8,final StringBuilder selection = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,14,10,1,0,0,0.35,11,7
3005_9,9,9,"selection.append(BaseColumns._ID + "" IN ("");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,14,10,1,0,0,0.38,10,6
3005_10,10,13,"for (int i = 0; i < songCount - 1; i++) {
selection.append(songs.get(i).id);
selection.append("","");
}",0,0,1,0,0,0,0,0,0,2,1,4,1,1,0,0,14,10,1,0,0,0.44,6,3
3005_11,11,11,selection.append(songs.get(i).id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,14,10,1,0,0,0.45,8,4
3005_12,12,12,"selection.append("","");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,14,10,1,0,0,0.39,7,3
3005_14,14,14,selection.append(songs.get(songCount - 1).id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,14,10,1,0,0,0.44,5,2
3005_15,15,15,"selection.append("")"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,14,10,1,0,0,0.39,4,1
3005_17,17,18,"activity.getContentResolver().delete(MediaStore.Audio.Media.EXTERNAL_CONTENT_URI,
selection.toString(), null);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,14,10,1,0,2,0.54,1,0
3005_20,20,25,"if (Build.VERSION.SDK_INT < Build.VERSION_CODES.Q) {
for (int i = 0; i < songCount; i++) {
final Uri safUri = safUris == null || safUris.size() <= i ? null : safUris.get(i);
SAFUtil.delete(activity, songs.get(i).data, safUri);
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,1,0,14,10,1,0,1,0.48,0,0
3005_21,21,24,"for (int i = 0; i < songCount; i++) {
final Uri safUri = safUris == null || safUris.size() <= i ? null : safUris.get(i);
SAFUtil.delete(activity, songs.get(i).data, safUri);
}",0,0,1,0,0,0,0,0,0,2,1,4,0,0,0,0,14,10,1,0,0,0.44,1,0
3005_22,22,22,final Uri safUri = safUris == null || safUris.size() <= i ? null : safUris.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,14,10,1,0,0,0.37,2,1
3005_23,23,23,"SAFUtil.delete(activity, songs.get(i).data, safUri);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,14,10,1,0,0,0.44,3,2
3005_26,26,26,} catch (SecurityException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,10,1,0,0,0.33,6,4
3005_27,27,27,e.printStackTrace();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,10,1,0,0,0.4,7,4
3005_30,30,30,"activity.getContentResolver().notifyChange(Uri.parse(""content://media""), null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,14,10,1,0,1,0.44,10,6
3005_32,32,32,activity.runOnUiThread(() -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,14,10,1,0,0,0.3,12,7
3005_33,33,33,"Toast.makeText(activity, activity.getString(R.string.deleted_x_songs, songCount), Toast.LENGTH_SHORT).show();",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,10,1,0,0,0.43,13,7
3005_34,34,36,"if (callback != null) {
callback.run();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,14,10,1,0,0,0.33,14,8
3005_35,35,35,callback.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,10,1,0,0,0.31,15,9
3004_1,1,1,"public static void deleteTracks(@NonNull final Activity activity, @NonNull final List<Song> songs, @Nullable final List<Uri> safUris, @Nullable final Runnable callback) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.45,6,4
3004_2,2,2,final int songCount = songs.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.43,5,3
3004_3,3,3,final Discography discography = Discography.getInstance();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,0,0,0,0.22,4,2
3004_5,5,28,"try {
MusicPlayerRemote.removeFromQueue(songs);

final StringBuilder selection = new StringBuilder();
selection.append(BaseColumns._ID + "" IN ("");
for (int i = 0; i < songCount - 1; i++) {
selection.append(songs.get(i).id);
selection.append("","");
}
selection.append(songs.get(songCount - 1).id);
selection.append("")"");

activity.getContentResolver().delete(MediaStore.Audio.Media.EXTERNAL_CONTENT_URI,
selection.toString(), null);

if (Build.VERSION.SDK_INT < Build.VERSION_CODES.Q) {
for (int i = 0; i < songCount; i++) {
final Uri safUri = safUris == null || safUris.size() <= i ? null : safUris.get(i);
SAFUtil.delete(activity, songs.get(i).data, safUri);
}
}
} catch (SecurityException e) {
e.printStackTrace();
}",0,0,0,0,1,0,0,0,0,15,3,24,0,0,1,1,6,4,0,0,2,0.54,0,0
3004_6,6,6,MusicPlayerRemote.removeFromQueue(songs);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,0,0,1,0.48,1,0
3004_8,8,8,final StringBuilder selection = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,0,0,1,0.38,0,0
3004_9,9,9,"selection.append(BaseColumns._ID + "" IN ("");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,0,0,1,0.46,1,0
3004_10,10,13,"for (int i = 0; i < songCount - 1; i++) {
selection.append(songs.get(i).id);
selection.append("","");
}",0,0,1,0,0,0,0,0,0,2,1,4,1,1,0,0,6,4,0,0,1,0.52,2,1
3004_11,11,11,selection.append(songs.get(i).id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,0,0,1,0.51,3,2
3004_12,12,12,"selection.append("","");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,0,0,1,0.52,4,3
3004_14,14,14,selection.append(songs.get(songCount - 1).id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,0,0,1,0.49,6,5
3004_15,15,15,"selection.append("")"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,6,4,0,0,1,0.52,7,5
3004_17,17,18,"activity.getContentResolver().delete(MediaStore.Audio.Media.EXTERNAL_CONTENT_URI,
selection.toString(), null);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,6,4,0,0,1,0.46,9,7
3004_20,20,25,"if (Build.VERSION.SDK_INT < Build.VERSION_CODES.Q) {
for (int i = 0; i < songCount; i++) {
final Uri safUri = safUris == null || safUris.size() <= i ? null : safUris.get(i);
SAFUtil.delete(activity, songs.get(i).data, safUri);
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,1,0,6,4,0,0,0,0.39,12,8
3004_21,21,24,"for (int i = 0; i < songCount; i++) {
final Uri safUri = safUris == null || safUris.size() <= i ? null : safUris.get(i);
SAFUtil.delete(activity, songs.get(i).data, safUri);
}",0,0,1,0,0,0,0,0,0,2,1,4,0,0,0,0,6,4,0,0,0,0.39,13,8
3004_22,22,22,final Uri safUri = safUris == null || safUris.size() <= i ? null : safUris.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,4,0,0,0,0.32,14,9
3004_23,23,23,"SAFUtil.delete(activity, songs.get(i).data, safUri);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,0,0,0,0.38,15,10
3004_26,26,26,} catch (SecurityException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.22,18,12
3004_27,27,27,e.printStackTrace();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.33,19,12
3004_30,30,30,"activity.getContentResolver().notifyChange(Uri.parse(""content://media""), null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,0,0,0,0.3,22,14
3004_32,32,32,activity.runOnUiThread(() -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,0,0,0,0.21,24,15
3004_33,33,33,"Toast.makeText(activity, activity.getString(R.string.deleted_x_songs, songCount), Toast.LENGTH_SHORT).show();",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.4,25,15
3004_34,34,36,"if (callback != null) {
callback.run();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,4,0,0,0,0.19,26,16
3004_35,35,35,callback.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.18,27,17
3003_1,1,1,"public static void deleteTracks(@NonNull final Activity activity, @NonNull final List<Song> songs, @Nullable final List<Uri> safUris, @Nullable final Runnable callback) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,1,0.44,4,3
3003_2,2,2,final int songCount = songs.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.43,3,2
3003_3,3,3,final Discography discography = Discography.getInstance();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,4,0,0,0,0.23,2,1
3003_5,5,28,"try {
MusicPlayerRemote.removeFromQueue(songs);

final StringBuilder selection = new StringBuilder();
selection.append(BaseColumns._ID + "" IN ("");
for (int i = 0; i < songCount - 1; i++) {
selection.append(songs.get(i).id);
selection.append("","");
}
selection.append(songs.get(songCount - 1).id);
selection.append("")"");

activity.getContentResolver().delete(MediaStore.Audio.Media.EXTERNAL_CONTENT_URI,
selection.toString(), null);

if (Build.VERSION.SDK_INT < Build.VERSION_CODES.Q) {
for (int i = 0; i < songCount; i++) {
final Uri safUri = safUris == null || safUris.size() <= i ? null : safUris.get(i);
SAFUtil.delete(activity, songs.get(i).data, safUri);
}
}
} catch (SecurityException e) {
e.printStackTrace();
}",0,0,0,0,1,0,0,0,0,15,3,24,0,0,1,1,7,4,0,0,3,0.58,0,0
3003_6,6,6,MusicPlayerRemote.removeFromQueue(songs);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,4,0,0,1,0.5,0,0
3003_8,8,8,final StringBuilder selection = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,4,0,0,1,0.39,2,1
3003_9,9,9,"selection.append(BaseColumns._ID + "" IN ("");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,4,0,0,1,0.46,3,1
3003_10,10,13,"for (int i = 0; i < songCount - 1; i++) {
selection.append(songs.get(i).id);
selection.append("","");
}",0,0,1,0,0,0,0,0,0,2,1,4,1,1,0,0,7,4,0,0,2,0.58,4,2
3003_11,11,11,selection.append(songs.get(i).id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,4,0,0,1,0.5,5,3
3003_12,12,12,"selection.append("","");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,4,0,0,1,0.51,6,4
3003_14,14,14,selection.append(songs.get(songCount - 1).id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,4,0,0,2,0.57,8,6
3003_15,15,15,"selection.append("")"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,7,4,0,0,1,0.51,9,6
3003_17,17,18,"activity.getContentResolver().delete(MediaStore.Audio.Media.EXTERNAL_CONTENT_URI,
selection.toString(), null);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,7,4,0,0,1,0.45,11,8
3003_20,20,25,"if (Build.VERSION.SDK_INT < Build.VERSION_CODES.Q) {
for (int i = 0; i < songCount; i++) {
final Uri safUri = safUris == null || safUris.size() <= i ? null : safUris.get(i);
SAFUtil.delete(activity, songs.get(i).data, safUri);
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,1,0,7,4,0,0,0,0.42,14,9
3003_21,21,24,"for (int i = 0; i < songCount; i++) {
final Uri safUri = safUris == null || safUris.size() <= i ? null : safUris.get(i);
SAFUtil.delete(activity, songs.get(i).data, safUri);
}",0,0,1,0,0,0,0,0,0,2,1,4,0,0,0,0,7,4,0,0,0,0.43,15,9
3003_22,22,22,final Uri safUri = safUris == null || safUris.size() <= i ? null : safUris.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,7,4,0,0,0,0.36,16,10
3003_23,23,23,"SAFUtil.delete(activity, songs.get(i).data, safUri);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,4,0,0,0,0.41,17,11
3003_26,26,26,} catch (SecurityException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.29,20,13
3003_27,27,27,e.printStackTrace();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.4,21,13
3003_30,30,30,"activity.getContentResolver().notifyChange(Uri.parse(""content://media""), null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,4,0,0,0,0.33,24,15
3003_32,32,32,activity.runOnUiThread(() -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,4,0,0,0,0.23,26,16
3003_33,33,33,"Toast.makeText(activity, activity.getString(R.string.deleted_x_songs, songCount), Toast.LENGTH_SHORT).show();",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.41,27,16
3003_34,34,36,"if (callback != null) {
callback.run();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,4,0,0,0,0.22,28,17
3003_35,35,35,callback.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.2,29,18
2983_1,1,1,private String generateSparqlWhereFromAskValidator(String sparqlString) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.4,5,1
2983_2,2,5,"final String valuePath = shape.getPath()
.map(ShapePath::asSparqlPropertyPath)
.map(propertyPath -> "" $this "" + propertyPath + "" $value . "")
.orElse("" BIND ($this AS $value) . "");",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,9,5,2,0,0,0.38,1,0
2983_7,7,8,"Matcher filterMatcher = patternForExtractingFilterFromSimpleAskValidator
.matcher(sparqlString.trim());",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,9,5,2,0,3,0.67,0,0
2983_10,10,15,"if (filterMatcher.find()) {
String extractedFilter = filterMatcher.group(1);
return constructAskQueryBasedOnExtractedFilter(valuePath, extractedFilter);
} else {
return constructAskSparqlBasedOnOriginalWithMinus(sparqlString, valuePath);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,1,0,9,5,2,0,2,0.55,3,1
2983_11,11,11,String extractedFilter = filterMatcher.group(1);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,2,0,2,0.62,4,1
2983_12,12,12,"return constructAskQueryBasedOnExtractedFilter(valuePath, extractedFilter);",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,9,5,2,0,2,0.54,5,2
2983_13,13,13,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.25,6,3
2983_14,14,14,"return constructAskSparqlBasedOnOriginalWithMinus(sparqlString, valuePath);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.34,7,4
2940_1,1,2,"      @Override
protected void onTokenInput(Object tokenId) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.35,23,16
2940_3,3,3,Set<Object> set = (Set<Object>) getValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.37,22,15
2940_4,4,4,SchemaSource s = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.36,21,14
2940_5,5,16,"if (tokenId != null) {
if (tokenId instanceof SchemaSource) {
s = SchemaSourceFactory.copySchemaSource((SchemaSource) tokenId);
}
if (tokenId instanceof String) {
Optional<SchemaSource> src = SchemaService
.getSourceFromPrefix(RDFUnitDemoSession.getBaseDir(), (String) tokenId);
if (src.isPresent()) {
s = SchemaSourceFactory.copySchemaSource(src.get());
}
}
}",1,0,0,0,0,0,0,0,0,6,3,12,0,1,0,1,3,3,0,0,0,0.45,9,7
2940_6,6,8,"if (tokenId instanceof SchemaSource) {
s = SchemaSourceFactory.copySchemaSource((SchemaSource) tokenId);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,3,3,0,0,0,0.39,17,11
2940_7,7,7,s = SchemaSourceFactory.copySchemaSource((SchemaSource) tokenId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.39,18,11
2940_9,9,15,"if (tokenId instanceof String) {
Optional<SchemaSource> src = SchemaService
.getSourceFromPrefix(RDFUnitDemoSession.getBaseDir(), (String) tokenId);
if (src.isPresent()) {
s = SchemaSourceFactory.copySchemaSource(src.get());
}
}",1,0,0,0,0,0,0,0,0,3,2,7,1,1,0,0,3,3,0,0,0,0.45,10,7
2940_10,10,11,"Optional<SchemaSource> src = SchemaService
.getSourceFromPrefix(RDFUnitDemoSession.getBaseDir(), (String) tokenId);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,3,3,0,0,0,0.44,14,9
2940_12,12,14,"if (src.isPresent()) {
s = SchemaSourceFactory.copySchemaSource(src.get());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,0,0.47,11,7
2940_13,13,13,s = SchemaSourceFactory.copySchemaSource(src.get());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.47,12,7
2940_18,18,28,"if (set != null && set.contains(s)) {
Notification.show(getTokenCaption(tokenId)
+ "" already exists"");
} else {
if (s == null || !cb.containsId(s)) {
UI.getCurrent().addWindow(new EditContactWindow(
tokenId != null ? tokenId.toString() : """", this));
} else {
addToken(SchemaSourceFactory.copySchemaSource(s));
}
}",1,0,0,0,0,0,0,0,0,7,2,11,0,0,1,0,3,3,0,0,1,0.57,0,0
2940_19,19,19,Notification.show(getTokenCaption(tokenId),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.4,6,5
2940_20,20,20,"+ "" already exists"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.19,5,4
2940_21,21,21,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.17,4,3
2940_22,22,27,"if (s == null || !cb.containsId(s)) {
UI.getCurrent().addWindow(new EditContactWindow(
tokenId != null ? tokenId.toString() : """", this));
} else {
addToken(SchemaSourceFactory.copySchemaSource(s));
}",1,0,0,0,0,0,0,0,0,3,1,6,0,0,0,0,3,3,0,0,1,0.58,0,0
2940_23,23,24,"UI.getCurrent().addWindow(new EditContactWindow(
tokenId != null ? tokenId.toString() : """", this));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,1,0.47,1,1
2940_25,25,25,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.17,0,0
2940_26,26,26,addToken(SchemaSourceFactory.copySchemaSource(s));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.54,0,0
2931_1,1,1,"public static void setVMEnv(Map<String, String> environment, Configuration conf) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.59,7,5
2931_2,2,2,String setEnv = getChildEnv(conf);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.53,6,4
2931_3,3,7,"try {
Apps.setEnvFromInputString(environment, setEnv);
} catch (Exception x) {
LOG.error(""set ps env faile."", x);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,1,0,1,4,2,1,0,3,0.72,1,0
2931_4,4,4,"Apps.setEnvFromInputString(environment, setEnv);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.66,4,2
2931_5,5,5,} catch (Exception x) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.4,3,1
2931_6,6,6,"LOG.error(""set ps env faile."", x);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.67,2,0
2931_9,9,9,"environment.put(""HADOOP_ROOT_LOGGER"", getChildLogLevel(conf) + "",CLA"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,3,0.71,0,0
2931_11,11,11,"String hadoopClientOpts = System.getenv(""HADOOP_CLIENT_OPTS"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.46,2,1
2931_12,12,16,"if (hadoopClientOpts == null) {
hadoopClientOpts = """";
} else {
hadoopClientOpts = hadoopClientOpts + "" "";
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,1,4,2,1,0,0,0.46,3,1
2931_13,13,13,"hadoopClientOpts = """";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.48,4,2
2931_14,14,14,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.18,5,3
2931_15,15,15,"hadoopClientOpts = hadoopClientOpts + "" "";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.48,6,4
2931_18,18,18,long logSize = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,2,1,0,1,0.41,9,6
2931_19,19,19,Vector<String> logProps = new Vector<String>(4);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.46,10,6
2931_20,20,20,"setupLog4jProperties(conf, logProps, logSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.56,11,7
2931_21,21,21,Iterator<String> it = logProps.iterator();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.47,12,8
2931_22,22,22,StringBuilder buffer = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.22,13,9
2931_23,23,25,"while (it.hasNext()) {
buffer.append("" "").append(it.next());
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,2,1,0,0,0.25,14,10
2931_24,24,24,"buffer.append("" "").append(it.next());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.26,15,11
2931_26,26,26,hadoopClientOpts = hadoopClientOpts + buffer.toString();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.45,17,13
2931_27,27,27,"environment.put(""HADOOP_CLIENT_OPTS"", hadoopClientOpts);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.55,18,13
2930_1,1,1,"public static void setVMEnv(Map<String, String> environment, Configuration conf) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.5,0,0
2930_2,2,2,String setEnv = getChildEnv(conf);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,1,0.5,0,0
2930_3,3,7,"try {
Apps.setEnvFromInputString(environment, setEnv);
} catch (Exception x) {
LOG.error(""set ps env faile."", x);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,1,0,1,5,2,1,0,1,0.52,1,0
2930_4,4,4,"Apps.setEnvFromInputString(environment, setEnv);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.53,2,1
2930_5,5,5,} catch (Exception x) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.31,3,2
2930_6,6,6,"LOG.error(""set ps env faile."", x);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.5,4,3
2930_9,9,9,"environment.put(""HADOOP_ROOT_LOGGER"", getChildLogLevel(conf) + "",CLA"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,2,1,0,0,0.46,7,5
2930_11,11,11,"String hadoopClientOpts = System.getenv(""HADOOP_CLIENT_OPTS"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,0,0.49,9,6
2930_12,12,16,"if (hadoopClientOpts == null) {
hadoopClientOpts = """";
} else {
hadoopClientOpts = hadoopClientOpts + "" "";
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,1,5,2,1,0,0,0.47,10,6
2930_13,13,13,"hadoopClientOpts = """";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.49,11,7
2930_14,14,14,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.11,12,8
2930_15,15,15,"hadoopClientOpts = hadoopClientOpts + "" "";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.49,13,9
2930_18,18,18,long logSize = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,2,1,0,0,0.25,16,11
2930_19,19,19,Vector<String> logProps = new Vector<String>(4);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.39,17,11
2930_20,20,20,"setupLog4jProperties(conf, logProps, logSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.37,18,12
2930_21,21,21,Iterator<String> it = logProps.iterator();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.34,19,13
2930_22,22,22,StringBuilder buffer = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.31,20,14
2930_23,23,25,"while (it.hasNext()) {
buffer.append("" "").append(it.next());
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,2,1,0,0,0.35,21,15
2930_24,24,24,"buffer.append("" "").append(it.next());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.37,22,16
2930_26,26,26,hadoopClientOpts = hadoopClientOpts + buffer.toString();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.47,24,18
2930_27,27,27,"environment.put(""HADOOP_CLIENT_OPTS"", hadoopClientOpts);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.49,25,18
2919_1,1,2,"@Override
public List<InternetAddress> sendEmail(String templatePath, Map<String, String> emailParams, Map<String, DataSource> attachments, InternetAddress... recipients) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,4,1,0,3,0.58,18,12
2919_4,4,4,List<InternetAddress> failureList = new ArrayList<InternetAddress>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,8,4,1,0,1,0.45,16,11
2919_6,6,8,"if (recipients == null || recipients.length <= 0) {
throw new IllegalArgumentException(MSG_INVALID_RECIPIENTS);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,8,4,1,0,2,0.56,12,9
2919_7,7,7,throw new IllegalArgumentException(MSG_INVALID_RECIPIENTS);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,4,1,0,2,0.54,13,9
2919_10,10,10,final MailTemplate mailTemplate = this.getMailTemplate(templatePath);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,8,4,1,0,1,0.47,10,8
2919_11,11,11,final Class<? extends Email> mailType;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,1,0,1,0.43,9,7
2919_12,12,16,"if (attachments != null && attachments.size() > 0) {
mailType = HtmlEmail.class;
} else {
mailType = this.getMailType(templatePath);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,8,4,1,0,3,0.57,4,3
2919_13,13,13,mailType = HtmlEmail.class;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,1,0.43,7,5
2919_14,14,14,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,0,0.25,6,4
2919_15,15,15,mailType = this.getMailType(templatePath);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,1,0.47,5,3
2919_17,17,17,final MessageGateway<Email> messageGateway = messageGatewayService.getGateway(mailType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,8,4,1,0,2,0.49,3,2
2919_19,19,35,"for (final InternetAddress address : recipients) {
try {
Email email = getEmail(mailTemplate, mailType, emailParams);
email.setTo(Collections.singleton(address));

if (attachments != null && attachments.size() > 0) {
for (Map.Entry<String, DataSource> entry : attachments.entrySet()) {
((HtmlEmail) email).attach(entry.getValue(), entry.getKey(), null);
}
}

messageGateway.send(email);
} catch (EmailException | IOException | MessagingException e) {
failureList.add(address);
log.error(""Error sending email to [ "" + address + "" ]"", e);
}
}",0,0,0,1,0,0,0,0,0,10,4,17,0,0,1,1,8,4,1,0,4,0.62,0,0
2919_20,20,34,"try {
Email email = getEmail(mailTemplate, mailType, emailParams);
email.setTo(Collections.singleton(address));

if (attachments != null && attachments.size() > 0) {
for (Map.Entry<String, DataSource> entry : attachments.entrySet()) {
((HtmlEmail) email).attach(entry.getValue(), entry.getKey(), null);
}
}

messageGateway.send(email);
} catch (EmailException | IOException | MessagingException e) {
failureList.add(address);
log.error(""Error sending email to [ "" + address + "" ]"", e);
}",0,0,0,0,1,0,0,0,0,9,3,15,0,0,0,0,8,4,1,0,3,0.59,0,0
2919_21,21,21,"Email email = getEmail(mailTemplate, mailType, emailParams);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,1,0,2,0.62,0,0
2919_22,22,22,email.setTo(Collections.singleton(address));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,8,4,1,0,1,0.46,1,0
2919_24,24,28,"if (attachments != null && attachments.size() > 0) {
for (Map.Entry<String, DataSource> entry : attachments.entrySet()) {
((HtmlEmail) email).attach(entry.getValue(), entry.getKey(), null);
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,0,1,1,8,4,1,0,3,0.57,3,2
2919_25,25,27,"for (Map.Entry<String, DataSource> entry : attachments.entrySet()) {
((HtmlEmail) email).attach(entry.getValue(), entry.getKey(), null);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,8,4,1,0,3,0.55,4,2
2919_26,26,26,"((HtmlEmail) email).attach(entry.getValue(), entry.getKey(), null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,3,0.57,5,3
2919_30,30,30,messageGateway.send(email);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,4,1,0,1,0.5,9,5
2919_31,31,31,} catch (EmailException | IOException | MessagingException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,1,0.44,10,5
2919_32,32,32,failureList.add(address);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,1,0,0,0.35,11,6
2919_33,33,33,"log.error(""Error sending email to [ "" + address + "" ]"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,1,0,1,0.41,12,7
2919_37,37,37,return failureList;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,8,4,1,0,0,0.31,16,9
2918_1,1,3,"@Override
public List<InternetAddress> sendEmail(final String templatePath, final Map<String, String> emailParams,
final InternetAddress... recipients) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,8,4,1,0,2,0.53,13,8
2918_5,5,5,List<InternetAddress> failureList = new ArrayList<InternetAddress>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,8,4,1,0,1,0.45,11,7
2918_7,7,9,"if (recipients == null || recipients.length <= 0) {
throw new IllegalArgumentException(MSG_INVALID_RECIPIENTS);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,8,4,1,0,2,0.56,7,5
2918_8,8,8,throw new IllegalArgumentException(MSG_INVALID_RECIPIENTS);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,4,1,0,2,0.54,8,5
2918_11,11,11,final MailTemplate mailTemplate = this.getMailTemplate(templatePath);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,8,4,1,0,1,0.47,5,4
2918_12,12,12,final Class<? extends Email> mailType = this.getMailType(templatePath);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,1,0,2,0.5,4,3
2918_13,13,13,final MessageGateway<Email> messageGateway = messageGatewayService.getGateway(mailType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,8,4,1,0,2,0.49,3,2
2918_15,15,24,"for (final InternetAddress address : recipients) {
try {
final Email email = getEmail(mailTemplate, mailType, emailParams);
email.setTo(Collections.singleton(address));
messageGateway.send(email);
} catch (EmailException | IOException | MessagingException e) {
failureList.add(address);
log.error(""Error sending email to [ "" + address + "" ]"", e);
}
}",0,0,0,1,0,0,0,0,0,7,2,10,0,0,1,1,8,4,1,0,3,0.58,0,0
2918_16,16,23,"try {
final Email email = getEmail(mailTemplate, mailType, emailParams);
email.setTo(Collections.singleton(address));
messageGateway.send(email);
} catch (EmailException | IOException | MessagingException e) {
failureList.add(address);
log.error(""Error sending email to [ "" + address + "" ]"", e);
}",0,0,0,0,1,0,0,0,0,6,1,8,0,0,0,0,8,4,1,0,2,0.54,0,0
2918_17,17,17,"final Email email = getEmail(mailTemplate, mailType, emailParams);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,1,0,2,0.6,0,0
2918_18,18,18,email.setTo(Collections.singleton(address));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,1,0,1,0.46,1,0
2918_19,19,19,messageGateway.send(email);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,1,0,1,0.5,2,1
2918_20,20,20,} catch (EmailException | IOException | MessagingException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,1,0.44,3,2
2918_21,21,21,failureList.add(address);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,1,0,0,0.35,4,3
2918_22,22,22,"log.error(""Error sending email to [ "" + address + "" ]"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,1,0,1,0.41,5,4
2918_26,26,26,return failureList;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,8,4,1,0,0,0.31,9,6
2902_1,1,2,"    @Override
public boolean onTouchEvent(MotionEvent e) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.41,2,1
2902_3,3,3,mDetector.onTouchEvent(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.37,1,0
2902_5,5,7,"if (e.getAction() == MotionEvent.ACTION_UP && mIsScrolling) {
scrollFinished();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,2,0.68,0,0
2902_6,6,6,scrollFinished();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.91,1,0
2902_9,9,9,return super.onTouchEvent(e);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.37,4,2
2888_1,1,1,    private boolean smartSizesSupported() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,3,0.77,0,0
2888_2,2,2,"return !StringUtils.equals(mimeType, MIME_TYPE_IMAGE_SVG);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,2,0.44,0,0
2873_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,0,0,0,0.39,9,7
2873_2,2,4,"if (context.getPartReplication() > 1 && context.getPSAttemptId().getIndex() > 0) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,2,0,0,1,0.4,6,5
2873_3,3,3,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,0,0,0,0.13,7,5
2873_6,6,79,"if (context.getPSAttemptId().getIndex() > 0) {
int matrixNum = matrixMetas.size();
List<PSMatrixLoadContext> matrixLoadContexts = new ArrayList<>(matrixMetas.size());
SnapshotRecover recover = new SnapshotRecover(context);
for (int i = 0; i < matrixNum; i++) {
Path inputPath = null;
try {
inputPath = recover.getSnapshotPath(matrixMetas.get(i).getId());
} catch (IOException e) {
LOG.error(""Get snapshot path failed, "", e);
}

if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getCheckpoints(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(
""Get checkpoint results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}

if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getSaveResult(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(""Get save results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}

if (inputPath != null) {
LOG.info(""Load matrix "" + matrixMetas.get(i).getName() + "" from "" + inputPath.toString());
matrixLoadContexts.add(new PSMatrixLoadContext(matrixMetas.get(i).getId(),
inputPath.toString(),
new ArrayList<>(matrixMetas.get(i).getPartitionMetas().keySet()),
SnapshotFormat.class.getName()));
} else {
if (matrixMetas.get(i).getInitFunc() != null) {
LOG.info(""Matrix "" + matrixMetas.get(i) + "" has a init function "" + matrixMetas.get(i)
.getInitFunc().getClass().getName() + "", use this function to reinit the matrix"");
long startTs = System.currentTimeMillis();
matrixMetas.get(i).getInitFunc()
.init(context.getMatrixStorageManager().getMatrix(matrixMetas.get(i).getId()));
LOG.info(""Reinit the matrix use time "" + (System.currentTimeMillis() - startTs));
}
}
}

if (!matrixLoadContexts.isEmpty()) {
context.getIOExecutors().load(new PSMatricesLoadContext(-1, -1, matrixLoadContexts));
}
}",1,0,0,0,0,0,0,0,0,44,5,74,0,0,1,0,5,2,0,0,3,0.54,0,0
2873_7,7,7,int matrixNum = matrixMetas.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,5,2,0,0,0,0.36,3,3
2873_8,8,8,List<PSMatrixLoadContext> matrixLoadContexts = new ArrayList<>(matrixMetas.size());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,5,2,0,0,0,0.31,2,2
2873_9,9,9,SnapshotRecover recover = new SnapshotRecover(context);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,0,0,1,0.48,1,1
2873_10,10,74,"for (int i = 0; i < matrixNum; i++) {
Path inputPath = null;
try {
inputPath = recover.getSnapshotPath(matrixMetas.get(i).getId());
} catch (IOException e) {
LOG.error(""Get snapshot path failed, "", e);
}

if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getCheckpoints(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(
""Get checkpoint results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}

if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getSaveResult(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(""Get save results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}

if (inputPath != null) {
LOG.info(""Load matrix "" + matrixMetas.get(i).getName() + "" from "" + inputPath.toString());
matrixLoadContexts.add(new PSMatrixLoadContext(matrixMetas.get(i).getId(),
inputPath.toString(),
new ArrayList<>(matrixMetas.get(i).getPartitionMetas().keySet()),
SnapshotFormat.class.getName()));
} else {
if (matrixMetas.get(i).getInitFunc() != null) {
LOG.info(""Matrix "" + matrixMetas.get(i) + "" has a init function "" + matrixMetas.get(i)
.getInitFunc().getClass().getName() + "", use this function to reinit the matrix"");
long startTs = System.currentTimeMillis();
matrixMetas.get(i).getInitFunc()
.init(context.getMatrixStorageManager().getMatrix(matrixMetas.get(i).getId()));
LOG.info(""Reinit the matrix use time "" + (System.currentTimeMillis() - startTs));
}
}
}",0,0,1,0,0,0,0,0,0,38,4,65,0,1,0,1,5,2,0,0,3,0.54,0,0
2873_11,11,11,Path inputPath = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,0,0,0,0.25,0,0
2873_12,12,16,"try {
inputPath = recover.getSnapshotPath(matrixMetas.get(i).getId());
} catch (IOException e) {
LOG.error(""Get snapshot path failed, "", e);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,1,0,1,5,2,0,0,1,0.43,1,0
2873_13,13,13,inputPath = recover.getSnapshotPath(matrixMetas.get(i).getId());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,0,0,1,0.42,2,1
2873_14,14,14,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,0,0,0,0.35,3,2
2873_15,15,15,"LOG.error(""Get snapshot path failed, "", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,0,0,1,0.4,4,3
2873_18,18,37,"if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getCheckpoints(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(
""Get checkpoint results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}",1,0,0,0,0,0,0,0,0,10,3,20,0,0,1,1,5,2,0,0,1,0.42,7,5
2873_19,19,36,"try {
List<SaveResult> saveResults = master.getCheckpoints(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(
""Get checkpoint results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}",0,0,0,0,1,0,0,0,0,9,2,18,0,0,0,0,5,2,0,0,1,0.43,8,5
2873_20,20,20,List<SaveResult> saveResults = master.getCheckpoints(matrixMetas.get(i).getId());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,2,0,0,0,0.35,9,6
2873_21,21,31,"if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}",1,0,0,0,0,0,0,0,0,5,1,11,1,1,0,0,5,2,0,0,1,0.42,10,7
2873_22,22,22,"LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,0,0,0,0.36,11,8
2873_23,23,23,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,0,0,0,0.24,12,9
2873_24,24,24,inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,0,0,1,0.39,13,10
2873_25,25,28,"LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()",0,0,0,0,0,0,0,0,0,0,0,4,1,1,0,0,5,2,0,0,0,0.35,14,11
2873_29,29,30,"+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,5,2,0,0,1,0.41,18,13
2873_32,32,32,} catch (ServiceException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,0,0,0,0.31,21,14
2873_33,33,35,"LOG.error(
""Get checkpoint results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,5,2,0,0,0,0.37,22,14
2873_39,39,56,"if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getSaveResult(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(""Get save results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}",1,0,0,0,0,0,0,0,0,10,3,18,0,0,1,1,5,2,0,0,2,0.47,28,16
2873_40,40,55,"try {
List<SaveResult> saveResults = master.getSaveResult(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(""Get save results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}",0,0,0,0,1,0,0,0,0,9,2,16,0,0,0,0,5,2,0,0,2,0.47,29,16
2873_41,41,41,List<SaveResult> saveResults = master.getSaveResult(matrixMetas.get(i).getId());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,2,0,0,0,0.31,30,17
2873_42,42,51,"if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}",1,0,0,0,0,0,0,0,0,5,1,10,1,1,0,0,5,2,0,0,2,0.47,31,18
2873_43,43,43,"LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,0,0,1,0.4,32,19
2873_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,0,0,0,0.24,33,20
2873_45,45,45,inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,0,0,1,0.39,34,21
2873_46,46,48,"LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()",0,0,0,0,0,0,0,0,0,0,0,3,1,1,0,0,5,2,0,0,1,0.38,35,22
2873_49,49,50,"+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,5,2,0,0,1,0.41,38,24
2873_52,52,52,} catch (ServiceException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,0,0,0,0.31,41,25
2873_53,53,54,"LOG.error(""Get save results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,2,0,0,0,0.31,42,25
2873_58,58,73,"if (inputPath != null) {
LOG.info(""Load matrix "" + matrixMetas.get(i).getName() + "" from "" + inputPath.toString());
matrixLoadContexts.add(new PSMatrixLoadContext(matrixMetas.get(i).getId(),
inputPath.toString(),
new ArrayList<>(matrixMetas.get(i).getPartitionMetas().keySet()),
SnapshotFormat.class.getName()));
} else {
if (matrixMetas.get(i).getInitFunc() != null) {
LOG.info(""Matrix "" + matrixMetas.get(i) + "" has a init function "" + matrixMetas.get(i)
.getInitFunc().getClass().getName() + "", use this function to reinit the matrix"");
long startTs = System.currentTimeMillis();
matrixMetas.get(i).getInitFunc()
.init(context.getMatrixStorageManager().getMatrix(matrixMetas.get(i).getId()));
LOG.info(""Reinit the matrix use time "" + (System.currentTimeMillis() - startTs));
}
}",1,0,0,0,0,0,0,0,0,10,2,16,0,0,1,0,5,2,0,0,1,0.41,47,27
2873_59,59,59,"LOG.info(""Load matrix "" + matrixMetas.get(i).getName() + "" from "" + inputPath.toString());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,0,0,0,0.31,48,27
2873_60,60,63,"matrixLoadContexts.add(new PSMatrixLoadContext(matrixMetas.get(i).getId(),
inputPath.toString(),
new ArrayList<>(matrixMetas.get(i).getPartitionMetas().keySet()),
SnapshotFormat.class.getName()));",0,0,0,0,0,0,0,0,0,0,0,4,1,1,0,0,5,2,0,0,1,0.42,49,28
2873_64,64,64,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,0,0,0,0.24,53,30
2873_65,65,72,"if (matrixMetas.get(i).getInitFunc() != null) {
LOG.info(""Matrix "" + matrixMetas.get(i) + "" has a init function "" + matrixMetas.get(i)
.getInitFunc().getClass().getName() + "", use this function to reinit the matrix"");
long startTs = System.currentTimeMillis();
matrixMetas.get(i).getInitFunc()
.init(context.getMatrixStorageManager().getMatrix(matrixMetas.get(i).getId()));
LOG.info(""Reinit the matrix use time "" + (System.currentTimeMillis() - startTs));
}",1,0,0,0,0,0,0,0,0,6,1,8,0,0,0,0,5,2,0,0,0,0.34,54,30
2873_66,66,66,"LOG.info(""Matrix "" + matrixMetas.get(i) + "" has a init function "" + matrixMetas.get(i)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,0,0,0,0.33,55,31
2873_67,67,67,".getInitFunc().getClass().getName() + "", use this function to reinit the matrix"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,0,0,0,0.33,56,32
2873_68,68,68,long startTs = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,2,0,0,0,0.27,57,33
2873_69,69,69,matrixMetas.get(i).getInitFunc(),0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,0,0,0,0.33,58,34
2873_70,70,70,.init(context.getMatrixStorageManager().getMatrix(matrixMetas.get(i).getId()));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,0,0,0,0.32,59,35
2873_71,71,71,"LOG.info(""Reinit the matrix use time "" + (System.currentTimeMillis() - startTs));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,0,0,0,0.3,60,36
2873_76,76,78,"if (!matrixLoadContexts.isEmpty()) {
context.getIOExecutors().load(new PSMatricesLoadContext(-1, -1, matrixLoadContexts));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,5,2,0,0,1,0.44,65,38
2873_77,77,77,"context.getIOExecutors().load(new PSMatricesLoadContext(-1, -1, matrixLoadContexts));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,0,0,1,0.45,66,38
2872_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,5,1,0,0,0.28,37,23
2872_2,2,4,"if (context.getPartReplication() > 1 && context.getPSAttemptId().getIndex() > 0) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,8,5,1,0,0,0.32,34,21
2872_3,3,3,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.18,35,21
2872_6,6,79,"if (context.getPSAttemptId().getIndex() > 0) {
int matrixNum = matrixMetas.size();
List<PSMatrixLoadContext> matrixLoadContexts = new ArrayList<>(matrixMetas.size());
SnapshotRecover recover = new SnapshotRecover(context);
for (int i = 0; i < matrixNum; i++) {
Path inputPath = null;
try {
inputPath = recover.getSnapshotPath(matrixMetas.get(i).getId());
} catch (IOException e) {
LOG.error(""Get snapshot path failed, "", e);
}

if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getCheckpoints(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(
""Get checkpoint results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}

if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getSaveResult(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(""Get save results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}

if (inputPath != null) {
LOG.info(""Load matrix "" + matrixMetas.get(i).getName() + "" from "" + inputPath.toString());
matrixLoadContexts.add(new PSMatrixLoadContext(matrixMetas.get(i).getId(),
inputPath.toString(),
new ArrayList<>(matrixMetas.get(i).getPartitionMetas().keySet()),
SnapshotFormat.class.getName()));
} else {
if (matrixMetas.get(i).getInitFunc() != null) {
LOG.info(""Matrix "" + matrixMetas.get(i) + "" has a init function "" + matrixMetas.get(i)
.getInitFunc().getClass().getName() + "", use this function to reinit the matrix"");
long startTs = System.currentTimeMillis();
matrixMetas.get(i).getInitFunc()
.init(context.getMatrixStorageManager().getMatrix(matrixMetas.get(i).getId()));
LOG.info(""Reinit the matrix use time "" + (System.currentTimeMillis() - startTs));
}
}
}

if (!matrixLoadContexts.isEmpty()) {
context.getIOExecutors().load(new PSMatricesLoadContext(-1, -1, matrixLoadContexts));
}
}",1,0,0,0,0,0,0,0,0,44,5,74,0,0,1,0,8,5,1,0,6,0.67,0,0
2872_7,7,7,int matrixNum = matrixMetas.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,8,5,1,0,0,0.35,31,19
2872_8,8,8,List<PSMatrixLoadContext> matrixLoadContexts = new ArrayList<>(matrixMetas.size());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,8,5,1,0,1,0.43,30,18
2872_9,9,9,SnapshotRecover recover = new SnapshotRecover(context);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,1,0,0,0.36,29,17
2872_10,10,74,"for (int i = 0; i < matrixNum; i++) {
Path inputPath = null;
try {
inputPath = recover.getSnapshotPath(matrixMetas.get(i).getId());
} catch (IOException e) {
LOG.error(""Get snapshot path failed, "", e);
}

if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getCheckpoints(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(
""Get checkpoint results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}

if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getSaveResult(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(""Get save results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}

if (inputPath != null) {
LOG.info(""Load matrix "" + matrixMetas.get(i).getName() + "" from "" + inputPath.toString());
matrixLoadContexts.add(new PSMatrixLoadContext(matrixMetas.get(i).getId(),
inputPath.toString(),
new ArrayList<>(matrixMetas.get(i).getPartitionMetas().keySet()),
SnapshotFormat.class.getName()));
} else {
if (matrixMetas.get(i).getInitFunc() != null) {
LOG.info(""Matrix "" + matrixMetas.get(i) + "" has a init function "" + matrixMetas.get(i)
.getInitFunc().getClass().getName() + "", use this function to reinit the matrix"");
long startTs = System.currentTimeMillis();
matrixMetas.get(i).getInitFunc()
.init(context.getMatrixStorageManager().getMatrix(matrixMetas.get(i).getId()));
LOG.info(""Reinit the matrix use time "" + (System.currentTimeMillis() - startTs));
}
}
}",0,0,1,0,0,0,0,0,0,38,4,65,0,1,0,1,8,5,1,0,6,0.68,0,0
2872_11,11,11,Path inputPath = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,1,0,1,0.5,27,15
2872_12,12,16,"try {
inputPath = recover.getSnapshotPath(matrixMetas.get(i).getId());
} catch (IOException e) {
LOG.error(""Get snapshot path failed, "", e);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,1,0,1,8,5,1,0,1,0.44,22,11
2872_13,13,13,inputPath = recover.getSnapshotPath(matrixMetas.get(i).getId());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.46,25,13
2872_14,14,14,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.26,24,12
2872_15,15,15,"LOG.error(""Get snapshot path failed, "", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.39,23,11
2872_18,18,37,"if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getCheckpoints(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(
""Get checkpoint results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}",1,0,0,0,0,0,0,0,0,10,3,20,0,0,1,1,8,5,1,0,3,0.58,1,0
2872_19,19,36,"try {
List<SaveResult> saveResults = master.getCheckpoints(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(
""Get checkpoint results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}",0,0,0,0,1,0,0,0,0,9,2,18,0,0,0,0,8,5,1,0,3,0.58,2,0
2872_20,20,20,List<SaveResult> saveResults = master.getCheckpoints(matrixMetas.get(i).getId());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,8,5,1,0,2,0.54,18,8
2872_21,21,31,"if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}",1,0,0,0,0,0,0,0,0,5,1,11,1,1,0,0,8,5,1,0,3,0.6,7,2
2872_22,22,22,"LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.46,16,6
2872_23,23,23,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.27,15,5
2872_24,24,24,inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,5,1,0,3,0.63,14,4
2872_25,25,28,"LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()",0,0,0,0,0,0,0,0,0,0,0,4,1,1,0,0,8,5,1,0,2,0.52,10,3
2872_29,29,30,"+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,8,5,1,0,3,0.61,8,2
2872_32,32,32,} catch (ServiceException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.24,6,1
2872_33,33,35,"LOG.error(
""Get checkpoint results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,8,5,1,0,1,0.45,3,0
2872_39,39,56,"if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getSaveResult(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(""Get save results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}",1,0,0,0,0,0,0,0,0,10,3,18,0,0,1,1,8,5,1,0,4,0.63,0,0
2872_40,40,55,"try {
List<SaveResult> saveResults = master.getSaveResult(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(""Get save results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}",0,0,0,0,1,0,0,0,0,9,2,16,0,0,0,0,8,5,1,0,4,0.63,1,0
2872_41,41,41,List<SaveResult> saveResults = master.getSaveResult(matrixMetas.get(i).getId());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,8,5,1,0,2,0.57,2,1
2872_42,42,51,"if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}",1,0,0,0,0,0,0,0,0,5,1,10,1,1,0,0,8,5,1,0,4,0.65,3,2
2872_43,43,43,"LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,3,0.56,4,3
2872_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.27,5,4
2872_45,45,45,inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,5,1,0,3,0.63,6,5
2872_46,46,48,"LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()",0,0,0,0,0,0,0,0,0,0,0,3,1,1,0,0,8,5,1,0,3,0.58,7,6
2872_49,49,50,"+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,8,5,1,0,3,0.61,10,8
2872_52,52,52,} catch (ServiceException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.24,13,9
2872_53,53,54,"LOG.error(""Get save results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,1,0,2,0.49,14,9
2872_58,58,73,"if (inputPath != null) {
LOG.info(""Load matrix "" + matrixMetas.get(i).getName() + "" from "" + inputPath.toString());
matrixLoadContexts.add(new PSMatrixLoadContext(matrixMetas.get(i).getId(),
inputPath.toString(),
new ArrayList<>(matrixMetas.get(i).getPartitionMetas().keySet()),
SnapshotFormat.class.getName()));
} else {
if (matrixMetas.get(i).getInitFunc() != null) {
LOG.info(""Matrix "" + matrixMetas.get(i) + "" has a init function "" + matrixMetas.get(i)
.getInitFunc().getClass().getName() + "", use this function to reinit the matrix"");
long startTs = System.currentTimeMillis();
matrixMetas.get(i).getInitFunc()
.init(context.getMatrixStorageManager().getMatrix(matrixMetas.get(i).getId()));
LOG.info(""Reinit the matrix use time "" + (System.currentTimeMillis() - startTs));
}
}",1,0,0,0,0,0,0,0,0,10,2,16,0,0,1,0,8,5,1,0,3,0.52,19,11
2872_59,59,59,"LOG.info(""Load matrix "" + matrixMetas.get(i).getName() + "" from "" + inputPath.toString());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,5,1,0,2,0.5,20,11
2872_60,60,63,"matrixLoadContexts.add(new PSMatrixLoadContext(matrixMetas.get(i).getId(),
inputPath.toString(),
new ArrayList<>(matrixMetas.get(i).getPartitionMetas().keySet()),
SnapshotFormat.class.getName()));",0,0,0,0,0,0,0,0,0,0,0,4,1,1,0,0,8,5,1,0,3,0.53,21,12
2872_64,64,64,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.27,25,14
2872_65,65,72,"if (matrixMetas.get(i).getInitFunc() != null) {
LOG.info(""Matrix "" + matrixMetas.get(i) + "" has a init function "" + matrixMetas.get(i)
.getInitFunc().getClass().getName() + "", use this function to reinit the matrix"");
long startTs = System.currentTimeMillis();
matrixMetas.get(i).getInitFunc()
.init(context.getMatrixStorageManager().getMatrix(matrixMetas.get(i).getId()));
LOG.info(""Reinit the matrix use time "" + (System.currentTimeMillis() - startTs));
}",1,0,0,0,0,0,0,0,0,6,1,8,0,0,0,0,8,5,1,0,0,0.38,26,14
2872_66,66,66,"LOG.info(""Matrix "" + matrixMetas.get(i) + "" has a init function "" + matrixMetas.get(i)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.36,27,15
2872_67,67,67,".getInitFunc().getClass().getName() + "", use this function to reinit the matrix"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.36,28,16
2872_68,68,68,long startTs = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.34,29,17
2872_69,69,69,matrixMetas.get(i).getInitFunc(),0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,5,1,0,0,0.38,30,18
2872_70,70,70,.init(context.getMatrixStorageManager().getMatrix(matrixMetas.get(i).getId()));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,5,1,0,0,0.35,31,19
2872_71,71,71,"LOG.info(""Reinit the matrix use time "" + (System.currentTimeMillis() - startTs));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.34,32,20
2872_76,76,78,"if (!matrixLoadContexts.isEmpty()) {
context.getIOExecutors().load(new PSMatricesLoadContext(-1, -1, matrixLoadContexts));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,8,5,1,0,1,0.42,37,22
2872_77,77,77,"context.getIOExecutors().load(new PSMatricesLoadContext(-1, -1, matrixLoadContexts));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.42,38,22
2871_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,0,0,0,0.33,16,12
2871_2,2,4,"if (context.getPartReplication() > 1 && context.getPSAttemptId().getIndex() > 0) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,2,0,0,0,0.33,13,10
2871_3,3,3,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.12,14,10
2871_6,6,79,"if (context.getPSAttemptId().getIndex() > 0) {
int matrixNum = matrixMetas.size();
List<PSMatrixLoadContext> matrixLoadContexts = new ArrayList<>(matrixMetas.size());
SnapshotRecover recover = new SnapshotRecover(context);
for (int i = 0; i < matrixNum; i++) {
Path inputPath = null;
try {
inputPath = recover.getSnapshotPath(matrixMetas.get(i).getId());
} catch (IOException e) {
LOG.error(""Get snapshot path failed, "", e);
}

if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getCheckpoints(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(
""Get checkpoint results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}

if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getSaveResult(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(""Get save results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}

if (inputPath != null) {
LOG.info(""Load matrix "" + matrixMetas.get(i).getName() + "" from "" + inputPath.toString());
matrixLoadContexts.add(new PSMatrixLoadContext(matrixMetas.get(i).getId(),
inputPath.toString(),
new ArrayList<>(matrixMetas.get(i).getPartitionMetas().keySet()),
SnapshotFormat.class.getName()));
} else {
if (matrixMetas.get(i).getInitFunc() != null) {
LOG.info(""Matrix "" + matrixMetas.get(i) + "" has a init function "" + matrixMetas.get(i)
.getInitFunc().getClass().getName() + "", use this function to reinit the matrix"");
long startTs = System.currentTimeMillis();
matrixMetas.get(i).getInitFunc()
.init(context.getMatrixStorageManager().getMatrix(matrixMetas.get(i).getId()));
LOG.info(""Reinit the matrix use time "" + (System.currentTimeMillis() - startTs));
}
}
}

if (!matrixLoadContexts.isEmpty()) {
context.getIOExecutors().load(new PSMatricesLoadContext(-1, -1, matrixLoadContexts));
}
}",1,0,0,0,0,0,0,0,0,44,5,74,0,0,1,0,4,2,0,0,2,0.52,0,0
2871_7,7,7,int matrixNum = matrixMetas.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,4,2,0,0,0,0.36,10,8
2871_8,8,8,List<PSMatrixLoadContext> matrixLoadContexts = new ArrayList<>(matrixMetas.size());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,4,2,0,0,1,0.43,9,7
2871_9,9,9,SnapshotRecover recover = new SnapshotRecover(context);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.43,8,6
2871_10,10,74,"for (int i = 0; i < matrixNum; i++) {
Path inputPath = null;
try {
inputPath = recover.getSnapshotPath(matrixMetas.get(i).getId());
} catch (IOException e) {
LOG.error(""Get snapshot path failed, "", e);
}

if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getCheckpoints(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(
""Get checkpoint results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}

if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getSaveResult(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(""Get save results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}

if (inputPath != null) {
LOG.info(""Load matrix "" + matrixMetas.get(i).getName() + "" from "" + inputPath.toString());
matrixLoadContexts.add(new PSMatrixLoadContext(matrixMetas.get(i).getId(),
inputPath.toString(),
new ArrayList<>(matrixMetas.get(i).getPartitionMetas().keySet()),
SnapshotFormat.class.getName()));
} else {
if (matrixMetas.get(i).getInitFunc() != null) {
LOG.info(""Matrix "" + matrixMetas.get(i) + "" has a init function "" + matrixMetas.get(i)
.getInitFunc().getClass().getName() + "", use this function to reinit the matrix"");
long startTs = System.currentTimeMillis();
matrixMetas.get(i).getInitFunc()
.init(context.getMatrixStorageManager().getMatrix(matrixMetas.get(i).getId()));
LOG.info(""Reinit the matrix use time "" + (System.currentTimeMillis() - startTs));
}
}
}",0,0,1,0,0,0,0,0,0,38,4,65,0,1,0,1,4,2,0,0,2,0.52,0,0
2871_11,11,11,Path inputPath = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.2,6,4
2871_12,12,16,"try {
inputPath = recover.getSnapshotPath(matrixMetas.get(i).getId());
} catch (IOException e) {
LOG.error(""Get snapshot path failed, "", e);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,1,0,1,4,2,0,0,0,0.31,1,0
2871_13,13,13,inputPath = recover.getSnapshotPath(matrixMetas.get(i).getId());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.3,4,2
2871_14,14,14,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.28,3,1
2871_15,15,15,"LOG.error(""Get snapshot path failed, "", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.23,2,0
2871_18,18,37,"if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getCheckpoints(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(
""Get checkpoint results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}",1,0,0,0,0,0,0,0,0,10,3,20,0,0,1,1,4,2,0,0,2,0.52,0,0
2871_19,19,36,"try {
List<SaveResult> saveResults = master.getCheckpoints(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(
""Get checkpoint results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}",0,0,0,0,1,0,0,0,0,9,2,18,0,0,0,0,4,2,0,0,2,0.53,1,0
2871_20,20,20,List<SaveResult> saveResults = master.getCheckpoints(matrixMetas.get(i).getId());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,2,0,0,1,0.43,2,1
2871_21,21,31,"if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}",1,0,0,0,0,0,0,0,0,5,1,11,1,1,0,0,4,2,0,0,2,0.52,3,2
2871_22,22,22,"LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.4,4,3
2871_23,23,23,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.19,5,4
2871_24,24,24,inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,0,0,1,0.48,6,5
2871_25,25,28,"LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()",0,0,0,0,0,0,0,0,0,0,0,4,1,1,0,0,4,2,0,0,1,0.43,7,6
2871_29,29,30,"+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,4,2,0,0,0,0.4,11,8
2871_32,32,32,} catch (ServiceException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.25,14,9
2871_33,33,35,"LOG.error(
""Get checkpoint results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,4,2,0,0,1,0.39,15,9
2871_39,39,56,"if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getSaveResult(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(""Get save results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}",1,0,0,0,0,0,0,0,0,10,3,18,0,0,1,1,4,2,0,0,1,0.47,21,11
2871_40,40,55,"try {
List<SaveResult> saveResults = master.getSaveResult(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(""Get save results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}",0,0,0,0,1,0,0,0,0,9,2,16,0,0,0,0,4,2,0,0,1,0.47,22,11
2871_41,41,41,List<SaveResult> saveResults = master.getSaveResult(matrixMetas.get(i).getId());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,2,0,0,0,0.36,23,12
2871_42,42,51,"if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}",1,0,0,0,0,0,0,0,0,5,1,10,1,1,0,0,4,2,0,0,1,0.47,24,13
2871_43,43,43,"LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.38,25,14
2871_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.19,26,15
2871_45,45,45,inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,0,0,1,0.48,27,16
2871_46,46,48,"LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()",0,0,0,0,0,0,0,0,0,0,0,3,1,1,0,0,4,2,0,0,0,0.4,28,17
2871_49,49,50,"+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,4,2,0,0,0,0.4,31,19
2871_52,52,52,} catch (ServiceException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.25,34,20
2871_53,53,54,"LOG.error(""Get save results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,0,0,0,0.33,35,20
2871_58,58,73,"if (inputPath != null) {
LOG.info(""Load matrix "" + matrixMetas.get(i).getName() + "" from "" + inputPath.toString());
matrixLoadContexts.add(new PSMatrixLoadContext(matrixMetas.get(i).getId(),
inputPath.toString(),
new ArrayList<>(matrixMetas.get(i).getPartitionMetas().keySet()),
SnapshotFormat.class.getName()));
} else {
if (matrixMetas.get(i).getInitFunc() != null) {
LOG.info(""Matrix "" + matrixMetas.get(i) + "" has a init function "" + matrixMetas.get(i)
.getInitFunc().getClass().getName() + "", use this function to reinit the matrix"");
long startTs = System.currentTimeMillis();
matrixMetas.get(i).getInitFunc()
.init(context.getMatrixStorageManager().getMatrix(matrixMetas.get(i).getId()));
LOG.info(""Reinit the matrix use time "" + (System.currentTimeMillis() - startTs));
}
}",1,0,0,0,0,0,0,0,0,10,2,16,0,0,1,0,4,2,0,0,1,0.45,40,22
2871_59,59,59,"LOG.info(""Load matrix "" + matrixMetas.get(i).getName() + "" from "" + inputPath.toString());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,0,0,0,0.27,41,22
2871_60,60,63,"matrixLoadContexts.add(new PSMatrixLoadContext(matrixMetas.get(i).getId(),
inputPath.toString(),
new ArrayList<>(matrixMetas.get(i).getPartitionMetas().keySet()),
SnapshotFormat.class.getName()));",0,0,0,0,0,0,0,0,0,0,0,4,1,1,0,0,4,2,0,0,1,0.43,42,23
2871_64,64,64,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.19,46,25
2871_65,65,72,"if (matrixMetas.get(i).getInitFunc() != null) {
LOG.info(""Matrix "" + matrixMetas.get(i) + "" has a init function "" + matrixMetas.get(i)
.getInitFunc().getClass().getName() + "", use this function to reinit the matrix"");
long startTs = System.currentTimeMillis();
matrixMetas.get(i).getInitFunc()
.init(context.getMatrixStorageManager().getMatrix(matrixMetas.get(i).getId()));
LOG.info(""Reinit the matrix use time "" + (System.currentTimeMillis() - startTs));
}",1,0,0,0,0,0,0,0,0,6,1,8,0,0,0,0,4,2,0,0,0,0.37,47,25
2871_66,66,66,"LOG.info(""Matrix "" + matrixMetas.get(i) + "" has a init function "" + matrixMetas.get(i)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.3,48,26
2871_67,67,67,".getInitFunc().getClass().getName() + "", use this function to reinit the matrix"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.33,49,27
2871_68,68,68,long startTs = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.37,50,28
2871_69,69,69,matrixMetas.get(i).getInitFunc(),0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,0,0,0,0.32,51,29
2871_70,70,70,.init(context.getMatrixStorageManager().getMatrix(matrixMetas.get(i).getId()));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,0,0,0,0.31,52,30
2871_71,71,71,"LOG.info(""Reinit the matrix use time "" + (System.currentTimeMillis() - startTs));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.35,53,31
2871_76,76,78,"if (!matrixLoadContexts.isEmpty()) {
context.getIOExecutors().load(new PSMatricesLoadContext(-1, -1, matrixLoadContexts));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,4,2,0,0,1,0.44,58,33
2871_77,77,77,"context.getIOExecutors().load(new PSMatricesLoadContext(-1, -1, matrixLoadContexts));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.45,59,33
2870_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,4,0,0,0,0.45,4,2
2870_2,2,4,"if (context.getPartReplication() > 1 && context.getPSAttemptId().getIndex() > 0) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,4,0,0,1,0.47,1,0
2870_3,3,3,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.18,2,0
2870_6,6,79,"if (context.getPSAttemptId().getIndex() > 0) {
int matrixNum = matrixMetas.size();
List<PSMatrixLoadContext> matrixLoadContexts = new ArrayList<>(matrixMetas.size());
SnapshotRecover recover = new SnapshotRecover(context);
for (int i = 0; i < matrixNum; i++) {
Path inputPath = null;
try {
inputPath = recover.getSnapshotPath(matrixMetas.get(i).getId());
} catch (IOException e) {
LOG.error(""Get snapshot path failed, "", e);
}

if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getCheckpoints(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(
""Get checkpoint results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}

if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getSaveResult(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(""Get save results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}

if (inputPath != null) {
LOG.info(""Load matrix "" + matrixMetas.get(i).getName() + "" from "" + inputPath.toString());
matrixLoadContexts.add(new PSMatrixLoadContext(matrixMetas.get(i).getId(),
inputPath.toString(),
new ArrayList<>(matrixMetas.get(i).getPartitionMetas().keySet()),
SnapshotFormat.class.getName()));
} else {
if (matrixMetas.get(i).getInitFunc() != null) {
LOG.info(""Matrix "" + matrixMetas.get(i) + "" has a init function "" + matrixMetas.get(i)
.getInitFunc().getClass().getName() + "", use this function to reinit the matrix"");
long startTs = System.currentTimeMillis();
matrixMetas.get(i).getInitFunc()
.init(context.getMatrixStorageManager().getMatrix(matrixMetas.get(i).getId()));
LOG.info(""Reinit the matrix use time "" + (System.currentTimeMillis() - startTs));
}
}
}

if (!matrixLoadContexts.isEmpty()) {
context.getIOExecutors().load(new PSMatricesLoadContext(-1, -1, matrixLoadContexts));
}
}",1,0,0,0,0,0,0,0,0,44,5,74,0,0,1,0,5,4,0,0,5,0.71,0,0
2870_7,7,7,int matrixNum = matrixMetas.size();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,5,4,0,0,0,0.37,1,0
2870_8,8,8,List<PSMatrixLoadContext> matrixLoadContexts = new ArrayList<>(matrixMetas.size());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,5,4,0,0,2,0.56,2,1
2870_9,9,9,SnapshotRecover recover = new SnapshotRecover(context);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,2,0.71,3,2
2870_10,10,74,"for (int i = 0; i < matrixNum; i++) {
Path inputPath = null;
try {
inputPath = recover.getSnapshotPath(matrixMetas.get(i).getId());
} catch (IOException e) {
LOG.error(""Get snapshot path failed, "", e);
}

if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getCheckpoints(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(
""Get checkpoint results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}

if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getSaveResult(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(""Get save results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}

if (inputPath != null) {
LOG.info(""Load matrix "" + matrixMetas.get(i).getName() + "" from "" + inputPath.toString());
matrixLoadContexts.add(new PSMatrixLoadContext(matrixMetas.get(i).getId(),
inputPath.toString(),
new ArrayList<>(matrixMetas.get(i).getPartitionMetas().keySet()),
SnapshotFormat.class.getName()));
} else {
if (matrixMetas.get(i).getInitFunc() != null) {
LOG.info(""Matrix "" + matrixMetas.get(i) + "" has a init function "" + matrixMetas.get(i)
.getInitFunc().getClass().getName() + "", use this function to reinit the matrix"");
long startTs = System.currentTimeMillis();
matrixMetas.get(i).getInitFunc()
.init(context.getMatrixStorageManager().getMatrix(matrixMetas.get(i).getId()));
LOG.info(""Reinit the matrix use time "" + (System.currentTimeMillis() - startTs));
}
}
}",0,0,1,0,0,0,0,0,0,38,4,65,0,1,0,1,5,4,0,0,5,0.71,4,3
2870_11,11,11,Path inputPath = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.52,5,4
2870_12,12,16,"try {
inputPath = recover.getSnapshotPath(matrixMetas.get(i).getId());
} catch (IOException e) {
LOG.error(""Get snapshot path failed, "", e);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,1,0,1,5,4,0,0,3,0.66,6,5
2870_13,13,13,inputPath = recover.getSnapshotPath(matrixMetas.get(i).getId());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,3,0.68,7,6
2870_14,14,14,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.44,8,7
2870_15,15,15,"LOG.error(""Get snapshot path failed, "", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.59,9,8
2870_18,18,37,"if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getCheckpoints(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(
""Get checkpoint results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}",1,0,0,0,0,0,0,0,0,10,3,20,0,0,1,1,5,4,0,0,1,0.47,12,10
2870_19,19,36,"try {
List<SaveResult> saveResults = master.getCheckpoints(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(
""Get checkpoint results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}",0,0,0,0,1,0,0,0,0,9,2,18,0,0,0,0,5,4,0,0,1,0.47,13,10
2870_20,20,20,List<SaveResult> saveResults = master.getCheckpoints(matrixMetas.get(i).getId());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,4,0,0,0,0.35,14,11
2870_21,21,31,"if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}",1,0,0,0,0,0,0,0,0,5,1,11,1,1,0,0,5,4,0,0,1,0.47,15,12
2870_22,22,22,"LOG.info(""There is no checkpoint results for matrix "" + matrixMetas.get(i).getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.36,16,13
2870_23,23,23,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.21,17,14
2870_24,24,24,inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,4,0,0,1,0.48,18,15
2870_25,25,28,"LOG.info(
""There is "" + saveResults.size() + "" checkpoint results for matrix + ""
+ matrixMetas
.get(i).getName()",0,0,0,0,0,0,0,0,0,0,0,4,1,1,0,0,5,4,0,0,0,0.35,19,16
2870_29,29,30,"+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,5,4,0,0,1,0.48,23,18
2870_32,32,32,} catch (ServiceException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.38,26,19
2870_33,33,35,"LOG.error(
""Get checkpoint results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,5,4,0,0,0,0.38,27,19
2870_39,39,56,"if (inputPath == null) {
try {
List<SaveResult> saveResults = master.getSaveResult(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(""Get save results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}
}",1,0,0,0,0,0,0,0,0,10,3,18,0,0,1,1,5,4,0,0,1,0.47,33,21
2870_40,40,55,"try {
List<SaveResult> saveResults = master.getSaveResult(matrixMetas.get(i).getId());
if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}
} catch (ServiceException e) {
LOG.error(""Get save results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);
}",0,0,0,0,1,0,0,0,0,9,2,16,0,0,0,0,5,4,0,0,1,0.46,34,21
2870_41,41,41,List<SaveResult> saveResults = master.getSaveResult(matrixMetas.get(i).getId());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,4,0,0,0,0.35,35,22
2870_42,42,51,"if (saveResults == null || saveResults.isEmpty()) {
LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());
} else {
inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());
LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()
+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());
}",1,0,0,0,0,0,0,0,0,5,1,10,1,1,0,0,5,4,0,0,1,0.47,36,23
2870_43,43,43,"LOG.info(""There is no old save result for matrix "" + matrixMetas.get(i).getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.36,37,24
2870_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.21,38,25
2870_45,45,45,inputPath = new Path(saveResults.get(saveResults.size() - 1).getMatrixPath());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,4,0,0,1,0.48,39,26
2870_46,46,48,"LOG.info(
""There is "" + saveResults.size() + "" old save results for matrix + "" + matrixMetas
.get(i).getName()",0,0,0,0,0,0,0,0,0,0,0,3,1,1,0,0,5,4,0,0,0,0.35,40,27
2870_49,49,50,"+ "" we choose the latest result in dir "" + saveResults
.get(saveResults.size() - 1).getMatrixPath());",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,5,4,0,0,1,0.48,43,29
2870_52,52,52,} catch (ServiceException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.38,46,30
2870_53,53,54,"LOG.error(""Get save results for matrix "" + matrixMetas.get(i).getName() + "" failed "",
e);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,0,0,0,0.38,47,30
2870_58,58,73,"if (inputPath != null) {
LOG.info(""Load matrix "" + matrixMetas.get(i).getName() + "" from "" + inputPath.toString());
matrixLoadContexts.add(new PSMatrixLoadContext(matrixMetas.get(i).getId(),
inputPath.toString(),
new ArrayList<>(matrixMetas.get(i).getPartitionMetas().keySet()),
SnapshotFormat.class.getName()));
} else {
if (matrixMetas.get(i).getInitFunc() != null) {
LOG.info(""Matrix "" + matrixMetas.get(i) + "" has a init function "" + matrixMetas.get(i)
.getInitFunc().getClass().getName() + "", use this function to reinit the matrix"");
long startTs = System.currentTimeMillis();
matrixMetas.get(i).getInitFunc()
.init(context.getMatrixStorageManager().getMatrix(matrixMetas.get(i).getId()));
LOG.info(""Reinit the matrix use time "" + (System.currentTimeMillis() - startTs));
}
}",1,0,0,0,0,0,0,0,0,10,2,16,0,0,1,0,5,4,0,0,4,0.67,52,32
2870_59,59,59,"LOG.info(""Load matrix "" + matrixMetas.get(i).getName() + "" from "" + inputPath.toString());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,4,0,0,2,0.56,53,32
2870_60,60,63,"matrixLoadContexts.add(new PSMatrixLoadContext(matrixMetas.get(i).getId(),
inputPath.toString(),
new ArrayList<>(matrixMetas.get(i).getPartitionMetas().keySet()),
SnapshotFormat.class.getName()));",0,0,0,0,0,0,0,0,0,0,0,4,1,1,0,0,5,4,0,0,4,0.68,54,33
2870_64,64,64,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.21,58,35
2870_65,65,72,"if (matrixMetas.get(i).getInitFunc() != null) {
LOG.info(""Matrix "" + matrixMetas.get(i) + "" has a init function "" + matrixMetas.get(i)
.getInitFunc().getClass().getName() + "", use this function to reinit the matrix"");
long startTs = System.currentTimeMillis();
matrixMetas.get(i).getInitFunc()
.init(context.getMatrixStorageManager().getMatrix(matrixMetas.get(i).getId()));
LOG.info(""Reinit the matrix use time "" + (System.currentTimeMillis() - startTs));
}",1,0,0,0,0,0,0,0,0,6,1,8,0,0,0,0,5,4,0,0,0,0.43,59,35
2870_66,66,66,"LOG.info(""Matrix "" + matrixMetas.get(i) + "" has a init function "" + matrixMetas.get(i)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.37,60,36
2870_67,67,67,".getInitFunc().getClass().getName() + "", use this function to reinit the matrix"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.43,61,37
2870_68,68,68,long startTs = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.35,62,38
2870_69,69,69,matrixMetas.get(i).getInitFunc(),0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,4,0,0,0,0.44,63,39
2870_70,70,70,.init(context.getMatrixStorageManager().getMatrix(matrixMetas.get(i).getId()));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,4,0,0,0,0.38,64,40
2870_71,71,71,"LOG.info(""Reinit the matrix use time "" + (System.currentTimeMillis() - startTs));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.4,65,41
2870_76,76,78,"if (!matrixLoadContexts.isEmpty()) {
context.getIOExecutors().load(new PSMatricesLoadContext(-1, -1, matrixLoadContexts));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,5,4,0,0,2,0.61,70,43
2870_77,77,77,"context.getIOExecutors().load(new PSMatricesLoadContext(-1, -1, matrixLoadContexts));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.61,71,43
2869_1,1,1,throws Exception ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,5,0,0,0,0.19,5,3
2869_2,2,2,PSReportRequest.Builder builder = PSReportRequest.newBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.49,4,2
2869_3,3,3,builder.setPsAttemptId(attemptIdProto);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,1,0.46,3,1
2869_6,6,33,"if (heartbeatCount.incrementAndGet() % dataCollectionInterval == 0) {
Map<Integer,ServerMatrix> serverMatrixMap = matrixStorageManager.getMatrices();
long dataSize = 0;
for(ServerMatrix serverMatrix : serverMatrixMap.values()) {
Map<Integer, ServerPartition> partitions = serverMatrix.getPartitions();
for (ServerPartition partition: partitions.values()) {
dataSize += partition.dataSize();
}
}

Pair.Builder pairBuilder = Pair.newBuilder();
pairBuilder.setKey(""key"");
pairBuilder.setValue(""value"");
builder.addMetrics(pairBuilder.build());

pairBuilder.setKey(""totalRPC"");
pairBuilder.setValue(WorkerPool.total.toString());
builder.addMetrics(pairBuilder.build());

pairBuilder.setKey(""requestSize"");
pairBuilder.setValue(
String.format(""%.2f"", WorkerPool.requestSize.longValue() * 1.0 / 1024/ 1024));
builder.addMetrics(pairBuilder.build());

pairBuilder.setKey(""dataSize"");
pairBuilder.setValue(String.format(""%.2f"", dataSize * 1.0 / 1024/ 1024));
builder.addMetrics(pairBuilder.build());
}",1,0,0,0,0,0,0,0,0,19,3,28,0,1,1,0,5,5,0,0,3,0.66,0,0
2869_7,7,7,"Map<Integer,ServerMatrix> serverMatrixMap = matrixStorageManager.getMatrices();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.42,0,0
2869_8,8,8,long dataSize = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.7,1,0
2869_9,9,14,"for(ServerMatrix serverMatrix : serverMatrixMap.values()) {
Map<Integer, ServerPartition> partitions = serverMatrix.getPartitions();
for (ServerPartition partition: partitions.values()) {
dataSize += partition.dataSize();
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,1,5,5,0,0,3,0.72,2,1
2869_10,10,10,"Map<Integer, ServerPartition> partitions = serverMatrix.getPartitions();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.56,3,2
2869_11,11,13,"for (ServerPartition partition: partitions.values()) {
dataSize += partition.dataSize();
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,0,5,5,0,0,3,0.84,4,3
2869_12,12,12,dataSize += partition.dataSize();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,3,0.9,5,4
2869_16,16,16,Pair.Builder pairBuilder = Pair.newBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,0,0.33,9,6
2869_17,17,17,"pairBuilder.setKey(""key"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.31,10,6
2869_18,18,18,"pairBuilder.setValue(""value"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.34,11,7
2869_19,19,19,builder.addMetrics(pairBuilder.build());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,0,0.39,12,8
2869_21,21,21,"pairBuilder.setKey(""totalRPC"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,5,5,0,0,0,0.41,14,10
2869_22,22,22,pairBuilder.setValue(WorkerPool.total.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.42,15,10
2869_23,23,23,builder.addMetrics(pairBuilder.build());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,0,0.39,16,11
2869_25,25,25,"pairBuilder.setKey(""requestSize"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,5,5,0,0,1,0.5,18,13
2869_26,26,27,"pairBuilder.setValue(
String.format(""%.2f"", WorkerPool.requestSize.longValue() * 1.0 / 1024/ 1024));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,5,5,0,0,1,0.53,19,13
2869_28,28,28,builder.addMetrics(pairBuilder.build());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,0,0.39,21,15
2869_30,30,30,"pairBuilder.setKey(""dataSize"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,5,5,0,0,2,0.61,23,16
2869_31,31,31,"pairBuilder.setValue(String.format(""%.2f"", dataSize * 1.0 / 1024/ 1024));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.62,24,16
2869_32,32,32,builder.addMetrics(pairBuilder.build());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.39,25,17
2869_34,34,34,builder.addAllMatrixReports(buildMatrixReports());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,0,0.4,27,19
2869_36,36,36,PSReportResponse ret;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,5,0,0,1,0.5,29,20
2869_37,37,37,PSReportRequest request = builder.build();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.48,30,20
2869_38,38,38,"LOG.debug(""ps hb = "" + request);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.48,31,21
2869_39,39,39,ret = master.psReport(request);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.5,32,22
2869_40,40,40,switch (ret.getPsCommand()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.49,33,23
2869_41,41,42,"case PSCOMMAND_REGISTER:
try {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,0,0.18,34,24
2869_43,43,43,register();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.18,36,26
2869_44,44,44,} catch (Exception x) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.34,37,26
2869_45,45,45,"LOG.error(""register failed: "", x);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.29,38,27
2869_46,46,46,stop(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.27,39,28
2869_48,48,48,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,5,5,0,0,0,0.26,41,30
2869_50,50,51,"case PSCOMMAND_SHUTDOWN:
LOG.error(""shutdown command come from appmaster, exit now!!"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,5,0,0,0,0.27,43,31
2869_52,52,52,stop(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.27,45,32
2869_53,53,53,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,5,5,0,0,0,0.26,46,32
2869_55,55,56,"default:
break;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,5,0,0,0,0.31,48,34
2869_59,59,59,"LOG.debug(""ps hb ret = "" + ret);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,5,5,0,0,1,0.49,52,35
2869_60,60,62,"if (ret.hasNeedSaveMatrices()) {
saver.save(ProtobufUtil.convert(ret.getNeedSaveMatrices()));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,5,5,0,0,0,0.39,53,35
2869_61,61,61,saver.save(ProtobufUtil.convert(ret.getNeedSaveMatrices()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.39,54,36
2869_64,64,66,"if (ret.hasNeedLoadMatrices()) {
loader.load(ProtobufUtil.convert(ret.getNeedLoadMatrices()));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,5,5,0,0,0,0.37,57,38
2869_65,65,65,loader.load(ProtobufUtil.convert(ret.getNeedLoadMatrices()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.37,58,38
2869_67,67,68,"syncMatrices(ret.getNeedCreateMatricesList(), ret.getNeedReleaseMatrixIdsList(),
ret.getNeedRecoverPartsList());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,5,5,0,0,0,0.39,60,40
2868_1,1,1,  public static void main(String[] argv) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.39,30,18
2868_2,2,2,"LOG.info(""Starting Parameter Server"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.35,29,17
2868_3,3,3,int serverIndex = Integer.valueOf(System.getenv(AngelEnvironment.PARAMETERSERVER_ID.name()));,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,8,3,2,0,0,0.38,28,16
2868_4,4,4,String appMasterHost = System.getenv(AngelEnvironment.LISTEN_ADDR.name());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,8,3,2,0,0,0.41,27,15
2868_5,5,5,int appMasterPort = Integer.valueOf(System.getenv(AngelEnvironment.LISTEN_PORT.name()));,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,8,3,2,0,0,0.37,26,14
2868_7,7,7,int attemptIndex = Integer.valueOf(System.getenv(AngelEnvironment.PS_ATTEMPT_ID.name()));,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,8,3,2,0,0,0.42,24,13
2868_9,9,9,Configuration conf = new Configuration();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,3,2,0,1,0.43,22,12
2868_10,10,10,conf.addResource(AngelConf.ANGEL_JOB_CONF_FILE);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,8,3,2,0,1,0.42,21,11
2868_12,12,13,"conf.setInt(""io.file.buffer.size"", conf.getInt(AngelConf.ANGEL_PS_IO_FILE_BUFFER_SIZE,
AngelConf.DEFAULT_ANGEL_PS_IO_FILE_BUFFER_SIZE));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,8,3,2,0,0,0.38,18,10
2868_15,15,15,String user = System.getenv(ApplicationConstants.Environment.USER.name());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,8,3,2,0,1,0.51,16,9
2868_16,16,16,UserGroupInformation.setConfiguration(conf);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,3,2,0,1,0.39,15,8
2868_18,18,19,"String runningMode =
conf.get(AngelConf.ANGEL_RUNNING_MODE, AngelConf.DEFAULT_ANGEL_RUNNING_MODE);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,8,3,2,0,0,0.36,12,7
2868_20,20,23,"if (runningMode.equals(RunningMode.ANGEL_PS_WORKER.toString())) {
LOG.debug(""AngelEnvironment.TASK_NUMBER.name()="" + AngelEnvironment.TASK_NUMBER.name());
conf.set(AngelConf.ANGEL_TASK_ACTUAL_NUM, System.getenv(AngelEnvironment.TASK_NUMBER.name()));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,8,3,2,0,1,0.49,8,4
2868_21,21,21,"LOG.debug(""AngelEnvironment.TASK_NUMBER.name()="" + AngelEnvironment.TASK_NUMBER.name());",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,8,3,2,0,1,0.48,10,5
2868_22,22,22,"conf.set(AngelConf.ANGEL_TASK_ACTUAL_NUM, System.getenv(AngelEnvironment.TASK_NUMBER.name()));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,8,3,2,0,1,0.47,9,4
2868_25,25,26,"final ParameterServer psServer =
new ParameterServer(serverIndex, attemptIndex, appMasterHost, appMasterPort, conf);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,8,3,2,0,1,0.47,5,3
2868_28,28,45,"try {
Credentials credentials = UserGroupInformation.getCurrentUser().getCredentials();
UserGroupInformation psUGI = UserGroupInformation
.createRemoteUser(System.getenv(ApplicationConstants.Environment.USER.toString()));
psUGI.addCredentials(credentials);

psUGI.doAs(new PrivilegedExceptionAction<Object>() {
@Override
public Object run() throws Exception {
psServer.initialize();
psServer.start();
return null;
}
});
} catch (Throwable x) {
LOG.fatal(""Start PS failed "", x);
psServer.failed(x.getMessage());
}",0,0,0,0,1,0,0,0,0,11,3,18,0,0,1,0,8,3,2,0,3,0.57,0,0
2868_29,29,29,Credentials credentials = UserGroupInformation.getCurrentUser().getCredentials();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,3,2,0,1,0.43,2,1
2868_30,30,31,"UserGroupInformation psUGI = UserGroupInformation
.createRemoteUser(System.getenv(ApplicationConstants.Environment.USER.toString()));",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,8,3,2,0,1,0.54,0,0
2868_32,32,32,psUGI.addCredentials(credentials);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,8,3,2,0,1,0.51,0,0
2868_34,34,34,psUGI.doAs(new PrivilegedExceptionAction<Object>() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,3,2,0,1,0.46,2,1
2868_35,35,36,"@Override
public Object run() throws Exception {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,3,2,0,0,0.39,3,1
2868_37,37,37,psServer.initialize();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,3,2,0,0,0.37,5,3
2868_38,38,38,psServer.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,3,2,0,0,0.39,6,3
2868_39,39,39,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.21,7,4
2868_42,42,42,} catch (Throwable x) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.36,10,6
2868_43,43,43,"LOG.fatal(""Start PS failed "", x);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.41,11,6
2868_44,44,44,psServer.failed(x.getMessage());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.38,12,7
2868_46,46,46,"LOG.info(""Starting Parameter Server successfully."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.35,14,9
2867_1,1,1,"	public static Map<String, Page> determineAllInlinks(Map<String, Page> pageTable) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,2,0.47,6,5
2867_2,2,2,Page currPage;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.39,5,4
2867_3,3,3,Set<String> keySet = pageTable.keySet();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,1,0,1,0.39,4,3
2867_4,4,4,Iterator<String> keySetIterator = keySet.iterator();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,1,0,1,0.41,3,2
2867_5,5,8,"while (keySetIterator.hasNext()) {
currPage = pageTable.get(keySetIterator.next());
currPage.getInlinks().addAll(wlf.getInlinks(currPage, pageTable));
}",0,1,0,0,0,0,0,0,0,2,1,4,0,1,0,0,7,3,1,0,2,0.43,0,0
2867_6,6,6,currPage = pageTable.get(keySetIterator.next());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,1,0,0,0.36,1,0
2867_7,7,7,"currPage.getInlinks().addAll(wlf.getInlinks(currPage, pageTable));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,1,0,2,0.46,0,0
2867_9,9,9,return pageTable;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.33,2,1
2866_1,1,1,"	public static Page wikiPageFromFile(File folder, File f) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.35,7,6
2866_2,2,2,Page p;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.3,6,5
2866_3,3,3,String pageLocation = getPageName(f);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.34,5,4
2866_4,4,4,"String content = loadFileText(folder, f);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.4,4,3
2866_5,5,5,p = new Page(pageLocation);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.31,3,2
2866_6,6,6,p.setContent(content);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.32,2,1
2866_7,7,7,p.getOutlinks().addAll(wlf.getOutlinks(p));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.28,1,0
2866_8,8,8,return p;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.3,0,0
2865_1,1,1,"	public static Page wikiPageFromFile(File folder, File f) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.48,5,5
2865_2,2,2,Page p;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.53,4,4
2865_3,3,3,String pageLocation = getPageName(f);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.63,3,3
2865_4,4,4,"String content = loadFileText(folder, f);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.5,2,2
2865_5,5,5,p = new Page(pageLocation);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.53,1,1
2865_6,6,6,p.setContent(content);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.31,0,0
2865_7,7,7,p.getOutlinks().addAll(wlf.getOutlinks(p));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.34,0,0
2865_8,8,8,return p;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.3,1,0
2864_1,1,1,"public static Map<String, Page> loadPages(String folderPath) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,2,0,2,0.61,21,14
2864_3,3,3,"Map<String, Page> pageTable = new Hashtable<String, Page>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,10,8,2,0,2,0.58,19,13
2864_4,4,4,Page currPage;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,8,2,0,1,0.65,18,12
2864_5,5,5,File[] listOfFiles;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,8,2,0,0,0.25,17,11
2864_6,6,6,wlf = new WikiLinkFinder();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,10,8,2,0,0,0.23,16,10
2864_8,8,8,File folder = new File(folderPath);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,10,8,2,0,0,0.32,14,9
2864_9,9,13,"if (folder.exists() && folder.isDirectory()) {
listOfFiles = folder.listFiles();
} else {
return null;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,1,10,8,2,0,1,0.4,9,5
2864_10,10,10,listOfFiles = folder.listFiles();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,2,0,0,0.29,12,7
2864_11,11,11,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,2,0,0,0.26,11,6
2864_12,12,12,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,8,2,0,1,0.53,10,5
2864_15,15,21,"for (int i = 0; i < listOfFiles.length; i++) {
File currFile = listOfFiles[i];
if (currFile.isFile()) {
currPage = wikiPageFromFile(folder, currFile);
pageTable.put(currPage.getLocation(), currPage);
}
}",0,0,1,0,0,0,0,0,0,4,2,7,0,1,1,0,10,8,2,0,2,0.54,1,0
2864_16,16,16,File currFile = listOfFiles[i];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,8,2,0,0,0.33,6,3
2864_17,17,20,"if (currFile.isFile()) {
currPage = wikiPageFromFile(folder, currFile);
pageTable.put(currPage.getLocation(), currPage);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,10,8,2,0,2,0.58,2,0
2864_18,18,18,"currPage = wikiPageFromFile(folder, currFile);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,8,2,0,1,0.53,4,1
2864_19,19,19,"pageTable.put(currPage.getLocation(), currPage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,8,2,0,2,0.61,3,0
2864_22,22,22,return pageTable = determineAllInlinks(pageTable);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,10,8,2,0,5,0.91,0,0
2863_1,1,1,"public static Map<String, Page> loadPages(String folderPath) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,1,0.49,14,9
2863_3,3,3,"Map<String, Page> pageTable = new Hashtable<String, Page>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,9,7,1,0,2,0.6,12,8
2863_4,4,4,Page currPage;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,9,7,1,0,1,0.65,11,7
2863_5,5,5,File[] listOfFiles;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,9,7,1,0,1,0.61,10,6
2863_6,6,6,wlf = new WikiLinkFinder();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,7,1,0,1,0.46,9,5
2863_8,8,8,File folder = new File(folderPath);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,7,1,0,2,0.68,7,4
2863_9,9,13,"if (folder.exists() && folder.isDirectory()) {
listOfFiles = folder.listFiles();
} else {
return null;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,1,9,7,1,0,1,0.52,2,0
2863_10,10,10,listOfFiles = folder.listFiles();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,1,0.56,5,2
2863_11,11,11,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,0,0.2,4,1
2863_12,12,12,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,7,1,0,0,0.27,3,0
2863_15,15,21,"for (int i = 0; i < listOfFiles.length; i++) {
File currFile = listOfFiles[i];
if (currFile.isFile()) {
currPage = wikiPageFromFile(folder, currFile);
pageTable.put(currPage.getLocation(), currPage);
}
}",0,0,1,0,0,0,0,0,0,4,2,7,0,1,1,0,9,7,1,0,2,0.66,0,0
2863_16,16,16,File currFile = listOfFiles[i];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,7,1,0,1,0.65,1,0
2863_17,17,20,"if (currFile.isFile()) {
currPage = wikiPageFromFile(folder, currFile);
pageTable.put(currPage.getLocation(), currPage);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,9,7,1,0,2,0.68,2,1
2863_18,18,18,"currPage = wikiPageFromFile(folder, currFile);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,7,1,0,2,0.71,3,2
2863_19,19,19,"pageTable.put(currPage.getLocation(), currPage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,7,1,0,1,0.53,4,3
2863_22,22,22,return pageTable = determineAllInlinks(pageTable);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,9,7,1,0,1,0.49,7,5
2841_1,1,1,"	public void defineImplicitLabel(GrammarAST ast, LabeledOp op) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.31,8,6
2841_2,2,2,Decl d;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.0,7,5
2841_3,3,21,"if ( ast.getType()==ANTLRParser.SET || ast.getType()==ANTLRParser.WILDCARD ) {
String implLabel =
gen.getTarget().getImplicitSetLabel(String.valueOf(ast.token.getTokenIndex()));
d = getTokenLabelDecl(implLabel);
((TokenDecl)d).isImplicit = true;
}
else if ( ast.getType()==ANTLRParser.RULE_REF ) {
Rule r = g.getRule(ast.getText());
String implLabel = gen.getTarget().getImplicitRuleLabel(ast.getText());
String ctxName =
gen.getTarget().getRuleFunctionContextStructName(r);
d = new RuleContextDecl(this, implLabel, ctxName);
((RuleContextDecl)d).isImplicit = true;
}
else {
String implLabel = gen.getTarget().getImplicitTokenLabel(ast.getText());
d = getTokenLabelDecl(implLabel);
((TokenDecl)d).isImplicit = true;
}",1,0,0,0,0,0,0,0,0,13,1,19,0,1,0,0,2,2,0,0,1,0.57,0,0
2841_4,4,5,"String implLabel =
gen.getTarget().getImplicitSetLabel(String.valueOf(ast.token.getTokenIndex()));",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,2,2,0,0,0,0.39,4,3
2841_6,6,6,d = getTokenLabelDecl(implLabel);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.29,3,2
2841_7,7,7,((TokenDecl)d).isImplicit = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.33,2,1
2841_9,9,9,else if ( ast.getType()==ANTLRParser.RULE_REF ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.63,0,0
2841_10,10,10,Rule r = g.getRule(ast.getText());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,2,2,0,0,1,0.56,0,0
2841_11,11,11,String implLabel = gen.getTarget().getImplicitRuleLabel(ast.getText());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,2,2,0,0,1,0.55,1,0
2841_12,12,13,"String ctxName =
gen.getTarget().getRuleFunctionContextStructName(r);",0,0,0,0,0,1,0,0,0,0,0,2,1,1,0,0,2,2,0,0,1,0.56,2,1
2841_14,14,14,"d = new RuleContextDecl(this, implLabel, ctxName);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.56,4,3
2841_15,15,15,((RuleContextDecl)d).isImplicit = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.55,5,3
2841_17,17,17,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.2,7,5
2841_18,18,18,String implLabel = gen.getTarget().getImplicitTokenLabel(ast.getText());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.4,8,5
2841_19,19,19,d = getTokenLabelDecl(implLabel);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.29,9,6
2841_20,20,20,((TokenDecl)d).isImplicit = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.33,10,7
2841_22,22,22,op.getLabels().add(d);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.25,12,9
2841_23,23,23,"getCurrentRuleFunction().addContextDecl(ast.getAltLabel(), d);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.51,13,9
2840_1,1,2,"	@Override
public List<SrcOp> tokenRef(GrammarAST ID, GrammarAST labelAST, GrammarAST args) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,3,1,0,2,0.57,6,5
2840_3,3,3,"MatchToken matchOp = new MatchToken(this, (TerminalAST) ID);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,1,0,1,0.48,5,4
2840_4,4,18,"if ( labelAST!=null ) {
String label = labelAST.getText();
RuleFunction rf = getCurrentRuleFunction();
if ( labelAST.parent.getType() == ANTLRParser.PLUS_ASSIGN ) {
defineImplicitLabel(ID, matchOp);
TokenListDecl l = getTokenListLabelDecl(label);
rf.addContextDecl(ID.getAltLabel(), l);
}
else {
Decl d = getTokenLabelDecl(label);
matchOp.labels.add(d);
rf.addContextDecl(ID.getAltLabel(), d);
}

}",1,0,0,0,0,0,0,0,0,10,2,15,1,1,0,0,7,3,1,0,4,0.64,0,0
2840_5,5,5,String label = labelAST.getText();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.34,3,2
2840_6,6,6,RuleFunction rf = getCurrentRuleFunction();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,1,0,0,0.27,2,1
2840_7,7,16,"if ( labelAST.parent.getType() == ANTLRParser.PLUS_ASSIGN ) {
defineImplicitLabel(ID, matchOp);
TokenListDecl l = getTokenListLabelDecl(label);
rf.addContextDecl(ID.getAltLabel(), l);
}
else {
Decl d = getTokenLabelDecl(label);
matchOp.labels.add(d);
rf.addContextDecl(ID.getAltLabel(), d);
}",1,0,0,0,0,0,0,0,0,7,1,10,0,1,0,1,7,3,1,0,4,0.66,0,0
2840_8,8,8,"defineImplicitLabel(ID, matchOp);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.4,0,0
2840_9,9,9,TokenListDecl l = getTokenListLabelDecl(label);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,1,0,3,0.66,1,0
2840_10,10,10,"rf.addContextDecl(ID.getAltLabel(), l);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,1,0,2,0.49,2,1
2840_12,12,12,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.17,4,3
2840_13,13,13,Decl d = getTokenLabelDecl(label);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,1,0,2,0.53,5,3
2840_14,14,14,matchOp.labels.add(d);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,1,0,1,0.51,6,4
2840_15,15,15,"rf.addContextDecl(ID.getAltLabel(), d);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,1,0,2,0.5,7,5
2840_19,19,19,"if ( controller.needsImplicitLabel(ID, matchOp) ) defineImplicitLabel(ID, matchOp);",1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,3,1,0,0,0.39,11,7
2840_20,20,20,"AddToLabelList listLabelOp = getAddToListOpIfListLabelPresent(matchOp, labelAST);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,1,0,2,0.61,12,7
2840_21,21,21,"return list(matchOp, listLabelOp);",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,7,3,1,0,1,0.52,13,8
2839_1,1,2,"	@Override
public List<SrcOp> ruleRef(GrammarAST ID, GrammarAST label, GrammarAST args) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,11,6,2,0,3,0.64,2,1
2839_3,3,3,"InvokeRule invokeOp = new InvokeRule(this, ID, label);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,6,2,0,2,0.65,1,0
2839_4,4,4,"if ( controller.needsImplicitLabel(ID, invokeOp) ) defineImplicitLabel(ID, invokeOp);",1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,6,2,0,4,0.73,0,0
2839_5,5,5,"AddToLabelList listLabelOp = getAddToListOpIfListLabelPresent(invokeOp, label);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,6,2,0,1,0.57,1,0
2839_6,6,6,"return list(invokeOp, listLabelOp);",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,11,6,2,0,1,0.52,2,1
2723_1,1,2,"@Override
public Collection<String> internalTableDeploymentStatements(Table table) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,3,0.74,2,1
2723_3,3,3,List<String> statements = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.51,1,0
2723_5,5,5,StringBuilder createTableStatement = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,3,0.71,0,0
2723_6,6,6,"createTableStatement.append(""CREATE "");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,3,0.85,1,0
2723_8,8,10,"if (table.isTemporary()) {
createTableStatement.append(""TEMPORARY "");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,3,0.78,3,2
2723_9,9,9,"createTableStatement.append(""TEMPORARY "");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.78,4,2
2723_12,12,12,"createTableStatement.append(""TABLE "");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,4,3,0,0,3,0.85,7,4
2723_13,13,13,createTableStatement.append(schemaNamePrefix());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.76,8,4
2723_14,14,14,createTableStatement.append(table.getName());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.77,9,5
2723_15,15,15,"createTableStatement.append("" ("");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,3,0,0,3,0.83,10,6
2723_17,17,17,List<String> primaryKeys = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.42,12,8
2723_18,18,18,boolean first = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.24,13,8
2723_19,19,35,"for (Column column : table.columns()) {
if (!first) {
createTableStatement.append("", "");
}
createTableStatement.append(column.getName() + "" "");
createTableStatement.append(sqlRepresentationOfColumnType(column));
if (column.isAutoNumbered()) {
int autoNumberStart = column.getAutoNumberStart() == -1 ? 1 : column.getAutoNumberStart();
createTableStatement.append("" AUTO_INCREMENT("" + autoNumberStart + "") COMMENT 'AUTONUMSTART:["" + autoNumberStart + ""]'"");
}

if (column.isPrimaryKey()) {
primaryKeys.add(column.getName());
}

first = false;
}",0,0,0,1,0,0,0,0,0,10,2,17,0,1,0,1,4,3,0,0,3,0.69,14,9
2723_20,20,22,"if (!first) {
createTableStatement.append("", "");
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,3,0,0,3,0.77,15,10
2723_21,21,21,"createTableStatement.append("", "");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.83,16,11
2723_23,23,23,"createTableStatement.append(column.getName() + "" "");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.73,18,13
2723_24,24,24,createTableStatement.append(sqlRepresentationOfColumnType(column));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.72,19,13
2723_25,25,28,"if (column.isAutoNumbered()) {
int autoNumberStart = column.getAutoNumberStart() == -1 ? 1 : column.getAutoNumberStart();
createTableStatement.append("" AUTO_INCREMENT("" + autoNumberStart + "") COMMENT 'AUTONUMSTART:["" + autoNumberStart + ""]'"");
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,1,4,3,0,0,3,0.65,20,14
2723_26,26,26,int autoNumberStart = column.getAutoNumberStart() == -1 ? 1 : column.getAutoNumberStart();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.35,21,15
2723_27,27,27,"createTableStatement.append("" AUTO_INCREMENT("" + autoNumberStart + "") COMMENT 'AUTONUMSTART:["" + autoNumberStart + ""]'"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,3,0.7,22,16
2723_30,30,32,"if (column.isPrimaryKey()) {
primaryKeys.add(column.getName());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,0,0.39,25,18
2723_31,31,31,primaryKeys.add(column.getName());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,26,18
2723_34,34,34,first = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.29,29,20
2723_37,37,43,"if (!primaryKeys.isEmpty()) {
createTableStatement.append("", CONSTRAINT "");
createTableStatement.append(table.getName());
createTableStatement.append(""_PK PRIMARY KEY ("");
createTableStatement.append(Joiner.on("", "").join(primaryKeys));
createTableStatement.append("")"");
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,1,1,4,3,0,0,3,0.78,32,21
2723_38,38,38,"createTableStatement.append("", CONSTRAINT "");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.78,33,21
2723_39,39,39,createTableStatement.append(table.getName());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.77,34,22
2723_40,40,40,"createTableStatement.append(""_PK PRIMARY KEY ("");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.78,35,23
2723_41,41,41,"createTableStatement.append(Joiner.on("", "").join(primaryKeys));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.76,36,24
2723_42,42,42,"createTableStatement.append("")"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.83,37,25
2723_45,45,45,"createTableStatement.append("")"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,3,0.83,40,27
2723_47,47,47,statements.add(createTableStatement.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,3,0.79,42,28
2723_49,49,49,return statements;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.55,44,29
2495_1,1,2,"@Override
public ResponseHandlerInterface getResponseHandler() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,4,1,0,0,0.3,27,7
2495_3,3,56,"return new RangeFileAsyncHttpResponseHandler(file) {

@Override
public void onSuccess(int statusCode, Header[] headers, File file) {
debugHeaders(LOG_TAG, headers);
debugStatusCode(LOG_TAG, statusCode);

if (fileSize < 1) {
boolean supportsRange = false;
for (Header header : headers) {
String headerName = header.getName();
if (CONTENT_LENGTH.equals(headerName)) {
fileSize = Long.parseLong(header.getValue());
} else if (ACCEPT_RANGES.equals(headerName)) {
supportsRange = true;
}
}

if (!supportsRange || fileSize < 1) {
Toast.makeText(
RangeResponseSample.this,
""Unable to determine remote file's size, or\nremote server doesn't support ranges"",
Toast.LENGTH_LONG
).show();
}
}

if (fileSize > 0) {
debugFileResponse(file);
sendNextRangeRequest();
}
}

@Override
public void onFailure(int statusCode, Header[] headers, Throwable e, File file) {
debugHeaders(LOG_TAG, headers);
debugStatusCode(LOG_TAG, statusCode);
debugThrowable(LOG_TAG, e);
debugFileResponse(file);
}

@Override
public void updateRequestHeaders(HttpUriRequest uriRequest) {
super.updateRequestHeaders(uriRequest);

long length = file.length();

uriRequest.setHeader(""Range"", ""bytes="" + length + ""-"" + (length + CHUNK_SIZE - 1));
}

void debugFileResponse(File file) {
debugResponse(LOG_TAG, ""File size thus far: "" + file.length() + "" bytes"");
}
};",0,0,0,0,0,0,1,0,0,8,5,54,0,0,0,0,7,4,1,0,5,0.71,0,0
2495_10,10,28,"if (fileSize < 1) {
boolean supportsRange = false;
for (Header header : headers) {
String headerName = header.getName();
if (CONTENT_LENGTH.equals(headerName)) {
fileSize = Long.parseLong(header.getValue());
} else if (ACCEPT_RANGES.equals(headerName)) {
supportsRange = true;
}
}

if (!supportsRange || fileSize < 1) {
Toast.makeText(
RangeResponseSample.this,
""Unable to determine remote file's size, or\nremote server doesn't support ranges"",
Toast.LENGTH_LONG
).show();
}
}",1,0,0,0,0,0,0,0,0,5,3,19,0,0,1,1,7,4,1,0,3,0.58,1,0
2495_11,11,11,boolean supportsRange = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,0,0.28,18,4
2495_12,12,19,"for (Header header : headers) {
String headerName = header.getName();
if (CONTENT_LENGTH.equals(headerName)) {
fileSize = Long.parseLong(header.getValue());
} else if (ACCEPT_RANGES.equals(headerName)) {
supportsRange = true;
}
}",0,0,0,1,0,0,0,0,0,2,2,8,0,1,0,1,7,4,1,0,2,0.48,10,1
2495_13,13,13,String headerName = header.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,0,0.28,16,2
2495_14,14,18,"if (CONTENT_LENGTH.equals(headerName)) {
fileSize = Long.parseLong(header.getValue());
} else if (ACCEPT_RANGES.equals(headerName)) {
supportsRange = true;
}",1,0,0,0,0,0,0,0,0,0,1,5,0,1,0,0,7,4,1,0,2,0.49,11,1
2495_21,21,27,"if (!supportsRange || fileSize < 1) {
Toast.makeText(
RangeResponseSample.this,
""Unable to determine remote file's size, or\nremote server doesn't support ranges"",
Toast.LENGTH_LONG
).show();
}",1,0,0,0,0,0,0,0,0,0,1,7,0,0,1,0,7,4,1,0,3,0.61,2,0
2495_30,30,33,"if (fileSize > 0) {
debugFileResponse(file);
sendNextRangeRequest();
}",1,0,0,0,0,0,0,0,0,0,1,4,0,0,1,0,7,4,1,0,4,0.77,0,0
2495_48,48,48,long length = file.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,4,1,0,1,0.52,18,1
2494_1,1,2,"@Override
public ResponseHandlerInterface getResponseHandler() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,0,0,0,0.3,9,3
2494_3,3,56,"return new RangeFileAsyncHttpResponseHandler(file) {

@Override
public void onSuccess(int statusCode, Header[] headers, File file) {
debugHeaders(LOG_TAG, headers);
debugStatusCode(LOG_TAG, statusCode);

if (fileSize < 1) {
boolean supportsRange = false;
for (Header header : headers) {
String headerName = header.getName();
if (CONTENT_LENGTH.equals(headerName)) {
fileSize = Long.parseLong(header.getValue());
} else if (ACCEPT_RANGES.equals(headerName)) {
supportsRange = true;
}
}

if (!supportsRange || fileSize < 1) {
Toast.makeText(
RangeResponseSample.this,
""Unable to determine remote file's size, or\nremote server doesn't support ranges"",
Toast.LENGTH_LONG
).show();
}
}

if (fileSize > 0) {
debugFileResponse(file);
sendNextRangeRequest();
}
}

@Override
public void onFailure(int statusCode, Header[] headers, Throwable e, File file) {
debugHeaders(LOG_TAG, headers);
debugStatusCode(LOG_TAG, statusCode);
debugThrowable(LOG_TAG, e);
debugFileResponse(file);
}

@Override
public void updateRequestHeaders(HttpUriRequest uriRequest) {
super.updateRequestHeaders(uriRequest);

long length = file.length();

uriRequest.setHeader(""Range"", ""bytes="" + length + ""-"" + (length + CHUNK_SIZE - 1));
}

void debugFileResponse(File file) {
debugResponse(LOG_TAG, ""File size thus far: "" + file.length() + "" bytes"");
}
};",0,0,0,0,0,0,1,0,0,8,5,54,0,0,0,0,6,5,0,0,3,0.66,0,0
2494_10,10,28,"if (fileSize < 1) {
boolean supportsRange = false;
for (Header header : headers) {
String headerName = header.getName();
if (CONTENT_LENGTH.equals(headerName)) {
fileSize = Long.parseLong(header.getValue());
} else if (ACCEPT_RANGES.equals(headerName)) {
supportsRange = true;
}
}

if (!supportsRange || fileSize < 1) {
Toast.makeText(
RangeResponseSample.this,
""Unable to determine remote file's size, or\nremote server doesn't support ranges"",
Toast.LENGTH_LONG
).show();
}
}",1,0,0,0,0,0,0,0,0,5,3,19,0,0,1,1,6,5,0,0,3,0.65,0,0
2494_11,11,11,boolean supportsRange = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.32,0,0
2494_12,12,19,"for (Header header : headers) {
String headerName = header.getName();
if (CONTENT_LENGTH.equals(headerName)) {
fileSize = Long.parseLong(header.getValue());
} else if (ACCEPT_RANGES.equals(headerName)) {
supportsRange = true;
}
}",0,0,0,1,0,0,0,0,0,2,2,8,0,1,0,1,6,5,0,0,3,0.7,0,0
2494_13,13,13,String headerName = header.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.55,1,0
2494_14,14,18,"if (CONTENT_LENGTH.equals(headerName)) {
fileSize = Long.parseLong(header.getValue());
} else if (ACCEPT_RANGES.equals(headerName)) {
supportsRange = true;
}",1,0,0,0,0,0,0,0,0,0,1,5,0,1,0,0,6,5,0,0,3,0.67,2,1
2494_21,21,27,"if (!supportsRange || fileSize < 1) {
Toast.makeText(
RangeResponseSample.this,
""Unable to determine remote file's size, or\nremote server doesn't support ranges"",
Toast.LENGTH_LONG
).show();
}",1,0,0,0,0,0,0,0,0,0,1,7,0,0,1,0,6,5,0,0,1,0.44,9,3
2494_30,30,33,"if (fileSize > 0) {
debugFileResponse(file);
sendNextRangeRequest();
}",1,0,0,0,0,0,0,0,0,0,1,4,0,0,1,0,6,5,0,0,0,0.38,18,4
2494_48,48,48,long length = file.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,5,0,0,1,0.53,36,5
2493_1,1,1,    public void sendNextRangeRequest() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,2,0.56,1,1
2493_2,2,4,"if (file.length() < fileSize) {
onRunButtonPressed();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,4,1,0,1,0.57,0,0
2493_3,3,3,onRunButtonPressed();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,0,0.35,0,0
2492_1,1,2,"@Override
public RequestHandle executeSample(AsyncHttpClient client, String URL, Header[] headers, HttpEntity entity, ResponseHandlerInterface responseHandler) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,5,1,0,0,0.44,3,3
2492_3,3,7,"if (fileSize > 0) {
return client.get(this, URL, headers, null, responseHandler);
} else {
return client.head(this, URL, headers, null, responseHandler);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,7,5,1,0,3,0.58,0,0
2492_4,4,4,"return client.get(this, URL, headers, null, responseHandler);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.37,1,1
2492_5,5,5,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.17,0,0
2492_6,6,6,"return client.head(this, URL, headers, null, responseHandler);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.48,0,0
2491_1,1,2,"@Override
public RequestHandle executeSample(AsyncHttpClient client, String URL, Header[] headers, HttpEntity entity, ResponseHandlerInterface responseHandler) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,4,2,0,0,0.43,1,1
2491_3,3,7,"if (fileSize > 0) {
return client.get(this, URL, headers, null, responseHandler);
} else {
return client.head(this, URL, headers, null, responseHandler);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,7,4,2,0,3,0.58,0,0
2491_4,4,4,"return client.get(this, URL, headers, null, responseHandler);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,4,2,0,1,0.47,0,0
2491_5,5,5,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,2,0,0,0.14,1,0
2491_6,6,6,"return client.head(this, URL, headers, null, responseHandler);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,4,2,0,0,0.4,2,1
2490_1,1,2,"    @Override
protected void onCreate(Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,0,0,0,0.35,2,2
2490_3,3,3,super.onCreate(savedInstanceState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.26,1,1
2490_4,4,8,"try {
file = File.createTempFile(""temp_"", ""_handled"", getCacheDir());
} catch (IOException e) {
Log.e(LOG_TAG, ""Cannot create temporary file"", e);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,6,5,0,0,2,0.56,0,0
2490_5,5,5,"file = File.createTempFile(""temp_"", ""_handled"", getCacheDir());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.58,0,0
2490_6,6,6,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.34,1,0
2490_7,7,7,"Log.e(LOG_TAG, ""Cannot create temporary file"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,2,0.52,2,1
2446_1,1,1,"	public String getTokenTypeAsTargetLabel(Grammar g, int ttype) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,2,0.58,2,1
2446_2,2,2,String name = g.getTokenName(ttype);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,2,0.65,1,0
2446_3,3,5,"if ( Grammar.INVALID_TOKEN_NAME.equals(name) ) {
return String.valueOf(ttype);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,6,3,1,0,3,0.67,0,0
2446_4,4,4,return String.valueOf(ttype);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.46,1,0
2446_7,7,7,return name;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,1,0,2,0.75,4,2
2376_1,1,2,"    @Override
public void onCreate(Bundle icicle) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,1,0,0,0.29,7,4
2376_3,3,3,mPackageManager = getPackageManager();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.28,6,3
2376_4,4,4,mAppWidgetManager = AppWidgetManager.getInstance(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.28,5,2
2376_5,5,6,"mAppWidgetLoader = new AppWidgetLoader<PickAdapter.Item>
(this, mAppWidgetManager, this);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,4,3,1,0,0,0.3,3,1
2376_8,8,8,super.onCreate(icicle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,1,0,0,0.28,1,0
2376_10,10,10,"setResultData(RESULT_CANCELED, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,1,0,2,0.63,0,0
2376_12,12,12,final Intent intent = getIntent();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,1,0,0,0.2,2,1
2376_13,13,18,"if (intent.hasExtra(AppWidgetManager.EXTRA_APPWIDGET_ID)) {
mAppWidgetId = intent.getIntExtra(AppWidgetManager.EXTRA_APPWIDGET_ID,
AppWidgetManager.INVALID_APPWIDGET_ID);
} else {
finish();
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,0,4,3,1,0,0,0.34,3,1
2376_14,14,15,"mAppWidgetId = intent.getIntExtra(AppWidgetManager.EXTRA_APPWIDGET_ID,
AppWidgetManager.INVALID_APPWIDGET_ID);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,1,0,0,0.31,4,2
2376_16,16,16,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.28,6,4
2376_17,17,17,finish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.18,7,4
2295_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,12,6,1,0,0,0.38,8,5
2295_2,2,2,int n = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,6,1,0,0,0.36,7,4
2295_3,3,8,"for (String ind : indents) {
if (ind != null) {
n += ind.length();
out.write(ind);
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,1,12,6,1,0,1,0.5,1,0
2295_4,4,7,"if (ind != null) {
n += ind.length();
out.write(ind);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,12,6,1,0,0,0.37,2,0
2295_5,5,5,n += ind.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,6,1,0,0,0.37,4,1
2295_6,6,6,out.write(ind);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,6,1,0,0,0.31,3,0
2295_10,10,10,int indentWidth = n;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,12,6,1,0,2,0.63,0,0
2295_11,11,15,"if ( anchors_sp>=0 && anchors[anchors_sp]>indentWidth ) {
int remainder = anchors[anchors_sp]-indentWidth;
for (int i=1; i<=remainder; i++) out.write(' ');
n += remainder;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,1,12,6,1,0,3,0.72,1,0
2295_12,12,12,int remainder = anchors[anchors_sp]-indentWidth;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,6,1,0,3,0.76,2,1
2295_13,13,13,for (int i=1; i<=remainder; i++) out.write(' ');,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,12,6,1,0,0,0.42,3,2
2295_14,14,14,n += remainder;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,6,1,0,0,0.45,4,3
2295_17,17,17,charPosition += n;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,12,6,1,0,0,0.4,7,5
2295_18,18,18,charIndex += n;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,6,1,0,0,0.37,8,5
2295_19,19,19,return n;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,12,6,1,0,0,0.28,9,6
2294_1,1,2,"@Override
public int writeWrap(String wrap) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,11,4,3,0,1,0.46,1,1
2294_3,3,3,int n = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,4,3,0,1,0.54,0,0
2294_4,4,25,"if ( lineWidth!=NO_WRAP && wrap!=null && !atStartOfLine &&
charPosition >= lineWidth )
{
for (int i=0; i<wrap.length(); i++) {
char c = wrap.charAt(i);
if ( c=='\r' ) {
continue;
} else if ( c=='\n' ) {
out.write(newline);
n += newline.length();
charPosition = 0;
charIndex += newline.length();
n += indent();
}
else {
n++;
out.write(c);
charPosition++;
charIndex++;
}
}
}",1,0,0,0,0,0,0,0,0,16,3,22,0,1,0,0,11,4,3,0,5,0.69,0,0
2294_5,5,5,charPosition >= lineWidth ),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,4,3,0,2,0.61,1,0
2294_7,7,24,"for (int i=0; i<wrap.length(); i++) {
char c = wrap.charAt(i);
if ( c=='\r' ) {
continue;
} else if ( c=='\n' ) {
out.write(newline);
n += newline.length();
charPosition = 0;
charIndex += newline.length();
n += indent();
}
else {
n++;
out.write(c);
charPosition++;
charIndex++;
}
}",0,0,1,0,0,0,0,0,0,14,2,18,0,0,0,0,11,4,3,0,3,0.61,3,2
2294_8,8,8,char c = wrap.charAt(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,4,3,0,2,0.7,4,2
2294_9,9,23,"if ( c=='\r' ) {
continue;
} else if ( c=='\n' ) {
out.write(newline);
n += newline.length();
charPosition = 0;
charIndex += newline.length();
n += indent();
}
else {
n++;
out.write(c);
charPosition++;
charIndex++;
}",1,0,0,0,0,0,0,0,0,12,1,15,0,1,0,0,11,4,3,0,2,0.56,5,3
2294_10,10,10,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,4,3,0,0,0.28,6,4
2294_11,11,11,} else if ( c=='\n' ) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,4,3,0,1,0.53,7,5
2294_12,12,12,out.write(newline);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,4,3,0,0,0.24,8,6
2294_13,13,13,n += newline.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,4,3,0,1,0.6,9,7
2294_14,14,14,charPosition = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,4,3,0,1,0.54,10,8
2294_15,15,15,charIndex += newline.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,4,3,0,1,0.54,11,9
2294_16,16,16,n += indent();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,4,3,0,1,0.5,12,10
2294_18,18,18,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,4,3,0,0,0.34,14,12
2294_19,19,19,n++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,4,3,0,1,0.67,15,12
2294_20,20,20,out.write(c);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,4,3,0,0,0.35,16,13
2294_21,21,21,charPosition++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,4,3,0,1,0.56,17,14
2294_22,22,22,charIndex++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,4,3,0,1,0.54,18,15
2294_26,26,26,return n;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,11,4,3,0,1,0.55,22,17
2282_1,1,1,"private List<Class<?>> findSubclasses(URL location, String packageName, String searchingPackageName) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.5,17,11
2282_3,3,3,synchronized (results) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.24,15,10
2282_5,5,5,"Map<Class<?>, URL> thisResult = new TreeMap<>(CLASS_COMPARATOR);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,0,0,1,0.51,13,9
2282_6,6,6,List<Class<?>> v = synchronizedList(new ArrayList<Class<?>>());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,1,0.57,12,8
2282_8,8,8,List<URL> knownLocations = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.34,10,7
2282_9,9,9,knownLocations.add(location);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.29,9,6
2282_11,11,69,"for (URL url : knownLocations) {
File directory = new File(url.getFile());

if (directory.exists()) {
String[] files = directory.list();
for (String file : files) {
if (file.endsWith("".class"")) {
String classname = file.substring(0, file.length() - 6);

try {
Class<?> c = Class.forName(packageName + ""."" + classname);
if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (Exception ex) {
errors.add(ex);
}
}
}
} else {
try {
JarURLConnection conn = (JarURLConnection) url.openConnection();
JarFile jarFile = conn.getJarFile();

Enumeration<JarEntry> e = jarFile.entries();
while (e.hasMoreElements()) {
JarEntry entry = e.nextElement();
String entryname = entry.getName();

if (!entry.isDirectory() && entryname.endsWith("".class"")) {
String classname = entryname.substring(0, entryname.length() - 6);
if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}
classname = classname.replace('/', '.');

try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}
}
}
} catch (IOException ioex) {
errors.add(ioex);
}
}
}",0,0,0,1,0,0,0,0,0,41,7,59,0,0,1,1,3,2,0,0,1,0.49,0,0
2282_12,12,12,File directory = new File(url.getFile());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.28,6,4
2282_14,14,68,"if (directory.exists()) {
String[] files = directory.list();
for (String file : files) {
if (file.endsWith("".class"")) {
String classname = file.substring(0, file.length() - 6);

try {
Class<?> c = Class.forName(packageName + ""."" + classname);
if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (Exception ex) {
errors.add(ex);
}
}
}
} else {
try {
JarURLConnection conn = (JarURLConnection) url.openConnection();
JarFile jarFile = conn.getJarFile();

Enumeration<JarEntry> e = jarFile.entries();
while (e.hasMoreElements()) {
JarEntry entry = e.nextElement();
String entryname = entry.getName();

if (!entry.isDirectory() && entryname.endsWith("".class"")) {
String classname = entryname.substring(0, entryname.length() - 6);
if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}
classname = classname.replace('/', '.');

try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}
}
}
} catch (IOException ioex) {
errors.add(ioex);
}
}",1,0,0,0,0,0,0,0,0,39,6,55,0,0,1,0,3,2,0,0,1,0.5,0,0
2282_15,15,15,String[] files = directory.list();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.33,3,2
2282_16,16,29,"for (String file : files) {
if (file.endsWith("".class"")) {
String classname = file.substring(0, file.length() - 6);

try {
Class<?> c = Class.forName(packageName + ""."" + classname);
if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (Exception ex) {
errors.add(ex);
}
}
}",0,0,0,1,0,0,0,0,0,8,4,14,0,1,0,0,3,2,0,0,1,0.5,0,0
2282_17,17,28,"if (file.endsWith("".class"")) {
String classname = file.substring(0, file.length() - 6);

try {
Class<?> c = Class.forName(packageName + ""."" + classname);
if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (Exception ex) {
errors.add(ex);
}
}",1,0,0,0,0,0,0,0,0,7,3,12,0,0,0,0,3,2,0,0,1,0.51,0,0
2282_18,18,18,"String classname = file.substring(0, file.length() - 6);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.36,0,0
2282_20,20,27,"try {
Class<?> c = Class.forName(packageName + ""."" + classname);
if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (Exception ex) {
errors.add(ex);
}",0,0,0,0,1,0,0,0,0,5,2,8,0,0,1,0,3,2,0,0,1,0.47,2,1
2282_21,21,21,"Class<?> c = Class.forName(packageName + ""."" + classname);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.57,3,1
2282_22,22,24,"if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,2,0,0,0,0.34,4,2
2282_23,23,23,"thisResult.put(c, url);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.23,5,3
2282_25,25,25,} catch (Exception ex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.32,7,5
2282_26,26,26,errors.add(ex);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,8,5
2282_30,30,30,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.21,12,7
2282_31,31,67,"try {
JarURLConnection conn = (JarURLConnection) url.openConnection();
JarFile jarFile = conn.getJarFile();

Enumeration<JarEntry> e = jarFile.entries();
while (e.hasMoreElements()) {
JarEntry entry = e.nextElement();
String entryname = entry.getName();

if (!entry.isDirectory() && entryname.endsWith("".class"")) {
String classname = entryname.substring(0, entryname.length() - 6);
if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}
classname = classname.replace('/', '.');

try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}
}
}
} catch (IOException ioex) {
errors.add(ioex);
}",0,0,0,0,1,0,0,0,0,27,5,37,0,0,0,0,3,2,0,0,1,0.49,13,7
2282_32,32,32,JarURLConnection conn = (JarURLConnection) url.openConnection();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.29,14,8
2282_33,33,33,JarFile jarFile = conn.getJarFile();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.32,15,9
2282_35,35,35,Enumeration<JarEntry> e = jarFile.entries();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.32,17,11
2282_36,36,64,"while (e.hasMoreElements()) {
JarEntry entry = e.nextElement();
String entryname = entry.getName();

if (!entry.isDirectory() && entryname.endsWith("".class"")) {
String classname = entryname.substring(0, entryname.length() - 6);
if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}
classname = classname.replace('/', '.');

try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}
}
}",0,1,0,0,0,0,0,0,0,21,4,29,0,1,0,0,3,2,0,0,1,0.5,18,11
2282_37,37,37,JarEntry entry = e.nextElement();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.32,19,12
2282_38,38,38,String entryname = entry.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.33,20,13
2282_40,40,63,"if (!entry.isDirectory() && entryname.endsWith("".class"")) {
String classname = entryname.substring(0, entryname.length() - 6);
if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}
classname = classname.replace('/', '.');

try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}
}",1,0,0,0,0,0,0,0,0,18,3,24,0,0,1,0,3,2,0,0,1,0.5,22,15
2282_41,41,41,"String classname = entryname.substring(0, entryname.length() - 6);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.37,23,15
2282_42,42,44,"if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,3,2,0,0,0,0.37,24,16
2282_43,43,43,classname = classname.substring(1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,25,17
2282_45,45,45,"classname = classname.replace('/', '.');",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.35,27,19
2282_47,47,62,"try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}",0,0,0,0,1,0,0,0,0,13,2,16,0,0,1,0,3,2,0,0,1,0.46,29,20
2282_48,48,48,Class<?> c = Class.forName(classname);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.6,30,20
2282_49,49,51,"if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,2,0,0,0,0.33,31,21
2282_50,50,50,"thisResult.put(c, url);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.23,32,22
2282_52,52,52,} catch (ClassNotFoundException cnfex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.51,34,24
2282_53,53,53,errors.add(cnfex);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.28,35,24
2282_54,54,54,} catch (NoClassDefFoundError ncdfe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.51,36,25
2282_55,55,55,errors.add(ncdfe);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.28,37,26
2282_56,56,56,} catch (UnsatisfiedLinkError ule) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,38,27
2282_57,57,57,errors.add(ule);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.28,39,28
2282_58,58,58,} catch (Exception exception) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.29,40,29
2282_59,59,59,errors.add(exception);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.29,41,30
2282_60,60,60,} catch (Error error) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,42,31
2282_61,61,61,errors.add(error);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.28,43,32
2282_65,65,65,} catch (IOException ioex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,47,34
2282_66,66,66,errors.add(ioex);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.28,48,34
2282_71,71,71,results.putAll(thisResult);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.2,53,36
2282_73,73,75,"for (Class<?> aClass : thisResult.keySet()) {
v.add(aClass);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,1,0,3,2,0,0,1,0.51,55,37
2282_74,74,74,v.add(aClass);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.5,56,37
2282_76,76,76,return v;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.19,58,39
2281_1,1,1,"private List<Class<?>> findSubclasses(URL location, String packageName, String searchingPackageName) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.47,16,10
2281_3,3,3,synchronized (results) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.27,14,9
2281_5,5,5,"Map<Class<?>, URL> thisResult = new TreeMap<>(CLASS_COMPARATOR);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.53,12,8
2281_6,6,6,List<Class<?>> v = synchronizedList(new ArrayList<Class<?>>());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.48,11,7
2281_8,8,8,List<URL> knownLocations = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.35,9,6
2281_9,9,9,knownLocations.add(location);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.37,8,5
2281_11,11,69,"for (URL url : knownLocations) {
File directory = new File(url.getFile());

if (directory.exists()) {
String[] files = directory.list();
for (String file : files) {
if (file.endsWith("".class"")) {
String classname = file.substring(0, file.length() - 6);

try {
Class<?> c = Class.forName(packageName + ""."" + classname);
if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (Exception ex) {
errors.add(ex);
}
}
}
} else {
try {
JarURLConnection conn = (JarURLConnection) url.openConnection();
JarFile jarFile = conn.getJarFile();

Enumeration<JarEntry> e = jarFile.entries();
while (e.hasMoreElements()) {
JarEntry entry = e.nextElement();
String entryname = entry.getName();

if (!entry.isDirectory() && entryname.endsWith("".class"")) {
String classname = entryname.substring(0, entryname.length() - 6);
if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}
classname = classname.replace('/', '.');

try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}
}
}
} catch (IOException ioex) {
errors.add(ioex);
}
}
}",0,0,0,1,0,0,0,0,0,41,7,59,0,0,1,1,3,3,0,0,2,0.64,0,0
2281_12,12,12,File directory = new File(url.getFile());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.58,5,3
2281_14,14,68,"if (directory.exists()) {
String[] files = directory.list();
for (String file : files) {
if (file.endsWith("".class"")) {
String classname = file.substring(0, file.length() - 6);

try {
Class<?> c = Class.forName(packageName + ""."" + classname);
if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (Exception ex) {
errors.add(ex);
}
}
}
} else {
try {
JarURLConnection conn = (JarURLConnection) url.openConnection();
JarFile jarFile = conn.getJarFile();

Enumeration<JarEntry> e = jarFile.entries();
while (e.hasMoreElements()) {
JarEntry entry = e.nextElement();
String entryname = entry.getName();

if (!entry.isDirectory() && entryname.endsWith("".class"")) {
String classname = entryname.substring(0, entryname.length() - 6);
if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}
classname = classname.replace('/', '.');

try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}
}
}
} catch (IOException ioex) {
errors.add(ioex);
}
}",1,0,0,0,0,0,0,0,0,39,6,55,0,0,1,0,3,3,0,0,2,0.63,0,0
2281_15,15,15,String[] files = directory.list();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.5,2,1
2281_16,16,29,"for (String file : files) {
if (file.endsWith("".class"")) {
String classname = file.substring(0, file.length() - 6);

try {
Class<?> c = Class.forName(packageName + ""."" + classname);
if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (Exception ex) {
errors.add(ex);
}
}
}",0,0,0,1,0,0,0,0,0,8,4,14,0,1,0,0,3,3,0,0,2,0.67,0,0
2281_17,17,28,"if (file.endsWith("".class"")) {
String classname = file.substring(0, file.length() - 6);

try {
Class<?> c = Class.forName(packageName + ""."" + classname);
if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (Exception ex) {
errors.add(ex);
}
}",1,0,0,0,0,0,0,0,0,7,3,12,0,0,0,0,3,3,0,0,2,0.66,0,0
2281_18,18,18,"String classname = file.substring(0, file.length() - 6);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.52,1,0
2281_20,20,27,"try {
Class<?> c = Class.forName(packageName + ""."" + classname);
if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (Exception ex) {
errors.add(ex);
}",0,0,0,0,1,0,0,0,0,5,2,8,0,0,1,0,3,3,0,0,1,0.54,3,2
2281_21,21,21,"Class<?> c = Class.forName(packageName + ""."" + classname);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.54,4,2
2281_22,22,24,"if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,0,0.33,5,3
2281_23,23,23,"thisResult.put(c, url);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.27,6,4
2281_25,25,25,} catch (Exception ex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.44,8,6
2281_26,26,26,errors.add(ex);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.42,9,6
2281_30,30,30,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.15,13,8
2281_31,31,67,"try {
JarURLConnection conn = (JarURLConnection) url.openConnection();
JarFile jarFile = conn.getJarFile();

Enumeration<JarEntry> e = jarFile.entries();
while (e.hasMoreElements()) {
JarEntry entry = e.nextElement();
String entryname = entry.getName();

if (!entry.isDirectory() && entryname.endsWith("".class"")) {
String classname = entryname.substring(0, entryname.length() - 6);
if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}
classname = classname.replace('/', '.');

try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}
}
}
} catch (IOException ioex) {
errors.add(ioex);
}",0,0,0,0,1,0,0,0,0,27,5,37,0,0,0,0,3,3,0,0,2,0.6,14,8
2281_32,32,32,JarURLConnection conn = (JarURLConnection) url.openConnection();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.31,15,9
2281_33,33,33,JarFile jarFile = conn.getJarFile();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,3,3,0,0,1,0.56,16,10
2281_35,35,35,Enumeration<JarEntry> e = jarFile.entries();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,1,0.55,18,12
2281_36,36,64,"while (e.hasMoreElements()) {
JarEntry entry = e.nextElement();
String entryname = entry.getName();

if (!entry.isDirectory() && entryname.endsWith("".class"")) {
String classname = entryname.substring(0, entryname.length() - 6);
if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}
classname = classname.replace('/', '.');

try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}
}
}",0,1,0,0,0,0,0,0,0,21,4,29,0,1,0,0,3,3,0,0,1,0.5,19,12
2281_37,37,37,JarEntry entry = e.nextElement();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.38,20,13
2281_38,38,38,String entryname = entry.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.35,21,14
2281_40,40,63,"if (!entry.isDirectory() && entryname.endsWith("".class"")) {
String classname = entryname.substring(0, entryname.length() - 6);
if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}
classname = classname.replace('/', '.');

try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}
}",1,0,0,0,0,0,0,0,0,18,3,24,0,0,1,0,3,3,0,0,1,0.5,23,16
2281_41,41,41,"String classname = entryname.substring(0, entryname.length() - 6);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,3,0,0,0,0.31,24,16
2281_42,42,44,"if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,3,3,0,0,0,0.23,25,17
2281_43,43,43,classname = classname.substring(1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.19,26,18
2281_45,45,45,"classname = classname.replace('/', '.');",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.23,28,20
2281_47,47,62,"try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}",0,0,0,0,1,0,0,0,0,13,2,16,0,0,1,0,3,3,0,0,1,0.48,30,21
2281_48,48,48,Class<?> c = Class.forName(classname);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.59,31,21
2281_49,49,51,"if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,0,0.32,32,22
2281_50,50,50,"thisResult.put(c, url);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.27,33,23
2281_52,52,52,} catch (ClassNotFoundException cnfex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.53,35,25
2281_53,53,53,errors.add(cnfex);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,36,25
2281_54,54,54,} catch (NoClassDefFoundError ncdfe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.53,37,26
2281_55,55,55,errors.add(ncdfe);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,38,27
2281_56,56,56,} catch (UnsatisfiedLinkError ule) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.31,39,28
2281_57,57,57,errors.add(ule);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,40,29
2281_58,58,58,} catch (Exception exception) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.31,41,30
2281_59,59,59,errors.add(exception);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,42,31
2281_60,60,60,} catch (Error error) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.29,43,32
2281_61,61,61,errors.add(error);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.29,44,33
2281_65,65,65,} catch (IOException ioex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,48,35
2281_66,66,66,errors.add(ioex);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,49,35
2281_71,71,71,results.putAll(thisResult);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.28,54,37
2281_73,73,75,"for (Class<?> aClass : thisResult.keySet()) {
v.add(aClass);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,1,0,3,3,0,0,1,0.54,56,38
2281_74,74,74,v.add(aClass);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.53,57,38
2281_76,76,76,return v;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.22,59,40
2280_1,1,1,"private List<Class<?>> findSubclasses(URL location, String packageName, String searchingPackageName) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,2,0.56,14,8
2280_3,3,3,synchronized (results) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,1,0,0,0.18,12,7
2280_5,5,5,"Map<Class<?>, URL> thisResult = new TreeMap<>(CLASS_COMPARATOR);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,4,1,0,0,0.29,10,6
2280_6,6,6,List<Class<?>> v = synchronizedList(new ArrayList<Class<?>>());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,1,0,1,0.49,9,5
2280_8,8,8,List<URL> knownLocations = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,1,0,1,0.56,7,4
2280_9,9,9,knownLocations.add(location);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,1,0,0,0.38,6,3
2280_11,11,69,"for (URL url : knownLocations) {
File directory = new File(url.getFile());

if (directory.exists()) {
String[] files = directory.list();
for (String file : files) {
if (file.endsWith("".class"")) {
String classname = file.substring(0, file.length() - 6);

try {
Class<?> c = Class.forName(packageName + ""."" + classname);
if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (Exception ex) {
errors.add(ex);
}
}
}
} else {
try {
JarURLConnection conn = (JarURLConnection) url.openConnection();
JarFile jarFile = conn.getJarFile();

Enumeration<JarEntry> e = jarFile.entries();
while (e.hasMoreElements()) {
JarEntry entry = e.nextElement();
String entryname = entry.getName();

if (!entry.isDirectory() && entryname.endsWith("".class"")) {
String classname = entryname.substring(0, entryname.length() - 6);
if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}
classname = classname.replace('/', '.');

try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}
}
}
} catch (IOException ioex) {
errors.add(ioex);
}
}
}",0,0,0,1,0,0,0,0,0,41,7,59,0,0,1,1,5,4,1,0,4,0.66,0,0
2280_12,12,12,File directory = new File(url.getFile());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,1,0,2,0.65,3,1
2280_14,14,68,"if (directory.exists()) {
String[] files = directory.list();
for (String file : files) {
if (file.endsWith("".class"")) {
String classname = file.substring(0, file.length() - 6);

try {
Class<?> c = Class.forName(packageName + ""."" + classname);
if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (Exception ex) {
errors.add(ex);
}
}
}
} else {
try {
JarURLConnection conn = (JarURLConnection) url.openConnection();
JarFile jarFile = conn.getJarFile();

Enumeration<JarEntry> e = jarFile.entries();
while (e.hasMoreElements()) {
JarEntry entry = e.nextElement();
String entryname = entry.getName();

if (!entry.isDirectory() && entryname.endsWith("".class"")) {
String classname = entryname.substring(0, entryname.length() - 6);
if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}
classname = classname.replace('/', '.');

try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}
}
}
} catch (IOException ioex) {
errors.add(ioex);
}
}",1,0,0,0,0,0,0,0,0,39,6,55,0,0,1,0,5,4,1,0,4,0.65,0,0
2280_15,15,15,String[] files = directory.list();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,2,0.64,0,0
2280_16,16,29,"for (String file : files) {
if (file.endsWith("".class"")) {
String classname = file.substring(0, file.length() - 6);

try {
Class<?> c = Class.forName(packageName + ""."" + classname);
if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (Exception ex) {
errors.add(ex);
}
}
}",0,0,0,1,0,0,0,0,0,8,4,14,0,1,0,0,5,4,1,0,2,0.54,1,0
2280_17,17,28,"if (file.endsWith("".class"")) {
String classname = file.substring(0, file.length() - 6);

try {
Class<?> c = Class.forName(packageName + ""."" + classname);
if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (Exception ex) {
errors.add(ex);
}
}",1,0,0,0,0,0,0,0,0,7,3,12,0,0,0,0,5,4,1,0,2,0.52,2,1
2280_18,18,18,"String classname = file.substring(0, file.length() - 6);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,1,0,1,0.47,3,2
2280_20,20,27,"try {
Class<?> c = Class.forName(packageName + ""."" + classname);
if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (Exception ex) {
errors.add(ex);
}",0,0,0,0,1,0,0,0,0,5,2,8,0,0,1,0,5,4,1,0,1,0.44,5,4
2280_21,21,21,"Class<?> c = Class.forName(packageName + ""."" + classname);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.44,6,4
2280_22,22,24,"if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,4,1,0,1,0.45,7,5
2280_23,23,23,"thisResult.put(c, url);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.28,8,6
2280_25,25,25,} catch (Exception ex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.31,10,8
2280_26,26,26,errors.add(ex);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.31,11,8
2280_30,30,30,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.21,15,10
2280_31,31,67,"try {
JarURLConnection conn = (JarURLConnection) url.openConnection();
JarFile jarFile = conn.getJarFile();

Enumeration<JarEntry> e = jarFile.entries();
while (e.hasMoreElements()) {
JarEntry entry = e.nextElement();
String entryname = entry.getName();

if (!entry.isDirectory() && entryname.endsWith("".class"")) {
String classname = entryname.substring(0, entryname.length() - 6);
if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}
classname = classname.replace('/', '.');

try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}
}
}
} catch (IOException ioex) {
errors.add(ioex);
}",0,0,0,0,1,0,0,0,0,27,5,37,0,0,0,0,5,4,1,0,3,0.58,16,10
2280_32,32,32,JarURLConnection conn = (JarURLConnection) url.openConnection();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.38,17,11
2280_33,33,33,JarFile jarFile = conn.getJarFile();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,5,4,1,0,2,0.68,18,12
2280_35,35,35,Enumeration<JarEntry> e = jarFile.entries();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,1,0,1,0.5,20,14
2280_36,36,64,"while (e.hasMoreElements()) {
JarEntry entry = e.nextElement();
String entryname = entry.getName();

if (!entry.isDirectory() && entryname.endsWith("".class"")) {
String classname = entryname.substring(0, entryname.length() - 6);
if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}
classname = classname.replace('/', '.');

try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}
}
}",0,1,0,0,0,0,0,0,0,21,4,29,0,1,0,0,5,4,1,0,2,0.5,21,14
2280_37,37,37,JarEntry entry = e.nextElement();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.39,22,15
2280_38,38,38,String entryname = entry.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,5,4,1,0,1,0.49,23,16
2280_40,40,63,"if (!entry.isDirectory() && entryname.endsWith("".class"")) {
String classname = entryname.substring(0, entryname.length() - 6);
if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}
classname = classname.replace('/', '.');

try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}
}",1,0,0,0,0,0,0,0,0,18,3,24,0,0,1,0,5,4,1,0,2,0.49,25,18
2280_41,41,41,"String classname = entryname.substring(0, entryname.length() - 6);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,4,1,0,0,0.31,26,18
2280_42,42,44,"if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,4,1,0,0,0.21,27,19
2280_43,43,43,classname = classname.substring(1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.21,28,20
2280_45,45,45,"classname = classname.replace('/', '.');",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,1,0,0,0.23,30,22
2280_47,47,62,"try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}",0,0,0,0,1,0,0,0,0,13,2,16,0,0,1,0,5,4,1,0,2,0.48,32,23
2280_48,48,48,Class<?> c = Class.forName(classname);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.31,33,23
2280_49,49,51,"if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,4,1,0,2,0.55,34,24
2280_50,50,50,"thisResult.put(c, url);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.28,35,25
2280_52,52,52,} catch (ClassNotFoundException cnfex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.28,37,27
2280_53,53,53,errors.add(cnfex);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.26,38,27
2280_54,54,54,} catch (NoClassDefFoundError ncdfe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.29,39,28
2280_55,55,55,errors.add(ncdfe);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.26,40,29
2280_56,56,56,} catch (UnsatisfiedLinkError ule) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.32,41,30
2280_57,57,57,errors.add(ule);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.26,42,31
2280_58,58,58,} catch (Exception exception) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.26,43,32
2280_59,59,59,errors.add(exception);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.26,44,33
2280_60,60,60,} catch (Error error) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.24,45,34
2280_61,61,61,errors.add(error);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.25,46,35
2280_65,65,65,} catch (IOException ioex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.29,50,37
2280_66,66,66,errors.add(ioex);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.26,51,37
2280_71,71,71,results.putAll(thisResult);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,4,1,0,0,0.24,56,39
2280_73,73,75,"for (Class<?> aClass : thisResult.keySet()) {
v.add(aClass);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,1,0,5,4,1,0,0,0.29,58,40
2280_74,74,74,v.add(aClass);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.29,59,40
2280_76,76,76,return v;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,5,4,1,0,0,0.24,61,42
2279_1,1,1,"private List<Class<?>> findSubclasses(URL location, String packageName, String searchingPackageName) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.5,11,6
2279_3,3,3,synchronized (results) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.23,9,5
2279_5,5,5,"Map<Class<?>, URL> thisResult = new TreeMap<>(CLASS_COMPARATOR);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.37,7,4
2279_6,6,6,List<Class<?>> v = synchronizedList(new ArrayList<Class<?>>());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.32,6,3
2279_8,8,8,List<URL> knownLocations = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.38,4,2
2279_9,9,9,knownLocations.add(location);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.36,3,1
2279_11,11,69,"for (URL url : knownLocations) {
File directory = new File(url.getFile());

if (directory.exists()) {
String[] files = directory.list();
for (String file : files) {
if (file.endsWith("".class"")) {
String classname = file.substring(0, file.length() - 6);

try {
Class<?> c = Class.forName(packageName + ""."" + classname);
if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (Exception ex) {
errors.add(ex);
}
}
}
} else {
try {
JarURLConnection conn = (JarURLConnection) url.openConnection();
JarFile jarFile = conn.getJarFile();

Enumeration<JarEntry> e = jarFile.entries();
while (e.hasMoreElements()) {
JarEntry entry = e.nextElement();
String entryname = entry.getName();

if (!entry.isDirectory() && entryname.endsWith("".class"")) {
String classname = entryname.substring(0, entryname.length() - 6);
if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}
classname = classname.replace('/', '.');

try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}
}
}
} catch (IOException ioex) {
errors.add(ioex);
}
}
}",0,0,0,1,0,0,0,0,0,41,7,59,0,0,1,1,4,2,1,0,3,0.64,0,0
2279_12,12,12,File directory = new File(url.getFile());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,2,0.69,0,0
2279_14,14,68,"if (directory.exists()) {
String[] files = directory.list();
for (String file : files) {
if (file.endsWith("".class"")) {
String classname = file.substring(0, file.length() - 6);

try {
Class<?> c = Class.forName(packageName + ""."" + classname);
if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (Exception ex) {
errors.add(ex);
}
}
}
} else {
try {
JarURLConnection conn = (JarURLConnection) url.openConnection();
JarFile jarFile = conn.getJarFile();

Enumeration<JarEntry> e = jarFile.entries();
while (e.hasMoreElements()) {
JarEntry entry = e.nextElement();
String entryname = entry.getName();

if (!entry.isDirectory() && entryname.endsWith("".class"")) {
String classname = entryname.substring(0, entryname.length() - 6);
if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}
classname = classname.replace('/', '.');

try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}
}
}
} catch (IOException ioex) {
errors.add(ioex);
}
}",1,0,0,0,0,0,0,0,0,39,6,55,0,0,1,0,4,2,1,0,3,0.64,2,1
2279_15,15,15,String[] files = directory.list();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.49,3,1
2279_16,16,29,"for (String file : files) {
if (file.endsWith("".class"")) {
String classname = file.substring(0, file.length() - 6);

try {
Class<?> c = Class.forName(packageName + ""."" + classname);
if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (Exception ex) {
errors.add(ex);
}
}
}",0,0,0,1,0,0,0,0,0,8,4,14,0,1,0,0,4,2,1,0,2,0.58,4,2
2279_17,17,28,"if (file.endsWith("".class"")) {
String classname = file.substring(0, file.length() - 6);

try {
Class<?> c = Class.forName(packageName + ""."" + classname);
if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (Exception ex) {
errors.add(ex);
}
}",1,0,0,0,0,0,0,0,0,7,3,12,0,0,0,0,4,2,1,0,2,0.57,5,3
2279_18,18,18,"String classname = file.substring(0, file.length() - 6);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,1,0.45,6,4
2279_20,20,27,"try {
Class<?> c = Class.forName(packageName + ""."" + classname);
if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (Exception ex) {
errors.add(ex);
}",0,0,0,0,1,0,0,0,0,5,2,8,0,0,1,0,4,2,1,0,1,0.49,8,6
2279_21,21,21,"Class<?> c = Class.forName(packageName + ""."" + classname);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.49,9,6
2279_22,22,24,"if (packageName.startsWith(searchingPackageName)) {
thisResult.put(c, url);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,2,1,0,1,0.47,10,7
2279_23,23,23,"thisResult.put(c, url);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.3,11,8
2279_25,25,25,} catch (Exception ex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.35,13,10
2279_26,26,26,errors.add(ex);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.34,14,10
2279_30,30,30,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.09,18,12
2279_31,31,67,"try {
JarURLConnection conn = (JarURLConnection) url.openConnection();
JarFile jarFile = conn.getJarFile();

Enumeration<JarEntry> e = jarFile.entries();
while (e.hasMoreElements()) {
JarEntry entry = e.nextElement();
String entryname = entry.getName();

if (!entry.isDirectory() && entryname.endsWith("".class"")) {
String classname = entryname.substring(0, entryname.length() - 6);
if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}
classname = classname.replace('/', '.');

try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}
}
}
} catch (IOException ioex) {
errors.add(ioex);
}",0,0,0,0,1,0,0,0,0,27,5,37,0,0,0,0,4,2,1,0,3,0.63,19,12
2279_32,32,32,JarURLConnection conn = (JarURLConnection) url.openConnection();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.41,20,13
2279_33,33,33,JarFile jarFile = conn.getJarFile();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,4,2,1,0,2,0.73,21,14
2279_35,35,35,Enumeration<JarEntry> e = jarFile.entries();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,1,0.51,23,16
2279_36,36,64,"while (e.hasMoreElements()) {
JarEntry entry = e.nextElement();
String entryname = entry.getName();

if (!entry.isDirectory() && entryname.endsWith("".class"")) {
String classname = entryname.substring(0, entryname.length() - 6);
if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}
classname = classname.replace('/', '.');

try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}
}
}",0,1,0,0,0,0,0,0,0,21,4,29,0,1,0,0,4,2,1,0,2,0.53,24,16
2279_37,37,37,JarEntry entry = e.nextElement();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.35,25,17
2279_38,38,38,String entryname = entry.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,4,2,1,0,1,0.5,26,18
2279_40,40,63,"if (!entry.isDirectory() && entryname.endsWith("".class"")) {
String classname = entryname.substring(0, entryname.length() - 6);
if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}
classname = classname.replace('/', '.');

try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}
}",1,0,0,0,0,0,0,0,0,18,3,24,0,0,1,0,4,2,1,0,2,0.53,28,20
2279_41,41,41,"String classname = entryname.substring(0, entryname.length() - 6);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.26,29,20
2279_42,42,44,"if (classname.startsWith(""/"")) {
classname = classname.substring(1);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,2,1,0,0,0.14,30,21
2279_43,43,43,classname = classname.substring(1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.12,31,22
2279_45,45,45,"classname = classname.replace('/', '.');",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.21,33,24
2279_47,47,62,"try {
Class<?> c = Class.forName(classname);
if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}
} catch (ClassNotFoundException cnfex) {
errors.add(cnfex);
} catch (NoClassDefFoundError ncdfe) {
errors.add(ncdfe);
} catch (UnsatisfiedLinkError ule) {
errors.add(ule);
} catch (Exception exception) {
errors.add(exception);
} catch (Error error) {
errors.add(error);
}",0,0,0,0,1,0,0,0,0,13,2,16,0,0,1,0,4,2,1,0,2,0.53,35,25
2279_48,48,48,Class<?> c = Class.forName(classname);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.36,36,25
2279_49,49,51,"if (c.getPackage().getName().startsWith(searchingPackageName)) {
thisResult.put(c, url);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,2,1,0,2,0.58,37,26
2279_50,50,50,"thisResult.put(c, url);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.3,38,27
2279_52,52,52,} catch (ClassNotFoundException cnfex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.33,40,29
2279_53,53,53,errors.add(cnfex);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.28,41,29
2279_54,54,54,} catch (NoClassDefFoundError ncdfe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.34,42,30
2279_55,55,55,errors.add(ncdfe);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.28,43,31
2279_56,56,56,} catch (UnsatisfiedLinkError ule) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.32,44,32
2279_57,57,57,errors.add(ule);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.28,45,33
2279_58,58,58,} catch (Exception exception) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.31,46,34
2279_59,59,59,errors.add(exception);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.29,47,35
2279_60,60,60,} catch (Error error) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.31,48,36
2279_61,61,61,errors.add(error);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.27,49,37
2279_65,65,65,} catch (IOException ioex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.36,53,39
2279_66,66,66,errors.add(ioex);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.28,54,39
2279_71,71,71,results.putAll(thisResult);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.25,59,41
2279_73,73,75,"for (Class<?> aClass : thisResult.keySet()) {
v.add(aClass);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,1,0,4,2,1,0,0,0.3,61,42
2279_74,74,74,v.add(aClass);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.3,62,42
2279_76,76,76,return v;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.2,64,44
2278_1,1,1,"	private void includeJar(File file, Map<URL, String> map) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,2,0.6,20,13
2278_2,2,4,"if (file.isDirectory()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,7,7,0,0,0,0.39,17,11
2278_3,3,3,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.29,18,11
2278_6,6,6,URL jarURL = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,7,0,0,1,0.58,15,10
2278_7,7,7,JarFile jar = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,7,0,0,1,0.65,14,9
2278_8,8,15,"try {
jarURL = new URL(""file:/"" + file.getCanonicalPath());
jarURL = new URL(""jar:"" + jarURL.toExternalForm() + ""!/"");
JarURLConnection conn = (JarURLConnection) jarURL.openConnection();
jar = conn.getJarFile();
} catch (Exception e) {
return;
}",0,0,0,0,1,0,0,0,0,6,1,8,0,1,0,1,7,7,0,0,2,0.62,6,2
2278_9,9,9,"jarURL = new URL(""file:/"" + file.getCanonicalPath());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,1,0.53,12,7
2278_10,10,10,"jarURL = new URL(""jar:"" + jarURL.toExternalForm() + ""!/"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,1,0.59,11,6
2278_11,11,11,JarURLConnection conn = (JarURLConnection) jarURL.openConnection();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,7,0,0,1,0.54,10,5
2278_12,12,12,jar = conn.getJarFile();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,1,0.6,9,4
2278_13,13,13,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.61,8,3
2278_14,14,14,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.29,7,2
2278_17,17,19,"if (jar == null || jarURL == null) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,7,0,0,1,0.59,2,0
2278_18,18,18,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.29,3,0
2278_21,21,21,"map.put(jarURL, """");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,7,0,0,1,0.53,0,0
2278_23,23,23,Enumeration<JarEntry> e = jar.entries();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,7,0,0,2,0.69,2,1
2278_24,24,38,"while (e.hasMoreElements()) {
JarEntry entry = e.nextElement();

if (entry.isDirectory()) {
if (entry.getName().toUpperCase().equals(""META-INF/"")) {
continue;
}

try {
map.put(new URL(jarURL.toExternalForm() + entry.getName()), packageNameFor(entry));
} catch (MalformedURLException murl) {
continue;
}
}
}",0,1,0,0,0,0,0,0,0,8,3,15,0,1,0,0,7,7,0,0,3,0.63,3,1
2278_25,25,25,JarEntry entry = e.nextElement();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,7,0,0,2,0.62,4,2
2278_27,27,37,"if (entry.isDirectory()) {
if (entry.getName().toUpperCase().equals(""META-INF/"")) {
continue;
}

try {
map.put(new URL(jarURL.toExternalForm() + entry.getName()), packageNameFor(entry));
} catch (MalformedURLException murl) {
continue;
}
}",1,0,0,0,0,0,0,0,0,6,2,11,0,0,1,0,7,7,0,0,2,0.58,6,4
2278_28,28,30,"if (entry.getName().toUpperCase().equals(""META-INF/"")) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,7,7,0,0,0,0.45,7,4
2278_29,29,29,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.22,8,5
2278_32,32,36,"try {
map.put(new URL(jarURL.toExternalForm() + entry.getName()), packageNameFor(entry));
} catch (MalformedURLException murl) {
continue;
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,1,0,7,7,0,0,2,0.59,11,7
2278_33,33,33,"map.put(new URL(jarURL.toExternalForm() + entry.getName()), packageNameFor(entry));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,2,0.57,12,7
2278_34,34,34,} catch (MalformedURLException murl) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.49,13,8
2278_35,35,35,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.22,14,9
2277_1,1,1,"	private void include(String name, File file, Map<URL, String> map) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.36,18,12
2277_2,2,4,"if (!file.exists()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,1,1,0,0,0.26,15,10
2277_3,3,3,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.11,16,10
2277_5,5,8,"if (!file.isDirectory()) {
includeJar(file, map);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,3,1,1,0,0,0.39,11,7
2277_6,6,6,"includeJar(file, map);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.41,13,8
2277_7,7,7,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.11,12,7
2277_10,10,14,"if (name == null) {
name = """";
} else {
name += ""."";
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,3,1,1,0,0,0.3,5,3
2277_11,11,11,"name = """";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.35,8,5
2277_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.13,7,4
2277_13,13,13,"name += ""."";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.35,6,3
2277_16,16,16,File[] dirs = file.listFiles(DIRECTORIES_ONLY);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,1,1,0,0,0.35,3,2
2277_17,17,25,"for (File dir : dirs) {
try {
map.put(new URL(""file://"" + dir.getCanonicalPath()), name + dir.getName());
} catch (IOException ioe) {
return;
}

include(name + dir.getName(), dir, map);
}",0,0,0,1,0,0,0,0,0,5,2,9,0,1,0,0,3,1,1,0,0,0.42,0,0
2277_18,18,22,"try {
map.put(new URL(""file://"" + dir.getCanonicalPath()), name + dir.getName());
} catch (IOException ioe) {
return;
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,1,3,1,1,0,0,0.38,0,0
2277_19,19,19,"map.put(new URL(""file://"" + dir.getCanonicalPath()), name + dir.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.39,0,0
2277_20,20,20,} catch (IOException ioe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.29,1,0
2277_21,21,21,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.11,2,1
2277_24,24,24,"include(name + dir.getName(), dir, map);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,1,0,0,0.42,5,3
2276_1,1,1,"	private void include(String name, File file, Map<URL, String> map) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.36,15,9
2276_2,2,4,"if (!file.exists()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,1,1,0,0,0.15,12,7
2276_3,3,3,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,-0.03,13,7
2276_5,5,8,"if (!file.isDirectory()) {
includeJar(file, map);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,2,1,1,0,0,0.36,8,4
2276_6,6,6,"includeJar(file, map);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.38,10,5
2276_7,7,7,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,-0.03,9,4
2276_10,10,14,"if (name == null) {
name = """";
} else {
name += ""."";
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,2,1,1,0,0,0.17,2,0
2276_11,11,11,"name = """";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.2,5,2
2276_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,-0.01,4,1
2276_13,13,13,"name += ""."";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.2,3,0
2276_16,16,16,File[] dirs = file.listFiles(DIRECTORIES_ONLY);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,1,1,0,0,0.35,0,0
2276_17,17,25,"for (File dir : dirs) {
try {
map.put(new URL(""file://"" + dir.getCanonicalPath()), name + dir.getName());
} catch (IOException ioe) {
return;
}

include(name + dir.getName(), dir, map);
}",0,0,0,1,0,0,0,0,0,5,2,9,0,1,0,0,2,1,1,0,0,0.35,1,0
2276_18,18,22,"try {
map.put(new URL(""file://"" + dir.getCanonicalPath()), name + dir.getName());
} catch (IOException ioe) {
return;
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,1,2,1,1,0,0,0.25,2,1
2276_19,19,19,"map.put(new URL(""file://"" + dir.getCanonicalPath()), name + dir.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.26,3,2
2276_20,20,20,} catch (IOException ioe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.21,4,3
2276_21,21,21,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,-0.03,5,4
2276_24,24,24,"include(name + dir.getName(), dir, map);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,1,1,0,0,0.37,8,6
2249_1,1,2,"    @Override
public boolean deleteSharedPreferences(String name) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,0,0.29,4,3
2249_3,3,3,synchronized (ContextImpl.class) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.42,3,2
2249_4,4,4,final File prefs = getSharedPreferencesPath(name);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.34,2,1
2249_5,5,5,final File prefsBackup = SharedPreferencesImpl.makeBackupFile(prefs);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,3,2,1,0,0,0.41,1,0
2249_7,7,7,"final ArrayMap<File, SharedPreferencesImpl> cache = getSharedPreferencesCacheLocked();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,1,0,1,0.55,0,0
2249_8,8,8,cache.remove(prefs);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,1,0,1,0.61,1,0
2249_10,10,10,prefs.delete();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,2,1,0,0,0.33,3,2
2249_11,11,11,prefsBackup.delete();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,2,1,0,0,0.33,4,2
2249_13,13,13,return !(prefs.exists() || prefsBackup.exists());,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,2,1,0,0,0.34,6,4
2248_1,1,2,"@Override
public void reloadSharedPreferences() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,4,2,0,0,0.35,0,0
2248_3,3,3,ArrayList<SharedPreferencesImpl> spImpls = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,4,2,0,2,0.61,0,0
2248_4,4,4,synchronized (ContextImpl.class) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,2,0.64,1,0
2248_5,5,5,"final ArrayMap<File, SharedPreferencesImpl> cache = getSharedPreferencesCacheLocked();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,2,0,2,0.54,2,1
2248_6,6,11,"for (int i = 0; i < cache.size(); i++) {
final SharedPreferencesImpl sp = cache.valueAt(i);
if (sp != null) {
spImpls.add(sp);
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,1,0,0,8,4,2,0,2,0.55,3,2
2248_7,7,7,final SharedPreferencesImpl sp = cache.valueAt(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,2,0,2,0.54,4,3
2248_8,8,10,"if (sp != null) {
spImpls.add(sp);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,8,4,2,0,1,0.51,5,4
2248_9,9,9,spImpls.add(sp);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,1,0.54,6,5
2248_14,14,16,"for (int i = 0; i < spImpls.size(); i++) {
spImpls.get(i).startReloadIfChangedUnexpectedly();
}",0,0,1,0,0,0,0,0,0,1,1,3,0,0,1,0,8,4,2,0,1,0.5,11,7
2248_15,15,15,spImpls.get(i).startReloadIfChangedUnexpectedly();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,1,0.47,12,7
2226_1,1,1,"private void doRestoreAll(@UserIdInt int userId, long token, HashSet<String> filter) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.45,44,31
2226_2,2,2,RestoreObserver observer = new RestoreObserver();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,2,1,0,1,0.49,43,30
2226_4,4,52,"try {
boolean didRestore = false;
mRestore = mBmgr.beginRestoreSessionForUser(userId, null, null);
if (mRestore == null) {
System.err.println(BMGR_NOT_RUNNING_ERR);
return;
}
RestoreSet[] sets = null;
int err = mRestore.getAvailableRestoreSets(observer, null);
if (err == 0) {
observer.waitForCompletion();
sets = observer.sets;
if (sets != null) {
for (RestoreSet s : sets) {
if (s.token == token) {
System.out.println(""Scheduling restore: "" + s.name);
if (filter == null) {
didRestore = (mRestore.restoreAll(token, observer, null) == 0);
} else {
String[] names = new String[filter.size()];
filter.toArray(names);
didRestore = (mRestore.restorePackages(token, observer, names,
null) == 0);
}
break;
}
}
}
}
if (!didRestore) {
if (sets == null || sets.length == 0) {
System.out.println(""No available restore sets; no restore performed"");
} else {
System.out.println(""No matching restore set token.  Available sets:"");
printRestoreSets(sets);
}
}

if (didRestore) {
observer.waitForCompletion();
}

mRestore.endRestoreSession();

System.out.println(""done"");
} catch (RemoteException e) {
System.err.println(e.toString());
System.err.println(BMGR_NOT_RUNNING_ERR);
}",0,0,0,0,1,0,0,0,0,34,6,49,0,0,1,0,5,2,1,0,3,0.62,0,0
2226_5,5,5,boolean didRestore = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.5,40,28
2226_6,6,6,"mRestore = mBmgr.beginRestoreSessionForUser(userId, null, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,2,0.63,39,27
2226_7,7,10,"if (mRestore == null) {
System.err.println(BMGR_NOT_RUNNING_ERR);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,5,2,1,0,1,0.55,35,24
2226_8,8,8,System.err.println(BMGR_NOT_RUNNING_ERR);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.48,37,25
2226_9,9,9,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.3,36,24
2226_11,11,11,RestoreSet[] sets = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.44,34,23
2226_12,12,12,"int err = mRestore.getAvailableRestoreSets(observer, null);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,1,0.49,33,22
2226_13,13,32,"if (err == 0) {
observer.waitForCompletion();
sets = observer.sets;
if (sets != null) {
for (RestoreSet s : sets) {
if (s.token == token) {
System.out.println(""Scheduling restore: "" + s.name);
if (filter == null) {
didRestore = (mRestore.restoreAll(token, observer, null) == 0);
} else {
String[] names = new String[filter.size()];
filter.toArray(names);
didRestore = (mRestore.restorePackages(token, observer, names,
null) == 0);
}
break;
}
}
}
}",1,0,0,0,0,0,0,0,0,13,5,20,1,1,0,0,5,2,1,0,1,0.49,13,8
2226_14,14,14,observer.waitForCompletion();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.44,31,20
2226_15,15,15,sets = observer.sets;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.19,30,19
2226_16,16,31,"if (sets != null) {
for (RestoreSet s : sets) {
if (s.token == token) {
System.out.println(""Scheduling restore: "" + s.name);
if (filter == null) {
didRestore = (mRestore.restoreAll(token, observer, null) == 0);
} else {
String[] names = new String[filter.size()];
filter.toArray(names);
didRestore = (mRestore.restorePackages(token, observer, names,
null) == 0);
}
break;
}
}
}",1,0,0,0,0,0,0,0,0,10,4,16,0,1,0,0,5,2,1,0,1,0.45,14,8
2226_17,17,30,"for (RestoreSet s : sets) {
if (s.token == token) {
System.out.println(""Scheduling restore: "" + s.name);
if (filter == null) {
didRestore = (mRestore.restoreAll(token, observer, null) == 0);
} else {
String[] names = new String[filter.size()];
filter.toArray(names);
didRestore = (mRestore.restorePackages(token, observer, names,
null) == 0);
}
break;
}
}",0,0,0,1,0,0,0,0,0,9,3,14,0,0,0,0,5,2,1,0,1,0.45,15,8
2226_18,18,29,"if (s.token == token) {
System.out.println(""Scheduling restore: "" + s.name);
if (filter == null) {
didRestore = (mRestore.restoreAll(token, observer, null) == 0);
} else {
String[] names = new String[filter.size()];
filter.toArray(names);
didRestore = (mRestore.restorePackages(token, observer, names,
null) == 0);
}
break;
}",1,0,0,0,0,0,0,0,0,8,2,12,0,0,0,0,5,2,1,0,1,0.45,16,8
2226_19,19,19,"System.out.println(""Scheduling restore: "" + s.name);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.47,26,15
2226_20,20,27,"if (filter == null) {
didRestore = (mRestore.restoreAll(token, observer, null) == 0);
} else {
String[] names = new String[filter.size()];
filter.toArray(names);
didRestore = (mRestore.restorePackages(token, observer, names,
null) == 0);
}",1,0,0,0,0,0,0,0,0,5,1,8,0,0,0,0,5,2,1,0,1,0.44,18,9
2226_21,21,21,"didRestore = (mRestore.restoreAll(token, observer, null) == 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.53,24,13
2226_22,22,22,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.18,23,12
2226_23,23,23,String[] names = new String[filter.size()];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.19,22,11
2226_24,24,24,filter.toArray(names);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.21,21,10
2226_25,25,26,"didRestore = (mRestore.restorePackages(token, observer, names,
null) == 0);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,5,2,1,0,1,0.5,19,9
2226_28,28,28,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,2,1,0,0,0.26,17,8
2226_33,33,40,"if (!didRestore) {
if (sets == null || sets.length == 0) {
System.out.println(""No available restore sets; no restore performed"");
} else {
System.out.println(""No matching restore set token.  Available sets:"");
printRestoreSets(sets);
}
}",1,0,0,0,0,0,0,0,0,5,2,8,1,1,0,1,5,2,1,0,1,0.45,5,2
2226_34,34,39,"if (sets == null || sets.length == 0) {
System.out.println(""No available restore sets; no restore performed"");
} else {
System.out.println(""No matching restore set token.  Available sets:"");
printRestoreSets(sets);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,5,2,1,0,1,0.43,6,2
2226_35,35,35,"System.out.println(""No available restore sets; no restore performed"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.48,10,5
2226_36,36,36,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.18,9,4
2226_37,37,37,"System.out.println(""No matching restore set token.  Available sets:"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.39,8,3
2226_38,38,38,printRestoreSets(sets);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.47,7,2
2226_42,42,44,"if (didRestore) {
observer.waitForCompletion();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,2,1,0,1,0.58,1,0
2226_43,43,43,observer.waitForCompletion();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.44,2,0
2226_46,46,46,mRestore.endRestoreSession();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,2,1,0,2,0.76,0,0
2226_48,48,48,"System.out.println(""done"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,1,0.55,2,1
2226_49,49,49,} catch (RemoteException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.29,3,1
2226_50,50,50,System.err.println(e.toString());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,1,0,0,0.35,4,2
2226_51,51,51,System.err.println(BMGR_NOT_RUNNING_ERR);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,1,0,0,0.48,5,3
2225_1,1,1,"private void doRestoreAll(@UserIdInt int userId, long token, HashSet<String> filter) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,1,0.5,40,29
2225_2,2,2,RestoreObserver observer = new RestoreObserver();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,7,1,0,1,0.58,39,28
2225_4,4,52,"try {
boolean didRestore = false;
mRestore = mBmgr.beginRestoreSessionForUser(userId, null, null);
if (mRestore == null) {
System.err.println(BMGR_NOT_RUNNING_ERR);
return;
}
RestoreSet[] sets = null;
int err = mRestore.getAvailableRestoreSets(observer, null);
if (err == 0) {
observer.waitForCompletion();
sets = observer.sets;
if (sets != null) {
for (RestoreSet s : sets) {
if (s.token == token) {
System.out.println(""Scheduling restore: "" + s.name);
if (filter == null) {
didRestore = (mRestore.restoreAll(token, observer, null) == 0);
} else {
String[] names = new String[filter.size()];
filter.toArray(names);
didRestore = (mRestore.restorePackages(token, observer, names,
null) == 0);
}
break;
}
}
}
}
if (!didRestore) {
if (sets == null || sets.length == 0) {
System.out.println(""No available restore sets; no restore performed"");
} else {
System.out.println(""No matching restore set token.  Available sets:"");
printRestoreSets(sets);
}
}

if (didRestore) {
observer.waitForCompletion();
}

mRestore.endRestoreSession();

System.out.println(""done"");
} catch (RemoteException e) {
System.err.println(e.toString());
System.err.println(BMGR_NOT_RUNNING_ERR);
}",0,0,0,0,1,0,0,0,0,34,6,49,0,0,1,0,9,7,1,0,4,0.67,0,0
2225_5,5,5,boolean didRestore = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,9,7,1,0,1,0.56,36,26
2225_6,6,6,"mRestore = mBmgr.beginRestoreSessionForUser(userId, null, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,2,0.64,35,25
2225_7,7,10,"if (mRestore == null) {
System.err.println(BMGR_NOT_RUNNING_ERR);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,9,7,1,0,1,0.62,31,22
2225_8,8,8,System.err.println(BMGR_NOT_RUNNING_ERR);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,0,0.56,33,23
2225_9,9,9,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,7,1,0,0,0.34,32,22
2225_11,11,11,RestoreSet[] sets = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,9,7,1,0,1,0.48,30,21
2225_12,12,12,"int err = mRestore.getAvailableRestoreSets(observer, null);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,7,1,0,1,0.57,29,20
2225_13,13,32,"if (err == 0) {
observer.waitForCompletion();
sets = observer.sets;
if (sets != null) {
for (RestoreSet s : sets) {
if (s.token == token) {
System.out.println(""Scheduling restore: "" + s.name);
if (filter == null) {
didRestore = (mRestore.restoreAll(token, observer, null) == 0);
} else {
String[] names = new String[filter.size()];
filter.toArray(names);
didRestore = (mRestore.restorePackages(token, observer, names,
null) == 0);
}
break;
}
}
}
}",1,0,0,0,0,0,0,0,0,13,5,20,1,1,0,0,9,7,1,0,3,0.62,9,6
2225_14,14,14,observer.waitForCompletion();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,7,1,0,2,0.71,27,18
2225_15,15,15,sets = observer.sets;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,7,1,0,0,0.3,26,17
2225_16,16,31,"if (sets != null) {
for (RestoreSet s : sets) {
if (s.token == token) {
System.out.println(""Scheduling restore: "" + s.name);
if (filter == null) {
didRestore = (mRestore.restoreAll(token, observer, null) == 0);
} else {
String[] names = new String[filter.size()];
filter.toArray(names);
didRestore = (mRestore.restorePackages(token, observer, names,
null) == 0);
}
break;
}
}
}",1,0,0,0,0,0,0,0,0,10,4,16,0,1,0,0,9,7,1,0,1,0.51,10,6
2225_17,17,30,"for (RestoreSet s : sets) {
if (s.token == token) {
System.out.println(""Scheduling restore: "" + s.name);
if (filter == null) {
didRestore = (mRestore.restoreAll(token, observer, null) == 0);
} else {
String[] names = new String[filter.size()];
filter.toArray(names);
didRestore = (mRestore.restorePackages(token, observer, names,
null) == 0);
}
break;
}
}",0,0,0,1,0,0,0,0,0,9,3,14,0,0,0,0,9,7,1,0,1,0.52,11,6
2225_18,18,29,"if (s.token == token) {
System.out.println(""Scheduling restore: "" + s.name);
if (filter == null) {
didRestore = (mRestore.restoreAll(token, observer, null) == 0);
} else {
String[] names = new String[filter.size()];
filter.toArray(names);
didRestore = (mRestore.restorePackages(token, observer, names,
null) == 0);
}
break;
}",1,0,0,0,0,0,0,0,0,8,2,12,0,0,0,0,9,7,1,0,1,0.52,12,6
2225_19,19,19,"System.out.println(""Scheduling restore: "" + s.name);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,1,0.53,22,13
2225_20,20,27,"if (filter == null) {
didRestore = (mRestore.restoreAll(token, observer, null) == 0);
} else {
String[] names = new String[filter.size()];
filter.toArray(names);
didRestore = (mRestore.restorePackages(token, observer, names,
null) == 0);
}",1,0,0,0,0,0,0,0,0,5,1,8,0,0,0,0,9,7,1,0,1,0.51,14,7
2225_21,21,21,"didRestore = (mRestore.restoreAll(token, observer, null) == 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,1,0.59,20,11
2225_22,22,22,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,0,0.3,19,10
2225_23,23,23,String[] names = new String[filter.size()];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,7,1,0,0,0.27,18,9
2225_24,24,24,filter.toArray(names);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,7,1,0,0,0.28,17,8
2225_25,25,26,"didRestore = (mRestore.restorePackages(token, observer, names,
null) == 0);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,9,7,1,0,1,0.55,15,7
2225_28,28,28,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,9,7,1,0,0,0.35,13,6
2225_33,33,40,"if (!didRestore) {
if (sets == null || sets.length == 0) {
System.out.println(""No available restore sets; no restore performed"");
} else {
System.out.println(""No matching restore set token.  Available sets:"");
printRestoreSets(sets);
}
}",1,0,0,0,0,0,0,0,0,5,2,8,1,1,0,1,9,7,1,0,1,0.51,1,0
2225_34,34,39,"if (sets == null || sets.length == 0) {
System.out.println(""No available restore sets; no restore performed"");
} else {
System.out.println(""No matching restore set token.  Available sets:"");
printRestoreSets(sets);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,9,7,1,0,1,0.5,2,0
2225_35,35,35,"System.out.println(""No available restore sets; no restore performed"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,1,0.54,6,3
2225_36,36,36,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,0,0.3,5,2
2225_37,37,37,"System.out.println(""No matching restore set token.  Available sets:"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,1,0.47,4,1
2225_38,38,38,printRestoreSets(sets);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,1,0.52,3,0
2225_42,42,44,"if (didRestore) {
observer.waitForCompletion();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,9,7,1,0,3,0.81,0,0
2225_43,43,43,observer.waitForCompletion();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,2,0.71,1,0
2225_46,46,46,mRestore.endRestoreSession();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,7,1,0,2,0.76,4,2
2225_48,48,48,"System.out.println(""done"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,7,1,0,0,0.42,6,3
2225_49,49,49,} catch (RemoteException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,0,0.39,7,3
2225_50,50,50,System.err.println(e.toString());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,9,7,1,0,0,0.47,8,4
2225_51,51,51,System.err.println(BMGR_NOT_RUNNING_ERR);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,9,7,1,0,0,0.56,9,5
2224_1,1,3,"private void backupNowPackages(
@UserIdInt int userId,
List<String> packages, boolean nonIncrementalBackup, @Monitor int monitorState) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,4,3,1,0,1,0.51,17,8
2224_4,4,4,int flags = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.28,16,7
2224_5,5,7,"if (nonIncrementalBackup) {
flags |= BackupManager.FLAG_NON_INCREMENTAL_BACKUP;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,1,0,1,0.5,13,5
2224_6,6,6,flags |= BackupManager.FLAG_NON_INCREMENTAL_BACKUP;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.49,14,5
2224_8,8,28,"try {
BackupObserver observer = new BackupObserver();
BackupMonitor monitor =
(monitorState != Monitor.OFF)
? new BackupMonitor(monitorState == Monitor.VERBOSE)
: null;
int err = mBmgr.requestBackupForUser(
userId,
packages.toArray(new String[packages.size()]),
observer,
monitor,
flags);
if (err == 0) {
observer.waitForCompletion();
} else {
System.err.println(""Unable to run backup"");
}
} catch (RemoteException e) {
System.err.println(e.toString());
System.err.println(BMGR_NOT_RUNNING_ERR);
}",0,0,0,0,1,0,0,0,0,10,2,21,0,1,0,0,4,3,1,0,4,0.73,0,0
2224_9,9,9,BackupObserver observer = new BackupObserver();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.52,11,3
2224_10,10,13,"BackupMonitor monitor =
(monitorState != Monitor.OFF)
? new BackupMonitor(monitorState == Monitor.VERBOSE)
: null;",0,0,0,0,0,1,0,0,0,0,0,4,0,1,0,0,4,3,1,0,1,0.48,7,2
2224_14,14,19,"int err = mBmgr.requestBackupForUser(
userId,
packages.toArray(new String[packages.size()]),
observer,
monitor,
flags);",0,0,0,0,0,1,0,0,0,0,0,6,0,1,0,0,4,3,1,0,1,0.47,1,1
2224_20,20,24,"if (err == 0) {
observer.waitForCompletion();
} else {
System.err.println(""Unable to run backup"");
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,4,3,1,0,4,0.8,0,0
2224_21,21,21,observer.waitForCompletion();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.77,0,0
2224_22,22,22,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.3,1,0
2224_23,23,23,"System.err.println(""Unable to run backup"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.66,2,1
2224_25,25,25,} catch (RemoteException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.28,4,3
2224_26,26,26,System.err.println(e.toString());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,1,0,0,0.4,5,3
2224_27,27,27,System.err.println(BMGR_NOT_RUNNING_ERR);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,1,0,1,0.58,6,4
2223_1,1,1,public void waitForCompletion(long timeout) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,2,0.64,2,2
2223_2,2,2,final long targetTime = SystemClock.elapsedRealtime() + timeout;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.49,1,1
2223_3,3,3,synchronized (trigger) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.41,0,0
2223_4,4,9,"while (!done && (timeout <= 0 || SystemClock.elapsedRealtime() < targetTime)) {
try {
trigger.wait(1000L);
} catch (InterruptedException ex) {
}
}",0,1,0,0,0,0,0,0,0,3,2,6,0,0,0,0,7,5,1,0,3,0.59,0,0
2223_5,5,8,"try {
trigger.wait(1000L);
} catch (InterruptedException ex) {
}",0,0,0,0,1,0,0,0,0,2,1,4,0,0,0,0,7,5,1,0,1,0.49,1,0
2223_6,6,6,trigger.wait(1000L);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.57,2,1
2223_7,7,7,} catch (InterruptedException ex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.41,3,2
2216_1,1,2,"@Override
public Vector std(int axis) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,0,0,1,0.59,0,0
2216_3,3,3,assert (axis == 0 || axis == 1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,3,0.85,0,0
2216_4,4,4,double[] rdVec = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.35,1,0
2216_5,5,5,double[] rdVec2 = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.34,2,1
2216_6,6,6,switch (axis) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.56,3,2
2216_7,7,8,"case 0:
rdVec = new double[numCols];",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,0,0,2,0.6,4,3
2216_9,9,9,rdVec2 = new double[numCols];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.52,6,5
2216_10,10,16,"for (int i = 0; i < numRows; i++) {
for (int j = 0; j < numCols; j++) {
double value = data[i * numCols + j];
rdVec[j] += value;
rdVec2[j] += value * value;
}
}",0,0,1,0,0,0,0,0,0,4,2,7,0,1,0,1,6,3,0,0,3,0.66,7,5
2216_11,11,15,"for (int j = 0; j < numCols; j++) {
double value = data[i * numCols + j];
rdVec[j] += value;
rdVec2[j] += value * value;
}",0,0,1,0,0,0,0,0,0,3,1,5,0,0,0,0,6,3,0,0,2,0.59,8,6
2216_12,12,12,double value = data[i * numCols + j];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.52,9,7
2216_13,13,13,rdVec[j] += value;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.44,10,8
2216_14,14,14,rdVec2[j] += value * value;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.41,11,9
2216_18,18,22,"for (int j = 0; j < numCols; j++) {
double avg1 = rdVec[j] / numRows;
double avg2 = rdVec2[j] / numRows;
rdVec[j] = (double) Math.sqrt(avg2 - avg1 * avg1);
}",0,0,1,0,0,0,0,0,0,3,1,5,0,0,1,0,6,3,0,0,3,0.66,15,11
2216_19,19,19,double avg1 = rdVec[j] / numRows;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.56,16,11
2216_20,20,20,double avg2 = rdVec2[j] / numRows;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.56,17,12
2216_21,21,21,rdVec[j] = (double) Math.sqrt(avg2 - avg1 * avg1);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.48,18,13
2216_23,23,23,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,3,0,0,0,0.24,20,15
2216_24,24,25,"case 1:
rdVec = new double[numRows];",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,0,0,2,0.6,21,15
2216_26,26,26,rdVec2 = new double[numRows];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.53,23,17
2216_27,27,33,"for (int i = 0; i < numRows; i++) {
for (int j = 0; j < numCols; j++) {
double value = data[i * numCols + j];
rdVec[j] += value;
rdVec2[j] += value * value;
}
}",0,0,1,0,0,0,0,0,0,4,2,7,0,1,0,1,6,3,0,0,3,0.66,24,17
2216_28,28,32,"for (int j = 0; j < numCols; j++) {
double value = data[i * numCols + j];
rdVec[j] += value;
rdVec2[j] += value * value;
}",0,0,1,0,0,0,0,0,0,3,1,5,0,0,0,0,6,3,0,0,2,0.59,25,18
2216_29,29,29,double value = data[i * numCols + j];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.52,26,19
2216_30,30,30,rdVec[j] += value;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.44,27,20
2216_31,31,31,rdVec2[j] += value * value;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.41,28,21
2216_35,35,39,"for (int i = 0; i < numRows; i++) {
double avg1 = rdVec[i] / numCols;
double avg2 = rdVec2[i] / numCols;
rdVec[i] = (double) Math.sqrt(avg2 - avg1 * avg1);
}",0,0,1,0,0,0,0,0,0,3,1,5,0,0,1,0,6,3,0,0,3,0.65,32,23
2216_36,36,36,double avg1 = rdVec[i] / numCols;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.54,33,23
2216_37,37,37,double avg2 = rdVec2[i] / numCols;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.52,34,24
2216_38,38,38,rdVec[i] = (double) Math.sqrt(avg2 - avg1 * avg1);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.44,35,25
2216_40,40,40,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,3,0,0,0,0.24,37,27
2216_43,43,43,"return VFactory.denseDoubleVector(matrixId, 0, clock, rdVec);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,0,0,1,0.46,40,28
2215_1,1,2,"@Override
public Vector sum(int axis) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,0,0,1,0.6,0,0
2215_3,3,3,assert (axis == 0 || axis == 1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,3,0.85,0,0
2215_4,4,4,double[] rdVec = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.35,1,0
2215_5,5,5,switch (axis) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.56,2,1
2215_6,6,7,"case 0:
rdVec = new double[numCols];",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,6,3,0,0,2,0.6,3,2
2215_8,8,12,"for (int i = 0; i < numRows; i++) {
for (int j = 0; j < numCols; j++) {
rdVec[j] += data[i * numCols + j];
}
}",0,0,1,0,0,0,0,0,0,2,2,5,0,1,0,0,6,3,0,0,3,0.7,5,4
2215_9,9,11,"for (int j = 0; j < numCols; j++) {
rdVec[j] += data[i * numCols + j];
}",0,0,1,0,0,0,0,0,0,1,1,3,0,0,0,0,6,3,0,0,2,0.64,6,4
2215_10,10,10,rdVec[j] += data[i * numCols + j];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.55,7,5
2215_13,13,13,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,3,0,0,0,0.24,10,7
2215_14,14,15,"case 1:
rdVec = new double[numRows];",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,6,3,0,0,2,0.6,11,7
2215_16,16,20,"for (int i = 0; i < numRows; i++) {
for (int j = 0; j < numCols; j++) {
rdVec[i] += data[i * numCols + j];
}
}",0,0,1,0,0,0,0,0,0,2,2,5,0,1,0,0,6,3,0,0,3,0.7,13,9
2215_17,17,19,"for (int j = 0; j < numCols; j++) {
rdVec[i] += data[i * numCols + j];
}",0,0,1,0,0,0,0,0,0,1,1,3,0,0,0,0,6,3,0,0,2,0.65,14,9
2215_18,18,18,rdVec[i] += data[i * numCols + j];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.56,15,10
2215_21,21,21,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,3,0,0,0,0.24,18,12
2215_24,24,24,"return VFactory.denseDoubleVector(matrixId, 0, clock, rdVec);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,0,0,1,0.46,21,13
2214_1,1,1,public Vector argmax(int axis) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.61,0,0
2214_2,2,2,assert (axis == 0 || axis == 1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,3,0.85,0,0
2214_3,3,3,double[] rdVec = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.35,1,0
2214_4,4,4,double[] idxVec = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.42,2,1
2214_5,5,5,switch (axis) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.56,3,2
2214_6,6,7,"case 0:
rdVec = new double[numCols];",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,0,0,2,0.6,4,3
2214_8,8,8,idxVec = new double[numCols];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.54,6,5
2214_9,9,12,"for (int j = 0; j < numCols; j++) {
rdVec[j] = Double.MIN_VALUE;
idxVec[j] = -1;
}",0,0,1,0,0,0,0,0,0,2,1,4,0,1,0,1,6,3,0,0,3,0.67,7,5
2214_10,10,10,rdVec[j] = Double.MIN_VALUE;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.45,8,6
2214_11,11,11,idxVec[j] = -1;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.61,9,7
2214_14,14,21,"for (int i = 0; i < numRows; i++) {
for (int j = 0; j < numCols; j++) {
if (data[i * numCols + j] > rdVec[j]) {
rdVec[j] = data[i * numCols + j];
idxVec[j] = i;
}
}
}",0,0,1,0,0,0,0,0,0,4,3,8,0,0,1,0,6,3,0,0,3,0.68,12,9
2214_15,15,20,"for (int j = 0; j < numCols; j++) {
if (data[i * numCols + j] > rdVec[j]) {
rdVec[j] = data[i * numCols + j];
idxVec[j] = i;
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,0,0,0,6,3,0,0,2,0.63,13,9
2214_16,16,19,"if (data[i * numCols + j] > rdVec[j]) {
rdVec[j] = data[i * numCols + j];
idxVec[j] = i;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,6,3,0,0,1,0.55,14,10
2214_17,17,17,rdVec[j] = data[i * numCols + j];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.55,15,11
2214_18,18,18,idxVec[j] = i;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.49,16,12
2214_22,22,22,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,3,0,0,0,0.24,20,14
2214_23,23,24,"case 1:
rdVec = new double[numRows];",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,0,0,2,0.6,21,14
2214_25,25,25,idxVec = new double[numRows];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.54,23,16
2214_26,26,29,"for (int i = 0; i < numRows; i++) {
rdVec[i] = Double.MIN_VALUE;
idxVec[i] = -1;
}",0,0,1,0,0,0,0,0,0,2,1,4,0,1,0,1,6,3,0,0,3,0.67,24,16
2214_27,27,27,rdVec[i] = Double.MIN_VALUE;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.37,25,17
2214_28,28,28,idxVec[i] = -1;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.62,26,18
2214_31,31,38,"for (int i = 0; i < numRows; i++) {
for (int j = 0; j < numCols; j++) {
if (data[i * numCols + j] > rdVec[i]) {
rdVec[i] = data[i * numCols + j];
idxVec[i] = j;
}
}
}",0,0,1,0,0,0,0,0,0,4,3,8,0,0,1,0,6,3,0,0,3,0.68,29,20
2214_32,32,37,"for (int j = 0; j < numCols; j++) {
if (data[i * numCols + j] > rdVec[i]) {
rdVec[i] = data[i * numCols + j];
idxVec[i] = j;
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,0,0,0,6,3,0,0,2,0.63,30,20
2214_33,33,36,"if (data[i * numCols + j] > rdVec[i]) {
rdVec[i] = data[i * numCols + j];
idxVec[i] = j;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,6,3,0,0,1,0.55,31,21
2214_34,34,34,rdVec[i] = data[i * numCols + j];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.56,32,22
2214_35,35,35,idxVec[i] = j;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.49,33,23
2214_39,39,39,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,3,0,0,0,0.24,37,25
2214_42,42,42,"return VFactory.denseDoubleVector(matrixId, 0, clock, idxVec);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,0,0,1,0.5,40,26
2213_1,1,2,"@Override
public Vector max(int axis) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,0,0,1,0.58,0,0
2213_3,3,3,assert (axis == 0 || axis == 1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,3,0.85,0,0
2213_4,4,4,double[] rdVec = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.35,1,0
2213_5,5,5,switch (axis) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.56,2,1
2213_6,6,7,"case 0:
rdVec = new double[numCols];",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,6,3,0,0,2,0.6,3,2
2213_8,8,10,"for (int j = 0; j < numCols; j++) {
rdVec[j] = Double.MIN_VALUE;
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,1,6,3,0,0,2,0.62,5,4
2213_9,9,9,rdVec[j] = Double.MIN_VALUE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.45,6,4
2213_12,12,18,"for (int i = 0; i < numRows; i++) {
for (int j = 0; j < numCols; j++) {
if (data[i * numCols + j] > rdVec[j]) {
rdVec[j] = data[i * numCols + j];
}
}
}",0,0,1,0,0,0,0,0,0,3,3,7,0,0,1,0,6,3,0,0,3,0.69,9,6
2213_13,13,17,"for (int j = 0; j < numCols; j++) {
if (data[i * numCols + j] > rdVec[j]) {
rdVec[j] = data[i * numCols + j];
}
}",0,0,1,0,0,0,0,0,0,2,2,5,0,0,0,0,6,3,0,0,2,0.63,10,6
2213_14,14,16,"if (data[i * numCols + j] > rdVec[j]) {
rdVec[j] = data[i * numCols + j];
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,3,0,0,1,0.55,11,7
2213_15,15,15,rdVec[j] = data[i * numCols + j];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.55,12,8
2213_19,19,19,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,3,0,0,0,0.24,16,10
2213_20,20,21,"case 1:
rdVec = new double[numRows];",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,6,3,0,0,2,0.6,17,10
2213_22,22,24,"for (int i = 0; i < numRows; i++) {
rdVec[i] = Double.MIN_VALUE;
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,1,6,3,0,0,2,0.59,19,12
2213_23,23,23,rdVec[i] = Double.MIN_VALUE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.37,20,12
2213_26,26,32,"for (int i = 0; i < numRows; i++) {
for (int j = 0; j < numCols; j++) {
if (data[i * numCols + j] > rdVec[i]) {
rdVec[i] = data[i * numCols + j];
}
}
}",0,0,1,0,0,0,0,0,0,3,3,7,0,0,1,0,6,3,0,0,3,0.69,23,14
2213_27,27,31,"for (int j = 0; j < numCols; j++) {
if (data[i * numCols + j] > rdVec[i]) {
rdVec[i] = data[i * numCols + j];
}
}",0,0,1,0,0,0,0,0,0,2,2,5,0,0,0,0,6,3,0,0,2,0.64,24,14
2213_28,28,30,"if (data[i * numCols + j] > rdVec[i]) {
rdVec[i] = data[i * numCols + j];
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,3,0,0,1,0.56,25,15
2213_29,29,29,rdVec[i] = data[i * numCols + j];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.56,26,16
2213_33,33,33,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,3,0,0,0,0.24,30,18
2213_36,36,36,"return VFactory.denseDoubleVector(matrixId, 0, clock, rdVec);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,0,0,1,0.46,33,19
2212_1,1,2,"@Override
public Vector min(int axis) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,0,0,1,0.58,0,0
2212_3,3,3,assert (axis == 0 || axis == 1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,3,0.85,0,0
2212_4,4,4,double[] rdVec = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.35,1,0
2212_5,5,5,switch (axis) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.56,2,1
2212_6,6,7,"case 0:
rdVec = new double[numCols];",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,6,3,0,0,2,0.6,3,2
2212_8,8,10,"for (int j = 0; j < numCols; j++) {
rdVec[j] = Double.MAX_VALUE;
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,1,6,3,0,0,2,0.62,5,4
2212_9,9,9,rdVec[j] = Double.MAX_VALUE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.45,6,4
2212_12,12,18,"for (int i = 0; i < numRows; i++) {
for (int j = 0; j < numCols; j++) {
if (data[i * numCols + j] < rdVec[j]) {
rdVec[j] = data[i * numCols + j];
}
}
}",0,0,1,0,0,0,0,0,0,3,3,7,0,0,1,0,6,3,0,0,3,0.69,9,6
2212_13,13,17,"for (int j = 0; j < numCols; j++) {
if (data[i * numCols + j] < rdVec[j]) {
rdVec[j] = data[i * numCols + j];
}
}",0,0,1,0,0,0,0,0,0,2,2,5,0,0,0,0,6,3,0,0,2,0.63,10,6
2212_14,14,16,"if (data[i * numCols + j] < rdVec[j]) {
rdVec[j] = data[i * numCols + j];
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,3,0,0,1,0.55,11,7
2212_15,15,15,rdVec[j] = data[i * numCols + j];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.55,12,8
2212_19,19,19,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,3,0,0,0,0.24,16,10
2212_20,20,21,"case 1:
rdVec = new double[numRows];",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,6,3,0,0,2,0.6,17,10
2212_22,22,24,"for (int i = 0; i < numRows; i++) {
rdVec[i] = Double.MAX_VALUE;
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,1,6,3,0,0,2,0.59,19,12
2212_23,23,23,rdVec[i] = Double.MAX_VALUE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.37,20,12
2212_26,26,32,"for (int i = 0; i < numRows; i++) {
for (int j = 0; j < numCols; j++) {
if (data[i * numCols + j] < rdVec[i]) {
rdVec[i] = data[i * numCols + j];
}
}
}",0,0,1,0,0,0,0,0,0,3,3,7,0,0,1,0,6,3,0,0,3,0.69,23,14
2212_27,27,31,"for (int j = 0; j < numCols; j++) {
if (data[i * numCols + j] < rdVec[i]) {
rdVec[i] = data[i * numCols + j];
}
}",0,0,1,0,0,0,0,0,0,2,2,5,0,0,0,0,6,3,0,0,2,0.64,24,14
2212_28,28,30,"if (data[i * numCols + j] < rdVec[i]) {
rdVec[i] = data[i * numCols + j];
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,3,0,0,1,0.56,25,15
2212_29,29,29,rdVec[i] = data[i * numCols + j];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.56,26,16
2212_33,33,33,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,3,0,0,0,0.24,30,18
2212_36,36,36,"return VFactory.denseDoubleVector(matrixId, 0, clock, rdVec);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,0,0,1,0.46,33,19
2210_1,1,1,  private void verifyDataTypeChanges() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.6,4,2
2210_2,2,4,"if (Objects.equals(fromColumn.getType(), toColumn.getType())) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,5,0,0,1,0.44,1,0
2210_3,3,3,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.21,2,0
2210_6,6,6,Collection<DataType> allowableTargetTypes = allowedDataTypeChanges.get(fromColumn.getType());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,5,0,0,4,0.78,0,0
2210_8,8,10,"if (!allowableTargetTypes.contains(toColumn.getType())) {
throw new IllegalArgumentException(String.format(""Attempting to change the data type of [%s]. Changes from %s to %s are not supported."", fromColumn.getName(), fromColumn.getType(), toColumn.getType()));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,5,5,0,0,4,0.69,2,1
2210_9,9,9,"throw new IllegalArgumentException(String.format(""Attempting to change the data type of [%s]. Changes from %s to %s are not supported."", fromColumn.getName(), fromColumn.getType(), toColumn.getType()));",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,5,0,0,2,0.53,3,1
2209_1,1,1,  private void verifyDataTypeChanges() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.67,0,0
2209_2,2,4,"if (Objects.equals(fromColumn.getType(), toColumn.getType())) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,2,2,0,0,0,0.36,0,0
2209_3,3,3,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.26,1,0
2209_6,6,6,Collection<DataType> allowableTargetTypes = allowedDataTypeChanges.get(fromColumn.getType());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,1,0.53,4,2
2209_8,8,10,"if (!allowableTargetTypes.contains(toColumn.getType())) {
throw new IllegalArgumentException(String.format(""Attempting to change the data type of [%s]. Changes from %s to %s are not supported."", fromColumn.getName(), fromColumn.getType(), toColumn.getType()));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,2,2,0,0,1,0.65,6,3
2209_9,9,9,"throw new IllegalArgumentException(String.format(""Attempting to change the data type of [%s]. Changes from %s to %s are not supported."", fromColumn.getName(), fromColumn.getType(), toColumn.getType()));",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,2,0,0,1,0.67,7,3
2208_1,1,1,"  private Schema applyChange(Schema schema, Column columnStartPoint, Column columnEndPoint) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.48,32,17
2208_3,3,3,Table original = schema.getTable(tableName);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,5,0,0,0,0.38,30,16
2208_5,5,5,boolean foundMatch = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,5,0,0,0,0.27,28,15
2208_7,7,7,List<String> columns = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,5,0,0,1,0.41,26,14
2208_8,8,8,Set<String> processedColumns = new HashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.41,25,13
2208_9,9,28,"for (Column column : original.columns()) {
String currentColumnName = column.getName();

if (currentColumnName.equalsIgnoreCase(columnStartPoint.getName())) {

CollectingDifferenceWriter differences = new SchemaHomology.CollectingDifferenceWriter();
if (!new SchemaHomology(differences, ""trial schema"", ""source column"").columnsMatch(columnStartPoint, column)) {
throw new IllegalArgumentException(""Cannot change column ["" + currentColumnName + ""] on table ["" + tableName + ""], the 'from' column definition does not match: "" + differences.differences());
}

currentColumnName = columnEndPoint.getName();
foundMatch = true;
}

if (!processedColumns.add(currentColumnName.toUpperCase())) {
throw new IllegalArgumentException(String.format(""Cannot change column name from [%s] to [%s] on table [%s] as column with that name already exists"", columnStartPoint.getName(), columnEndPoint.getName(), tableName));
}

columns.add(currentColumnName);
}",0,0,0,1,0,0,0,0,0,10,3,20,0,1,0,1,5,5,0,0,1,0.5,5,2
2208_10,10,10,String currentColumnName = column.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,5,0,0,1,0.47,23,11
2208_12,12,21,"if (currentColumnName.equalsIgnoreCase(columnStartPoint.getName())) {

CollectingDifferenceWriter differences = new SchemaHomology.CollectingDifferenceWriter();
if (!new SchemaHomology(differences, ""trial schema"", ""source column"").columnsMatch(columnStartPoint, column)) {
throw new IllegalArgumentException(""Cannot change column ["" + currentColumnName + ""] on table ["" + tableName + ""], the 'from' column definition does not match: "" + differences.differences());
}

currentColumnName = columnEndPoint.getName();
foundMatch = true;
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,5,5,0,0,1,0.48,12,5
2208_14,14,14,CollectingDifferenceWriter differences = new SchemaHomology.CollectingDifferenceWriter();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,0,0.39,19,9
2208_15,15,17,"if (!new SchemaHomology(differences, ""trial schema"", ""source column"").columnsMatch(columnStartPoint, column)) {
throw new IllegalArgumentException(""Cannot change column ["" + currentColumnName + ""] on table ["" + tableName + ""], the 'from' column definition does not match: "" + differences.differences());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,5,5,0,0,1,0.48,16,7
2208_16,16,16,"throw new IllegalArgumentException(""Cannot change column ["" + currentColumnName + ""] on table ["" + tableName + ""], the 'from' column definition does not match: "" + differences.differences());",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,5,0,0,1,0.46,17,7
2208_19,19,19,currentColumnName = columnEndPoint.getName();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,1,0.45,14,6
2208_20,20,20,foundMatch = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.25,13,5
2208_23,23,25,"if (!processedColumns.add(currentColumnName.toUpperCase())) {
throw new IllegalArgumentException(String.format(""Cannot change column name from [%s] to [%s] on table [%s] as column with that name already exists"", columnStartPoint.getName(), columnEndPoint.getName(), tableName));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,5,0,0,1,0.47,8,3
2208_24,24,24,"throw new IllegalArgumentException(String.format(""Cannot change column name from [%s] to [%s] on table [%s] as column with that name already exists"", columnStartPoint.getName(), columnEndPoint.getName(), tableName));",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,5,0,0,1,0.46,9,3
2208_27,27,27,columns.add(currentColumnName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,1,0.5,6,2
2208_30,30,32,"if (!foundMatch) {
throw new IllegalArgumentException(String.format(""Cannot change column [%s] as it does not exist on table [%s]"", columnStartPoint.getName(), tableName));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,5,0,0,1,0.45,1,0
2208_31,31,31,"throw new IllegalArgumentException(String.format(""Cannot change column [%s] as it does not exist on table [%s]"", columnStartPoint.getName(), tableName));",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,5,0,0,1,0.45,2,0
2208_34,34,44,"if (!columnStartPoint.getName().equalsIgnoreCase(columnEndPoint.getName())) {
for (Index index : original.indexes()) {
for (String indexedColumnName : index.columnNames()) {
if (indexedColumnName.equalsIgnoreCase(columnStartPoint.getName())) {
throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));
}
}
}
}",1,0,0,0,0,0,0,0,0,4,4,11,0,0,1,1,5,5,0,0,3,0.63,0,0
2208_35,35,43,"for (Index index : original.indexes()) {
for (String indexedColumnName : index.columnNames()) {
if (indexedColumnName.equalsIgnoreCase(columnStartPoint.getName())) {
throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,9,0,0,0,0,5,5,0,0,3,0.65,1,0
2208_36,36,42,"for (String indexedColumnName : index.columnNames()) {
if (indexedColumnName.equalsIgnoreCase(columnStartPoint.getName())) {
throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));
}
}",0,0,0,1,0,0,0,0,0,2,2,7,0,0,0,0,5,5,0,0,3,0.64,2,1
2208_37,37,41,"if (indexedColumnName.equalsIgnoreCase(columnStartPoint.getName())) {
throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,5,5,0,0,3,0.62,3,2
2208_38,38,40,"throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));",0,0,0,0,0,0,0,0,1,0,0,3,0,0,0,0,5,5,0,0,3,0.62,4,3
2208_46,46,46,"return new TableOverrideSchema(schema, new AlteredTable(original, columns, Arrays.asList(new Column[] {columnEndPoint})));",0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,0,5,5,0,0,1,0.45,12,5
2207_1,1,1,"  private Schema applyChange(Schema schema, Column columnStartPoint, Column columnEndPoint) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.51,12,7
2207_3,3,3,Table original = schema.getTable(tableName);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,5,1,0,0,0.38,10,6
2207_5,5,5,boolean foundMatch = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,5,1,0,1,0.44,8,5
2207_7,7,7,List<String> columns = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,5,1,0,1,0.41,6,4
2207_8,8,8,Set<String> processedColumns = new HashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.41,5,3
2207_9,9,28,"for (Column column : original.columns()) {
String currentColumnName = column.getName();

if (currentColumnName.equalsIgnoreCase(columnStartPoint.getName())) {

CollectingDifferenceWriter differences = new SchemaHomology.CollectingDifferenceWriter();
if (!new SchemaHomology(differences, ""trial schema"", ""source column"").columnsMatch(columnStartPoint, column)) {
throw new IllegalArgumentException(""Cannot change column ["" + currentColumnName + ""] on table ["" + tableName + ""], the 'from' column definition does not match: "" + differences.differences());
}

currentColumnName = columnEndPoint.getName();
foundMatch = true;
}

if (!processedColumns.add(currentColumnName.toUpperCase())) {
throw new IllegalArgumentException(String.format(""Cannot change column name from [%s] to [%s] on table [%s] as column with that name already exists"", columnStartPoint.getName(), columnEndPoint.getName(), tableName));
}

columns.add(currentColumnName);
}",0,0,0,1,0,0,0,0,0,10,3,20,0,1,0,1,7,5,1,0,4,0.69,0,0
2207_10,10,10,String currentColumnName = column.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,5,1,0,2,0.61,3,1
2207_12,12,21,"if (currentColumnName.equalsIgnoreCase(columnStartPoint.getName())) {

CollectingDifferenceWriter differences = new SchemaHomology.CollectingDifferenceWriter();
if (!new SchemaHomology(differences, ""trial schema"", ""source column"").columnsMatch(columnStartPoint, column)) {
throw new IllegalArgumentException(""Cannot change column ["" + currentColumnName + ""] on table ["" + tableName + ""], the 'from' column definition does not match: "" + differences.differences());
}

currentColumnName = columnEndPoint.getName();
foundMatch = true;
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,7,5,1,0,4,0.68,0,0
2207_14,14,14,CollectingDifferenceWriter differences = new SchemaHomology.CollectingDifferenceWriter();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,5,1,0,0,0.35,0,0
2207_15,15,17,"if (!new SchemaHomology(differences, ""trial schema"", ""source column"").columnsMatch(columnStartPoint, column)) {
throw new IllegalArgumentException(""Cannot change column ["" + currentColumnName + ""] on table ["" + tableName + ""], the 'from' column definition does not match: "" + differences.differences());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,7,5,1,0,4,0.7,1,0
2207_16,16,16,"throw new IllegalArgumentException(""Cannot change column ["" + currentColumnName + ""] on table ["" + tableName + ""], the 'from' column definition does not match: "" + differences.differences());",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,5,1,0,3,0.62,2,1
2207_19,19,19,currentColumnName = columnEndPoint.getName();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,5,1,0,2,0.59,5,3
2207_20,20,20,foundMatch = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.46,6,3
2207_23,23,25,"if (!processedColumns.add(currentColumnName.toUpperCase())) {
throw new IllegalArgumentException(String.format(""Cannot change column name from [%s] to [%s] on table [%s] as column with that name already exists"", columnStartPoint.getName(), columnEndPoint.getName(), tableName));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,5,1,0,2,0.56,9,5
2207_24,24,24,"throw new IllegalArgumentException(String.format(""Cannot change column name from [%s] to [%s] on table [%s] as column with that name already exists"", columnStartPoint.getName(), columnEndPoint.getName(), tableName));",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,5,1,0,1,0.49,10,5
2207_27,27,27,columns.add(currentColumnName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,5,1,0,2,0.67,13,7
2207_30,30,32,"if (!foundMatch) {
throw new IllegalArgumentException(String.format(""Cannot change column [%s] as it does not exist on table [%s]"", columnStartPoint.getName(), tableName));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,5,1,0,2,0.53,16,8
2207_31,31,31,"throw new IllegalArgumentException(String.format(""Cannot change column [%s] as it does not exist on table [%s]"", columnStartPoint.getName(), tableName));",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,5,1,0,1,0.48,17,8
2207_34,34,44,"if (!columnStartPoint.getName().equalsIgnoreCase(columnEndPoint.getName())) {
for (Index index : original.indexes()) {
for (String indexedColumnName : index.columnNames()) {
if (indexedColumnName.equalsIgnoreCase(columnStartPoint.getName())) {
throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));
}
}
}
}",1,0,0,0,0,0,0,0,0,4,4,11,0,0,1,1,7,5,1,0,1,0.49,20,10
2207_35,35,43,"for (Index index : original.indexes()) {
for (String indexedColumnName : index.columnNames()) {
if (indexedColumnName.equalsIgnoreCase(columnStartPoint.getName())) {
throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,9,0,0,0,0,7,5,1,0,1,0.5,21,10
2207_36,36,42,"for (String indexedColumnName : index.columnNames()) {
if (indexedColumnName.equalsIgnoreCase(columnStartPoint.getName())) {
throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));
}
}",0,0,0,1,0,0,0,0,0,2,2,7,0,0,0,0,7,5,1,0,1,0.5,22,11
2207_37,37,41,"if (indexedColumnName.equalsIgnoreCase(columnStartPoint.getName())) {
throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,7,5,1,0,1,0.49,23,12
2207_38,38,40,"throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));",0,0,0,0,0,0,0,0,1,0,0,3,0,0,0,0,7,5,1,0,1,0.48,24,13
2207_46,46,46,"return new TableOverrideSchema(schema, new AlteredTable(original, columns, Arrays.asList(new Column[] {columnEndPoint})));",0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,0,7,5,1,0,1,0.47,32,15
2206_1,1,1,"  private Schema applyChange(Schema schema, Column columnStartPoint, Column columnEndPoint) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.69,10,6
2206_3,3,3,Table original = schema.getTable(tableName);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.4,8,5
2206_5,5,5,boolean foundMatch = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.32,6,4
2206_7,7,7,List<String> columns = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.43,4,3
2206_8,8,8,Set<String> processedColumns = new HashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.46,3,2
2206_9,9,28,"for (Column column : original.columns()) {
String currentColumnName = column.getName();

if (currentColumnName.equalsIgnoreCase(columnStartPoint.getName())) {

CollectingDifferenceWriter differences = new SchemaHomology.CollectingDifferenceWriter();
if (!new SchemaHomology(differences, ""trial schema"", ""source column"").columnsMatch(columnStartPoint, column)) {
throw new IllegalArgumentException(""Cannot change column ["" + currentColumnName + ""] on table ["" + tableName + ""], the 'from' column definition does not match: "" + differences.differences());
}

currentColumnName = columnEndPoint.getName();
foundMatch = true;
}

if (!processedColumns.add(currentColumnName.toUpperCase())) {
throw new IllegalArgumentException(String.format(""Cannot change column name from [%s] to [%s] on table [%s] as column with that name already exists"", columnStartPoint.getName(), columnEndPoint.getName(), tableName));
}

columns.add(currentColumnName);
}",0,0,0,1,0,0,0,0,0,10,3,20,0,1,0,1,3,3,0,0,2,0.64,0,0
2206_10,10,10,String currentColumnName = column.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.52,1,0
2206_12,12,21,"if (currentColumnName.equalsIgnoreCase(columnStartPoint.getName())) {

CollectingDifferenceWriter differences = new SchemaHomology.CollectingDifferenceWriter();
if (!new SchemaHomology(differences, ""trial schema"", ""source column"").columnsMatch(columnStartPoint, column)) {
throw new IllegalArgumentException(""Cannot change column ["" + currentColumnName + ""] on table ["" + tableName + ""], the 'from' column definition does not match: "" + differences.differences());
}

currentColumnName = columnEndPoint.getName();
foundMatch = true;
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,3,3,0,0,2,0.62,0,0
2206_14,14,14,CollectingDifferenceWriter differences = new SchemaHomology.CollectingDifferenceWriter();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.31,2,1
2206_15,15,17,"if (!new SchemaHomology(differences, ""trial schema"", ""source column"").columnsMatch(columnStartPoint, column)) {
throw new IllegalArgumentException(""Cannot change column ["" + currentColumnName + ""] on table ["" + tableName + ""], the 'from' column definition does not match: "" + differences.differences());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,3,0,0,2,0.65,3,1
2206_16,16,16,"throw new IllegalArgumentException(""Cannot change column ["" + currentColumnName + ""] on table ["" + tableName + ""], the 'from' column definition does not match: "" + differences.differences());",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,2,0.64,4,2
2206_19,19,19,currentColumnName = columnEndPoint.getName();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.51,7,4
2206_20,20,20,foundMatch = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,8,4
2206_23,23,25,"if (!processedColumns.add(currentColumnName.toUpperCase())) {
throw new IllegalArgumentException(String.format(""Cannot change column name from [%s] to [%s] on table [%s] as column with that name already exists"", columnStartPoint.getName(), columnEndPoint.getName(), tableName));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,2,0.62,11,6
2206_24,24,24,"throw new IllegalArgumentException(String.format(""Cannot change column name from [%s] to [%s] on table [%s] as column with that name already exists"", columnStartPoint.getName(), columnEndPoint.getName(), tableName));",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,2,0.62,12,6
2206_27,27,27,columns.add(currentColumnName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.55,15,8
2206_30,30,32,"if (!foundMatch) {
throw new IllegalArgumentException(String.format(""Cannot change column [%s] as it does not exist on table [%s]"", columnStartPoint.getName(), tableName));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,2,0.61,18,9
2206_31,31,31,"throw new IllegalArgumentException(String.format(""Cannot change column [%s] as it does not exist on table [%s]"", columnStartPoint.getName(), tableName));",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,2,0.61,19,9
2206_34,34,44,"if (!columnStartPoint.getName().equalsIgnoreCase(columnEndPoint.getName())) {
for (Index index : original.indexes()) {
for (String indexedColumnName : index.columnNames()) {
if (indexedColumnName.equalsIgnoreCase(columnStartPoint.getName())) {
throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));
}
}
}
}",1,0,0,0,0,0,0,0,0,4,4,11,0,0,1,1,3,3,0,0,1,0.5,22,11
2206_35,35,43,"for (Index index : original.indexes()) {
for (String indexedColumnName : index.columnNames()) {
if (indexedColumnName.equalsIgnoreCase(columnStartPoint.getName())) {
throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,9,0,0,0,0,3,3,0,0,1,0.5,23,11
2206_36,36,42,"for (String indexedColumnName : index.columnNames()) {
if (indexedColumnName.equalsIgnoreCase(columnStartPoint.getName())) {
throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));
}
}",0,0,0,1,0,0,0,0,0,2,2,7,0,0,0,0,3,3,0,0,1,0.5,24,12
2206_37,37,41,"if (indexedColumnName.equalsIgnoreCase(columnStartPoint.getName())) {
throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,3,3,0,0,1,0.49,25,13
2206_38,38,40,"throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));",0,0,0,0,0,0,0,0,1,0,0,3,0,0,0,0,3,3,0,0,1,0.48,26,14
2206_46,46,46,"return new TableOverrideSchema(schema, new AlteredTable(original, columns, Arrays.asList(new Column[] {columnEndPoint})));",0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,0,3,3,0,0,1,0.5,34,16
2205_1,1,1,"  private Schema applyChange(Schema schema, Column columnStartPoint, Column columnEndPoint) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,1,0.52,5,2
2205_3,3,3,Table original = schema.getTable(tableName);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,8,6,1,0,1,0.48,3,1
2205_5,5,5,boolean foundMatch = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,8,6,1,0,0,0.27,1,0
2205_7,7,7,List<String> columns = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,8,6,1,0,3,0.74,0,0
2205_8,8,8,Set<String> processedColumns = new HashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,6,1,0,2,0.54,1,0
2205_9,9,28,"for (Column column : original.columns()) {
String currentColumnName = column.getName();

if (currentColumnName.equalsIgnoreCase(columnStartPoint.getName())) {

CollectingDifferenceWriter differences = new SchemaHomology.CollectingDifferenceWriter();
if (!new SchemaHomology(differences, ""trial schema"", ""source column"").columnsMatch(columnStartPoint, column)) {
throw new IllegalArgumentException(""Cannot change column ["" + currentColumnName + ""] on table ["" + tableName + ""], the 'from' column definition does not match: "" + differences.differences());
}

currentColumnName = columnEndPoint.getName();
foundMatch = true;
}

if (!processedColumns.add(currentColumnName.toUpperCase())) {
throw new IllegalArgumentException(String.format(""Cannot change column name from [%s] to [%s] on table [%s] as column with that name already exists"", columnStartPoint.getName(), columnEndPoint.getName(), tableName));
}

columns.add(currentColumnName);
}",0,0,0,1,0,0,0,0,0,10,3,20,0,1,0,1,8,6,1,0,3,0.64,2,1
2205_10,10,10,String currentColumnName = column.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,6,1,0,3,0.75,3,2
2205_12,12,21,"if (currentColumnName.equalsIgnoreCase(columnStartPoint.getName())) {

CollectingDifferenceWriter differences = new SchemaHomology.CollectingDifferenceWriter();
if (!new SchemaHomology(differences, ""trial schema"", ""source column"").columnsMatch(columnStartPoint, column)) {
throw new IllegalArgumentException(""Cannot change column ["" + currentColumnName + ""] on table ["" + tableName + ""], the 'from' column definition does not match: "" + differences.differences());
}

currentColumnName = columnEndPoint.getName();
foundMatch = true;
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,8,6,1,0,2,0.57,5,4
2205_14,14,14,CollectingDifferenceWriter differences = new SchemaHomology.CollectingDifferenceWriter();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,6,1,0,0,0.4,7,5
2205_15,15,17,"if (!new SchemaHomology(differences, ""trial schema"", ""source column"").columnsMatch(columnStartPoint, column)) {
throw new IllegalArgumentException(""Cannot change column ["" + currentColumnName + ""] on table ["" + tableName + ""], the 'from' column definition does not match: "" + differences.differences());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,8,6,1,0,2,0.58,8,5
2205_16,16,16,"throw new IllegalArgumentException(""Cannot change column ["" + currentColumnName + ""] on table ["" + tableName + ""], the 'from' column definition does not match: "" + differences.differences());",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,6,1,0,2,0.57,9,6
2205_19,19,19,currentColumnName = columnEndPoint.getName();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,6,1,0,2,0.63,12,8
2205_20,20,20,foundMatch = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.27,13,8
2205_23,23,25,"if (!processedColumns.add(currentColumnName.toUpperCase())) {
throw new IllegalArgumentException(String.format(""Cannot change column name from [%s] to [%s] on table [%s] as column with that name already exists"", columnStartPoint.getName(), columnEndPoint.getName(), tableName));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,8,6,1,0,3,0.63,16,10
2205_24,24,24,"throw new IllegalArgumentException(String.format(""Cannot change column name from [%s] to [%s] on table [%s] as column with that name already exists"", columnStartPoint.getName(), columnEndPoint.getName(), tableName));",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,6,1,0,3,0.62,17,10
2205_27,27,27,columns.add(currentColumnName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,6,1,0,2,0.67,20,12
2205_30,30,32,"if (!foundMatch) {
throw new IllegalArgumentException(String.format(""Cannot change column [%s] as it does not exist on table [%s]"", columnStartPoint.getName(), tableName));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,8,6,1,0,3,0.58,23,13
2205_31,31,31,"throw new IllegalArgumentException(String.format(""Cannot change column [%s] as it does not exist on table [%s]"", columnStartPoint.getName(), tableName));",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,6,1,0,3,0.59,24,13
2205_34,34,44,"if (!columnStartPoint.getName().equalsIgnoreCase(columnEndPoint.getName())) {
for (Index index : original.indexes()) {
for (String indexedColumnName : index.columnNames()) {
if (indexedColumnName.equalsIgnoreCase(columnStartPoint.getName())) {
throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));
}
}
}
}",1,0,0,0,0,0,0,0,0,4,4,11,0,0,1,1,8,6,1,0,3,0.61,27,15
2205_35,35,43,"for (Index index : original.indexes()) {
for (String indexedColumnName : index.columnNames()) {
if (indexedColumnName.equalsIgnoreCase(columnStartPoint.getName())) {
throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,9,0,0,0,0,8,6,1,0,3,0.62,28,15
2205_36,36,42,"for (String indexedColumnName : index.columnNames()) {
if (indexedColumnName.equalsIgnoreCase(columnStartPoint.getName())) {
throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));
}
}",0,0,0,1,0,0,0,0,0,2,2,7,0,0,0,0,8,6,1,0,3,0.63,29,16
2205_37,37,41,"if (indexedColumnName.equalsIgnoreCase(columnStartPoint.getName())) {
throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,8,6,1,0,3,0.6,30,17
2205_38,38,40,"throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));",0,0,0,0,0,0,0,0,1,0,0,3,0,0,0,0,8,6,1,0,3,0.6,31,18
2205_46,46,46,"return new TableOverrideSchema(schema, new AlteredTable(original, columns, Arrays.asList(new Column[] {columnEndPoint})));",0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,0,8,6,1,0,2,0.56,39,20
2204_1,1,1,"  private Schema applyChange(Schema schema, Column columnStartPoint, Column columnEndPoint) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.34,1,0
2204_3,3,3,Table original = schema.getTable(tableName);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,0,0,1,0.56,0,0
2204_5,5,5,boolean foundMatch = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.24,2,1
2204_7,7,7,List<String> columns = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,2,0,0,1,0.54,4,2
2204_8,8,8,Set<String> processedColumns = new HashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.51,5,2
2204_9,9,28,"for (Column column : original.columns()) {
String currentColumnName = column.getName();

if (currentColumnName.equalsIgnoreCase(columnStartPoint.getName())) {

CollectingDifferenceWriter differences = new SchemaHomology.CollectingDifferenceWriter();
if (!new SchemaHomology(differences, ""trial schema"", ""source column"").columnsMatch(columnStartPoint, column)) {
throw new IllegalArgumentException(""Cannot change column ["" + currentColumnName + ""] on table ["" + tableName + ""], the 'from' column definition does not match: "" + differences.differences());
}

currentColumnName = columnEndPoint.getName();
foundMatch = true;
}

if (!processedColumns.add(currentColumnName.toUpperCase())) {
throw new IllegalArgumentException(String.format(""Cannot change column name from [%s] to [%s] on table [%s] as column with that name already exists"", columnStartPoint.getName(), columnEndPoint.getName(), tableName));
}

columns.add(currentColumnName);
}",0,0,0,1,0,0,0,0,0,10,3,20,0,1,0,1,4,2,0,0,3,0.64,6,3
2204_10,10,10,String currentColumnName = column.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.38,7,4
2204_12,12,21,"if (currentColumnName.equalsIgnoreCase(columnStartPoint.getName())) {

CollectingDifferenceWriter differences = new SchemaHomology.CollectingDifferenceWriter();
if (!new SchemaHomology(differences, ""trial schema"", ""source column"").columnsMatch(columnStartPoint, column)) {
throw new IllegalArgumentException(""Cannot change column ["" + currentColumnName + ""] on table ["" + tableName + ""], the 'from' column definition does not match: "" + differences.differences());
}

currentColumnName = columnEndPoint.getName();
foundMatch = true;
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,4,2,0,0,3,0.63,9,6
2204_14,14,14,CollectingDifferenceWriter differences = new SchemaHomology.CollectingDifferenceWriter();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,0,0,1,0.47,11,7
2204_15,15,17,"if (!new SchemaHomology(differences, ""trial schema"", ""source column"").columnsMatch(columnStartPoint, column)) {
throw new IllegalArgumentException(""Cannot change column ["" + currentColumnName + ""] on table ["" + tableName + ""], the 'from' column definition does not match: "" + differences.differences());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,4,2,0,0,3,0.66,12,7
2204_16,16,16,"throw new IllegalArgumentException(""Cannot change column ["" + currentColumnName + ""] on table ["" + tableName + ""], the 'from' column definition does not match: "" + differences.differences());",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,0,0,3,0.68,13,8
2204_19,19,19,currentColumnName = columnEndPoint.getName();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.37,16,10
2204_20,20,20,foundMatch = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.22,17,10
2204_23,23,25,"if (!processedColumns.add(currentColumnName.toUpperCase())) {
throw new IllegalArgumentException(String.format(""Cannot change column name from [%s] to [%s] on table [%s] as column with that name already exists"", columnStartPoint.getName(), columnEndPoint.getName(), tableName));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,0,0,2,0.56,20,12
2204_24,24,24,"throw new IllegalArgumentException(String.format(""Cannot change column name from [%s] to [%s] on table [%s] as column with that name already exists"", columnStartPoint.getName(), columnEndPoint.getName(), tableName));",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,0,0,2,0.56,21,12
2204_27,27,27,columns.add(currentColumnName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.39,24,14
2204_30,30,32,"if (!foundMatch) {
throw new IllegalArgumentException(String.format(""Cannot change column [%s] as it does not exist on table [%s]"", columnStartPoint.getName(), tableName));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,0,0,2,0.57,27,15
2204_31,31,31,"throw new IllegalArgumentException(String.format(""Cannot change column [%s] as it does not exist on table [%s]"", columnStartPoint.getName(), tableName));",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,0,0,2,0.58,28,15
2204_34,34,44,"if (!columnStartPoint.getName().equalsIgnoreCase(columnEndPoint.getName())) {
for (Index index : original.indexes()) {
for (String indexedColumnName : index.columnNames()) {
if (indexedColumnName.equalsIgnoreCase(columnStartPoint.getName())) {
throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));
}
}
}
}",1,0,0,0,0,0,0,0,0,4,4,11,0,0,1,1,4,2,0,0,2,0.53,31,17
2204_35,35,43,"for (Index index : original.indexes()) {
for (String indexedColumnName : index.columnNames()) {
if (indexedColumnName.equalsIgnoreCase(columnStartPoint.getName())) {
throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,9,0,0,0,0,4,2,0,0,2,0.54,32,17
2204_36,36,42,"for (String indexedColumnName : index.columnNames()) {
if (indexedColumnName.equalsIgnoreCase(columnStartPoint.getName())) {
throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));
}
}",0,0,0,1,0,0,0,0,0,2,2,7,0,0,0,0,4,2,0,0,2,0.55,33,18
2204_37,37,41,"if (indexedColumnName.equalsIgnoreCase(columnStartPoint.getName())) {
throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,4,2,0,0,2,0.55,34,19
2204_38,38,40,"throw new IllegalArgumentException(
String.format(""Cannot rename column [%s] as it exists on index [%s] on table [%s]"",
columnStartPoint.getName(), index.getName(), tableName));",0,0,0,0,0,0,0,0,1,0,0,3,0,0,0,0,4,2,0,0,2,0.57,35,20
2204_46,46,46,"return new TableOverrideSchema(schema, new AlteredTable(original, columns, Arrays.asList(new Column[] {columnEndPoint})));",0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,0,4,2,0,0,2,0.63,43,22
2201_1,1,1,"protected void setTransitioningViewsVisiblity(int visiblity, boolean invalidate) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.74,6,6
2201_2,2,2,final int numElements = mTransitioningViews == null ? 0 : mTransitioningViews.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.48,5,5
2201_3,3,10,"for (int i = 0; i < numElements; i++) {
final View view = mTransitioningViews.get(i);
if (invalidate) {
view.setVisibility(visiblity);
} else {
view.setTransitionVisibility(visiblity);
}
}",0,0,1,0,0,0,0,0,0,5,2,8,0,1,0,0,4,3,0,0,3,0.76,0,0
2201_4,4,4,final View view = mTransitioningViews.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.57,3,3
2201_5,5,9,"if (invalidate) {
view.setVisibility(visiblity);
} else {
view.setTransitionVisibility(visiblity);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,4,3,0,0,3,0.82,0,0
2201_6,6,6,view.setVisibility(visiblity);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.74,1,1
2201_7,7,7,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.34,0,0
2201_8,8,8,view.setTransitionVisibility(visiblity);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.7,0,0
2200_1,1,1,"protected void setTransitioningViewsVisiblity(int visiblity, boolean invalidate) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,3,0.7,4,4
2200_2,2,2,final int numElements = mTransitioningViews == null ? 0 : mTransitioningViews.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.46,3,3
2200_3,3,10,"for (int i = 0; i < numElements; i++) {
final View view = mTransitioningViews.get(i);
if (invalidate) {
view.setVisibility(visiblity);
} else {
view.setTransitionVisibility(visiblity);
}
}",0,0,1,0,0,0,0,0,0,5,2,8,0,1,0,0,5,3,0,0,3,0.7,0,0
2200_4,4,4,final View view = mTransitioningViews.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.54,1,1
2200_5,5,9,"if (invalidate) {
view.setVisibility(visiblity);
} else {
view.setTransitionVisibility(visiblity);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,5,3,0,0,3,0.76,0,0
2200_6,6,6,view.setVisibility(visiblity);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,2,0.71,0,0
2200_7,7,7,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.34,1,0
2200_8,8,8,view.setTransitionVisibility(visiblity);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,2,0.66,2,1
2199_1,1,1,"private void getSharedElementParentMatrix(View view, Matrix matrix) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.61,6,5
2199_2,2,3,"final int index = mSharedElementParentMatrices == null ? -1
: mSharedElements.indexOf(view);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,2,1,0,2,0.54,4,4
2199_4,4,15,"if (index < 0) {
matrix.reset();
ViewParent viewParent = view.getParent();
if (viewParent instanceof ViewGroup) {
ViewGroup parent = (ViewGroup) viewParent;
parent.transformMatrixToLocal(matrix);
matrix.postTranslate(parent.getScrollX(), parent.getScrollY());
}
} else {
Matrix parentMatrix = mSharedElementParentMatrices.get(index);
matrix.set(parentMatrix);
}",1,0,0,0,0,0,0,0,0,9,2,12,0,1,0,0,4,2,1,0,2,0.66,0,0
2199_5,5,5,matrix.reset();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.42,2,2
2199_6,6,6,ViewParent viewParent = view.getParent();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.78,1,1
2199_7,7,11,"if (viewParent instanceof ViewGroup) {
ViewGroup parent = (ViewGroup) viewParent;
parent.transformMatrixToLocal(matrix);
matrix.postTranslate(parent.getScrollX(), parent.getScrollY());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,4,2,1,0,2,0.67,0,0
2199_8,8,8,ViewGroup parent = (ViewGroup) viewParent;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.74,0,0
2199_9,9,9,parent.transformMatrixToLocal(matrix);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.57,1,0
2199_10,10,10,"matrix.postTranslate(parent.getScrollX(), parent.getScrollY());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.52,2,1
2199_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.23,4,3
2199_13,13,13,Matrix parentMatrix = mSharedElementParentMatrices.get(index);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.54,5,3
2199_14,14,14,matrix.set(parentMatrix);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.57,6,4
2198_1,1,1,private void setSharedElementMatrices() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.31,7,5
2198_2,2,2,int numSharedElements = mSharedElements.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.34,6,4
2198_3,3,5,"if (numSharedElements > 0) {
mSharedElementParentMatrices = new ArrayList<Matrix>(numSharedElements);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,2,1,0,1,0.46,3,2
2198_4,4,4,mSharedElementParentMatrices = new ArrayList<Matrix>(numSharedElements);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.47,4,2
2198_6,6,16,"for (int i = 0; i < numSharedElements; i++) {
View view = mSharedElements.get(i);

ViewGroup parent = (ViewGroup) view.getParent();
Matrix matrix = new Matrix();
if (parent != null) {
parent.transformMatrixToLocal(matrix);
matrix.postTranslate(parent.getScrollX(), parent.getScrollY());
}
mSharedElementParentMatrices.add(matrix);
}",0,0,1,0,0,0,0,0,0,7,2,11,0,1,0,0,4,2,1,0,2,0.6,0,0
2198_7,7,7,View view = mSharedElements.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,1,0.56,1,0
2198_9,9,9,ViewGroup parent = (ViewGroup) view.getParent();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,2,1,0,2,0.7,0,0
2198_10,10,10,Matrix matrix = new Matrix();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.44,1,0
2198_11,11,14,"if (parent != null) {
parent.transformMatrixToLocal(matrix);
matrix.postTranslate(parent.getScrollX(), parent.getScrollY());
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,4,2,1,0,1,0.54,2,1
2198_12,12,12,parent.transformMatrixToLocal(matrix);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.57,3,2
2198_13,13,13,"matrix.postTranslate(parent.getScrollX(), parent.getScrollY());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.52,4,3
2198_15,15,15,mSharedElementParentMatrices.add(matrix);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.5,6,5
2197_1,1,2,"private void setSharedElementState(View view, String name, Bundle transitionArgs,
Matrix tempMatrix, RectF tempRect, int[] decorLoc) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,0,0,1,0.61,46,35
2197_3,3,3,Bundle sharedElementBundle = transitionArgs.getBundle(name);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.39,45,34
2197_4,4,6,"if (sharedElementBundle == null) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,5,3,0,0,0,0.24,42,32
2197_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.14,43,32
2197_8,8,20,"if (view instanceof ImageView) {
int scaleTypeInt = sharedElementBundle.getInt(KEY_SCALE_TYPE, -1);
if (scaleTypeInt >= 0) {
ImageView imageView = (ImageView) view;
ImageView.ScaleType scaleType = SCALE_TYPE_VALUES[scaleTypeInt];
imageView.setScaleType(scaleType);
if (scaleType == ImageView.ScaleType.MATRIX) {
float[] matrixValues = sharedElementBundle.getFloatArray(KEY_IMAGE_MATRIX);
tempMatrix.setValues(matrixValues);
imageView.setImageMatrix(tempMatrix);
}
}
}",1,0,0,0,0,0,0,0,0,9,3,13,0,0,1,1,5,3,0,0,1,0.64,28,22
2197_9,9,9,"int scaleTypeInt = sharedElementBundle.getInt(KEY_SCALE_TYPE, -1);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.45,39,30
2197_10,10,19,"if (scaleTypeInt >= 0) {
ImageView imageView = (ImageView) view;
ImageView.ScaleType scaleType = SCALE_TYPE_VALUES[scaleTypeInt];
imageView.setScaleType(scaleType);
if (scaleType == ImageView.ScaleType.MATRIX) {
float[] matrixValues = sharedElementBundle.getFloatArray(KEY_IMAGE_MATRIX);
tempMatrix.setValues(matrixValues);
imageView.setImageMatrix(tempMatrix);
}
}",1,0,0,0,0,0,0,0,0,7,2,10,0,1,0,0,5,3,0,0,1,0.65,29,22
2197_11,11,11,ImageView imageView = (ImageView) view;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.69,37,28
2197_12,12,12,ImageView.ScaleType scaleType = SCALE_TYPE_VALUES[scaleTypeInt];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.59,36,27
2197_13,13,13,imageView.setScaleType(scaleType);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.61,35,26
2197_14,14,18,"if (scaleType == ImageView.ScaleType.MATRIX) {
float[] matrixValues = sharedElementBundle.getFloatArray(KEY_IMAGE_MATRIX);
tempMatrix.setValues(matrixValues);
imageView.setImageMatrix(tempMatrix);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,5,3,0,0,1,0.65,30,22
2197_15,15,15,float[] matrixValues = sharedElementBundle.getFloatArray(KEY_IMAGE_MATRIX);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.54,33,24
2197_16,16,16,tempMatrix.setValues(matrixValues);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.61,32,23
2197_17,17,17,imageView.setImageMatrix(tempMatrix);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.71,31,22
2197_22,22,22,float z = sharedElementBundle.getFloat(KEY_TRANSLATION_Z);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,0,0,0,0.52,26,21
2197_23,23,23,view.setTranslationZ(z);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.7,25,20
2197_24,24,24,float elevation = sharedElementBundle.getFloat(KEY_ELEVATION);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.44,24,19
2197_25,25,25,view.setElevation(elevation);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,0,0,1,0.65,23,18
2197_27,27,27,float left = sharedElementBundle.getFloat(KEY_SCREEN_LEFT);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,5,3,0,0,0,0.52,21,17
2197_28,28,28,float top = sharedElementBundle.getFloat(KEY_SCREEN_TOP);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,3,0,0,0,0.49,20,16
2197_29,29,29,float right = sharedElementBundle.getFloat(KEY_SCREEN_RIGHT);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,3,0,0,0,0.5,19,15
2197_30,30,30,float bottom = sharedElementBundle.getFloat(KEY_SCREEN_BOTTOM);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,5,3,0,0,0,0.55,18,14
2197_32,32,60,"if (decorLoc != null) {
left -= decorLoc[0];
top -= decorLoc[1];
right -= decorLoc[0];
bottom -= decorLoc[1];
} else {
getSharedElementParentMatrix(view, tempMatrix);
tempRect.set(left, top, right, bottom);
tempMatrix.mapRect(tempRect);

float leftInParent = tempRect.left;
float topInParent = tempRect.top;

view.getInverseMatrix().mapRect(tempRect);
float width = tempRect.width();
float height = tempRect.height();

view.setLeft(0);
view.setTop(0);
view.setRight(Math.round(width));
view.setBottom(Math.round(height));
tempRect.set(0, 0, width, height);
view.getMatrix().mapRect(tempRect);

left = leftInParent - tempRect.left;
top = topInParent - tempRect.top;
right = left + width;
bottom = top + height;
}",1,0,0,0,0,0,0,0,0,23,1,29,0,0,1,1,5,3,0,0,1,0.66,0,0
2197_33,33,33,left -= decorLoc[0];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.52,15,12
2197_34,34,34,top -= decorLoc[1];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.42,14,11
2197_35,35,35,right -= decorLoc[0];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.49,13,10
2197_36,36,36,bottom -= decorLoc[1];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.53,12,9
2197_37,37,37,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.19,11,8
2197_38,38,38,"getSharedElementParentMatrix(view, tempMatrix);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.65,10,7
2197_39,39,39,"tempRect.set(left, top, right, bottom);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.63,9,6
2197_40,40,40,tempMatrix.mapRect(tempRect);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,0,0,0,0.62,8,5
2197_42,42,42,float leftInParent = tempRect.left;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,3,0,0,0,0.62,6,4
2197_43,43,43,float topInParent = tempRect.top;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,3,0,0,0,0.58,5,3
2197_45,45,45,view.getInverseMatrix().mapRect(tempRect);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,0,0,1,0.67,3,2
2197_46,46,46,float width = tempRect.width();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.57,2,1
2197_47,47,47,float height = tempRect.height();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,3,0,0,0,0.61,1,0
2197_49,49,49,view.setLeft(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,0,0,1,0.64,0,0
2197_50,50,50,view.setTop(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.61,1,0
2197_51,51,51,view.setRight(Math.round(width));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,3,0,0,1,0.65,2,1
2197_52,52,52,view.setBottom(Math.round(height));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,3,0,0,1,0.7,3,2
2197_53,53,53,"tempRect.set(0, 0, width, height);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.55,4,3
2197_54,54,54,view.getMatrix().mapRect(tempRect);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,0,0,1,0.68,5,4
2197_56,56,56,left = leftInParent - tempRect.left;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,0,0,0,0.62,7,6
2197_57,57,57,top = topInParent - tempRect.top;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.56,8,6
2197_58,58,58,right = left + width;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.61,9,7
2197_59,59,59,bottom = top + height;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.65,10,8
2197_62,62,62,int x = Math.round(left);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,5,3,0,0,0,0.62,13,10
2197_63,63,63,int y = Math.round(top);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,5,3,0,0,0,0.56,14,10
2197_64,64,64,int width = Math.round(right) - x;,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,5,3,0,0,0,0.6,15,11
2197_65,65,65,int height = Math.round(bottom) - y;,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,5,3,0,0,0,0.63,16,12
2197_66,66,66,"int widthSpec = View.MeasureSpec.makeMeasureSpec(width, View.MeasureSpec.EXACTLY);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,5,3,0,0,1,0.59,17,13
2197_67,67,67,"int heightSpec = View.MeasureSpec.makeMeasureSpec(height, View.MeasureSpec.EXACTLY);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,3,0,0,1,0.62,18,14
2197_68,68,68,"view.measure(widthSpec, heightSpec);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,0,0,1,0.64,19,15
2197_70,70,70,"view.layout(x, y, x + width, y + height);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,0,0,1,0.7,21,17
2196_1,1,2,"private void setSharedElementState(View view, String name, Bundle transitionArgs,
Matrix tempMatrix, RectF tempRect, int[] decorLoc) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,1,0.5,42,32
2196_3,3,3,Bundle sharedElementBundle = transitionArgs.getBundle(name);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.33,41,31
2196_4,4,6,"if (sharedElementBundle == null) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,2,1,0,0,0.28,38,29
2196_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.22,39,29
2196_8,8,20,"if (view instanceof ImageView) {
int scaleTypeInt = sharedElementBundle.getInt(KEY_SCALE_TYPE, -1);
if (scaleTypeInt >= 0) {
ImageView imageView = (ImageView) view;
ImageView.ScaleType scaleType = SCALE_TYPE_VALUES[scaleTypeInt];
imageView.setScaleType(scaleType);
if (scaleType == ImageView.ScaleType.MATRIX) {
float[] matrixValues = sharedElementBundle.getFloatArray(KEY_IMAGE_MATRIX);
tempMatrix.setValues(matrixValues);
imageView.setImageMatrix(tempMatrix);
}
}
}",1,0,0,0,0,0,0,0,0,9,3,13,0,0,1,1,3,2,1,0,1,0.58,24,19
2196_9,9,9,"int scaleTypeInt = sharedElementBundle.getInt(KEY_SCALE_TYPE, -1);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.41,35,27
2196_10,10,19,"if (scaleTypeInt >= 0) {
ImageView imageView = (ImageView) view;
ImageView.ScaleType scaleType = SCALE_TYPE_VALUES[scaleTypeInt];
imageView.setScaleType(scaleType);
if (scaleType == ImageView.ScaleType.MATRIX) {
float[] matrixValues = sharedElementBundle.getFloatArray(KEY_IMAGE_MATRIX);
tempMatrix.setValues(matrixValues);
imageView.setImageMatrix(tempMatrix);
}
}",1,0,0,0,0,0,0,0,0,7,2,10,0,1,0,0,3,2,1,0,1,0.59,25,19
2196_11,11,11,ImageView imageView = (ImageView) view;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.66,33,25
2196_12,12,12,ImageView.ScaleType scaleType = SCALE_TYPE_VALUES[scaleTypeInt];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.58,32,24
2196_13,13,13,imageView.setScaleType(scaleType);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.59,31,23
2196_14,14,18,"if (scaleType == ImageView.ScaleType.MATRIX) {
float[] matrixValues = sharedElementBundle.getFloatArray(KEY_IMAGE_MATRIX);
tempMatrix.setValues(matrixValues);
imageView.setImageMatrix(tempMatrix);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,3,2,1,0,1,0.56,26,19
2196_15,15,15,float[] matrixValues = sharedElementBundle.getFloatArray(KEY_IMAGE_MATRIX);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.42,29,21
2196_16,16,16,tempMatrix.setValues(matrixValues);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.38,28,20
2196_17,17,17,imageView.setImageMatrix(tempMatrix);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.53,27,19
2196_22,22,22,float z = sharedElementBundle.getFloat(KEY_TRANSLATION_Z);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,1,0,0,0.38,22,18
2196_23,23,23,view.setTranslationZ(z);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.55,21,17
2196_24,24,24,float elevation = sharedElementBundle.getFloat(KEY_ELEVATION);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.35,20,16
2196_25,25,25,view.setElevation(elevation);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,1,0,1,0.59,19,15
2196_27,27,27,float left = sharedElementBundle.getFloat(KEY_SCREEN_LEFT);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,3,2,1,0,0,0.44,17,14
2196_28,28,28,float top = sharedElementBundle.getFloat(KEY_SCREEN_TOP);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,2,1,0,0,0.42,16,13
2196_29,29,29,float right = sharedElementBundle.getFloat(KEY_SCREEN_RIGHT);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,2,1,0,0,0.42,15,12
2196_30,30,30,float bottom = sharedElementBundle.getFloat(KEY_SCREEN_BOTTOM);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,3,2,1,0,0,0.44,14,11
2196_32,32,60,"if (decorLoc != null) {
left -= decorLoc[0];
top -= decorLoc[1];
right -= decorLoc[0];
bottom -= decorLoc[1];
} else {
getSharedElementParentMatrix(view, tempMatrix);
tempRect.set(left, top, right, bottom);
tempMatrix.mapRect(tempRect);

float leftInParent = tempRect.left;
float topInParent = tempRect.top;

view.getInverseMatrix().mapRect(tempRect);
float width = tempRect.width();
float height = tempRect.height();

view.setLeft(0);
view.setTop(0);
view.setRight(Math.round(width));
view.setBottom(Math.round(height));
tempRect.set(0, 0, width, height);
view.getMatrix().mapRect(tempRect);

left = leftInParent - tempRect.left;
top = topInParent - tempRect.top;
right = left + width;
bottom = top + height;
}",1,0,0,0,0,0,0,0,0,23,1,29,0,0,1,1,3,2,1,0,1,0.58,0,0
2196_33,33,33,left -= decorLoc[0];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.42,11,9
2196_34,34,34,top -= decorLoc[1];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.38,10,8
2196_35,35,35,right -= decorLoc[0];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.42,9,7
2196_36,36,36,bottom -= decorLoc[1];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.41,8,6
2196_37,37,37,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.18,7,5
2196_38,38,38,"getSharedElementParentMatrix(view, tempMatrix);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.51,6,4
2196_39,39,39,"tempRect.set(left, top, right, bottom);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.49,5,3
2196_40,40,40,tempMatrix.mapRect(tempRect);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,1,0,0,0.4,4,2
2196_42,42,42,float leftInParent = tempRect.left;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,1,0,0,0.5,2,1
2196_43,43,43,float topInParent = tempRect.top;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,1,0,0,0.48,1,0
2196_45,45,45,view.getInverseMatrix().mapRect(tempRect);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,1,0,1,0.53,0,0
2196_46,46,46,float width = tempRect.width();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.48,1,0
2196_47,47,47,float height = tempRect.height();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,1,0,0,0.49,2,1
2196_49,49,49,view.setLeft(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,1,0,1,0.58,4,3
2196_50,50,50,view.setTop(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.58,5,3
2196_51,51,51,view.setRight(Math.round(width));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,1,0,1,0.62,6,4
2196_52,52,52,view.setBottom(Math.round(height));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,1,0,1,0.62,7,5
2196_53,53,53,"tempRect.set(0, 0, width, height);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.45,8,6
2196_54,54,54,view.getMatrix().mapRect(tempRect);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,1,0,1,0.53,9,7
2196_56,56,56,left = leftInParent - tempRect.left;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,1,0,0,0.49,11,9
2196_57,57,57,top = topInParent - tempRect.top;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.48,12,9
2196_58,58,58,right = left + width;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.56,13,10
2196_59,59,59,bottom = top + height;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.56,14,11
2196_62,62,62,int x = Math.round(left);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,3,2,1,0,0,0.51,17,13
2196_63,63,63,int y = Math.round(top);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,3,2,1,0,0,0.52,18,13
2196_64,64,64,int width = Math.round(right) - x;,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,3,2,1,0,0,0.51,19,14
2196_65,65,65,int height = Math.round(bottom) - y;,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,3,2,1,0,0,0.54,20,15
2196_66,66,66,"int widthSpec = View.MeasureSpec.makeMeasureSpec(width, View.MeasureSpec.EXACTLY);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,3,2,1,0,1,0.6,21,16
2196_67,67,67,"int heightSpec = View.MeasureSpec.makeMeasureSpec(height, View.MeasureSpec.EXACTLY);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,2,1,0,1,0.59,22,17
2196_68,68,68,"view.measure(widthSpec, heightSpec);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,1,0,1,0.62,23,18
2196_70,70,70,"view.layout(x, y, x + width, y + height);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,1,0,1,0.62,25,20
2195_1,1,2,"private void setSharedElementState(View view, String name, Bundle transitionArgs,
Matrix tempMatrix, RectF tempRect, int[] decorLoc) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,1,0.47,35,27
2195_3,3,3,Bundle sharedElementBundle = transitionArgs.getBundle(name);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.33,34,26
2195_4,4,6,"if (sharedElementBundle == null) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,4,2,1,0,0,0.32,31,24
2195_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.23,32,24
2195_8,8,20,"if (view instanceof ImageView) {
int scaleTypeInt = sharedElementBundle.getInt(KEY_SCALE_TYPE, -1);
if (scaleTypeInt >= 0) {
ImageView imageView = (ImageView) view;
ImageView.ScaleType scaleType = SCALE_TYPE_VALUES[scaleTypeInt];
imageView.setScaleType(scaleType);
if (scaleType == ImageView.ScaleType.MATRIX) {
float[] matrixValues = sharedElementBundle.getFloatArray(KEY_IMAGE_MATRIX);
tempMatrix.setValues(matrixValues);
imageView.setImageMatrix(tempMatrix);
}
}
}",1,0,0,0,0,0,0,0,0,9,3,13,0,0,1,1,4,2,1,0,1,0.51,17,14
2195_9,9,9,"int scaleTypeInt = sharedElementBundle.getInt(KEY_SCALE_TYPE, -1);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.31,28,22
2195_10,10,19,"if (scaleTypeInt >= 0) {
ImageView imageView = (ImageView) view;
ImageView.ScaleType scaleType = SCALE_TYPE_VALUES[scaleTypeInt];
imageView.setScaleType(scaleType);
if (scaleType == ImageView.ScaleType.MATRIX) {
float[] matrixValues = sharedElementBundle.getFloatArray(KEY_IMAGE_MATRIX);
tempMatrix.setValues(matrixValues);
imageView.setImageMatrix(tempMatrix);
}
}",1,0,0,0,0,0,0,0,0,7,2,10,0,1,0,0,4,2,1,0,1,0.5,18,14
2195_11,11,11,ImageView imageView = (ImageView) view;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.64,26,20
2195_12,12,12,ImageView.ScaleType scaleType = SCALE_TYPE_VALUES[scaleTypeInt];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.44,25,19
2195_13,13,13,imageView.setScaleType(scaleType);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.47,24,18
2195_14,14,18,"if (scaleType == ImageView.ScaleType.MATRIX) {
float[] matrixValues = sharedElementBundle.getFloatArray(KEY_IMAGE_MATRIX);
tempMatrix.setValues(matrixValues);
imageView.setImageMatrix(tempMatrix);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,4,2,1,0,1,0.49,19,14
2195_15,15,15,float[] matrixValues = sharedElementBundle.getFloatArray(KEY_IMAGE_MATRIX);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.4,22,16
2195_16,16,16,tempMatrix.setValues(matrixValues);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.4,21,15
2195_17,17,17,imageView.setImageMatrix(tempMatrix);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.53,20,14
2195_22,22,22,float z = sharedElementBundle.getFloat(KEY_TRANSLATION_Z);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.35,15,13
2195_23,23,23,view.setTranslationZ(z);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.51,14,12
2195_24,24,24,float elevation = sharedElementBundle.getFloat(KEY_ELEVATION);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.33,13,11
2195_25,25,25,view.setElevation(elevation);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,1,0.58,12,10
2195_27,27,27,float left = sharedElementBundle.getFloat(KEY_SCREEN_LEFT);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,4,2,1,0,0,0.42,10,9
2195_28,28,28,float top = sharedElementBundle.getFloat(KEY_SCREEN_TOP);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.39,9,8
2195_29,29,29,float right = sharedElementBundle.getFloat(KEY_SCREEN_RIGHT);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.4,8,7
2195_30,30,30,float bottom = sharedElementBundle.getFloat(KEY_SCREEN_BOTTOM);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,4,2,1,0,0,0.41,7,6
2195_32,32,60,"if (decorLoc != null) {
left -= decorLoc[0];
top -= decorLoc[1];
right -= decorLoc[0];
bottom -= decorLoc[1];
} else {
getSharedElementParentMatrix(view, tempMatrix);
tempRect.set(left, top, right, bottom);
tempMatrix.mapRect(tempRect);

float leftInParent = tempRect.left;
float topInParent = tempRect.top;

view.getInverseMatrix().mapRect(tempRect);
float width = tempRect.width();
float height = tempRect.height();

view.setLeft(0);
view.setTop(0);
view.setRight(Math.round(width));
view.setBottom(Math.round(height));
tempRect.set(0, 0, width, height);
view.getMatrix().mapRect(tempRect);

left = leftInParent - tempRect.left;
top = topInParent - tempRect.top;
right = left + width;
bottom = top + height;
}",1,0,0,0,0,0,0,0,0,23,1,29,0,0,1,1,4,2,1,0,2,0.57,0,0
2195_33,33,33,left -= decorLoc[0];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.35,4,4
2195_34,34,34,top -= decorLoc[1];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.35,3,3
2195_35,35,35,right -= decorLoc[0];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.36,2,2
2195_36,36,36,bottom -= decorLoc[1];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.36,1,1
2195_37,37,37,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.23,0,0
2195_38,38,38,"getSharedElementParentMatrix(view, tempMatrix);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.61,0,0
2195_39,39,39,"tempRect.set(left, top, right, bottom);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.47,1,0
2195_40,40,40,tempMatrix.mapRect(tempRect);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.39,2,1
2195_42,42,42,float leftInParent = tempRect.left;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,2,1,0,1,0.56,4,3
2195_43,43,43,float topInParent = tempRect.top;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,1,0.55,5,3
2195_45,45,45,view.getInverseMatrix().mapRect(tempRect);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,1,0.48,7,5
2195_46,46,46,float width = tempRect.width();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.36,8,5
2195_47,47,47,float height = tempRect.height();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.4,9,6
2195_49,49,49,view.setLeft(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,1,0.52,11,8
2195_50,50,50,view.setTop(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.52,12,8
2195_51,51,51,view.setRight(Math.round(width));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,1,0.5,13,9
2195_52,52,52,view.setBottom(Math.round(height));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,1,0.5,14,10
2195_53,53,53,"tempRect.set(0, 0, width, height);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.34,15,11
2195_54,54,54,view.getMatrix().mapRect(tempRect);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,1,0.49,16,12
2195_56,56,56,left = leftInParent - tempRect.left;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,1,0.57,18,14
2195_57,57,57,top = topInParent - tempRect.top;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.56,19,14
2195_58,58,58,right = left + width;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.47,20,15
2195_59,59,59,bottom = top + height;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.49,21,16
2195_62,62,62,int x = Math.round(left);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,4,2,1,0,0,0.38,24,18
2195_63,63,63,int y = Math.round(top);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,4,2,1,0,0,0.37,25,18
2195_64,64,64,int width = Math.round(right) - x;,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,4,2,1,0,0,0.37,26,19
2195_65,65,65,int height = Math.round(bottom) - y;,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,4,2,1,0,0,0.39,27,20
2195_66,66,66,"int widthSpec = View.MeasureSpec.makeMeasureSpec(width, View.MeasureSpec.EXACTLY);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,4,2,1,0,1,0.48,28,21
2195_67,67,67,"int heightSpec = View.MeasureSpec.makeMeasureSpec(height, View.MeasureSpec.EXACTLY);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,2,1,0,1,0.49,29,22
2195_68,68,68,"view.measure(widthSpec, heightSpec);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,1,0.5,30,23
2195_70,70,70,"view.layout(x, y, x + width, y + height);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,1,0.51,32,25
2194_1,1,1,"protected Transition setTargets(Transition transition, boolean add) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.55,24,17
2194_2,2,5,"if (transition == null || (add &&
(mTransitioningViews == null || mTransitioningViews.isEmpty()))) {
return null;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,6,4,1,0,2,0.64,20,14
2194_3,3,3,(mTransitioningViews == null || mTransitioningViews.isEmpty()))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,2,0.71,22,15
2194_4,4,4,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.25,21,14
2194_6,6,6,TransitionSet set = new TransitionSet();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.51,19,13
2194_7,7,16,"if (mTransitioningViews != null) {
for (int i = mTransitioningViews.size() - 1; i >= 0; i--) {
View view = mTransitioningViews.get(i);
if (add) {
set.addTarget(view);
} else {
set.excludeTarget(view, true);
}
}
}",1,0,0,0,0,0,0,0,0,6,3,10,1,1,0,0,6,4,1,0,3,0.72,9,6
2194_8,8,15,"for (int i = mTransitioningViews.size() - 1; i >= 0; i--) {
View view = mTransitioningViews.get(i);
if (add) {
set.addTarget(view);
} else {
set.excludeTarget(view, true);
}
}",0,0,1,0,0,0,0,0,0,5,2,8,0,0,0,0,6,4,1,0,3,0.71,10,6
2194_9,9,9,View view = mTransitioningViews.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,2,0.76,16,10
2194_10,10,14,"if (add) {
set.addTarget(view);
} else {
set.excludeTarget(view, true);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,6,4,1,0,2,0.63,11,6
2194_11,11,11,set.addTarget(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.56,14,8
2194_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.28,13,7
2194_13,13,13,"set.excludeTarget(view, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,2,0.67,12,6
2194_17,17,22,"if (mStrippedTransitioningViews != null) {
for (int i = mStrippedTransitioningViews.size() - 1; i >= 0; i--) {
View view = mStrippedTransitioningViews.get(i);
set.excludeTarget(view, true);
}
}",1,0,0,0,0,0,0,0,0,3,2,6,1,1,0,0,6,4,1,0,3,0.72,3,2
2194_18,18,21,"for (int i = mStrippedTransitioningViews.size() - 1; i >= 0; i--) {
View view = mStrippedTransitioningViews.get(i);
set.excludeTarget(view, true);
}",0,0,1,0,0,0,0,0,0,2,1,4,0,0,0,0,6,4,1,0,3,0.72,4,2
2194_19,19,19,View view = mStrippedTransitioningViews.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,2,0.72,6,3
2194_20,20,20,"set.excludeTarget(view, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,2,0.67,5,2
2194_23,23,23,set.addTransition(transition);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,4,1,0,1,0.58,2,1
2194_25,25,27,"if (!add && mTransitioningViews != null && !mTransitioningViews.isEmpty()) {
set = new TransitionSet().addTransition(set);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,4,1,0,2,0.65,0,0
2194_26,26,26,set = new TransitionSet().addTransition(set);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.5,0,0
2194_29,29,29,return set;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,4,1,0,0,0.31,3,1
2193_1,1,1,"protected Transition setTargets(Transition transition, boolean add) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,3,0.79,21,15
2193_2,2,5,"if (transition == null || (add &&
(mTransitioningViews == null || mTransitioningViews.isEmpty()))) {
return null;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,9,6,1,0,2,0.58,17,12
2193_3,3,3,(mTransitioningViews == null || mTransitioningViews.isEmpty()))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,1,0.5,19,13
2193_4,4,4,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.18,18,12
2193_6,6,6,TransitionSet set = new TransitionSet();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,6,1,0,1,0.54,16,11
2193_7,7,16,"if (mTransitioningViews != null) {
for (int i = mTransitioningViews.size() - 1; i >= 0; i--) {
View view = mTransitioningViews.get(i);
if (add) {
set.addTarget(view);
} else {
set.excludeTarget(view, true);
}
}
}",1,0,0,0,0,0,0,0,0,6,3,10,1,1,0,0,9,6,1,0,3,0.67,6,4
2193_8,8,15,"for (int i = mTransitioningViews.size() - 1; i >= 0; i--) {
View view = mTransitioningViews.get(i);
if (add) {
set.addTarget(view);
} else {
set.excludeTarget(view, true);
}
}",0,0,1,0,0,0,0,0,0,5,2,8,0,0,0,0,9,6,1,0,3,0.67,7,4
2193_9,9,9,View view = mTransitioningViews.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,6,1,0,1,0.47,13,8
2193_10,10,14,"if (add) {
set.addTarget(view);
} else {
set.excludeTarget(view, true);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,9,6,1,0,2,0.64,8,4
2193_11,11,11,set.addTarget(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,2,0.66,11,6
2193_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.25,10,5
2193_13,13,13,"set.excludeTarget(view, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,1,0.51,9,4
2193_17,17,22,"if (mStrippedTransitioningViews != null) {
for (int i = mStrippedTransitioningViews.size() - 1; i >= 0; i--) {
View view = mStrippedTransitioningViews.get(i);
set.excludeTarget(view, true);
}
}",1,0,0,0,0,0,0,0,0,3,2,6,1,1,0,0,9,6,1,0,2,0.55,0,0
2193_18,18,21,"for (int i = mStrippedTransitioningViews.size() - 1; i >= 0; i--) {
View view = mStrippedTransitioningViews.get(i);
set.excludeTarget(view, true);
}",0,0,1,0,0,0,0,0,0,2,1,4,0,0,0,0,9,6,1,0,2,0.55,1,0
2193_19,19,19,View view = mStrippedTransitioningViews.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,6,1,0,1,0.45,3,1
2193_20,20,20,"set.excludeTarget(view, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,6,1,0,1,0.51,2,0
2193_23,23,23,set.addTransition(transition);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,9,6,1,0,2,0.74,0,0
2193_25,25,27,"if (!add && mTransitioningViews != null && !mTransitioningViews.isEmpty()) {
set = new TransitionSet().addTransition(set);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,9,6,1,0,2,0.63,2,1
2193_26,26,26,set = new TransitionSet().addTransition(set);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,2,0.65,3,1
2193_29,29,29,return set;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,9,6,1,0,0,0.3,6,3
2179_1,1,1,public void onClick(View v) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.46,14,11
2179_2,2,21,"if (v.getTag() instanceof BackStackEntry) {
BackStackEntry bse = (BackStackEntry) v.getTag();
if (bse == mParentEntry) {
if (mParentClickListener != null) {
mParentClickListener.onClick(v);
}
} else {
if (mOnBreadCrumbClickListener != null) {
if (mOnBreadCrumbClickListener.onBreadCrumbClick(
bse == mTopEntry ? null : bse, 0)) {
return;
}
}
if (bse == mTopEntry) {
mActivity.getFragmentManager().popBackStack();
} else {
mActivity.getFragmentManager().popBackStack(bse.getId(), 0);
}
}
}",1,0,0,0,0,0,0,0,0,13,4,20,0,0,0,0,4,2,1,0,3,0.7,0,0
2179_3,3,3,BackStackEntry bse = (BackStackEntry) v.getTag();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.71,12,9
2179_4,4,20,"if (bse == mParentEntry) {
if (mParentClickListener != null) {
mParentClickListener.onClick(v);
}
} else {
if (mOnBreadCrumbClickListener != null) {
if (mOnBreadCrumbClickListener.onBreadCrumbClick(
bse == mTopEntry ? null : bse, 0)) {
return;
}
}
if (bse == mTopEntry) {
mActivity.getFragmentManager().popBackStack();
} else {
mActivity.getFragmentManager().popBackStack(bse.getId(), 0);
}
}",1,0,0,0,0,0,0,0,0,11,3,17,0,1,0,0,4,2,1,0,3,0.68,0,0
2179_5,5,7,"if (mParentClickListener != null) {
mParentClickListener.onClick(v);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,2,1,0,0,0.5,8,6
2179_6,6,6,mParentClickListener.onClick(v);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.52,9,6
2179_8,8,8,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.29,7,5
2179_9,9,14,"if (mOnBreadCrumbClickListener != null) {
if (mOnBreadCrumbClickListener.onBreadCrumbClick(
bse == mTopEntry ? null : bse, 0)) {
return;
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,0,4,2,1,0,0,0.52,1,1
2179_10,10,13,"if (mOnBreadCrumbClickListener.onBreadCrumbClick(
bse == mTopEntry ? null : bse, 0)) {
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,4,2,1,0,0,0.52,2,1
2179_11,11,11,"bse == mTopEntry ? null : bse, 0)) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.43,4,2
2179_12,12,12,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.29,3,1
2179_15,15,19,"if (bse == mTopEntry) {
mActivity.getFragmentManager().popBackStack();
} else {
mActivity.getFragmentManager().popBackStack(bse.getId(), 0);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,4,2,1,0,3,0.69,0,0
2179_16,16,16,mActivity.getFragmentManager().popBackStack();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,3,0.72,0,0
2179_17,17,17,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.29,1,0
2179_18,18,18,"mActivity.getFragmentManager().popBackStack(bse.getId(), 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,3,0.68,2,1
2178_1,1,1,void updateCrumbs() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.43,43,34
2178_2,2,2,FragmentManager fm = mActivity.getFragmentManager();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.25,42,33
2178_3,3,3,int numEntries = fm.getBackStackEntryCount();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.42,41,32
2178_4,4,4,int numPreEntries = getPreEntryCount();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.43,40,31
2178_5,5,5,int numViews = mContainer.getChildCount();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.45,39,30
2178_6,6,32,"for (int i = 0; i < numEntries + numPreEntries; i++) {
BackStackEntry bse = i < numPreEntries
? getPreEntry(i)
: fm.getBackStackEntryAt(i - numPreEntries);
if (i < numViews) {
View v = mContainer.getChildAt(i);
Object tag = v.getTag();
if (tag != bse) {
for (int j = i; j < numViews; j++) {
mContainer.removeViewAt(i);
}
numViews = i;
}
}
if (i >= numViews) {
final View item = mInflater.inflate(mLayoutResId, this, false);
final TextView text = (TextView) item.findViewById(com.android.internal.R.id.title);
text.setText(bse.getBreadCrumbTitle());
text.setTag(bse);
text.setTextColor(mTextColor);
if (i == 0) {
item.findViewById(com.android.internal.R.id.left_icon).setVisibility(View.GONE);
}
mContainer.addView(item);
text.setOnClickListener(mOnClickListener);
}
}",0,0,1,0,0,0,0,0,0,18,4,27,0,1,0,0,6,3,1,0,2,0.56,12,11
2178_7,7,9,"BackStackEntry bse = i < numPreEntries
? getPreEntry(i)
: fm.getBackStackEntryAt(i - numPreEntries);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,6,3,1,0,0,0.41,35,28
2178_10,10,19,"if (i < numViews) {
View v = mContainer.getChildAt(i);
Object tag = v.getTag();
if (tag != bse) {
for (int j = i; j < numViews; j++) {
mContainer.removeViewAt(i);
}
numViews = i;
}
}",1,0,0,0,0,0,0,0,0,6,3,10,0,1,0,0,6,3,1,0,1,0.52,25,21
2178_11,11,11,View v = mContainer.getChildAt(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.35,33,26
2178_12,12,12,Object tag = v.getTag();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.25,32,25
2178_13,13,18,"if (tag != bse) {
for (int j = i; j < numViews; j++) {
mContainer.removeViewAt(i);
}
numViews = i;
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,0,6,3,1,0,1,0.57,26,21
2178_14,14,16,"for (int j = i; j < numViews; j++) {
mContainer.removeViewAt(i);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,1,0,1,0.59,28,22
2178_15,15,15,mContainer.removeViewAt(i);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.49,29,22
2178_17,17,17,numViews = i;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.52,27,21
2178_20,20,31,"if (i >= numViews) {
final View item = mInflater.inflate(mLayoutResId, this, false);
final TextView text = (TextView) item.findViewById(com.android.internal.R.id.title);
text.setText(bse.getBreadCrumbTitle());
text.setTag(bse);
text.setTextColor(mTextColor);
if (i == 0) {
item.findViewById(com.android.internal.R.id.left_icon).setVisibility(View.GONE);
}
mContainer.addView(item);
text.setOnClickListener(mOnClickListener);
}",1,0,0,0,0,0,0,0,0,9,2,12,0,1,0,0,6,3,1,0,1,0.51,13,11
2178_21,21,21,"final View item = mInflater.inflate(mLayoutResId, this, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.41,23,19
2178_22,22,22,final TextView text = (TextView) item.findViewById(com.android.internal.R.id.title);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.41,22,18
2178_23,23,23,text.setText(bse.getBreadCrumbTitle());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.42,21,17
2178_24,24,24,text.setTag(bse);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.25,20,16
2178_25,25,25,text.setTextColor(mTextColor);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.32,19,15
2178_26,26,28,"if (i == 0) {
item.findViewById(com.android.internal.R.id.left_icon).setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,1,0,1,0.52,16,13
2178_27,27,27,item.findViewById(com.android.internal.R.id.left_icon).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.49,17,13
2178_29,29,29,mContainer.addView(item);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.35,15,12
2178_30,30,30,text.setOnClickListener(mOnClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.31,14,11
2178_33,33,33,int viewI = numEntries + numPreEntries;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.49,11,10
2178_34,34,34,numViews = mContainer.getChildCount();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.43,10,9
2178_35,35,38,"while (numViews > viewI) {
mContainer.removeViewAt(numViews - 1);
numViews--;
}",0,1,0,0,0,0,0,0,0,2,1,4,0,1,0,0,6,3,1,0,2,0.65,6,6
2178_36,36,36,mContainer.removeViewAt(numViews - 1);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,2,0.67,8,7
2178_37,37,37,numViews--;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.52,7,6
2178_39,39,48,"for (int i = 0; i < numViews; i++) {
final View child = mContainer.getChildAt(i);
child.findViewById(com.android.internal.R.id.title).setEnabled(i < numViews - 1);
if (mMaxVisible > 0) {
child.setVisibility(i < numViews - mMaxVisible ? View.GONE : View.VISIBLE);
final View leftIcon = child.findViewById(com.android.internal.R.id.left_icon);
leftIcon.setVisibility(i > numViews - mMaxVisible && i != 0 ? View.VISIBLE
: View.GONE);
}
}",0,0,1,0,0,0,0,0,0,6,2,10,0,1,0,0,6,3,1,0,3,0.65,0,0
2178_40,40,40,final View child = mContainer.getChildAt(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.33,4,4
2178_41,41,41,child.findViewById(com.android.internal.R.id.title).setEnabled(i < numViews - 1);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,1,0,1,0.51,3,3
2178_42,42,47,"if (mMaxVisible > 0) {
child.setVisibility(i < numViews - mMaxVisible ? View.GONE : View.VISIBLE);
final View leftIcon = child.findViewById(com.android.internal.R.id.left_icon);
leftIcon.setVisibility(i > numViews - mMaxVisible && i != 0 ? View.VISIBLE
: View.GONE);
}",1,0,0,0,0,0,0,0,0,3,1,6,1,1,0,0,6,3,1,0,2,0.63,0,0
2178_43,43,43,child.setVisibility(i < numViews - mMaxVisible ? View.GONE : View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,2,0.66,1,1
2178_44,44,44,final View leftIcon = child.findViewById(com.android.internal.R.id.left_icon);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.42,0,0
2178_45,45,46,"leftIcon.setVisibility(i > numViews - mMaxVisible && i != 0 ? View.VISIBLE
: View.GONE);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,6,3,1,0,2,0.67,0,0
2177_1,1,1,void updateCrumbs() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,1,0.56,41,32
2177_2,2,2,FragmentManager fm = mActivity.getFragmentManager();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,2,0,0,0.23,40,31
2177_3,3,3,int numEntries = fm.getBackStackEntryCount();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,2,0,0,0.42,39,30
2177_4,4,4,int numPreEntries = getPreEntryCount();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.42,38,29
2177_5,5,5,int numViews = mContainer.getChildCount();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,2,0,0,0.46,37,28
2177_6,6,32,"for (int i = 0; i < numEntries + numPreEntries; i++) {
BackStackEntry bse = i < numPreEntries
? getPreEntry(i)
: fm.getBackStackEntryAt(i - numPreEntries);
if (i < numViews) {
View v = mContainer.getChildAt(i);
Object tag = v.getTag();
if (tag != bse) {
for (int j = i; j < numViews; j++) {
mContainer.removeViewAt(i);
}
numViews = i;
}
}
if (i >= numViews) {
final View item = mInflater.inflate(mLayoutResId, this, false);
final TextView text = (TextView) item.findViewById(com.android.internal.R.id.title);
text.setText(bse.getBreadCrumbTitle());
text.setTag(bse);
text.setTextColor(mTextColor);
if (i == 0) {
item.findViewById(com.android.internal.R.id.left_icon).setVisibility(View.GONE);
}
mContainer.addView(item);
text.setOnClickListener(mOnClickListener);
}
}",0,0,1,0,0,0,0,0,0,18,4,27,0,1,0,0,6,2,2,0,2,0.57,10,9
2177_7,7,9,"BackStackEntry bse = i < numPreEntries
? getPreEntry(i)
: fm.getBackStackEntryAt(i - numPreEntries);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,6,2,2,0,0,0.42,33,26
2177_10,10,19,"if (i < numViews) {
View v = mContainer.getChildAt(i);
Object tag = v.getTag();
if (tag != bse) {
for (int j = i; j < numViews; j++) {
mContainer.removeViewAt(i);
}
numViews = i;
}
}",1,0,0,0,0,0,0,0,0,6,3,10,0,1,0,0,6,2,2,0,0,0.47,23,19
2177_11,11,11,View v = mContainer.getChildAt(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,2,0,0,0.44,31,24
2177_12,12,12,Object tag = v.getTag();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,2,0,0,0.3,30,23
2177_13,13,18,"if (tag != bse) {
for (int j = i; j < numViews; j++) {
mContainer.removeViewAt(i);
}
numViews = i;
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,0,6,2,2,0,0,0.5,24,19
2177_14,14,16,"for (int j = i; j < numViews; j++) {
mContainer.removeViewAt(i);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,6,2,2,0,0,0.5,26,20
2177_15,15,15,mContainer.removeViewAt(i);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.37,27,20
2177_17,17,17,numViews = i;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,2,0,0,0.55,25,19
2177_20,20,31,"if (i >= numViews) {
final View item = mInflater.inflate(mLayoutResId, this, false);
final TextView text = (TextView) item.findViewById(com.android.internal.R.id.title);
text.setText(bse.getBreadCrumbTitle());
text.setTag(bse);
text.setTextColor(mTextColor);
if (i == 0) {
item.findViewById(com.android.internal.R.id.left_icon).setVisibility(View.GONE);
}
mContainer.addView(item);
text.setOnClickListener(mOnClickListener);
}",1,0,0,0,0,0,0,0,0,9,2,12,0,1,0,0,6,2,2,0,2,0.57,11,9
2177_21,21,21,"final View item = mInflater.inflate(mLayoutResId, this, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,2,0,0,0.41,21,17
2177_22,22,22,final TextView text = (TextView) item.findViewById(com.android.internal.R.id.title);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,2,0,0,0.43,20,16
2177_23,23,23,text.setText(bse.getBreadCrumbTitle());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,2,0,1,0.51,19,15
2177_24,24,24,text.setTag(bse);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,2,0,0,0.26,18,14
2177_25,25,25,text.setTextColor(mTextColor);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,2,0,0,0.31,17,13
2177_26,26,28,"if (i == 0) {
item.findViewById(com.android.internal.R.id.left_icon).setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,2,2,0,1,0.58,14,11
2177_27,27,27,item.findViewById(com.android.internal.R.id.left_icon).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,1,0.57,15,11
2177_29,29,29,mContainer.addView(item);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,2,0,0,0.42,13,10
2177_30,30,30,text.setOnClickListener(mOnClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.3,12,9
2177_33,33,33,int viewI = numEntries + numPreEntries;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,2,0,0,0.48,9,8
2177_34,34,34,numViews = mContainer.getChildCount();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,2,0,0,0.46,8,7
2177_35,35,38,"while (numViews > viewI) {
mContainer.removeViewAt(numViews - 1);
numViews--;
}",0,1,0,0,0,0,0,0,0,2,1,4,0,1,0,0,6,2,2,0,0,0.5,4,4
2177_36,36,36,mContainer.removeViewAt(numViews - 1);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,2,0,0,0.46,6,5
2177_37,37,37,numViews--;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,2,0,0,0.55,5,4
2177_39,39,48,"for (int i = 0; i < numViews; i++) {
final View child = mContainer.getChildAt(i);
child.findViewById(com.android.internal.R.id.title).setEnabled(i < numViews - 1);
if (mMaxVisible > 0) {
child.setVisibility(i < numViews - mMaxVisible ? View.GONE : View.VISIBLE);
final View leftIcon = child.findViewById(com.android.internal.R.id.left_icon);
leftIcon.setVisibility(i > numViews - mMaxVisible && i != 0 ? View.VISIBLE
: View.GONE);
}
}",0,0,1,0,0,0,0,0,0,6,2,10,0,1,0,0,6,2,2,0,2,0.66,0,0
2177_40,40,40,final View child = mContainer.getChildAt(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,2,0,0,0.4,2,2
2177_41,41,41,child.findViewById(com.android.internal.R.id.title).setEnabled(i < numViews - 1);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,2,2,0,0,0.45,1,1
2177_42,42,47,"if (mMaxVisible > 0) {
child.setVisibility(i < numViews - mMaxVisible ? View.GONE : View.VISIBLE);
final View leftIcon = child.findViewById(com.android.internal.R.id.left_icon);
leftIcon.setVisibility(i > numViews - mMaxVisible && i != 0 ? View.VISIBLE
: View.GONE);
}",1,0,0,0,0,0,0,0,0,3,1,6,1,1,0,0,6,2,2,0,2,0.7,0,0
2177_43,43,43,child.setVisibility(i < numViews - mMaxVisible ? View.GONE : View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,2,0,2,0.75,0,0
2177_44,44,44,final View leftIcon = child.findViewById(com.android.internal.R.id.left_icon);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,2,0,0,0.46,1,0
2177_45,45,46,"leftIcon.setVisibility(i > numViews - mMaxVisible && i != 0 ? View.VISIBLE
: View.GONE);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,6,2,2,0,2,0.74,2,1
2176_1,1,1,void updateCrumbs() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.33,39,30
2176_2,2,2,FragmentManager fm = mActivity.getFragmentManager();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.24,38,29
2176_3,3,3,int numEntries = fm.getBackStackEntryCount();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.28,37,28
2176_4,4,4,int numPreEntries = getPreEntryCount();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.33,36,27
2176_5,5,5,int numViews = mContainer.getChildCount();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.3,35,26
2176_6,6,32,"for (int i = 0; i < numEntries + numPreEntries; i++) {
BackStackEntry bse = i < numPreEntries
? getPreEntry(i)
: fm.getBackStackEntryAt(i - numPreEntries);
if (i < numViews) {
View v = mContainer.getChildAt(i);
Object tag = v.getTag();
if (tag != bse) {
for (int j = i; j < numViews; j++) {
mContainer.removeViewAt(i);
}
numViews = i;
}
}
if (i >= numViews) {
final View item = mInflater.inflate(mLayoutResId, this, false);
final TextView text = (TextView) item.findViewById(com.android.internal.R.id.title);
text.setText(bse.getBreadCrumbTitle());
text.setTag(bse);
text.setTextColor(mTextColor);
if (i == 0) {
item.findViewById(com.android.internal.R.id.left_icon).setVisibility(View.GONE);
}
mContainer.addView(item);
text.setOnClickListener(mOnClickListener);
}
}",0,0,1,0,0,0,0,0,0,18,4,27,0,1,0,0,3,1,0,0,0,0.33,8,7
2176_7,7,9,"BackStackEntry bse = i < numPreEntries
? getPreEntry(i)
: fm.getBackStackEntryAt(i - numPreEntries);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,3,1,0,0,0,0.31,31,24
2176_10,10,19,"if (i < numViews) {
View v = mContainer.getChildAt(i);
Object tag = v.getTag();
if (tag != bse) {
for (int j = i; j < numViews; j++) {
mContainer.removeViewAt(i);
}
numViews = i;
}
}",1,0,0,0,0,0,0,0,0,6,3,10,0,1,0,0,3,1,0,0,0,0.3,21,17
2176_11,11,11,View v = mContainer.getChildAt(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.24,29,22
2176_12,12,12,Object tag = v.getTag();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.2,28,21
2176_13,13,18,"if (tag != bse) {
for (int j = i; j < numViews; j++) {
mContainer.removeViewAt(i);
}
numViews = i;
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,0,3,1,0,0,0,0.31,22,17
2176_14,14,16,"for (int j = i; j < numViews; j++) {
mContainer.removeViewAt(i);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,3,1,0,0,0,0.3,24,18
2176_15,15,15,mContainer.removeViewAt(i);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.21,25,18
2176_17,17,17,numViews = i;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.33,23,17
2176_20,20,31,"if (i >= numViews) {
final View item = mInflater.inflate(mLayoutResId, this, false);
final TextView text = (TextView) item.findViewById(com.android.internal.R.id.title);
text.setText(bse.getBreadCrumbTitle());
text.setTag(bse);
text.setTextColor(mTextColor);
if (i == 0) {
item.findViewById(com.android.internal.R.id.left_icon).setVisibility(View.GONE);
}
mContainer.addView(item);
text.setOnClickListener(mOnClickListener);
}",1,0,0,0,0,0,0,0,0,9,2,12,0,1,0,0,3,1,0,0,0,0.32,9,7
2176_21,21,21,"final View item = mInflater.inflate(mLayoutResId, this, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.27,19,15
2176_22,22,22,final TextView text = (TextView) item.findViewById(com.android.internal.R.id.title);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.3,18,14
2176_23,23,23,text.setText(bse.getBreadCrumbTitle());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.31,17,13
2176_24,24,24,text.setTag(bse);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.22,16,12
2176_25,25,25,text.setTextColor(mTextColor);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.24,15,11
2176_26,26,28,"if (i == 0) {
item.findViewById(com.android.internal.R.id.left_icon).setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,1,0,0,0,0.33,12,9
2176_27,27,27,item.findViewById(com.android.internal.R.id.left_icon).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.33,13,9
2176_29,29,29,mContainer.addView(item);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.23,11,8
2176_30,30,30,text.setOnClickListener(mOnClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.2,10,7
2176_33,33,33,int viewI = numEntries + numPreEntries;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.35,7,6
2176_34,34,34,numViews = mContainer.getChildCount();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.29,6,5
2176_35,35,38,"while (numViews > viewI) {
mContainer.removeViewAt(numViews - 1);
numViews--;
}",0,1,0,0,0,0,0,0,0,2,1,4,0,1,0,0,3,1,0,0,0,0.33,2,2
2176_36,36,36,mContainer.removeViewAt(numViews - 1);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.31,4,3
2176_37,37,37,numViews--;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.33,3,2
2176_39,39,48,"for (int i = 0; i < numViews; i++) {
final View child = mContainer.getChildAt(i);
child.findViewById(com.android.internal.R.id.title).setEnabled(i < numViews - 1);
if (mMaxVisible > 0) {
child.setVisibility(i < numViews - mMaxVisible ? View.GONE : View.VISIBLE);
final View leftIcon = child.findViewById(com.android.internal.R.id.left_icon);
leftIcon.setVisibility(i > numViews - mMaxVisible && i != 0 ? View.VISIBLE
: View.GONE);
}
}",0,0,1,0,0,0,0,0,0,6,2,10,0,1,0,0,3,1,0,0,0,0.37,0,0
2176_40,40,40,final View child = mContainer.getChildAt(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.24,0,0
2176_41,41,41,child.findViewById(com.android.internal.R.id.title).setEnabled(i < numViews - 1);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,0,0,0,0.36,0,0
2176_42,42,47,"if (mMaxVisible > 0) {
child.setVisibility(i < numViews - mMaxVisible ? View.GONE : View.VISIBLE);
final View leftIcon = child.findViewById(com.android.internal.R.id.left_icon);
leftIcon.setVisibility(i > numViews - mMaxVisible && i != 0 ? View.VISIBLE
: View.GONE);
}",1,0,0,0,0,0,0,0,0,3,1,6,1,1,0,0,3,1,0,0,0,0.35,1,0
2176_43,43,43,child.setVisibility(i < numViews - mMaxVisible ? View.GONE : View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.38,2,1
2176_44,44,44,final View leftIcon = child.findViewById(com.android.internal.R.id.left_icon);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.3,3,2
2176_45,45,46,"leftIcon.setVisibility(i > numViews - mMaxVisible && i != 0 ? View.VISIBLE
: View.GONE);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,3,1,0,0,0,0.37,4,3
2175_1,1,1,void updateCrumbs() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.57,37,28
2175_2,2,2,FragmentManager fm = mActivity.getFragmentManager();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.27,36,27
2175_3,3,3,int numEntries = fm.getBackStackEntryCount();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.47,35,26
2175_4,4,4,int numPreEntries = getPreEntryCount();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.47,34,25
2175_5,5,5,int numViews = mContainer.getChildCount();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.52,33,24
2175_6,6,32,"for (int i = 0; i < numEntries + numPreEntries; i++) {
BackStackEntry bse = i < numPreEntries
? getPreEntry(i)
: fm.getBackStackEntryAt(i - numPreEntries);
if (i < numViews) {
View v = mContainer.getChildAt(i);
Object tag = v.getTag();
if (tag != bse) {
for (int j = i; j < numViews; j++) {
mContainer.removeViewAt(i);
}
numViews = i;
}
}
if (i >= numViews) {
final View item = mInflater.inflate(mLayoutResId, this, false);
final TextView text = (TextView) item.findViewById(com.android.internal.R.id.title);
text.setText(bse.getBreadCrumbTitle());
text.setTag(bse);
text.setTextColor(mTextColor);
if (i == 0) {
item.findViewById(com.android.internal.R.id.left_icon).setVisibility(View.GONE);
}
mContainer.addView(item);
text.setOnClickListener(mOnClickListener);
}
}",0,0,1,0,0,0,0,0,0,18,4,27,0,1,0,0,6,4,0,0,3,0.59,6,5
2175_7,7,9,"BackStackEntry bse = i < numPreEntries
? getPreEntry(i)
: fm.getBackStackEntryAt(i - numPreEntries);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,6,4,0,0,0,0.45,29,22
2175_10,10,19,"if (i < numViews) {
View v = mContainer.getChildAt(i);
Object tag = v.getTag();
if (tag != bse) {
for (int j = i; j < numViews; j++) {
mContainer.removeViewAt(i);
}
numViews = i;
}
}",1,0,0,0,0,0,0,0,0,6,3,10,0,1,0,0,6,4,0,0,0,0.52,19,15
2175_11,11,11,View v = mContainer.getChildAt(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.48,27,20
2175_12,12,12,Object tag = v.getTag();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.36,26,19
2175_13,13,18,"if (tag != bse) {
for (int j = i; j < numViews; j++) {
mContainer.removeViewAt(i);
}
numViews = i;
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,0,6,4,0,0,0,0.55,20,15
2175_14,14,16,"for (int j = i; j < numViews; j++) {
mContainer.removeViewAt(i);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,0,0,0,0.55,22,16
2175_15,15,15,mContainer.removeViewAt(i);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.4,23,16
2175_17,17,17,numViews = i;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.59,21,15
2175_20,20,31,"if (i >= numViews) {
final View item = mInflater.inflate(mLayoutResId, this, false);
final TextView text = (TextView) item.findViewById(com.android.internal.R.id.title);
text.setText(bse.getBreadCrumbTitle());
text.setTag(bse);
text.setTextColor(mTextColor);
if (i == 0) {
item.findViewById(com.android.internal.R.id.left_icon).setVisibility(View.GONE);
}
mContainer.addView(item);
text.setOnClickListener(mOnClickListener);
}",1,0,0,0,0,0,0,0,0,9,2,12,0,1,0,0,6,4,0,0,3,0.59,7,5
2175_21,21,21,"final View item = mInflater.inflate(mLayoutResId, this, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.48,17,13
2175_22,22,22,final TextView text = (TextView) item.findViewById(com.android.internal.R.id.title);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.46,16,12
2175_23,23,23,text.setText(bse.getBreadCrumbTitle());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,2,0.56,15,11
2175_24,24,24,text.setTag(bse);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.3,14,10
2175_25,25,25,text.setTextColor(mTextColor);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.35,13,9
2175_26,26,28,"if (i == 0) {
item.findViewById(com.android.internal.R.id.left_icon).setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,0,0,1,0.57,10,7
2175_27,27,27,item.findViewById(com.android.internal.R.id.left_icon).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.57,11,7
2175_29,29,29,mContainer.addView(item);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.43,9,6
2175_30,30,30,text.setOnClickListener(mOnClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.33,8,5
2175_33,33,33,int viewI = numEntries + numPreEntries;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.53,5,4
2175_34,34,34,numViews = mContainer.getChildCount();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.51,4,3
2175_35,35,38,"while (numViews > viewI) {
mContainer.removeViewAt(numViews - 1);
numViews--;
}",0,1,0,0,0,0,0,0,0,2,1,4,0,1,0,0,6,4,0,0,0,0.54,0,0
2175_36,36,36,mContainer.removeViewAt(numViews - 1);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.5,2,1
2175_37,37,37,numViews--;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.59,1,0
2175_39,39,48,"for (int i = 0; i < numViews; i++) {
final View child = mContainer.getChildAt(i);
child.findViewById(com.android.internal.R.id.title).setEnabled(i < numViews - 1);
if (mMaxVisible > 0) {
child.setVisibility(i < numViews - mMaxVisible ? View.GONE : View.VISIBLE);
final View leftIcon = child.findViewById(com.android.internal.R.id.left_icon);
leftIcon.setVisibility(i > numViews - mMaxVisible && i != 0 ? View.VISIBLE
: View.GONE);
}
}",0,0,1,0,0,0,0,0,0,6,2,10,0,1,0,0,6,4,0,0,1,0.62,0,0
2175_40,40,40,final View child = mContainer.getChildAt(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.46,1,0
2175_41,41,41,child.findViewById(com.android.internal.R.id.title).setEnabled(i < numViews - 1);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,0,0,0,0.48,2,1
2175_42,42,47,"if (mMaxVisible > 0) {
child.setVisibility(i < numViews - mMaxVisible ? View.GONE : View.VISIBLE);
final View leftIcon = child.findViewById(com.android.internal.R.id.left_icon);
leftIcon.setVisibility(i > numViews - mMaxVisible && i != 0 ? View.VISIBLE
: View.GONE);
}",1,0,0,0,0,0,0,0,0,3,1,6,1,1,0,0,6,4,0,0,1,0.64,3,2
2175_43,43,43,child.setVisibility(i < numViews - mMaxVisible ? View.GONE : View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,1,0.69,4,3
2175_44,44,44,final View leftIcon = child.findViewById(com.android.internal.R.id.left_icon);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.5,5,4
2175_45,45,46,"leftIcon.setVisibility(i > numViews - mMaxVisible && i != 0 ? View.VISIBLE
: View.GONE);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,6,4,0,0,1,0.68,6,5
2174_1,1,1,private BackStackEntry getPreEntry(int index) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,1,0.52,0,0
2174_2,2,6,"if (mParentEntry != null) {
return index == 0 ? mParentEntry : mTopEntry;
} else {
return mTopEntry;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,9,5,1,0,5,0.85,0,0
2174_3,3,3,return index == 0 ? mParentEntry : mTopEntry;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,5,1,0,4,0.8,1,0
2174_4,4,4,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,1,0.67,2,1
2174_5,5,5,return mTopEntry;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,5,1,0,3,0.83,3,2
2173_1,1,2,"@Override
protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,1,0,2,0.62,20,13
2173_3,3,3,final int count = getChildCount();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,1,0,0,0.34,19,12
2173_5,5,5,int maxHeight = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,3,1,0,1,0.64,17,11
2173_6,6,6,int maxWidth = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.63,16,10
2173_7,7,7,int measuredChildState = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,1,0,0,0.46,15,9
2173_9,9,18,"for (int i = 0; i < count; i++) {
final View child = getChildAt(i);
if (child.getVisibility() != GONE) {
measureChild(child, widthMeasureSpec, heightMeasureSpec);
maxWidth = Math.max(maxWidth, child.getMeasuredWidth());
maxHeight = Math.max(maxHeight, child.getMeasuredHeight());
measuredChildState = combineMeasuredStates(measuredChildState,
child.getMeasuredState());
}
}",0,0,1,0,0,0,0,0,0,6,2,10,0,0,1,1,4,3,1,0,2,0.65,4,2
2173_10,10,10,final View child = getChildAt(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.36,12,7
2173_11,11,17,"if (child.getVisibility() != GONE) {
measureChild(child, widthMeasureSpec, heightMeasureSpec);
maxWidth = Math.max(maxWidth, child.getMeasuredWidth());
maxHeight = Math.max(maxHeight, child.getMeasuredHeight());
measuredChildState = combineMeasuredStates(measuredChildState,
child.getMeasuredState());
}",1,0,0,0,0,0,0,0,0,4,1,7,0,1,0,0,4,3,1,0,2,0.67,5,2
2173_12,12,12,"measureChild(child, widthMeasureSpec, heightMeasureSpec);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,2,0.68,10,5
2173_13,13,13,"maxWidth = Math.max(maxWidth, child.getMeasuredWidth());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,1,0,1,0.69,9,4
2173_14,14,14,"maxHeight = Math.max(maxHeight, child.getMeasuredHeight());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,1,0,1,0.69,8,3
2173_15,15,16,"measuredChildState = combineMeasuredStates(measuredChildState,
child.getMeasuredState());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,3,1,0,0,0.5,6,2
2173_20,20,20,maxWidth += mPaddingLeft + mPaddingRight;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,1,0,1,0.68,2,1
2173_21,21,21,maxHeight += mPaddingTop + mPaddingBottom;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,1,0,1,0.69,1,0
2173_23,23,23,"maxHeight = Math.max(maxHeight, getSuggestedMinimumHeight());",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,4,3,1,0,2,0.73,0,0
2173_24,24,24,"maxWidth = Math.max(maxWidth, getSuggestedMinimumWidth());",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,3,1,0,2,0.73,1,0
2173_26,26,28,"setMeasuredDimension(resolveSizeAndState(maxWidth, widthMeasureSpec, measuredChildState),
resolveSizeAndState(maxHeight, heightMeasureSpec,
measuredChildState<<MEASURED_HEIGHT_STATE_SHIFT));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,4,3,1,0,2,0.65,3,2
2171_1,1,2,"@Override
protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,1,0,0,0.47,6,4
2171_3,3,3,final int count = getChildCount();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,1,0,1,0.49,5,3
2171_5,5,5,int maxHeight = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,3,1,0,0,0.5,3,2
2171_6,6,6,int maxWidth = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.43,2,1
2171_7,7,7,int measuredChildState = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,1,0,1,0.6,1,0
2171_9,9,18,"for (int i = 0; i < count; i++) {
final View child = getChildAt(i);
if (child.getVisibility() != GONE) {
measureChild(child, widthMeasureSpec, heightMeasureSpec);
maxWidth = Math.max(maxWidth, child.getMeasuredWidth());
maxHeight = Math.max(maxHeight, child.getMeasuredHeight());
measuredChildState = combineMeasuredStates(measuredChildState,
child.getMeasuredState());
}
}",0,0,1,0,0,0,0,0,0,6,2,10,0,0,1,1,4,3,1,0,1,0.67,0,0
2171_10,10,10,final View child = getChildAt(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.64,1,0
2171_11,11,17,"if (child.getVisibility() != GONE) {
measureChild(child, widthMeasureSpec, heightMeasureSpec);
maxWidth = Math.max(maxWidth, child.getMeasuredWidth());
maxHeight = Math.max(maxHeight, child.getMeasuredHeight());
measuredChildState = combineMeasuredStates(measuredChildState,
child.getMeasuredState());
}",1,0,0,0,0,0,0,0,0,4,1,7,0,1,0,0,4,3,1,0,1,0.68,2,1
2171_12,12,12,"measureChild(child, widthMeasureSpec, heightMeasureSpec);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.68,3,2
2171_13,13,13,"maxWidth = Math.max(maxWidth, child.getMeasuredWidth());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,1,0,1,0.6,4,3
2171_14,14,14,"maxHeight = Math.max(maxHeight, child.getMeasuredHeight());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,1,0,1,0.64,5,4
2171_15,15,16,"measuredChildState = combineMeasuredStates(measuredChildState,
child.getMeasuredState());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,3,1,0,1,0.64,6,5
2171_20,20,20,maxWidth += mPaddingLeft + mPaddingRight;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,1,0,0,0.61,11,7
2171_21,21,21,maxHeight += mPaddingTop + mPaddingBottom;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,1,0,1,0.68,12,7
2171_23,23,23,"maxHeight = Math.max(maxHeight, getSuggestedMinimumHeight());",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,4,3,1,0,0,0.55,14,9
2171_24,24,24,"maxWidth = Math.max(maxWidth, getSuggestedMinimumWidth());",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,3,1,0,0,0.5,15,9
2171_26,26,28,"setMeasuredDimension(resolveSizeAndState(maxWidth, widthMeasureSpec, measuredChildState),
resolveSizeAndState(maxHeight, heightMeasureSpec,
measuredChildState<<MEASURED_HEIGHT_STATE_SHIFT));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,4,3,1,0,1,0.62,17,11
2128_1,1,1,private void setQueryTtlCachePaginationLimit(RDFUnitConfiguration configuration),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,3,0.63,2,1
2128_2,2,2,throws ParameterException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,9,5,2,0,0,0.33,1,0
2128_4,4,4,long ttl = 60L * 1000L * queryCacheTTL;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,5,2,0,2,0.73,0,0
2128_5,5,5,configuration.setEndpointQueryCacheTTL(ttl);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,9,5,2,0,3,0.71,1,0
2128_7,7,7,configuration.setEndpointQueryDelayMS(queryDelay);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,5,2,0,2,0.64,3,2
2128_9,9,9,configuration.setEndpointQueryPagination(queryPagination);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,5,2,0,2,0.61,5,3
2128_11,11,11,configuration.setEndpointQueryLimit(queryLimit);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,5,2,0,2,0.62,7,4
2125_1,1,1,  private void setTestAutogetCacheManual(RDFUnitConfiguration configuration),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.48,1,1
2125_2,2,2,throws ParameterException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,4,0,0,0,0.31,0,0
2125_3,3,3,configuration.setTestCacheEnabled(!noTestCache);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,1,0.5,0,0
2125_5,5,5,configuration.setManualTestsEnabled(!noManualTests);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,1,0.54,2,1
2125_7,7,7,configuration.setAutoTestsEnabled(!noAutoTests);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,1,0.55,4,2
2125_9,9,11,"if (!configuration.isManualTestsEnabled() && !configuration.isAutoTestsEnabled()) {
throw new ParameterException(""both -M & -A does not make sense"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,4,0,0,1,0.48,6,3
2125_10,10,10,"throw new ParameterException(""both -M & -A does not make sense"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,4,0,0,0,0.28,7,3
2125_13,13,15,"if (!configuration.isAutoTestsEnabled() && configuration.isTestCacheEnabled()) {
throw new ParameterException(""both -A & -C does not make sense"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,4,4,0,0,1,0.49,10,5
2125_14,14,14,"throw new ParameterException(""both -A & -C does not make sense"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,4,0,0,0,0.32,11,5
2121_1,1,1,throws ParameterException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,1,0,0,0.31,0,0
2121_2,2,4,"if (imports) {
configuration.setAugmentWithOwlImports(true);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,3,1,0,2,0.51,0,0
2121_3,3,3,configuration.setAugmentWithOwlImports(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,2,0.46,1,0
2121_5,5,15,"if (!schemaUriPrefixes.isEmpty()) {
try {
configuration.setSchemataFromPrefixes(schemaUriPrefixes);
} catch (UndefinedSchemaException e) {
throw new ParameterException(e.getMessage(), e);
}
}
else {
log.info(""Searching for used schemata in dataset"");
configuration.setAutoSchemataFromQEF(configuration.getTestSource().getExecutionFactory());
}",1,0,0,0,0,0,0,0,0,7,2,11,0,0,0,0,5,3,1,0,0,0.38,3,2
2121_6,6,10,"try {
configuration.setSchemataFromPrefixes(schemaUriPrefixes);
} catch (UndefinedSchemaException e) {
throw new ParameterException(e.getMessage(), e);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,5,3,1,0,0,0.38,4,2
2121_7,7,7,configuration.setSchemataFromPrefixes(schemaUriPrefixes);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.35,5,3
2121_8,8,8,} catch (UndefinedSchemaException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.34,6,4
2121_9,9,9,"throw new ParameterException(e.getMessage(), e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,1,0,0,0.34,7,5
2121_12,12,12,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.29,10,7
2121_13,13,13,"log.info(""Searching for used schemata in dataset"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.26,11,7
2121_14,14,14,configuration.setAutoSchemataFromQEF(configuration.getTestSource().getExecutionFactory());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.37,12,8
2120_1,1,1,  private void setDumpOrSparqlEndpoint(RDFUnitConfiguration configuration) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.54,0,0
2120_2,2,5,"if (datasetOptions != null && datasetOptions.customDereferenceURI != null
&& !datasetOptions.customDereferenceURI.isEmpty()) {
configuration.setCustomDereferenceURI(datasetOptions.customDereferenceURI);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,7,7,0,0,2,0.48,0,0
2120_3,3,3,&& !datasetOptions.customDereferenceURI.isEmpty()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,2,0.47,1,0
2120_4,4,4,configuration.setCustomDereferenceURI(datasetOptions.customDereferenceURI);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,2,0.48,2,1
2120_7,7,20,"if (datasetOptions != null &&
datasetOptions.endpointOptions != null &&
datasetOptions.endpointOptions.endpointURI != null &&
!datasetOptions.endpointOptions.endpointURI.isEmpty()) {
if (datasetOptions.endpointOptions.endpointBasicAuthOptions != null) {
configuration.setEndpointConfiguration(datasetOptions.endpointOptions.endpointURI,
datasetOptions.endpointOptions.endpointGraphs,
datasetOptions.endpointOptions.endpointBasicAuthOptions.username,
datasetOptions.endpointOptions.endpointBasicAuthOptions.password);
} else {
configuration.setEndpointConfiguration(datasetOptions.endpointOptions.endpointURI,
datasetOptions.endpointOptions.endpointGraphs, """", """");
}
}",1,0,0,0,0,0,0,0,0,5,2,14,0,0,1,0,7,7,0,0,2,0.45,5,3
2120_8,8,10,"datasetOptions.endpointOptions != null &&
datasetOptions.endpointOptions.endpointURI != null &&
!datasetOptions.endpointOptions.endpointURI.isEmpty()) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,7,7,0,0,2,0.45,6,3
2120_11,11,19,"if (datasetOptions.endpointOptions.endpointBasicAuthOptions != null) {
configuration.setEndpointConfiguration(datasetOptions.endpointOptions.endpointURI,
datasetOptions.endpointOptions.endpointGraphs,
datasetOptions.endpointOptions.endpointBasicAuthOptions.username,
datasetOptions.endpointOptions.endpointBasicAuthOptions.password);
} else {
configuration.setEndpointConfiguration(datasetOptions.endpointOptions.endpointURI,
datasetOptions.endpointOptions.endpointGraphs, """", """");
}",1,0,0,0,0,0,0,0,0,3,1,9,0,0,0,0,7,7,0,0,2,0.44,9,5
2120_12,12,15,"configuration.setEndpointConfiguration(datasetOptions.endpointOptions.endpointURI,
datasetOptions.endpointOptions.endpointGraphs,
datasetOptions.endpointOptions.endpointBasicAuthOptions.username,
datasetOptions.endpointOptions.endpointBasicAuthOptions.password);",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,7,7,0,0,2,0.44,10,5
2120_16,16,16,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.15,14,7
2120_17,17,18,"configuration.setEndpointConfiguration(datasetOptions.endpointOptions.endpointURI,
datasetOptions.endpointOptions.endpointGraphs, """", """");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,7,0,0,2,0.42,15,7
2102_1,1,2,"@Override
public int write(String str) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,3,2,0,0,0.38,15,14
2102_3,3,3,int n = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.37,14,13
2102_4,4,4,int nll = newline.length();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,8,3,2,0,0,0.42,13,12
2102_5,5,5,int sl = str.length();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,8,3,2,0,0,0.45,12,11
2102_6,6,26,"for (int i=0; i<sl; i++) {
char c = str.charAt(i);
if ( c=='\r' ) continue;
if ( c=='\n' ) {
atStartOfLine = true;
charPosition = -nll;
out.write(newline);
n += nll;
charIndex += nll;
charPosition += n;
continue;
}
if ( atStartOfLine ) {
n+=indent();
atStartOfLine = false;
}
n++;
out.write(c);
charPosition++;
charIndex++;
}",0,0,1,0,0,0,0,0,0,17,2,21,0,1,0,0,8,3,2,0,3,0.63,0,0
2102_7,7,7,char c = str.charAt(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,3,2,0,0,0.53,10,9
2102_8,8,8,if ( c=='\r' ) continue;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,3,2,0,0,0.38,9,8
2102_9,9,17,"if ( c=='\n' ) {
atStartOfLine = true;
charPosition = -nll;
out.write(newline);
n += nll;
charIndex += nll;
charPosition += n;
continue;
}",1,0,0,0,0,0,0,0,0,7,1,9,0,1,0,0,8,3,2,0,2,0.55,0,0
2102_10,10,10,atStartOfLine = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,2,0.59,7,6
2102_11,11,11,charPosition = -nll;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.47,6,5
2102_12,12,12,out.write(newline);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.22,5,4
2102_13,13,13,n += nll;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,3,2,0,0,0.36,4,3
2102_14,14,14,charIndex += nll;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,3,2,0,0,0.46,3,2
2102_15,15,15,charPosition += n;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.46,2,1
2102_16,16,16,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.24,1,0
2102_18,18,21,"if ( atStartOfLine ) {
n+=indent();
atStartOfLine = false;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,8,3,2,0,3,0.68,0,0
2102_19,19,19,n+=indent();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,1,0.55,1,0
2102_20,20,20,atStartOfLine = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,2,0.58,2,1
2102_22,22,22,n++;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,3,2,0,0,0.36,4,3
2102_23,23,23,out.write(c);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.35,5,3
2102_24,24,24,charPosition++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.47,6,4
2102_25,25,25,charIndex++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.46,7,5
2102_27,27,27,return n;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,8,3,2,0,0,0.29,9,7
1856_1,1,1,public void moveTrackDown(HiCTrack track) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.66,0,0
1856_2,2,2,"hic.moveTrack(track, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.71,0,0
1856_3,3,3,superAdapter.revalidate();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.41,1,0
1856_4,4,4,superAdapter.repaint();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.3,2,1
1855_1,1,1,public void moveTrackUp(HiCTrack track) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.66,0,0
1855_2,2,2,"hic.moveTrack(track, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.71,0,0
1855_3,3,3,superAdapter.revalidate();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.41,1,0
1855_4,4,4,superAdapter.repaint();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.3,2,1
1808_1,1,2,"private ProcStatsPackageEntry createOsEntry(ProcessDataCollection bgTotals,
ProcessDataCollection runTotals, TotalMemoryUseCollection totalMem, long baseCacheRam) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,1,2,0,2,0.52,0,0
1808_3,3,3,"ProcStatsPackageEntry osPkg = new ProcStatsPackageEntry(""os"", memTotalTime);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,1,2,0,2,0.59,0,0
1808_4,4,4,ProcStatsEntry osEntry;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,1,2,0,2,0.7,1,0
1808_5,5,11,"if (totalMem.sysMemNativeWeight > 0) {
osEntry = new ProcStatsEntry(Utils.OS_PKG, 0,
mContext.getString(R.string.process_stats_os_native), memTotalTime,
(long) (totalMem.sysMemNativeWeight / memTotalTime), memTotalTime);
osEntry.evaluateTargetPackage(mPm, mStats, bgTotals, runTotals, sEntryCompare, mUseUss);
osPkg.addEntry(osEntry);
}",1,0,0,0,0,0,0,0,0,3,1,7,1,1,0,0,5,1,2,0,3,0.65,2,1
1808_6,6,8,"osEntry = new ProcStatsEntry(Utils.OS_PKG, 0,
mContext.getString(R.string.process_stats_os_native), memTotalTime,
(long) (totalMem.sysMemNativeWeight / memTotalTime), memTotalTime);",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,5,1,2,0,2,0.57,3,2
1808_9,9,9,"osEntry.evaluateTargetPackage(mPm, mStats, bgTotals, runTotals, sEntryCompare, mUseUss);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,1,2,0,2,0.56,6,4
1808_10,10,10,osPkg.addEntry(osEntry);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,1,2,0,3,0.8,7,4
1808_12,12,18,"if (totalMem.sysMemKernelWeight > 0) {
osEntry = new ProcStatsEntry(Utils.OS_PKG, 0,
mContext.getString(R.string.process_stats_os_kernel), memTotalTime,
(long) (totalMem.sysMemKernelWeight / memTotalTime), memTotalTime);
osEntry.evaluateTargetPackage(mPm, mStats, bgTotals, runTotals, sEntryCompare, mUseUss);
osPkg.addEntry(osEntry);
}",1,0,0,0,0,0,0,0,0,3,1,7,1,1,0,0,5,1,2,0,3,0.66,9,6
1808_13,13,15,"osEntry = new ProcStatsEntry(Utils.OS_PKG, 0,
mContext.getString(R.string.process_stats_os_kernel), memTotalTime,
(long) (totalMem.sysMemKernelWeight / memTotalTime), memTotalTime);",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,5,1,2,0,2,0.58,10,6
1808_16,16,16,"osEntry.evaluateTargetPackage(mPm, mStats, bgTotals, runTotals, sEntryCompare, mUseUss);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,1,2,0,2,0.56,13,8
1808_17,17,17,osPkg.addEntry(osEntry);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,1,2,0,3,0.8,14,8
1808_19,19,25,"if (baseCacheRam > 0) {
osEntry = new ProcStatsEntry(Utils.OS_PKG, 0,
mContext.getString(R.string.process_stats_os_cache), memTotalTime,
baseCacheRam / 1024, memTotalTime);
osEntry.evaluateTargetPackage(mPm, mStats, bgTotals, runTotals, sEntryCompare, mUseUss);
osPkg.addEntry(osEntry);
}",1,0,0,0,0,0,0,0,0,3,1,7,1,1,0,0,5,1,2,0,3,0.66,16,10
1808_20,20,22,"osEntry = new ProcStatsEntry(Utils.OS_PKG, 0,
mContext.getString(R.string.process_stats_os_cache), memTotalTime,
baseCacheRam / 1024, memTotalTime);",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,5,1,2,0,2,0.57,17,10
1808_23,23,23,"osEntry.evaluateTargetPackage(mPm, mStats, bgTotals, runTotals, sEntryCompare, mUseUss);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,1,2,0,2,0.56,20,12
1808_24,24,24,osPkg.addEntry(osEntry);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,1,2,0,3,0.8,21,12
1808_26,26,26,return osPkg;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,1,2,0,1,0.53,23,14
1807_1,1,1,private void distributeZRam(double zramWeight) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,19,4,1,3,0.65,0,0
1807_3,3,3,long zramMem = (long) (zramWeight / memTotalTime);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,28,19,4,1,0,0.52,1,0
1807_4,4,4,long totalTime = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,28,19,4,1,0,0.43,2,0
1807_5,5,11,"for (int i = pkgEntries.size() - 1; i >= 0; i--) {
ProcStatsPackageEntry entry = pkgEntries.get(i);
for (int j = entry.mEntries.size() - 1; j >= 0; j--) {
ProcStatsEntry proc = entry.mEntries.get(j);
totalTime += proc.mRunDuration;
}
}",0,0,1,0,0,0,0,0,0,4,2,7,1,1,0,0,28,19,4,1,1,0.44,3,1
1807_6,6,6,ProcStatsPackageEntry entry = pkgEntries.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,28,19,4,1,0,0.36,4,2
1807_7,7,10,"for (int j = entry.mEntries.size() - 1; j >= 0; j--) {
ProcStatsEntry proc = entry.mEntries.get(j);
totalTime += proc.mRunDuration;
}",0,0,1,0,0,0,0,0,0,2,1,4,1,1,0,0,28,19,4,1,1,0.44,5,3
1807_8,8,8,ProcStatsEntry proc = entry.mEntries.get(j);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,28,19,4,1,0,0.34,6,4
1807_9,9,9,totalTime += proc.mRunDuration;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,28,19,4,1,1,0.51,7,5
1807_12,12,33,"for (int i = pkgEntries.size() - 1; i >= 0 && totalTime > 0; i--) {
ProcStatsPackageEntry entry = pkgEntries.get(i);
long pkgRunTime = 0;
long maxRunTime = 0;
for (int j = entry.mEntries.size() - 1; j >= 0; j--) {
ProcStatsEntry proc = entry.mEntries.get(j);
pkgRunTime += proc.mRunDuration;
if (proc.mRunDuration > maxRunTime) {
maxRunTime = proc.mRunDuration;
}
}
long pkgZRam = (zramMem*pkgRunTime)/totalTime;
if (pkgZRam > 0) {
zramMem -= pkgZRam;
totalTime -= pkgRunTime;
ProcStatsEntry procEntry = new ProcStatsEntry(entry.mPackage, 0,
mContext.getString(R.string.process_stats_os_zram), maxRunTime,
pkgZRam, memTotalTime);
procEntry.evaluateTargetPackage(mPm, mStats, null, null, sEntryCompare, mUseUss);
entry.addEntry(procEntry);
}
}",0,0,1,0,0,0,0,0,0,15,3,22,1,1,0,0,28,19,4,1,5,0.6,10,7
1807_13,13,13,ProcStatsPackageEntry entry = pkgEntries.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,28,19,4,1,0,0.36,11,7
1807_14,14,14,long pkgRunTime = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,28,19,4,1,1,0.52,12,8
1807_15,15,15,long maxRunTime = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,28,19,4,1,1,0.51,13,9
1807_16,16,22,"for (int j = entry.mEntries.size() - 1; j >= 0; j--) {
ProcStatsEntry proc = entry.mEntries.get(j);
pkgRunTime += proc.mRunDuration;
if (proc.mRunDuration > maxRunTime) {
maxRunTime = proc.mRunDuration;
}
}",0,0,1,0,0,0,0,0,0,4,2,7,0,1,0,0,28,19,4,1,1,0.5,14,10
1807_17,17,17,ProcStatsEntry proc = entry.mEntries.get(j);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,28,19,4,1,0,0.34,15,11
1807_18,18,18,pkgRunTime += proc.mRunDuration;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,28,19,4,1,1,0.55,16,12
1807_19,19,21,"if (proc.mRunDuration > maxRunTime) {
maxRunTime = proc.mRunDuration;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,28,19,4,1,1,0.55,17,13
1807_20,20,20,maxRunTime = proc.mRunDuration;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,19,4,1,1,0.55,18,14
1807_23,23,23,long pkgZRam = (zramMem*pkgRunTime)/totalTime;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,28,19,4,1,3,0.61,21,16
1807_24,24,32,"if (pkgZRam > 0) {
zramMem -= pkgZRam;
totalTime -= pkgRunTime;
ProcStatsEntry procEntry = new ProcStatsEntry(entry.mPackage, 0,
mContext.getString(R.string.process_stats_os_zram), maxRunTime,
pkgZRam, memTotalTime);
procEntry.evaluateTargetPackage(mPm, mStats, null, null, sEntryCompare, mUseUss);
entry.addEntry(procEntry);
}",1,0,0,0,0,0,0,0,0,5,1,9,0,1,0,0,28,19,4,1,5,0.59,22,16
1807_25,25,25,zramMem -= pkgZRam;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,19,4,1,2,0.63,23,17
1807_26,26,26,totalTime -= pkgRunTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,28,19,4,1,1,0.51,24,18
1807_27,27,29,"ProcStatsEntry procEntry = new ProcStatsEntry(entry.mPackage, 0,
mContext.getString(R.string.process_stats_os_zram), maxRunTime,
pkgZRam, memTotalTime);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,28,19,4,1,4,0.56,25,19
1807_30,30,30,"procEntry.evaluateTargetPackage(mPm, mStats, null, null, sEntryCompare, mUseUss);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,28,19,4,1,1,0.48,28,21
1807_31,31,31,entry.addEntry(procEntry);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,28,19,4,1,0,0.21,29,21
1734_1,1,2,"@Override
public boolean include(Entry<? extends EncodeTableModel, ?> value) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,0,0,0,0.37,6,3
1734_4,4,29,"for (Pair<String, Matcher> entry : matchers) {
String column = entry.getFirst();
Matcher matcher = entry.getSecond();


boolean found = false;
int nColumns = table.getColumnCount();
for (int index = 1; index < nColumns; index++) {

matcher.reset(table.getColumnName(index).toLowerCase());
if (matcher.find()) {
found = true;
break;
}

boolean wildcard = column.equals(""*"");
if (wildcard || column.equalsIgnoreCase(table.getColumnName(index))) {
matcher.reset(value.getStringValue(index));
if (matcher.find()) {
found = true;
break;
}
}
}
if (!found) return false;
}",0,0,0,1,0,0,0,0,0,16,4,26,0,0,1,0,8,5,0,0,2,0.54,0,0
1734_5,5,5,String column = entry.getFirst();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,0,0,2,0.58,3,1
1734_6,6,6,Matcher matcher = entry.getSecond();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,8,5,0,0,0,0.36,2,0
1734_9,9,9,boolean found = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,8,5,0,0,0,0.34,0,0
1734_10,10,10,int nColumns = table.getColumnCount();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,0,0,1,0.46,1,0
1734_11,11,27,"for (int index = 1; index < nColumns; index++) {

matcher.reset(table.getColumnName(index).toLowerCase());
if (matcher.find()) {
found = true;
break;
}

boolean wildcard = column.equals(""*"");
if (wildcard || column.equalsIgnoreCase(table.getColumnName(index))) {
matcher.reset(value.getStringValue(index));
if (matcher.find()) {
found = true;
break;
}
}
}",0,0,1,0,0,0,0,0,0,10,3,17,0,1,0,0,8,5,0,0,1,0.5,2,1
1734_13,13,13,matcher.reset(table.getColumnName(index).toLowerCase());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,8,5,0,0,1,0.47,4,3
1734_14,14,17,"if (matcher.find()) {
found = true;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,8,5,0,0,0,0.38,5,3
1734_15,15,15,found = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.32,6,4
1734_16,16,16,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,8,5,0,0,0,0.17,7,5
1734_19,19,19,"boolean wildcard = column.equals(""*"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,5,0,0,1,0.51,10,7
1734_20,20,26,"if (wildcard || column.equalsIgnoreCase(table.getColumnName(index))) {
matcher.reset(value.getStringValue(index));
if (matcher.find()) {
found = true;
break;
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,1,0,0,8,5,0,0,1,0.49,11,7
1734_21,21,21,matcher.reset(value.getStringValue(index));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,0,0,0,0.32,12,8
1734_22,22,25,"if (matcher.find()) {
found = true;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,8,5,0,0,0,0.38,13,9
1734_23,23,23,found = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.32,14,10
1734_24,24,24,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,8,5,0,0,0,0.17,15,11
1734_28,28,28,if (!found) return false;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,0,0,0,0.34,19,13
1734_30,30,30,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.25,21,14
1733_1,1,1,    private void updateFilter() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.41,3,1
1733_4,4,4,"RowFilter<EncodeTableModel, Object> rf = null;",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,0,0,0,0.26,0,0
1733_5,5,9,"try {
rf = new RegexFilter(filterTextField.getText());
} catch (java.util.regex.PatternSyntaxException | ClassCastException e) {
return;
}",0,0,0,0,1,0,0,0,0,3,1,5,0,1,0,0,4,2,0,0,0,0.4,0,0
1733_6,6,6,rf = new RegexFilter(filterTextField.getText());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.32,1,0
1733_7,7,7,} catch (java.util.regex.PatternSyntaxException | ClassCastException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.43,2,1
1733_8,8,8,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.17,3,2
1733_10,10,10,model.getSorter().setRowFilter(rf);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,0,0.32,5,4
1733_12,12,16,"try {
rowCountLabel.setText(numberFormatter.valueToString(table.getRowCount()) + "" rows"");
} catch (ParseException e) {
e.printStackTrace();
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,1,0,4,2,0,0,1,0.42,7,5
1733_13,13,13,"rowCountLabel.setText(numberFormatter.valueToString(table.getRowCount()) + "" rows"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.33,8,5
1733_14,14,14,} catch (ParseException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.44,9,6
1733_15,15,15,e.printStackTrace();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.29,10,7
1732_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,4,0,0,0,0.4,27,19
1732_2,2,2,boolean urlVersion = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.3,26,18
1732_3,3,3,InputStream is = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.21,25,17
1732_5,5,49,"try {
try {
is = ParsingUtils.openInputStream(""https://s3.amazonaws.com/igv.org.app/encode/"" + getEncodeGenomeId(genomeId) + "".txt.gz"");
urlVersion = true;
}
catch (Exception error) {
return null;
}
BufferedReader reader = new BufferedReader(new InputStreamReader(is), HiCGlobals.bufferSize);

String[] headers = Globals.tabPattern.split(reader.readLine());

List<EncodeFileRecord> records = new ArrayList<>(20000);
String nextLine;
int pathLocation = 0;
if (urlVersion) {
pathLocation = Arrays.asList(headers).indexOf(""HREF"");
}
while ((nextLine = reader.readLine()) != null) {
if (!nextLine.startsWith(""#"")) {

String[] tokens = Globals.tabPattern.split(nextLine, -1);
String path = tokens[pathLocation];

if (path == null || path.endsWith(""bam"")) continue;
if (urlVersion) path = ""https://www.encodeproject.org"" + path;

Map<String, String> attributes = new HashMap<>();
for (int i = 0; i < headers.length; i++) {
String value = i < tokens.length ? tokens[i] : """";
if (value.length() > 0) {
attributes.put(headers[i], value);
}
}

final EncodeFileRecord record = new EncodeFileRecord(path, attributes);
if (record.hasMetaData()) records.add(record);

}

}
return new Pair<>(headers, records);
} finally {
if (is != null) is.close();
}",0,0,0,0,1,0,0,0,0,28,5,45,0,0,1,0,4,4,0,0,0,0.37,0,0
1732_6,6,12,"try {
is = ParsingUtils.openInputStream(""https://s3.amazonaws.com/igv.org.app/encode/"" + getEncodeGenomeId(genomeId) + "".txt.gz"");
urlVersion = true;
}
catch (Exception error) {
return null;
}",0,0,0,0,1,0,0,0,0,4,1,7,0,1,0,0,4,4,0,0,0,0.37,16,11
1732_7,7,7,"is = ParsingUtils.openInputStream(""https://s3.amazonaws.com/igv.org.app/encode/"" + getEncodeGenomeId(genomeId) + "".txt.gz"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.37,21,14
1732_8,8,8,urlVersion = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.3,20,13
1732_10,10,10,catch (Exception error) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.36,18,12
1732_11,11,11,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.19,17,11
1732_13,13,13,"BufferedReader reader = new BufferedReader(new InputStreamReader(is), HiCGlobals.bufferSize);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,4,4,0,0,0,0.35,15,10
1732_15,15,15,String[] headers = Globals.tabPattern.split(reader.readLine());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.33,13,9
1732_17,17,17,List<EncodeFileRecord> records = new ArrayList<>(20000);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.29,11,8
1732_18,18,18,String nextLine;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.27,10,7
1732_19,19,19,int pathLocation = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.24,9,6
1732_20,20,22,"if (urlVersion) {
pathLocation = Arrays.asList(headers).indexOf(""HREF"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,4,0,0,0,0.26,6,4
1732_21,21,21,"pathLocation = Arrays.asList(headers).indexOf(""HREF"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.26,7,4
1732_23,23,45,"while ((nextLine = reader.readLine()) != null) {
if (!nextLine.startsWith(""#"")) {

String[] tokens = Globals.tabPattern.split(nextLine, -1);
String path = tokens[pathLocation];

if (path == null || path.endsWith(""bam"")) continue;
if (urlVersion) path = ""https://www.encodeproject.org"" + path;

Map<String, String> attributes = new HashMap<>();
for (int i = 0; i < headers.length; i++) {
String value = i < tokens.length ? tokens[i] : """";
if (value.length() > 0) {
attributes.put(headers[i], value);
}
}

final EncodeFileRecord record = new EncodeFileRecord(path, attributes);
if (record.hasMetaData()) records.add(record);

}

}",0,1,0,0,0,0,0,0,0,12,4,23,0,1,0,0,4,4,0,0,0,0.37,0,0
1732_24,24,43,"if (!nextLine.startsWith(""#"")) {

String[] tokens = Globals.tabPattern.split(nextLine, -1);
String path = tokens[pathLocation];

if (path == null || path.endsWith(""bam"")) continue;
if (urlVersion) path = ""https://www.encodeproject.org"" + path;

Map<String, String> attributes = new HashMap<>();
for (int i = 0; i < headers.length; i++) {
String value = i < tokens.length ? tokens[i] : """";
if (value.length() > 0) {
attributes.put(headers[i], value);
}
}

final EncodeFileRecord record = new EncodeFileRecord(path, attributes);
if (record.hasMetaData()) records.add(record);

}",1,0,0,0,0,0,0,0,0,11,3,20,0,0,0,1,4,4,0,0,0,0.36,0,0
1732_26,26,26,"String[] tokens = Globals.tabPattern.split(nextLine, -1);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.34,2,1
1732_27,27,27,String path = tokens[pathLocation];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,4,4,0,0,0,0.28,1,0
1732_29,29,29,"if (path == null || path.endsWith(""bam"")) continue;",1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.26,0,0
1732_30,30,30,"if (urlVersion) path = ""https://www.encodeproject.org"" + path;",1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,4,0,0,0,0.37,1,0
1732_32,32,32,"Map<String, String> attributes = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.29,3,2
1732_33,33,38,"for (int i = 0; i < headers.length; i++) {
String value = i < tokens.length ? tokens[i] : """";
if (value.length() > 0) {
attributes.put(headers[i], value);
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,1,0,1,4,4,0,0,0,0.33,4,2
1732_34,34,34,"String value = i < tokens.length ? tokens[i] : """";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.35,5,3
1732_35,35,37,"if (value.length() > 0) {
attributes.put(headers[i], value);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,4,0,0,0,0.33,6,4
1732_36,36,36,"attributes.put(headers[i], value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.32,7,5
1732_40,40,40,"final EncodeFileRecord record = new EncodeFileRecord(path, attributes);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.31,11,7
1732_41,41,41,if (record.hasMetaData()) records.add(record);,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,4,0,0,0,0.24,12,7
1732_46,46,46,"return new Pair<>(headers, records);",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.28,17,9
1732_47,47,47,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.22,18,9
1732_48,48,48,if (is != null) is.close();,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.31,19,10
1658_1,1,2,"    @Override
public void onSelectedChanged(RecyclerView.ViewHolder viewHolder, int actionState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,1,0.48,0,0
1658_3,3,8,"if (actionState != ItemTouchHelper.ACTION_STATE_IDLE) {
if (viewHolder instanceof ItemTouchHelperViewHolder) {
ItemTouchHelperViewHolder itemViewHolder = (ItemTouchHelperViewHolder) viewHolder;
itemViewHolder.onItemSelected();
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,0,1,4,3,0,0,1,0.49,0,0
1658_4,4,7,"if (viewHolder instanceof ItemTouchHelperViewHolder) {
ItemTouchHelperViewHolder itemViewHolder = (ItemTouchHelperViewHolder) viewHolder;
itemViewHolder.onItemSelected();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,4,3,0,0,1,0.47,1,0
1658_5,5,5,ItemTouchHelperViewHolder itemViewHolder = (ItemTouchHelperViewHolder) viewHolder;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.45,2,1
1658_6,6,6,itemViewHolder.onItemSelected();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.56,3,2
1658_10,10,10,"super.onSelectedChanged(viewHolder, actionState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.49,7,4
1657_1,1,2,"    @Override
public boolean onMove(RecyclerView recyclerView, RecyclerView.ViewHolder source, RecyclerView.ViewHolder target) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,1,0,1,0.5,4,2
1657_3,3,5,"if (source.getItemViewType() != target.getItemViewType()) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,1,1,0,0,0.35,1,0
1657_4,4,4,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.28,2,0
1657_7,7,7,"mAdapter.onItemMove(source.getAdapterPosition(), target.getAdapterPosition());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,1,0,2,0.68,0,0
1657_8,8,8,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.26,1,0
1656_1,1,2,"@Override
public int getMovementFlags(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,2,0.5,0,0
1656_3,3,11,"if (recyclerView.getLayoutManager() instanceof GridLayoutManager) {
final int dragFlags = ItemTouchHelper.UP | ItemTouchHelper.DOWN | ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT;
final int swipeFlags = 0;
return makeMovementFlags(dragFlags, swipeFlags);
} else {
final int dragFlags = ItemTouchHelper.UP | ItemTouchHelper.DOWN;
final int swipeFlags = 0;
return makeMovementFlags(dragFlags, swipeFlags);
}",1,0,0,0,0,0,0,0,0,7,1,9,0,0,0,0,6,5,1,0,4,0.61,0,0
1656_4,4,4,final int dragFlags = ItemTouchHelper.UP | ItemTouchHelper.DOWN | ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.44,1,0
1656_5,5,5,final int swipeFlags = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,1,0,1,0.43,2,1
1656_6,6,6,"return makeMovementFlags(dragFlags, swipeFlags);",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,5,1,0,2,0.54,3,2
1656_7,7,7,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.19,4,3
1656_8,8,8,final int dragFlags = ItemTouchHelper.UP | ItemTouchHelper.DOWN;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.41,5,4
1656_9,9,9,final int swipeFlags = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,1,0,1,0.43,6,5
1656_10,10,10,"return makeMovementFlags(dragFlags, swipeFlags);",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,5,1,0,2,0.54,7,6
1596_1,1,2,"@Deprecated
private void calculateSizes() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,1,3,0,2,0.54,3,2
1596_3,3,3,this.maxContentSize = assetDownloadHelper.getMaxContentSizeLimit();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,3,0,3,0.7,2,1
1596_4,4,4,"log.debug(""Max allowed content size (in bytes) [ {} ]"", this.maxContentSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,1,3,0,3,0.7,1,0
1596_6,6,12,"if(this.maxContentSize > 0) {
log.debug(""Max content size set, requires calculation of download  content size."");
this.downloadContentSize = assetDownloadHelper.getAssetDownloadSize(assets, request.getResource());
log.debug(""Requested download content size (in bytes) [ {} ]"", this.downloadContentSize);
} else {
this.downloadContentSize = DEFAULT_SIZE_LIMIT;
}",1,0,0,0,0,0,0,0,0,5,2,7,0,0,1,0,6,1,3,0,4,0.69,0,0
1596_7,7,7,"log.debug(""Max content size set, requires calculation of download  content size."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,3,0,4,0.7,1,0
1596_8,8,8,"this.downloadContentSize = assetDownloadHelper.getAssetDownloadSize(assets, request.getResource());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,3,0,2,0.54,2,1
1596_9,9,9,"log.debug(""Requested download content size (in bytes) [ {} ]"", this.downloadContentSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,3,0,2,0.61,3,2
1596_10,10,10,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,3,0,0,0.17,4,3
1596_11,11,11,this.downloadContentSize = DEFAULT_SIZE_LIMIT;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,3,0,2,0.66,5,4
1595_1,1,3,"    @Deprecated
@Override
public boolean isLegacyMode() {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,5,1,3,0,1,0.43,4,4
1595_4,4,12,"if (legacyMode == null) {
if (getAssetRenditionsGroups() != null && !getAssetRenditionsGroups().isEmpty()) {
return false;
} else {
return excludeOriginalAssets != null;
}
} else {
return legacyMode;
}",1,0,0,0,0,0,0,0,0,6,2,9,0,0,0,0,5,1,3,0,1,0.45,0,0
1595_5,5,9,"if (getAssetRenditionsGroups() != null && !getAssetRenditionsGroups().isEmpty()) {
return false;
} else {
return excludeOriginalAssets != null;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,5,1,3,0,0,0.36,0,0
1595_6,6,6,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,1,3,0,0,0.22,1,1
1595_7,7,7,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,3,0,0,0.15,0,0
1595_8,8,8,return excludeOriginalAssets != null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,1,3,0,0,0.37,0,0
1595_10,10,10,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,3,0,0,0.15,2,1
1595_11,11,11,return legacyMode;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,1,3,0,1,0.44,3,1
1593_1,1,1,    private Optional<AssetRenditionsGroup> getAssetRenditionGroup(final Resource group) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.48,6,4
1593_2,2,2,Optional<AssetRenditionsGroup> assetRenditionsGroup = Optional.empty();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,0,0,1,0.51,5,3
1593_4,4,15,"if (group != null) {
final String title = group.getParent().getValueMap().get(PN_ASSET_RENDITIONS_GROUP_TITLE, String.class);
final Options options = modelFactory.getModelFromWrappedRequest(request, group, Options.class);

final Optional<List<OptionItem>> sanitizedOptions = Optional.of(options.getItems().stream()
.filter(item -> assetRenditionDispatchers.isValidAssetRenditionName(item.getValue()))
.collect(Collectors.toList()));

assetRenditionsGroup = sanitizedOptions
.filter(so -> !so.isEmpty())
.map(so -> new AssetRenditionsGroup(title, so));
}",1,0,0,0,0,0,0,0,0,5,1,12,0,0,1,1,5,4,0,0,2,0.57,0,0
1593_5,5,5,"final String title = group.getParent().getValueMap().get(PN_ASSET_RENDITIONS_GROUP_TITLE, String.class);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.49,2,1
1593_6,6,6,"final Options options = modelFactory.getModelFromWrappedRequest(request, group, Options.class);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,0,0,0,0.39,1,0
1593_8,8,10,"final Optional<List<OptionItem>> sanitizedOptions = Optional.of(options.getItems().stream()
.filter(item -> assetRenditionDispatchers.isValidAssetRenditionName(item.getValue()))
.collect(Collectors.toList()));",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,5,4,0,0,2,0.56,0,0
1593_12,12,13,"assetRenditionsGroup = sanitizedOptions
.filter(so -> !so.isEmpty())",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,4,0,0,1,0.48,4,1
1593_14,14,14,".map(so -> new AssetRenditionsGroup(title, so));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.52,6,2
1593_17,17,17,return assetRenditionsGroup;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,4,0,0,1,0.51,9,3
1525_1,1,1,"public final int matchData(String type, String scheme, Uri data) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,2,0.58,48,34
1525_2,2,2,final ArrayList<String> types = mDataTypes;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.53,47,33
1525_3,3,3,final ArrayList<String> schemes = mDataSchemes;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.35,46,32
1525_4,4,4,final ArrayList<AuthorityEntry> authorities = mDataAuthorities;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.33,45,31
1525_5,5,5,final ArrayList<PatternMatcher> paths = mDataPaths;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,7,0,0,0,0.35,44,30
1525_7,7,7,int match = MATCH_CATEGORY_EMPTY;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,7,0,0,1,0.55,42,29
1525_9,9,12,"if (types == null && schemes == null) {
return ((type == null && data == null)
? (MATCH_CATEGORY_EMPTY+MATCH_ADJUSTMENT_NORMAL) : NO_MATCH_DATA);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,1,1,7,7,0,0,2,0.62,37,27
1525_10,10,11,"return ((type == null && data == null)
? (MATCH_CATEGORY_EMPTY+MATCH_ADJUSTMENT_NORMAL) : NO_MATCH_DATA);",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,7,7,0,0,2,0.62,38,27
1525_14,14,41,"if (schemes != null) {
if (schemes.contains(scheme != null ? scheme : """")) {
match = MATCH_CATEGORY_SCHEME;
} else {
return NO_MATCH_DATA;
}

if (authorities != null) {
int authMatch = matchDataAuthority(data);
if (authMatch >= 0) {
if (paths == null) {
match = authMatch;
} else if (hasDataPath(data.getPath())) {
match = MATCH_CATEGORY_PATH;
} else {
return NO_MATCH_DATA;
}
} else {
return NO_MATCH_DATA;
}
}
} else {
if (scheme != null && !"""".equals(scheme)
&& !""content"".equals(scheme)
&& !""file"".equals(scheme)) {
return NO_MATCH_DATA;
}
}",1,0,0,0,0,0,0,0,0,20,4,28,0,0,1,1,7,7,0,0,1,0.52,8,6
1525_15,15,19,"if (schemes.contains(scheme != null ? scheme : """")) {
match = MATCH_CATEGORY_SCHEME;
} else {
return NO_MATCH_DATA;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,1,7,7,0,0,1,0.54,30,22
1525_16,16,16,match = MATCH_CATEGORY_SCHEME;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.63,33,24
1525_17,17,17,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.28,32,23
1525_18,18,18,return NO_MATCH_DATA;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.43,31,22
1525_21,21,34,"if (authorities != null) {
int authMatch = matchDataAuthority(data);
if (authMatch >= 0) {
if (paths == null) {
match = authMatch;
} else if (hasDataPath(data.getPath())) {
match = MATCH_CATEGORY_PATH;
} else {
return NO_MATCH_DATA;
}
} else {
return NO_MATCH_DATA;
}
}",1,0,0,0,0,0,0,0,0,10,3,14,0,0,1,0,7,7,0,0,1,0.5,15,11
1525_22,22,22,int authMatch = matchDataAuthority(data);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,7,0,0,1,0.44,27,20
1525_23,23,33,"if (authMatch >= 0) {
if (paths == null) {
match = authMatch;
} else if (hasDataPath(data.getPath())) {
match = MATCH_CATEGORY_PATH;
} else {
return NO_MATCH_DATA;
}
} else {
return NO_MATCH_DATA;
}",1,0,0,0,0,0,0,0,0,8,2,11,0,1,0,0,7,7,0,0,1,0.51,16,11
1525_24,24,30,"if (paths == null) {
match = authMatch;
} else if (hasDataPath(data.getPath())) {
match = MATCH_CATEGORY_PATH;
} else {
return NO_MATCH_DATA;
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,0,0,7,7,0,0,1,0.51,19,13
1525_25,25,25,match = authMatch;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.57,24,17
1525_26,26,26,} else if (hasDataPath(data.getPath())) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.3,23,16
1525_27,27,27,match = MATCH_CATEGORY_PATH;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.62,22,15
1525_28,28,28,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.28,21,14
1525_29,29,29,return NO_MATCH_DATA;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.43,20,13
1525_31,31,31,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.28,18,12
1525_32,32,32,return NO_MATCH_DATA;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.43,17,11
1525_35,35,35,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.28,14,10
1525_36,36,40,"if (scheme != null && !"""".equals(scheme)
&& !""content"".equals(scheme)
&& !""file"".equals(scheme)) {
return NO_MATCH_DATA;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,7,7,0,0,1,0.5,9,6
1525_37,37,37,"&& !""content"".equals(scheme)",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,7,0,0,0,0.42,12,8
1525_38,38,38,"&& !""file"".equals(scheme)) {",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,7,0,0,0,0.46,11,7
1525_39,39,39,return NO_MATCH_DATA;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.43,10,6
1525_43,43,53,"if (types != null) {
if (findMimeType(type)) {
match = MATCH_CATEGORY_TYPE;
} else {
return NO_MATCH_TYPE;
}
} else {
if (type != null) {
return NO_MATCH_TYPE;
}
}",1,0,0,0,0,0,0,0,0,7,2,11,0,0,1,1,7,7,0,0,3,0.78,0,0
1525_44,44,48,"if (findMimeType(type)) {
match = MATCH_CATEGORY_TYPE;
} else {
return NO_MATCH_TYPE;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,7,7,0,0,3,0.81,1,1
1525_45,45,45,match = MATCH_CATEGORY_TYPE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,2,0.79,4,3
1525_46,46,46,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.28,3,2
1525_47,47,47,return NO_MATCH_TYPE;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,7,0,0,2,0.73,2,1
1525_49,49,49,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.28,0,0
1525_50,50,52,"if (type != null) {
return NO_MATCH_TYPE;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,7,0,0,2,0.71,0,0
1525_51,51,51,return NO_MATCH_TYPE;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,7,0,0,2,0.73,1,0
1525_55,55,55,return match + MATCH_ADJUSTMENT_NORMAL;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,7,0,0,1,0.45,5,2
1516_1,1,3,"  private void getPSNeedUpdateMatrix(Set<Integer> matrixIdInPSSet,
List<MatrixMeta> needCreateMatrixes, List<Integer> needReleaseMatrixes,
ParameterServerId psId) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,21,9,7,0,4,0.66,16,10
1516_4,4,30,"try {
readLock.lock();
Map<Integer, MatrixMeta> matrixIdToPSMetaMap = matrixPartitionsOnPS.get(psId);

if (matrixIdToPSMetaMap == null) {
return;
}

for (int matrixId : matrixIdInPSSet) {
LOG.debug(""matrix in ps "" + matrixId);
if (!matrixIdToPSMetaMap.containsKey(matrixId)) {
LOG.debug(""matrix "" + matrixId + "" need release"");
needReleaseMatrixes.add(matrixId);
}
}

for (Entry<Integer, MatrixMeta> psMatrixEntry : matrixIdToPSMetaMap.entrySet()) {
LOG.debug(
""matrix in master "" + psMatrixEntry.getKey() + "", "" + psMatrixEntry.getValue()
.getName());
if (!matrixIdInPSSet.contains(psMatrixEntry.getKey())) {
needCreateMatrixes.add(psMatrixEntry.getValue());
}
}
} finally {
readLock.unlock();
}",0,0,0,0,1,0,0,0,0,16,3,27,0,0,0,0,21,9,7,0,3,0.56,0,0
1516_5,5,5,readLock.lock();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,21,9,7,0,0,0.28,14,8
1516_6,6,6,"Map<Integer, MatrixMeta> matrixIdToPSMetaMap = matrixPartitionsOnPS.get(psId);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,21,9,7,0,1,0.46,13,7
1516_8,8,10,"if (matrixIdToPSMetaMap == null) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,21,9,7,0,1,0.41,9,5
1516_9,9,9,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,21,9,7,0,0,0.19,10,5
1516_12,12,18,"for (int matrixId : matrixIdInPSSet) {
LOG.debug(""matrix in ps "" + matrixId);
if (!matrixIdToPSMetaMap.containsKey(matrixId)) {
LOG.debug(""matrix "" + matrixId + "" need release"");
needReleaseMatrixes.add(matrixId);
}
}",0,0,0,1,0,0,0,0,0,4,2,7,0,0,1,1,21,9,7,0,2,0.53,1,0
1516_13,13,13,"LOG.debug(""matrix in ps "" + matrixId);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,21,9,7,0,1,0.52,6,3
1516_14,14,17,"if (!matrixIdToPSMetaMap.containsKey(matrixId)) {
LOG.debug(""matrix "" + matrixId + "" need release"");
needReleaseMatrixes.add(matrixId);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,21,9,7,0,2,0.54,2,0
1516_15,15,15,"LOG.debug(""matrix "" + matrixId + "" need release"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,21,9,7,0,2,0.55,4,1
1516_16,16,16,needReleaseMatrixes.add(matrixId);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,21,9,7,0,2,0.56,3,0
1516_20,20,27,"for (Entry<Integer, MatrixMeta> psMatrixEntry : matrixIdToPSMetaMap.entrySet()) {
LOG.debug(
""matrix in master "" + psMatrixEntry.getKey() + "", "" + psMatrixEntry.getValue()
.getName());
if (!matrixIdInPSSet.contains(psMatrixEntry.getKey())) {
needCreateMatrixes.add(psMatrixEntry.getValue());
}
}",0,0,0,1,0,0,0,0,0,4,2,8,0,0,1,0,21,9,7,0,3,0.55,0,0
1516_21,21,22,"LOG.debug(
""matrix in master "" + psMatrixEntry.getKey() + "", "" + psMatrixEntry.getValue()",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,21,9,7,0,2,0.55,1,0
1516_23,23,23,.getName());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,21,9,7,0,0,0.34,3,2
1516_24,24,26,"if (!matrixIdInPSSet.contains(psMatrixEntry.getKey())) {
needCreateMatrixes.add(psMatrixEntry.getValue());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,21,9,7,0,2,0.52,4,2
1516_25,25,25,needCreateMatrixes.add(psMatrixEntry.getValue());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,21,9,7,0,2,0.54,5,3
1516_28,28,28,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,21,9,7,0,0,0.22,8,5
1516_29,29,29,readLock.unlock();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,21,9,7,0,0,0.37,9,5
1515_1,1,3,"public void syncMatrixInfos(List<MatrixReport> matrixReports, List<MatrixMeta> needCreateMatrixes,
List<Integer> needReleaseMatrixes, List<RecoverPartKey> needRecoverParts,
ParameterServerId psId) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,7,4,2,0,4,0.66,14,8
1515_5,5,5,IntOpenHashSet matrixInPS = new IntOpenHashSet();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,4,2,0,0,0.39,12,7
1515_6,6,6,int size = matrixReports.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,2,0,0,0.33,11,6
1515_7,7,9,"for (int i = 0; i < size; i++) {
matrixInPS.add(matrixReports.get(i).matrixId);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,1,7,4,2,0,1,0.49,8,4
1515_8,8,8,matrixInPS.add(matrixReports.get(i).matrixId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,2,0,1,0.52,9,4
1515_11,11,11,"handleMatrixReports(psId, matrixReports);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,4,2,0,0,0.36,6,3
1515_13,13,13,Set<RecoverPartKey> parts = getAndRemoveNeedRecoverParts(psId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,4,2,0,2,0.53,4,2
1515_14,14,16,"if (parts != null) {
needRecoverParts.addAll(parts);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,7,4,2,0,1,0.44,1,0
1515_15,15,15,needRecoverParts.addAll(parts);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,2,0,1,0.47,2,0
1515_18,18,18,"getPSNeedUpdateMatrix(matrixInPS, needCreateMatrixes, needReleaseMatrixes, psId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,4,2,0,3,0.69,0,0
1515_19,19,19,"psMatricesUpdate(psId, matrixReports);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,2,0,1,0.42,1,0
1514_1,1,3,"public void syncMatrixInfos(List<MatrixReport> matrixReports, List<MatrixMeta> needCreateMatrixes,
List<Integer> needReleaseMatrixes, List<RecoverPartKey> needRecoverParts,
ParameterServerId psId) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,6,2,2,0,5,0.74,1,0
1514_5,5,5,IntOpenHashSet matrixInPS = new IntOpenHashSet();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,2,2,0,1,0.39,0,0
1514_6,6,6,int size = matrixReports.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,2,0,2,0.54,1,0
1514_7,7,9,"for (int i = 0; i < size; i++) {
matrixInPS.add(matrixReports.get(i).matrixId);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,1,6,2,2,0,4,0.73,2,1
1514_8,8,8,matrixInPS.add(matrixReports.get(i).matrixId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,4,0.8,3,2
1514_11,11,11,"handleMatrixReports(psId, matrixReports);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,2,2,0,3,0.71,6,4
1514_13,13,13,Set<RecoverPartKey> parts = getAndRemoveNeedRecoverParts(psId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,2,2,0,2,0.53,8,5
1514_14,14,16,"if (parts != null) {
needRecoverParts.addAll(parts);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,6,2,2,0,0,0.36,9,5
1514_15,15,15,needRecoverParts.addAll(parts);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.37,10,6
1514_18,18,18,"getPSNeedUpdateMatrix(matrixInPS, needCreateMatrixes, needReleaseMatrixes, psId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,2,2,0,3,0.63,13,8
1514_19,19,19,"psMatricesUpdate(psId, matrixReports);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,3,0.63,14,8
1513_1,1,1,throws Exception ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,11,8,1,0,0,0.38,0,0
1513_2,2,7,"if (matrixMetaManager.exists(matrixContext.getName())) {
String errorMsg = ""build matrix failed. matrix name "" + matrixContext.getName()
+ "" has exist, you must choose a new one"";
LOG.error(errorMsg);
throw new InvalidParameterException(errorMsg);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,0,0,1,11,8,1,0,4,0.74,0,0
1513_3,3,4,"String errorMsg = ""build matrix failed. matrix name "" + matrixContext.getName()
+ "" has exist, you must choose a new one"";",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,11,8,1,0,4,0.76,1,0
1513_5,5,5,LOG.error(errorMsg);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,8,1,0,0,0.36,3,2
1513_6,6,6,throw new InvalidParameterException(errorMsg);,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,11,8,1,0,0,0.42,4,2
1513_9,9,9,MatrixMeta meta = initMatrixMeta(matrixContext);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,11,8,1,0,1,0.56,7,4
1513_11,11,11,"LOG.debug(""after init matrix "" + meta);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,11,8,1,0,1,0.51,9,5
1513_13,13,13,matrixMetaManager.addMatrix(meta);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,11,8,1,0,1,0.53,11,6
1513_15,15,20,"try {
writeLock.lock();
buildPSMatrixMeta(meta);
} finally {
writeLock.unlock();
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,1,0,11,8,1,0,1,0.5,13,7
1513_16,16,16,writeLock.lock();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,0,0.3,14,7
1513_17,17,17,buildPSMatrixMeta(meta);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,1,0.51,15,8
1513_18,18,18,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,0,0.24,16,9
1513_19,19,19,writeLock.unlock();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,0,0.45,17,10
1485_1,1,2,"@Override
public void run() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,0,0,0,0.26,22,13
1485_4,4,4,ChromosomeHandler handler = dump.getChromosomeHandler();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,4,0,0,0,0.24,20,12
1485_6,6,6,Random random = new Random();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,4,0,0,0,0.31,18,11
1485_8,8,8,String[] chrs = new String[handler.size() - 1];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,4,0,0,1,0.44,16,10
1485_9,9,9,int ind=0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,0,0,0,0.42,15,9
1485_11,11,13,"for (Chromosome chr : handler.getChromosomeArray()) {
if (!chr.getName().equalsIgnoreCase(""All"")) chrs[ind++] = chr.getName();
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,1,1,5,4,0,0,0,0.29,11,7
1485_12,12,12,"if (!chr.getName().equalsIgnoreCase(""All"")) chrs[ind++] = chr.getName();",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.26,12,7
1485_15,15,15,int[] bpBinSizes = dump.getBpBinSizes();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,4,0,0,2,0.7,9,6
1485_18,18,18,long sum=0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,0,0.46,6,5
1485_19,19,32,"for (int i=0; i<NUM_QUERIES; i++) {
String chr1 = chrs[random.nextInt(chrs.length)];
int binSize = bpBinSizes[random.nextInt(bpBinSizes.length)];

long end1 = random.nextInt((int) handler.getChromosomeFromName(chr1).getLength());
long start1 = end1 - binSize * QUERY_SIZE;
if (start1 < 0) start1 = 0;

dump.setQuery(chr1 + "":"" + start1 + "":"" + end1, chr1 + "":"" + start1 + "":"" + end1, binSize);
long currentTime = System.currentTimeMillis();
dump.run();
long totalTime = System.currentTimeMillis() - currentTime;
sum += totalTime;
}",0,0,1,0,0,0,0,0,0,10,1,14,0,1,0,0,5,4,0,0,3,0.67,0,0
1485_20,20,20,String chr1 = chrs[random.nextInt(chrs.length)];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,4,0,0,0,0.41,4,3
1485_21,21,21,int binSize = bpBinSizes[random.nextInt(bpBinSizes.length)];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,5,4,0,0,2,0.67,3,2
1485_23,23,23,long end1 = random.nextInt((int) handler.getChromosomeFromName(chr1).getLength());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,0,0.37,1,1
1485_24,24,24,long start1 = end1 - binSize * QUERY_SIZE;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,3,0.83,0,0
1485_25,25,25,if (start1 < 0) start1 = 0;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,0,0,0,0.4,0,0
1485_27,27,27,"dump.setQuery(chr1 + "":"" + start1 + "":"" + end1, chr1 + "":"" + start1 + "":"" + end1, binSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,0,0,3,0.77,2,1
1485_28,28,28,long currentTime = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.35,3,1
1485_29,29,29,dump.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.3,4,2
1485_30,30,30,long totalTime = System.currentTimeMillis() - currentTime;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.39,5,3
1485_31,31,31,sum += totalTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.45,6,4
1485_33,33,33,"System.err.println(""Average time to query "" + QUERY_SIZE + ""x"" + QUERY_SIZE +"": "" + sum/NUM_QUERIES + "" milliseconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,0,0,2,0.71,8,6
1485_35,35,35,QUERY_SIZE=2048;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,0,0,2,0.79,10,7
1485_36,36,36,sum=0;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.46,11,7
1485_37,37,50,"for (int i=0; i<NUM_QUERIES; i++) {
String chr1 = chrs[random.nextInt(chrs.length)];
int binSize = bpBinSizes[random.nextInt(bpBinSizes.length)];

long end1 = random.nextInt((int) handler.getChromosomeFromName(chr1).getLength());
long start1 = end1 - binSize * QUERY_SIZE;
if (start1 < 0) start1 = 0;

dump.setQuery(chr1 + "":"" + start1 + "":"" + end1, chr1 + "":"" + start1 + "":"" + end1, binSize);
long currentTime = System.currentTimeMillis();
dump.run();
long totalTime = System.currentTimeMillis() - currentTime;
sum += totalTime;
}",0,0,1,0,0,0,0,0,0,10,1,14,0,1,0,0,5,4,0,0,3,0.67,12,8
1485_38,38,38,String chr1 = chrs[random.nextInt(chrs.length)];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,4,0,0,0,0.41,13,9
1485_39,39,39,int binSize = bpBinSizes[random.nextInt(bpBinSizes.length)];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,5,4,0,0,2,0.67,14,10
1485_41,41,41,long end1 = random.nextInt((int) handler.getChromosomeFromName(chr1).getLength());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,0,0.37,16,12
1485_42,42,42,long start1 = end1 - binSize * QUERY_SIZE;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,3,0.83,17,12
1485_43,43,43,if (start1 < 0) start1 = 0;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,0,0,0,0.4,18,13
1485_45,45,45,"dump.setQuery(chr1 + "":"" + start1 + "":"" + end1, chr1 + "":"" + start1 + "":"" + end1, binSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,0,0,3,0.77,20,15
1485_46,46,46,long currentTime = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.35,21,15
1485_47,47,47,dump.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.3,22,16
1485_48,48,48,long totalTime = System.currentTimeMillis() - currentTime;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.39,23,17
1485_49,49,49,sum += totalTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.45,24,18
1485_51,51,51,"System.err.println(""Average time to query "" + QUERY_SIZE + ""x"" + QUERY_SIZE +"": "" + sum/NUM_QUERIES + "" milliseconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,2,0.71,26,20
1484_1,1,2,"@Override
public void run() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.26,21,12
1484_4,4,4,ChromosomeHandler handler = dump.getChromosomeHandler();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.24,19,11
1484_6,6,6,Random random = new Random();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.35,17,10
1484_8,8,8,String[] chrs = new String[handler.size() - 1];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.34,15,9
1484_9,9,9,int ind=0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.63,14,8
1484_11,11,13,"for (Chromosome chr : handler.getChromosomeArray()) {
if (!chr.getName().equalsIgnoreCase(""All"")) chrs[ind++] = chr.getName();
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,1,0.26,10,6
1484_12,12,12,"if (!chr.getName().equalsIgnoreCase(""All"")) chrs[ind++] = chr.getName();",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.21,11,6
1484_15,15,15,int[] bpBinSizes = dump.getBpBinSizes();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.4,8,5
1484_18,18,18,long sum=0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,1,0.67,5,4
1484_19,19,32,"for (int i=0; i<NUM_QUERIES; i++) {
String chr1 = chrs[random.nextInt(chrs.length)];
int binSize = bpBinSizes[random.nextInt(bpBinSizes.length)];

long end1 = random.nextInt((int) handler.getChromosomeFromName(chr1).getLength());
long start1 = end1 - binSize * QUERY_SIZE;
if (start1 < 0) start1 = 0;

dump.setQuery(chr1 + "":"" + start1 + "":"" + end1, chr1 + "":"" + start1 + "":"" + end1, binSize);
long currentTime = System.currentTimeMillis();
dump.run();
long totalTime = System.currentTimeMillis() - currentTime;
sum += totalTime;
}",0,0,1,0,0,0,0,0,0,10,1,14,0,1,0,0,4,3,0,0,2,0.55,0,0
1484_20,20,20,String chr1 = chrs[random.nextInt(chrs.length)];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,3,0,0,0,0.4,3,2
1484_21,21,21,int binSize = bpBinSizes[random.nextInt(bpBinSizes.length)];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,4,3,0,0,0,0.45,2,1
1484_23,23,23,long end1 = random.nextInt((int) handler.getChromosomeFromName(chr1).getLength());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,1,0.4,0,0
1484_24,24,24,long start1 = end1 - binSize * QUERY_SIZE;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.39,0,0
1484_25,25,25,if (start1 < 0) start1 = 0;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,1,0.83,1,0
1484_27,27,27,"dump.setQuery(chr1 + "":"" + start1 + "":"" + end1, chr1 + "":"" + start1 + "":"" + end1, binSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.33,3,2
1484_28,28,28,long currentTime = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.29,4,2
1484_29,29,29,dump.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.15,5,3
1484_30,30,30,long totalTime = System.currentTimeMillis() - currentTime;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.37,6,4
1484_31,31,31,sum += totalTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.48,7,5
1484_33,33,33,"System.err.println(""Average time to query "" + QUERY_SIZE + ""x"" + QUERY_SIZE +"": "" + sum/NUM_QUERIES + "" milliseconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,0,0.38,9,7
1484_35,35,35,QUERY_SIZE=2048;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.3,11,8
1484_36,36,36,sum=0;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.73,12,8
1484_37,37,50,"for (int i=0; i<NUM_QUERIES; i++) {
String chr1 = chrs[random.nextInt(chrs.length)];
int binSize = bpBinSizes[random.nextInt(bpBinSizes.length)];

long end1 = random.nextInt((int) handler.getChromosomeFromName(chr1).getLength());
long start1 = end1 - binSize * QUERY_SIZE;
if (start1 < 0) start1 = 0;

dump.setQuery(chr1 + "":"" + start1 + "":"" + end1, chr1 + "":"" + start1 + "":"" + end1, binSize);
long currentTime = System.currentTimeMillis();
dump.run();
long totalTime = System.currentTimeMillis() - currentTime;
sum += totalTime;
}",0,0,1,0,0,0,0,0,0,10,1,14,0,1,0,0,4,3,0,0,2,0.55,13,9
1484_38,38,38,String chr1 = chrs[random.nextInt(chrs.length)];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,3,0,0,0,0.4,14,10
1484_39,39,39,int binSize = bpBinSizes[random.nextInt(bpBinSizes.length)];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,4,3,0,0,0,0.45,15,11
1484_41,41,41,long end1 = random.nextInt((int) handler.getChromosomeFromName(chr1).getLength());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,1,0.4,17,13
1484_42,42,42,long start1 = end1 - binSize * QUERY_SIZE;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.39,18,13
1484_43,43,43,if (start1 < 0) start1 = 0;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,1,0.83,19,14
1484_45,45,45,"dump.setQuery(chr1 + "":"" + start1 + "":"" + end1, chr1 + "":"" + start1 + "":"" + end1, binSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.33,21,16
1484_46,46,46,long currentTime = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.29,22,16
1484_47,47,47,dump.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.15,23,17
1484_48,48,48,long totalTime = System.currentTimeMillis() - currentTime;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.37,24,18
1484_49,49,49,sum += totalTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.48,25,19
1484_51,51,51,"System.err.println(""Average time to query "" + QUERY_SIZE + ""x"" + QUERY_SIZE +"": "" + sum/NUM_QUERIES + "" milliseconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.38,27,21
1483_1,1,2,"@Override
public void run() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,0,0.35,17,9
1483_4,4,4,ChromosomeHandler handler = dump.getChromosomeHandler();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,5,0,0,1,0.31,15,8
1483_6,6,6,Random random = new Random();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,5,0,0,0,0.24,13,7
1483_8,8,8,String[] chrs = new String[handler.size() - 1];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,5,0,0,0,0.25,11,6
1483_9,9,9,int ind=0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,5,0,0,0,0.18,10,5
1483_11,11,13,"for (Chromosome chr : handler.getChromosomeArray()) {
if (!chr.getName().equalsIgnoreCase(""All"")) chrs[ind++] = chr.getName();
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,1,1,5,5,0,0,1,0.29,6,3
1483_12,12,12,"if (!chr.getName().equalsIgnoreCase(""All"")) chrs[ind++] = chr.getName();",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.3,7,3
1483_15,15,15,int[] bpBinSizes = dump.getBpBinSizes();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,5,0,0,0,0.29,4,2
1483_18,18,18,long sum=0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,0,0.29,1,1
1483_19,19,32,"for (int i=0; i<NUM_QUERIES; i++) {
String chr1 = chrs[random.nextInt(chrs.length)];
int binSize = bpBinSizes[random.nextInt(bpBinSizes.length)];

long end1 = random.nextInt((int) handler.getChromosomeFromName(chr1).getLength());
long start1 = end1 - binSize * QUERY_SIZE;
if (start1 < 0) start1 = 0;

dump.setQuery(chr1 + "":"" + start1 + "":"" + end1, chr1 + "":"" + start1 + "":"" + end1, binSize);
long currentTime = System.currentTimeMillis();
dump.run();
long totalTime = System.currentTimeMillis() - currentTime;
sum += totalTime;
}",0,0,1,0,0,0,0,0,0,10,1,14,0,1,0,0,5,5,0,0,2,0.44,0,0
1483_20,20,20,String chr1 = chrs[random.nextInt(chrs.length)];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,5,0,0,0,0.27,0,0
1483_21,21,21,int binSize = bpBinSizes[random.nextInt(bpBinSizes.length)];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,5,5,0,0,0,0.21,1,0
1483_23,23,23,long end1 = random.nextInt((int) handler.getChromosomeFromName(chr1).getLength());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,1,0.26,3,2
1483_24,24,24,long start1 = end1 - binSize * QUERY_SIZE;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.43,4,2
1483_25,25,25,if (start1 < 0) start1 = 0;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,0,0.11,5,3
1483_27,27,27,"dump.setQuery(chr1 + "":"" + start1 + "":"" + end1, chr1 + "":"" + start1 + "":"" + end1, binSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,1,0.49,7,5
1483_28,28,28,long currentTime = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.25,8,5
1483_29,29,29,dump.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.38,9,6
1483_30,30,30,long totalTime = System.currentTimeMillis() - currentTime;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.23,10,7
1483_31,31,31,sum += totalTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.27,11,8
1483_33,33,33,"System.err.println(""Average time to query "" + QUERY_SIZE + ""x"" + QUERY_SIZE +"": "" + sum/NUM_QUERIES + "" milliseconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,1,0.54,13,10
1483_35,35,35,QUERY_SIZE=2048;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,1,0.54,15,11
1483_36,36,36,sum=0;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.29,16,11
1483_37,37,50,"for (int i=0; i<NUM_QUERIES; i++) {
String chr1 = chrs[random.nextInt(chrs.length)];
int binSize = bpBinSizes[random.nextInt(bpBinSizes.length)];

long end1 = random.nextInt((int) handler.getChromosomeFromName(chr1).getLength());
long start1 = end1 - binSize * QUERY_SIZE;
if (start1 < 0) start1 = 0;

dump.setQuery(chr1 + "":"" + start1 + "":"" + end1, chr1 + "":"" + start1 + "":"" + end1, binSize);
long currentTime = System.currentTimeMillis();
dump.run();
long totalTime = System.currentTimeMillis() - currentTime;
sum += totalTime;
}",0,0,1,0,0,0,0,0,0,10,1,14,0,1,0,0,5,5,0,0,2,0.44,17,12
1483_38,38,38,String chr1 = chrs[random.nextInt(chrs.length)];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,5,0,0,0,0.27,18,13
1483_39,39,39,int binSize = bpBinSizes[random.nextInt(bpBinSizes.length)];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,5,5,0,0,0,0.21,19,14
1483_41,41,41,long end1 = random.nextInt((int) handler.getChromosomeFromName(chr1).getLength());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,1,0.26,21,16
1483_42,42,42,long start1 = end1 - binSize * QUERY_SIZE;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.43,22,16
1483_43,43,43,if (start1 < 0) start1 = 0;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,0,0.11,23,17
1483_45,45,45,"dump.setQuery(chr1 + "":"" + start1 + "":"" + end1, chr1 + "":"" + start1 + "":"" + end1, binSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,1,0.49,25,19
1483_46,46,46,long currentTime = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.25,26,19
1483_47,47,47,dump.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.38,27,20
1483_48,48,48,long totalTime = System.currentTimeMillis() - currentTime;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.23,28,21
1483_49,49,49,sum += totalTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.27,29,22
1483_51,51,51,"System.err.println(""Average time to query "" + QUERY_SIZE + ""x"" + QUERY_SIZE +"": "" + sum/NUM_QUERIES + "" milliseconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.54,31,24
1482_1,1,2,"@Override
public void run() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.34,5,2
1482_4,4,4,ChromosomeHandler handler = dump.getChromosomeHandler();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.23,3,1
1482_6,6,6,Random random = new Random();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.09,1,0
1482_8,8,8,String[] chrs = new String[handler.size() - 1];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.23,0,0
1482_9,9,9,int ind=0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.16,1,0
1482_11,11,13,"for (Chromosome chr : handler.getChromosomeArray()) {
if (!chr.getName().equalsIgnoreCase(""All"")) chrs[ind++] = chr.getName();
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,1,0.23,3,2
1482_12,12,12,"if (!chr.getName().equalsIgnoreCase(""All"")) chrs[ind++] = chr.getName();",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.24,4,2
1482_15,15,15,int[] bpBinSizes = dump.getBpBinSizes();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.18,7,4
1482_18,18,18,long sum=0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.26,10,5
1482_19,19,32,"for (int i=0; i<NUM_QUERIES; i++) {
String chr1 = chrs[random.nextInt(chrs.length)];
int binSize = bpBinSizes[random.nextInt(bpBinSizes.length)];

long end1 = random.nextInt((int) handler.getChromosomeFromName(chr1).getLength());
long start1 = end1 - binSize * QUERY_SIZE;
if (start1 < 0) start1 = 0;

dump.setQuery(chr1 + "":"" + start1 + "":"" + end1, chr1 + "":"" + start1 + "":"" + end1, binSize);
long currentTime = System.currentTimeMillis();
dump.run();
long totalTime = System.currentTimeMillis() - currentTime;
sum += totalTime;
}",0,0,1,0,0,0,0,0,0,10,1,14,0,1,0,0,3,3,0,0,2,0.56,11,5
1482_20,20,20,String chr1 = chrs[random.nextInt(chrs.length)];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,3,0,0,0,0.22,12,6
1482_21,21,21,int binSize = bpBinSizes[random.nextInt(bpBinSizes.length)];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,3,3,0,0,0,0.07,13,7
1482_23,23,23,long end1 = random.nextInt((int) handler.getChromosomeFromName(chr1).getLength());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,1,0.16,15,9
1482_24,24,24,long start1 = end1 - binSize * QUERY_SIZE;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.61,16,9
1482_25,25,25,if (start1 < 0) start1 = 0;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.06,17,10
1482_27,27,27,"dump.setQuery(chr1 + "":"" + start1 + "":"" + end1, chr1 + "":"" + start1 + "":"" + end1, binSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.65,19,12
1482_28,28,28,long currentTime = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.14,20,12
1482_29,29,29,dump.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.26,21,13
1482_30,30,30,long totalTime = System.currentTimeMillis() - currentTime;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.13,22,14
1482_31,31,31,sum += totalTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.25,23,15
1482_33,33,33,"System.err.println(""Average time to query "" + QUERY_SIZE + ""x"" + QUERY_SIZE +"": "" + sum/NUM_QUERIES + "" milliseconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,1,0.67,25,17
1482_35,35,35,QUERY_SIZE=2048;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.73,27,18
1482_36,36,36,sum=0;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.28,28,18
1482_37,37,50,"for (int i=0; i<NUM_QUERIES; i++) {
String chr1 = chrs[random.nextInt(chrs.length)];
int binSize = bpBinSizes[random.nextInt(bpBinSizes.length)];

long end1 = random.nextInt((int) handler.getChromosomeFromName(chr1).getLength());
long start1 = end1 - binSize * QUERY_SIZE;
if (start1 < 0) start1 = 0;

dump.setQuery(chr1 + "":"" + start1 + "":"" + end1, chr1 + "":"" + start1 + "":"" + end1, binSize);
long currentTime = System.currentTimeMillis();
dump.run();
long totalTime = System.currentTimeMillis() - currentTime;
sum += totalTime;
}",0,0,1,0,0,0,0,0,0,10,1,14,0,1,0,0,3,3,0,0,2,0.56,29,19
1482_38,38,38,String chr1 = chrs[random.nextInt(chrs.length)];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,3,0,0,0,0.22,30,20
1482_39,39,39,int binSize = bpBinSizes[random.nextInt(bpBinSizes.length)];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,3,3,0,0,0,0.07,31,21
1482_41,41,41,long end1 = random.nextInt((int) handler.getChromosomeFromName(chr1).getLength());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,1,0.16,33,23
1482_42,42,42,long start1 = end1 - binSize * QUERY_SIZE;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.61,34,23
1482_43,43,43,if (start1 < 0) start1 = 0;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.06,35,24
1482_45,45,45,"dump.setQuery(chr1 + "":"" + start1 + "":"" + end1, chr1 + "":"" + start1 + "":"" + end1, binSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.65,37,26
1482_46,46,46,long currentTime = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.14,38,26
1482_47,47,47,dump.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.26,39,27
1482_48,48,48,long totalTime = System.currentTimeMillis() - currentTime;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.13,40,28
1482_49,49,49,sum += totalTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.25,41,29
1482_51,51,51,"System.err.println(""Average time to query "" + QUERY_SIZE + ""x"" + QUERY_SIZE +"": "" + sum/NUM_QUERIES + "" milliseconds"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.67,43,31
1422_1,1,1,"    private void setAuthentication(HttpUriRequest httpUriRequest, boolean isApiKeyRequired, Config config) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,3,0.61,1,1
1422_2,2,2,String apiKey = config.getApiKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,2,0.62,0,0
1422_3,3,7,"if (isApiKeyRequired || (apiKey != null && !apiKey.isEmpty())) {
setApiKey(httpUriRequest, apiKey);
} else {
setBasicAuthentication(httpUriRequest, config.getUsername(), config.getPassword());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,5,4,0,0,3,0.66,0,0
1422_4,4,4,"setApiKey(httpUriRequest, apiKey);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.62,1,0
1422_5,5,5,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.21,2,1
1422_6,6,6,"setBasicAuthentication(httpUriRequest, config.getUsername(), config.getPassword());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.36,3,2
1421_1,1,1,throws HTTPClientException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,6,0,0,0,0.42,12,8
1421_2,2,19,"try {
char[] password = null;
if (config.getClientKeyStorePassword() != null && !config.getClientKeyStorePassword().isEmpty()) {
password = config.getClientKeyStorePassword().toCharArray();
}

TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());
tmf.init(config.getTrustKeyStore());

KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());
keyManagerFactory.init(config.getClientKeyStore(), password);

SSLContext context = SSLContext.getInstance(TLSV1_2);
context.init(keyManagerFactory.getKeyManagers(), tmf.getTrustManagers(), null);
return new SSLConnectionSocketFactory(context);
} catch (Exception e) {
throw new HTTPClientException(""Error creating SSL Context"", e);
}",0,0,0,0,1,0,0,0,0,12,2,18,0,0,0,0,6,6,0,0,5,0.73,0,0
1421_3,3,3,char[] password = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,0,0.33,10,6
1421_4,4,6,"if (config.getClientKeyStorePassword() != null && !config.getClientKeyStorePassword().isEmpty()) {
password = config.getClientKeyStorePassword().toCharArray();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,6,6,0,0,0,0.37,7,4
1421_5,5,5,password = config.getClientKeyStorePassword().toCharArray();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.37,8,4
1421_8,8,8,TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,6,0,0,2,0.72,5,3
1421_9,9,9,tmf.init(config.getTrustKeyStore());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,6,0,0,1,0.52,4,2
1421_11,11,11,KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,6,0,0,1,0.63,2,1
1421_12,12,12,"keyManagerFactory.init(config.getClientKeyStore(), password);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,6,0,0,1,0.51,1,0
1421_14,14,14,SSLContext context = SSLContext.getInstance(TLSV1_2);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,6,0,0,2,0.7,0,0
1421_15,15,15,"context.init(keyManagerFactory.getKeyManagers(), tmf.getTrustManagers(), null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,6,0,0,3,0.69,1,0
1421_16,16,16,return new SSLConnectionSocketFactory(context);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,6,0,0,2,0.69,2,1
1421_17,17,17,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.31,3,2
1421_18,18,18,"throw new HTTPClientException(""Error creating SSL Context"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,6,0,0,3,0.68,4,3
1420_1,1,1,throws HTTPClientException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,8,0,0,0,0.44,6,4
1420_2,2,19,"try {
char[] password = null;
if (config.getClientKeyStorePassword() != null && !config.getClientKeyStorePassword().isEmpty()) {
password = config.getClientKeyStorePassword().toCharArray();
}

TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());
tmf.init(config.getTrustKeyStore());

KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());
keyManagerFactory.init(config.getClientKeyStore(), password);

SSLContext context = SSLContext.getInstance(TLSV1_2);
context.init(keyManagerFactory.getKeyManagers(), tmf.getTrustManagers(), null);
return new SSLConnectionSocketFactory(context);
} catch (Exception e) {
throw new HTTPClientException(""Error creating SSL Context"", e);
}",0,0,0,0,1,0,0,0,0,12,2,18,0,0,0,0,8,8,0,0,5,0.79,0,0
1420_3,3,3,char[] password = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,8,0,0,0,0.43,4,2
1420_4,4,6,"if (config.getClientKeyStorePassword() != null && !config.getClientKeyStorePassword().isEmpty()) {
password = config.getClientKeyStorePassword().toCharArray();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,8,8,0,0,2,0.57,1,0
1420_5,5,5,password = config.getClientKeyStorePassword().toCharArray();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,8,0,0,2,0.57,2,0
1420_8,8,8,TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,8,0,0,2,0.7,0,0
1420_9,9,9,tmf.init(config.getTrustKeyStore());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,8,8,0,0,3,0.74,1,0
1420_11,11,11,KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,8,0,0,2,0.72,3,2
1420_12,12,12,"keyManagerFactory.init(config.getClientKeyStore(), password);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,8,8,0,0,3,0.7,4,2
1420_14,14,14,SSLContext context = SSLContext.getInstance(TLSV1_2);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,8,0,0,0,0.51,6,4
1420_15,15,15,"context.init(keyManagerFactory.getKeyManagers(), tmf.getTrustManagers(), null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,8,0,0,3,0.74,7,4
1420_16,16,16,return new SSLConnectionSocketFactory(context);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,8,8,0,0,0,0.54,8,5
1420_17,17,17,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,8,0,0,0,0.31,9,6
1420_18,18,18,"throw new HTTPClientException(""Error creating SSL Context"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,8,0,0,1,0.55,10,7
1419_1,1,1,throws HTTPClientException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,4,0,0,0,0.37,10,7
1419_2,2,18,"try {
KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());
keyStore.load(null, null);
keyStore.setCertificateEntry(TERMINAL_CERTIFICATE_ALIAS, config.getTerminalCertificate());

TrustManagerFactory trustFactory =
TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());
trustFactory.init(keyStore);
TrustManager[] trustManagers = trustFactory.getTrustManagers();

SSLContext sc = SSLContext.getInstance(SSL);
sc.init(null, trustManagers, new java.security.SecureRandom());

return new SSLConnectionSocketFactory(sc, createHostnameVerifier(config.getEnvironment()));
} catch (GeneralSecurityException | IOException e) {
throw new HTTPClientException(""Error loading certificate from path"", e);
}",0,0,0,0,1,0,0,0,0,11,1,17,0,0,0,0,5,4,0,0,4,0.72,0,0
1419_3,3,3,KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.34,8,5
1419_4,4,4,"keyStore.load(null, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.3,7,4
1419_5,5,5,"keyStore.setCertificateEntry(TERMINAL_CERTIFICATE_ALIAS, config.getTerminalCertificate());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,0,0,2,0.63,6,3
1419_7,7,8,"TrustManagerFactory trustFactory =
TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,5,4,0,0,2,0.7,3,2
1419_9,9,9,trustFactory.init(keyStore);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.53,2,1
1419_10,10,10,TrustManager[] trustManagers = trustFactory.getTrustManagers();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,5,4,0,0,2,0.75,1,0
1419_12,12,12,SSLContext sc = SSLContext.getInstance(SSL);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,0,0.56,0,0
1419_13,13,13,"sc.init(null, trustManagers, new java.security.SecureRandom());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,0,0,2,0.58,1,0
1419_15,15,15,"return new SSLConnectionSocketFactory(sc, createHostnameVerifier(config.getEnvironment()));",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,4,0,0,0,0.53,3,2
1419_16,16,16,} catch (GeneralSecurityException | IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.34,4,2
1419_17,17,17,"throw new HTTPClientException(""Error loading certificate from path"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,4,0,0,1,0.48,5,3
1418_1,1,1,throws HTTPClientException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,4,0,0,0,0.3,1,1
1418_2,2,18,"try {
KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());
keyStore.load(null, null);
keyStore.setCertificateEntry(TERMINAL_CERTIFICATE_ALIAS, config.getTerminalCertificate());

TrustManagerFactory trustFactory =
TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());
trustFactory.init(keyStore);
TrustManager[] trustManagers = trustFactory.getTrustManagers();

SSLContext sc = SSLContext.getInstance(SSL);
sc.init(null, trustManagers, new java.security.SecureRandom());

return new SSLConnectionSocketFactory(sc, createHostnameVerifier(config.getEnvironment()));
} catch (GeneralSecurityException | IOException e) {
throw new HTTPClientException(""Error loading certificate from path"", e);
}",0,0,0,0,1,0,0,0,0,11,1,17,0,0,0,0,6,4,0,0,6,0.74,0,0
1418_3,3,3,KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,2,0.62,0,0
1418_4,4,4,"keyStore.load(null, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,2,0.52,1,0
1418_5,5,5,"keyStore.setCertificateEntry(TERMINAL_CERTIFICATE_ALIAS, config.getTerminalCertificate());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,4,0,0,4,0.79,2,1
1418_7,7,8,"TrustManagerFactory trustFactory =
TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,6,4,0,0,0,0.35,4,3
1418_9,9,9,trustFactory.init(keyStore);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,2,0.57,6,4
1418_10,10,10,TrustManager[] trustManagers = trustFactory.getTrustManagers();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,6,4,0,0,0,0.31,7,4
1418_12,12,12,SSLContext sc = SSLContext.getInstance(SSL);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,0,0,0,0.44,9,6
1418_13,13,13,"sc.init(null, trustManagers, new java.security.SecureRandom());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,4,0,0,1,0.44,10,6
1418_15,15,15,"return new SSLConnectionSocketFactory(sc, createHostnameVerifier(config.getEnvironment()));",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,4,0,0,2,0.55,12,8
1418_16,16,16,} catch (GeneralSecurityException | IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.28,13,8
1418_17,17,17,"throw new HTTPClientException(""Error loading certificate from path"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,4,0,0,2,0.52,14,9
1417_1,1,1,"    private HttpUriRequestBase createHttpRequestBase(URI endpoint, String requestBody, ApiConstants.HttpMethod httpMethod) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.59,15,10
1417_2,2,2,StringEntity requestEntity = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.33,14,9
1417_3,3,5,"if (requestBody != null && !requestBody.isEmpty()) {
requestEntity = new StringEntity(requestBody, Charset.forName(CHARSET));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,5,5,0,0,0,0.37,11,7
1417_4,4,4,"requestEntity = new StringEntity(requestBody, Charset.forName(CHARSET));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.37,12,7
1417_7,7,7,switch (httpMethod) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,2,0.7,9,6
1417_8,8,9,"case GET:
return new HttpGet(endpoint);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,1,0.44,7,5
1417_10,10,11,"case PATCH:
HttpPatch httpPatch = new HttpPatch(endpoint);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,5,5,0,0,1,0.52,5,4
1417_12,12,12,httpPatch.setEntity(requestEntity);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.47,4,3
1417_13,13,13,return httpPatch;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.52,3,2
1417_14,14,15,"case DELETE:
return new HttpDelete(endpoint);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,1,0.41,1,1
1417_16,16,17,"default:
HttpPost httpPost = new HttpPost(endpoint);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,5,5,0,0,-1,0.83,0,0
1417_18,18,18,httpPost.setEntity(requestEntity);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.57,1,0
1417_19,19,19,return httpPost;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.68,2,1
1416_1,1,2,"@Override
public String request(String endpoint, String requestBody, Config config, boolean isApiKeyRequired, RequestOptions requestOptions, ApiConstants.HttpMethod httpMethod, Map<String, String> params) throws IOException, HTTPClientException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,0,0,1,0.49,3,2
1416_3,3,12,"try (CloseableHttpClient httpclient = createCloseableHttpClient(config)) {
HttpUriRequestBase httpRequest = createRequest(endpoint, requestBody, config, isApiKeyRequired, requestOptions, httpMethod, params);

AdyenResponse response = httpclient.execute(httpRequest, new AdyenResponseHandler());

if (response.getStatus() < 200 || response.getStatus() >= 300) {
throw new HTTPClientException(response.getStatus(), ""HTTP Exception"", response.getHeaders(), response.getBody());
}
return response.getBody();
}",0,0,0,0,1,0,0,0,0,5,2,10,0,0,0,0,5,4,0,0,4,0.7,0,0
1416_4,4,4,"HttpUriRequestBase httpRequest = createRequest(endpoint, requestBody, config, isApiKeyRequired, requestOptions, httpMethod, params);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,0,0,1,0.52,1,0
1416_6,6,6,"AdyenResponse response = httpclient.execute(httpRequest, new AdyenResponseHandler());",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,4,0,0,4,0.86,0,0
1416_8,8,10,"if (response.getStatus() < 200 || response.getStatus() >= 300) {
throw new HTTPClientException(response.getStatus(), ""HTTP Exception"", response.getHeaders(), response.getBody());
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,1,0,5,4,0,0,1,0.49,2,1
1416_9,9,9,"throw new HTTPClientException(response.getStatus(), ""HTTP Exception"", response.getHeaders(), response.getBody());",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,4,0,0,1,0.49,3,1
1416_11,11,11,return response.getBody();,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,0,5,4,0,0,1,0.46,5,3
1391_1,1,1,    private boolean hasReferences(Set<DataTypeDecl> checkedDecls) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,3,0.66,17,10
1391_2,2,4,"if (isFutureType()) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,5,0,0,1,0.44,14,8
1391_3,3,3,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.16,15,8
1391_6,6,8,"if (checkedDecls.contains(decl)) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,5,5,0,0,1,0.45,10,6
1391_7,7,7,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.22,11,6
1391_9,9,9,checkedDecls.add(decl);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,5,0,0,1,0.5,9,5
1391_11,11,17,"for (Type t : typeArgs) {
if (t.isReferenceType()) {
return true;
} else if (t.isDataType() && ((DataTypeType) t).hasReferences(checkedDecls)) {
return true;
}
}",0,0,0,1,0,0,0,0,0,4,2,7,0,0,1,1,5,5,0,0,3,0.69,1,0
1391_12,12,16,"if (t.isReferenceType()) {
return true;
} else if (t.isDataType() && ((DataTypeType) t).hasReferences(checkedDecls)) {
return true;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,5,5,0,0,3,0.67,2,0
1391_13,13,13,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.16,5,2
1391_14,14,14,} else if (t.isDataType() && ((DataTypeType) t).hasReferences(checkedDecls)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,3,0.72,4,1
1391_15,15,15,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.16,3,0
1391_19,19,28,"for (DataConstructor c : decl.getDataConstructors()) {
for (ConstructorArg arg : c.getConstructorArgs()) {
Type t = arg.getType();
if (t.isReferenceType()) {
return true;
} else if (t.isDataType() && ((DataTypeType) t).hasReferences(checkedDecls)) {
return true;
}
}
}",0,0,0,1,0,0,0,0,0,6,3,10,0,0,1,1,5,5,0,0,4,0.72,0,0
1391_20,20,27,"for (ConstructorArg arg : c.getConstructorArgs()) {
Type t = arg.getType();
if (t.isReferenceType()) {
return true;
} else if (t.isDataType() && ((DataTypeType) t).hasReferences(checkedDecls)) {
return true;
}
}",0,0,0,1,0,0,0,0,0,5,2,8,0,0,0,0,5,5,0,0,4,0.73,1,0
1391_21,21,21,Type t = arg.getType();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.61,2,1
1391_22,22,26,"if (t.isReferenceType()) {
return true;
} else if (t.isDataType() && ((DataTypeType) t).hasReferences(checkedDecls)) {
return true;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,5,5,0,0,3,0.67,3,2
1391_23,23,23,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.16,4,3
1391_24,24,24,} else if (t.isDataType() && ((DataTypeType) t).hasReferences(checkedDecls)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,3,0.72,5,4
1391_25,25,25,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.16,6,5
1391_30,30,30,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,5,0,0,0,0.22,11,7
1390_1,1,1,    private boolean hasReferences(Set<DataTypeDecl> checkedDecls) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,3,0.66,9,5
1390_2,2,4,"if (isFutureType()) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,4,1,0,1,0.44,6,3
1390_3,3,3,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.22,7,3
1390_6,6,8,"if (checkedDecls.contains(decl)) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,6,4,1,0,2,0.6,2,1
1390_7,7,7,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.24,3,1
1390_9,9,9,checkedDecls.add(decl);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,1,0,1,0.55,1,0
1390_11,11,17,"for (Type t : typeArgs) {
if (t.isReferenceType()) {
return true;
} else if (t.isDataType() && ((DataTypeType) t).hasReferences(checkedDecls)) {
return true;
}
}",0,0,0,1,0,0,0,0,0,4,2,7,0,0,1,1,6,4,1,0,3,0.72,0,0
1390_12,12,16,"if (t.isReferenceType()) {
return true;
} else if (t.isDataType() && ((DataTypeType) t).hasReferences(checkedDecls)) {
return true;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,6,4,1,0,3,0.65,1,0
1390_13,13,13,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.22,2,1
1390_14,14,14,} else if (t.isDataType() && ((DataTypeType) t).hasReferences(checkedDecls)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,3,0.7,3,2
1390_15,15,15,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.22,4,3
1390_19,19,28,"for (DataConstructor c : decl.getDataConstructors()) {
for (ConstructorArg arg : c.getConstructorArgs()) {
Type t = arg.getType();
if (t.isReferenceType()) {
return true;
} else if (t.isDataType() && ((DataTypeType) t).hasReferences(checkedDecls)) {
return true;
}
}
}",0,0,0,1,0,0,0,0,0,6,3,10,0,0,1,1,6,4,1,0,3,0.67,8,5
1390_20,20,27,"for (ConstructorArg arg : c.getConstructorArgs()) {
Type t = arg.getType();
if (t.isReferenceType()) {
return true;
} else if (t.isDataType() && ((DataTypeType) t).hasReferences(checkedDecls)) {
return true;
}
}",0,0,0,1,0,0,0,0,0,5,2,8,0,0,0,0,6,4,1,0,3,0.7,9,5
1390_21,21,21,Type t = arg.getType();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.65,10,6
1390_22,22,26,"if (t.isReferenceType()) {
return true;
} else if (t.isDataType() && ((DataTypeType) t).hasReferences(checkedDecls)) {
return true;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,6,4,1,0,3,0.65,11,7
1390_23,23,23,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.22,12,8
1390_24,24,24,} else if (t.isDataType() && ((DataTypeType) t).hasReferences(checkedDecls)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,3,0.7,13,9
1390_25,25,25,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.22,14,10
1390_30,30,30,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,4,1,0,0,0.24,19,12
1361_1,1,2,"    @Override
protected void onCreate(Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,0,0.44,24,14
1361_3,3,3,super.onCreate(savedInstanceState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,5,0,0,0,0.35,23,13
1361_5,5,5,Intent intent = getIntent();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,0,0.52,21,12
1361_6,6,10,"if (intent.getStringExtra(WizardManagerHelper.EXTRA_THEME) == null) {
intent.putExtra(
WizardManagerHelper.EXTRA_THEME,
SetupWizardUtils.getThemeString(intent));
}",1,0,0,0,0,0,0,0,0,1,1,5,0,1,0,1,5,5,0,0,1,0.57,16,10
1361_7,7,9,"intent.putExtra(
WizardManagerHelper.EXTRA_THEME,
SetupWizardUtils.getThemeString(intent));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,5,5,0,0,1,0.58,17,10
1361_12,12,12,mBiometricUnlockDisabledByAdmin = isDisabledByAdmin();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,5,0,0,0,0.46,14,9
1361_14,14,14,setContentView(getLayoutResource());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,0,0.31,12,8
1361_15,15,19,"if (mBiometricUnlockDisabledByAdmin) {
setHeaderText(getHeaderResDisabledByAdmin());
} else {
setHeaderText(getHeaderResDefault());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,1,5,5,0,0,0,0.43,7,4
1361_16,16,16,setHeaderText(getHeaderResDisabledByAdmin());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.42,10,6
1361_17,17,17,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.26,9,5
1361_18,18,18,setHeaderText(getHeaderResDefault());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.35,8,4
1361_21,21,21,mErrorText = getErrorTextView();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,5,0,0,0,0.28,5,3
1361_23,23,23,mUserManager = UserManager.get(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,0,0.34,3,2
1361_24,24,24,updatePasswordQuality();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,5,0,0,1,0.54,2,1
1361_26,26,32,"if (!mHasPassword) {
mConfirmingCredentials = true;
launchChooseLock();
} else if (mToken == null) {
mConfirmingCredentials = true;
launchConfirmLock(getConfirmLockTitleResId(), getChallenge());
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,1,0,5,5,0,0,2,0.61,0,0
1361_27,27,27,mConfirmingCredentials = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.51,0,0
1361_28,28,28,launchChooseLock();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.57,1,0
1361_29,29,29,} else if (mToken == null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.34,2,1
1361_30,30,30,mConfirmingCredentials = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.51,3,2
1361_31,31,31,"launchConfirmLock(getConfirmLockTitleResId(), getChallenge());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.49,4,3
1360_1,1,2,"    @Override
protected void onCreate(Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,4,1,0,0,0.41,4,3
1360_3,3,3,super.onCreate(savedInstanceState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,4,1,0,0,0.32,3,2
1360_5,5,5,Intent intent = getIntent();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,4,1,0,2,0.76,1,1
1360_6,6,10,"if (intent.getStringExtra(WizardManagerHelper.EXTRA_THEME) == null) {
intent.putExtra(
WizardManagerHelper.EXTRA_THEME,
SetupWizardUtils.getThemeString(intent));
}",1,0,0,0,0,0,0,0,0,1,1,5,0,1,0,1,7,4,1,0,4,0.69,0,0
1360_7,7,9,"intent.putExtra(
WizardManagerHelper.EXTRA_THEME,
SetupWizardUtils.getThemeString(intent));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,7,4,1,0,4,0.7,0,0
1360_12,12,12,mBiometricUnlockDisabledByAdmin = isDisabledByAdmin();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,4,1,0,0,0.42,5,1
1360_14,14,14,setContentView(getLayoutResource());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,4,1,0,1,0.45,7,2
1360_15,15,19,"if (mBiometricUnlockDisabledByAdmin) {
setHeaderText(getHeaderResDisabledByAdmin());
} else {
setHeaderText(getHeaderResDefault());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,1,7,4,1,0,1,0.5,8,2
1360_16,16,16,setHeaderText(getHeaderResDisabledByAdmin());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.46,9,3
1360_17,17,17,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.19,10,4
1360_18,18,18,setHeaderText(getHeaderResDefault());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.43,11,5
1360_21,21,21,mErrorText = getErrorTextView();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,4,1,0,1,0.5,14,7
1360_23,23,23,mUserManager = UserManager.get(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,4,1,0,1,0.4,16,8
1360_24,24,24,updatePasswordQuality();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,4,1,0,0,0.35,17,8
1360_26,26,32,"if (!mHasPassword) {
mConfirmingCredentials = true;
launchChooseLock();
} else if (mToken == null) {
mConfirmingCredentials = true;
launchConfirmLock(getConfirmLockTitleResId(), getChallenge());
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,1,0,7,4,1,0,1,0.52,19,10
1360_27,27,27,mConfirmingCredentials = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.34,20,10
1360_28,28,28,launchChooseLock();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.49,21,11
1360_29,29,29,} else if (mToken == null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.28,22,12
1360_30,30,30,mConfirmingCredentials = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.34,23,13
1360_31,31,31,"launchConfirmLock(getConfirmLockTitleResId(), getChallenge());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.57,24,14
1334_1,1,1,"private void assambleApnsClientBuilderForCertificate(final iOSVariant iOSVariant, final ApnsClientBuilder builder) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.53,3,1
1334_3,3,26,"if (iOSVariant.getCertificate() != null && iOSVariant.getPassphrase() != null) {

try (final ByteArrayInputStream stream = new ByteArrayInputStream(iOSVariant.getCertificate())) {

builder.setClientCredentials(stream, iOSVariant.getPassphrase());

if (ProxyConfiguration.hasHttpProxyConfig()) {
if (ProxyConfiguration.hasBasicAuth()) {
String user = ProxyConfiguration.getProxyUser();
String pass = ProxyConfiguration.getProxyPass();
builder.setProxyHandlerFactory(
new HttpProxyHandlerFactory(ProxyConfiguration.proxyAddress(), user, pass));
} else {
builder.setProxyHandlerFactory(new HttpProxyHandlerFactory(ProxyConfiguration.proxyAddress()));
}

} else if (ProxyConfiguration.hasSocksProxyConfig()) {
builder.setProxyHandlerFactory(new Socks5ProxyHandlerFactory(ProxyConfiguration.socks()));
}
return;
} catch (Exception e) {
logger.error(""Error reading certificate"", e);
}
}",1,0,0,0,0,0,0,0,0,14,4,24,0,0,1,0,2,1,1,0,1,0.5,0,0
1334_5,5,25,"try (final ByteArrayInputStream stream = new ByteArrayInputStream(iOSVariant.getCertificate())) {

builder.setClientCredentials(stream, iOSVariant.getPassphrase());

if (ProxyConfiguration.hasHttpProxyConfig()) {
if (ProxyConfiguration.hasBasicAuth()) {
String user = ProxyConfiguration.getProxyUser();
String pass = ProxyConfiguration.getProxyPass();
builder.setProxyHandlerFactory(
new HttpProxyHandlerFactory(ProxyConfiguration.proxyAddress(), user, pass));
} else {
builder.setProxyHandlerFactory(new HttpProxyHandlerFactory(ProxyConfiguration.proxyAddress()));
}

} else if (ProxyConfiguration.hasSocksProxyConfig()) {
builder.setProxyHandlerFactory(new Socks5ProxyHandlerFactory(ProxyConfiguration.socks()));
}
return;
} catch (Exception e) {
logger.error(""Error reading certificate"", e);
}",0,0,0,0,1,0,0,0,0,13,3,21,0,0,1,0,2,1,1,0,1,0.49,0,0
1334_7,7,7,"builder.setClientCredentials(stream, iOSVariant.getPassphrase());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,1,1,0,0,0.38,2,1
1334_9,9,21,"if (ProxyConfiguration.hasHttpProxyConfig()) {
if (ProxyConfiguration.hasBasicAuth()) {
String user = ProxyConfiguration.getProxyUser();
String pass = ProxyConfiguration.getProxyPass();
builder.setProxyHandlerFactory(
new HttpProxyHandlerFactory(ProxyConfiguration.proxyAddress(), user, pass));
} else {
builder.setProxyHandlerFactory(new HttpProxyHandlerFactory(ProxyConfiguration.proxyAddress()));
}

} else if (ProxyConfiguration.hasSocksProxyConfig()) {
builder.setProxyHandlerFactory(new Socks5ProxyHandlerFactory(ProxyConfiguration.socks()));
}",1,0,0,0,0,0,0,0,0,8,2,13,0,0,1,0,2,1,1,0,0,0.32,4,2
1334_10,10,17,"if (ProxyConfiguration.hasBasicAuth()) {
String user = ProxyConfiguration.getProxyUser();
String pass = ProxyConfiguration.getProxyPass();
builder.setProxyHandlerFactory(
new HttpProxyHandlerFactory(ProxyConfiguration.proxyAddress(), user, pass));
} else {
builder.setProxyHandlerFactory(new HttpProxyHandlerFactory(ProxyConfiguration.proxyAddress()));
}",1,0,0,0,0,0,0,0,0,5,1,8,0,0,0,1,2,1,1,0,0,0.33,5,2
1334_11,11,11,String user = ProxyConfiguration.getProxyUser();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.29,6,3
1334_12,12,12,String pass = ProxyConfiguration.getProxyPass();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.24,7,4
1334_13,13,14,"builder.setProxyHandlerFactory(
new HttpProxyHandlerFactory(ProxyConfiguration.proxyAddress(), user, pass));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,2,1,1,0,0,0.31,8,5
1334_15,15,15,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.12,10,7
1334_16,16,16,builder.setProxyHandlerFactory(new HttpProxyHandlerFactory(ProxyConfiguration.proxyAddress()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.3,11,7
1334_19,19,19,} else if (ProxyConfiguration.hasSocksProxyConfig()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.15,14,9
1334_20,20,20,builder.setProxyHandlerFactory(new Socks5ProxyHandlerFactory(ProxyConfiguration.socks()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.3,15,9
1334_22,22,22,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.11,17,11
1334_23,23,23,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.29,18,11
1334_24,24,24,"logger.error(""Error reading certificate"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.6,19,12
1334_27,27,27,"throw new IllegalArgumentException(""Not able to construct APNS client"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,1,1,0,0,0.37,22,14
1333_1,1,1,"private String createPushPayload(final Message message, final String pushMessageInformationId) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.45,3,2
1333_2,2,2,final ApnsPayloadBuilder payloadBuilder = new ApnsPayloadBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.53,2,1
1333_3,3,3,final APNs apns = message.getApns();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,3,2,0,0,0.44,1,0
1333_5,5,7,"if (message.getBadge() >= 0) {
payloadBuilder.setBadgeNumber(message.getBadge());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,3,2,0,3,0.64,0,0
1333_6,6,6,payloadBuilder.setBadgeNumber(message.getBadge());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,3,0.67,1,0
1333_9,9,9,"payloadBuilder.addCustomProperty(InternalUnifiedPushMessage.PUSH_MESSAGE_ID, pushMessageInformationId)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,2,0,1,0.45,4,2
1333_10,10,10,.setAlertBody(message.getAlert()).setSoundFileName(message.getSound()).setAlertTitle(apns.getTitle()),0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,1,0.52,5,2
1333_11,11,11,.setActionButtonLabel(apns.getAction()).setUrlArguments(apns.getUrlArgs()),0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,1,0.52,6,3
1333_12,12,12,.setCategoryName(apns.getActionCategory()).setContentAvailable(apns.isContentAvailable()),0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,1,0.49,7,4
1333_13,13,13,.setMutableContent(apns.hasMutableContent());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,3,2,0,1,0.56,8,5
1333_15,15,15,"final Map<String, Object> userData = message.getUserData();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,2,0,1,0.49,10,7
1333_16,16,18,"for (Map.Entry<String, Object> entry : userData.entrySet()) {
payloadBuilder.addCustomProperty(entry.getKey(), entry.getValue());
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,6,3,2,0,3,0.58,11,7
1333_17,17,17,"payloadBuilder.addCustomProperty(entry.getKey(), entry.getValue());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.45,12,8
1333_20,20,20,return payloadBuilder.buildWithDefaultMaximumLength();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,2,0,1,0.43,15,10
1332_1,1,2,"    private void handlePushNotificationResponsePerToken(
final PushNotificationResponse<SimpleApnsPushNotification> pushNotificationResponse) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,0,0,1,0.47,10,6
1332_4,4,4,final String deviceToken = pushNotificationResponse.getPushNotification().getToken();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,0,0,1,0.48,8,5
1332_6,6,18,"if (pushNotificationResponse.isAccepted()) {
logger.trace(""Push notification for '{}' (payload={})"", deviceToken,
pushNotificationResponse.getPushNotification().getPayload());
} else {
final String rejectReason = pushNotificationResponse.getRejectionReason();
logger.trace(""Push Message has been rejected with reason: {}"", rejectReason);

if ((pushNotificationResponse.getTokenInvalidationTimestamp() != null) || (""BadDeviceToken"".equals(rejectReason))) {
logger.info(rejectReason + "", removing token: "" + deviceToken);

invalidTokens.add(deviceToken);
}
}",1,0,0,0,0,0,0,0,0,7,2,13,0,0,1,0,4,2,0,0,2,0.62,0,0
1332_7,7,8,"logger.trace(""Push notification for '{}' (payload={})"", deviceToken,
pushNotificationResponse.getPushNotification().getPayload());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,0,0,1,0.51,4,3
1332_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.31,3,2
1332_10,10,10,final String rejectReason = pushNotificationResponse.getRejectionReason();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.39,2,1
1332_11,11,11,"logger.trace(""Push Message has been rejected with reason: {}"", rejectReason);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,0,0.44,1,0
1332_13,13,17,"if ((pushNotificationResponse.getTokenInvalidationTimestamp() != null) || (""BadDeviceToken"".equals(rejectReason))) {
logger.info(rejectReason + "", removing token: "" + deviceToken);

invalidTokens.add(deviceToken);
}",1,0,0,0,0,0,0,0,0,2,1,5,0,0,1,0,4,2,0,0,2,0.66,0,0
1332_14,14,14,"logger.info(rejectReason + "", removing token: "" + deviceToken);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,0,0,1,0.59,1,0
1332_16,16,16,invalidTokens.add(deviceToken);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,2,0.72,3,2
1331_1,1,1,private Date createFutureDateBasedOnTTL(int ttl) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,2,0,1,0.5,3,3
1331_2,2,6,"if (ttl < 0) {
return new Date(System.currentTimeMillis() + SimpleApnsPushNotification.DEFAULT_EXPIRATION_PERIOD_MILLIS);
} else {
return new Date(System.currentTimeMillis() + ttl * 1000L);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,5,1,2,0,3,0.66,0,0
1331_3,3,3,return new Date(System.currentTimeMillis() + SimpleApnsPushNotification.DEFAULT_EXPIRATION_PERIOD_MILLIS);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,1,2,0,2,0.6,1,1
1331_4,4,4,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,2,0,0,0.26,0,0
1331_5,5,5,return new Date(System.currentTimeMillis() + ttl * 1000L);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,1,2,0,3,0.7,0,0
1330_1,1,1,private Date createFutureDateBasedOnTTL(int ttl) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,8,0,0,1,0.5,0,0
1330_2,2,6,"if (ttl < 0) {
return new Date(System.currentTimeMillis() + SimpleApnsPushNotification.DEFAULT_EXPIRATION_PERIOD_MILLIS);
} else {
return new Date(System.currentTimeMillis() + ttl * 1000L);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,8,8,0,0,2,0.56,0,0
1330_3,3,3,return new Date(System.currentTimeMillis() + SimpleApnsPushNotification.DEFAULT_EXPIRATION_PERIOD_MILLIS);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,8,0,0,1,0.51,1,0
1330_4,4,4,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,8,0,0,0,0.24,2,1
1330_5,5,5,return new Date(System.currentTimeMillis() + ttl * 1000L);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,8,0,0,1,0.5,3,2
1329_1,1,1,"    private void handleCertificateVariant(iOSVariant iOSVariant, NotificationSenderCallback senderCallback, UnifiedPushMessage pushMessage, String pushMessageInformationId, Collection<String> tokens) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.48,0,0
1329_2,2,5,"if (!ApnsUtil.checkValidity(iOSVariant.getCertificate(), iOSVariant.getPassphrase().toCharArray())) {
senderCallback.onError(""The provided certificate is invalid or expired for variant "" + iOSVariant.getId());
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,3,2,0,0,2,0.61,0,0
1329_3,3,3,"senderCallback.onError(""The provided certificate is invalid or expired for variant "" + iOSVariant.getId());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.5,1,0
1329_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.15,2,1
1329_7,7,7,final String payload;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.35,5,3
1329_9,9,15,"try {
payload = createPushPayload(pushMessage.getMessage(), pushMessageInformationId);
} catch (IllegalArgumentException iae) {
logger.info(iae.getMessage(), iae);
senderCallback.onError(""Nothing sent to APNs since the payload is too large"");
return;
}",0,0,0,0,1,0,0,0,0,5,1,7,0,0,0,0,3,2,0,0,0,0.4,7,4
1329_10,10,10,"payload = createPushPayload(pushMessage.getMessage(), pushMessageInformationId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.34,8,4
1329_11,11,11,} catch (IllegalArgumentException iae) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,9,5
1329_12,12,12,"logger.info(iae.getMessage(), iae);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.32,10,6
1329_13,13,13,"senderCallback.onError(""Nothing sent to APNs since the payload is too large"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.41,11,7
1329_14,14,14,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.15,12,8
1329_18,18,18,final ApnsClient apnsClient;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.23,16,10
1329_20,20,26,"try {
apnsClient = receiveApnsConnection(iOSVariant);
} catch (IllegalArgumentException iae) {
logger.error(iae.getMessage(), iae);
senderCallback.onError(String.format(""Unable to connect to APNs (%s))"", iae.getMessage()));
return;
}",0,0,0,0,1,0,0,0,0,5,1,7,0,0,0,0,3,2,0,0,0,0.39,18,11
1329_21,21,21,apnsClient = receiveApnsConnection(iOSVariant);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,19,11
1329_22,22,22,} catch (IllegalArgumentException iae) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,20,12
1329_23,23,23,"logger.error(iae.getMessage(), iae);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,0,0.38,21,13
1329_24,24,24,"senderCallback.onError(String.format(""Unable to connect to APNs (%s))"", iae.getMessage()));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,0,0.4,22,14
1329_25,25,25,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.15,23,15
1329_29,29,59,"if (apnsClient != null) {

PrometheusExporter.instance().increaseTotalPushIosRequests();

senderCallback.onSuccess();

final String defaultApnsTopic = ApnsUtil.readDefaultTopic(iOSVariant.getCertificate(),
iOSVariant.getPassphrase().toCharArray());
Date expireDate = createFutureDateBasedOnTTL(pushMessage.getConfig().getTimeToLive());
logger.debug(""sending payload for all tokens for {} to APNs ({})"", iOSVariant.getVariantID(), defaultApnsTopic);

tokens.forEach(token -> {
final SimpleApnsPushNotification pushNotification = new SimpleApnsPushNotification(token,
defaultApnsTopic, payload, expireDate, DeliveryPriority.IMMEDIATE,
determinePushType(pushMessage.getMessage()), null, null);
final Future<PushNotificationResponse<SimpleApnsPushNotification>> notificationSendFuture = apnsClient
.sendNotification(pushNotification);

notificationSendFuture.addListener(future -> {

if (future.isSuccess()) {
handlePushNotificationResponsePerToken(notificationSendFuture.get());
}
});
});

} else {
logger.error(""Unable to send notifications, client is not connected. Removing from cache pool"");
senderCallback.onError(""Unable to send notifications, client is not connected"");
variantUpdateEventEvent.fire(new APNSVariantUpdateEvent(iOSVariant));
}",1,0,0,0,0,0,0,0,0,15,4,31,0,0,1,0,3,2,0,0,1,0.48,27,17
1329_31,31,31,PrometheusExporter.instance().increaseTotalPushIosRequests();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.27,29,18
1329_33,33,33,senderCallback.onSuccess();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.31,31,19
1329_35,35,36,"final String defaultApnsTopic = ApnsUtil.readDefaultTopic(iOSVariant.getCertificate(),
iOSVariant.getPassphrase().toCharArray());",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,0,3,2,0,0,1,0.47,33,20
1329_37,37,37,Date expireDate = createFutureDateBasedOnTTL(pushMessage.getConfig().getTimeToLive());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,35,21
1329_38,38,38,"logger.debug(""sending payload for all tokens for {} to APNs ({})"", iOSVariant.getVariantID(), defaultApnsTopic);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.39,36,21
1329_40,40,40,tokens.forEach(token -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.36,38,23
1329_41,41,43,"final SimpleApnsPushNotification pushNotification = new SimpleApnsPushNotification(token,
defaultApnsTopic, payload, expireDate, DeliveryPriority.IMMEDIATE,
determinePushType(pushMessage.getMessage()), null, null);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,3,2,0,0,0,0.38,39,23
1329_44,44,45,"final Future<PushNotificationResponse<SimpleApnsPushNotification>> notificationSendFuture = apnsClient
.sendNotification(pushNotification);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,1,3,2,0,0,0,0.31,42,25
1329_47,47,47,notificationSendFuture.addListener(future -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.31,45,26
1329_49,49,51,"if (future.isSuccess()) {
handlePushNotificationResponsePerToken(notificationSendFuture.get());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,2,0,0,0,0.31,47,27
1329_50,50,50,handlePushNotificationResponsePerToken(notificationSendFuture.get());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,48,27
1329_55,55,55,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,53,29
1329_56,56,56,"logger.error(""Unable to send notifications, client is not connected. Removing from cache pool"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.38,54,29
1329_57,57,57,"senderCallback.onError(""Unable to send notifications, client is not connected"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.36,55,30
1329_58,58,58,variantUpdateEventEvent.fire(new APNSVariantUpdateEvent(iOSVariant));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,56,31
1328_1,1,3,"    @Override
public void sendPushMessage(final Variant variant, final Collection<String> tokens, final UnifiedPushMessage pushMessage,
final String pushMessageInformationId, final NotificationSenderCallback senderCallback) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,4,1,1,0,1,0.44,0,0
1328_4,4,6,"if (tokens.isEmpty()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,1,1,0,1,0.48,0,0
1328_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.27,1,0
1328_8,8,8,final iOSVariant apnsVariant = (iOSVariant) variant;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,1,1,0,0,0.29,4,2
1328_10,10,10,"handleCertificateVariant(apnsVariant, senderCallback, pushMessage, pushMessageInformationId, tokens);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,1,1,0,0,0.35,6,3
1244_1,1,1,protected void searchWebFor(String... keys) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,10,0,0,2,0.6,9,7
1244_2,2,2,StringBuilder stringBuilder = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,14,10,0,0,0,0.32,8,6
1244_3,3,6,"for (String key : keys) {
stringBuilder.append(key);
stringBuilder.append("" "");
}",0,0,0,1,0,0,0,0,0,2,1,4,0,1,0,0,14,10,0,0,0,0.35,4,3
1244_4,4,4,stringBuilder.append(key);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,14,10,0,0,0,0.35,6,4
1244_5,5,5,"stringBuilder.append("" "");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,14,10,0,0,0,0.33,5,3
1244_7,7,7,Intent intent = new Intent(Intent.ACTION_WEB_SEARCH);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,14,10,0,0,4,0.8,3,2
1244_8,8,8,"intent.putExtra(SearchManager.QUERY, stringBuilder.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,14,10,0,0,2,0.58,2,1
1244_9,9,9,intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,14,10,0,0,1,0.52,1,0
1244_11,11,19,"if (Intent.ACTION_WEB_SEARCH.equals(intent.getAction()) && intent.getExtras() != null) {
String query = intent.getExtras().getString(SearchManager.QUERY, null);
Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(""https://www.google.com/search?q=""+Uri.encode(query)));
boolean browserExists = intent.resolveActivityInfo(getPackageManager(), 0) != null;
if (browserExists && query != null) {
startActivity(browserIntent);
return;
}
}",1,0,0,0,0,0,0,0,0,6,2,9,0,0,1,1,14,10,0,0,7,0.75,0,0
1244_12,12,12,"String query = intent.getExtras().getString(SearchManager.QUERY, null);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,14,10,0,0,2,0.55,1,0
1244_13,13,13,"Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(""https://www.google.com/search?q=""+Uri.encode(query)));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,14,10,0,0,5,0.76,2,1
1244_14,14,14,"boolean browserExists = intent.resolveActivityInfo(getPackageManager(), 0) != null;",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,14,10,0,0,1,0.52,3,2
1244_15,15,18,"if (browserExists && query != null) {
startActivity(browserIntent);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,14,10,0,0,2,0.59,4,3
1244_16,16,16,startActivity(browserIntent);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,10,0,0,2,0.68,5,4
1244_17,17,17,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,14,10,0,0,0,0.29,6,5
1244_21,21,21,"Toast.makeText(this, R.string.error_no_app_for_intent, Toast.LENGTH_LONG).show();",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,14,10,0,0,1,0.53,10,7
1232_1,1,3,"@Override
public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs,
String sortOrder) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,4,3,1,0,1,0.5,45,31
1232_4,4,4,SQLiteDatabase db = mOpenHelper.getReadableDatabase();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,1,0,0,0.37,44,30
1232_6,6,25,"if (mUriMatcher.match(uri) == URI_MATCH_SUGGEST) {
String suggestSelection;
String[] myArgs;
if (TextUtils.isEmpty(selectionArgs[0])) {
suggestSelection = null;
myArgs = null;
} else {
String like = ""%"" + selectionArgs[0] + ""%"";
if (mTwoLineDisplay) {
myArgs = new String [] { like, like };
} else {
myArgs = new String [] { like };
}
suggestSelection = mSuggestSuggestionClause;
}
Cursor c = db.query(sSuggestions, mSuggestionProjection,
suggestSelection, myArgs, null, null, ORDER_BY, null);
c.setNotificationUri(getContext().getContentResolver(), uri);
return c;
}",1,0,0,0,0,0,0,0,0,15,4,20,0,0,1,1,4,3,1,0,1,0.46,23,14
1232_7,7,7,String suggestSelection;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.57,41,28
1232_8,8,8,String[] myArgs;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.34,40,27
1232_9,9,20,"if (TextUtils.isEmpty(selectionArgs[0])) {
suggestSelection = null;
myArgs = null;
} else {
String like = ""%"" + selectionArgs[0] + ""%"";
if (mTwoLineDisplay) {
myArgs = new String [] { like, like };
} else {
myArgs = new String [] { like };
}
suggestSelection = mSuggestSuggestionClause;
}",1,0,0,0,0,0,0,0,0,9,3,12,0,1,0,0,4,3,1,0,1,0.47,28,17
1232_10,10,10,suggestSelection = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.54,38,25
1232_11,11,11,myArgs = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.29,37,24
1232_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.24,36,23
1232_13,13,13,"String like = ""%"" + selectionArgs[0] + ""%"";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.48,35,22
1232_14,14,18,"if (mTwoLineDisplay) {
myArgs = new String [] { like, like };
} else {
myArgs = new String [] { like };
}",1,0,0,0,0,0,0,0,0,3,2,5,0,1,0,0,4,3,1,0,0,0.28,30,18
1232_15,15,15,"myArgs = new String [] { like, like };",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.28,33,20
1232_16,16,16,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.24,32,19
1232_17,17,17,myArgs = new String [] { like };,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.29,31,18
1232_19,19,19,suggestSelection = mSuggestSuggestionClause;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.53,29,17
1232_21,21,22,"Cursor c = db.query(sSuggestions, mSuggestionProjection,
suggestSelection, myArgs, null, null, ORDER_BY, null);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,3,1,0,1,0.47,26,16
1232_23,23,23,"c.setNotificationUri(getContext().getContentResolver(), uri);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.29,25,15
1232_24,24,24,return c;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.27,24,14
1232_27,27,27,int length = uri.getPathSegments().size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,1,0,0,0.23,21,13
1232_28,28,30,"if (length != 1 && length != 2) {
throw new IllegalArgumentException(""Unknown Uri"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,4,3,1,0,0,0.29,18,11
1232_29,29,29,"throw new IllegalArgumentException(""Unknown Uri"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,1,0,0,0.29,19,11
1232_32,32,32,String base = uri.getPathSegments().get(0);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,1,0,0,0.25,16,10
1232_33,33,35,"if (!base.equals(sSuggestions)) {
throw new IllegalArgumentException(""Unknown Uri"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,4,3,1,0,0,0.33,13,8
1232_34,34,34,"throw new IllegalArgumentException(""Unknown Uri"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,1,0,0,0.29,14,8
1232_37,37,37,String[] useProjection = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,1,0,0,0.27,11,7
1232_38,38,42,"if (projection != null && projection.length > 0) {
useProjection = new String[projection.length + 1];
System.arraycopy(projection, 0, useProjection, 0, projection.length);
useProjection[projection.length] = ""_id AS _id"";
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,1,4,3,1,0,0,0.36,6,3
1232_39,39,39,useProjection = new String[projection.length + 1];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.26,9,5
1232_40,40,40,"System.arraycopy(projection, 0, useProjection, 0, projection.length);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.38,8,4
1232_41,41,41,"useProjection[projection.length] = ""_id AS _id"";",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.29,7,3
1232_44,44,44,StringBuilder whereClause = new StringBuilder(256);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,1,0,0,0.29,4,2
1232_45,45,47,"if (length == 2) {
whereClause.append(""(_id = "").append(uri.getPathSegments().get(1)).append("")"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,4,3,1,0,0,0.31,1,0
1232_46,46,46,"whereClause.append(""(_id = "").append(uri.getPathSegments().get(1)).append("")"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.31,2,0
1232_49,49,57,"if (selection != null && selection.length() > 0) {
if (whereClause.length() > 0) {
whereClause.append("" AND "");
}

whereClause.append('(');
whereClause.append(selection);
whereClause.append(')');
}",1,0,0,0,0,0,0,0,0,5,2,9,0,0,1,1,4,3,1,0,1,0.48,0,0
1232_50,50,52,"if (whereClause.length() > 0) {
whereClause.append("" AND "");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,3,1,0,0,0.31,1,0
1232_51,51,51,"whereClause.append("" AND "");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.33,2,1
1232_54,54,54,whereClause.append('(');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,4,3,1,0,0,0.33,5,3
1232_55,55,55,whereClause.append(selection);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,1,0,1,0.54,6,3
1232_56,56,56,whereClause.append(')');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,1,0,0,0.33,7,4
1232_59,59,61,"Cursor c = db.query(base, useProjection, whereClause.toString(),
selectionArgs, null, null, sortOrder,
null);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,1,0,4,3,1,0,1,0.44,10,6
1232_62,62,62,"c.setNotificationUri(getContext().getContentResolver(), uri);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.29,13,7
1232_63,63,63,return c;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.27,14,7
1231_1,1,3,"@Override
public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs,
String sortOrder) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,6,3,0,0,2,0.53,17,14
1231_4,4,4,SQLiteDatabase db = mOpenHelper.getReadableDatabase();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,3,0,0,0,0.33,16,13
1231_6,6,25,"if (mUriMatcher.match(uri) == URI_MATCH_SUGGEST) {
String suggestSelection;
String[] myArgs;
if (TextUtils.isEmpty(selectionArgs[0])) {
suggestSelection = null;
myArgs = null;
} else {
String like = ""%"" + selectionArgs[0] + ""%"";
if (mTwoLineDisplay) {
myArgs = new String [] { like, like };
} else {
myArgs = new String [] { like };
}
suggestSelection = mSuggestSuggestionClause;
}
Cursor c = db.query(sSuggestions, mSuggestionProjection,
suggestSelection, myArgs, null, null, ORDER_BY, null);
c.setNotificationUri(getContext().getContentResolver(), uri);
return c;
}",1,0,0,0,0,0,0,0,0,15,4,20,0,0,1,1,6,3,0,0,2,0.54,0,0
1231_7,7,7,String suggestSelection;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.52,13,11
1231_8,8,8,String[] myArgs;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.34,12,10
1231_9,9,20,"if (TextUtils.isEmpty(selectionArgs[0])) {
suggestSelection = null;
myArgs = null;
} else {
String like = ""%"" + selectionArgs[0] + ""%"";
if (mTwoLineDisplay) {
myArgs = new String [] { like, like };
} else {
myArgs = new String [] { like };
}
suggestSelection = mSuggestSuggestionClause;
}",1,0,0,0,0,0,0,0,0,9,3,12,0,1,0,0,6,3,0,0,1,0.44,0,0
1231_10,10,10,suggestSelection = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.5,10,8
1231_11,11,11,myArgs = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.33,9,7
1231_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.29,8,6
1231_13,13,13,"String like = ""%"" + selectionArgs[0] + ""%"";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.33,7,5
1231_14,14,18,"if (mTwoLineDisplay) {
myArgs = new String [] { like, like };
} else {
myArgs = new String [] { like };
}",1,0,0,0,0,0,0,0,0,3,2,5,0,1,0,0,6,3,0,0,0,0.33,2,1
1231_15,15,15,"myArgs = new String [] { like, like };",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.28,5,3
1231_16,16,16,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.29,4,2
1231_17,17,17,myArgs = new String [] { like };,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.29,3,1
1231_19,19,19,suggestSelection = mSuggestSuggestionClause;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.59,1,0
1231_21,21,22,"Cursor c = db.query(sSuggestions, mSuggestionProjection,
suggestSelection, myArgs, null, null, ORDER_BY, null);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,6,3,0,0,2,0.59,0,0
1231_23,23,23,"c.setNotificationUri(getContext().getContentResolver(), uri);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.31,2,1
1231_24,24,24,return c;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.31,3,1
1231_27,27,27,int length = uri.getPathSegments().size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,0,0,0,0.3,6,3
1231_28,28,30,"if (length != 1 && length != 2) {
throw new IllegalArgumentException(""Unknown Uri"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,6,3,0,0,0,0.29,7,3
1231_29,29,29,"throw new IllegalArgumentException(""Unknown Uri"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,3,0,0,0,0.31,8,4
1231_32,32,32,String base = uri.getPathSegments().get(0);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,0,0,0,0.31,11,6
1231_33,33,35,"if (!base.equals(sSuggestions)) {
throw new IllegalArgumentException(""Unknown Uri"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,6,3,0,0,1,0.43,12,6
1231_34,34,34,"throw new IllegalArgumentException(""Unknown Uri"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,3,0,0,0,0.31,13,7
1231_37,37,37,String[] useProjection = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,0,0,0,0.37,16,9
1231_38,38,42,"if (projection != null && projection.length > 0) {
useProjection = new String[projection.length + 1];
System.arraycopy(projection, 0, useProjection, 0, projection.length);
useProjection[projection.length] = ""_id AS _id"";
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,1,6,3,0,0,0,0.36,17,9
1231_39,39,39,useProjection = new String[projection.length + 1];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.33,18,10
1231_40,40,40,"System.arraycopy(projection, 0, useProjection, 0, projection.length);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.37,19,11
1231_41,41,41,"useProjection[projection.length] = ""_id AS _id"";",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.34,20,12
1231_44,44,44,StringBuilder whereClause = new StringBuilder(256);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,0,0,0,0.31,23,14
1231_45,45,47,"if (length == 2) {
whereClause.append(""(_id = "").append(uri.getPathSegments().get(1)).append("")"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,6,3,0,0,0,0.32,24,14
1231_46,46,46,"whereClause.append(""(_id = "").append(uri.getPathSegments().get(1)).append("")"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.33,25,15
1231_49,49,57,"if (selection != null && selection.length() > 0) {
if (whereClause.length() > 0) {
whereClause.append("" AND "");
}

whereClause.append('(');
whereClause.append(selection);
whereClause.append(')');
}",1,0,0,0,0,0,0,0,0,5,2,9,0,0,1,1,6,3,0,0,0,0.34,28,17
1231_50,50,52,"if (whereClause.length() > 0) {
whereClause.append("" AND "");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,3,0,0,0,0.27,29,17
1231_51,51,51,"whereClause.append("" AND "");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.33,30,18
1231_54,54,54,whereClause.append('(');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,6,3,0,0,0,0.33,33,20
1231_55,55,55,whereClause.append(selection);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,0,0,0,0.37,34,20
1231_56,56,56,whereClause.append(')');,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,0,0,0,0.33,35,21
1231_59,59,61,"Cursor c = db.query(base, useProjection, whereClause.toString(),
selectionArgs, null, null, sortOrder,
null);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,1,0,6,3,0,0,2,0.52,38,23
1231_62,62,62,"c.setNotificationUri(getContext().getContentResolver(), uri);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.31,41,24
1231_63,63,63,return c;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.31,42,24
1230_1,1,2,"public static SearchableInfo getActivityMetaData(Context context, ActivityInfo activityInfo,
int userId) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,1,0,0,0.37,8,6
1230_3,3,3,Context userContext = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.22,7,5
1230_4,4,10,"try {
userContext = context.createPackageContextAsUser(""system"", 0,
new UserHandle(userId));
} catch (NameNotFoundException nnfe) {
Log.e(LOG_TAG, ""Couldn't create package context for user "" + userId);
return null;
}",0,0,0,0,1,0,0,0,0,4,1,7,0,1,0,0,4,3,1,0,1,0.42,0,0
1230_5,5,6,"userContext = context.createPackageContextAsUser(""system"", 0,
new UserHandle(userId));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,1,0,0,0.31,4,3
1230_7,7,7,} catch (NameNotFoundException nnfe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.41,3,2
1230_8,8,8,"Log.e(LOG_TAG, ""Couldn't create package context for user "" + userId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.34,2,1
1230_9,9,9,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.24,1,0
1230_11,11,12,"XmlResourceParser xml =
activityInfo.loadXmlMetaData(userContext.getPackageManager(), MD_LABEL_SEARCHABLE);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,3,1,0,0,0.42,0,0
1230_13,13,15,"if (xml == null) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,1,0,0,0.32,2,1
1230_14,14,14,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.24,3,1
1230_16,16,16,"ComponentName cName = new ComponentName(activityInfo.packageName, activityInfo.name);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,1,0,1,0.43,5,3
1230_18,18,18,"SearchableInfo searchable = getActivityMetaData(userContext, xml, cName);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,1,0,0,0.4,7,4
1230_19,19,19,xml.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,1,0,0,0.33,8,4
1230_21,21,34,"if (DBG) {
if (searchable != null) {
Log.d(LOG_TAG, ""Checked "" + activityInfo.name
+ "",label="" + searchable.getLabelId()
+ "",icon="" + searchable.getIconId()
+ "",suggestAuthority="" + searchable.getSuggestAuthority()
+ "",target="" + searchable.getSearchActivity().getClassName()
+ "",global="" + searchable.shouldIncludeInGlobalSearch()
+ "",settingsDescription="" + searchable.getSettingsDescriptionId()
+ "",threshold="" + searchable.getSuggestThreshold());
} else {
Log.d(LOG_TAG, ""Checked "" + activityInfo.name + "", no searchable meta-data"");
}
}",1,0,0,0,0,0,0,0,0,10,2,14,0,1,1,0,4,3,1,0,0,0.42,10,6
1230_22,22,33,"if (searchable != null) {
Log.d(LOG_TAG, ""Checked "" + activityInfo.name
+ "",label="" + searchable.getLabelId()
+ "",icon="" + searchable.getIconId()
+ "",suggestAuthority="" + searchable.getSuggestAuthority()
+ "",target="" + searchable.getSearchActivity().getClassName()
+ "",global="" + searchable.shouldIncludeInGlobalSearch()
+ "",settingsDescription="" + searchable.getSettingsDescriptionId()
+ "",threshold="" + searchable.getSuggestThreshold());
} else {
Log.d(LOG_TAG, ""Checked "" + activityInfo.name + "", no searchable meta-data"");
}",1,0,0,0,0,0,0,0,0,9,1,12,0,0,0,0,4,3,1,0,0,0.41,11,6
1230_23,23,24,"Log.d(LOG_TAG, ""Checked "" + activityInfo.name
+ "",label="" + searchable.getLabelId()",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,3,1,0,0,0.4,12,7
1230_25,25,25,"+ "",icon="" + searchable.getIconId()",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.42,14,9
1230_26,26,26,"+ "",suggestAuthority="" + searchable.getSuggestAuthority()",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.43,15,9
1230_27,27,27,"+ "",target="" + searchable.getSearchActivity().getClassName()",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.38,16,10
1230_28,28,28,"+ "",global="" + searchable.shouldIncludeInGlobalSearch()",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.37,17,11
1230_29,29,29,"+ "",settingsDescription="" + searchable.getSettingsDescriptionId()",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.39,18,12
1230_30,30,30,"+ "",threshold="" + searchable.getSuggestThreshold());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.43,19,13
1230_31,31,31,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.21,20,14
1230_32,32,32,"Log.d(LOG_TAG, ""Checked "" + activityInfo.name + "", no searchable meta-data"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.38,21,15
1230_35,35,35,return searchable;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.43,24,17
1169_1,1,1,"private static char decodeEscapedCharacter(char[] attributeChars, int i) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,2,0,0,0.47,0,0
1169_2,2,4,"if (attributeChars.length < i+4) {
throw new IllegalStateException(""Illegal escape sequence at char ["" + i + ""] in ["" + new String(attributeChars) + ""]"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,1,2,0,2,0.57,0,0
1169_3,3,3,"throw new IllegalStateException(""Illegal escape sequence at char ["" + i + ""] in ["" + new String(attributeChars) + ""]"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,1,2,0,1,0.49,1,0
1169_5,5,5,int charCode;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,2,0,0,0.39,3,2
1169_6,6,10,"try {
charCode = Integer.parseInt(new String(attributeChars, i+2, 4), 16);
} catch (NumberFormatException nfe) {
throw new IllegalStateException(""Illegal escape sequence at char ["" + i + ""] in ["" + new String(attributeChars) + ""]"", nfe);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,1,0,1,4,1,2,0,2,0.6,4,2
1169_7,7,7,"charCode = Integer.parseInt(new String(attributeChars, i+2, 4), 16);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,2,0,2,0.62,5,3
1169_8,8,8,} catch (NumberFormatException nfe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,2,0,0,0.42,6,4
1169_9,9,9,"throw new IllegalStateException(""Illegal escape sequence at char ["" + i + ""] in ["" + new String(attributeChars) + ""]"", nfe);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,1,2,0,1,0.49,7,5
1169_12,12,12,return (char) charCode;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,1,2,0,0,0.36,10,7
1168_1,1,1,static String unescapeCharacters(String attributeValue) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.63,10,7
1168_2,2,2,if (attributeValue == null) return null;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,1,0,0,0.3,9,6
1168_4,4,4,char[] attributeChars = attributeValue.toCharArray();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,1,0,0,0.6,7,5
1168_5,5,5,StringBuilder result = new StringBuilder(attributeChars.length);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.59,6,4
1168_6,6,6,int from = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.37,5,3
1168_7,7,7,int len = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.41,4,2
1168_8,8,8,int i = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,1,0,0,0.37,3,1
1168_10,10,37,"while (i < attributeChars.length) {

if (attributeChars[i] == '\\') {
result.append(attributeChars, from, len);
len = 0;

switch(attributeChars[i+1]) {
case '\\' :
result.append('\\');
i++;
break;
case '0' :
result.append((char) 0);
i++;
break;
case 'u' :
result.append(decodeEscapedCharacter(attributeChars, i));
i+=5;
break;
default: throw new IllegalStateException(""Illegal escape sequence at char ["" + i + ""] in ["" + attributeValue + ""]"");
}
from = i+1;

} else {
len++;
}
i++;
}",0,1,0,0,0,0,0,0,0,18,3,28,0,0,1,1,3,2,1,0,2,0.65,0,0
1168_12,12,35,"if (attributeChars[i] == '\\') {
result.append(attributeChars, from, len);
len = 0;

switch(attributeChars[i+1]) {
case '\\' :
result.append('\\');
i++;
break;
case '0' :
result.append((char) 0);
i++;
break;
case 'u' :
result.append(decodeEscapedCharacter(attributeChars, i));
i+=5;
break;
default: throw new IllegalStateException(""Illegal escape sequence at char ["" + i + ""] in ["" + attributeValue + ""]"");
}
from = i+1;

} else {
len++;
}",1,0,0,0,0,0,0,0,0,16,2,24,0,1,1,0,3,2,1,0,2,0.65,0,0
1168_13,13,13,"result.append(attributeChars, from, len);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.59,1,0
1168_14,14,14,len = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,1,0,0,0.42,2,1
1168_16,16,16,switch(attributeChars[i+1]) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,1,0,0,0.53,4,3
1168_17,17,18,"case '\\' :
result.append('\\');",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,0,0.43,5,3
1168_19,19,19,i++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.0,7,5
1168_20,20,20,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,1,0,0,0.36,8,5
1168_21,21,22,"case '0' :
result.append((char) 0);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,0,0.56,9,6
1168_23,23,23,i++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.0,11,8
1168_24,24,24,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,1,0,0,0.36,12,8
1168_25,25,26,"case 'u' :
result.append(decodeEscapedCharacter(attributeChars, i));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,3,2,1,0,2,0.73,13,9
1168_27,27,27,i+=5;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.3,15,11
1168_28,28,28,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,1,0,0,0.36,16,11
1168_29,29,29,"throw new IllegalStateException(""Illegal escape sequence at char ["" + i + ""] in ["" + attributeValue + ""]"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,1,0,1,0.57,17,12
1168_31,31,31,from = i+1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,1,0,0,0.27,19,14
1168_33,33,33,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.31,21,15
1168_34,34,34,len++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.43,22,15
1168_36,36,36,i++;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.0,24,17
1168_39,39,39,"result.append(attributeChars, from, len);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,2,1,0,0,0.59,27,18
1168_40,40,40,return result.toString();,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.43,28,18
1133_1,1,1,    protected void startBackgroundTask(UiBasedBackgroundTask<Result> task) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,2,0.66,2,1
1133_2,2,2,TaskFragment<Result> taskFragment = findTaskFragment();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,5,1,0,1,0.6,1,0
1133_4,4,18,"if (taskFragment == null || taskFragment.isCanceled()) {
task.setCallback(this::handleTaskResult);

if (taskFragment == null) {
taskFragment = new TaskFragment<>();
getFragmentManager()
.beginTransaction()
.add(taskFragment, TAG_TASK_FRAGMENT)
.commit();
}

taskFragment.startTask(task);

setupUiForTaskState(true);
}",1,0,0,0,0,0,0,0,0,9,2,15,0,0,1,0,6,5,1,0,2,0.63,0,0
1133_5,5,5,task.setCallback(this::handleTaskResult);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,5,1,0,1,0.56,1,0
1133_7,7,13,"if (taskFragment == null) {
taskFragment = new TaskFragment<>();
getFragmentManager()
.beginTransaction()
.add(taskFragment, TAG_TASK_FRAGMENT)
.commit();
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,1,1,6,5,1,0,1,0.54,3,2
1133_8,8,8,taskFragment = new TaskFragment<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.61,4,2
1133_9,9,9,getFragmentManager(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.29,5,3
1133_10,10,10,.beginTransaction(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.24,6,4
1133_11,11,11,".add(taskFragment, TAG_TASK_FRAGMENT)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.58,7,5
1133_12,12,12,.commit();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.23,8,6
1133_15,15,15,taskFragment.startTask(task);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,5,1,0,2,0.79,11,8
1133_17,17,17,setupUiForTaskState(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,5,1,0,1,0.53,13,9
1131_1,1,3,"@CallSuper
@Override
void animateValue(float fraction) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,12,5,2,0,0,0.4,2,2
1131_4,4,4,final Object target = getTarget();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,5,2,0,1,0.53,1,1
1131_5,5,8,"if (mTarget != null && target == null) {
cancel();
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,12,5,2,0,3,0.79,0,0
1131_6,6,6,cancel();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,2,0,1,0.65,0,0
1131_7,7,7,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,12,5,2,0,0,0.33,1,0
1131_10,10,10,super.animateValue(fraction);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,12,5,2,0,0,0.38,4,2
1131_11,11,11,int numValues = mValues.length;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,5,2,0,0,0.32,5,2
1131_12,12,14,"for (int i = 0; i < numValues; ++i) {
mValues[i].setAnimatedValue(target);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,12,5,2,0,2,0.54,6,3
1131_13,13,13,mValues[i].setAnimatedValue(target);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,2,0,2,0.59,7,4
1130_1,1,2,"@Override
public void setObjectValues(Object... values) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,11,7,1,0,1,0.51,1,1
1130_3,3,12,"if (mValues == null || mValues.length == 0) {
if (mProperty != null) {
setValues(PropertyValuesHolder.ofObject(mProperty, (TypeEvaluator) null, values));
} else {
setValues(PropertyValuesHolder.ofObject(mPropertyName,
(TypeEvaluator) null, values));
}
} else {
super.setObjectValues(values);
}",1,0,0,0,0,0,0,0,0,6,2,10,0,0,0,0,11,7,1,0,3,0.64,0,0
1130_4,4,9,"if (mProperty != null) {
setValues(PropertyValuesHolder.ofObject(mProperty, (TypeEvaluator) null, values));
} else {
setValues(PropertyValuesHolder.ofObject(mPropertyName,
(TypeEvaluator) null, values));
}",1,0,0,0,0,0,0,0,0,3,1,6,0,0,0,0,11,7,1,0,3,0.64,0,0
1130_5,5,5,"setValues(PropertyValuesHolder.ofObject(mProperty, (TypeEvaluator) null, values));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,1,0,2,0.6,1,0
1130_6,6,6,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,1,0,0,0.21,2,1
1130_7,7,8,"setValues(PropertyValuesHolder.ofObject(mPropertyName,
(TypeEvaluator) null, values));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,11,7,1,0,3,0.66,3,2
1130_10,10,10,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,1,0,0,0.21,6,4
1130_11,11,11,super.setObjectValues(values);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,1,0,1,0.59,7,4
1128_1,1,2,"@Override
public void setIntValues(int... values) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,11,7,1,0,1,0.49,1,1
1128_3,3,11,"if (mValues == null || mValues.length == 0) {
if (mProperty != null) {
setValues(PropertyValuesHolder.ofInt(mProperty, values));
} else {
setValues(PropertyValuesHolder.ofInt(mPropertyName, values));
}
} else {
super.setIntValues(values);
}",1,0,0,0,0,0,0,0,0,6,2,9,0,0,0,0,11,7,1,0,3,0.66,0,0
1128_4,4,8,"if (mProperty != null) {
setValues(PropertyValuesHolder.ofInt(mProperty, values));
} else {
setValues(PropertyValuesHolder.ofInt(mPropertyName, values));
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,11,7,1,0,3,0.68,0,0
1128_5,5,5,"setValues(PropertyValuesHolder.ofInt(mProperty, values));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,1,0,2,0.64,1,0
1128_6,6,6,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,1,0,0,0.21,2,1
1128_7,7,7,"setValues(PropertyValuesHolder.ofInt(mPropertyName, values));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,1,0,3,0.71,3,2
1128_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,1,0,0,0.21,5,4
1128_10,10,10,super.setIntValues(values);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,1,0,1,0.57,6,4
1126_1,1,2,"private static Animator createAnimatorFromXml(Context c, XmlPullParser parser,
AttributeSet attrs, AnimatorSet parent, int sequenceOrdering)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,0,0.34,5,3
1126_3,3,3,"throws XmlPullParserException, IOException ",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,4,2,1,0,0,0.33,4,2
1126_5,5,5,Animator anim = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.36,2,1
1126_6,6,6,ArrayList<Animator> childAnims = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.33,1,0
1126_8,8,8,int type;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.21,0,0
1126_9,9,9,int depth = parser.getDepth();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.23,1,0
1126_11,11,42,"while (((type=parser.next()) != XmlPullParser.END_TAG || parser.getDepth() > depth)
&& type != XmlPullParser.END_DOCUMENT) {

if (type != XmlPullParser.START_TAG) {
continue;
}

String  name = parser.getName();

if (name.equals(""objectAnimator"")) {
anim = loadObjectAnimator(c, attrs);
} else if (name.equals(""animator"")) {
anim = loadAnimator(c, attrs, null);
} else if (name.equals(""set"")) {
anim = new AnimatorSet();
TypedArray a = c.obtainStyledAttributes(attrs,
com.android.internal.R.styleable.AnimatorSet);
int ordering = a.getInt(com.android.internal.R.styleable.AnimatorSet_ordering,
TOGETHER);
createAnimatorFromXml(c, parser, attrs, (AnimatorSet) anim,  ordering);
a.recycle();
} else {
throw new RuntimeException(""Unknown animator name: "" + parser.getName());
}

if (parent != null) {
if (childAnims == null) {
childAnims = new ArrayList<Animator>();
}
childAnims.add(anim);
}
}",0,1,0,0,0,0,0,0,0,20,3,32,0,1,1,0,4,2,1,0,2,0.5,3,2
1126_12,12,12,&& type != XmlPullParser.END_DOCUMENT) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.32,4,2
1126_14,14,16,"if (type != XmlPullParser.START_TAG) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,1,0,2,0.56,6,4
1126_15,15,15,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.19,7,4
1126_18,18,18,String  name = parser.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.18,10,6
1126_20,20,34,"if (name.equals(""objectAnimator"")) {
anim = loadObjectAnimator(c, attrs);
} else if (name.equals(""animator"")) {
anim = loadAnimator(c, attrs, null);
} else if (name.equals(""set"")) {
anim = new AnimatorSet();
TypedArray a = c.obtainStyledAttributes(attrs,
com.android.internal.R.styleable.AnimatorSet);
int ordering = a.getInt(com.android.internal.R.styleable.AnimatorSet_ordering,
TOGETHER);
createAnimatorFromXml(c, parser, attrs, (AnimatorSet) anim,  ordering);
a.recycle();
} else {
throw new RuntimeException(""Unknown animator name: "" + parser.getName());
}",1,0,0,0,0,0,0,0,0,11,1,15,0,0,1,1,4,2,1,0,0,0.36,12,7
1126_21,21,21,"anim = loadObjectAnimator(c, attrs);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.26,13,7
1126_22,22,22,"} else if (name.equals(""animator"")) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.25,14,8
1126_23,23,23,"anim = loadAnimator(c, attrs, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.31,15,9
1126_24,24,24,"} else if (name.equals(""set"")) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.23,16,10
1126_25,25,25,anim = new AnimatorSet();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.36,17,11
1126_26,26,27,"TypedArray a = c.obtainStyledAttributes(attrs,
com.android.internal.R.styleable.AnimatorSet);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,2,1,0,0,0.35,18,12
1126_28,28,29,"int ordering = a.getInt(com.android.internal.R.styleable.AnimatorSet_ordering,
TOGETHER);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,2,1,0,0,0.33,20,14
1126_30,30,30,"createAnimatorFromXml(c, parser, attrs, (AnimatorSet) anim,  ordering);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.32,22,15
1126_31,31,31,a.recycle();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.38,23,15
1126_32,32,32,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.2,24,16
1126_33,33,33,"throw new RuntimeException(""Unknown animator name: "" + parser.getName());",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,1,0,0,0.33,25,17
1126_36,36,41,"if (parent != null) {
if (childAnims == null) {
childAnims = new ArrayList<Animator>();
}
childAnims.add(anim);
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,1,0,4,2,1,0,0,0.34,28,19
1126_37,37,39,"if (childAnims == null) {
childAnims = new ArrayList<Animator>();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,2,1,0,0,0.34,29,19
1126_38,38,38,childAnims = new ArrayList<Animator>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.32,30,20
1126_40,40,40,childAnims.add(anim);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.25,32,22
1126_43,43,54,"if (parent != null && childAnims != null) {
Animator[] animsArray = new Animator[childAnims.size()];
int index = 0;
for (Animator a : childAnims) {
animsArray[index++] = a;
}
if (sequenceOrdering == TOGETHER) {
parent.playTogether(animsArray);
} else {
parent.playSequentially(animsArray);
}
}",1,0,0,0,0,0,0,0,0,8,2,12,0,1,0,1,4,2,1,0,0,0.34,35,23
1126_44,44,44,Animator[] animsArray = new Animator[childAnims.size()];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.34,36,23
1126_45,45,45,int index = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.19,37,24
1126_46,46,48,"for (Animator a : childAnims) {
animsArray[index++] = a;
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,0,4,2,1,0,0,0.32,38,25
1126_47,47,47,animsArray[index++] = a;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.3,39,26
1126_49,49,53,"if (sequenceOrdering == TOGETHER) {
parent.playTogether(animsArray);
} else {
parent.playSequentially(animsArray);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,4,2,1,0,0,0.31,41,28
1126_50,50,50,parent.playTogether(animsArray);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.31,42,28
1126_51,51,51,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.2,43,29
1126_52,52,52,parent.playSequentially(animsArray);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.3,44,30
1126_56,56,56,return anim;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.28,48,32
1004_1,1,2,"@NonNull
private List<MediaBrowserCompat.MediaItem> getAllPlaylistsChildren(@NonNull Resources resources) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,0,0,2,0.57,45,35
1004_3,3,3,List<MediaBrowserCompat.MediaItem> mediaItems = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,5,0,0,1,0.52,44,34
1004_5,5,5,PreferenceUtil prefs = PreferenceUtil.getInstance();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,5,0,0,0,0.35,42,33
1004_6,6,15,"if (prefs.getLastAddedCutoffTimeSecs() > 0) {
mediaItems.add(AutoMediaItem.with(mContext)
.path(AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_LAST_ADDED)
.title(resources.getString(R.string.last_added))
.subTitle(new LastAddedPlaylist(mContext).getInfoString(mContext))
.icon(R.drawable.ic_library_add_white_24dp)
.asBrowsable()
.build()
);
}",1,0,0,0,0,0,0,0,0,7,1,10,1,1,0,0,8,5,0,0,4,0.66,32,25
1004_7,7,7,mediaItems.add(AutoMediaItem.with(mContext),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.5,40,31
1004_8,8,8,.path(AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_LAST_ADDED),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,3,0.65,39,30
1004_9,9,9,.title(resources.getString(R.string.last_added)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.41,38,29
1004_10,10,10,.subTitle(new LastAddedPlaylist(mContext).getInfoString(mContext)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.53,37,28
1004_11,11,11,.icon(R.drawable.ic_library_add_white_24dp),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.43,36,27
1004_12,12,12,.asBrowsable(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.45,35,26
1004_13,13,13,.build(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.37,34,25
1004_16,16,25,"if (prefs.getRecentlyPlayedCutoffTimeMillis() > 0) {
mediaItems.add(AutoMediaItem.with(mContext)
.path(AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_HISTORY)
.title(resources.getString(R.string.history_label))
.subTitle(new HistoryPlaylist(mContext).getInfoString(mContext))
.icon(R.drawable.ic_access_time_white_24dp)
.asBrowsable()
.build()
);
}",1,0,0,0,0,0,0,0,0,7,1,10,1,1,0,0,8,5,0,0,4,0.68,22,17
1004_17,17,17,mediaItems.add(AutoMediaItem.with(mContext),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.5,30,23
1004_18,18,18,.path(AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_HISTORY),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,3,0.69,29,22
1004_19,19,19,.title(resources.getString(R.string.history_label)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.42,28,21
1004_20,20,20,.subTitle(new HistoryPlaylist(mContext).getInfoString(mContext)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.55,27,20
1004_21,21,21,.icon(R.drawable.ic_access_time_white_24dp),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.43,26,19
1004_22,22,22,.asBrowsable(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.45,25,18
1004_23,23,23,.build(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.37,24,17
1004_26,26,35,"if (prefs.getNotRecentlyPlayedCutoffTimeMillis() > 0) {
mediaItems.add(AutoMediaItem.with(mContext)
.path(AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_NOT_RECENTLY_PLAYED)
.title(resources.getString(R.string.not_recently_played))
.subTitle(new NotRecentlyPlayedPlaylist(mContext).getInfoString(mContext))
.icon(R.drawable.ic_watch_later_white_24dp)
.asBrowsable()
.build()
);
}",1,0,0,0,0,0,0,0,0,7,1,10,1,1,0,0,8,5,0,0,4,0.68,12,9
1004_27,27,27,mediaItems.add(AutoMediaItem.with(mContext),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.5,20,15
1004_28,28,28,.path(AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_NOT_RECENTLY_PLAYED),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,3,0.68,19,14
1004_29,29,29,.title(resources.getString(R.string.not_recently_played)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.47,18,13
1004_30,30,30,.subTitle(new NotRecentlyPlayedPlaylist(mContext).getInfoString(mContext)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.57,17,12
1004_31,31,31,.icon(R.drawable.ic_watch_later_white_24dp),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.43,16,11
1004_32,32,32,.asBrowsable(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.45,15,10
1004_33,33,33,.build(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.37,14,9
1004_36,36,45,"if (prefs.maintainTopTrackPlaylist()) {
mediaItems.add(AutoMediaItem.with(mContext)
.path(AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_TOP_TRACKS)
.title(resources.getString(R.string.top_tracks_label))
.subTitle(new MyTopTracksPlaylist(mContext).getInfoString(mContext))
.icon(R.drawable.ic_trending_up_white_24dp)
.asBrowsable()
.build()
);
}",1,0,0,0,0,0,0,0,0,7,1,10,1,1,0,1,8,5,0,0,4,0.68,2,1
1004_37,37,37,mediaItems.add(AutoMediaItem.with(mContext),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.5,10,7
1004_38,38,38,.path(AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_TOP_TRACKS),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,3,0.65,9,6
1004_39,39,39,.title(resources.getString(R.string.top_tracks_label)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.41,8,5
1004_40,40,40,.subTitle(new MyTopTracksPlaylist(mContext).getInfoString(mContext)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.53,7,4
1004_41,41,41,.icon(R.drawable.ic_trending_up_white_24dp),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.44,6,3
1004_42,42,42,.asBrowsable(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.45,5,2
1004_43,43,43,.build(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.37,4,1
1004_47,47,58,"for (Playlist entry : PlaylistLoader.getAllPlaylists(mContext)) {
mediaItems.add(AutoMediaItem.with(mContext)
.path(AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_PLAYLIST, entry.id)
.title(entry.name)
.subTitle(entry.getInfoString(mContext))
.icon(MusicUtil.isFavoritePlaylist(mContext, entry)
? R.drawable.ic_favorite_white_24dp
: R.drawable.ic_queue_music_white_24dp)
.asBrowsable()
.build()
);
}",0,0,0,1,0,0,0,0,0,8,1,12,0,0,1,1,8,5,0,0,4,0.7,0,0
1004_48,48,48,mediaItems.add(AutoMediaItem.with(mContext),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.5,0,0
1004_49,49,49,".path(AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_PLAYLIST, entry.id)",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,0,0,4,0.78,1,0
1004_50,50,50,.title(entry.name),0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,0,0,0,0.39,2,1
1004_51,51,51,.subTitle(entry.getInfoString(mContext)),0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,0,0,0,0.43,3,2
1004_52,52,52,".icon(MusicUtil.isFavoritePlaylist(mContext, entry)",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,0,0,2,0.53,4,3
1004_53,53,54,"? R.drawable.ic_favorite_white_24dp
: R.drawable.ic_queue_music_white_24dp)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,0,0,1,0.46,5,4
1004_55,55,55,.asBrowsable(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.45,7,6
1004_56,56,56,.build(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.37,8,6
1004_60,60,60,return mediaItems;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,8,5,0,0,1,0.51,12,8
1003_1,1,2,"    @NonNull
public List<MediaBrowserCompat.MediaItem> getChildren(@NonNull String path, @NonNull Resources resources) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,0,0,0,0.36,39,25
1003_3,3,3,List<MediaBrowserCompat.MediaItem> mediaItems = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,0,0,0,0.37,38,24
1003_5,5,5,switch (path) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,0,0,0,0.27,36,23
1003_6,6,7,"case AutoMediaIDHelper.MEDIA_ID_ROOT:
mediaItems.addAll(getRootChildren(resources));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,0,0,0,0.39,34,22
1003_8,8,8,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,6,4,0,0,0,0.34,33,21
1003_10,10,11,"case AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_PLAYLIST:
mediaItems.addAll(getAllPlaylistsChildren(resources));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,4,0,0,0,0.4,30,20
1003_12,12,12,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,6,4,0,0,0,0.34,29,19
1003_14,14,15,"case AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_ALBUM:
for (Album entry : AlbumLoader.getAllAlbums()) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,4,0,0,0,0.48,26,18
1003_16,16,16,mediaItems.add(AutoMediaItem.with(mContext),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.36,25,17
1003_17,17,17,".path(path, entry.getId())",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.29,24,16
1003_18,18,18,.title(entry.getTitle()),0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.37,23,15
1003_19,19,19,".subTitle(MusicUtil.getAlbumInfoString(mContext, entry))",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.43,22,14
1003_20,20,20,.icon(MusicUtil.getMediaStoreAlbumCoverUri(entry.getId())),0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.42,21,13
1003_21,21,21,.asPlayable(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.27,20,12
1003_22,22,22,.build(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.33,19,11
1003_25,25,25,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,6,4,0,0,0,0.34,16,10
1003_27,27,28,"case AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_ARTIST:
for (Artist entry : ArtistLoader.getAllArtists()) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,4,0,0,0,0.49,13,9
1003_29,29,29,mediaItems.add(AutoMediaItem.with(mContext),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.36,12,8
1003_30,30,30,".path(path, entry.getId())",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.29,11,7
1003_31,31,31,.title(entry.getName()),0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.38,10,6
1003_32,32,32,".subTitle(MusicUtil.getArtistInfoString(mContext, entry))",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.43,9,5
1003_33,33,33,.asPlayable(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.27,8,4
1003_34,34,34,.build(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.33,7,3
1003_37,37,37,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,6,4,0,0,0,0.34,4,2
1003_39,39,40,"case AutoMediaIDHelper.MEDIA_ID_MUSICS_BY_QUEUE:
final MusicService service = mMusicService.get();",0,0,0,0,0,0,0,0,0,0,0,2,0,1,1,0,6,4,0,0,1,0.42,1,1
1003_41,41,57,"if (service != null) {
final List<Song> songs = service.getPlayingQueue();
final List<Song> limitedSongs = truncatedList(songs, service.getPosition());
for (Song s : limitedSongs) {
mediaItems.add(AutoMediaItem.with(mContext)
.path(path, s.id)
.title(s.title)
.subTitle(MusicUtil.getSongInfoString(s))
.icon(MusicUtil.getMediaStoreAlbumCoverUri(s.albumId))
.asPlayable()
.build()
);
}
if (songs.size() > limitedSongs.size()) {
mediaItems.add(truncatedListIndicator(resources, path));
}
}",1,0,0,0,0,0,0,0,0,12,2,17,0,1,0,0,6,4,0,0,3,0.59,0,0
1003_42,42,42,final List<Song> songs = service.getPlayingQueue();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,3,0.67,0,0
1003_43,43,43,"final List<Song> limitedSongs = truncatedList(songs, service.getPosition());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,1,0.49,1,0
1003_44,44,53,"for (Song s : limitedSongs) {
mediaItems.add(AutoMediaItem.with(mContext)
.path(path, s.id)
.title(s.title)
.subTitle(MusicUtil.getSongInfoString(s))
.icon(MusicUtil.getMediaStoreAlbumCoverUri(s.albumId))
.asPlayable()
.build()
);
}",0,0,0,1,0,0,0,0,0,7,1,10,1,1,0,0,6,4,0,0,1,0.48,2,1
1003_45,45,45,mediaItems.add(AutoMediaItem.with(mContext),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.36,3,2
1003_46,46,46,".path(path, s.id)",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.26,4,3
1003_47,47,47,.title(s.title),0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.38,5,4
1003_48,48,48,.subTitle(MusicUtil.getSongInfoString(s)),0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,1,0.46,6,5
1003_49,49,49,.icon(MusicUtil.getMediaStoreAlbumCoverUri(s.albumId)),0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.44,7,6
1003_50,50,50,.asPlayable(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.27,8,7
1003_51,51,51,.build(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.33,9,8
1003_54,54,56,"if (songs.size() > limitedSongs.size()) {
mediaItems.add(truncatedListIndicator(resources, path));
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,6,4,0,0,1,0.48,12,10
1003_55,55,55,"mediaItems.add(truncatedListIndicator(resources, path));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.37,13,10
1003_58,58,58,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,6,4,0,0,0,0.34,16,12
1003_60,60,61,"default:
mediaItems.addAll(getSpecificPlaylistChildren(resources, path));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,4,0,0,0,0.39,18,13
1003_62,62,62,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,4,0,0,0,0.34,20,14
1003_65,65,65,return mediaItems;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,4,0,0,0,0.3,23,15
940_1,1,1,"    private static IconCompat generateThemedIcon(Context context, int iconId, int foregroundColor, int backgroundColor) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.56,9,7
940_2,2,2,"Drawable vectorDrawable = ImageUtil.getTintedVectorDrawable(context, iconId, foregroundColor);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,2,2,0,0,1,0.52,8,6
940_3,3,3,"Drawable backgroundDrawable = ImageUtil.getTintedVectorDrawable(context, R.drawable.ic_app_shortcut_background, backgroundColor);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,2,2,0,0,0,0.48,7,5
940_5,5,12,"if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
AdaptiveIconDrawable adaptiveIconDrawable = new AdaptiveIconDrawable(backgroundDrawable, vectorDrawable);
return IconCompat.createWithAdaptiveBitmap(ImageUtil.createBitmap(adaptiveIconDrawable));
} else {
LayerDrawable layerDrawable = new LayerDrawable(new Drawable[]{backgroundDrawable, vectorDrawable});

return IconCompat.createWithBitmap(ImageUtil.createBitmap(layerDrawable));
}",1,0,0,0,0,0,0,0,0,5,2,8,0,0,1,0,2,2,0,0,2,0.72,0,0
940_6,6,6,"AdaptiveIconDrawable adaptiveIconDrawable = new AdaptiveIconDrawable(backgroundDrawable, vectorDrawable);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.56,4,3
940_7,7,7,return IconCompat.createWithAdaptiveBitmap(ImageUtil.createBitmap(adaptiveIconDrawable));,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,2,2,0,0,2,0.74,3,2
940_8,8,8,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.37,2,1
940_9,9,9,"LayerDrawable layerDrawable = new LayerDrawable(new Drawable[]{backgroundDrawable, vectorDrawable});",0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,2,2,0,0,0,0.38,1,0
940_11,11,11,return IconCompat.createWithBitmap(ImageUtil.createBitmap(layerDrawable));,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,2,0,0,2,0.72,0,0
936_1,1,1,"    private void cleanParams(Map<String, String> params) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.35,0,0
936_2,2,2,"params.remove(""p.guessTotal"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,4,1,0,2,0.57,0,0
936_4,4,4,"params.remove(""mode"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,5,4,1,0,0,0.29,2,1
936_5,5,5,"params.remove(""layout"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,1,0,0,0.27,3,1
936_6,6,6,"params.remove(""wcmmode"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,1,0,0,0.27,4,2
936_7,7,7,"params.remove(""forceeditcontext"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,1,0,0,0.27,5,3
935_1,1,1,"private Map<String, String> getParams(final SlingHttpServletRequest request) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,12,0,0,2,0.52,17,9
935_2,2,2,"Map<String, String> params = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,16,12,0,0,1,0.49,16,8
935_4,4,6,"for (final Map.Entry<String, RequestParameter[]> entry : request.getRequestParameterMap().entrySet()) {
params.put(entry.getKey(), entry.getValue()[0].getString());
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,1,1,16,12,0,0,1,0.44,12,6
935_5,5,5,"params.put(entry.getKey(), entry.getValue()[0].getString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,12,0,0,1,0.43,13,6
935_8,8,8,cleanParams(params);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,16,12,0,0,1,0.57,10,5
935_10,10,10,final PagePredicate pagePredicate = request.adaptTo(PagePredicate.class);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,16,12,0,0,1,0.32,8,4
935_11,11,11,final PredicateGroup paramsPredicateGroup = PredicateConverter.createPredicates(params);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,16,12,0,0,3,0.6,7,3
935_13,13,13,PagePredicate.ParamTypes[] excludeParamTypes = new PagePredicate.ParamTypes[]{};,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,1,16,12,0,0,2,0.46,5,2
935_15,15,17,"if (isPathsProvidedByRequestParams(pagePredicate, params)) {
excludeParamTypes = new PagePredicate.ParamTypes[]{PagePredicate.ParamTypes.PATH};
}",1,0,0,0,0,0,0,0,0,1,2,3,0,0,1,1,16,12,0,0,3,0.52,1,0
935_16,16,16,excludeParamTypes = new PagePredicate.ParamTypes[]{PagePredicate.ParamTypes.PATH};,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,12,0,0,2,0.45,2,0
935_19,19,20,"final PredicateGroup combinedPredicateGroup = safeMerge(paramsPredicateGroup,
pagePredicate.getPredicateGroup(excludeParamTypes));",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,16,12,0,0,5,0.65,0,0
935_22,22,22,params = PredicateConverter.createMap(combinedPredicateGroup);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,16,12,0,0,4,0.63,3,1
935_24,24,24,return params;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,16,12,0,0,1,0.5,5,2
934_1,1,1,"private Map<String, String> getParams(final SlingHttpServletRequest request) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.48,6,3
934_2,2,2,"Map<String, String> params = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.46,5,2
934_4,4,6,"for (final Map.Entry<String, RequestParameter[]> entry : request.getRequestParameterMap().entrySet()) {
params.put(entry.getKey(), entry.getValue()[0].getString());
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,1,0.43,1,0
934_5,5,5,"params.put(entry.getKey(), entry.getValue()[0].getString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.45,2,0
934_8,8,8,cleanParams(params);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.69,0,0
934_10,10,10,final PagePredicate pagePredicate = request.adaptTo(PagePredicate.class);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.32,2,1
934_11,11,11,final PredicateGroup paramsPredicateGroup = PredicateConverter.createPredicates(params);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.46,3,1
934_13,13,13,PagePredicate.ParamTypes[] excludeParamTypes = new PagePredicate.ParamTypes[]{};,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,1,4,3,0,0,1,0.54,5,3
934_15,15,17,"if (isPathsProvidedByRequestParams(pagePredicate, params)) {
excludeParamTypes = new PagePredicate.ParamTypes[]{PagePredicate.ParamTypes.PATH};
}",1,0,0,0,0,0,0,0,0,1,2,3,0,0,1,1,4,3,0,0,1,0.56,7,4
934_16,16,16,excludeParamTypes = new PagePredicate.ParamTypes[]{PagePredicate.ParamTypes.PATH};,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.56,8,4
934_19,19,20,"final PredicateGroup combinedPredicateGroup = safeMerge(paramsPredicateGroup,
pagePredicate.getPredicateGroup(excludeParamTypes));",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,4,3,0,0,1,0.48,11,6
934_22,22,22,params = PredicateConverter.createMap(combinedPredicateGroup);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.43,14,7
934_24,24,24,return params;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.56,16,8
933_1,1,1,"private Map<String, String> getParams(final SlingHttpServletRequest request) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,1,1,0.48,1,1
933_2,2,2,"Map<String, String> params = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,1,1,0.51,0,0
933_4,4,6,"for (final Map.Entry<String, RequestParameter[]> entry : request.getRequestParameterMap().entrySet()) {
params.put(entry.getKey(), entry.getValue()[0].getString());
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,1,1,0.47,1,0
933_5,5,5,"params.put(entry.getKey(), entry.getValue()[0].getString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,1,1,0.48,2,0
933_8,8,8,cleanParams(params);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,1,1,0.7,5,2
933_10,10,10,final PagePredicate pagePredicate = request.adaptTo(PagePredicate.class);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,1,0,0.29,7,3
933_11,11,11,final PredicateGroup paramsPredicateGroup = PredicateConverter.createPredicates(params);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,1,1,0.55,8,3
933_13,13,13,PagePredicate.ParamTypes[] excludeParamTypes = new PagePredicate.ParamTypes[]{};,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,1,3,3,0,1,1,0.52,10,5
933_15,15,17,"if (isPathsProvidedByRequestParams(pagePredicate, params)) {
excludeParamTypes = new PagePredicate.ParamTypes[]{PagePredicate.ParamTypes.PATH};
}",1,0,0,0,0,0,0,0,0,1,2,3,0,0,1,1,3,3,0,1,1,0.52,12,6
933_16,16,16,excludeParamTypes = new PagePredicate.ParamTypes[]{PagePredicate.ParamTypes.PATH};,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,1,1,0.51,13,6
933_19,19,20,"final PredicateGroup combinedPredicateGroup = safeMerge(paramsPredicateGroup,
pagePredicate.getPredicateGroup(excludeParamTypes));",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,3,3,0,1,1,0.49,16,8
933_22,22,22,params = PredicateConverter.createMap(combinedPredicateGroup);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,1,1,0.52,19,9
933_24,24,24,return params;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,3,0,1,1,0.55,21,10
886_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,0,0,0,0.27,8,5
886_2,2,2,List<String> fileData = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,3,0,0,0,0.33,7,4
886_4,4,4,File file = new File(filePath);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,0,0,0,0.23,5,3
886_5,5,9,"if (file.length() > 1000000 && !modified) {
if (SuperAdapter.showConfirmDialog(""The assembly file is large. Do you want to try and bundle small sequences?"") == 0) {
needsBundling = true;
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,1,0,0,5,3,0,0,1,0.44,0,0
886_6,6,8,"if (SuperAdapter.showConfirmDialog(""The assembly file is large. Do you want to try and bundle small sequences?"") == 0) {
needsBundling = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,3,0,0,0,0.36,1,0
886_7,7,7,needsBundling = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.28,2,0
886_10,10,15,"if (modified) {
List<Scaffold> listOfScaffolds = AssemblyHeatmapHandler.getSuperAdapter().getAssemblyStateTracker().getInitialAssemblyScaffoldHandler().getListOfScaffolds();
if (listOfScaffolds.get(listOfScaffolds.size() - 1).getName().contentEquals(""unattempted:::debris"")) {
needsBundling = true;
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,0,1,5,3,0,0,1,0.47,0,0
886_11,11,11,List<Scaffold> listOfScaffolds = AssemblyHeatmapHandler.getSuperAdapter().getAssemblyStateTracker().getInitialAssemblyScaffoldHandler().getListOfScaffolds();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.42,1,0
886_12,12,14,"if (listOfScaffolds.get(listOfScaffolds.size() - 1).getName().contentEquals(""unattempted:::debris"")) {
needsBundling = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,3,0,0,0,0.36,2,1
886_13,13,13,needsBundling = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.28,3,2
886_17,17,17,Scanner scanner = new Scanner(file);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,3,0,0,0,0.27,7,4
886_19,19,21,"while (scanner.hasNext()) {
fileData.add(scanner.nextLine());
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,1,0,5,3,0,0,0,0.32,9,5
886_20,20,20,fileData.add(scanner.nextLine());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.32,10,5
886_22,22,22,return fileData;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.26,12,7
885_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,1,0,0,0.31,4,3
885_2,2,2,List<String> fileData = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,1,0,0,0.29,3,2
885_4,4,4,File file = new File(filePath);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,1,0,0,0.2,1,1
885_5,5,9,"if (file.length() > 1000000 && !modified) {
if (SuperAdapter.showConfirmDialog(""The assembly file is large. Do you want to try and bundle small sequences?"") == 0) {
needsBundling = true;
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,1,0,0,4,3,1,0,2,0.55,0,0
885_6,6,8,"if (SuperAdapter.showConfirmDialog(""The assembly file is large. Do you want to try and bundle small sequences?"") == 0) {
needsBundling = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,1,0,2,0.56,0,0
885_7,7,7,needsBundling = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.27,1,0
885_10,10,15,"if (modified) {
List<Scaffold> listOfScaffolds = AssemblyHeatmapHandler.getSuperAdapter().getAssemblyStateTracker().getInitialAssemblyScaffoldHandler().getListOfScaffolds();
if (listOfScaffolds.get(listOfScaffolds.size() - 1).getName().contentEquals(""unattempted:::debris"")) {
needsBundling = true;
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,0,1,4,3,1,0,0,0.35,4,2
885_11,11,11,List<Scaffold> listOfScaffolds = AssemblyHeatmapHandler.getSuperAdapter().getAssemblyStateTracker().getInitialAssemblyScaffoldHandler().getListOfScaffolds();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.36,5,2
885_12,12,14,"if (listOfScaffolds.get(listOfScaffolds.size() - 1).getName().contentEquals(""unattempted:::debris"")) {
needsBundling = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,1,0,0,0.29,6,3
885_13,13,13,needsBundling = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.27,7,4
885_17,17,17,Scanner scanner = new Scanner(file);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,1,0,0,0.34,11,6
885_19,19,21,"while (scanner.hasNext()) {
fileData.add(scanner.nextLine());
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,1,0,4,3,1,0,0,0.32,13,7
885_20,20,20,fileData.add(scanner.nextLine());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.31,14,7
885_22,22,22,return fileData;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.24,16,9
850_1,1,2,"    @Override
public boolean clearExpired(Date date) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.33,15,9
850_3,3,3,boolean clearedAny = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.3,14,8
850_4,4,4,SharedPreferences.Editor prefsWriter = cookiePrefs.edit();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.43,13,7
850_6,6,16,"for (ConcurrentHashMap.Entry<String, Cookie> entry : cookies.entrySet()) {
String name = entry.getKey();
Cookie cookie = entry.getValue();
if (cookie.isExpired(date)) {
cookies.remove(name);

prefsWriter.remove(COOKIE_NAME_PREFIX + name);

clearedAny = true;
}
}",0,0,0,1,0,0,0,0,0,6,2,11,0,0,1,1,4,3,0,0,1,0.53,1,0
850_7,7,7,String name = entry.getKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.52,10,5
850_8,8,8,Cookie cookie = entry.getValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.39,9,4
850_9,9,15,"if (cookie.isExpired(date)) {
cookies.remove(name);

prefsWriter.remove(COOKIE_NAME_PREFIX + name);

clearedAny = true;
}",1,0,0,0,0,0,0,0,0,3,1,7,0,1,0,0,4,3,0,0,1,0.51,2,0
850_10,10,10,cookies.remove(name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.52,7,2
850_12,12,12,prefsWriter.remove(COOKIE_NAME_PREFIX + name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.54,5,1
850_14,14,14,clearedAny = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.22,3,0
850_18,18,20,"if (clearedAny) {
prefsWriter.putString(COOKIE_NAME_STORE, TextUtils.join("","", cookies.keySet()));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,4,3,0,0,2,0.58,0,0
850_19,19,19,"prefsWriter.putString(COOKIE_NAME_STORE, TextUtils.join("","", cookies.keySet()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.58,1,0
850_21,21,21,prefsWriter.apply();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,0,0.33,3,2
850_23,23,23,return clearedAny;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.22,5,3
849_1,1,2,"    @Override
public boolean clearExpired(Date date) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,0,0,1,0.51,9,7
849_3,3,3,boolean clearedAny = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.55,8,6
849_4,4,4,SharedPreferences.Editor prefsWriter = cookiePrefs.edit();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,0,0,1,0.51,7,5
849_6,6,16,"for (ConcurrentHashMap.Entry<String, Cookie> entry : cookies.entrySet()) {
String name = entry.getKey();
Cookie cookie = entry.getValue();
if (cookie.isExpired(date)) {
cookies.remove(name);

prefsWriter.remove(COOKIE_NAME_PREFIX + name);

clearedAny = true;
}
}",0,0,0,1,0,0,0,0,0,6,2,11,0,0,1,1,4,2,0,0,2,0.64,0,0
849_7,7,7,String name = entry.getKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.41,4,3
849_8,8,8,Cookie cookie = entry.getValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.58,3,2
849_9,9,15,"if (cookie.isExpired(date)) {
cookies.remove(name);

prefsWriter.remove(COOKIE_NAME_PREFIX + name);

clearedAny = true;
}",1,0,0,0,0,0,0,0,0,3,1,7,0,1,0,0,4,2,0,0,2,0.62,0,0
849_10,10,10,cookies.remove(name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,0,0,1,0.54,1,0
849_12,12,12,prefsWriter.remove(COOKIE_NAME_PREFIX + name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,1,0.51,0,0
849_14,14,14,clearedAny = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,1,0.54,2,1
849_18,18,20,"if (clearedAny) {
prefsWriter.putString(COOKIE_NAME_STORE, TextUtils.join("","", cookies.keySet()));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,4,2,0,0,3,0.74,6,2
849_19,19,19,"prefsWriter.putString(COOKIE_NAME_STORE, TextUtils.join("","", cookies.keySet()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.63,7,2
849_21,21,21,prefsWriter.apply();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,0,0.35,9,4
849_23,23,23,return clearedAny;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,0,0,1,0.54,11,5
848_1,1,2,"    @Override
public boolean clearExpired(Date date) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,0,0,1,0.5,7,6
848_3,3,3,boolean clearedAny = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.53,6,5
848_4,4,4,SharedPreferences.Editor prefsWriter = cookiePrefs.edit();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,0,0,1,0.49,5,4
848_6,6,16,"for (ConcurrentHashMap.Entry<String, Cookie> entry : cookies.entrySet()) {
String name = entry.getKey();
Cookie cookie = entry.getValue();
if (cookie.isExpired(date)) {
cookies.remove(name);

prefsWriter.remove(COOKIE_NAME_PREFIX + name);

clearedAny = true;
}
}",0,0,0,1,0,0,0,0,0,6,2,11,0,0,1,1,4,2,0,0,2,0.59,0,0
848_7,7,7,String name = entry.getKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.34,2,2
848_8,8,8,Cookie cookie = entry.getValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.53,1,1
848_9,9,15,"if (cookie.isExpired(date)) {
cookies.remove(name);

prefsWriter.remove(COOKIE_NAME_PREFIX + name);

clearedAny = true;
}",1,0,0,0,0,0,0,0,0,3,1,7,0,1,0,0,4,2,0,0,2,0.6,0,0
848_10,10,10,cookies.remove(name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,0,0,1,0.53,0,0
848_12,12,12,prefsWriter.remove(COOKIE_NAME_PREFIX + name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,1,0.48,2,1
848_14,14,14,clearedAny = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,1,0.51,4,2
848_18,18,20,"if (clearedAny) {
prefsWriter.putString(COOKIE_NAME_STORE, TextUtils.join("","", cookies.keySet()));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,4,2,0,0,3,0.7,8,3
848_19,19,19,"prefsWriter.putString(COOKIE_NAME_STORE, TextUtils.join("","", cookies.keySet()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.59,9,3
848_21,21,21,prefsWriter.apply();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,0,0.3,11,5
848_23,23,23,return clearedAny;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,0,0,1,0.52,13,6
847_1,1,2,"    @Override
public void clear() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,0,0,1,0.46,7,5
847_3,3,3,SharedPreferences.Editor prefsWriter = cookiePrefs.edit();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.49,6,4
847_4,4,6,"for (String name : cookies.keySet()) {
prefsWriter.remove(COOKIE_NAME_PREFIX + name);
}",0,0,0,1,0,0,0,0,0,1,1,3,1,1,0,0,4,2,0,0,1,0.49,3,2
847_5,5,5,prefsWriter.remove(COOKIE_NAME_PREFIX + name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.48,4,2
847_7,7,7,prefsWriter.remove(COOKIE_NAME_STORE);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,0,0,2,0.62,2,1
847_8,8,8,prefsWriter.apply();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,0,0.3,1,0
847_10,10,10,cookies.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,2,0.79,0,0
846_1,1,2,"    @Override
public void clear() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,0,0,1,0.46,0,0
846_3,3,3,SharedPreferences.Editor prefsWriter = cookiePrefs.edit();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.51,0,0
846_4,4,6,"for (String name : cookies.keySet()) {
prefsWriter.remove(COOKIE_NAME_PREFIX + name);
}",0,0,0,1,0,0,0,0,0,1,1,3,1,1,0,0,4,2,0,0,1,0.53,1,0
846_5,5,5,prefsWriter.remove(COOKIE_NAME_PREFIX + name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.51,2,1
846_7,7,7,prefsWriter.remove(COOKIE_NAME_STORE);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,0,0,2,0.66,4,3
846_8,8,8,prefsWriter.apply();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,0,0.35,5,3
846_10,10,10,cookies.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,2,0.8,7,5
845_1,1,2,"    @Override
public void addCookie(Cookie cookie) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,1,0.51,10,7
845_3,3,4,"if (omitNonPersistentCookies && !cookie.isPersistent())
return;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,4,2,1,0,2,0.69,8,5
845_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.23,8,5
845_5,5,5,String name = cookie.getName() + cookie.getDomain();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,1,0.53,7,4
845_7,7,11,"if (!cookie.isExpired(new Date())) {
cookies.put(name, cookie);
} else {
cookies.remove(name);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,2,1,0,1,0.59,1,0
845_8,8,8,"cookies.put(name, cookie);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.65,4,2
845_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.27,3,1
845_10,10,10,cookies.remove(name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.52,2,0
845_13,13,13,SharedPreferences.Editor prefsWriter = cookiePrefs.edit();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,1,0.54,0,0
845_14,14,14,"prefsWriter.putString(COOKIE_NAME_STORE, TextUtils.join("","", cookies.keySet()));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,2,0.66,1,0
845_15,15,15,"prefsWriter.putString(COOKIE_NAME_PREFIX + name, encodeCookie(new SerializableCookie(cookie)));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,1,0.57,2,1
845_16,16,16,prefsWriter.apply();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.35,3,2
844_1,1,2,"    @Override
public void addCookie(Cookie cookie) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,1,0,1,0.52,4,3
844_3,3,4,"if (omitNonPersistentCookies && !cookie.isPersistent())
return;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,6,3,1,0,1,0.51,2,1
844_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.24,2,1
844_5,5,5,String name = cookie.getName() + cookie.getDomain();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,3,1,0,1,0.49,1,0
844_7,7,11,"if (!cookie.isExpired(new Date())) {
cookies.put(name, cookie);
} else {
cookies.remove(name);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,6,3,1,0,3,0.7,0,0
844_8,8,8,"cookies.put(name, cookie);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.58,1,0
844_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.26,2,1
844_10,10,10,cookies.remove(name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,2,0.67,3,2
844_13,13,13,SharedPreferences.Editor prefsWriter = cookiePrefs.edit();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,1,0,1,0.5,6,4
844_14,14,14,"prefsWriter.putString(COOKIE_NAME_STORE, TextUtils.join("","", cookies.keySet()));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,1,0,2,0.59,7,4
844_15,15,15,"prefsWriter.putString(COOKIE_NAME_PREFIX + name, encodeCookie(new SerializableCookie(cookie)));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,1,0,1,0.52,8,5
844_16,16,16,prefsWriter.apply();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.35,9,6
798_1,1,1,    private String getQueryForCategory() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.54,0,0
798_2,2,2,String categoryUid = urlProvider.getCategoryIdentifier(request);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,0,0,4,0.83,0,0
798_4,4,7,"if (StringUtils.isBlank(categoryUid)) {
LOGGER.warn(""Cannot find category for current request"");
return null;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,6,4,0,0,3,0.66,2,1
798_5,5,5,"LOGGER.warn(""Cannot find category for current request"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,2,0.59,3,1
798_6,6,6,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.22,4,2
798_9,9,9,return buildQueryForCategory(categoryUid);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,4,0,0,2,0.67,7,4
797_1,1,1,    private String getQueryForProduct() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.55,0,0
797_2,2,2,String sku = urlProvider.getProductIdentifier(request);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,0,0,4,0.79,0,0
797_4,4,7,"if (StringUtils.isBlank(sku)) {
LOGGER.warn(""Cannot find product for current request"");
return null;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,5,4,0,0,3,0.59,2,1
797_5,5,5,"LOGGER.warn(""Cannot find product for current request"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.62,3,1
797_6,6,6,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.22,4,2
797_9,9,9,return buildQueryForProduct(sku);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,4,0,0,2,0.54,7,4
792_1,1,1,public long getElapsedToday() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.7,0,0
792_2,2,4,"return (calendar.get(Calendar.HOUR_OF_DAY) * 60 + calendar.get(Calendar.MINUTE)) * MS_PER_MINUTE
+ calendar.get(Calendar.SECOND) * 1000
+ calendar.get(Calendar.MILLISECOND);",0,0,0,0,0,0,1,0,0,0,0,3,0,0,0,0,4,2,1,0,0,0.63,0,0
754_1,1,2,"@PUT
@Path(""/{iOSID}"")",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,0,0,0,0.37,10,5
754_3,3,3,@Consumes(MediaType.APPLICATION_JSON),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.33,9,4
754_4,4,4,@Produces(MediaType.APPLICATION_JSON),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.35,8,3
754_5,5,8,"public Response updateiOSVariant(
iOSTokenVariant updatediOSVariant,
@PathParam(""pushAppID"") String pushApplicationId,
@PathParam(""iOSID"") String iOSID) {",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,4,2,0,0,0,0.42,4,2
754_10,10,10,iOSTokenVariant iOSTokenVariant = (iOSTokenVariant)variantService.findByVariantID(iOSID);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,0,0,0,0.41,2,1
754_11,11,33,"if (iOSTokenVariant != null) {

try {
validateModelClass(updatediOSVariant);
} catch (ConstraintViolationException cve) {
ResponseBuilder builder = createBadRequestResponse(cve.getConstraintViolations());
return builder.build();
}

iOSTokenVariant.setName(updatediOSVariant.getName());
iOSTokenVariant.setDescription(updatediOSVariant.getDescription());
iOSTokenVariant.setProduction(updatediOSVariant.isProduction());
iOSTokenVariant.setKeyId(updatediOSVariant.getKeyId());
iOSTokenVariant.setTeamId(updatediOSVariant.getTeamId());
iOSTokenVariant.setBundleId(updatediOSVariant.getBundleId());
iOSTokenVariant.setPrivateKey(updatediOSVariant.getPrivateKey());

logger.trace(""Updating iOS Variant '{}'"", iOSTokenVariant.getVariantID());
variantService.updateVariant(iOSTokenVariant);
producer.changeAPNClient(iOSTokenVariant);

return Response.ok(iOSTokenVariant).build();
}",1,0,0,0,0,0,0,0,0,16,2,23,1,1,0,0,4,2,0,0,2,0.58,0,0
754_13,13,18,"try {
validateModelClass(updatediOSVariant);
} catch (ConstraintViolationException cve) {
ResponseBuilder builder = createBadRequestResponse(cve.getConstraintViolations());
return builder.build();
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,1,1,4,2,0,0,2,0.6,0,0
754_14,14,14,validateModelClass(updatediOSVariant);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.69,1,0
754_15,15,15,} catch (ConstraintViolationException cve) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.34,2,1
754_16,16,16,ResponseBuilder builder = createBadRequestResponse(cve.getConstraintViolations());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.43,3,2
754_17,17,17,return builder.build();,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.35,4,3
754_20,20,20,iOSTokenVariant.setName(updatediOSVariant.getName());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,2,0,0,0,0.39,7,5
754_21,21,21,iOSTokenVariant.setDescription(updatediOSVariant.getDescription());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.41,8,5
754_22,22,22,iOSTokenVariant.setProduction(updatediOSVariant.isProduction());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.41,9,6
754_23,23,23,iOSTokenVariant.setKeyId(updatediOSVariant.getKeyId());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.41,10,7
754_24,24,24,iOSTokenVariant.setTeamId(updatediOSVariant.getTeamId());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.42,11,8
754_25,25,25,iOSTokenVariant.setBundleId(updatediOSVariant.getBundleId());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.44,12,9
754_26,26,26,iOSTokenVariant.setPrivateKey(updatediOSVariant.getPrivateKey());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,0,0.39,13,10
754_28,28,28,"logger.trace(""Updating iOS Variant '{}'"", iOSTokenVariant.getVariantID());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,2,0,0,0,0.44,15,12
754_29,29,29,variantService.updateVariant(iOSTokenVariant);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.38,16,12
754_30,30,30,producer.changeAPNClient(iOSTokenVariant);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,0,0.4,17,13
754_32,32,32,return Response.ok(iOSTokenVariant).build();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.43,19,15
754_34,34,34,"return Response.status(Status.NOT_FOUND).entity(""Could not find requested Variant"").build();",0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,4,2,0,0,0,0.35,21,16
648_1,1,1,"	private AbstractJClass retrieveDecoratedResponseClass(DeclaredType declaredType, TypeElement typeElement, RestHolder holder) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.46,47,34
648_2,2,2,String classTypeBaseName = typeElement.toString();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,4,3,0,0,0.39,46,33
648_4,4,4,String decoratedClassName = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,4,3,0,0,0.45,44,32
648_6,6,18,"if (typeElement.getKind() == ElementKind.INTERFACE) {
if (classTypeBaseName.equals(CanonicalNameConstants.MAP)) {
decoratedClassName = LinkedHashMap.class.getCanonicalName();
} else if (classTypeBaseName.equals(CanonicalNameConstants.SET)) {
decoratedClassName = TreeSet.class.getCanonicalName();
} else if (classTypeBaseName.equals(CanonicalNameConstants.LIST)) {
decoratedClassName = ArrayList.class.getCanonicalName();
} else if (classTypeBaseName.equals(CanonicalNameConstants.COLLECTION)) {
decoratedClassName = ArrayList.class.getCanonicalName();
}
} else {
decoratedClassName = typeElement.getQualifiedName().toString();
}",1,0,0,0,0,0,0,0,0,10,2,13,0,0,1,1,7,4,3,0,0,0.47,30,21
648_7,7,15,"if (classTypeBaseName.equals(CanonicalNameConstants.MAP)) {
decoratedClassName = LinkedHashMap.class.getCanonicalName();
} else if (classTypeBaseName.equals(CanonicalNameConstants.SET)) {
decoratedClassName = TreeSet.class.getCanonicalName();
} else if (classTypeBaseName.equals(CanonicalNameConstants.LIST)) {
decoratedClassName = ArrayList.class.getCanonicalName();
} else if (classTypeBaseName.equals(CanonicalNameConstants.COLLECTION)) {
decoratedClassName = ArrayList.class.getCanonicalName();
}",1,0,0,0,0,0,0,0,0,7,1,9,0,0,0,0,7,4,3,0,0,0.47,33,23
648_8,8,8,decoratedClassName = LinkedHashMap.class.getCanonicalName();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.47,40,29
648_9,9,9,} else if (classTypeBaseName.equals(CanonicalNameConstants.SET)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.41,39,28
648_10,10,10,decoratedClassName = TreeSet.class.getCanonicalName();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.45,38,27
648_11,11,11,} else if (classTypeBaseName.equals(CanonicalNameConstants.LIST)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.41,37,26
648_12,12,12,decoratedClassName = ArrayList.class.getCanonicalName();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.46,36,25
648_13,13,13,} else if (classTypeBaseName.equals(CanonicalNameConstants.COLLECTION)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.43,35,24
648_14,14,14,decoratedClassName = ArrayList.class.getCanonicalName();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.46,34,23
648_16,16,16,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.26,32,22
648_17,17,17,decoratedClassName = typeElement.getQualifiedName().toString();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.45,31,21
648_20,20,46,"if (decoratedClassName != null) {
String decoratedClassNameSuffix = """";
AbstractJClass decoratedSuperClass = getEnvironment().getJClass(decoratedClassName);
for (TypeMirror typeArgument : declaredType.getTypeArguments()) {
TypeMirror actualTypeArgument = typeArgument;
if (typeArgument instanceof WildcardType) {
WildcardType wildcardType = (WildcardType) typeArgument;
if (wildcardType.getExtendsBound() != null) {
actualTypeArgument = wildcardType.getExtendsBound();
} else if (wildcardType.getSuperBound() != null) {
actualTypeArgument = wildcardType.getSuperBound();
}
}
AbstractJClass narrowJClass = codeModelHelper.typeMirrorToJClass(actualTypeArgument);
decoratedSuperClass = decoratedSuperClass.narrow(narrowJClass);
decoratedClassNameSuffix += plainName(narrowJClass);
}

String decoratedFinalClassName = classTypeBaseName + ""_"" + decoratedClassNameSuffix;
decoratedFinalClassName = decoratedFinalClassName.replaceAll(""\\[\\]"", ""s"");
String packageName = holder.getGeneratedClass()._package().name();
decoratedFinalClassName = packageName + ""."" + decoratedFinalClassName;
JDefinedClass decoratedJClass = getEnvironment().getDefinedClass(decoratedFinalClassName);
decoratedJClass._extends(decoratedSuperClass);

return decoratedJClass;
}",1,0,0,0,0,0,0,0,0,20,4,27,0,0,1,1,7,4,3,0,0,0.51,2,0
648_21,21,21,"String decoratedClassNameSuffix = """";",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.52,27,19
648_22,22,22,AbstractJClass decoratedSuperClass = getEnvironment().getJClass(decoratedClassName);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.52,26,18
648_23,23,36,"for (TypeMirror typeArgument : declaredType.getTypeArguments()) {
TypeMirror actualTypeArgument = typeArgument;
if (typeArgument instanceof WildcardType) {
WildcardType wildcardType = (WildcardType) typeArgument;
if (wildcardType.getExtendsBound() != null) {
actualTypeArgument = wildcardType.getExtendsBound();
} else if (wildcardType.getSuperBound() != null) {
actualTypeArgument = wildcardType.getSuperBound();
}
}
AbstractJClass narrowJClass = codeModelHelper.typeMirrorToJClass(actualTypeArgument);
decoratedSuperClass = decoratedSuperClass.narrow(narrowJClass);
decoratedClassNameSuffix += plainName(narrowJClass);
}",0,0,0,1,0,0,0,0,0,10,3,14,0,1,0,1,7,4,3,0,0,0.5,12,7
648_24,24,24,TypeMirror actualTypeArgument = typeArgument;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.45,24,16
648_25,25,32,"if (typeArgument instanceof WildcardType) {
WildcardType wildcardType = (WildcardType) typeArgument;
if (wildcardType.getExtendsBound() != null) {
actualTypeArgument = wildcardType.getExtendsBound();
} else if (wildcardType.getSuperBound() != null) {
actualTypeArgument = wildcardType.getSuperBound();
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,0,7,4,3,0,0,0.44,16,10
648_26,26,26,WildcardType wildcardType = (WildcardType) typeArgument;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.4,22,14
648_27,27,31,"if (wildcardType.getExtendsBound() != null) {
actualTypeArgument = wildcardType.getExtendsBound();
} else if (wildcardType.getSuperBound() != null) {
actualTypeArgument = wildcardType.getSuperBound();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,7,4,3,0,0,0.44,17,10
648_28,28,28,actualTypeArgument = wildcardType.getExtendsBound();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.43,20,12
648_29,29,29,} else if (wildcardType.getSuperBound() != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.4,19,11
648_30,30,30,actualTypeArgument = wildcardType.getSuperBound();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.44,18,10
648_33,33,33,AbstractJClass narrowJClass = codeModelHelper.typeMirrorToJClass(actualTypeArgument);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.47,15,9
648_34,34,34,decoratedSuperClass = decoratedSuperClass.narrow(narrowJClass);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.55,14,8
648_35,35,35,decoratedClassNameSuffix += plainName(narrowJClass);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.53,13,7
648_38,38,38,"String decoratedFinalClassName = classTypeBaseName + ""_"" + decoratedClassNameSuffix;",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,4,3,0,0,0.49,10,6
648_39,39,39,"decoratedFinalClassName = decoratedFinalClassName.replaceAll(""\\[\\]"", ""s"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.48,9,5
648_40,40,40,String packageName = holder.getGeneratedClass()._package().name();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.43,8,4
648_41,41,41,"decoratedFinalClassName = packageName + ""."" + decoratedFinalClassName;",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.46,7,3
648_42,42,42,JDefinedClass decoratedJClass = getEnvironment().getDefinedClass(decoratedFinalClassName);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.51,6,2
648_43,43,43,decoratedJClass._extends(decoratedSuperClass);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,7,4,3,0,0,0.55,5,1
648_45,45,45,return decoratedJClass;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,4,3,0,0,0.49,3,0
648_48,48,48,TypeMirror enclosingSuperJClass = typeElement.getSuperclass();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,4,3,0,1,0.53,0,0
648_49,49,52,"if (enclosingSuperJClass != null && enclosingSuperJClass.getKind() == TypeKind.DECLARED) {
DeclaredType declaredEnclosingSuperJClass = (DeclaredType) enclosingSuperJClass;
return retrieveDecoratedResponseClass(declaredType, (TypeElement) declaredEnclosingSuperJClass.asElement(), holder);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,7,4,3,0,0,0.49,1,0
648_50,50,50,DeclaredType declaredEnclosingSuperJClass = (DeclaredType) enclosingSuperJClass;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.47,2,1
648_51,51,51,"return retrieveDecoratedResponseClass(declaredType, (TypeElement) declaredEnclosingSuperJClass.asElement(), holder);",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.47,3,2
648_54,54,54,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,4,3,0,0,0.25,6,4
647_1,1,1,"	private AbstractJClass retrieveDecoratedResponseClass(DeclaredType declaredType, TypeElement typeElement, RestHolder holder) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,2,0.59,20,14
647_2,2,2,String classTypeBaseName = typeElement.toString();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,3,0,0,1,0.48,19,13
647_4,4,4,String decoratedClassName = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,3,0,0,2,0.64,17,12
647_6,6,18,"if (typeElement.getKind() == ElementKind.INTERFACE) {
if (classTypeBaseName.equals(CanonicalNameConstants.MAP)) {
decoratedClassName = LinkedHashMap.class.getCanonicalName();
} else if (classTypeBaseName.equals(CanonicalNameConstants.SET)) {
decoratedClassName = TreeSet.class.getCanonicalName();
} else if (classTypeBaseName.equals(CanonicalNameConstants.LIST)) {
decoratedClassName = ArrayList.class.getCanonicalName();
} else if (classTypeBaseName.equals(CanonicalNameConstants.COLLECTION)) {
decoratedClassName = ArrayList.class.getCanonicalName();
}
} else {
decoratedClassName = typeElement.getQualifiedName().toString();
}",1,0,0,0,0,0,0,0,0,10,2,13,0,0,1,1,6,3,0,0,2,0.59,3,1
647_7,7,15,"if (classTypeBaseName.equals(CanonicalNameConstants.MAP)) {
decoratedClassName = LinkedHashMap.class.getCanonicalName();
} else if (classTypeBaseName.equals(CanonicalNameConstants.SET)) {
decoratedClassName = TreeSet.class.getCanonicalName();
} else if (classTypeBaseName.equals(CanonicalNameConstants.LIST)) {
decoratedClassName = ArrayList.class.getCanonicalName();
} else if (classTypeBaseName.equals(CanonicalNameConstants.COLLECTION)) {
decoratedClassName = ArrayList.class.getCanonicalName();
}",1,0,0,0,0,0,0,0,0,7,1,9,0,0,0,0,6,3,0,0,2,0.59,6,3
647_8,8,8,decoratedClassName = LinkedHashMap.class.getCanonicalName();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,2,0.62,13,9
647_9,9,9,} else if (classTypeBaseName.equals(CanonicalNameConstants.SET)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.49,12,8
647_10,10,10,decoratedClassName = TreeSet.class.getCanonicalName();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,2,0.63,11,7
647_11,11,11,} else if (classTypeBaseName.equals(CanonicalNameConstants.LIST)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.5,10,6
647_12,12,12,decoratedClassName = ArrayList.class.getCanonicalName();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,2,0.63,9,5
647_13,13,13,} else if (classTypeBaseName.equals(CanonicalNameConstants.COLLECTION)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.49,8,4
647_14,14,14,decoratedClassName = ArrayList.class.getCanonicalName();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,2,0.63,7,3
647_16,16,16,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.12,5,2
647_17,17,17,decoratedClassName = typeElement.getQualifiedName().toString();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,2,0.59,4,1
647_20,20,46,"if (decoratedClassName != null) {
String decoratedClassNameSuffix = """";
AbstractJClass decoratedSuperClass = getEnvironment().getJClass(decoratedClassName);
for (TypeMirror typeArgument : declaredType.getTypeArguments()) {
TypeMirror actualTypeArgument = typeArgument;
if (typeArgument instanceof WildcardType) {
WildcardType wildcardType = (WildcardType) typeArgument;
if (wildcardType.getExtendsBound() != null) {
actualTypeArgument = wildcardType.getExtendsBound();
} else if (wildcardType.getSuperBound() != null) {
actualTypeArgument = wildcardType.getSuperBound();
}
}
AbstractJClass narrowJClass = codeModelHelper.typeMirrorToJClass(actualTypeArgument);
decoratedSuperClass = decoratedSuperClass.narrow(narrowJClass);
decoratedClassNameSuffix += plainName(narrowJClass);
}

String decoratedFinalClassName = classTypeBaseName + ""_"" + decoratedClassNameSuffix;
decoratedFinalClassName = decoratedFinalClassName.replaceAll(""\\[\\]"", ""s"");
String packageName = holder.getGeneratedClass()._package().name();
decoratedFinalClassName = packageName + ""."" + decoratedFinalClassName;
JDefinedClass decoratedJClass = getEnvironment().getDefinedClass(decoratedFinalClassName);
decoratedJClass._extends(decoratedSuperClass);

return decoratedJClass;
}",1,0,0,0,0,0,0,0,0,20,4,27,0,0,1,1,6,3,0,0,4,0.75,0,0
647_21,21,21,"String decoratedClassNameSuffix = """";",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,2,0.66,0,0
647_22,22,22,AbstractJClass decoratedSuperClass = getEnvironment().getJClass(decoratedClassName);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,3,0.74,1,0
647_23,23,36,"for (TypeMirror typeArgument : declaredType.getTypeArguments()) {
TypeMirror actualTypeArgument = typeArgument;
if (typeArgument instanceof WildcardType) {
WildcardType wildcardType = (WildcardType) typeArgument;
if (wildcardType.getExtendsBound() != null) {
actualTypeArgument = wildcardType.getExtendsBound();
} else if (wildcardType.getSuperBound() != null) {
actualTypeArgument = wildcardType.getSuperBound();
}
}
AbstractJClass narrowJClass = codeModelHelper.typeMirrorToJClass(actualTypeArgument);
decoratedSuperClass = decoratedSuperClass.narrow(narrowJClass);
decoratedClassNameSuffix += plainName(narrowJClass);
}",0,0,0,1,0,0,0,0,0,10,3,14,0,1,0,1,6,3,0,0,3,0.66,2,1
647_24,24,24,TypeMirror actualTypeArgument = typeArgument;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.42,3,2
647_25,25,32,"if (typeArgument instanceof WildcardType) {
WildcardType wildcardType = (WildcardType) typeArgument;
if (wildcardType.getExtendsBound() != null) {
actualTypeArgument = wildcardType.getExtendsBound();
} else if (wildcardType.getSuperBound() != null) {
actualTypeArgument = wildcardType.getSuperBound();
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,0,6,3,0,0,1,0.48,4,3
647_26,26,26,WildcardType wildcardType = (WildcardType) typeArgument;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.42,5,4
647_27,27,31,"if (wildcardType.getExtendsBound() != null) {
actualTypeArgument = wildcardType.getExtendsBound();
} else if (wildcardType.getSuperBound() != null) {
actualTypeArgument = wildcardType.getSuperBound();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,6,3,0,0,1,0.48,6,5
647_28,28,28,actualTypeArgument = wildcardType.getExtendsBound();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.41,7,6
647_29,29,29,} else if (wildcardType.getSuperBound() != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.49,8,7
647_30,30,30,actualTypeArgument = wildcardType.getSuperBound();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.5,9,8
647_33,33,33,AbstractJClass narrowJClass = codeModelHelper.typeMirrorToJClass(actualTypeArgument);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.57,12,10
647_34,34,34,decoratedSuperClass = decoratedSuperClass.narrow(narrowJClass);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,3,0.84,13,10
647_35,35,35,decoratedClassNameSuffix += plainName(narrowJClass);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,2,0.68,14,11
647_38,38,38,"String decoratedFinalClassName = classTypeBaseName + ""_"" + decoratedClassNameSuffix;",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,0,0,3,0.72,17,13
647_39,39,39,"decoratedFinalClassName = decoratedFinalClassName.replaceAll(""\\[\\]"", ""s"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,3,0.79,18,13
647_40,40,40,String packageName = holder.getGeneratedClass()._package().name();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.51,19,14
647_41,41,41,"decoratedFinalClassName = packageName + ""."" + decoratedFinalClassName;",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,3,0.77,20,15
647_42,42,42,JDefinedClass decoratedJClass = getEnvironment().getDefinedClass(decoratedFinalClassName);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,3,0.74,21,16
647_43,43,43,decoratedJClass._extends(decoratedSuperClass);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,3,0,0,3,0.8,22,17
647_45,45,45,return decoratedJClass;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,0,0,2,0.67,24,19
647_48,48,48,TypeMirror enclosingSuperJClass = typeElement.getSuperclass();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,0,0,2,0.63,27,20
647_49,49,52,"if (enclosingSuperJClass != null && enclosingSuperJClass.getKind() == TypeKind.DECLARED) {
DeclaredType declaredEnclosingSuperJClass = (DeclaredType) enclosingSuperJClass;
return retrieveDecoratedResponseClass(declaredType, (TypeElement) declaredEnclosingSuperJClass.asElement(), holder);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,6,3,0,0,3,0.67,28,20
647_50,50,50,DeclaredType declaredEnclosingSuperJClass = (DeclaredType) enclosingSuperJClass;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,2,0.62,29,21
647_51,51,51,"return retrieveDecoratedResponseClass(declaredType, (TypeElement) declaredEnclosingSuperJClass.asElement(), holder);",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,3,0,0,3,0.66,30,22
647_54,54,54,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,0,0,0,0.32,33,24
646_1,1,1,"public JVar declareHttpHeaders(ExecutableElement executableElement, RestHolder holder, JBlock body) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.46,19,11
646_2,2,2,JVar httpHeadersVar = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,1,0.53,18,10
646_4,4,4,String mediaType = acceptedHeaders(executableElement);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,1,0.45,16,9
646_5,5,5,boolean hasMediaTypeDefined = mediaType != null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.15,15,8
646_7,7,7,String[] cookies = requiredCookies(executableElement);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.16,13,7
646_8,8,8,boolean requiresCookies = cookies != null && cookies.length > 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.23,12,6
646_10,10,10,String[] headers = requiredHeaders(executableElement);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,1,0.51,10,5
646_11,11,11,boolean requiresHeaders = headers != null && headers.length > 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,2,2,0,0,1,0.57,9,4
646_13,13,13,boolean requiresAuth = requiredAuthentication(executableElement);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.15,7,3
646_15,15,15,boolean requiresMultipartHeader = multipartHeaderRequired(executableElement);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,1,0.49,5,2
646_17,17,17,"Map<String, String> headersFromAnnotations = getHeadersFromAnnotations(executableElement);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,1,0.48,3,1
646_19,19,21,"if (hasMediaTypeDefined || requiresCookies || requiresHeaders || requiresAuth || requiresMultipartHeader || !headersFromAnnotations.isEmpty()) {
httpHeadersVar = body.decl(getEnvironment().getJClass(HTTP_HEADERS), ""httpHeaders"", JExpr._new(getEnvironment().getJClass(HTTP_HEADERS)));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,1,0.51,0,0
646_20,20,20,"httpHeadersVar = body.decl(getEnvironment().getJClass(HTTP_HEADERS), ""httpHeaders"", JExpr._new(getEnvironment().getJClass(HTTP_HEADERS)));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.52,0,0
646_23,23,29,"if (hasMediaTypeDefined) {
AbstractJClass collectionsClass = getEnvironment().getJClass(CanonicalNameConstants.COLLECTIONS);
AbstractJClass mediaTypeClass = getEnvironment().getJClass(MEDIA_TYPE);

JInvocation mediaTypeListParam = collectionsClass.staticInvoke(""singletonList"").arg(mediaTypeClass.staticInvoke(""parseMediaType"").arg(mediaType));
body.add(JExpr.invoke(httpHeadersVar, ""setAccept"").arg(mediaTypeListParam));
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,1,1,2,2,0,0,1,0.43,3,1
646_24,24,24,AbstractJClass collectionsClass = getEnvironment().getJClass(CanonicalNameConstants.COLLECTIONS);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0.28,4,1
646_25,25,25,AbstractJClass mediaTypeClass = getEnvironment().getJClass(MEDIA_TYPE);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,2,2,0,0,0,0.26,5,2
646_27,27,27,"JInvocation mediaTypeListParam = collectionsClass.staticInvoke(""singletonList"").arg(mediaTypeClass.staticInvoke(""parseMediaType"").arg(mediaType));",0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,2,2,0,0,0,0.3,7,4
646_28,28,28,"body.add(JExpr.invoke(httpHeadersVar, ""setAccept"").arg(mediaTypeListParam));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,1,0.49,8,4
646_32,32,36,"if (headersFromAnnotations != null) {
for (Map.Entry<String, String> header : headersFromAnnotations.entrySet()) {
body.add(JExpr.invoke(httpHeadersVar, ""set"").arg(header.getKey()).arg(header.getValue()));
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,0,1,1,2,2,0,0,1,0.51,12,6
646_33,33,35,"for (Map.Entry<String, String> header : headersFromAnnotations.entrySet()) {
body.add(JExpr.invoke(httpHeadersVar, ""set"").arg(header.getKey()).arg(header.getValue()));
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,2,2,0,0,1,0.5,13,6
646_34,34,34,"body.add(JExpr.invoke(httpHeadersVar, ""set"").arg(header.getKey()).arg(header.getValue()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.5,14,7
646_38,38,50,"if (requiresCookies) {
AbstractJClass stringBuilderClass = getEnvironment().getClasses().STRING_BUILDER;
JVar cookiesValueVar = body.decl(stringBuilderClass, ""cookiesValue"", JExpr._new(stringBuilderClass));
for (String cookie : cookies) {
JInvocation cookieValue = JExpr.invoke(holder.getAvailableCookiesField(), ""get"").arg(cookie);
JInvocation cookieFormatted = getEnvironment().getClasses().STRING.staticInvoke(""format"").arg(String.format(""%s=%%s;"", cookie)).arg(cookieValue);
JInvocation appendCookie = JExpr.invoke(cookiesValueVar, ""append"").arg(cookieFormatted);
body.add(appendCookie);
}

JInvocation cookiesToString = cookiesValueVar.invoke(""toString"");
body.add(JExpr.invoke(httpHeadersVar, ""set"").arg(""Cookie"").arg(cookiesToString));
}",1,0,0,0,0,0,0,0,0,9,2,13,0,0,1,1,2,2,0,0,1,0.43,18,9
646_39,39,39,AbstractJClass stringBuilderClass = getEnvironment().getClasses().STRING_BUILDER;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.26,19,9
646_40,40,40,"JVar cookiesValueVar = body.decl(stringBuilderClass, ""cookiesValue"", JExpr._new(stringBuilderClass));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.29,20,10
646_41,41,46,"for (String cookie : cookies) {
JInvocation cookieValue = JExpr.invoke(holder.getAvailableCookiesField(), ""get"").arg(cookie);
JInvocation cookieFormatted = getEnvironment().getClasses().STRING.staticInvoke(""format"").arg(String.format(""%s=%%s;"", cookie)).arg(cookieValue);
JInvocation appendCookie = JExpr.invoke(cookiesValueVar, ""append"").arg(cookieFormatted);
body.add(appendCookie);
}",0,0,0,1,0,0,0,0,0,4,1,6,0,1,0,1,2,2,0,0,0,0.3,21,11
646_42,42,42,"JInvocation cookieValue = JExpr.invoke(holder.getAvailableCookiesField(), ""get"").arg(cookie);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.3,22,12
646_43,43,43,"JInvocation cookieFormatted = getEnvironment().getClasses().STRING.staticInvoke(""format"").arg(String.format(""%s=%%s;"", cookie)).arg(cookieValue);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.29,23,13
646_44,44,44,"JInvocation appendCookie = JExpr.invoke(cookiesValueVar, ""append"").arg(cookieFormatted);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.3,24,14
646_45,45,45,body.add(appendCookie);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.26,25,15
646_48,48,48,"JInvocation cookiesToString = cookiesValueVar.invoke(""toString"");",0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,2,2,0,0,0,0.3,28,17
646_49,49,49,"body.add(JExpr.invoke(httpHeadersVar, ""set"").arg(""Cookie"").arg(cookiesToString));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,1,0.48,29,17
646_52,52,54,"if (requiresMultipartHeader) {
body.add(JExpr.invoke(httpHeadersVar, ""set"").arg(JExpr.lit(""Content-Type"")).arg(getEnvironment().getJClass(MEDIA_TYPE).staticRef(""MULTIPART_FORM_DATA_VALUE"")));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,1,0.46,32,19
646_53,53,53,"body.add(JExpr.invoke(httpHeadersVar, ""set"").arg(JExpr.lit(""Content-Type"")).arg(getEnvironment().getJClass(MEDIA_TYPE).staticRef(""MULTIPART_FORM_DATA_VALUE"")));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.45,33,19
646_56,56,69,"if (requiresHeaders) {
for (String header : headers) {
JBlock block = null;
if (headersFromAnnotations.containsKey(header)) {
block = body._if(JExpr.invoke(holder.getAvailableHeadersField(), ""containsKey"").arg(header))._then();
} else {
block = body;
}

JInvocation headerValue = JExpr.invoke(holder.getAvailableHeadersField(), ""get"").arg(header);
block.add(JExpr.invoke(httpHeadersVar, ""set"").arg(header).arg(headerValue));
}

}",1,0,0,0,0,0,0,0,0,8,3,14,0,0,1,1,2,2,0,0,1,0.51,36,21
646_57,57,67,"for (String header : headers) {
JBlock block = null;
if (headersFromAnnotations.containsKey(header)) {
block = body._if(JExpr.invoke(holder.getAvailableHeadersField(), ""containsKey"").arg(header))._then();
} else {
block = body;
}

JInvocation headerValue = JExpr.invoke(holder.getAvailableHeadersField(), ""get"").arg(header);
block.add(JExpr.invoke(httpHeadersVar, ""set"").arg(header).arg(headerValue));
}",0,0,0,1,0,0,0,0,0,7,2,11,0,0,0,1,2,2,0,0,1,0.51,37,21
646_58,58,58,JBlock block = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.29,38,22
646_59,59,63,"if (headersFromAnnotations.containsKey(header)) {
block = body._if(JExpr.invoke(holder.getAvailableHeadersField(), ""containsKey"").arg(header))._then();
} else {
block = body;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,1,2,2,0,0,1,0.49,39,23
646_60,60,60,"block = body._if(JExpr.invoke(holder.getAvailableHeadersField(), ""containsKey"").arg(header))._then();",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.48,40,24
646_61,61,61,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.12,41,25
646_62,62,62,block = body;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.24,42,26
646_65,65,65,"JInvocation headerValue = JExpr.invoke(holder.getAvailableHeadersField(), ""get"").arg(header);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,2,2,0,0,1,0.51,45,28
646_66,66,66,"block.add(JExpr.invoke(httpHeadersVar, ""set"").arg(header).arg(headerValue));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,1,0.52,46,28
646_71,71,73,"if (requiresAuth) {
body.add(httpHeadersVar.invoke(""setAuthorization"").arg(holder.getAuthenticationField()));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,1,0.45,51,30
646_72,72,72,"body.add(httpHeadersVar.invoke(""setAuthorization"").arg(holder.getAuthenticationField()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.46,52,30
646_75,75,75,return httpHeadersVar;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,2,0,0,1,0.51,55,32
640_1,1,3,"public Map<Variable, Term> standardizeApart(List<Literal> l1Literals,
List<Literal> l2Literals,
StandardizeApartIndexical standardizeApartIndexical) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,8,5,0,0,1,0.47,19,11
640_4,4,4,Set<Variable> toRename = new HashSet<Variable>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,5,0,0,2,0.56,18,10
640_6,6,9,"for (Literal pl : l1Literals) {
toRename.addAll(variableCollector.collectAllVariables(pl
.getAtomicSentence()));
}",0,0,0,1,0,0,0,0,0,1,1,4,1,1,1,0,8,5,0,0,2,0.55,13,8
640_7,7,8,"toRename.addAll(variableCollector.collectAllVariables(pl
.getAtomicSentence()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,0,0,2,0.55,14,8
640_10,10,13,"for (Literal nl : l2Literals) {
toRename.addAll(variableCollector.collectAllVariables(nl
.getAtomicSentence()));
}",0,0,0,1,0,0,0,0,0,1,1,4,1,1,0,1,8,5,0,0,2,0.55,9,6
640_11,11,12,"toRename.addAll(variableCollector.collectAllVariables(nl
.getAtomicSentence()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,0,0,2,0.55,10,6
640_15,15,15,"Map<Variable, Term> renameSubstitution = new HashMap<Variable, Term>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,8,5,0,0,2,0.56,7,5
640_17,17,25,"for (Variable var : toRename) {
Variable v = null;
do {
v = new Variable(standardizeApartIndexical.getPrefix()
+ standardizeApartIndexical.getNextIndex());
} while (toRename.contains(v));

renameSubstitution.put(var, v);
}",0,0,0,1,0,0,0,0,0,6,2,9,0,0,1,1,8,5,0,0,2,0.55,0,0
640_18,18,18,Variable v = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,0,0,1,0.5,4,3
640_19,19,22,"do {
v = new Variable(standardizeApartIndexical.getPrefix()
+ standardizeApartIndexical.getNextIndex());
} while (toRename.contains(v));",0,1,0,0,0,0,0,0,0,3,1,4,0,1,0,1,8,5,0,0,2,0.53,0,0
640_20,20,20,v = new Variable(standardizeApartIndexical.getPrefix(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,2,0.58,2,1
640_21,21,21,+ standardizeApartIndexical.getNextIndex());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.35,1,0
640_22,22,22,} while (toRename.contains(v));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,5,0,0,0,0.33,0,0
640_24,24,24,"renameSubstitution.put(var, v);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,5,0,0,0,0.46,2,1
640_27,27,27,List<Literal> posLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,8,5,0,0,1,0.48,5,2
640_28,28,28,List<Literal> negLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,5,0,0,1,0.5,6,2
640_30,30,32,"for (Literal pl : l1Literals) {
posLits.add(substVisitor.subst(renameSubstitution, pl));
}",0,0,0,1,0,0,0,0,0,1,1,3,1,1,1,0,8,5,0,0,0,0.45,8,4
640_31,31,31,"posLits.add(substVisitor.subst(renameSubstitution, pl));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.42,9,4
640_33,33,35,"for (Literal nl : l2Literals) {
negLits.add(substVisitor.subst(renameSubstitution, nl));
}",0,0,0,1,0,0,0,0,0,1,1,3,1,1,0,1,8,5,0,0,0,0.46,11,6
640_34,34,34,"negLits.add(substVisitor.subst(renameSubstitution, nl));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.44,12,6
640_37,37,37,l1Literals.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,5,0,0,0,0.28,15,8
640_38,38,38,l1Literals.addAll(posLits);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.32,16,8
640_39,39,39,l2Literals.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.28,17,9
640_40,40,40,l2Literals.addAll(negLits);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,5,0,0,0,0.37,18,10
640_42,42,42,return renameSubstitution;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,8,5,0,0,0,0.43,20,12
639_1,1,2,"public Chain standardizeApart(Chain chain,
StandardizeApartIndexical standardizeApartIndexical) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,0,0,0,0.36,10,7
639_4,4,4,Set<Variable> toRename = variableCollector.collectAllVariables(chain);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,8,5,0,0,1,0.52,8,6
639_5,5,5,"Map<Variable, Term> renameSubstitution = new HashMap<Variable, Term>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,5,0,0,2,0.56,7,5
639_7,7,15,"for (Variable var : toRename) {
Variable v = null;
do {
v = new Variable(standardizeApartIndexical.getPrefix()
+ standardizeApartIndexical.getNextIndex());
} while (toRename.contains(v));

renameSubstitution.put(var, v);
}",0,0,0,1,0,0,0,0,0,6,2,9,0,0,1,1,8,5,0,0,2,0.55,0,0
639_8,8,8,Variable v = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,0,0,1,0.5,4,3
639_9,9,12,"do {
v = new Variable(standardizeApartIndexical.getPrefix()
+ standardizeApartIndexical.getNextIndex());
} while (toRename.contains(v));",0,1,0,0,0,0,0,0,0,3,1,4,0,1,0,1,8,5,0,0,2,0.53,0,0
639_10,10,10,v = new Variable(standardizeApartIndexical.getPrefix(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,2,0.58,2,1
639_11,11,11,+ standardizeApartIndexical.getNextIndex());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.35,1,0
639_12,12,12,} while (toRename.contains(v));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,5,0,0,0,0.33,0,0
639_14,14,14,"renameSubstitution.put(var, v);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,5,0,0,0,0.46,2,1
639_17,17,32,"if (renameSubstitution.size() > 0) {
List<Literal> lits = new ArrayList<Literal>();

for (Literal l : chain.getLiterals()) {
AtomicSentence atom = (AtomicSentence) substVisitor.subst(
renameSubstitution, l.getAtomicSentence());
lits.add(l.newInstance(atom));
}

Chain renamed = new Chain(lits);

renamed.setProofStep(new ProofStepRenaming(renamed, chain
.getProofStep()));

return renamed;
}",1,0,0,0,0,0,0,0,0,7,2,16,0,0,1,1,8,5,0,0,2,0.53,5,2
639_18,18,18,List<Literal> lits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,5,0,0,1,0.49,6,2
639_20,20,24,"for (Literal l : chain.getLiterals()) {
AtomicSentence atom = (AtomicSentence) substVisitor.subst(
renameSubstitution, l.getAtomicSentence());
lits.add(l.newInstance(atom));
}",0,0,0,1,0,0,0,0,0,2,1,5,0,0,1,1,8,5,0,0,2,0.55,8,4
639_21,21,22,"AtomicSentence atom = (AtomicSentence) substVisitor.subst(
renameSubstitution, l.getAtomicSentence());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,8,5,0,0,1,0.52,9,4
639_23,23,23,lits.add(l.newInstance(atom));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,0,0,1,0.45,11,6
639_26,26,26,Chain renamed = new Chain(lits);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,8,5,0,0,1,0.44,14,7
639_28,28,29,"renamed.setProofStep(new ProofStepRenaming(renamed, chain
.getProofStep()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,8,5,0,0,1,0.39,16,8
639_31,31,31,return renamed;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,8,5,0,0,0,0.36,19,9
639_34,34,34,return chain;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,8,5,0,0,0,0.31,22,10
638_1,1,2,"public Clause standardizeApart(Clause clause,
StandardizeApartIndexical standardizeApartIndexical) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,0,0,0,0.41,10,7
638_4,4,4,Set<Variable> toRename = variableCollector.collectAllVariables(clause);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,8,5,0,0,1,0.54,8,6
638_5,5,5,"Map<Variable, Term> renameSubstitution = new HashMap<Variable, Term>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,5,0,0,2,0.56,7,5
638_7,7,15,"for (Variable var : toRename) {
Variable v = null;
do {
v = new Variable(standardizeApartIndexical.getPrefix()
+ standardizeApartIndexical.getNextIndex());
} while (toRename.contains(v));

renameSubstitution.put(var, v);
}",0,0,0,1,0,0,0,0,0,6,2,9,0,0,1,1,8,5,0,0,2,0.55,0,0
638_8,8,8,Variable v = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,0,0,1,0.5,4,3
638_9,9,12,"do {
v = new Variable(standardizeApartIndexical.getPrefix()
+ standardizeApartIndexical.getNextIndex());
} while (toRename.contains(v));",0,1,0,0,0,0,0,0,0,3,1,4,0,1,0,1,8,5,0,0,2,0.53,0,0
638_10,10,10,v = new Variable(standardizeApartIndexical.getPrefix(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,2,0.58,2,1
638_11,11,11,+ standardizeApartIndexical.getNextIndex());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.35,1,0
638_12,12,12,} while (toRename.contains(v));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,5,0,0,0,0.33,0,0
638_14,14,14,"renameSubstitution.put(var, v);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,5,0,0,0,0.46,2,1
638_17,17,27,"if (renameSubstitution.size() > 0) {
List<Literal> literals = new ArrayList<Literal>();

for (Literal l : clause.getLiterals()) {
literals.add(substVisitor.subst(renameSubstitution, l));
}
Clause renamed = new Clause(literals);
renamed.setProofStep(new ProofStepRenaming(renamed, clause
.getProofStep()));
return renamed;
}",1,0,0,0,0,0,0,0,0,6,2,11,0,0,1,1,8,5,0,0,1,0.5,5,2
638_18,18,18,List<Literal> literals = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,5,0,0,1,0.5,6,2
638_20,20,22,"for (Literal l : clause.getLiterals()) {
literals.add(substVisitor.subst(renameSubstitution, l));
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,1,0,8,5,0,0,0,0.46,8,4
638_21,21,21,"literals.add(substVisitor.subst(renameSubstitution, l));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.45,9,4
638_23,23,23,Clause renamed = new Clause(literals);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,0,0,1,0.54,11,6
638_24,24,25,"renamed.setProofStep(new ProofStepRenaming(renamed, clause
.getProofStep()));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,8,5,0,0,1,0.42,12,6
638_26,26,26,return renamed;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,8,5,0,0,0,0.36,14,8
638_29,29,29,return clause;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,8,5,0,0,0,0.39,17,9
637_1,1,2,"	public StandardizeApartResult standardizeApart(Sentence sentence,
StandardizeApartIndexical standardizeApartIndexical) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,0,0,1,0.47,11,8
637_3,3,4,"Set<Variable> toRename = variableCollector
.collectAllVariables(sentence);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,8,5,0,0,2,0.6,9,7
637_5,5,5,"Map<Variable, Term> renameSubstitution = new HashMap<Variable, Term>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,5,0,0,2,0.56,8,6
637_6,6,6,"Map<Variable, Term> reverseSubstitution = new HashMap<Variable, Term>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,5,0,0,2,0.55,7,5
637_8,8,17,"for (Variable var : toRename) {
Variable v = null;
do {
v = new Variable(standardizeApartIndexical.getPrefix()
+ standardizeApartIndexical.getNextIndex());
} while (toRename.contains(v));

renameSubstitution.put(var, v);
reverseSubstitution.put(v, var);
}",0,0,0,1,0,0,0,0,0,7,2,10,0,0,1,1,8,5,0,0,2,0.55,0,0
637_9,9,9,Variable v = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,0,0,1,0.5,4,3
637_10,10,13,"do {
v = new Variable(standardizeApartIndexical.getPrefix()
+ standardizeApartIndexical.getNextIndex());
} while (toRename.contains(v));",0,1,0,0,0,0,0,0,0,3,1,4,0,1,0,1,8,5,0,0,2,0.53,0,0
637_11,11,11,v = new Variable(standardizeApartIndexical.getPrefix(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,2,0.58,2,1
637_12,12,12,+ standardizeApartIndexical.getNextIndex());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.35,1,0
637_13,13,13,} while (toRename.contains(v));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,5,0,0,0,0.33,0,0
637_15,15,15,"renameSubstitution.put(var, v);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,8,5,0,0,0,0.46,2,1
637_16,16,16,"reverseSubstitution.put(v, var);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,5,0,0,0,0.46,3,1
637_19,19,20,"Sentence standardized = substVisitor.subst(renameSubstitution,
sentence);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,8,5,0,0,1,0.57,6,3
637_22,22,23,"return new StandardizeApartResult(sentence, standardized,
renameSubstitution, reverseSubstitution);",0,0,0,0,0,0,1,0,0,0,0,2,0,0,1,0,8,5,0,0,2,0.56,9,4
610_1,1,1,    private void checkBackgroundTask() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.53,4,3
610_2,2,2,TaskFragment<Result> taskFragment = findTaskFragment();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,5,0,0,2,0.79,3,2
610_4,4,20,"if (taskFragment != null) {
if (taskFragment.isCanceled()) {
getFragmentManager().beginTransaction()
.remove(taskFragment)
.commit();

onReturnToCanceledTask();

setupUiForTaskState(false);
} else {
taskFragment.setCallback(this::handleTaskResult);

setupUiForTaskState(true);
}
} else {
setupUiForTaskState(false);
}",1,0,0,0,0,0,0,0,0,11,2,17,0,0,1,0,5,5,0,0,4,0.79,0,0
610_5,5,17,"if (taskFragment.isCanceled()) {
getFragmentManager().beginTransaction()
.remove(taskFragment)
.commit();

onReturnToCanceledTask();

setupUiForTaskState(false);
} else {
taskFragment.setCallback(this::handleTaskResult);

setupUiForTaskState(true);
}",1,0,0,0,0,0,0,0,0,8,1,13,0,0,0,0,5,5,0,0,4,0.79,0,0
610_6,6,6,getFragmentManager().beginTransaction(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.45,0,0
610_7,7,7,.remove(taskFragment),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,3,0.95,1,0
610_8,8,8,.commit();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,5,0,0,0,0.28,2,1
610_10,10,10,onReturnToCanceledTask();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,5,0,0,2,0.75,4,3
610_12,12,12,setupUiForTaskState(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,1,0.51,6,4
610_13,13,13,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.22,7,4
610_14,14,14,taskFragment.setCallback(this::handleTaskResult);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,5,0,0,2,0.71,8,5
610_16,16,16,setupUiForTaskState(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,1,0.52,10,7
610_18,18,18,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.22,12,8
610_19,19,19,setupUiForTaskState(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.51,13,8
609_1,1,1,    private void handleTaskResult(Result result) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.51,4,2
609_2,2,2,setupUiForTaskState(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,5,0,0,1,0.52,3,1
609_4,4,4,onTaskResult(result);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,5,0,0,1,0.56,1,0
609_6,6,6,TaskFragment<Result> taskFragment = findTaskFragment();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,5,0,0,2,0.78,0,0
609_8,8,12,"if (taskFragment != null) {
getFragmentManager().beginTransaction()
.remove(taskFragment)
.commit();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,5,5,0,0,3,0.76,2,1
609_9,9,9,getFragmentManager().beginTransaction(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.45,3,1
609_10,10,10,.remove(taskFragment),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,3,0.94,4,2
609_11,11,11,.commit();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.28,5,3
608_1,1,2,"    @Override
protected void onPause() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,6,0,0,0,0.42,2,1
608_3,3,3,super.onPause();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,6,0,0,0,0.42,1,0
608_5,5,5,TaskFragment<Result> taskFragment = findTaskFragment();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,9,6,0,0,1,0.55,0,0
608_7,7,8,"if (taskFragment != null)
taskFragment.setCallback(null);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,0,9,6,0,0,3,0.69,2,1
608_8,8,8,taskFragment.setCallback(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,3,0.67,3,1
602_1,1,1,private String getInline(LibraryType libraryType) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.32,1,1
602_2,2,2,"Collection<ClientLibrary> clientlibs = htmlLibraryManager.getLibraries(categoriesArray, libraryType, true, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.35,0,0
602_3,3,3,StringBuilder output = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.38,0,0
602_4,4,14,"for (ClientLibrary clientlib : clientlibs) {
HtmlLibrary htmlLibrary = htmlLibraryManager.getLibrary(libraryType, clientlib.getPath());
if (htmlLibrary != null) {
try {
output.append(IOUtils.toString(htmlLibrary.getInputStream(htmlLibraryManager.isMinifyEnabled()),
StandardCharsets.UTF_8));
} catch (IOException e) {
LOG.error(""Error getting input stream from clientlib with path '{}'."", clientlib.getPath());
}
}
}",0,0,0,1,0,0,0,0,0,6,4,11,1,1,0,0,4,4,0,0,1,0.35,1,0
602_5,5,5,"HtmlLibrary htmlLibrary = htmlLibraryManager.getLibrary(libraryType, clientlib.getPath());",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,4,0,0,1,0.32,2,1
602_6,6,13,"if (htmlLibrary != null) {
try {
output.append(IOUtils.toString(htmlLibrary.getInputStream(htmlLibraryManager.isMinifyEnabled()),
StandardCharsets.UTF_8));
} catch (IOException e) {
LOG.error(""Error getting input stream from clientlib with path '{}'."", clientlib.getPath());
}
}",1,0,0,0,0,0,0,0,0,4,3,8,1,1,0,0,4,4,0,0,1,0.35,3,2
602_7,7,12,"try {
output.append(IOUtils.toString(htmlLibrary.getInputStream(htmlLibraryManager.isMinifyEnabled()),
StandardCharsets.UTF_8));
} catch (IOException e) {
LOG.error(""Error getting input stream from clientlib with path '{}'."", clientlib.getPath());
}",0,0,0,0,1,0,0,0,0,3,2,6,0,0,0,0,4,4,0,0,1,0.35,4,3
602_8,8,9,"output.append(IOUtils.toString(htmlLibrary.getInputStream(htmlLibraryManager.isMinifyEnabled()),
StandardCharsets.UTF_8));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.37,5,4
602_10,10,10,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.18,7,6
602_11,11,11,"LOG.error(""Error getting input stream from clientlib with path '{}'."", clientlib.getPath());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.29,8,6
602_15,15,15,return output.toString();,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,0,4,4,0,0,0,0.3,12,8
601_1,1,1,private String getLibIncludes(LibraryType type) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.46,19,15
601_2,2,2,StringWriter sw = new StringWriter();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,7,0,0,0,0.46,18,14
601_3,3,18,"try {
if (categoriesArray == null || categoriesArray.length == 0)  {
LOG.error(""No categories detected. Please either specify the categories as a CSV string or a set of resource types for looking them up!"");
} else {
PrintWriter out = new PrintWriter(sw);
if (type == LibraryType.JS) {
htmlLibraryManager.writeJsInclude(request, out, categoriesArray);
} else if (type == LibraryType.CSS) {
htmlLibraryManager.writeCssInclude(request, out, categoriesArray);
} else {
htmlLibraryManager.writeIncludes(request, out, categoriesArray);
}
}
} catch (IOException e) {
LOG.error(""Failed to include client libraries {}"", Arrays.toString(categoriesArray));
}",0,0,0,0,1,0,0,0,0,12,3,16,0,1,0,1,7,7,0,0,3,0.62,2,1
601_4,4,15,"if (categoriesArray == null || categoriesArray.length == 0)  {
LOG.error(""No categories detected. Please either specify the categories as a CSV string or a set of resource types for looking them up!"");
} else {
PrintWriter out = new PrintWriter(sw);
if (type == LibraryType.JS) {
htmlLibraryManager.writeJsInclude(request, out, categoriesArray);
} else if (type == LibraryType.CSS) {
htmlLibraryManager.writeCssInclude(request, out, categoriesArray);
} else {
htmlLibraryManager.writeIncludes(request, out, categoriesArray);
}
}",1,0,0,0,0,0,0,0,0,9,2,12,0,0,0,0,7,7,0,0,3,0.62,5,3
601_5,5,5,"LOG.error(""No categories detected. Please either specify the categories as a CSV string or a set of resource types for looking them up!"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.49,15,11
601_6,6,6,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.31,14,10
601_7,7,7,PrintWriter out = new PrintWriter(sw);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,7,0,0,0,0.41,13,9
601_8,8,14,"if (type == LibraryType.JS) {
htmlLibraryManager.writeJsInclude(request, out, categoriesArray);
} else if (type == LibraryType.CSS) {
htmlLibraryManager.writeCssInclude(request, out, categoriesArray);
} else {
htmlLibraryManager.writeIncludes(request, out, categoriesArray);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,1,0,0,7,7,0,0,3,0.6,6,3
601_9,9,9,"htmlLibraryManager.writeJsInclude(request, out, categoriesArray);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,2,0.58,11,7
601_10,10,10,} else if (type == LibraryType.CSS) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.51,10,6
601_11,11,11,"htmlLibraryManager.writeCssInclude(request, out, categoriesArray);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,2,0.58,9,5
601_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.31,8,4
601_13,13,13,"htmlLibraryManager.writeIncludes(request, out, categoriesArray);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.5,7,3
601_16,16,16,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.36,4,2
601_17,17,17,"LOG.error(""Failed to include client libraries {}"", Arrays.toString(categoriesArray));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.49,3,1
601_20,20,20,String html = sw.toString();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,7,0,0,1,0.61,0,0
601_21,21,21,return getHtmlWithInjectedAttributes(html);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,7,7,0,0,3,0.75,0,0
597_1,1,1,private void setQueryTtlCachePaginationLimit(RDFUnitConfiguration configuration),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.58,9,5
597_2,2,2,throws ParameterException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,4,2,1,0,0,0.28,8,4
597_4,4,4,long ttl = 60L * 1000L * queryCacheTTL;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,1,0.52,6,3
597_5,5,5,configuration.setEndpointQueryCacheTTL(ttl);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,1,0.49,5,2
597_7,7,7,configuration.setEndpointQueryDelayMS(queryDelay);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,1,0.57,3,1
597_9,9,9,configuration.setEndpointQueryPagination(queryPagination);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,1,0.56,1,0
597_11,11,11,configuration.setEndpointQueryLimit(queryLimit);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,2,0.72,0,0
596_1,1,1,private void setQueryTtlCachePaginationLimit(RDFUnitConfiguration configuration),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.56,7,4
596_2,2,2,throws ParameterException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,4,2,1,0,0,0.39,6,3
596_4,4,4,long ttl = 60L * 1000L * queryCacheTTL;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,1,0.52,4,2
596_5,5,5,configuration.setEndpointQueryCacheTTL(ttl);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,1,0.5,3,1
596_7,7,7,configuration.setEndpointQueryDelayMS(queryDelay);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,1,0.55,1,0
596_9,9,9,configuration.setEndpointQueryPagination(queryPagination);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,2,0.73,0,0
596_11,11,11,configuration.setEndpointQueryLimit(queryLimit);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,1,0.55,2,1
595_1,1,1,private void setQueryTtlCachePaginationLimit(RDFUnitConfiguration configuration),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.49,5,3
595_2,2,2,throws ParameterException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,4,2,1,0,0,0.3,4,2
595_4,4,4,long ttl = 60L * 1000L * queryCacheTTL;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,1,0.51,2,1
595_5,5,5,configuration.setEndpointQueryCacheTTL(ttl);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,1,0.47,1,0
595_7,7,7,configuration.setEndpointQueryDelayMS(queryDelay);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,2,0.71,0,0
595_9,9,9,configuration.setEndpointQueryPagination(queryPagination);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,1,0.57,2,1
595_11,11,11,configuration.setEndpointQueryLimit(queryLimit);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,1,0.58,4,2
594_1,1,1,  private void setTestAutogetCacheManual(RDFUnitConfiguration configuration),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.5,5,3
594_2,2,2,throws ParameterException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,0,0,0,0.32,4,2
594_3,3,3,configuration.setTestCacheEnabled(!noTestCache);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,1,0.53,3,1
594_5,5,5,configuration.setManualTestsEnabled(!noManualTests);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,1,0.58,1,0
594_7,7,7,configuration.setAutoTestsEnabled(!noAutoTests);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,1,0.59,0,0
594_9,9,11,"if (!configuration.isManualTestsEnabled() && !configuration.isAutoTestsEnabled()) {
throw new ParameterException(""both -M & -A does not make sense"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,1,0.53,2,1
594_10,10,10,"throw new ParameterException(""both -M & -A does not make sense"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,0,0,0,0.31,3,1
594_13,13,15,"if (!configuration.isAutoTestsEnabled() && configuration.isTestCacheEnabled()) {
throw new ParameterException(""both -A & -C does not make sense"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,2,0,0,1,0.51,6,3
594_14,14,14,"throw new ParameterException(""both -A & -C does not make sense"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,0,0,0,0.3,7,3
593_1,1,1,  private void setTestAutogetCacheManual(RDFUnitConfiguration configuration),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.6,3,2
593_2,2,2,throws ParameterException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,0,0,0,0.3,2,1
593_3,3,3,configuration.setTestCacheEnabled(!noTestCache);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,1,0.5,1,0
593_5,5,5,configuration.setManualTestsEnabled(!noManualTests);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,2,0.73,0,0
593_7,7,7,configuration.setAutoTestsEnabled(!noAutoTests);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,1,0.53,2,1
593_9,9,11,"if (!configuration.isManualTestsEnabled() && !configuration.isAutoTestsEnabled()) {
throw new ParameterException(""both -M & -A does not make sense"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,2,0.62,4,2
593_10,10,10,"throw new ParameterException(""both -M & -A does not make sense"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,0,0,0,0.34,5,2
593_13,13,15,"if (!configuration.isAutoTestsEnabled() && configuration.isTestCacheEnabled()) {
throw new ParameterException(""both -A & -C does not make sense"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,2,0,0,1,0.48,8,4
593_14,14,14,"throw new ParameterException(""both -A & -C does not make sense"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,0,0,0,0.35,9,4
592_1,1,1,throws ParameterException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,2,0,0,0.3,0,0
592_2,2,2,Collection<String> outputFormats = new ArrayList<String>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,2,0,2,0.57,0,0
592_3,3,3,outputFormats.add(outputFormat);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,2,0,2,0.71,1,0
592_4,4,8,"try {
configuration.setOutputFormatTypes(outputFormats);
} catch (UndefinedSerializationException e) {
throw new ParameterException(e.getMessage(), e);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,1,0,0,5,3,2,0,3,0.61,2,1
592_5,5,5,configuration.setOutputFormatTypes(outputFormats);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,2,0,2,0.65,3,2
592_6,6,6,} catch (UndefinedSerializationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,2,0,0,0.31,4,3
592_7,7,7,"throw new ParameterException(e.getMessage(), e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,2,0,1,0.42,5,4
591_1,1,1,throws ParameterException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,4,0,0,0,0.35,10,7
591_2,2,4,"if (imports) {
configuration.setAugmentWithOwlImports(true);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,4,0,0,0,0.44,7,5
591_3,3,3,configuration.setAugmentWithOwlImports(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.42,8,5
591_5,5,15,"if (!schemaUriPrefixes.isEmpty()) {
try {
configuration.setSchemataFromPrefixes(schemaUriPrefixes);
} catch (UndefinedSchemaException e) {
throw new ParameterException(e.getMessage(), e);
}
}
else {
log.info(""Searching for used schemata in dataset"");
configuration.setAutoSchemataFromQEF(configuration.getTestSource().getExecutionFactory());
}",1,0,0,0,0,0,0,0,0,7,2,11,0,0,0,0,4,4,0,0,2,0.62,0,0
591_6,6,10,"try {
configuration.setSchemataFromPrefixes(schemaUriPrefixes);
} catch (UndefinedSchemaException e) {
throw new ParameterException(e.getMessage(), e);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,4,4,0,0,2,0.62,1,0
591_7,7,7,configuration.setSchemataFromPrefixes(schemaUriPrefixes);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.57,4,2
591_8,8,8,} catch (UndefinedSchemaException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.59,3,1
591_9,9,9,"throw new ParameterException(e.getMessage(), e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,4,0,0,0,0.36,2,0
591_12,12,12,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.19,0,0
591_13,13,13,"log.info(""Searching for used schemata in dataset"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.36,1,0
591_14,14,14,configuration.setAutoSchemataFromQEF(configuration.getTestSource().getExecutionFactory());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.41,2,1
590_1,1,1,throws ParameterException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,1,1,0,0,0.28,5,4
590_2,2,4,"if (imports) {
configuration.setAugmentWithOwlImports(true);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,1,1,0,0,0.39,2,2
590_3,3,3,configuration.setAugmentWithOwlImports(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.38,3,2
590_5,5,15,"if (!schemaUriPrefixes.isEmpty()) {
try {
configuration.setSchemataFromPrefixes(schemaUriPrefixes);
} catch (UndefinedSchemaException e) {
throw new ParameterException(e.getMessage(), e);
}
}
else {
log.info(""Searching for used schemata in dataset"");
configuration.setAutoSchemataFromQEF(configuration.getTestSource().getExecutionFactory());
}",1,0,0,0,0,0,0,0,0,7,2,11,0,0,0,0,3,1,1,0,2,0.6,0,0
590_6,6,10,"try {
configuration.setSchemataFromPrefixes(schemaUriPrefixes);
} catch (UndefinedSchemaException e) {
throw new ParameterException(e.getMessage(), e);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,3,1,1,0,2,0.58,0,0
590_7,7,7,configuration.setSchemataFromPrefixes(schemaUriPrefixes);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.54,0,0
590_8,8,8,} catch (UndefinedSchemaException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.44,1,0
590_9,9,9,"throw new ParameterException(e.getMessage(), e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,1,1,0,1,0.43,2,1
590_12,12,12,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.18,5,3
590_13,13,13,"log.info(""Searching for used schemata in dataset"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.29,6,3
590_14,14,14,configuration.setAutoSchemataFromQEF(configuration.getTestSource().getExecutionFactory());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.51,7,4
589_1,1,1,  private void setDumpOrSparqlEndpoint(RDFUnitConfiguration configuration) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.29,5,3
589_2,2,5,"if (datasetOptions != null && datasetOptions.customDereferenceURI != null
&& !datasetOptions.customDereferenceURI.isEmpty()) {
configuration.setCustomDereferenceURI(datasetOptions.customDereferenceURI);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,2,2,0,0,0,0.21,1,0
589_3,3,3,&& !datasetOptions.customDereferenceURI.isEmpty()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.21,3,1
589_4,4,4,configuration.setCustomDereferenceURI(datasetOptions.customDereferenceURI);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,2,0
589_7,7,20,"if (datasetOptions != null &&
datasetOptions.endpointOptions != null &&
datasetOptions.endpointOptions.endpointURI != null &&
!datasetOptions.endpointOptions.endpointURI.isEmpty()) {
if (datasetOptions.endpointOptions.endpointBasicAuthOptions != null) {
configuration.setEndpointConfiguration(datasetOptions.endpointOptions.endpointURI,
datasetOptions.endpointOptions.endpointGraphs,
datasetOptions.endpointOptions.endpointBasicAuthOptions.username,
datasetOptions.endpointOptions.endpointBasicAuthOptions.password);
} else {
configuration.setEndpointConfiguration(datasetOptions.endpointOptions.endpointURI,
datasetOptions.endpointOptions.endpointGraphs, """", """");
}
}",1,0,0,0,0,0,0,0,0,5,2,14,0,0,1,0,2,2,0,0,1,0.35,0,0
589_8,8,10,"datasetOptions.endpointOptions != null &&
datasetOptions.endpointOptions.endpointURI != null &&
!datasetOptions.endpointOptions.endpointURI.isEmpty()) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,2,2,0,0,1,0.2,1,0
589_11,11,19,"if (datasetOptions.endpointOptions.endpointBasicAuthOptions != null) {
configuration.setEndpointConfiguration(datasetOptions.endpointOptions.endpointURI,
datasetOptions.endpointOptions.endpointGraphs,
datasetOptions.endpointOptions.endpointBasicAuthOptions.username,
datasetOptions.endpointOptions.endpointBasicAuthOptions.password);
} else {
configuration.setEndpointConfiguration(datasetOptions.endpointOptions.endpointURI,
datasetOptions.endpointOptions.endpointGraphs, """", """");
}",1,0,0,0,0,0,0,0,0,3,1,9,0,0,0,0,2,2,0,0,1,0.36,4,2
589_12,12,15,"configuration.setEndpointConfiguration(datasetOptions.endpointOptions.endpointURI,
datasetOptions.endpointOptions.endpointGraphs,
datasetOptions.endpointOptions.endpointBasicAuthOptions.username,
datasetOptions.endpointOptions.endpointBasicAuthOptions.password);",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,2,2,0,0,1,0.37,5,2
589_16,16,16,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.12,9,4
589_17,17,18,"configuration.setEndpointConfiguration(datasetOptions.endpointOptions.endpointURI,
datasetOptions.endpointOptions.endpointGraphs, """", """");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,1,0.22,10,4
588_1,1,2,"@Override
public Object call() throws Exception {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,1,0,0,0.19,72,41
588_3,3,5,"if (!noLOV) {
RDFUnitUtils.fillSchemaServiceFromLOV();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,2,1,1,0,0,0.26,69,39
588_4,4,4,RDFUnitUtils.fillSchemaServiceFromLOV();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.26,70,39
588_7,7,7,RDFUnitConfiguration configuration = getConfigurationFromArguments();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,1,1,0,0,0.31,67,38
588_8,8,8,checkNotNull(configuration);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,1,1,0,0,0.16,66,37
588_10,10,13,"if (!IOUtils.isFile(configuration.getDataFolder())) {
log.error(""Path "" + configuration.getDataFolder() + "" does not exists, use -f argument"");
System.exit(1);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,2,1,1,0,0,0.28,61,34
588_11,11,11,"log.error(""Path "" + configuration.getDataFolder() + "" does not exists, use -f argument"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.28,63,35
588_12,12,12,System.exit(1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.15,62,34
588_15,15,15,RDFUnit rdfunit = RDFUnit.createWithOwlAndShacl();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,1,1,0,0,0.3,59,33
588_16,16,20,"try {
rdfunit.init();
} catch (IllegalArgumentException e) {
displayHelpAndExit(""Cannot read patterns and/or pattern generators."", e);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,1,0,1,2,1,1,0,0,0.2,54,29
588_17,17,17,rdfunit.init();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.14,57,31
588_18,18,18,} catch (IllegalArgumentException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.19,56,30
588_19,19,19,"displayHelpAndExit(""Cannot read patterns and/or pattern generators."", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.21,55,29
588_22,22,22,final TestSource dataset = configuration.getTestSource();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,1,1,0,0,0.28,52,28
588_24,24,27,"TestGeneratorExecutor testGeneratorExecutor = new TestGeneratorExecutor(
configuration.isAutoTestsEnabled(),
configuration.isTestCacheEnabled(),
configuration.isManualTestsEnabled());",0,0,0,0,0,1,0,0,0,0,0,4,0,1,1,0,2,1,1,0,0,0.31,47,27
588_28,28,29,"TestSuite testSuite = testGeneratorExecutor
.generateTestSuite(configuration.getTestFolder(), dataset, rdfunit.getAutoGenerators());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,1,2,1,1,0,0,0.41,45,26
588_31,31,32,"TestExecutor testExecutor = TestExecutorFactory
.createTestExecutor(configuration.getTestCaseExecutionType());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,2,1,1,0,0,0.34,42,25
588_33,33,35,"if (testExecutor == null) {
displayHelpAndExit(""Cannot initialize test executor. Exiting"", null);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,1,1,0,0,0.28,39,23
588_34,34,34,"displayHelpAndExit(""Cannot initialize test executor. Exiting"", null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.28,40,23
588_36,36,36,SimpleTestExecutorMonitor testExecutorMonitor = new SimpleTestExecutorMonitor();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.34,38,22
588_37,37,37,testExecutorMonitor.setExecutionType(configuration.getTestCaseExecutionType());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.32,37,21
588_38,38,38,checkNotNull(testExecutor);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.28,36,20
588_39,39,39,testExecutor.addTestExecutorMonitor(testExecutorMonitor);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,1,1,0,0,0.35,35,19
588_41,41,41,"testExecutor.execute(dataset, testSuite);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,1,1,0,0,0.42,33,18
588_42,42,42,TestExecution testExecution = testExecutorMonitor.getTestExecution();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,1,1,0,0,0.33,32,17
588_44,44,44,"String resultsFolder = configuration.getDataFolder() + ""results/"";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,1,1,0,0,0.26,30,16
588_45,45,47,"String filename =
resultsFolder + dataset.getPrefix() + ""."" + configuration.getTestCaseExecutionType()
.toString();",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,1,2,1,1,0,0,0.26,27,15
588_49,49,56,"if (!(new File(resultsFolder).exists())) {
log.warn(""Results folder ({}) does not exist, creating it..."", resultsFolder);
File resultsFileFolder = new File(resultsFolder);
boolean dirsCreated = resultsFileFolder.mkdirs();
if (!dirsCreated) {
log.error(""Could not create folder {}"", resultsFileFolder.getAbsolutePath());
}
}",1,0,0,0,0,0,0,0,0,5,3,8,0,0,1,1,2,1,1,0,0,0.28,18,9
588_50,50,50,"log.warn(""Results folder ({}) does not exist, creating it..."", resultsFolder);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.17,24,13
588_51,51,51,File resultsFileFolder = new File(resultsFolder);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.16,23,12
588_52,52,52,boolean dirsCreated = resultsFileFolder.mkdirs();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.15,22,11
588_53,53,55,"if (!dirsCreated) {
log.error(""Could not create folder {}"", resultsFileFolder.getAbsolutePath());
}",1,0,0,0,0,0,0,0,0,1,2,3,0,1,0,0,2,1,1,0,0,0.3,19,9
588_54,54,54,"log.error(""Could not create folder {}"", resultsFileFolder.getAbsolutePath());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.3,20,9
588_58,58,62,"List<RdfWriter> outputWriters = configuration.getOutputFormats().stream()
.map(serializationFormat ->
RdfResultsWriterFactory
.createWriterFromFormat(filename, serializationFormat, testExecution))
.collect(Collectors.toList());",0,0,0,0,0,1,0,0,0,0,0,5,0,0,1,1,2,1,1,0,0,0.39,12,8
588_64,64,64,RdfWriter resultWriter = new RdfMultipleWriter(outputWriters);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,1,1,0,0,0.45,10,7
588_65,65,73,"try {
Model model = ModelFactory.createDefaultModel();
TestExecutionWriter.create(testExecution).write(model);

resultWriter.write(model);
log.info(""Results stored in: "" + filename + "".*"");
} catch (RdfWriterException e) {
log.error(""Cannot write tests to file"", e);
}",0,0,0,0,1,0,0,0,0,6,1,9,0,1,0,1,2,1,1,0,0,0.38,1,0
588_66,66,66,Model model = ModelFactory.createDefaultModel();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.28,8,5
588_67,67,67,TestExecutionWriter.create(testExecution).write(model);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,1,1,0,0,0.41,7,4
588_69,69,69,resultWriter.write(model);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,1,1,0,0,0.42,5,3
588_70,70,70,"log.info(""Results stored in: "" + filename + "".*"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.2,4,2
588_71,71,71,} catch (RdfWriterException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.36,3,1
588_72,72,72,"log.error(""Cannot write tests to file"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.22,2,0
588_75,75,85,"if (configuration.isCalculateCoverageEnabled()) {
Model testSuiteModel = ModelFactory.createDefaultModel();
PrefixNSService.setNSPrefixesInModel(testSuiteModel);
for (GenericTestCase ut : testSuite.getTestCases()) {
TestCaseWriter.create(ut).write(testSuiteModel);
}

TestCoverageEvaluator tce = new TestCoverageEvaluator();
tce.calculateCoverage(new QueryExecutionFactoryModel(testSuiteModel),
configuration.getTestSource().getExecutionFactory());
}",1,0,0,0,0,0,0,0,0,6,2,11,0,0,1,1,2,1,1,0,2,0.65,0,0
588_76,76,76,Model testSuiteModel = ModelFactory.createDefaultModel();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.4,1,0
588_77,77,77,PrefixNSService.setNSPrefixesInModel(testSuiteModel);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.4,2,1
588_78,78,80,"for (GenericTestCase ut : testSuite.getTestCases()) {
TestCaseWriter.create(ut).write(testSuiteModel);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,2,1,1,0,0,0.4,3,2
588_79,79,79,TestCaseWriter.create(ut).write(testSuiteModel);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.41,4,3
588_82,82,82,TestCoverageEvaluator tce = new TestCoverageEvaluator();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,1,1,0,1,0.23,7,5
588_83,83,84,"tce.calculateCoverage(new QueryExecutionFactoryModel(testSuiteModel),
configuration.getTestSource().getExecutionFactory());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,2,1,1,0,2,0.66,8,5
588_87,87,87,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,1,1,0,0,-0.02,12,7
587_1,1,2,"@Override
public Object call() throws Exception {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.37,41,24
587_3,3,5,"if (!noLOV) {
RDFUnitUtils.fillSchemaServiceFromLOV();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,3,0,0,1,0.29,38,22
587_4,4,4,RDFUnitUtils.fillSchemaServiceFromLOV();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.29,39,22
587_7,7,7,RDFUnitConfiguration configuration = getConfigurationFromArguments();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,1,0.34,36,21
587_8,8,8,checkNotNull(configuration);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,0,0.3,35,20
587_10,10,13,"if (!IOUtils.isFile(configuration.getDataFolder())) {
log.error(""Path "" + configuration.getDataFolder() + "" does not exists, use -f argument"");
System.exit(1);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,4,3,0,0,0,0.37,30,17
587_11,11,11,"log.error(""Path "" + configuration.getDataFolder() + "" does not exists, use -f argument"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.34,32,18
587_12,12,12,System.exit(1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.23,31,17
587_15,15,15,RDFUnit rdfunit = RDFUnit.createWithOwlAndShacl();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,1,0.21,28,16
587_16,16,20,"try {
rdfunit.init();
} catch (IllegalArgumentException e) {
displayHelpAndExit(""Cannot read patterns and/or pattern generators."", e);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,1,0,1,4,3,0,0,0,0.37,23,12
587_17,17,17,rdfunit.init();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.37,26,14
587_18,18,18,} catch (IllegalArgumentException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,25,13
587_19,19,19,"displayHelpAndExit(""Cannot read patterns and/or pattern generators."", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.32,24,12
587_22,22,22,final TestSource dataset = configuration.getTestSource();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.29,21,11
587_24,24,27,"TestGeneratorExecutor testGeneratorExecutor = new TestGeneratorExecutor(
configuration.isAutoTestsEnabled(),
configuration.isTestCacheEnabled(),
configuration.isManualTestsEnabled());",0,0,0,0,0,1,0,0,0,0,0,4,0,1,1,0,4,3,0,0,0,0.31,16,10
587_28,28,29,"TestSuite testSuite = testGeneratorExecutor
.generateTestSuite(configuration.getTestFolder(), dataset, rdfunit.getAutoGenerators());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,1,4,3,0,0,0,0.41,14,9
587_31,31,32,"TestExecutor testExecutor = TestExecutorFactory
.createTestExecutor(configuration.getTestCaseExecutionType());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,4,3,0,0,0,0.35,11,8
587_33,33,35,"if (testExecutor == null) {
displayHelpAndExit(""Cannot initialize test executor. Exiting"", null);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,0,0.35,8,6
587_34,34,34,"displayHelpAndExit(""Cannot initialize test executor. Exiting"", null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,9,6
587_36,36,36,SimpleTestExecutorMonitor testExecutorMonitor = new SimpleTestExecutorMonitor();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.34,7,5
587_37,37,37,testExecutorMonitor.setExecutionType(configuration.getTestCaseExecutionType());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.33,6,4
587_38,38,38,checkNotNull(testExecutor);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.36,5,3
587_39,39,39,testExecutor.addTestExecutorMonitor(testExecutorMonitor);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,0,0.34,4,2
587_41,41,41,"testExecutor.execute(dataset, testSuite);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.4,2,1
587_42,42,42,TestExecution testExecution = testExecutorMonitor.getTestExecution();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.32,1,0
587_44,44,44,"String resultsFolder = configuration.getDataFolder() + ""results/"";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,1,0.53,0,0
587_45,45,47,"String filename =
resultsFolder + dataset.getPrefix() + ""."" + configuration.getTestCaseExecutionType()
.toString();",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,1,4,3,0,0,1,0.48,1,0
587_49,49,56,"if (!(new File(resultsFolder).exists())) {
log.warn(""Results folder ({}) does not exist, creating it..."", resultsFolder);
File resultsFileFolder = new File(resultsFolder);
boolean dirsCreated = resultsFileFolder.mkdirs();
if (!dirsCreated) {
log.error(""Could not create folder {}"", resultsFileFolder.getAbsolutePath());
}
}",1,0,0,0,0,0,0,0,0,5,3,8,0,0,1,1,4,3,0,0,1,0.55,5,2
587_50,50,50,"log.warn(""Results folder ({}) does not exist, creating it..."", resultsFolder);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.59,6,2
587_51,51,51,File resultsFileFolder = new File(resultsFolder);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.5,7,3
587_52,52,52,boolean dirsCreated = resultsFileFolder.mkdirs();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.47,8,4
587_53,53,55,"if (!dirsCreated) {
log.error(""Could not create folder {}"", resultsFileFolder.getAbsolutePath());
}",1,0,0,0,0,0,0,0,0,1,2,3,0,1,0,0,4,3,0,0,1,0.51,9,5
587_54,54,54,"log.error(""Could not create folder {}"", resultsFileFolder.getAbsolutePath());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.52,10,6
587_58,58,62,"List<RdfWriter> outputWriters = configuration.getOutputFormats().stream()
.map(serializationFormat ->
RdfResultsWriterFactory
.createWriterFromFormat(filename, serializationFormat, testExecution))
.collect(Collectors.toList());",0,0,0,0,0,1,0,0,0,0,0,5,0,0,1,1,4,3,0,0,3,0.7,14,8
587_64,64,64,RdfWriter resultWriter = new RdfMultipleWriter(outputWriters);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,3,0.84,20,9
587_65,65,73,"try {
Model model = ModelFactory.createDefaultModel();
TestExecutionWriter.create(testExecution).write(model);

resultWriter.write(model);
log.info(""Results stored in: "" + filename + "".*"");
} catch (RdfWriterException e) {
log.error(""Cannot write tests to file"", e);
}",0,0,0,0,1,0,0,0,0,6,1,9,0,1,0,1,4,3,0,0,4,0.74,21,9
587_66,66,66,Model model = ModelFactory.createDefaultModel();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.34,22,10
587_67,67,67,TestExecutionWriter.create(testExecution).write(model);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,2,0.6,23,11
587_69,69,69,resultWriter.write(model);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,3,0.93,25,13
587_70,70,70,"log.info(""Results stored in: "" + filename + "".*"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.47,26,13
587_71,71,71,} catch (RdfWriterException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.59,27,14
587_72,72,72,"log.error(""Cannot write tests to file"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.55,28,15
587_75,75,85,"if (configuration.isCalculateCoverageEnabled()) {
Model testSuiteModel = ModelFactory.createDefaultModel();
PrefixNSService.setNSPrefixesInModel(testSuiteModel);
for (GenericTestCase ut : testSuite.getTestCases()) {
TestCaseWriter.create(ut).write(testSuiteModel);
}

TestCoverageEvaluator tce = new TestCoverageEvaluator();
tce.calculateCoverage(new QueryExecutionFactoryModel(testSuiteModel),
configuration.getTestSource().getExecutionFactory());
}",1,0,0,0,0,0,0,0,0,6,2,11,0,0,1,1,4,3,0,0,2,0.57,31,17
587_76,76,76,Model testSuiteModel = ModelFactory.createDefaultModel();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.42,32,17
587_77,77,77,PrefixNSService.setNSPrefixesInModel(testSuiteModel);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.42,33,18
587_78,78,80,"for (GenericTestCase ut : testSuite.getTestCases()) {
TestCaseWriter.create(ut).write(testSuiteModel);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,4,3,0,0,2,0.59,34,19
587_79,79,79,TestCaseWriter.create(ut).write(testSuiteModel);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.63,35,20
587_82,82,82,TestCoverageEvaluator tce = new TestCoverageEvaluator();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.19,38,22
587_83,83,84,"tce.calculateCoverage(new QueryExecutionFactoryModel(testSuiteModel),
configuration.getTestSource().getExecutionFactory());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,3,0,0,0,0.41,39,22
587_87,87,87,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.21,43,24
586_1,1,2,"@Override
public Object call() throws Exception {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.25,1,1
586_3,3,5,"if (!noLOV) {
RDFUnitUtils.fillSchemaServiceFromLOV();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,3,0,0,1,0.23,0,0
586_4,4,4,RDFUnitUtils.fillSchemaServiceFromLOV();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.23,0,0
586_7,7,7,RDFUnitConfiguration configuration = getConfigurationFromArguments();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.28,3,1
586_8,8,8,checkNotNull(configuration);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.28,4,1
586_10,10,13,"if (!IOUtils.isFile(configuration.getDataFolder())) {
log.error(""Path "" + configuration.getDataFolder() + "" does not exists, use -f argument"");
System.exit(1);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,3,0,0,1,0.47,6,3
586_11,11,11,"log.error(""Path "" + configuration.getDataFolder() + "" does not exists, use -f argument"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.5,7,3
586_12,12,12,System.exit(1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.12,8,4
586_15,15,15,RDFUnit rdfunit = RDFUnit.createWithOwlAndShacl();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.07,11,6
586_16,16,20,"try {
rdfunit.init();
} catch (IllegalArgumentException e) {
displayHelpAndExit(""Cannot read patterns and/or pattern generators."", e);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,1,0,1,3,3,0,0,0,0.36,12,6
586_17,17,17,rdfunit.init();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.08,13,7
586_18,18,18,} catch (IllegalArgumentException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,14,8
586_19,19,19,"displayHelpAndExit(""Cannot read patterns and/or pattern generators."", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.36,15,9
586_22,22,22,final TestSource dataset = configuration.getTestSource();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.28,18,11
586_24,24,27,"TestGeneratorExecutor testGeneratorExecutor = new TestGeneratorExecutor(
configuration.isAutoTestsEnabled(),
configuration.isTestCacheEnabled(),
configuration.isManualTestsEnabled());",0,0,0,0,0,1,0,0,0,0,0,4,0,1,1,0,3,3,0,0,0,0.28,20,12
586_28,28,29,"TestSuite testSuite = testGeneratorExecutor
.generateTestSuite(configuration.getTestFolder(), dataset, rdfunit.getAutoGenerators());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,1,3,3,0,0,0,0.29,24,13
586_31,31,32,"TestExecutor testExecutor = TestExecutorFactory
.createTestExecutor(configuration.getTestCaseExecutionType());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,3,3,0,0,0,0.32,27,14
586_33,33,35,"if (testExecutor == null) {
displayHelpAndExit(""Cannot initialize test executor. Exiting"", null);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,0,0.27,29,15
586_34,34,34,"displayHelpAndExit(""Cannot initialize test executor. Exiting"", null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.25,30,15
586_36,36,36,SimpleTestExecutorMonitor testExecutorMonitor = new SimpleTestExecutorMonitor();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.31,32,17
586_37,37,37,testExecutorMonitor.setExecutionType(configuration.getTestCaseExecutionType());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.3,33,17
586_38,38,38,checkNotNull(testExecutor);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.29,34,18
586_39,39,39,testExecutor.addTestExecutorMonitor(testExecutorMonitor);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.31,35,19
586_41,41,41,"testExecutor.execute(dataset, testSuite);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.31,37,21
586_42,42,42,TestExecution testExecution = testExecutorMonitor.getTestExecution();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.28,38,21
586_44,44,44,"String resultsFolder = configuration.getDataFolder() + ""results/"";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.26,40,23
586_45,45,47,"String filename =
resultsFolder + dataset.getPrefix() + ""."" + configuration.getTestCaseExecutionType()
.toString();",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,1,3,3,0,0,0,0.3,41,23
586_49,49,56,"if (!(new File(resultsFolder).exists())) {
log.warn(""Results folder ({}) does not exist, creating it..."", resultsFolder);
File resultsFileFolder = new File(resultsFolder);
boolean dirsCreated = resultsFileFolder.mkdirs();
if (!dirsCreated) {
log.error(""Could not create folder {}"", resultsFileFolder.getAbsolutePath());
}
}",1,0,0,0,0,0,0,0,0,5,3,8,0,0,1,1,3,3,0,0,0,0.27,45,25
586_50,50,50,"log.warn(""Results folder ({}) does not exist, creating it..."", resultsFolder);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.25,46,25
586_51,51,51,File resultsFileFolder = new File(resultsFolder);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.21,47,26
586_52,52,52,boolean dirsCreated = resultsFileFolder.mkdirs();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.21,48,27
586_53,53,55,"if (!dirsCreated) {
log.error(""Could not create folder {}"", resultsFileFolder.getAbsolutePath());
}",1,0,0,0,0,0,0,0,0,1,2,3,0,1,0,0,3,3,0,0,0,0.26,49,28
586_54,54,54,"log.error(""Could not create folder {}"", resultsFileFolder.getAbsolutePath());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.27,50,29
586_58,58,62,"List<RdfWriter> outputWriters = configuration.getOutputFormats().stream()
.map(serializationFormat ->
RdfResultsWriterFactory
.createWriterFromFormat(filename, serializationFormat, testExecution))
.collect(Collectors.toList());",0,0,0,0,0,1,0,0,0,0,0,5,0,0,1,1,3,3,0,0,0,0.29,54,31
586_64,64,64,RdfWriter resultWriter = new RdfMultipleWriter(outputWriters);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.3,60,32
586_65,65,73,"try {
Model model = ModelFactory.createDefaultModel();
TestExecutionWriter.create(testExecution).write(model);

resultWriter.write(model);
log.info(""Results stored in: "" + filename + "".*"");
} catch (RdfWriterException e) {
log.error(""Cannot write tests to file"", e);
}",0,0,0,0,1,0,0,0,0,6,1,9,0,1,0,1,3,3,0,0,0,0.3,61,32
586_66,66,66,Model model = ModelFactory.createDefaultModel();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.25,62,33
586_67,67,67,TestExecutionWriter.create(testExecution).write(model);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.26,63,34
586_69,69,69,resultWriter.write(model);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.24,65,36
586_70,70,70,"log.info(""Results stored in: "" + filename + "".*"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.2,66,36
586_71,71,71,} catch (RdfWriterException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.25,67,37
586_72,72,72,"log.error(""Cannot write tests to file"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.28,68,38
586_75,75,85,"if (configuration.isCalculateCoverageEnabled()) {
Model testSuiteModel = ModelFactory.createDefaultModel();
PrefixNSService.setNSPrefixesInModel(testSuiteModel);
for (GenericTestCase ut : testSuite.getTestCases()) {
TestCaseWriter.create(ut).write(testSuiteModel);
}

TestCoverageEvaluator tce = new TestCoverageEvaluator();
tce.calculateCoverage(new QueryExecutionFactoryModel(testSuiteModel),
configuration.getTestSource().getExecutionFactory());
}",1,0,0,0,0,0,0,0,0,6,2,11,0,0,1,1,3,3,0,0,0,0.35,71,40
586_76,76,76,Model testSuiteModel = ModelFactory.createDefaultModel();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.3,72,40
586_77,77,77,PrefixNSService.setNSPrefixesInModel(testSuiteModel);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.28,73,41
586_78,78,80,"for (GenericTestCase ut : testSuite.getTestCases()) {
TestCaseWriter.create(ut).write(testSuiteModel);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,3,3,0,0,0,0.33,74,42
586_79,79,79,TestCaseWriter.create(ut).write(testSuiteModel);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,75,43
586_82,82,82,TestCoverageEvaluator tce = new TestCoverageEvaluator();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.35,78,45
586_83,83,84,"tce.calculateCoverage(new QueryExecutionFactoryModel(testSuiteModel),
configuration.getTestSource().getExecutionFactory());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,3,3,0,0,0,0.26,79,45
586_87,87,87,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.29,83,47
569_1,1,1,throws JClassAlreadyExistsException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,0,0.29,7,4
569_2,2,2,AbstractJClass tClass = getClasses().THREAD;,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.32,6,3
569_3,3,3,AbstractJClass lClass = getClasses().LOOPER;,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,3,3,0,0,0,0.32,5,2
569_5,5,5,IJExpression lhs = tClass.staticInvoke(METHOD_CUR_THREAD);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,3,3,0,0,0,0.41,3,1
569_6,6,6,IJExpression rhs = lClass.staticInvoke(METHOD_MAIN_LOOPER).invoke(METHOD_GET_THREAD);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,3,3,0,0,0,0.35,2,0
569_8,8,8,"JConditional con = delegatingMethod.body()._if(JOp.eq(lhs, rhs));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,1,0.49,0,0
569_9,9,9,JBlock thenBlock = con._then().add(previousBody);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.54,1,0
569_10,10,10,thenBlock._return();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.51,2,1
568_1,1,1,throws JClassAlreadyExistsException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,2,0,0,0,0.37,4,2
568_2,2,2,AbstractJClass tClass = getClasses().THREAD;,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0.44,3,1
568_3,3,3,AbstractJClass lClass = getClasses().LOOPER;,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,2,2,0,0,0,0.44,2,0
568_5,5,5,IJExpression lhs = tClass.staticInvoke(METHOD_CUR_THREAD);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,2,2,0,0,2,0.77,0,0
568_6,6,6,IJExpression rhs = lClass.staticInvoke(METHOD_MAIN_LOOPER).invoke(METHOD_GET_THREAD);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,2,2,0,0,2,0.78,1,0
568_8,8,8,"JConditional con = delegatingMethod.body()._if(JOp.eq(lhs, rhs));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,1,0.6,3,2
568_9,9,9,JBlock thenBlock = con._then().add(previousBody);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.29,4,2
568_10,10,10,thenBlock._return();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.27,5,3
567_1,1,1,throws JClassAlreadyExistsException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,1,1,0,1,0.46,1,0
567_2,2,2,AbstractJClass tClass = getClasses().THREAD;,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,4,1,1,0,3,0.85,0,0
567_3,3,3,AbstractJClass lClass = getClasses().LOOPER;,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,4,1,1,0,3,0.82,1,0
567_5,5,5,IJExpression lhs = tClass.staticInvoke(METHOD_CUR_THREAD);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,4,1,1,0,2,0.62,3,2
567_6,6,6,IJExpression rhs = lClass.staticInvoke(METHOD_MAIN_LOOPER).invoke(METHOD_GET_THREAD);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,4,1,1,0,4,0.81,4,2
567_8,8,8,"JConditional con = delegatingMethod.body()._if(JOp.eq(lhs, rhs));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,1,1,0,0,0.44,6,4
567_9,9,9,JBlock thenBlock = con._then().add(previousBody);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.33,7,4
567_10,10,10,thenBlock._return();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.28,8,5
566_1,1,2,"@Override
public void process(Element element, EComponentHolder holder) throws Exception {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,0,0.33,11,8
566_3,3,3,ExecutableElement executableElement = (ExecutableElement) element;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.26,10,7
566_4,4,4,"JMethod delegatingMethod = codeModelHelper.overrideAnnotatedMethod(executableElement, holder);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.35,9,6
566_5,5,5,JBlock previousBody = codeModelHelper.removeBody(delegatingMethod);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.32,8,5
566_6,6,6,JDefinedClass anonymousRunnableClass = codeModelHelper.createDelegatingAnonymousRunnableClass(previousBody);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.39,7,4
566_8,8,8,UiThread annotation = element.getAnnotation(UiThread.class);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,2,0.69,5,3
566_9,9,9,long delay = annotation.delay();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.39,4,2
566_10,10,10,UiThread.Propagation propagation = annotation.propagation();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,4,2,1,0,2,0.67,3,1
566_12,12,14,"if (delay == 0 && propagation == UiThread.Propagation.REUSE) {
addUIThreadCheck(delegatingMethod, previousBody, holder);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,4,2,1,0,3,0.7,0,0
566_13,13,13,"addUIThreadCheck(delegatingMethod, previousBody, holder);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,3,0.69,0,0
566_15,15,15,delegatingMethod.body().add(getJClass(UiThreadExecutor.class).staticInvoke(METHOD_RUN_TASK),0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.58,2,1
566_16,16,16,.arg(annotation.id()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,0,0.39,3,1
566_17,17,17,.arg(_new(anonymousRunnableClass)),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,0,0.39,4,2
566_18,18,18,.arg(lit(delay)));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,0,0.35,5,3
565_1,1,2,"    public ClassLoader getCachedNonBootclasspathSystemLib(String zip, ClassLoader parent,
String classLoaderName, List<ClassLoader> sharedLibraries) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,1,0,1,0.52,13,7
565_3,3,5,"if (mSystemLibsCacheMap == null) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,3,1,0,1,0.46,10,5
565_4,4,4,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.16,11,5
565_7,7,9,"if (parent != null || classLoaderName != null) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,3,1,0,0,0.34,6,3
565_8,8,8,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.16,7,3
565_11,11,11,CachedClassLoader cached = mSystemLibsCacheMap.get(zip);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,1,0,1,0.58,4,2
565_12,12,14,"if (cached == null) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,5,3,1,0,1,0.4,1,0
565_13,13,13,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.16,2,0
565_16,16,20,"if (!sharedLibrariesEquals(sharedLibraries, cached.sharedLibraries)) {
Log.w(TAG, ""Unexpected environment for cached library: ("" + sharedLibraries + ""|""
+ cached.sharedLibraries + "")"");
return null;
}",1,0,0,0,0,0,0,0,0,2,1,5,0,0,1,1,5,3,1,0,2,0.59,0,0
565_17,17,18,"Log.w(TAG, ""Unexpected environment for cached library: ("" + sharedLibraries + ""|""
+ cached.sharedLibraries + "")"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,1,0,2,0.58,1,0
565_19,19,19,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.16,3,2
565_22,22,22,"Log.d(TAG, ""Returning zygote-cached class loader: "" + zip);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,1,0.47,6,3
565_23,23,23,return cached.loader;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.52,7,3
564_1,1,1,    private void createAndCacheNonBootclasspathSystemClassLoader(SharedLibraryInfo lib) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.45,24,13
564_2,2,2,String path = lib.getPath();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.35,23,12
564_3,3,3,List<SharedLibraryInfo> dependencies = lib.getDependencies();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,0,0,0,0.39,22,11
564_5,5,5,ArrayList<ClassLoader> sharedLibraries = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,0,0.42,20,10
564_6,6,19,"if (dependencies != null) {
sharedLibraries = new ArrayList<ClassLoader>(dependencies.size());
for (SharedLibraryInfo dependency : dependencies) {
String dependencyPath = dependency.getPath();
CachedClassLoader cached = mSystemLibsCacheMap.get(dependencyPath);

if (cached == null) {
throw new IllegalStateException(""Failed to find dependency "" + dependencyPath
+ "" of cachedlibrary "" + path);
}

sharedLibraries.add(cached.loader);
}
}",1,0,0,0,0,0,0,0,0,7,3,14,0,1,0,1,5,4,0,0,0,0.45,6,2
564_7,7,7,sharedLibraries = new ArrayList<ClassLoader>(dependencies.size());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.41,18,8
564_8,8,18,"for (SharedLibraryInfo dependency : dependencies) {
String dependencyPath = dependency.getPath();
CachedClassLoader cached = mSystemLibsCacheMap.get(dependencyPath);

if (cached == null) {
throw new IllegalStateException(""Failed to find dependency "" + dependencyPath
+ "" of cachedlibrary "" + path);
}

sharedLibraries.add(cached.loader);
}",0,0,0,1,0,0,0,0,0,5,2,11,0,1,0,0,5,4,0,0,0,0.46,7,2
564_9,9,9,String dependencyPath = dependency.getPath();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.37,16,6
564_10,10,10,CachedClassLoader cached = mSystemLibsCacheMap.get(dependencyPath);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,5,4,0,0,0,0.43,15,5
564_12,12,15,"if (cached == null) {
throw new IllegalStateException(""Failed to find dependency "" + dependencyPath
+ "" of cachedlibrary "" + path);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,1,1,5,4,0,0,0,0.42,10,3
564_13,13,14,"throw new IllegalStateException(""Failed to find dependency "" + dependencyPath
+ "" of cachedlibrary "" + path);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,5,4,0,0,0,0.43,11,3
564_17,17,17,sharedLibraries.add(cached.loader);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,0,0,0,0.4,8,2
564_21,21,23,"ClassLoader classLoader = getClassLoader(path, Build.VERSION.SDK_INT, true ,
null , null , null ,
null , null , sharedLibraries );",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,5,4,0,0,0,0.43,2,1
564_25,25,27,"if (classLoader == null) {
throw new IllegalStateException(""Failed to cache "" + path);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,4,0,0,0,0.48,0,0
564_26,26,26,"throw new IllegalStateException(""Failed to cache "" + path);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,4,0,0,0,0.42,0,0
564_29,29,29,CachedClassLoader cached = new CachedClassLoader();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,0,0.46,3,1
564_30,30,30,cached.loader = classLoader;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.51,4,1
564_31,31,31,cached.sharedLibraries = sharedLibraries;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,0,0,0,0.33,5,2
564_33,33,33,"Log.d(TAG, ""Created zygote-cached class loader: "" + path);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,5,4,0,0,0,0.42,7,4
564_34,34,34,"mSystemLibsCacheMap.put(path, cached);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.35,8,4
563_1,1,1,    private void createAndCacheNonBootclasspathSystemClassLoader(SharedLibraryInfo lib) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.59,3,2
563_2,2,2,String path = lib.getPath();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.51,2,1
563_3,3,3,List<SharedLibraryInfo> dependencies = lib.getDependencies();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,1,0,2,0.72,1,0
563_5,5,5,ArrayList<ClassLoader> sharedLibraries = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,1,0,0,0.52,0,0
563_6,6,19,"if (dependencies != null) {
sharedLibraries = new ArrayList<ClassLoader>(dependencies.size());
for (SharedLibraryInfo dependency : dependencies) {
String dependencyPath = dependency.getPath();
CachedClassLoader cached = mSystemLibsCacheMap.get(dependencyPath);

if (cached == null) {
throw new IllegalStateException(""Failed to find dependency "" + dependencyPath
+ "" of cachedlibrary "" + path);
}

sharedLibraries.add(cached.loader);
}
}",1,0,0,0,0,0,0,0,0,7,3,14,0,1,0,1,4,3,1,0,3,0.76,1,0
563_7,7,7,sharedLibraries = new ArrayList<ClassLoader>(dependencies.size());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.6,2,1
563_8,8,18,"for (SharedLibraryInfo dependency : dependencies) {
String dependencyPath = dependency.getPath();
CachedClassLoader cached = mSystemLibsCacheMap.get(dependencyPath);

if (cached == null) {
throw new IllegalStateException(""Failed to find dependency "" + dependencyPath
+ "" of cachedlibrary "" + path);
}

sharedLibraries.add(cached.loader);
}",0,0,0,1,0,0,0,0,0,5,2,11,0,1,0,0,4,3,1,0,3,0.77,3,2
563_9,9,9,String dependencyPath = dependency.getPath();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,2,0.65,4,3
563_10,10,10,CachedClassLoader cached = mSystemLibsCacheMap.get(dependencyPath);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,4,3,1,0,3,0.83,5,4
563_12,12,15,"if (cached == null) {
throw new IllegalStateException(""Failed to find dependency "" + dependencyPath
+ "" of cachedlibrary "" + path);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,1,1,4,3,1,0,2,0.6,7,6
563_13,13,14,"throw new IllegalStateException(""Failed to find dependency "" + dependencyPath
+ "" of cachedlibrary "" + path);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,4,3,1,0,1,0.49,8,6
563_17,17,17,sharedLibraries.add(cached.loader);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,1,0,1,0.62,12,8
563_21,21,23,"ClassLoader classLoader = getClassLoader(path, Build.VERSION.SDK_INT, true ,
null , null , null ,
null , null , sharedLibraries );",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,4,3,1,0,1,0.6,16,9
563_25,25,27,"if (classLoader == null) {
throw new IllegalStateException(""Failed to cache "" + path);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,1,0,1,0.56,20,10
563_26,26,26,"throw new IllegalStateException(""Failed to cache "" + path);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,1,0,1,0.49,21,10
563_29,29,29,CachedClassLoader cached = new CachedClassLoader();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,1,0,1,0.69,24,12
563_30,30,30,cached.loader = classLoader;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.7,25,12
563_31,31,31,cached.sharedLibraries = sharedLibraries;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,1,0,1,0.57,26,13
563_33,33,33,"Log.d(TAG, ""Created zygote-cached class loader: "" + path);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,3,1,0,1,0.57,28,15
563_34,34,34,"mSystemLibsCacheMap.put(path, cached);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.57,29,15
540_1,1,1,"    public static void writeSAF(Context context, AudioFile audio, Uri safUri) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,2,0.44,37,25
540_2,2,2,Uri uri = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,5,0,0,0,0.26,36,24
540_4,4,7,"if (context == null) {
Log.e(TAG, ""writeSAF: context == null"");
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,8,5,0,0,2,0.39,31,21
540_5,5,5,"Log.e(TAG, ""writeSAF: context == null"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,2,0.42,33,22
540_6,6,6,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.15,32,21
540_9,9,13,"if (isTreeUriSaved(context)) {
List<String> pathSegments = new ArrayList<>(Arrays.asList(audio.getFile().getAbsolutePath().split(""/"")));
Uri sdcard = Uri.parse(PreferenceUtil.getInstance().getSAFSDCardUri());
uri = findDocument(DocumentFile.fromTreeUri(context, sdcard), pathSegments);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,8,5,0,0,0,0.36,25,17
540_10,10,10,"List<String> pathSegments = new ArrayList<>(Arrays.asList(audio.getFile().getAbsolutePath().split(""/"")));",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.33,28,19
540_11,11,11,Uri sdcard = Uri.parse(PreferenceUtil.getInstance().getSAFSDCardUri());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,0,0,0,0.34,27,18
540_12,12,12,"uri = findDocument(DocumentFile.fromTreeUri(context, sdcard), pathSegments);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,0,0,0,0.36,26,17
540_15,15,17,"if (uri == null) {
uri = safUri;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,8,5,0,0,1,0.27,21,15
540_16,16,16,uri = safUri;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.29,22,15
540_19,19,23,"if (uri == null) {
Log.e(TAG, ""writeSAF: Can't get SAF URI"");
toast(context, context.getString(R.string.saf_error_uri));
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,8,5,0,0,2,0.38,15,11
540_20,20,20,"Log.e(TAG, ""writeSAF: Can't get SAF URI"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,2,0.43,18,13
540_21,21,21,"toast(context, context.getString(R.string.saf_error_uri));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.28,17,12
540_22,22,22,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.15,16,11
540_25,25,50,"try {
final File original = audio.getFile();
File temp = File.createTempFile(""tmp-media"", '.' + Utils.getExtension(original));
Utils.copy(original, temp);
temp.deleteOnExit();
audio.setFile(temp);
writeFile(audio);

ParcelFileDescriptor pfd = context.getContentResolver().openFileDescriptor(uri, ""rw"");
if (pfd == null) {
Log.e(TAG, ""writeSAF: SAF provided incorrect URI: "" + uri);
return;
}

FileInputStream fis = new FileInputStream(temp);
byte[] audioContent = FileUtil.readBytes(fis);
FileOutputStream fos = new FileOutputStream(pfd.getFileDescriptor());
fos.write(audioContent);
fos.close();

temp.delete();
} catch (final Exception e) {
Log.e(TAG, ""writeSAF: Failed to write to file descriptor provided by SAF"", e);

toast(context, String.format(context.getString(R.string.saf_write_failed), e.getLocalizedMessage()));
}",0,0,0,0,1,0,0,0,0,19,2,26,0,0,1,0,8,5,0,0,4,0.57,0,0
540_26,26,26,final File original = audio.getFile();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,0,0,0,0.31,12,9
540_27,27,27,"File temp = File.createTempFile(""tmp-media"", '.' + Utils.getExtension(original));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,0,0,0,0.34,11,8
540_28,28,28,"Utils.copy(original, temp);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,0,0,0,0.33,10,7
540_29,29,29,temp.deleteOnExit();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,0,0,0,0.31,9,6
540_30,30,30,audio.setFile(temp);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,0,0,0,0.3,8,5
540_31,31,31,writeFile(audio);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,5,0,0,1,0.51,7,4
540_33,33,33,"ParcelFileDescriptor pfd = context.getContentResolver().openFileDescriptor(uri, ""rw"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,5,0,0,0,0.45,5,3
540_34,34,37,"if (pfd == null) {
Log.e(TAG, ""writeSAF: SAF provided incorrect URI: "" + uri);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,8,5,0,0,3,0.48,1,0
540_35,35,35,"Log.e(TAG, ""writeSAF: SAF provided incorrect URI: "" + uri);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,3,0.51,3,1
540_36,36,36,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.15,2,0
540_39,39,39,FileInputStream fis = new FileInputStream(temp);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,5,0,0,0,0.35,0,0
540_40,40,40,byte[] audioContent = FileUtil.readBytes(fis);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,0,0,1,0.51,1,0
540_41,41,41,FileOutputStream fos = new FileOutputStream(pfd.getFileDescriptor());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,0,0,0,0.42,2,1
540_42,42,42,fos.write(audioContent);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,0,0,1,0.57,3,2
540_43,43,43,fos.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,8,5,0,0,0,0.43,4,3
540_45,45,45,temp.delete();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,5,0,0,0,0.33,6,5
540_46,46,46,} catch (final Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.32,7,5
540_47,47,47,"Log.e(TAG, ""writeSAF: Failed to write to file descriptor provided by SAF"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,5,0,0,3,0.59,8,6
540_49,49,49,"toast(context, String.format(context.getString(R.string.saf_write_failed), e.getLocalizedMessage()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,5,0,0,2,0.39,10,8
539_1,1,1,"    public static void writeSAF(Context context, AudioFile audio, Uri safUri) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.53,24,15
539_2,2,2,Uri uri = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,6,0,0,0,0.33,23,14
539_4,4,7,"if (context == null) {
Log.e(TAG, ""writeSAF: context == null"");
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,6,6,0,0,0,0.33,18,11
539_5,5,5,"Log.e(TAG, ""writeSAF: context == null"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.33,20,12
539_6,6,6,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.27,19,11
539_9,9,13,"if (isTreeUriSaved(context)) {
List<String> pathSegments = new ArrayList<>(Arrays.asList(audio.getFile().getAbsolutePath().split(""/"")));
Uri sdcard = Uri.parse(PreferenceUtil.getInstance().getSAFSDCardUri());
uri = findDocument(DocumentFile.fromTreeUri(context, sdcard), pathSegments);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,6,6,0,0,1,0.49,12,7
539_10,10,10,"List<String> pathSegments = new ArrayList<>(Arrays.asList(audio.getFile().getAbsolutePath().split(""/"")));",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.48,15,9
539_11,11,11,Uri sdcard = Uri.parse(PreferenceUtil.getInstance().getSAFSDCardUri());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,0,0.39,14,8
539_12,12,12,"uri = findDocument(DocumentFile.fromTreeUri(context, sdcard), pathSegments);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,6,0,0,1,0.48,13,7
539_15,15,17,"if (uri == null) {
uri = safUri;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,6,0,0,0,0.33,8,5
539_16,16,16,uri = safUri;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.34,9,5
539_19,19,23,"if (uri == null) {
Log.e(TAG, ""writeSAF: Can't get SAF URI"");
toast(context, context.getString(R.string.saf_error_uri));
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,6,6,0,0,0,0.36,2,1
539_20,20,20,"Log.e(TAG, ""writeSAF: Can't get SAF URI"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.35,5,3
539_21,21,21,"toast(context, context.getString(R.string.saf_error_uri));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.35,4,2
539_22,22,22,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.27,3,1
539_25,25,50,"try {
final File original = audio.getFile();
File temp = File.createTempFile(""tmp-media"", '.' + Utils.getExtension(original));
Utils.copy(original, temp);
temp.deleteOnExit();
audio.setFile(temp);
writeFile(audio);

ParcelFileDescriptor pfd = context.getContentResolver().openFileDescriptor(uri, ""rw"");
if (pfd == null) {
Log.e(TAG, ""writeSAF: SAF provided incorrect URI: "" + uri);
return;
}

FileInputStream fis = new FileInputStream(temp);
byte[] audioContent = FileUtil.readBytes(fis);
FileOutputStream fos = new FileOutputStream(pfd.getFileDescriptor());
fos.write(audioContent);
fos.close();

temp.delete();
} catch (final Exception e) {
Log.e(TAG, ""writeSAF: Failed to write to file descriptor provided by SAF"", e);

toast(context, String.format(context.getString(R.string.saf_write_failed), e.getLocalizedMessage()));
}",0,0,0,0,1,0,0,0,0,19,2,26,0,0,1,0,6,6,0,0,2,0.57,0,0
539_26,26,26,final File original = audio.getFile();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,1,0.56,0,0
539_27,27,27,"File temp = File.createTempFile(""tmp-media"", '.' + Utils.getExtension(original));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,1,0.55,1,0
539_28,28,28,"Utils.copy(original, temp);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,6,0,0,1,0.53,2,1
539_29,29,29,temp.deleteOnExit();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,6,0,0,0,0.38,3,2
539_30,30,30,audio.setFile(temp);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,6,0,0,1,0.57,4,3
539_31,31,31,writeFile(audio);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,6,0,0,1,0.58,5,4
539_33,33,33,"ParcelFileDescriptor pfd = context.getContentResolver().openFileDescriptor(uri, ""rw"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,6,0,0,1,0.5,7,6
539_34,34,37,"if (pfd == null) {
Log.e(TAG, ""writeSAF: SAF provided incorrect URI: "" + uri);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,6,6,0,0,0,0.36,8,6
539_35,35,35,"Log.e(TAG, ""writeSAF: SAF provided incorrect URI: "" + uri);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.36,9,7
539_36,36,36,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.27,10,8
539_39,39,39,FileInputStream fis = new FileInputStream(temp);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,6,0,0,1,0.52,13,10
539_40,40,40,byte[] audioContent = FileUtil.readBytes(fis);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,1,0.51,14,10
539_41,41,41,FileOutputStream fos = new FileOutputStream(pfd.getFileDescriptor());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,1,0.52,15,11
539_42,42,42,fos.write(audioContent);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,6,0,0,0,0.45,16,12
539_43,43,43,fos.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,6,0,0,0,0.39,17,13
539_45,45,45,temp.delete();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,6,0,0,0,0.43,19,15
539_46,46,46,} catch (final Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.3,20,15
539_47,47,47,"Log.e(TAG, ""writeSAF: Failed to write to file descriptor provided by SAF"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,6,0,0,1,0.43,21,16
539_49,49,49,"toast(context, String.format(context.getString(R.string.saf_write_failed), e.getLocalizedMessage()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,6,0,0,0,0.32,23,18
538_1,1,1,"    private static IconCompat generateThemedIcon(Context context, int iconId, int foregroundColor, int backgroundColor) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.41,7,6
538_2,2,2,"Drawable vectorDrawable = ImageUtil.getTintedVectorDrawable(context, iconId, foregroundColor);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,4,3,0,0,1,0.61,6,5
538_3,3,3,"Drawable backgroundDrawable = ImageUtil.getTintedVectorDrawable(context, R.drawable.ic_app_shortcut_background, backgroundColor);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,4,3,0,0,1,0.63,5,4
538_5,5,12,"if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
AdaptiveIconDrawable adaptiveIconDrawable = new AdaptiveIconDrawable(backgroundDrawable, vectorDrawable);
return IconCompat.createWithAdaptiveBitmap(ImageUtil.createBitmap(adaptiveIconDrawable));
} else {
LayerDrawable layerDrawable = new LayerDrawable(new Drawable[]{backgroundDrawable, vectorDrawable});

return IconCompat.createWithBitmap(ImageUtil.createBitmap(layerDrawable));
}",1,0,0,0,0,0,0,0,0,5,2,8,0,0,1,0,4,3,0,0,1,0.6,0,0
538_6,6,6,"AdaptiveIconDrawable adaptiveIconDrawable = new AdaptiveIconDrawable(backgroundDrawable, vectorDrawable);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.63,2,2
538_7,7,7,return IconCompat.createWithAdaptiveBitmap(ImageUtil.createBitmap(adaptiveIconDrawable));,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.54,1,1
538_8,8,8,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.28,0,0
538_9,9,9,"LayerDrawable layerDrawable = new LayerDrawable(new Drawable[]{backgroundDrawable, vectorDrawable});",0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,4,3,0,0,1,0.66,0,0
538_11,11,11,return IconCompat.createWithBitmap(ImageUtil.createBitmap(layerDrawable));,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.55,2,1
537_1,1,1,"    private static IconCompat generateThemedIcon(Context context, int iconId, int foregroundColor, int backgroundColor) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,2,0.6,0,0
537_2,2,2,"Drawable vectorDrawable = ImageUtil.getTintedVectorDrawable(context, iconId, foregroundColor);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,5,3,1,0,4,0.81,0,0
537_3,3,3,"Drawable backgroundDrawable = ImageUtil.getTintedVectorDrawable(context, R.drawable.ic_app_shortcut_background, backgroundColor);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,5,3,1,0,4,0.85,1,0
537_5,5,12,"if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
AdaptiveIconDrawable adaptiveIconDrawable = new AdaptiveIconDrawable(backgroundDrawable, vectorDrawable);
return IconCompat.createWithAdaptiveBitmap(ImageUtil.createBitmap(adaptiveIconDrawable));
} else {
LayerDrawable layerDrawable = new LayerDrawable(new Drawable[]{backgroundDrawable, vectorDrawable});

return IconCompat.createWithBitmap(ImageUtil.createBitmap(layerDrawable));
}",1,0,0,0,0,0,0,0,0,5,2,8,0,0,1,0,5,3,1,0,2,0.68,3,2
537_6,6,6,"AdaptiveIconDrawable adaptiveIconDrawable = new AdaptiveIconDrawable(backgroundDrawable, vectorDrawable);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,2,0.74,4,2
537_7,7,7,return IconCompat.createWithAdaptiveBitmap(ImageUtil.createBitmap(adaptiveIconDrawable));,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.57,5,3
537_8,8,8,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.3,6,4
537_9,9,9,"LayerDrawable layerDrawable = new LayerDrawable(new Drawable[]{backgroundDrawable, vectorDrawable});",0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,5,3,1,0,2,0.73,7,5
537_11,11,11,return IconCompat.createWithBitmap(ImageUtil.createBitmap(layerDrawable));,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,3,1,0,1,0.56,9,7
536_1,1,1,"    private static IconCompat generateUserThemedIcon(Context context, int iconId) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.65,3,2
536_2,2,2,final TypedValue typedColorBackground = new TypedValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.41,2,1
536_3,3,3,"context.getTheme().resolveAttribute(android.R.attr.colorBackground, typedColorBackground, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,1,0.54,1,0
536_5,5,8,"return generateThemedIcon(context, iconId,
ThemeStore.accentColor(context),
typedColorBackground.data
);",0,0,0,0,0,0,1,0,0,0,0,4,0,0,1,0,5,5,0,0,4,0.8,0,0
535_1,1,1,"    private static IconCompat generateUserThemedIcon(Context context, int iconId) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,2,0.63,0,0
535_2,2,2,final TypedValue typedColorBackground = new TypedValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,2,0.53,0,0
535_3,3,3,"context.getTheme().resolveAttribute(android.R.attr.colorBackground, typedColorBackground, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,1,0,5,0.84,1,0
535_5,5,8,"return generateThemedIcon(context, iconId,
ThemeStore.accentColor(context),
typedColorBackground.data
);",0,0,0,0,0,0,1,0,0,0,0,4,0,0,1,0,5,3,1,0,4,0.76,3,2
534_1,1,1,"    private static IconCompat generateDefaultThemedIcon(Context context, int iconId) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,3,0.7,0,0
534_2,2,5,"return generateThemedIcon(context, iconId,
context.getColor(R.color.app_shortcut_default_foreground),
context.getColor(R.color.app_shortcut_default_background)
);",0,0,0,0,0,0,1,0,0,0,0,4,0,0,0,0,6,6,0,0,5,0.83,0,0
491_1,1,1,"protected Map<String, String> createFilterMap(final Map<String, String[]> parameterMap) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.34,2,2
491_2,2,2,"Map<String, String> filters = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.39,1,1
491_3,3,3,"parameterMap.forEach((code, value) -> {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.53,0,0
491_4,4,6,"if (value.length != 1) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,3,1,0,1,0.4,0,0
491_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.19,1,0
491_8,8,8,"filters.put(code, value[0]);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,1,0.48,4,2
491_11,11,11,return filters;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,3,1,0,0,0.29,7,3
490_1,1,1,public Integer calculateCurrentPageCursor(final String currentPageIndexCandidate) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,2,0,3,0.6,0,0
490_2,2,10,"try {
int i = Integer.parseInt(currentPageIndexCandidate);
if (i < 1) {
i = 1;
}
return i;
} catch (NumberFormatException x) {
return 1;
}",0,0,0,0,1,0,0,0,0,6,2,9,0,0,0,0,10,4,2,0,2,0.57,0,0
490_3,3,3,int i = Integer.parseInt(currentPageIndexCandidate);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,4,2,0,2,0.56,1,0
490_4,4,6,"if (i < 1) {
i = 1;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,10,4,2,0,0,0.31,2,1
490_5,5,5,i = 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,2,0,0,0.31,3,2
490_7,7,7,return i;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,10,4,2,0,0,0.26,5,4
490_8,8,8,} catch (NumberFormatException x) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,2,0,0,0.49,6,4
490_9,9,9,return 1;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,4,2,0,0,0.32,7,5
489_1,1,2,"    @PostConstruct
private void baseInitModel() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,0,0.36,12,8
489_3,3,6,"if (currentPage == null) {
currentPage = pageManagerFactory.getPageManager(request.getResourceResolver())
.getContainingPage(request.getResource());
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,4,2,1,0,2,0.67,8,5
489_4,4,4,currentPage = pageManagerFactory.getPageManager(request.getResourceResolver()),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.68,10,6
489_5,5,5,.getContainingPage(request.getResource());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.66,9,5
489_7,7,9,"if (currentStyle == null) {
currentStyle = Utils.getStyleProperties(request, resource);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,2,1,0,1,0.5,5,3
489_8,8,8,"currentStyle = Utils.getStyleProperties(request, resource);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.52,6,3
489_11,11,11,"navPageSize = properties.get(PN_PAGE_SIZE, currentStyle.get(PN_PAGE_SIZE, PAGE_SIZE_DEFAULT));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,4,2,1,0,2,0.7,3,2
489_12,12,12,"loadClientPrice = properties.get(PN_LOAD_CLIENT_PRICE, currentStyle.get(PN_LOAD_CLIENT_PRICE, LOAD_CLIENT_PRICE_DEFAULT));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,1,0.58,2,1
489_13,13,13,"paginationType = properties.get(PN_PAGINATION_TYPE, currentStyle.get(PN_PAGINATION_TYPE, PAGINATION_TYPE_DEFAULT));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,2,1,0,1,0.58,1,0
489_15,15,15,productPage = SiteNavigation.getProductPage(currentPage);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,3,0.81,0,0
489_16,16,18,"if (productPage == null) {
productPage = currentPage;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,2,1,0,2,0.73,1,0
489_17,17,17,productPage = currentPage;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.76,2,1
474_1,1,2,"@PUT
@Path(""/{iOSID}"")",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,1,0,0,0.3,25,17
474_3,3,3,@Consumes(MediaType.APPLICATION_JSON),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,0,0.4,24,16
474_4,4,4,@Produces(MediaType.APPLICATION_JSON),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,0,0.39,23,15
474_5,5,8,"public Response updateiOSVariant(
iOSTokenVariant updatediOSVariant,
@PathParam(""pushAppID"") String pushApplicationId,
@PathParam(""iOSID"") String iOSID) {",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,9,5,1,0,0,0.43,19,14
474_10,10,10,iOSTokenVariant iOSTokenVariant = (iOSTokenVariant)variantService.findByVariantID(iOSID);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,5,1,0,0,0.46,17,13
474_11,11,33,"if (iOSTokenVariant != null) {

try {
validateModelClass(updatediOSVariant);
} catch (ConstraintViolationException cve) {
ResponseBuilder builder = createBadRequestResponse(cve.getConstraintViolations());
return builder.build();
}

iOSTokenVariant.setName(updatediOSVariant.getName());
iOSTokenVariant.setDescription(updatediOSVariant.getDescription());
iOSTokenVariant.setProduction(updatediOSVariant.isProduction());
iOSTokenVariant.setKeyId(updatediOSVariant.getKeyId());
iOSTokenVariant.setTeamId(updatediOSVariant.getTeamId());
iOSTokenVariant.setBundleId(updatediOSVariant.getBundleId());
iOSTokenVariant.setPrivateKey(updatediOSVariant.getPrivateKey());

logger.trace(""Updating iOS Variant '{}'"", iOSTokenVariant.getVariantID());
variantService.updateVariant(iOSTokenVariant);
producer.changeAPNClient(iOSTokenVariant);

return Response.ok(iOSTokenVariant).build();
}",1,0,0,0,0,0,0,0,0,16,2,23,1,1,0,0,9,5,1,0,1,0.53,0,0
474_13,13,18,"try {
validateModelClass(updatediOSVariant);
} catch (ConstraintViolationException cve) {
ResponseBuilder builder = createBadRequestResponse(cve.getConstraintViolations());
return builder.build();
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,1,1,9,5,1,0,0,0.47,9,7
474_14,14,14,validateModelClass(updatediOSVariant);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,0,0.5,13,10
474_15,15,15,} catch (ConstraintViolationException cve) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,0,0.37,12,9
474_16,16,16,ResponseBuilder builder = createBadRequestResponse(cve.getConstraintViolations());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,1,0,0,0.43,11,8
474_17,17,17,return builder.build();,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,9,5,1,0,0,0.42,10,7
474_20,20,20,iOSTokenVariant.setName(updatediOSVariant.getName());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,9,5,1,0,0,0.45,7,6
474_21,21,21,iOSTokenVariant.setDescription(updatediOSVariant.getDescription());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,5,1,0,0,0.47,6,5
474_22,22,22,iOSTokenVariant.setProduction(updatediOSVariant.isProduction());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,5,1,0,0,0.48,5,4
474_23,23,23,iOSTokenVariant.setKeyId(updatediOSVariant.getKeyId());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,5,1,0,0,0.43,4,3
474_24,24,24,iOSTokenVariant.setTeamId(updatediOSVariant.getTeamId());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,5,1,0,0,0.44,3,2
474_25,25,25,iOSTokenVariant.setBundleId(updatediOSVariant.getBundleId());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,5,1,0,0,0.45,2,1
474_26,26,26,iOSTokenVariant.setPrivateKey(updatediOSVariant.getPrivateKey());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,9,5,1,0,0,0.44,1,0
474_28,28,28,"logger.trace(""Updating iOS Variant '{}'"", iOSTokenVariant.getVariantID());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,9,5,1,0,1,0.55,0,0
474_29,29,29,variantService.updateVariant(iOSTokenVariant);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,5,1,0,1,0.55,1,0
474_30,30,30,producer.changeAPNClient(iOSTokenVariant);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,9,5,1,0,0,0.47,2,1
474_32,32,32,return Response.ok(iOSTokenVariant).build();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,9,5,1,0,0,0.48,4,3
474_34,34,34,"return Response.status(Status.NOT_FOUND).entity(""Could not find requested Variant"").build();",0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,9,5,1,0,0,0.39,6,4
473_1,1,2,"@PUT
@Path(""/{iOSID}"")",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,1,0,0,0.34,13,8
473_3,3,3,@Consumes(MediaType.APPLICATION_JSON),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.29,12,7
473_4,4,4,@Produces(MediaType.APPLICATION_JSON),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.31,11,6
473_5,5,8,"public Response updateiOSVariant(
iOSTokenVariant updatediOSVariant,
@PathParam(""pushAppID"") String pushApplicationId,
@PathParam(""iOSID"") String iOSID) {",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,6,3,1,0,1,0.5,7,5
473_10,10,10,iOSTokenVariant iOSTokenVariant = (iOSTokenVariant)variantService.findByVariantID(iOSID);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,1,0,0,0.4,5,4
473_11,11,33,"if (iOSTokenVariant != null) {

try {
validateModelClass(updatediOSVariant);
} catch (ConstraintViolationException cve) {
ResponseBuilder builder = createBadRequestResponse(cve.getConstraintViolations());
return builder.build();
}

iOSTokenVariant.setName(updatediOSVariant.getName());
iOSTokenVariant.setDescription(updatediOSVariant.getDescription());
iOSTokenVariant.setProduction(updatediOSVariant.isProduction());
iOSTokenVariant.setKeyId(updatediOSVariant.getKeyId());
iOSTokenVariant.setTeamId(updatediOSVariant.getTeamId());
iOSTokenVariant.setBundleId(updatediOSVariant.getBundleId());
iOSTokenVariant.setPrivateKey(updatediOSVariant.getPrivateKey());

logger.trace(""Updating iOS Variant '{}'"", iOSTokenVariant.getVariantID());
variantService.updateVariant(iOSTokenVariant);
producer.changeAPNClient(iOSTokenVariant);

return Response.ok(iOSTokenVariant).build();
}",1,0,0,0,0,0,0,0,0,16,2,23,1,1,0,0,6,3,1,0,5,0.72,0,0
473_13,13,18,"try {
validateModelClass(updatediOSVariant);
} catch (ConstraintViolationException cve) {
ResponseBuilder builder = createBadRequestResponse(cve.getConstraintViolations());
return builder.build();
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,1,1,6,3,1,0,5,0.78,0,0
473_14,14,14,validateModelClass(updatediOSVariant);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.45,1,1
473_15,15,15,} catch (ConstraintViolationException cve) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.38,0,0
473_16,16,16,ResponseBuilder builder = createBadRequestResponse(cve.getConstraintViolations());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,3,0.71,0,0
473_17,17,17,return builder.build();,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,3,1,0,2,0.68,1,0
473_20,20,20,iOSTokenVariant.setName(updatediOSVariant.getName());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,3,1,0,0,0.37,4,2
473_21,21,21,iOSTokenVariant.setDescription(updatediOSVariant.getDescription());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.4,5,2
473_22,22,22,iOSTokenVariant.setProduction(updatediOSVariant.isProduction());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.38,6,3
473_23,23,23,iOSTokenVariant.setKeyId(updatediOSVariant.getKeyId());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.37,7,4
473_24,24,24,iOSTokenVariant.setTeamId(updatediOSVariant.getTeamId());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.38,8,5
473_25,25,25,iOSTokenVariant.setBundleId(updatediOSVariant.getBundleId());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.37,9,6
473_26,26,26,iOSTokenVariant.setPrivateKey(updatediOSVariant.getPrivateKey());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,3,1,0,0,0.39,10,7
473_28,28,28,"logger.trace(""Updating iOS Variant '{}'"", iOSTokenVariant.getVariantID());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,3,1,0,0,0.45,12,9
473_29,29,29,variantService.updateVariant(iOSTokenVariant);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.38,13,9
473_30,30,30,producer.changeAPNClient(iOSTokenVariant);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,3,1,0,0,0.41,14,10
473_32,32,32,return Response.ok(iOSTokenVariant).build();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,1,0,3,0.71,16,12
473_34,34,34,"return Response.status(Status.NOT_FOUND).entity(""Could not find requested Variant"").build();",0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,6,3,1,0,4,0.78,18,13
472_1,1,2,"@POST
@Consumes(MediaType.APPLICATION_JSON)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,1,1,0,0,0.37,23,13
472_3,3,3,@Produces(MediaType.APPLICATION_JSON),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.37,22,12
472_4,4,7,"public Response registeriOSVariant(
iOSTokenVariant iOSVariant,
@PathParam(""pushAppID"") String pushApplicationID,
@Context UriInfo uriInfo) {",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,4,1,1,0,2,0.62,18,11
472_8,8,8,PushApplication pushApp = getSearch().findByPushApplicationIDForDeveloper(pushApplicationID);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,1,1,0,0,0.35,17,10
472_10,10,12,"if (pushApp == null) {
return Response.status(Status.NOT_FOUND).entity(""Could not find requested PushApplicationEntity"").build();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,1,1,0,0,0.37,13,8
472_11,11,11,"return Response.status(Status.NOT_FOUND).entity(""Could not find requested PushApplicationEntity"").build();",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.37,14,8
472_14,14,22,"try {
validateModelClass(iOSVariant);
} catch (ConstraintViolationException cve) {
logger.trace(""Unable to create iOS variant entity"");

ResponseBuilder builder = createBadRequestResponse(cve.getConstraintViolations());

return builder.build();
}",0,0,0,0,1,0,0,0,0,5,1,9,0,0,1,1,4,1,1,0,2,0.61,3,2
472_15,15,15,validateModelClass(iOSVariant);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,2,0.65,10,6
472_16,16,16,} catch (ConstraintViolationException cve) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.38,9,5
472_17,17,17,"logger.trace(""Unable to create iOS variant entity"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,1,1,0,2,0.68,8,4
472_19,19,19,ResponseBuilder builder = createBadRequestResponse(cve.getConstraintViolations());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,1,1,0,0,0.42,6,3
472_21,21,21,return builder.build();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,1,1,0,0,0.43,4,2
472_24,24,24,"logger.trace(""Register iOS token variant with Push Application '{}'"", pushApplicationID);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,1,1,0,2,0.62,1,1
472_25,25,25,variantService.addVariant(iOSVariant);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,1,1,0,3,0.87,0,0
472_26,26,26,"pushAppService.addVariant(pushApp, iOSVariant);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,1,1,0,3,0.76,0,0
472_28,28,28,return Response.created(uriInfo.getAbsolutePathBuilder().path(String.valueOf(iOSVariant.getVariantID())).build()).entity(iOSVariant).build();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,1,1,0,2,0.63,2,1
471_1,1,2,"@POST
@Consumes(MediaType.APPLICATION_JSON)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.37,22,12
471_3,3,3,@Produces(MediaType.APPLICATION_JSON),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.39,21,11
471_4,4,7,"public Response registeriOSVariant(
iOSTokenVariant iOSVariant,
@PathParam(""pushAppID"") String pushApplicationID,
@Context UriInfo uriInfo) {",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,3,3,0,0,2,0.66,17,10
471_8,8,8,PushApplication pushApp = getSearch().findByPushApplicationIDForDeveloper(pushApplicationID);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.36,16,9
471_10,10,12,"if (pushApp == null) {
return Response.status(Status.NOT_FOUND).entity(""Could not find requested PushApplicationEntity"").build();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,0,0.37,12,7
471_11,11,11,"return Response.status(Status.NOT_FOUND).entity(""Could not find requested PushApplicationEntity"").build();",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.37,13,7
471_14,14,22,"try {
validateModelClass(iOSVariant);
} catch (ConstraintViolationException cve) {
logger.trace(""Unable to create iOS variant entity"");

ResponseBuilder builder = createBadRequestResponse(cve.getConstraintViolations());

return builder.build();
}",0,0,0,0,1,0,0,0,0,5,1,9,0,0,1,1,3,3,0,0,2,0.6,2,1
471_15,15,15,validateModelClass(iOSVariant);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.67,9,5
471_16,16,16,} catch (ConstraintViolationException cve) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,8,4
471_17,17,17,"logger.trace(""Unable to create iOS variant entity"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,2,0.68,7,3
471_19,19,19,ResponseBuilder builder = createBadRequestResponse(cve.getConstraintViolations());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.36,5,2
471_21,21,21,return builder.build();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.42,3,1
471_24,24,24,"logger.trace(""Register iOS token variant with Push Application '{}'"", pushApplicationID);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,2,0.65,0,0
471_25,25,25,variantService.addVariant(iOSVariant);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,2,0.77,0,0
471_26,26,26,"pushAppService.addVariant(pushApp, iOSVariant);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,3,0,0,2,0.68,1,0
471_28,28,28,return Response.created(uriInfo.getAbsolutePathBuilder().path(String.valueOf(iOSVariant.getVariantID())).build()).entity(iOSVariant).build();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,3,0,0,2,0.66,3,2
470_1,1,2,"@POST
@Consumes(MediaType.APPLICATION_JSON)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,1,0,0,0.39,16,9
470_3,3,3,@Produces(MediaType.APPLICATION_JSON),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.31,15,8
470_4,4,7,"public Response registeriOSVariant(
iOSTokenVariant iOSVariant,
@PathParam(""pushAppID"") String pushApplicationID,
@Context UriInfo uriInfo) {",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,6,3,1,0,1,0.49,11,7
470_8,8,8,PushApplication pushApp = getSearch().findByPushApplicationIDForDeveloper(pushApplicationID);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,3,1,0,0,0.38,10,6
470_10,10,12,"if (pushApp == null) {
return Response.status(Status.NOT_FOUND).entity(""Could not find requested PushApplicationEntity"").build();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,3,1,0,4,0.73,6,4
470_11,11,11,"return Response.status(Status.NOT_FOUND).entity(""Could not find requested PushApplicationEntity"").build();",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,1,0,4,0.75,7,4
470_14,14,22,"try {
validateModelClass(iOSVariant);
} catch (ConstraintViolationException cve) {
logger.trace(""Unable to create iOS variant entity"");

ResponseBuilder builder = createBadRequestResponse(cve.getConstraintViolations());

return builder.build();
}",0,0,0,0,1,0,0,0,0,5,1,9,0,0,1,1,6,3,1,0,5,0.77,0,0
470_15,15,15,validateModelClass(iOSVariant);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.45,3,2
470_16,16,16,} catch (ConstraintViolationException cve) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.38,2,1
470_17,17,17,"logger.trace(""Unable to create iOS variant entity"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,1,0,0,0.48,1,0
470_19,19,19,ResponseBuilder builder = createBadRequestResponse(cve.getConstraintViolations());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,3,1,0,3,0.71,0,0
470_21,21,21,return builder.build();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,1,0,2,0.68,2,1
470_24,24,24,"logger.trace(""Register iOS token variant with Push Application '{}'"", pushApplicationID);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,1,0,0,0.44,5,2
470_25,25,25,variantService.addVariant(iOSVariant);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,3,1,0,0,0.4,6,2
470_26,26,26,"pushAppService.addVariant(pushApp, iOSVariant);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,6,3,1,0,0,0.4,7,3
470_28,28,28,return Response.created(uriInfo.getAbsolutePathBuilder().path(String.valueOf(iOSVariant.getVariantID())).build()).entity(iOSVariant).build();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,1,0,3,0.63,9,5
469_1,1,2,"@POST
@Consumes(MediaType.APPLICATION_JSON)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,0,0.4,5,2
469_3,3,3,@Produces(MediaType.APPLICATION_JSON),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.42,4,1
469_4,4,7,"public Response registeriOSVariant(
iOSTokenVariant iOSVariant,
@PathParam(""pushAppID"") String pushApplicationID,
@Context UriInfo uriInfo) {",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,4,2,1,0,2,0.57,0,0
469_8,8,8,PushApplication pushApp = getSearch().findByPushApplicationIDForDeveloper(pushApplicationID);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,3,0.76,0,0
469_10,10,12,"if (pushApp == null) {
return Response.status(Status.NOT_FOUND).entity(""Could not find requested PushApplicationEntity"").build();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,1,0,3,0.71,2,1
469_11,11,11,"return Response.status(Status.NOT_FOUND).entity(""Could not find requested PushApplicationEntity"").build();",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.62,3,1
469_14,14,22,"try {
validateModelClass(iOSVariant);
} catch (ConstraintViolationException cve) {
logger.trace(""Unable to create iOS variant entity"");

ResponseBuilder builder = createBadRequestResponse(cve.getConstraintViolations());

return builder.build();
}",0,0,0,0,1,0,0,0,0,5,1,9,0,0,1,1,4,2,1,0,0,0.4,6,3
469_15,15,15,validateModelClass(iOSVariant);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.38,7,3
469_16,16,16,} catch (ConstraintViolationException cve) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.31,8,4
469_17,17,17,"logger.trace(""Unable to create iOS variant entity"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.44,9,5
469_19,19,19,ResponseBuilder builder = createBadRequestResponse(cve.getConstraintViolations());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.36,11,7
469_21,21,21,return builder.build();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.28,13,8
469_24,24,24,"logger.trace(""Register iOS token variant with Push Application '{}'"", pushApplicationID);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,1,0.55,16,9
469_25,25,25,variantService.addVariant(iOSVariant);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,0,0.35,17,9
469_26,26,26,"pushAppService.addVariant(pushApp, iOSVariant);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,2,1,0,2,0.67,18,10
469_28,28,28,return Response.created(uriInfo.getAbsolutePathBuilder().path(String.valueOf(iOSVariant.getVariantID())).build()).entity(iOSVariant).build();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.4,20,12
468_1,1,2,"    @Override @NonNull
public EntryViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,2,0,0,0.32,56,34
468_3,3,3,int cardLayout = R.layout.component_card_default;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,5,2,0,0,0.35,55,33
468_5,5,5,Constants.CardLayouts layout = settings.getCardLayout();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,9,5,2,0,0,0.32,53,32
468_7,7,11,"if (layout == Constants.CardLayouts.COMPACT) {
cardLayout = R.layout.component_card_compact;
} else if (layout == Constants.CardLayouts.FULL) {
cardLayout = R.layout.component_card_full;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,9,5,2,0,0,0.36,47,28
468_8,8,8,cardLayout = R.layout.component_card_compact;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.37,50,30
468_9,9,9,} else if (layout == Constants.CardLayouts.FULL) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.33,49,29
468_10,10,10,cardLayout = R.layout.component_card_full;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.36,48,28
468_13,13,13,"View itemView = LayoutInflater.from(viewGroup.getContext()).inflate(cardLayout, viewGroup, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,9,5,2,0,0,0.36,45,27
468_15,15,15,"EntryViewHolder viewHolder = new EntryViewHolder(context, itemView, settings.getTapToReveal());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,5,2,0,2,0.42,43,26
468_16,16,16,viewHolder.setCallback(new EntryViewHolder.Callback() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,5,2,0,0,0.32,42,25
468_17,17,18,"@Override
public void onMoveEventStart() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,2,0,0,0.35,40,24
468_19,19,20,"if (callback != null)
callback.onMoveEventStart();",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,9,5,2,0,0,0.34,38,22
468_20,20,20,callback.onMoveEventStart();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.33,38,22
468_23,23,24,"@Override
public void onMoveEventStop() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,9,5,2,0,0,0.36,34,21
468_25,25,26,"if (callback != null)
callback.onMoveEventStop();",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,9,5,2,0,0,0.35,32,19
468_26,26,26,callback.onMoveEventStop();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.34,32,19
468_29,29,30,"@Override
public void onMenuButtonClicked(View parentView, int position) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,9,5,2,0,0,0.39,28,18
468_31,31,31,"showPopupMenu(parentView, position);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.39,27,17
468_34,34,35,"@Override
public void onCopyButtonClicked(String text, int position) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,9,5,2,0,0,0.38,23,16
468_36,36,36,"copyHandler(position, text, settings.isMinimizeAppOnCopyEnabled());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.38,22,15
468_39,39,40,"@Override
public void onCardSingleClicked(final int position, final String text) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,9,5,2,0,1,0.43,18,14
468_41,41,41,switch (settings.getTapSingle()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,2,0.6,17,13
468_42,42,43,"case REVEAL:
establishPinIfNeeded(position);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,2,0,4,0.69,15,12
468_44,44,44,cardTapToRevealHandler(position);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,2,0.46,14,11
468_45,45,45,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,9,5,2,0,0,0.28,13,10
468_46,46,47,"case COPY:
establishPinIfNeeded(position);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,2,0,3,0.64,11,9
468_48,48,48,"copyHandler(position, text, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.28,10,8
468_49,49,49,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,9,5,2,0,0,0.28,9,7
468_50,50,51,"case COPY_BACKGROUND:
establishPinIfNeeded(position);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,2,0,3,0.64,7,6
468_52,52,52,"copyHandler(position, text, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.27,6,5
468_53,53,53,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,9,5,2,0,0,0.28,5,4
468_54,54,55,"case SEND_KEYSTROKES:
establishPinIfNeeded(position);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,2,0,3,0.65,3,3
468_56,56,56,sendKeystrokes(position);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.27,2,2
468_57,57,57,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,9,5,2,0,0,0.28,1,1
468_58,58,59,"default:
if (!settings.getTapToReveal())",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,2,0,-1,0.43,0,0
468_60,60,60,establishPinIfNeeded(position);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,3,0.74,1,0
468_61,61,61,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,9,5,2,0,0,0.28,2,1
468_65,65,66,"@Override
public void onCardDoubleClicked(final int position, final String text) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,9,5,2,0,0,0.38,6,3
468_67,67,67,switch (settings.getTapDouble()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,1,0.54,8,4
468_68,68,69,"case REVEAL:
establishPinIfNeeded(position);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,2,0,4,0.69,9,4
468_70,70,70,cardTapToRevealHandler(position);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,2,0.46,11,6
468_71,71,71,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,9,5,2,0,0,0.28,12,6
468_72,72,73,"case COPY:
establishPinIfNeeded(position);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,2,0,3,0.64,13,7
468_74,74,74,"copyHandler(position, text, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.28,15,9
468_75,75,75,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,9,5,2,0,0,0.28,16,9
468_76,76,77,"case COPY_BACKGROUND:
establishPinIfNeeded(position);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,2,0,3,0.64,17,10
468_78,78,78,"copyHandler(position, text, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.27,19,12
468_79,79,79,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,9,5,2,0,0,0.28,20,12
468_80,80,81,"case SEND_KEYSTROKES:
establishPinIfNeeded(position);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,2,0,3,0.65,21,13
468_82,82,82,sendKeystrokes(position);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.27,23,15
468_83,83,83,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,9,5,2,0,0,0.28,24,15
468_84,84,85,"default:
break;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,2,0,0,0.25,25,16
468_89,89,90,"@Override
public void onCounterClicked(int position) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,9,5,2,0,0,0.35,30,18
468_91,91,91,"updateEntry(displayedEntries.get(position), entries.getEntry(getRealIndex(position)), position);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.32,32,19
468_94,94,95,"@Override
public void onCounterLongPressed(int position) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,9,5,2,0,0,0.39,35,20
468_96,96,96,setCounter(position);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.22,37,21
468_100,100,100,return viewHolder;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,9,5,2,0,0,0.26,41,22
467_1,1,1,    public void updateTimeBasedTokens() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,1,0.43,9,6
467_2,2,2,boolean change = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,7,1,0,1,0.51,8,5
467_4,4,17,"for (Entry e : entries.getEntries()) {
if (e.isTimeBased()) {
boolean cardVisible = !settings.getTapToReveal() || e.isVisible();

boolean item_changed = e.updateOTP(false);
boolean color_changed = false;

if(settings.isHighlightTokenOptionEnabled())
color_changed = cardVisible && e.hasColorChanged();

change = change || item_changed || color_changed ||
(cardVisible && (e.hasNonDefaultPeriod() || settings.isShowIndividualTimeoutsEnabled()));
}
}",0,0,0,1,0,0,0,0,0,7,2,14,0,0,1,1,9,7,1,0,7,0.77,0,0
467_5,5,16,"if (e.isTimeBased()) {
boolean cardVisible = !settings.getTapToReveal() || e.isVisible();

boolean item_changed = e.updateOTP(false);
boolean color_changed = false;

if(settings.isHighlightTokenOptionEnabled())
color_changed = cardVisible && e.hasColorChanged();

change = change || item_changed || color_changed ||
(cardVisible && (e.hasNonDefaultPeriod() || settings.isShowIndividualTimeoutsEnabled()));
}",1,0,0,0,0,0,0,0,0,6,1,12,0,0,0,0,9,7,1,0,6,0.74,0,0
467_6,6,6,boolean cardVisible = !settings.getTapToReveal() || e.isVisible();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,7,1,0,1,0.54,4,2
467_8,8,8,boolean item_changed = e.updateOTP(false);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,9,7,1,0,1,0.49,2,1
467_9,9,9,boolean color_changed = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,7,1,0,2,0.62,1,0
467_11,11,12,"if(settings.isHighlightTokenOptionEnabled())
color_changed = cardVisible && e.hasColorChanged();",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,9,7,1,0,6,0.81,0,0
467_12,12,12,color_changed = cardVisible && e.hasColorChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,7,1,0,3,0.73,1,0
467_14,14,15,"change = change || item_changed || color_changed ||
(cardVisible && (e.hasNonDefaultPeriod() || settings.isShowIndividualTimeoutsEnabled()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,9,7,1,0,4,0.69,3,2
467_19,19,20,"if (change)
notifyDataSetChanged();",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,0,9,7,1,0,1,0.51,8,3
467_20,20,20,notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,1,0.46,9,3
430_1,1,1,    public void setListAdapter(ListAdapter adapter) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,2,0.71,5,5
430_2,2,2,boolean hadAdapter = mAdapter != null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.58,4,4
430_3,3,3,mAdapter = adapter;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.75,3,3
430_4,4,9,"if (mList != null) {
mList.setAdapter(adapter);
if (!mListShown && !hadAdapter) {
setListShown(true, getView().getWindowToken() != null);
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,0,0,6,3,1,0,2,0.61,0,0
430_5,5,5,mList.setAdapter(adapter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,2,0.7,1,1
430_6,6,8,"if (!mListShown && !hadAdapter) {
setListShown(true, getView().getWindowToken() != null);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,3,1,0,2,0.58,0,0
430_7,7,7,"setListShown(true, getView().getWindowToken() != null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.5,0,0
397_1,1,1,"  @SuppressWarnings(""deprecation"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.24,30,14
397_2,2,4,"public static ContainerLaunchContext createContainerLaunchContext(
Map<ApplicationAccessType, String> applicationACLs, Configuration conf, PSAttemptId psAttemptId,
final ApplicationId appid, MasterService masterService, Credentials credentials) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,3,2,0,0,1,0.45,27,13
397_6,6,6,synchronized (commonContainerSpecLock) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,1,0.51,25,12
397_7,7,11,"if (commonContainerSpec == null) {
commonContainerSpec =
createCommonContainerLaunchContext(masterService, applicationACLs, conf, appid,
credentials);
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,3,2,0,0,1,0.5,20,10
397_8,8,10,"commonContainerSpec =
createCommonContainerLaunchContext(masterService, applicationACLs, conf, appid,
credentials);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,3,2,0,0,1,0.49,21,10
397_14,14,14,"Map<String, String> env = commonContainerSpec.getEnvironment();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.5,17,9
397_15,15,15,"Map<String, String> myEnv = new HashMap<String, String>(env.size());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.33,16,8
397_16,16,16,myEnv.putAll(env);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.36,15,7
397_18,18,19,"Apps.addToEnvironment(myEnv, AngelEnvironment.PARAMETERSERVER_ID.name(),
Integer.toString(psAttemptId.getPsId().getIndex()));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,0,3,2,0,0,0,0.32,12,6
397_20,20,21,"Apps.addToEnvironment(myEnv, AngelEnvironment.PS_ATTEMPT_ID.name(),
Integer.toString(psAttemptId.getIndex()));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,1,3,2,0,0,0,0.32,10,5
397_23,23,23,"ParameterServerJVM.setVMEnv(myEnv, conf);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.36,8,4
397_25,25,25,"List<String> commands = ParameterServerJVM.getVMCommand(conf, appid, psAttemptId);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.33,6,3
397_27,27,27,"Map<String, ByteBuffer> myServiceData = new HashMap<String, ByteBuffer>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.29,4,2
397_28,28,30,"for (Entry<String, ByteBuffer> entry : commonContainerSpec.getServiceData().entrySet()) {
myServiceData.put(entry.getKey(), entry.getValue().duplicate());
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,3,2,0,0,1,0.44,1,0
397_29,29,29,"myServiceData.put(entry.getKey(), entry.getValue().duplicate());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.29,2,0
397_32,32,34,"ContainerLaunchContext container = ContainerLaunchContext
.newInstance(commonContainerSpec.getLocalResources(), myEnv, commands, myServiceData,
commonContainerSpec.getTokens().duplicate(), applicationACLs);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,3,2,0,0,1,0.51,0,0
397_36,36,36,return container;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,2,0,0,1,0.53,4,1
396_1,1,1,"  @SuppressWarnings(""deprecation"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.33,25,11
396_2,2,4,"public static ContainerLaunchContext createContainerLaunchContext(
Map<ApplicationAccessType, String> applicationACLs, Configuration conf, PSAttemptId psAttemptId,
final ApplicationId appid, MasterService masterService, Credentials credentials) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,6,5,0,0,2,0.53,22,10
396_6,6,6,synchronized (commonContainerSpecLock) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,5,0,0,1,0.51,20,9
396_7,7,11,"if (commonContainerSpec == null) {
commonContainerSpec =
createCommonContainerLaunchContext(masterService, applicationACLs, conf, appid,
credentials);
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,6,5,0,0,1,0.49,15,7
396_8,8,10,"commonContainerSpec =
createCommonContainerLaunchContext(masterService, applicationACLs, conf, appid,
credentials);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,6,5,0,0,1,0.49,16,7
396_14,14,14,"Map<String, String> env = commonContainerSpec.getEnvironment();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,5,0,0,1,0.48,12,6
396_15,15,15,"Map<String, String> myEnv = new HashMap<String, String>(env.size());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.42,11,5
396_16,16,16,myEnv.putAll(env);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,5,0,0,0,0.38,10,4
396_18,18,19,"Apps.addToEnvironment(myEnv, AngelEnvironment.PARAMETERSERVER_ID.name(),
Integer.toString(psAttemptId.getPsId().getIndex()));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,0,6,5,0,0,0,0.39,7,3
396_20,20,21,"Apps.addToEnvironment(myEnv, AngelEnvironment.PS_ATTEMPT_ID.name(),
Integer.toString(psAttemptId.getIndex()));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,1,6,5,0,0,0,0.4,5,2
396_23,23,23,"ParameterServerJVM.setVMEnv(myEnv, conf);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,5,0,0,0,0.38,3,1
396_25,25,25,"List<String> commands = ParameterServerJVM.getVMCommand(conf, appid, psAttemptId);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,5,0,0,0,0.4,1,0
396_27,27,27,"Map<String, ByteBuffer> myServiceData = new HashMap<String, ByteBuffer>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,5,0,0,2,0.6,0,0
396_28,28,30,"for (Entry<String, ByteBuffer> entry : commonContainerSpec.getServiceData().entrySet()) {
myServiceData.put(entry.getKey(), entry.getValue().duplicate());
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,6,5,0,0,4,0.63,1,0
396_29,29,29,"myServiceData.put(entry.getKey(), entry.getValue().duplicate());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.41,2,1
396_32,32,34,"ContainerLaunchContext container = ContainerLaunchContext
.newInstance(commonContainerSpec.getLocalResources(), myEnv, commands, myServiceData,
commonContainerSpec.getTokens().duplicate(), applicationACLs);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,6,5,0,0,2,0.56,5,3
396_36,36,36,return container;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,5,0,0,1,0.51,9,4
395_1,1,1,"  @SuppressWarnings(""deprecation"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.31,23,10
395_2,2,4,"public static ContainerLaunchContext createContainerLaunchContext(
Map<ApplicationAccessType, String> applicationACLs, Configuration conf, PSAttemptId psAttemptId,
final ApplicationId appid, MasterService masterService, Credentials credentials) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,3,2,1,0,1,0.46,20,9
395_6,6,6,synchronized (commonContainerSpecLock) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,1,0,0,0.26,18,8
395_7,7,11,"if (commonContainerSpec == null) {
commonContainerSpec =
createCommonContainerLaunchContext(masterService, applicationACLs, conf, appid,
credentials);
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,3,2,1,0,1,0.44,13,6
395_8,8,10,"commonContainerSpec =
createCommonContainerLaunchContext(masterService, applicationACLs, conf, appid,
credentials);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,3,2,1,0,1,0.45,14,6
395_14,14,14,"Map<String, String> env = commonContainerSpec.getEnvironment();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,1,0,0,0.27,10,5
395_15,15,15,"Map<String, String> myEnv = new HashMap<String, String>(env.size());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.31,9,4
395_16,16,16,myEnv.putAll(env);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,1,0,0,0.33,8,3
395_18,18,19,"Apps.addToEnvironment(myEnv, AngelEnvironment.PARAMETERSERVER_ID.name(),
Integer.toString(psAttemptId.getPsId().getIndex()));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,0,3,2,1,0,0,0.36,5,2
395_20,20,21,"Apps.addToEnvironment(myEnv, AngelEnvironment.PS_ATTEMPT_ID.name(),
Integer.toString(psAttemptId.getIndex()));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,1,3,2,1,0,0,0.36,3,1
395_23,23,23,"ParameterServerJVM.setVMEnv(myEnv, conf);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,1,0,1,0.52,1,0
395_25,25,25,"List<String> commands = ParameterServerJVM.getVMCommand(conf, appid, psAttemptId);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,1,0,1,0.5,0,0
395_27,27,27,"Map<String, ByteBuffer> myServiceData = new HashMap<String, ByteBuffer>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,1,0,0,0.3,2,1
395_28,28,30,"for (Entry<String, ByteBuffer> entry : commonContainerSpec.getServiceData().entrySet()) {
myServiceData.put(entry.getKey(), entry.getValue().duplicate());
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,3,2,1,0,1,0.41,3,1
395_29,29,29,"myServiceData.put(entry.getKey(), entry.getValue().duplicate());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.27,4,2
395_32,32,34,"ContainerLaunchContext container = ContainerLaunchContext
.newInstance(commonContainerSpec.getLocalResources(), myEnv, commands, myServiceData,
commonContainerSpec.getTokens().duplicate(), applicationACLs);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,3,2,1,0,2,0.54,7,4
395_36,36,36,return container;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,2,1,0,0,0.16,11,5
394_1,1,3,"private static ContainerLaunchContext createCommonContainerLaunchContext(
MasterService masterService, Map<ApplicationAccessType, String> applicationACLs,
Configuration conf, final ApplicationId appid, Credentials credentials) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,10,7,0,0,1,0.48,67,35
394_5,5,5,"Map<String, LocalResource> localResources = new HashMap<String, LocalResource>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,10,7,0,0,0,0.35,65,34
394_7,7,7,"Map<String, String> environment = new HashMap<String, String>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,10,7,0,0,0,0.37,63,33
394_9,9,9,"Map<String, ByteBuffer> serviceData = new HashMap<String, ByteBuffer>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,10,7,0,0,0,0.39,61,32
394_11,11,11,ByteBuffer taskCredentialsBuffer = ByteBuffer.wrap(new byte[] {});,0,0,0,0,0,1,0,0,0,0,1,1,1,1,1,0,10,7,0,0,0,0.4,59,31
394_12,12,67,"try {
FileSystem remoteFS = FileSystem.get(conf);

Path remoteJobSubmitDir = new Path(conf.get(AngelConf.ANGEL_JOB_DIR));
Path remoteJobConfPath = new Path(remoteJobSubmitDir, AngelConf.ANGEL_JOB_CONF_FILE);
localResources.put(AngelConf.ANGEL_JOB_CONF_FILE,
createLocalResource(remoteFS, remoteJobConfPath, LocalResourceType.FILE,
LocalResourceVisibility.APPLICATION));
LOG
.info(""The job-conf file on the remote FS is "" + remoteJobConfPath.toUri().toASCIIString());

LOG.info(""actual workergroup number:"" + conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));
LOG.info(""actual task number:"" + conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));

AngelApps.setupDistributedCache(conf, localResources);

LOG.info(""Adding #"" + credentials.numberOfTokens() + "" tokens and #"" + credentials
.numberOfSecretKeys() + "" secret keys for NM use for launching container"");

Credentials taskCredentials = new Credentials(credentials);


DataOutputBuffer containerTokens_dob = new DataOutputBuffer();
LOG.info(""Size of containertokens_dob is "" + taskCredentials.numberOfTokens());
taskCredentials.writeTokenStorageToStream(containerTokens_dob);
taskCredentialsBuffer =
ByteBuffer.wrap(containerTokens_dob.getData(), 0, containerTokens_dob.getLength());
containerTokens_dob.close();

InetSocketAddress listenAddr = NetUtils.getRealLocalAddr(masterService.getRPCListenAddr());
Apps.addToEnvironment(environment, AngelEnvironment.LISTEN_ADDR.name(),
listenAddr.getAddress().getHostAddress());

Apps.addToEnvironment(environment, AngelEnvironment.LISTEN_PORT.name(),
String.valueOf(listenAddr.getPort()));

String workerGroupNumStr = conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM);
if (workerGroupNumStr != null) {
Apps.addToEnvironment(environment, AngelEnvironment.WORKERGROUP_NUMBER.name(),
conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));
}

String taskNumStr = conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM);
if (taskNumStr != null) {
Apps.addToEnvironment(environment, AngelEnvironment.TASK_NUMBER.name(),
conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));
}

Apps.addToEnvironment(environment, Environment.CLASSPATH.name(), getInitialClasspath(conf));

if (initialAppClasspath != null) {
Apps.addToEnvironment(environment, Environment.APP_CLASSPATH.name(), initialAppClasspath);
}
} catch (IOException e) {
throw new YarnRuntimeException(e);
}",0,0,0,0,1,0,0,0,0,29,2,56,1,1,0,1,10,7,0,0,3,0.59,3,1
394_13,13,13,FileSystem remoteFS = FileSystem.get(conf);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,10,7,0,0,0,0.34,57,29
394_15,15,15,Path remoteJobSubmitDir = new Path(conf.get(AngelConf.ANGEL_JOB_DIR));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,10,7,0,0,0,0.4,55,28
394_16,16,16,"Path remoteJobConfPath = new Path(remoteJobSubmitDir, AngelConf.ANGEL_JOB_CONF_FILE);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,7,0,0,0,0.4,54,27
394_17,17,19,"localResources.put(AngelConf.ANGEL_JOB_CONF_FILE,
createLocalResource(remoteFS, remoteJobConfPath, LocalResourceType.FILE,
LocalResourceVisibility.APPLICATION));",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,10,7,0,0,0,0.34,51,26
394_20,20,21,"LOG
.info(""The job-conf file on the remote FS is "" + remoteJobConfPath.toUri().toASCIIString());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,10,7,0,0,0,0.37,49,25
394_23,23,23,"LOG.info(""actual workergroup number:"" + conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,10,7,0,0,1,0.48,47,24
394_24,24,24,"LOG.info(""actual task number:"" + conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,10,7,0,0,1,0.45,46,23
394_26,26,26,"AngelApps.setupDistributedCache(conf, localResources);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,10,7,0,0,0,0.3,44,22
394_28,28,29,"LOG.info(""Adding #"" + credentials.numberOfTokens() + "" tokens and #"" + credentials
.numberOfSecretKeys() + "" secret keys for NM use for launching container"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,10,7,0,0,1,0.5,41,21
394_31,31,31,Credentials taskCredentials = new Credentials(credentials);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,10,7,0,0,0,0.3,39,20
394_34,34,34,DataOutputBuffer containerTokens_dob = new DataOutputBuffer();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,10,7,0,0,1,0.46,36,19
394_35,35,35,"LOG.info(""Size of containertokens_dob is "" + taskCredentials.numberOfTokens());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,7,0,0,0,0.37,35,18
394_36,36,36,taskCredentials.writeTokenStorageToStream(containerTokens_dob);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,7,0,0,1,0.46,34,17
394_37,37,38,"taskCredentialsBuffer =
ByteBuffer.wrap(containerTokens_dob.getData(), 0, containerTokens_dob.getLength());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,10,7,0,0,1,0.53,32,16
394_39,39,39,containerTokens_dob.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,10,7,0,0,1,0.51,31,15
394_41,41,41,InetSocketAddress listenAddr = NetUtils.getRealLocalAddr(masterService.getRPCListenAddr());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,10,7,0,0,0,0.4,29,14
394_42,42,43,"Apps.addToEnvironment(environment, AngelEnvironment.LISTEN_ADDR.name(),
listenAddr.getAddress().getHostAddress());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,10,7,0,0,0,0.37,27,13
394_45,45,46,"Apps.addToEnvironment(environment, AngelEnvironment.LISTEN_PORT.name(),
String.valueOf(listenAddr.getPort()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,10,7,0,0,0,0.37,24,12
394_48,48,48,String workerGroupNumStr = conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,10,7,0,0,1,0.45,22,11
394_49,49,52,"if (workerGroupNumStr != null) {
Apps.addToEnvironment(environment, AngelEnvironment.WORKERGROUP_NUMBER.name(),
conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));
}",1,0,0,0,0,0,0,0,0,1,1,4,1,1,0,1,10,7,0,0,2,0.48,18,9
394_50,50,51,"Apps.addToEnvironment(environment, AngelEnvironment.WORKERGROUP_NUMBER.name(),
conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,7,0,0,1,0.43,19,9
394_54,54,54,String taskNumStr = conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,10,7,0,0,1,0.44,16,8
394_55,55,58,"if (taskNumStr != null) {
Apps.addToEnvironment(environment, AngelEnvironment.TASK_NUMBER.name(),
conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));
}",1,0,0,0,0,0,0,0,0,1,1,4,1,1,0,1,10,7,0,0,2,0.47,12,6
394_56,56,57,"Apps.addToEnvironment(environment, AngelEnvironment.TASK_NUMBER.name(),
conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,7,0,0,1,0.42,13,6
394_60,60,60,"Apps.addToEnvironment(environment, Environment.CLASSPATH.name(), getInitialClasspath(conf));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,10,7,0,0,0,0.37,10,5
394_62,62,64,"if (initialAppClasspath != null) {
Apps.addToEnvironment(environment, Environment.APP_CLASSPATH.name(), initialAppClasspath);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,10,7,0,0,1,0.41,6,3
394_63,63,63,"Apps.addToEnvironment(environment, Environment.APP_CLASSPATH.name(), initialAppClasspath);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,0,0,0,0.35,7,3
394_65,65,65,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,0,0,0,0.31,5,2
394_66,66,66,throw new YarnRuntimeException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,10,7,0,0,0,0.27,4,1
394_69,69,69,"Apps.addToEnvironment(environment, Environment.LD_LIBRARY_PATH.name(), Environment.PWD.$());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,10,7,0,0,0,0.34,1,0
394_71,71,73,"ContainerLaunchContext container = ContainerLaunchContext
.newInstance(localResources, environment, null, serviceData, taskCredentialsBuffer,
applicationACLs);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,10,7,0,0,2,0.53,0,0
394_75,75,75,return container;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,10,7,0,0,1,0.63,4,1
393_1,1,3,"private static ContainerLaunchContext createCommonContainerLaunchContext(
MasterService masterService, Map<ApplicationAccessType, String> applicationACLs,
Configuration conf, final ApplicationId appid, Credentials credentials) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,9,5,1,0,0,0.35,65,34
393_5,5,5,"Map<String, LocalResource> localResources = new HashMap<String, LocalResource>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,9,5,1,0,0,0.34,63,33
393_7,7,7,"Map<String, String> environment = new HashMap<String, String>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,9,5,1,0,0,0.34,61,32
393_9,9,9,"Map<String, ByteBuffer> serviceData = new HashMap<String, ByteBuffer>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,9,5,1,0,0,0.32,59,31
393_11,11,11,ByteBuffer taskCredentialsBuffer = ByteBuffer.wrap(new byte[] {});,0,0,0,0,0,1,0,0,0,0,1,1,1,1,1,0,9,5,1,0,0,0.31,57,30
393_12,12,67,"try {
FileSystem remoteFS = FileSystem.get(conf);

Path remoteJobSubmitDir = new Path(conf.get(AngelConf.ANGEL_JOB_DIR));
Path remoteJobConfPath = new Path(remoteJobSubmitDir, AngelConf.ANGEL_JOB_CONF_FILE);
localResources.put(AngelConf.ANGEL_JOB_CONF_FILE,
createLocalResource(remoteFS, remoteJobConfPath, LocalResourceType.FILE,
LocalResourceVisibility.APPLICATION));
LOG
.info(""The job-conf file on the remote FS is "" + remoteJobConfPath.toUri().toASCIIString());

LOG.info(""actual workergroup number:"" + conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));
LOG.info(""actual task number:"" + conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));

AngelApps.setupDistributedCache(conf, localResources);

LOG.info(""Adding #"" + credentials.numberOfTokens() + "" tokens and #"" + credentials
.numberOfSecretKeys() + "" secret keys for NM use for launching container"");

Credentials taskCredentials = new Credentials(credentials);


DataOutputBuffer containerTokens_dob = new DataOutputBuffer();
LOG.info(""Size of containertokens_dob is "" + taskCredentials.numberOfTokens());
taskCredentials.writeTokenStorageToStream(containerTokens_dob);
taskCredentialsBuffer =
ByteBuffer.wrap(containerTokens_dob.getData(), 0, containerTokens_dob.getLength());
containerTokens_dob.close();

InetSocketAddress listenAddr = NetUtils.getRealLocalAddr(masterService.getRPCListenAddr());
Apps.addToEnvironment(environment, AngelEnvironment.LISTEN_ADDR.name(),
listenAddr.getAddress().getHostAddress());

Apps.addToEnvironment(environment, AngelEnvironment.LISTEN_PORT.name(),
String.valueOf(listenAddr.getPort()));

String workerGroupNumStr = conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM);
if (workerGroupNumStr != null) {
Apps.addToEnvironment(environment, AngelEnvironment.WORKERGROUP_NUMBER.name(),
conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));
}

String taskNumStr = conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM);
if (taskNumStr != null) {
Apps.addToEnvironment(environment, AngelEnvironment.TASK_NUMBER.name(),
conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));
}

Apps.addToEnvironment(environment, Environment.CLASSPATH.name(), getInitialClasspath(conf));

if (initialAppClasspath != null) {
Apps.addToEnvironment(environment, Environment.APP_CLASSPATH.name(), initialAppClasspath);
}
} catch (IOException e) {
throw new YarnRuntimeException(e);
}",0,0,0,0,1,0,0,0,0,29,2,56,1,1,0,1,9,5,1,0,3,0.61,1,0
393_13,13,13,FileSystem remoteFS = FileSystem.get(conf);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,5,1,0,0,0.37,55,28
393_15,15,15,Path remoteJobSubmitDir = new Path(conf.get(AngelConf.ANGEL_JOB_DIR));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,5,1,0,1,0.49,53,27
393_16,16,16,"Path remoteJobConfPath = new Path(remoteJobSubmitDir, AngelConf.ANGEL_JOB_CONF_FILE);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,1,0,1,0.5,52,26
393_17,17,19,"localResources.put(AngelConf.ANGEL_JOB_CONF_FILE,
createLocalResource(remoteFS, remoteJobConfPath, LocalResourceType.FILE,
LocalResourceVisibility.APPLICATION));",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,9,5,1,0,1,0.42,49,25
393_20,20,21,"LOG
.info(""The job-conf file on the remote FS is "" + remoteJobConfPath.toUri().toASCIIString());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,9,5,1,0,1,0.43,47,24
393_23,23,23,"LOG.info(""actual workergroup number:"" + conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,9,5,1,0,0,0.44,45,23
393_24,24,24,"LOG.info(""actual task number:"" + conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,9,5,1,0,0,0.41,44,22
393_26,26,26,"AngelApps.setupDistributedCache(conf, localResources);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,5,1,0,0,0.38,42,21
393_28,28,29,"LOG.info(""Adding #"" + credentials.numberOfTokens() + "" tokens and #"" + credentials
.numberOfSecretKeys() + "" secret keys for NM use for launching container"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,9,5,1,0,1,0.44,39,20
393_31,31,31,Credentials taskCredentials = new Credentials(credentials);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,9,5,1,0,0,0.31,37,19
393_34,34,34,DataOutputBuffer containerTokens_dob = new DataOutputBuffer();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,9,5,1,0,0,0.31,34,18
393_35,35,35,"LOG.info(""Size of containertokens_dob is "" + taskCredentials.numberOfTokens());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,5,1,0,0,0.33,33,17
393_36,36,36,taskCredentials.writeTokenStorageToStream(containerTokens_dob);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,5,1,0,0,0.31,32,16
393_37,37,38,"taskCredentialsBuffer =
ByteBuffer.wrap(containerTokens_dob.getData(), 0, containerTokens_dob.getLength());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,9,5,1,0,0,0.32,30,15
393_39,39,39,containerTokens_dob.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,9,5,1,0,0,0.26,29,14
393_41,41,41,InetSocketAddress listenAddr = NetUtils.getRealLocalAddr(masterService.getRPCListenAddr());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,5,1,0,0,0.39,27,13
393_42,42,43,"Apps.addToEnvironment(environment, AngelEnvironment.LISTEN_ADDR.name(),
listenAddr.getAddress().getHostAddress());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,9,5,1,0,1,0.51,25,12
393_45,45,46,"Apps.addToEnvironment(environment, AngelEnvironment.LISTEN_PORT.name(),
String.valueOf(listenAddr.getPort()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,9,5,1,0,1,0.5,22,11
393_48,48,48,String workerGroupNumStr = conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,9,5,1,0,0,0.42,20,10
393_49,49,52,"if (workerGroupNumStr != null) {
Apps.addToEnvironment(environment, AngelEnvironment.WORKERGROUP_NUMBER.name(),
conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));
}",1,0,0,0,0,0,0,0,0,1,1,4,1,1,0,1,9,5,1,0,1,0.53,16,8
393_50,50,51,"Apps.addToEnvironment(environment, AngelEnvironment.WORKERGROUP_NUMBER.name(),
conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,1,0,1,0.55,17,8
393_54,54,54,String taskNumStr = conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,9,5,1,0,0,0.41,14,7
393_55,55,58,"if (taskNumStr != null) {
Apps.addToEnvironment(environment, AngelEnvironment.TASK_NUMBER.name(),
conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));
}",1,0,0,0,0,0,0,0,0,1,1,4,1,1,0,1,9,5,1,0,1,0.52,10,5
393_56,56,57,"Apps.addToEnvironment(environment, AngelEnvironment.TASK_NUMBER.name(),
conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,1,0,1,0.53,11,5
393_60,60,60,"Apps.addToEnvironment(environment, Environment.CLASSPATH.name(), getInitialClasspath(conf));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,5,1,0,1,0.49,8,4
393_62,62,64,"if (initialAppClasspath != null) {
Apps.addToEnvironment(environment, Environment.APP_CLASSPATH.name(), initialAppClasspath);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,9,5,1,0,1,0.47,4,2
393_63,63,63,"Apps.addToEnvironment(environment, Environment.APP_CLASSPATH.name(), initialAppClasspath);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,1,0.47,5,2
393_65,65,65,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,0,0.31,3,1
393_66,66,66,throw new YarnRuntimeException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,9,5,1,0,0,0.31,2,0
393_69,69,69,"Apps.addToEnvironment(environment, Environment.LD_LIBRARY_PATH.name(), Environment.PWD.$());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,5,1,0,5,0.66,0,0
393_71,71,73,"ContainerLaunchContext container = ContainerLaunchContext
.newInstance(localResources, environment, null, serviceData, taskCredentialsBuffer,
applicationACLs);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,9,5,1,0,0,0.33,2,1
393_75,75,75,return container;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,9,5,1,0,0,0.31,6,2
392_1,1,3,"private static ContainerLaunchContext createCommonContainerLaunchContext(
MasterService masterService, Map<ApplicationAccessType, String> applicationACLs,
Configuration conf, final ApplicationId appid, Credentials credentials) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,4,4,0,0,1,0.49,24,13
392_5,5,5,"Map<String, LocalResource> localResources = new HashMap<String, LocalResource>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.3,22,12
392_7,7,7,"Map<String, String> environment = new HashMap<String, String>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.35,20,11
392_9,9,9,"Map<String, ByteBuffer> serviceData = new HashMap<String, ByteBuffer>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,4,0,0,1,0.48,18,10
392_11,11,11,ByteBuffer taskCredentialsBuffer = ByteBuffer.wrap(new byte[] {});,0,0,0,0,0,1,0,0,0,0,1,1,1,1,1,0,4,4,0,0,3,0.79,16,9
392_12,12,67,"try {
FileSystem remoteFS = FileSystem.get(conf);

Path remoteJobSubmitDir = new Path(conf.get(AngelConf.ANGEL_JOB_DIR));
Path remoteJobConfPath = new Path(remoteJobSubmitDir, AngelConf.ANGEL_JOB_CONF_FILE);
localResources.put(AngelConf.ANGEL_JOB_CONF_FILE,
createLocalResource(remoteFS, remoteJobConfPath, LocalResourceType.FILE,
LocalResourceVisibility.APPLICATION));
LOG
.info(""The job-conf file on the remote FS is "" + remoteJobConfPath.toUri().toASCIIString());

LOG.info(""actual workergroup number:"" + conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));
LOG.info(""actual task number:"" + conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));

AngelApps.setupDistributedCache(conf, localResources);

LOG.info(""Adding #"" + credentials.numberOfTokens() + "" tokens and #"" + credentials
.numberOfSecretKeys() + "" secret keys for NM use for launching container"");

Credentials taskCredentials = new Credentials(credentials);


DataOutputBuffer containerTokens_dob = new DataOutputBuffer();
LOG.info(""Size of containertokens_dob is "" + taskCredentials.numberOfTokens());
taskCredentials.writeTokenStorageToStream(containerTokens_dob);
taskCredentialsBuffer =
ByteBuffer.wrap(containerTokens_dob.getData(), 0, containerTokens_dob.getLength());
containerTokens_dob.close();

InetSocketAddress listenAddr = NetUtils.getRealLocalAddr(masterService.getRPCListenAddr());
Apps.addToEnvironment(environment, AngelEnvironment.LISTEN_ADDR.name(),
listenAddr.getAddress().getHostAddress());

Apps.addToEnvironment(environment, AngelEnvironment.LISTEN_PORT.name(),
String.valueOf(listenAddr.getPort()));

String workerGroupNumStr = conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM);
if (workerGroupNumStr != null) {
Apps.addToEnvironment(environment, AngelEnvironment.WORKERGROUP_NUMBER.name(),
conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));
}

String taskNumStr = conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM);
if (taskNumStr != null) {
Apps.addToEnvironment(environment, AngelEnvironment.TASK_NUMBER.name(),
conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));
}

Apps.addToEnvironment(environment, Environment.CLASSPATH.name(), getInitialClasspath(conf));

if (initialAppClasspath != null) {
Apps.addToEnvironment(environment, Environment.APP_CLASSPATH.name(), initialAppClasspath);
}
} catch (IOException e) {
throw new YarnRuntimeException(e);
}",0,0,0,0,1,0,0,0,0,29,2,56,1,1,0,1,4,4,0,0,4,0.71,0,0
392_13,13,13,FileSystem remoteFS = FileSystem.get(conf);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.38,14,7
392_15,15,15,Path remoteJobSubmitDir = new Path(conf.get(AngelConf.ANGEL_JOB_DIR));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.38,12,6
392_16,16,16,"Path remoteJobConfPath = new Path(remoteJobSubmitDir, AngelConf.ANGEL_JOB_CONF_FILE);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.38,11,5
392_17,17,19,"localResources.put(AngelConf.ANGEL_JOB_CONF_FILE,
createLocalResource(remoteFS, remoteJobConfPath, LocalResourceType.FILE,
LocalResourceVisibility.APPLICATION));",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,4,4,0,0,0,0.38,8,4
392_20,20,21,"LOG
.info(""The job-conf file on the remote FS is "" + remoteJobConfPath.toUri().toASCIIString());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,4,4,0,0,0,0.43,6,3
392_23,23,23,"LOG.info(""actual workergroup number:"" + conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,4,4,0,0,0,0.37,4,2
392_24,24,24,"LOG.info(""actual task number:"" + conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,4,0,0,1,0.51,3,1
392_26,26,26,"AngelApps.setupDistributedCache(conf, localResources);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,1,0.5,1,0
392_28,28,29,"LOG.info(""Adding #"" + credentials.numberOfTokens() + "" tokens and #"" + credentials
.numberOfSecretKeys() + "" secret keys for NM use for launching container"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,4,4,0,0,1,0.47,0,0
392_31,31,31,Credentials taskCredentials = new Credentials(credentials);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,4,0,0,2,0.77,3,1
392_34,34,34,DataOutputBuffer containerTokens_dob = new DataOutputBuffer();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.47,6,2
392_35,35,35,"LOG.info(""Size of containertokens_dob is "" + taskCredentials.numberOfTokens());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,2,0.62,7,2
392_36,36,36,taskCredentials.writeTokenStorageToStream(containerTokens_dob);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,2,0.61,8,3
392_37,37,38,"taskCredentialsBuffer =
ByteBuffer.wrap(containerTokens_dob.getData(), 0, containerTokens_dob.getLength());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,4,0,0,3,0.69,9,4
392_39,39,39,containerTokens_dob.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,4,0,0,0,0.28,11,6
392_41,41,41,InetSocketAddress listenAddr = NetUtils.getRealLocalAddr(masterService.getRPCListenAddr());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.44,13,7
392_42,42,43,"Apps.addToEnvironment(environment, AngelEnvironment.LISTEN_ADDR.name(),
listenAddr.getAddress().getHostAddress());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,4,4,0,0,0,0.42,14,7
392_45,45,46,"Apps.addToEnvironment(environment, AngelEnvironment.LISTEN_PORT.name(),
String.valueOf(listenAddr.getPort()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,4,4,0,0,0,0.42,17,9
392_48,48,48,String workerGroupNumStr = conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,4,4,0,0,0,0.37,20,10
392_49,49,52,"if (workerGroupNumStr != null) {
Apps.addToEnvironment(environment, AngelEnvironment.WORKERGROUP_NUMBER.name(),
conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));
}",1,0,0,0,0,0,0,0,0,1,1,4,1,1,0,1,4,4,0,0,0,0.38,21,10
392_50,50,51,"Apps.addToEnvironment(environment, AngelEnvironment.WORKERGROUP_NUMBER.name(),
conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.38,22,11
392_54,54,54,String taskNumStr = conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,4,4,0,0,1,0.53,26,13
392_55,55,58,"if (taskNumStr != null) {
Apps.addToEnvironment(environment, AngelEnvironment.TASK_NUMBER.name(),
conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));
}",1,0,0,0,0,0,0,0,0,1,1,4,1,1,0,1,4,4,0,0,1,0.53,27,13
392_56,56,57,"Apps.addToEnvironment(environment, AngelEnvironment.TASK_NUMBER.name(),
conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,1,0.51,28,14
392_60,60,60,"Apps.addToEnvironment(environment, Environment.CLASSPATH.name(), getInitialClasspath(conf));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.37,32,16
392_62,62,64,"if (initialAppClasspath != null) {
Apps.addToEnvironment(environment, Environment.APP_CLASSPATH.name(), initialAppClasspath);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,4,4,0,0,0,0.35,34,17
392_63,63,63,"Apps.addToEnvironment(environment, Environment.APP_CLASSPATH.name(), initialAppClasspath);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.36,35,17
392_65,65,65,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.38,37,19
392_66,66,66,throw new YarnRuntimeException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,4,0,0,0,0.33,38,19
392_69,69,69,"Apps.addToEnvironment(environment, Environment.LD_LIBRARY_PATH.name(), Environment.PWD.$());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.37,41,21
392_71,71,73,"ContainerLaunchContext container = ContainerLaunchContext
.newInstance(localResources, environment, null, serviceData, taskCredentialsBuffer,
applicationACLs);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,4,4,0,0,3,0.65,43,22
392_75,75,75,return container;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.26,47,23
391_1,1,3,"private static ContainerLaunchContext createCommonContainerLaunchContext(
MasterService masterService, Map<ApplicationAccessType, String> applicationACLs,
Configuration conf, final ApplicationId appid, Credentials credentials) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,3,3,0,0,0,0.41,22,12
391_5,5,5,"Map<String, LocalResource> localResources = new HashMap<String, LocalResource>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.22,20,11
391_7,7,7,"Map<String, String> environment = new HashMap<String, String>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.28,18,10
391_9,9,9,"Map<String, ByteBuffer> serviceData = new HashMap<String, ByteBuffer>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.3,16,9
391_11,11,11,ByteBuffer taskCredentialsBuffer = ByteBuffer.wrap(new byte[] {});,0,0,0,0,0,1,0,0,0,0,1,1,1,1,1,0,3,3,0,0,0,0.37,14,8
391_12,12,67,"try {
FileSystem remoteFS = FileSystem.get(conf);

Path remoteJobSubmitDir = new Path(conf.get(AngelConf.ANGEL_JOB_DIR));
Path remoteJobConfPath = new Path(remoteJobSubmitDir, AngelConf.ANGEL_JOB_CONF_FILE);
localResources.put(AngelConf.ANGEL_JOB_CONF_FILE,
createLocalResource(remoteFS, remoteJobConfPath, LocalResourceType.FILE,
LocalResourceVisibility.APPLICATION));
LOG
.info(""The job-conf file on the remote FS is "" + remoteJobConfPath.toUri().toASCIIString());

LOG.info(""actual workergroup number:"" + conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));
LOG.info(""actual task number:"" + conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));

AngelApps.setupDistributedCache(conf, localResources);

LOG.info(""Adding #"" + credentials.numberOfTokens() + "" tokens and #"" + credentials
.numberOfSecretKeys() + "" secret keys for NM use for launching container"");

Credentials taskCredentials = new Credentials(credentials);


DataOutputBuffer containerTokens_dob = new DataOutputBuffer();
LOG.info(""Size of containertokens_dob is "" + taskCredentials.numberOfTokens());
taskCredentials.writeTokenStorageToStream(containerTokens_dob);
taskCredentialsBuffer =
ByteBuffer.wrap(containerTokens_dob.getData(), 0, containerTokens_dob.getLength());
containerTokens_dob.close();

InetSocketAddress listenAddr = NetUtils.getRealLocalAddr(masterService.getRPCListenAddr());
Apps.addToEnvironment(environment, AngelEnvironment.LISTEN_ADDR.name(),
listenAddr.getAddress().getHostAddress());

Apps.addToEnvironment(environment, AngelEnvironment.LISTEN_PORT.name(),
String.valueOf(listenAddr.getPort()));

String workerGroupNumStr = conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM);
if (workerGroupNumStr != null) {
Apps.addToEnvironment(environment, AngelEnvironment.WORKERGROUP_NUMBER.name(),
conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));
}

String taskNumStr = conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM);
if (taskNumStr != null) {
Apps.addToEnvironment(environment, AngelEnvironment.TASK_NUMBER.name(),
conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));
}

Apps.addToEnvironment(environment, Environment.CLASSPATH.name(), getInitialClasspath(conf));

if (initialAppClasspath != null) {
Apps.addToEnvironment(environment, Environment.APP_CLASSPATH.name(), initialAppClasspath);
}
} catch (IOException e) {
throw new YarnRuntimeException(e);
}",0,0,0,0,1,0,0,0,0,29,2,56,1,1,0,1,3,3,0,0,3,0.67,0,0
391_13,13,13,FileSystem remoteFS = FileSystem.get(conf);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.36,12,6
391_15,15,15,Path remoteJobSubmitDir = new Path(conf.get(AngelConf.ANGEL_JOB_DIR));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.39,10,5
391_16,16,16,"Path remoteJobConfPath = new Path(remoteJobSubmitDir, AngelConf.ANGEL_JOB_CONF_FILE);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.39,9,4
391_17,17,19,"localResources.put(AngelConf.ANGEL_JOB_CONF_FILE,
createLocalResource(remoteFS, remoteJobConfPath, LocalResourceType.FILE,
LocalResourceVisibility.APPLICATION));",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,3,3,0,0,0,0.39,6,3
391_20,20,21,"LOG
.info(""The job-conf file on the remote FS is "" + remoteJobConfPath.toUri().toASCIIString());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,3,3,0,0,0,0.41,4,2
391_23,23,23,"LOG.info(""actual workergroup number:"" + conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,3,0,0,0,0.42,2,1
391_24,24,24,"LOG.info(""actual task number:"" + conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,3,0,0,0,0.41,1,0
391_26,26,26,"AngelApps.setupDistributedCache(conf, localResources);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,3,0.81,0,0
391_28,28,29,"LOG.info(""Adding #"" + credentials.numberOfTokens() + "" tokens and #"" + credentials
.numberOfSecretKeys() + "" secret keys for NM use for launching container"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,3,3,0,0,0,0.39,2,1
391_31,31,31,Credentials taskCredentials = new Credentials(credentials);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.36,5,2
391_34,34,34,DataOutputBuffer containerTokens_dob = new DataOutputBuffer();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.28,8,3
391_35,35,35,"LOG.info(""Size of containertokens_dob is "" + taskCredentials.numberOfTokens());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.36,9,3
391_36,36,36,taskCredentials.writeTokenStorageToStream(containerTokens_dob);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.32,10,4
391_37,37,38,"taskCredentialsBuffer =
ByteBuffer.wrap(containerTokens_dob.getData(), 0, containerTokens_dob.getLength());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,3,3,0,0,0,0.35,11,5
391_39,39,39,containerTokens_dob.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.31,13,7
391_41,41,41,InetSocketAddress listenAddr = NetUtils.getRealLocalAddr(masterService.getRPCListenAddr());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.46,15,8
391_42,42,43,"Apps.addToEnvironment(environment, AngelEnvironment.LISTEN_ADDR.name(),
listenAddr.getAddress().getHostAddress());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,3,3,0,0,0,0.4,16,8
391_45,45,46,"Apps.addToEnvironment(environment, AngelEnvironment.LISTEN_PORT.name(),
String.valueOf(listenAddr.getPort()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,3,3,0,0,0,0.4,19,10
391_48,48,48,String workerGroupNumStr = conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,3,3,0,0,0,0.38,22,11
391_49,49,52,"if (workerGroupNumStr != null) {
Apps.addToEnvironment(environment, AngelEnvironment.WORKERGROUP_NUMBER.name(),
conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));
}",1,0,0,0,0,0,0,0,0,1,1,4,1,1,0,1,3,3,0,0,0,0.39,23,11
391_50,50,51,"Apps.addToEnvironment(environment, AngelEnvironment.WORKERGROUP_NUMBER.name(),
conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.39,24,12
391_54,54,54,String taskNumStr = conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,3,3,0,0,0,0.39,28,14
391_55,55,58,"if (taskNumStr != null) {
Apps.addToEnvironment(environment, AngelEnvironment.TASK_NUMBER.name(),
conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));
}",1,0,0,0,0,0,0,0,0,1,1,4,1,1,0,1,3,3,0,0,0,0.39,29,14
391_56,56,57,"Apps.addToEnvironment(environment, AngelEnvironment.TASK_NUMBER.name(),
conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.39,30,15
391_60,60,60,"Apps.addToEnvironment(environment, Environment.CLASSPATH.name(), getInitialClasspath(conf));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.38,34,17
391_62,62,64,"if (initialAppClasspath != null) {
Apps.addToEnvironment(environment, Environment.APP_CLASSPATH.name(), initialAppClasspath);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,3,0,0,0,0.32,36,18
391_63,63,63,"Apps.addToEnvironment(environment, Environment.APP_CLASSPATH.name(), initialAppClasspath);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,37,18
391_65,65,65,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.36,39,20
391_66,66,66,throw new YarnRuntimeException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,0,0.31,40,20
391_69,69,69,"Apps.addToEnvironment(environment, Environment.LD_LIBRARY_PATH.name(), Environment.PWD.$());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.41,43,22
391_71,71,73,"ContainerLaunchContext container = ContainerLaunchContext
.newInstance(localResources, environment, null, serviceData, taskCredentialsBuffer,
applicationACLs);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,3,3,0,0,0,0.36,45,23
391_75,75,75,return container;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.19,49,24
390_1,1,3,"private static ContainerLaunchContext createCommonContainerLaunchContext(
MasterService masterService, Map<ApplicationAccessType, String> applicationACLs,
Configuration conf, final ApplicationId appid, Credentials credentials) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,7,4,1,0,1,0.46,11,6
390_5,5,5,"Map<String, LocalResource> localResources = new HashMap<String, LocalResource>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,4,1,0,1,0.48,9,5
390_7,7,7,"Map<String, String> environment = new HashMap<String, String>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,4,1,0,0,0.36,7,4
390_9,9,9,"Map<String, ByteBuffer> serviceData = new HashMap<String, ByteBuffer>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,4,1,0,0,0.33,5,3
390_11,11,11,ByteBuffer taskCredentialsBuffer = ByteBuffer.wrap(new byte[] {});,0,0,0,0,0,1,0,0,0,0,1,1,1,1,1,0,7,4,1,0,0,0.38,3,2
390_12,12,67,"try {
FileSystem remoteFS = FileSystem.get(conf);

Path remoteJobSubmitDir = new Path(conf.get(AngelConf.ANGEL_JOB_DIR));
Path remoteJobConfPath = new Path(remoteJobSubmitDir, AngelConf.ANGEL_JOB_CONF_FILE);
localResources.put(AngelConf.ANGEL_JOB_CONF_FILE,
createLocalResource(remoteFS, remoteJobConfPath, LocalResourceType.FILE,
LocalResourceVisibility.APPLICATION));
LOG
.info(""The job-conf file on the remote FS is "" + remoteJobConfPath.toUri().toASCIIString());

LOG.info(""actual workergroup number:"" + conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));
LOG.info(""actual task number:"" + conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));

AngelApps.setupDistributedCache(conf, localResources);

LOG.info(""Adding #"" + credentials.numberOfTokens() + "" tokens and #"" + credentials
.numberOfSecretKeys() + "" secret keys for NM use for launching container"");

Credentials taskCredentials = new Credentials(credentials);


DataOutputBuffer containerTokens_dob = new DataOutputBuffer();
LOG.info(""Size of containertokens_dob is "" + taskCredentials.numberOfTokens());
taskCredentials.writeTokenStorageToStream(containerTokens_dob);
taskCredentialsBuffer =
ByteBuffer.wrap(containerTokens_dob.getData(), 0, containerTokens_dob.getLength());
containerTokens_dob.close();

InetSocketAddress listenAddr = NetUtils.getRealLocalAddr(masterService.getRPCListenAddr());
Apps.addToEnvironment(environment, AngelEnvironment.LISTEN_ADDR.name(),
listenAddr.getAddress().getHostAddress());

Apps.addToEnvironment(environment, AngelEnvironment.LISTEN_PORT.name(),
String.valueOf(listenAddr.getPort()));

String workerGroupNumStr = conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM);
if (workerGroupNumStr != null) {
Apps.addToEnvironment(environment, AngelEnvironment.WORKERGROUP_NUMBER.name(),
conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));
}

String taskNumStr = conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM);
if (taskNumStr != null) {
Apps.addToEnvironment(environment, AngelEnvironment.TASK_NUMBER.name(),
conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));
}

Apps.addToEnvironment(environment, Environment.CLASSPATH.name(), getInitialClasspath(conf));

if (initialAppClasspath != null) {
Apps.addToEnvironment(environment, Environment.APP_CLASSPATH.name(), initialAppClasspath);
}
} catch (IOException e) {
throw new YarnRuntimeException(e);
}",0,0,0,0,1,0,0,0,0,29,2,56,1,1,0,1,7,4,1,0,5,0.69,0,0
390_13,13,13,FileSystem remoteFS = FileSystem.get(conf);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,4,1,0,2,0.58,1,0
390_15,15,15,Path remoteJobSubmitDir = new Path(conf.get(AngelConf.ANGEL_JOB_DIR));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,4,1,0,3,0.7,0,0
390_16,16,16,"Path remoteJobConfPath = new Path(remoteJobSubmitDir, AngelConf.ANGEL_JOB_CONF_FILE);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,3,0.73,1,0
390_17,17,19,"localResources.put(AngelConf.ANGEL_JOB_CONF_FILE,
createLocalResource(remoteFS, remoteJobConfPath, LocalResourceType.FILE,
LocalResourceVisibility.APPLICATION));",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,7,4,1,0,4,0.72,2,1
390_20,20,21,"LOG
.info(""The job-conf file on the remote FS is "" + remoteJobConfPath.toUri().toASCIIString());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,7,4,1,0,3,0.67,5,3
390_23,23,23,"LOG.info(""actual workergroup number:"" + conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,7,4,1,0,1,0.49,8,4
390_24,24,24,"LOG.info(""actual task number:"" + conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,7,4,1,0,1,0.47,9,4
390_26,26,26,"AngelApps.setupDistributedCache(conf, localResources);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,4,1,0,2,0.61,11,6
390_28,28,29,"LOG.info(""Adding #"" + credentials.numberOfTokens() + "" tokens and #"" + credentials
.numberOfSecretKeys() + "" secret keys for NM use for launching container"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,7,4,1,0,1,0.46,13,7
390_31,31,31,Credentials taskCredentials = new Credentials(credentials);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,4,1,0,0,0.43,16,8
390_34,34,34,DataOutputBuffer containerTokens_dob = new DataOutputBuffer();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,4,1,0,0,0.27,19,9
390_35,35,35,"LOG.info(""Size of containertokens_dob is "" + taskCredentials.numberOfTokens());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,0,0.36,20,9
390_36,36,36,taskCredentials.writeTokenStorageToStream(containerTokens_dob);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,0,0.37,21,10
390_37,37,38,"taskCredentialsBuffer =
ByteBuffer.wrap(containerTokens_dob.getData(), 0, containerTokens_dob.getLength());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,7,4,1,0,0,0.39,22,11
390_39,39,39,containerTokens_dob.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,7,4,1,0,0,0.26,24,13
390_41,41,41,InetSocketAddress listenAddr = NetUtils.getRealLocalAddr(masterService.getRPCListenAddr());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,4,1,0,1,0.56,26,14
390_42,42,43,"Apps.addToEnvironment(environment, AngelEnvironment.LISTEN_ADDR.name(),
listenAddr.getAddress().getHostAddress());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,7,4,1,0,0,0.51,27,14
390_45,45,46,"Apps.addToEnvironment(environment, AngelEnvironment.LISTEN_PORT.name(),
String.valueOf(listenAddr.getPort()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,7,4,1,0,0,0.47,30,16
390_48,48,48,String workerGroupNumStr = conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,7,4,1,0,1,0.53,33,17
390_49,49,52,"if (workerGroupNumStr != null) {
Apps.addToEnvironment(environment, AngelEnvironment.WORKERGROUP_NUMBER.name(),
conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));
}",1,0,0,0,0,0,0,0,0,1,1,4,1,1,0,1,7,4,1,0,1,0.49,34,17
390_50,50,51,"Apps.addToEnvironment(environment, AngelEnvironment.WORKERGROUP_NUMBER.name(),
conf.get(AngelConf.ANGEL_WORKERGROUP_ACTUAL_NUM));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,4,1,0,1,0.49,35,18
390_54,54,54,String taskNumStr = conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,7,4,1,0,1,0.52,39,20
390_55,55,58,"if (taskNumStr != null) {
Apps.addToEnvironment(environment, AngelEnvironment.TASK_NUMBER.name(),
conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));
}",1,0,0,0,0,0,0,0,0,1,1,4,1,1,0,1,7,4,1,0,1,0.49,40,20
390_56,56,57,"Apps.addToEnvironment(environment, AngelEnvironment.TASK_NUMBER.name(),
conf.get(AngelConf.ANGEL_TASK_ACTUAL_NUM));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,4,1,0,1,0.48,41,21
390_60,60,60,"Apps.addToEnvironment(environment, Environment.CLASSPATH.name(), getInitialClasspath(conf));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,4,1,0,1,0.45,45,23
390_62,62,64,"if (initialAppClasspath != null) {
Apps.addToEnvironment(environment, Environment.APP_CLASSPATH.name(), initialAppClasspath);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,7,4,1,0,0,0.36,47,24
390_63,63,63,"Apps.addToEnvironment(environment, Environment.APP_CLASSPATH.name(), initialAppClasspath);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.36,48,24
390_65,65,65,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.34,50,26
390_66,66,66,throw new YarnRuntimeException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,4,1,0,0,0.32,51,26
390_69,69,69,"Apps.addToEnvironment(environment, Environment.LD_LIBRARY_PATH.name(), Environment.PWD.$());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,4,1,0,0,0.41,54,28
390_71,71,73,"ContainerLaunchContext container = ContainerLaunchContext
.newInstance(localResources, environment, null, serviceData, taskCredentialsBuffer,
applicationACLs);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,7,4,1,0,1,0.45,56,29
390_75,75,75,return container;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,4,1,0,0,0.23,60,30
389_1,1,4,"  public static ContainerLaunchContext createContainerLaunchContext(
Map<ApplicationAccessType, String> applicationACLs, Configuration conf,
WorkerAttemptId workerAttemptId, int initMinClock, final ApplicationId appid,
MasterService masterService, Credentials credentials) {",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,3,2,0,0,1,0.44,32,16
389_6,6,6,synchronized (commonContainerSpecLock) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,1,0.51,30,15
389_7,7,11,"if (commonContainerSpec == null) {
commonContainerSpec =
createCommonContainerLaunchContext(masterService, applicationACLs, conf, appid,
credentials);
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,3,2,0,0,1,0.5,25,13
389_8,8,10,"commonContainerSpec =
createCommonContainerLaunchContext(masterService, applicationACLs, conf, appid,
credentials);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,3,2,0,0,1,0.49,26,13
389_14,14,14,"Map<String, String> env = commonContainerSpec.getEnvironment();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.5,22,12
389_15,15,15,"Map<String, String> myEnv = new HashMap<String, String>(env.size());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.33,21,11
389_16,16,16,myEnv.putAll(env);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.36,20,10
389_17,17,18,"Apps.addToEnvironment(myEnv, AngelEnvironment.WORKER_ID.name(),
Integer.toString(workerAttemptId.getWorkerId().getIndex()));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,3,2,0,0,0,0.32,18,9
389_19,19,20,"Apps.addToEnvironment(myEnv, AngelEnvironment.WORKER_ATTEMPT_ID.name(),
Integer.toString(workerAttemptId.getIndex()));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,3,2,0,0,0,0.32,16,8
389_21,21,22,"Apps.addToEnvironment(myEnv, AngelEnvironment.WORKER_GROUP_ID.name(),
Integer.toString(workerAttemptId.getWorkerId().getWorkerGroupId().getIndex()));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,3,2,0,0,0,0.32,14,7
389_23,23,24,"Apps.addToEnvironment(myEnv, AngelEnvironment.INIT_MIN_CLOCK.name(),
Integer.toString(initMinClock));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,3,2,0,0,0,0.33,12,6
389_25,25,26,"Apps.addToEnvironment(myEnv, AngelEnvironment.ANGEL_USER_TASK.name(),
conf.get(AngelConf.ANGEL_TASK_USER_TASKCLASS, AngelConf.DEFAULT_ANGEL_TASK_USER_TASKCLASS));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,1,3,2,0,0,0,0.29,10,5
389_28,28,28,"WorkerJVM.setVMEnv(myEnv, conf);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.33,8,4
389_30,30,30,"List<String> commands = WorkerJVM.getVMCommand(conf, appid, workerAttemptId);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.3,6,3
389_32,32,32,"Map<String, ByteBuffer> myServiceData = new HashMap<String, ByteBuffer>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.29,4,2
389_33,33,35,"for (Entry<String, ByteBuffer> entry : commonContainerSpec.getServiceData().entrySet()) {
myServiceData.put(entry.getKey(), entry.getValue().duplicate());
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,3,2,0,0,1,0.44,1,0
389_34,34,34,"myServiceData.put(entry.getKey(), entry.getValue().duplicate());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.29,2,0
389_37,37,39,"ContainerLaunchContext container = ContainerLaunchContext
.newInstance(commonContainerSpec.getLocalResources(), myEnv, commands, myServiceData,
commonContainerSpec.getTokens().duplicate(), applicationACLs);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,3,2,0,0,1,0.51,0,0
389_41,41,41,return container;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,2,0,0,1,0.53,4,1
388_1,1,4,"  public static ContainerLaunchContext createContainerLaunchContext(
Map<ApplicationAccessType, String> applicationACLs, Configuration conf,
WorkerAttemptId workerAttemptId, int initMinClock, final ApplicationId appid,
MasterService masterService, Credentials credentials) {",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,6,5,0,0,2,0.53,27,13
388_6,6,6,synchronized (commonContainerSpecLock) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,5,0,0,1,0.51,25,12
388_7,7,11,"if (commonContainerSpec == null) {
commonContainerSpec =
createCommonContainerLaunchContext(masterService, applicationACLs, conf, appid,
credentials);
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,6,5,0,0,1,0.49,20,10
388_8,8,10,"commonContainerSpec =
createCommonContainerLaunchContext(masterService, applicationACLs, conf, appid,
credentials);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,6,5,0,0,1,0.49,21,10
388_14,14,14,"Map<String, String> env = commonContainerSpec.getEnvironment();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,5,0,0,1,0.48,17,9
388_15,15,15,"Map<String, String> myEnv = new HashMap<String, String>(env.size());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.42,16,8
388_16,16,16,myEnv.putAll(env);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.38,15,7
388_17,17,18,"Apps.addToEnvironment(myEnv, AngelEnvironment.WORKER_ID.name(),
Integer.toString(workerAttemptId.getWorkerId().getIndex()));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,6,5,0,0,0,0.38,13,6
388_19,19,20,"Apps.addToEnvironment(myEnv, AngelEnvironment.WORKER_ATTEMPT_ID.name(),
Integer.toString(workerAttemptId.getIndex()));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,6,5,0,0,0,0.38,11,5
388_21,21,22,"Apps.addToEnvironment(myEnv, AngelEnvironment.WORKER_GROUP_ID.name(),
Integer.toString(workerAttemptId.getWorkerId().getWorkerGroupId().getIndex()));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,6,5,0,0,0,0.38,9,4
388_23,23,24,"Apps.addToEnvironment(myEnv, AngelEnvironment.INIT_MIN_CLOCK.name(),
Integer.toString(initMinClock));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,6,5,0,0,0,0.39,7,3
388_25,25,26,"Apps.addToEnvironment(myEnv, AngelEnvironment.ANGEL_USER_TASK.name(),
conf.get(AngelConf.ANGEL_TASK_USER_TASKCLASS, AngelConf.DEFAULT_ANGEL_TASK_USER_TASKCLASS));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,1,6,5,0,0,0,0.36,5,2
388_28,28,28,"WorkerJVM.setVMEnv(myEnv, conf);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,5,0,0,0,0.38,3,1
388_30,30,30,"List<String> commands = WorkerJVM.getVMCommand(conf, appid, workerAttemptId);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,5,0,0,0,0.38,1,0
388_32,32,32,"Map<String, ByteBuffer> myServiceData = new HashMap<String, ByteBuffer>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,5,0,0,2,0.6,0,0
388_33,33,35,"for (Entry<String, ByteBuffer> entry : commonContainerSpec.getServiceData().entrySet()) {
myServiceData.put(entry.getKey(), entry.getValue().duplicate());
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,6,5,0,0,4,0.63,1,0
388_34,34,34,"myServiceData.put(entry.getKey(), entry.getValue().duplicate());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.41,2,1
388_37,37,39,"ContainerLaunchContext container = ContainerLaunchContext
.newInstance(commonContainerSpec.getLocalResources(), myEnv, commands, myServiceData,
commonContainerSpec.getTokens().duplicate(), applicationACLs);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,6,5,0,0,2,0.56,5,3
388_41,41,41,return container;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,5,0,0,1,0.51,9,4
387_1,1,4,"  public static ContainerLaunchContext createContainerLaunchContext(
Map<ApplicationAccessType, String> applicationACLs, Configuration conf,
WorkerAttemptId workerAttemptId, int initMinClock, final ApplicationId appid,
MasterService masterService, Credentials credentials) {",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,3,2,1,0,1,0.45,25,12
387_6,6,6,synchronized (commonContainerSpecLock) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,1,0,0,0.26,23,11
387_7,7,11,"if (commonContainerSpec == null) {
commonContainerSpec =
createCommonContainerLaunchContext(masterService, applicationACLs, conf, appid,
credentials);
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,3,2,1,0,1,0.44,18,9
387_8,8,10,"commonContainerSpec =
createCommonContainerLaunchContext(masterService, applicationACLs, conf, appid,
credentials);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,3,2,1,0,1,0.45,19,9
387_14,14,14,"Map<String, String> env = commonContainerSpec.getEnvironment();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,1,0,0,0.27,15,8
387_15,15,15,"Map<String, String> myEnv = new HashMap<String, String>(env.size());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.31,14,7
387_16,16,16,myEnv.putAll(env);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.33,13,6
387_17,17,18,"Apps.addToEnvironment(myEnv, AngelEnvironment.WORKER_ID.name(),
Integer.toString(workerAttemptId.getWorkerId().getIndex()));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,3,2,1,0,0,0.35,11,5
387_19,19,20,"Apps.addToEnvironment(myEnv, AngelEnvironment.WORKER_ATTEMPT_ID.name(),
Integer.toString(workerAttemptId.getIndex()));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,3,2,1,0,0,0.36,9,4
387_21,21,22,"Apps.addToEnvironment(myEnv, AngelEnvironment.WORKER_GROUP_ID.name(),
Integer.toString(workerAttemptId.getWorkerId().getWorkerGroupId().getIndex()));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,3,2,1,0,0,0.35,7,3
387_23,23,24,"Apps.addToEnvironment(myEnv, AngelEnvironment.INIT_MIN_CLOCK.name(),
Integer.toString(initMinClock));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,3,2,1,0,0,0.36,5,2
387_25,25,26,"Apps.addToEnvironment(myEnv, AngelEnvironment.ANGEL_USER_TASK.name(),
conf.get(AngelConf.ANGEL_TASK_USER_TASKCLASS, AngelConf.DEFAULT_ANGEL_TASK_USER_TASKCLASS));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,1,3,2,1,0,0,0.4,3,1
387_28,28,28,"WorkerJVM.setVMEnv(myEnv, conf);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,1,0,1,0.52,1,0
387_30,30,30,"List<String> commands = WorkerJVM.getVMCommand(conf, appid, workerAttemptId);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,1,0,1,0.5,0,0
387_32,32,32,"Map<String, ByteBuffer> myServiceData = new HashMap<String, ByteBuffer>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,1,0,0,0.3,2,1
387_33,33,35,"for (Entry<String, ByteBuffer> entry : commonContainerSpec.getServiceData().entrySet()) {
myServiceData.put(entry.getKey(), entry.getValue().duplicate());
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,3,2,1,0,1,0.41,3,1
387_34,34,34,"myServiceData.put(entry.getKey(), entry.getValue().duplicate());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.27,4,2
387_37,37,39,"ContainerLaunchContext container = ContainerLaunchContext
.newInstance(commonContainerSpec.getLocalResources(), myEnv, commands, myServiceData,
commonContainerSpec.getTokens().duplicate(), applicationACLs);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,3,2,1,0,2,0.54,7,4
387_41,41,41,return container;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,2,1,0,0,0.16,11,5
384_1,1,2,"    @Override
public Object getProperty(Interpreter interp, ST self, Map<?, ?> model, Object property, String propertyName)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,0,0.31,11,9
384_3,3,3,throws STNoSuchPropertyException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,1,0,0,0.29,10,8
384_5,5,5,Object value;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.25,8,7
384_6,6,13,"if ( property==null ) value = getDefaultValue(model);
else if ( containsKey(model, property) ) value = model.get(property);
else if ( containsKey(model, propertyName) ) {
value = model.get(propertyName);
}
else if ( property.equals(""keys"") ) value = model.keySet();
else if ( property.equals(""values"") ) value = model.values();
else value = getDefaultValue(model);",1,0,0,0,0,0,0,0,0,6,1,8,0,1,0,0,3,2,1,0,1,0.42,0,0
384_7,7,7,"else if ( containsKey(model, property) ) value = model.get(property);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,1,0,0,0.23,6,5
384_8,8,8,"else if ( containsKey(model, propertyName) ) {",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,1,0,0,0.23,5,4
384_9,9,9,value = model.get(propertyName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.26,4,3
384_11,11,11,"else if ( property.equals(""keys"") ) value = model.keySet();",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,1,0,0,0.26,2,2
384_12,12,12,"else if ( property.equals(""values"") ) value = model.values();",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,1,0,0,0.27,1,1
384_13,13,13,else value = getDefaultValue(model);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.46,0,0
384_14,14,16,"if ( value == STGroup.DICT_KEY ) {
value = property;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,2,1,0,0,0.35,0,0
384_15,15,15,value = property;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.27,1,0
384_17,17,17,return value;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.3,3,2
379_1,1,3,"        @Nullable
@Override
public String getHtml() {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,4,3,0,0,1,0.56,16,12
379_4,4,6,"if (!isMultiLine()) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,3,0,0,0,0.39,13,10
379_5,5,5,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.29,14,10
379_8,8,8,String contentType = getContentType();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.35,11,9
379_9,9,9,String[] values = getData().getValue(String[].class);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.53,10,8
379_10,10,10,String value = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.56,9,7
379_11,11,13,"if (values != null) {
value = StringUtils.join(values, "", "");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,4,3,0,0,1,0.6,6,5
379_12,12,12,"value = StringUtils.join(values, "", "");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.6,7,5
379_15,15,27,"if (TEXT_HTML.equals(contentType)) {
return value;
} else {
if (htmlValue == null) {
try {
htmlValue = converter.convertToHTML(value, contentType);
} catch (ContentFragmentException e) {
LOG.warn(""Could not convert value to HTML"", e);
return null;
}
}
return htmlValue;
}",1,0,0,0,0,0,0,0,0,9,3,13,0,0,1,0,4,3,0,0,3,0.73,0,0
379_16,16,16,return value;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.59,3,3
379_17,17,17,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,2,2
379_18,18,25,"if (htmlValue == null) {
try {
htmlValue = converter.convertToHTML(value, contentType);
} catch (ContentFragmentException e) {
LOG.warn(""Could not convert value to HTML"", e);
return null;
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,0,0,0,4,3,0,0,3,0.73,0,0
379_19,19,24,"try {
htmlValue = converter.convertToHTML(value, contentType);
} catch (ContentFragmentException e) {
LOG.warn(""Could not convert value to HTML"", e);
return null;
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,0,0,4,3,0,0,3,0.73,0,0
379_20,20,20,"htmlValue = converter.convertToHTML(value, contentType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.83,0,0
379_21,21,21,} catch (ContentFragmentException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.39,1,0
379_22,22,22,"LOG.warn(""Could not convert value to HTML"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.71,2,1
379_23,23,23,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.29,3,2
379_26,26,26,return htmlValue;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.72,6,4
378_1,1,3,"        @Nullable
@Override
public String getHtml() {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,2,2,0,0,1,0.6,12,8
378_4,4,6,"if (!isMultiLine()) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,2,2,0,0,1,0.63,9,6
378_5,5,5,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.72,10,6
378_8,8,8,String contentType = getContentType();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.33,7,5
378_9,9,9,String[] values = getData().getValue(String[].class);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.28,6,4
378_10,10,10,String value = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.43,5,3
378_11,11,13,"if (values != null) {
value = StringUtils.join(values, "", "");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,2,2,0,0,0,0.4,2,1
378_12,12,12,"value = StringUtils.join(values, "", "");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.38,3,1
378_15,15,27,"if (TEXT_HTML.equals(contentType)) {
return value;
} else {
if (htmlValue == null) {
try {
htmlValue = converter.convertToHTML(value, contentType);
} catch (ContentFragmentException e) {
LOG.warn(""Could not convert value to HTML"", e);
return null;
}
}
return htmlValue;
}",1,0,0,0,0,0,0,0,0,9,3,13,0,0,1,0,2,2,0,0,2,0.72,0,0
378_16,16,16,return value;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.63,0,0
378_17,17,17,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.37,1,0
378_18,18,25,"if (htmlValue == null) {
try {
htmlValue = converter.convertToHTML(value, contentType);
} catch (ContentFragmentException e) {
LOG.warn(""Could not convert value to HTML"", e);
return null;
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,0,0,0,2,2,0,0,2,0.7,2,1
378_19,19,24,"try {
htmlValue = converter.convertToHTML(value, contentType);
} catch (ContentFragmentException e) {
LOG.warn(""Could not convert value to HTML"", e);
return null;
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,0,0,2,2,0,0,2,0.69,3,2
378_20,20,20,"htmlValue = converter.convertToHTML(value, contentType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.55,4,3
378_21,21,21,} catch (ContentFragmentException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.35,5,4
378_22,22,22,"LOG.warn(""Could not convert value to HTML"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.51,6,5
378_23,23,23,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.72,7,6
378_26,26,26,return htmlValue;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,2,0.86,10,8
335_1,1,1,"    public void updateEntries(ArrayList<Entry> newEntries, boolean update) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,3,0.71,2,1
335_2,2,2,entries.retainAll(newEntries);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,1,0,2,0.73,1,0
335_4,4,6,"for (Entry e : newEntries) {
addEntry(e, update);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,1,0,5,2,1,0,4,0.84,0,0
335_5,5,5,"addEntry(e, update);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,3,0.77,1,0
334_1,1,1,"    public void updateEntries(ArrayList<Entry> newEntries, boolean update) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.57,0,0
334_2,2,2,entries.retainAll(newEntries);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.49,0,0
334_4,4,6,"for (Entry e : newEntries) {
addEntry(e, update);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,1,0,4,3,0,0,1,0.46,2,1
334_5,5,5,"addEntry(e, update);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,3,1
302_1,1,1,"    @SuppressWarnings(""ConstantConditions"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.4,3,2
302_2,2,2,private void updateCurrentSong() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.5,2,1
302_3,3,3,impl.updateCurrentSong(MusicPlayerRemote.getCurrentSong());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,1,0,1,0.46,1,0
302_5,5,5,recyclerView.getAdapter().notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,1,0.55,0,0
297_1,1,1,private void updateTabVisibility() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,2,0.68,0,0
297_2,2,2,tabs.setVisibility(pagerAdapter.getCount() == 1 ? View.GONE : View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,2,0.67,0,0
296_1,1,2,"@Override
public void onSharedPreferenceChanged(SharedPreferences preferences, String key) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,0,0.44,9,8
296_3,3,13,"if (PreferenceUtil.LIBRARY_CATEGORIES.equals(key)) {
Fragment current = getCurrentFragment();
pagerAdapter.setCategoryInfos(PreferenceUtil.getInstance().getLibraryCategoryInfos());
pager.setOffscreenPageLimit(pagerAdapter.getCount() - 1);
int position = pagerAdapter.getItemPosition(current);
if (position < 0) position = 0;
pager.setCurrentItem(position);
PreferenceUtil.getInstance().setLastPage(position);

tabs.setVisibility(pagerAdapter.getCount() == 1 ? View.GONE : View.VISIBLE);
}",1,0,0,0,0,0,0,0,0,8,1,11,0,0,0,0,5,5,0,0,1,0.55,0,0
296_4,4,4,Fragment current = getCurrentFragment();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.44,7,6
296_5,5,5,pagerAdapter.setCategoryInfos(PreferenceUtil.getInstance().getLibraryCategoryInfos());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.42,6,5
296_6,6,6,pager.setOffscreenPageLimit(pagerAdapter.getCount() - 1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.36,5,4
296_7,7,7,int position = pagerAdapter.getItemPosition(current);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.43,4,3
296_8,8,8,if (position < 0) position = 0;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.29,3,2
296_9,9,9,pager.setCurrentItem(position);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.39,2,1
296_10,10,10,PreferenceUtil.getInstance().setLastPage(position);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,0,0.38,1,0
296_12,12,12,tabs.setVisibility(pagerAdapter.getCount() == 1 ? View.GONE : View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,1,0.6,0,0
295_1,1,2,"    @Override
protected void onReset() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.35,1,1
295_3,3,3,super.onReset();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.36,0,0
295_4,4,4,onStopLoading();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.68,0,0
295_5,5,5,this.mData = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.29,1,0
294_1,1,2,"    @Override
protected void onStopLoading() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,0,0,1,0.51,1,1
294_3,3,3,super.onStopLoading();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.5,0,0
294_4,4,4,cancelLoad();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,2,0.78,0,0
293_1,1,1,    protected void setUpPlayerToolbar() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.42,0,0
293_2,2,5,"if (!hasEqualizer()) {
MenuItem equalizerItem = toolbar.getMenu().findItem(R.id.action_equalizer);
equalizerItem.setVisible(false);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,3,1,0,0,1,0.61,0,0
293_3,3,3,MenuItem equalizerItem = toolbar.getMenu().findItem(R.id.action_equalizer);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,0,0,1,0.59,1,0
293_4,4,4,equalizerItem.setVisible(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,1,0.57,2,1
292_1,1,1,"public void setUpRecyclerView(RecyclerView recyclerView, final SlidingUpPanelLayout slidingUpPanelLayout) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,21,17,1,0,0,0.44,6,4
292_2,2,2,recyclerViewTouchActionGuardManager = new RecyclerViewTouchActionGuardManager();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,21,17,1,0,0,0.44,5,3
292_3,3,3,recyclerViewSwipeManager = new RecyclerViewSwipeManager();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,21,17,1,0,1,0.49,4,2
292_4,4,4,recyclerViewDragDropManager = new RecyclerViewDragDropManager();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,21,17,1,0,0,0.44,3,1
292_6,6,6,final GeneralItemAnimator animator = new DraggableItemAnimator();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,21,17,1,0,2,0.59,1,0
292_8,8,8,animator.setSupportsChangeAnimations(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,21,17,1,0,3,0.68,0,0
292_10,10,15,"playingQueueAdapter = new PlayingQueueAdapter(
((AppCompatActivity) getActivity()),
MusicPlayerRemote.getPlayingQueue(),
MusicPlayerRemote.getPosition(),
false,
null);",0,0,0,0,0,0,0,0,0,0,0,6,0,0,1,0,21,17,1,0,0,0.42,2,1
292_16,16,16,wrappedAdapter = recyclerViewDragDropManager.createWrappedAdapter(playingQueueAdapter);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,21,17,1,0,0,0.45,8,2
292_17,17,17,wrappedAdapter = recyclerViewSwipeManager.createWrappedAdapter(wrappedAdapter);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,21,17,1,0,1,0.49,9,2
292_19,19,19,layoutManager = new LinearLayoutManager(getActivity());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,21,17,1,0,0,0.41,11,4
292_21,21,21,recyclerView.setLayoutManager(layoutManager);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,21,17,1,0,0,0.4,13,5
292_22,22,22,recyclerView.setAdapter(wrappedAdapter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,21,17,1,0,0,0.44,14,5
292_23,23,23,recyclerView.setItemAnimator(animator);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,21,17,1,0,2,0.62,15,6
292_25,25,25,recyclerViewTouchActionGuardManager.attachRecyclerView(recyclerView);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,21,17,1,0,0,0.46,17,8
292_26,26,26,recyclerViewSwipeManager.attachRecyclerView(recyclerView);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,21,17,1,0,1,0.49,18,8
292_27,27,27,recyclerViewDragDropManager.attachRecyclerView(recyclerView);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,21,17,1,0,0,0.45,19,9
292_29,29,29,recyclerViewSwipeManager.setOnItemSwipeEventListener(new RecyclerViewSwipeManager.OnItemSwipeEventListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,21,17,1,0,2,0.54,21,11
292_30,30,31,"@Override
public void onItemSwipeStarted(int i) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,21,17,1,0,2,0.55,22,11
292_32,32,32,slidingUpPanelLayout.setTouchEnabled(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,21,17,1,0,1,0.49,24,13
292_35,35,36,"@Override
public void onItemSwipeFinished(int i, int i1, int i2) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,21,17,1,0,2,0.52,27,14
292_37,37,37,slidingUpPanelLayout.setTouchEnabled(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,21,17,1,0,1,0.49,29,15
292_41,41,41,"layoutManager.scrollToPositionWithOffset(MusicPlayerRemote.getPosition() + 1, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,21,17,1,0,0,0.37,33,16
280_1,1,1,	private Clause saIfRequired(Clause othClause) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,0,0.34,2,0
280_3,3,17,"if (isStandardizedApartCheckRequired() || this == othClause) {
Set<Variable> mVariables = _variableCollector
.collectAllVariables(this);
Set<Variable> oVariables = _variableCollector
.collectAllVariables(othClause);

Set<Variable> cVariables = new HashSet<Variable>();
cVariables.addAll(mVariables);
cVariables.addAll(oVariables);

if (cVariables.size() < (mVariables.size() + oVariables.size())) {
othClause = _standardizeApart.standardizeApart(othClause,
_saIndexical);
}
}",1,0,0,0,0,0,0,0,0,7,2,15,0,0,1,1,9,5,1,0,2,0.43,0,0
280_4,4,5,"Set<Variable> mVariables = _variableCollector
.collectAllVariables(this);",0,0,0,0,0,1,0,0,0,0,0,2,1,0,0,0,9,5,1,0,0,0.37,1,0
280_6,6,7,"Set<Variable> oVariables = _variableCollector
.collectAllVariables(othClause);",0,0,0,0,0,1,0,0,0,0,0,2,1,0,0,1,9,5,1,0,0,0.37,3,2
280_9,9,9,Set<Variable> cVariables = new HashSet<Variable>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,5,1,0,0,0.32,6,3
280_10,10,10,cVariables.addAll(mVariables);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,9,5,1,0,0,0.31,7,3
280_11,11,11,cVariables.addAll(oVariables);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,9,5,1,0,0,0.31,8,4
280_13,13,16,"if (cVariables.size() < (mVariables.size() + oVariables.size())) {
othClause = _standardizeApart.standardizeApart(othClause,
_saIndexical);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,1,0,9,5,1,0,2,0.43,10,6
280_14,14,15,"othClause = _standardizeApart.standardizeApart(othClause,
_saIndexical);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,1,0,2,0.5,11,6
280_19,19,19,return othClause;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,9,5,1,0,0,0.28,16,8
279_1,1,1,private void calculateFactors(Set<Clause> parentFactors) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.53,41,30
279_2,2,2,nonTrivialFactors = new LinkedHashSet<Clause>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,0,0,3,0.57,40,29
279_4,4,4,"Map<Variable, Term> theta = new HashMap<Variable, Term>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,3,0,0,0,0.3,38,28
279_5,5,5,List<Literal> lits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.42,37,27
279_6,6,66,"for (int i = 0; i < 2; i++) {
lits.clear();
if (i == 0) {
lits.addAll(positiveLiterals);
} else {
lits.addAll(negativeLiterals);
}
for (int x = 0; x < lits.size(); x++) {
for (int y = x + 1; y < lits.size(); y++) {
Literal litX = lits.get(x);
Literal litY = lits.get(y);

theta.clear();
Map<Variable, Term> substitution = _unifier.unify(
litX.getAtomicSentence(), litY.getAtomicSentence(),
theta);
if (null != substitution) {
List<Literal> posLits = new ArrayList<Literal>();
List<Literal> negLits = new ArrayList<Literal>();
if (i == 0) {
posLits.add(_substVisitor.subst(substitution, litX));
} else {
negLits.add(_substVisitor.subst(substitution, litX));
}
for (Literal pl : positiveLiterals) {
if (pl == litX || pl == litY) {
continue;
}
posLits.add(_substVisitor.subst(substitution, pl));
}
for (Literal nl : negativeLiterals) {
if (nl == litX || nl == litY) {
continue;
}
negLits.add(_substVisitor.subst(substitution, nl));
}
Map<Variable, Term> renameSubst = _standardizeApart
.standardizeApart(posLits, negLits,
_saIndexical);
Clause c = new Clause(posLits, negLits);
c.setProofStep(new ProofStepClauseFactor(c, this, litX,
litY, substitution, renameSubst));
if (isImmutable()) {
c.setImmutable();
}
if (!isStandardizedApartCheckRequired()) {
c.setStandardizedApartCheckNotRequired();
}
if (null == parentFactors) {
c.calculateFactors(nonTrivialFactors);
nonTrivialFactors.addAll(c.getFactors());
} else {
if (!parentFactors.contains(c)) {
c.calculateFactors(nonTrivialFactors);
nonTrivialFactors.addAll(c.getFactors());
}
}
}
}
}
}",0,0,0,1,0,0,0,0,0,40,6,61,0,1,0,1,6,3,0,0,5,0.67,0,0
279_7,7,7,lits.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.23,35,25
279_8,8,12,"if (i == 0) {
lits.addAll(positiveLiterals);
} else {
lits.addAll(negativeLiterals);
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,0,6,3,0,0,0,0.49,30,21
279_9,9,9,lits.addAll(positiveLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.48,33,23
279_10,10,10,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.29,32,22
279_11,11,11,lits.addAll(negativeLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.52,31,21
279_13,13,65,"for (int x = 0; x < lits.size(); x++) {
for (int y = x + 1; y < lits.size(); y++) {
Literal litX = lits.get(x);
Literal litY = lits.get(y);

theta.clear();
Map<Variable, Term> substitution = _unifier.unify(
litX.getAtomicSentence(), litY.getAtomicSentence(),
theta);
if (null != substitution) {
List<Literal> posLits = new ArrayList<Literal>();
List<Literal> negLits = new ArrayList<Literal>();
if (i == 0) {
posLits.add(_substVisitor.subst(substitution, litX));
} else {
negLits.add(_substVisitor.subst(substitution, litX));
}
for (Literal pl : positiveLiterals) {
if (pl == litX || pl == litY) {
continue;
}
posLits.add(_substVisitor.subst(substitution, pl));
}
for (Literal nl : negativeLiterals) {
if (nl == litX || nl == litY) {
continue;
}
negLits.add(_substVisitor.subst(substitution, nl));
}
Map<Variable, Term> renameSubst = _standardizeApart
.standardizeApart(posLits, negLits,
_saIndexical);
Clause c = new Clause(posLits, negLits);
c.setProofStep(new ProofStepClauseFactor(c, this, litX,
litY, substitution, renameSubst));
if (isImmutable()) {
c.setImmutable();
}
if (!isStandardizedApartCheckRequired()) {
c.setStandardizedApartCheckNotRequired();
}
if (null == parentFactors) {
c.calculateFactors(nonTrivialFactors);
nonTrivialFactors.addAll(c.getFactors());
} else {
if (!parentFactors.contains(c)) {
c.calculateFactors(nonTrivialFactors);
nonTrivialFactors.addAll(c.getFactors());
}
}
}
}
}",0,0,0,1,0,0,0,0,0,34,5,53,1,1,0,0,6,3,0,0,5,0.67,0,0
279_14,14,64,"for (int y = x + 1; y < lits.size(); y++) {
Literal litX = lits.get(x);
Literal litY = lits.get(y);

theta.clear();
Map<Variable, Term> substitution = _unifier.unify(
litX.getAtomicSentence(), litY.getAtomicSentence(),
theta);
if (null != substitution) {
List<Literal> posLits = new ArrayList<Literal>();
List<Literal> negLits = new ArrayList<Literal>();
if (i == 0) {
posLits.add(_substVisitor.subst(substitution, litX));
} else {
negLits.add(_substVisitor.subst(substitution, litX));
}
for (Literal pl : positiveLiterals) {
if (pl == litX || pl == litY) {
continue;
}
posLits.add(_substVisitor.subst(substitution, pl));
}
for (Literal nl : negativeLiterals) {
if (nl == litX || nl == litY) {
continue;
}
negLits.add(_substVisitor.subst(substitution, nl));
}
Map<Variable, Term> renameSubst = _standardizeApart
.standardizeApart(posLits, negLits,
_saIndexical);
Clause c = new Clause(posLits, negLits);
c.setProofStep(new ProofStepClauseFactor(c, this, litX,
litY, substitution, renameSubst));
if (isImmutable()) {
c.setImmutable();
}
if (!isStandardizedApartCheckRequired()) {
c.setStandardizedApartCheckNotRequired();
}
if (null == parentFactors) {
c.calculateFactors(nonTrivialFactors);
nonTrivialFactors.addAll(c.getFactors());
} else {
if (!parentFactors.contains(c)) {
c.calculateFactors(nonTrivialFactors);
nonTrivialFactors.addAll(c.getFactors());
}
}
}
}",0,0,0,1,0,0,0,0,0,33,4,51,0,0,0,0,6,3,0,0,5,0.67,0,0
279_15,15,15,Literal litX = lits.get(x);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,3,0,0,0,0.52,27,18
279_16,16,16,Literal litY = lits.get(y);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,6,3,0,0,0,0.44,26,17
279_18,18,18,theta.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,3,0,0,0,0.23,24,16
279_19,19,21,"Map<Variable, Term> substitution = _unifier.unify(
litX.getAtomicSentence(), litY.getAtomicSentence(),
theta);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,6,3,0,0,0,0.41,21,15
279_22,22,63,"if (null != substitution) {
List<Literal> posLits = new ArrayList<Literal>();
List<Literal> negLits = new ArrayList<Literal>();
if (i == 0) {
posLits.add(_substVisitor.subst(substitution, litX));
} else {
negLits.add(_substVisitor.subst(substitution, litX));
}
for (Literal pl : positiveLiterals) {
if (pl == litX || pl == litY) {
continue;
}
posLits.add(_substVisitor.subst(substitution, pl));
}
for (Literal nl : negativeLiterals) {
if (nl == litX || nl == litY) {
continue;
}
negLits.add(_substVisitor.subst(substitution, nl));
}
Map<Variable, Term> renameSubst = _standardizeApart
.standardizeApart(posLits, negLits,
_saIndexical);
Clause c = new Clause(posLits, negLits);
c.setProofStep(new ProofStepClauseFactor(c, this, litX,
litY, substitution, renameSubst));
if (isImmutable()) {
c.setImmutable();
}
if (!isStandardizedApartCheckRequired()) {
c.setStandardizedApartCheckNotRequired();
}
if (null == parentFactors) {
c.calculateFactors(nonTrivialFactors);
nonTrivialFactors.addAll(c.getFactors());
} else {
if (!parentFactors.contains(c)) {
c.calculateFactors(nonTrivialFactors);
nonTrivialFactors.addAll(c.getFactors());
}
}
}",1,0,0,0,0,0,0,0,0,28,3,42,0,1,0,0,6,3,0,0,5,0.68,0,0
279_23,23,23,List<Literal> posLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.43,19,13
279_24,24,24,List<Literal> negLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.46,18,12
279_25,25,29,"if (i == 0) {
posLits.add(_substVisitor.subst(substitution, litX));
} else {
negLits.add(_substVisitor.subst(substitution, litX));
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,0,6,3,0,0,0,0.48,13,8
279_26,26,26,"posLits.add(_substVisitor.subst(substitution, litX));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.46,16,10
279_27,27,27,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.29,15,9
279_28,28,28,"negLits.add(_substVisitor.subst(substitution, litX));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.5,14,8
279_30,30,35,"for (Literal pl : positiveLiterals) {
if (pl == litX || pl == litY) {
continue;
}
posLits.add(_substVisitor.subst(substitution, pl));
}",0,0,0,1,0,0,0,0,0,3,2,6,1,1,0,0,6,3,0,0,0,0.53,7,4
279_31,31,33,"if (pl == litX || pl == litY) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,0,0,0,0.52,9,5
279_32,32,32,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.38,10,5
279_34,34,34,"posLits.add(_substVisitor.subst(substitution, pl));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.43,8,4
279_36,36,41,"for (Literal nl : negativeLiterals) {
if (nl == litX || nl == litY) {
continue;
}
negLits.add(_substVisitor.subst(substitution, nl));
}",0,0,0,1,0,0,0,0,0,3,2,6,1,1,0,0,6,3,0,0,0,0.55,1,0
279_37,37,39,"if (nl == litX || nl == litY) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,0,0,0,0.52,3,1
279_38,38,38,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.38,4,1
279_40,40,40,"negLits.add(_substVisitor.subst(substitution, nl));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.48,2,0
279_42,42,44,"Map<Variable, Term> renameSubst = _standardizeApart
.standardizeApart(posLits, negLits,
_saIndexical);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,6,3,0,0,2,0.56,0,0
279_45,45,45,"Clause c = new Clause(posLits, negLits);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.4,3,1
279_46,46,47,"c.setProofStep(new ProofStepClauseFactor(c, this, litX,
litY, substitution, renameSubst));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,6,3,0,0,1,0.48,4,1
279_48,48,50,"if (isImmutable()) {
c.setImmutable();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,0,0,0,0.48,6,3
279_49,49,49,c.setImmutable();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.45,7,3
279_51,51,53,"if (!isStandardizedApartCheckRequired()) {
c.setStandardizedApartCheckNotRequired();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,0,0,2,0.49,9,5
279_52,52,52,c.setStandardizedApartCheckNotRequired();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,2,0.47,10,5
279_54,54,62,"if (null == parentFactors) {
c.calculateFactors(nonTrivialFactors);
nonTrivialFactors.addAll(c.getFactors());
} else {
if (!parentFactors.contains(c)) {
c.calculateFactors(nonTrivialFactors);
nonTrivialFactors.addAll(c.getFactors());
}
}",1,0,0,0,0,0,0,0,0,6,2,9,0,1,0,0,6,3,0,0,3,0.68,12,7
279_55,55,55,c.calculateFactors(nonTrivialFactors);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,3,0.74,13,7
279_56,56,56,nonTrivialFactors.addAll(c.getFactors());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,3,0.67,14,8
279_57,57,57,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.29,15,9
279_58,58,61,"if (!parentFactors.contains(c)) {
c.calculateFactors(nonTrivialFactors);
nonTrivialFactors.addAll(c.getFactors());
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,6,3,0,0,3,0.67,16,10
279_59,59,59,c.calculateFactors(nonTrivialFactors);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,3,0.74,17,11
279_60,60,60,nonTrivialFactors.addAll(c.getFactors());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,3,0.67,18,12
279_68,68,68,factors = new LinkedHashSet<Clause>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,0,0,1,0.44,26,14
279_69,69,69,factors.add(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.56,27,14
279_70,70,70,factors.addAll(nonTrivialFactors);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,3,0.76,28,15
278_1,1,1,	private void recalculateIdentity() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,0,0,0,0.47,3,1
278_2,2,2,synchronized (this) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,0,0,0,0.28,2,0
278_4,4,4,List<Literal> sortedLiterals = new ArrayList<Literal>(literals);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,10,8,0,0,2,0.64,0,0
278_5,5,5,"Collections.sort(sortedLiterals, _literalSorter);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,10,8,0,0,2,0.7,1,0
278_7,7,8,"ClauseEqualityIdentityConstructor ceic = new ClauseEqualityIdentityConstructor(
sortedLiterals, _literalSorter);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,10,8,0,0,2,0.6,3,2
278_10,10,10,equalityIdentity = ceic.getIdentity();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,10,8,0,0,0,0.41,6,3
278_12,12,12,factors = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,10,8,0,0,0,0.41,8,4
278_13,13,13,nonTrivialFactors = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,0,0,0,0.4,9,4
278_14,14,14,stringRep = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,0,0,0,0.35,10,5
277_1,1,1,public Set<Clause> binaryResolvents(Clause othC) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,0,0,1,0.49,59,44
277_2,2,2,Set<Clause> resolvents = new LinkedHashSet<Clause>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,0,0,1,0.44,58,43
277_3,3,6,"if (isEmpty() && othC.isEmpty()) {
resolvents.add(new Clause());
return resolvents;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,4,1,0,0,1,0.48,54,40
277_4,4,4,resolvents.add(new Clause());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,0,0,1,0.48,56,41
277_5,5,5,return resolvents;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,1,0,0,1,0.58,55,40
277_8,8,8,othC = saIfRequired(othC);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,1,0,0,0,0.23,52,39
277_10,10,10,List<Literal> allPosLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,1,0,0,0,0.35,50,38
277_11,11,11,List<Literal> allNegLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,1,0,0,0,0.38,49,37
277_12,12,12,allPosLits.addAll(this.positiveLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,1,0,0,0,0.36,48,36
277_13,13,13,allPosLits.addAll(othC.positiveLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,1,0,0,0,0.35,47,35
277_14,14,14,allNegLits.addAll(this.negativeLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,1,0,0,0,0.43,46,34
277_15,15,15,allNegLits.addAll(othC.negativeLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,1,0,0,0,0.41,45,33
277_17,17,17,List<Literal> trPosLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,1,0,0,0,0.35,43,32
277_18,18,18,List<Literal> trNegLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,1,0,0,0,0.37,42,31
277_19,19,19,List<Literal> copyRPosLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,1,0,0,0,0.35,41,30
277_20,20,20,List<Literal> copyRNegLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,1,0,0,0,0.37,40,29
277_22,22,77,"for (int i = 0; i < 2; i++) {
trPosLits.clear();
trNegLits.clear();

if (i == 0) {
trPosLits.addAll(this.positiveLiterals);
trNegLits.addAll(othC.negativeLiterals);
} else {
trPosLits.addAll(othC.positiveLiterals);
trNegLits.addAll(this.negativeLiterals);
}

Map<Variable, Term> copyRBindings = new LinkedHashMap<Variable, Term>();
for (Literal pl : trPosLits) {
for (Literal nl : trNegLits) {
copyRBindings.clear();
if (null != _unifier.unify(pl.getAtomicSentence(),
nl.getAtomicSentence(), copyRBindings)) {
copyRPosLits.clear();
copyRNegLits.clear();
boolean found = false;
for (Literal l : allPosLits) {
if (!found && pl.equals(l)) {
found = true;
continue;
}
copyRPosLits.add(_substVisitor.subst(copyRBindings,
l));
}
found = false;
for (Literal l : allNegLits) {
if (!found && nl.equals(l)) {
found = true;
continue;
}
copyRNegLits.add(_substVisitor.subst(copyRBindings,
l));
}
Map<Variable, Term> renameSubstitituon = _standardizeApart
.standardizeApart(copyRPosLits, copyRNegLits,
_saIndexical);
Clause c = new Clause(copyRPosLits, copyRNegLits);
c.setProofStep(new ProofStepClauseBinaryResolvent(c,
pl, nl, this, othC, copyRBindings,
renameSubstitituon));
if (isImmutable()) {
c.setImmutable();
}
if (!isStandardizedApartCheckRequired()) {
c.setStandardizedApartCheckNotRequired();
}
resolvents.add(c);
}
}
}
}",0,0,0,1,0,0,0,0,0,36,6,56,0,0,1,1,4,1,0,0,3,0.57,0,0
277_23,23,23,trPosLits.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,1,0,0,0,0.24,37,27
277_24,24,24,trNegLits.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,1,0,0,0,0.32,36,26
277_26,26,32,"if (i == 0) {
trPosLits.addAll(this.positiveLiterals);
trNegLits.addAll(othC.negativeLiterals);
} else {
trPosLits.addAll(othC.positiveLiterals);
trNegLits.addAll(this.negativeLiterals);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,1,1,4,1,0,0,0,0.38,28,20
277_27,27,27,trPosLits.addAll(this.positiveLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,1,0,0,0,0.36,33,24
277_28,28,28,trNegLits.addAll(othC.negativeLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,1,0,0,0,0.4,32,23
277_29,29,29,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,0,0,0,0.25,31,22
277_30,30,30,trPosLits.addAll(othC.positiveLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,1,0,0,0,0.35,30,21
277_31,31,31,trNegLits.addAll(this.negativeLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,1,0,0,0,0.42,29,20
277_34,34,34,"Map<Variable, Term> copyRBindings = new LinkedHashMap<Variable, Term>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,1,0,0,0,0.36,26,19
277_35,35,76,"for (Literal pl : trPosLits) {
for (Literal nl : trNegLits) {
copyRBindings.clear();
if (null != _unifier.unify(pl.getAtomicSentence(),
nl.getAtomicSentence(), copyRBindings)) {
copyRPosLits.clear();
copyRNegLits.clear();
boolean found = false;
for (Literal l : allPosLits) {
if (!found && pl.equals(l)) {
found = true;
continue;
}
copyRPosLits.add(_substVisitor.subst(copyRBindings,
l));
}
found = false;
for (Literal l : allNegLits) {
if (!found && nl.equals(l)) {
found = true;
continue;
}
copyRNegLits.add(_substVisitor.subst(copyRBindings,
l));
}
Map<Variable, Term> renameSubstitituon = _standardizeApart
.standardizeApart(copyRPosLits, copyRNegLits,
_saIndexical);
Clause c = new Clause(copyRPosLits, copyRNegLits);
c.setProofStep(new ProofStepClauseBinaryResolvent(c,
pl, nl, this, othC, copyRBindings,
renameSubstitituon));
if (isImmutable()) {
c.setImmutable();
}
if (!isStandardizedApartCheckRequired()) {
c.setStandardizedApartCheckNotRequired();
}
resolvents.add(c);
}
}
}",0,0,0,1,0,0,0,0,0,26,5,42,0,1,0,0,4,1,0,0,3,0.57,0,0
277_36,36,75,"for (Literal nl : trNegLits) {
copyRBindings.clear();
if (null != _unifier.unify(pl.getAtomicSentence(),
nl.getAtomicSentence(), copyRBindings)) {
copyRPosLits.clear();
copyRNegLits.clear();
boolean found = false;
for (Literal l : allPosLits) {
if (!found && pl.equals(l)) {
found = true;
continue;
}
copyRPosLits.add(_substVisitor.subst(copyRBindings,
l));
}
found = false;
for (Literal l : allNegLits) {
if (!found && nl.equals(l)) {
found = true;
continue;
}
copyRNegLits.add(_substVisitor.subst(copyRBindings,
l));
}
Map<Variable, Term> renameSubstitituon = _standardizeApart
.standardizeApart(copyRPosLits, copyRNegLits,
_saIndexical);
Clause c = new Clause(copyRPosLits, copyRNegLits);
c.setProofStep(new ProofStepClauseBinaryResolvent(c,
pl, nl, this, othC, copyRBindings,
renameSubstitituon));
if (isImmutable()) {
c.setImmutable();
}
if (!isStandardizedApartCheckRequired()) {
c.setStandardizedApartCheckNotRequired();
}
resolvents.add(c);
}
}",0,0,0,1,0,0,0,0,0,25,4,40,0,0,0,0,4,1,0,0,3,0.57,0,0
277_37,37,37,copyRBindings.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,1,0,0,0,0.34,23,16
277_38,38,74,"if (null != _unifier.unify(pl.getAtomicSentence(),
nl.getAtomicSentence(), copyRBindings)) {
copyRPosLits.clear();
copyRNegLits.clear();
boolean found = false;
for (Literal l : allPosLits) {
if (!found && pl.equals(l)) {
found = true;
continue;
}
copyRPosLits.add(_substVisitor.subst(copyRBindings,
l));
}
found = false;
for (Literal l : allNegLits) {
if (!found && nl.equals(l)) {
found = true;
continue;
}
copyRNegLits.add(_substVisitor.subst(copyRBindings,
l));
}
Map<Variable, Term> renameSubstitituon = _standardizeApart
.standardizeApart(copyRPosLits, copyRNegLits,
_saIndexical);
Clause c = new Clause(copyRPosLits, copyRNegLits);
c.setProofStep(new ProofStepClauseBinaryResolvent(c,
pl, nl, this, othC, copyRBindings,
renameSubstitituon));
if (isImmutable()) {
c.setImmutable();
}
if (!isStandardizedApartCheckRequired()) {
c.setStandardizedApartCheckNotRequired();
}
resolvents.add(c);
}",1,0,0,0,0,0,0,0,0,23,3,37,1,1,0,0,4,1,0,0,3,0.57,0,0
277_39,39,39,"nl.getAtomicSentence(), copyRBindings)) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,0,0,0,0.38,21,14
277_40,40,40,copyRPosLits.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,1,0,0,0,0.29,20,13
277_41,41,41,copyRNegLits.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,1,0,0,0,0.33,19,12
277_42,42,42,boolean found = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,0,0,0,0.33,18,11
277_43,43,50,"for (Literal l : allPosLits) {
if (!found && pl.equals(l)) {
found = true;
continue;
}
copyRPosLits.add(_substVisitor.subst(copyRBindings,
l));
}",0,0,0,1,0,0,0,0,0,4,2,8,0,1,0,0,4,1,0,0,0,0.4,10,6
277_44,44,47,"if (!found && pl.equals(l)) {
found = true;
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,4,1,0,0,0,0.38,13,7
277_45,45,45,found = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,0,0,0,0.37,15,8
277_46,46,46,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,0,0,0,0.26,14,7
277_48,48,49,"copyRPosLits.add(_substVisitor.subst(copyRBindings,
l));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,1,0,0,0,0.33,11,6
277_51,51,51,found = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,0,0,0,0.33,9,5
277_52,52,59,"for (Literal l : allNegLits) {
if (!found && nl.equals(l)) {
found = true;
continue;
}
copyRNegLits.add(_substVisitor.subst(copyRBindings,
l));
}",0,0,0,1,0,0,0,0,0,4,2,8,0,1,0,0,4,1,0,0,0,0.42,1,0
277_53,53,56,"if (!found && nl.equals(l)) {
found = true;
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,4,1,0,0,0,0.38,4,1
277_54,54,54,found = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,0,0,0,0.37,6,2
277_55,55,55,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,0,0,0,0.26,5,1
277_57,57,58,"copyRNegLits.add(_substVisitor.subst(copyRBindings,
l));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,1,0,0,0,0.35,2,0
277_60,60,62,"Map<Variable, Term> renameSubstitituon = _standardizeApart
.standardizeApart(copyRPosLits, copyRNegLits,
_saIndexical);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,4,1,0,0,2,0.51,0,0
277_63,63,63,"Clause c = new Clause(copyRPosLits, copyRNegLits);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,0,0,0,0.31,3,1
277_64,64,66,"c.setProofStep(new ProofStepClauseBinaryResolvent(c,
pl, nl, this, othC, copyRBindings,
renameSubstitituon));",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,4,1,0,0,1,0.49,4,1
277_67,67,69,"if (isImmutable()) {
c.setImmutable();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,1,0,0,0,0.38,7,3
277_68,68,68,c.setImmutable();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,0,0,0,0.37,8,3
277_70,70,72,"if (!isStandardizedApartCheckRequired()) {
c.setStandardizedApartCheckNotRequired();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,1,0,0,2,0.48,10,5
277_71,71,71,c.setStandardizedApartCheckNotRequired();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,0,0,2,0.46,11,5
277_73,73,73,resolvents.add(c);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,0,0,1,0.53,13,7
277_79,79,79,return resolvents;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,1,0,0,1,0.58,19,8
276_1,1,1,public Set<Clause> binaryResolvents(Clause othC) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.56,26,19
276_2,2,2,Set<Clause> resolvents = new LinkedHashSet<Clause>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.52,25,18
276_3,3,6,"if (isEmpty() && othC.isEmpty()) {
resolvents.add(new Clause());
return resolvents;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,6,3,1,0,1,0.48,21,15
276_4,4,4,resolvents.add(new Clause());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.49,23,16
276_5,5,5,return resolvents;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.32,22,15
276_8,8,8,othC = saIfRequired(othC);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,1,0,0,0.35,19,14
276_10,10,10,List<Literal> allPosLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,3,1,0,0,0.44,17,13
276_11,11,11,List<Literal> allNegLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.52,16,12
276_12,12,12,allPosLits.addAll(this.positiveLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,1,0,1,0.57,15,11
276_13,13,13,allPosLits.addAll(othC.positiveLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,1,0,1,0.56,14,10
276_14,14,14,allNegLits.addAll(this.negativeLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,1,0,1,0.64,13,9
276_15,15,15,allNegLits.addAll(othC.negativeLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,6,3,1,0,1,0.61,12,8
276_17,17,17,List<Literal> trPosLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,3,1,0,0,0.44,10,7
276_18,18,18,List<Literal> trNegLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.52,9,6
276_19,19,19,List<Literal> copyRPosLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.43,8,5
276_20,20,20,List<Literal> copyRNegLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,3,1,0,1,0.51,7,4
276_22,22,77,"for (int i = 0; i < 2; i++) {
trPosLits.clear();
trNegLits.clear();

if (i == 0) {
trPosLits.addAll(this.positiveLiterals);
trNegLits.addAll(othC.negativeLiterals);
} else {
trPosLits.addAll(othC.positiveLiterals);
trNegLits.addAll(this.negativeLiterals);
}

Map<Variable, Term> copyRBindings = new LinkedHashMap<Variable, Term>();
for (Literal pl : trPosLits) {
for (Literal nl : trNegLits) {
copyRBindings.clear();
if (null != _unifier.unify(pl.getAtomicSentence(),
nl.getAtomicSentence(), copyRBindings)) {
copyRPosLits.clear();
copyRNegLits.clear();
boolean found = false;
for (Literal l : allPosLits) {
if (!found && pl.equals(l)) {
found = true;
continue;
}
copyRPosLits.add(_substVisitor.subst(copyRBindings,
l));
}
found = false;
for (Literal l : allNegLits) {
if (!found && nl.equals(l)) {
found = true;
continue;
}
copyRNegLits.add(_substVisitor.subst(copyRBindings,
l));
}
Map<Variable, Term> renameSubstitituon = _standardizeApart
.standardizeApart(copyRPosLits, copyRNegLits,
_saIndexical);
Clause c = new Clause(copyRPosLits, copyRNegLits);
c.setProofStep(new ProofStepClauseBinaryResolvent(c,
pl, nl, this, othC, copyRBindings,
renameSubstitituon));
if (isImmutable()) {
c.setImmutable();
}
if (!isStandardizedApartCheckRequired()) {
c.setStandardizedApartCheckNotRequired();
}
resolvents.add(c);
}
}
}
}",0,0,0,1,0,0,0,0,0,36,6,56,0,0,1,1,6,3,1,0,4,0.68,0,0
276_23,23,23,trPosLits.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,3,1,0,0,0.33,4,2
276_24,24,24,trNegLits.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,6,3,1,0,1,0.53,3,1
276_26,26,32,"if (i == 0) {
trPosLits.addAll(this.positiveLiterals);
trNegLits.addAll(othC.negativeLiterals);
} else {
trPosLits.addAll(othC.positiveLiterals);
trNegLits.addAll(this.negativeLiterals);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,1,1,6,3,1,0,2,0.62,0,0
276_27,27,27,trPosLits.addAll(this.positiveLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,3,1,0,1,0.56,0,0
276_28,28,28,trNegLits.addAll(othC.negativeLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,3,1,0,1,0.59,1,0
276_29,29,29,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.35,2,1
276_30,30,30,trPosLits.addAll(othC.positiveLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,3,1,0,1,0.55,3,2
276_31,31,31,trNegLits.addAll(this.negativeLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,3,1,0,1,0.62,4,3
276_34,34,34,"Map<Variable, Term> copyRBindings = new LinkedHashMap<Variable, Term>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,1,0,0,0.35,7,5
276_35,35,76,"for (Literal pl : trPosLits) {
for (Literal nl : trNegLits) {
copyRBindings.clear();
if (null != _unifier.unify(pl.getAtomicSentence(),
nl.getAtomicSentence(), copyRBindings)) {
copyRPosLits.clear();
copyRNegLits.clear();
boolean found = false;
for (Literal l : allPosLits) {
if (!found && pl.equals(l)) {
found = true;
continue;
}
copyRPosLits.add(_substVisitor.subst(copyRBindings,
l));
}
found = false;
for (Literal l : allNegLits) {
if (!found && nl.equals(l)) {
found = true;
continue;
}
copyRNegLits.add(_substVisitor.subst(copyRBindings,
l));
}
Map<Variable, Term> renameSubstitituon = _standardizeApart
.standardizeApart(copyRPosLits, copyRNegLits,
_saIndexical);
Clause c = new Clause(copyRPosLits, copyRNegLits);
c.setProofStep(new ProofStepClauseBinaryResolvent(c,
pl, nl, this, othC, copyRBindings,
renameSubstitituon));
if (isImmutable()) {
c.setImmutable();
}
if (!isStandardizedApartCheckRequired()) {
c.setStandardizedApartCheckNotRequired();
}
resolvents.add(c);
}
}
}",0,0,0,1,0,0,0,0,0,26,5,42,0,1,0,0,6,3,1,0,3,0.63,8,5
276_36,36,75,"for (Literal nl : trNegLits) {
copyRBindings.clear();
if (null != _unifier.unify(pl.getAtomicSentence(),
nl.getAtomicSentence(), copyRBindings)) {
copyRPosLits.clear();
copyRNegLits.clear();
boolean found = false;
for (Literal l : allPosLits) {
if (!found && pl.equals(l)) {
found = true;
continue;
}
copyRPosLits.add(_substVisitor.subst(copyRBindings,
l));
}
found = false;
for (Literal l : allNegLits) {
if (!found && nl.equals(l)) {
found = true;
continue;
}
copyRNegLits.add(_substVisitor.subst(copyRBindings,
l));
}
Map<Variable, Term> renameSubstitituon = _standardizeApart
.standardizeApart(copyRPosLits, copyRNegLits,
_saIndexical);
Clause c = new Clause(copyRPosLits, copyRNegLits);
c.setProofStep(new ProofStepClauseBinaryResolvent(c,
pl, nl, this, othC, copyRBindings,
renameSubstitituon));
if (isImmutable()) {
c.setImmutable();
}
if (!isStandardizedApartCheckRequired()) {
c.setStandardizedApartCheckNotRequired();
}
resolvents.add(c);
}
}",0,0,0,1,0,0,0,0,0,25,4,40,0,0,0,0,6,3,1,0,3,0.63,9,6
276_37,37,37,copyRBindings.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,1,0,0,0.27,10,7
276_38,38,74,"if (null != _unifier.unify(pl.getAtomicSentence(),
nl.getAtomicSentence(), copyRBindings)) {
copyRPosLits.clear();
copyRNegLits.clear();
boolean found = false;
for (Literal l : allPosLits) {
if (!found && pl.equals(l)) {
found = true;
continue;
}
copyRPosLits.add(_substVisitor.subst(copyRBindings,
l));
}
found = false;
for (Literal l : allNegLits) {
if (!found && nl.equals(l)) {
found = true;
continue;
}
copyRNegLits.add(_substVisitor.subst(copyRBindings,
l));
}
Map<Variable, Term> renameSubstitituon = _standardizeApart
.standardizeApart(copyRPosLits, copyRNegLits,
_saIndexical);
Clause c = new Clause(copyRPosLits, copyRNegLits);
c.setProofStep(new ProofStepClauseBinaryResolvent(c,
pl, nl, this, othC, copyRBindings,
renameSubstitituon));
if (isImmutable()) {
c.setImmutable();
}
if (!isStandardizedApartCheckRequired()) {
c.setStandardizedApartCheckNotRequired();
}
resolvents.add(c);
}",1,0,0,0,0,0,0,0,0,23,3,37,1,1,0,0,6,3,1,0,3,0.63,11,8
276_39,39,39,"nl.getAtomicSentence(), copyRBindings)) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.4,12,9
276_40,40,40,copyRPosLits.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,3,1,0,0,0.29,13,10
276_41,41,41,copyRNegLits.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,3,1,0,1,0.48,14,11
276_42,42,42,boolean found = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.33,15,12
276_43,43,50,"for (Literal l : allPosLits) {
if (!found && pl.equals(l)) {
found = true;
continue;
}
copyRPosLits.add(_substVisitor.subst(copyRBindings,
l));
}",0,0,0,1,0,0,0,0,0,4,2,8,0,1,0,0,6,3,1,0,0,0.46,16,13
276_44,44,47,"if (!found && pl.equals(l)) {
found = true;
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,6,3,1,0,0,0.39,17,14
276_45,45,45,found = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.33,18,15
276_46,46,46,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.27,19,16
276_48,48,49,"copyRPosLits.add(_substVisitor.subst(copyRBindings,
l));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,6,3,1,0,0,0.4,21,18
276_51,51,51,found = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.33,24,19
276_52,52,59,"for (Literal l : allNegLits) {
if (!found && nl.equals(l)) {
found = true;
continue;
}
copyRNegLits.add(_substVisitor.subst(copyRBindings,
l));
}",0,0,0,1,0,0,0,0,0,4,2,8,0,1,0,0,6,3,1,0,1,0.52,25,19
276_53,53,56,"if (!found && nl.equals(l)) {
found = true;
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,6,3,1,0,0,0.39,26,20
276_54,54,54,found = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.33,27,21
276_55,55,55,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.27,28,22
276_57,57,58,"copyRNegLits.add(_substVisitor.subst(copyRBindings,
l));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,6,3,1,0,1,0.47,30,24
276_60,60,62,"Map<Variable, Term> renameSubstitituon = _standardizeApart
.standardizeApart(copyRPosLits, copyRNegLits,
_saIndexical);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,6,3,1,0,1,0.47,33,25
276_63,63,63,"Clause c = new Clause(copyRPosLits, copyRNegLits);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,2,0.61,36,26
276_64,64,66,"c.setProofStep(new ProofStepClauseBinaryResolvent(c,
pl, nl, this, othC, copyRBindings,
renameSubstitituon));",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,6,3,1,0,1,0.5,37,26
276_67,67,69,"if (isImmutable()) {
c.setImmutable();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,1,0,0,0.46,40,28
276_68,68,68,c.setImmutable();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.43,41,28
276_70,70,72,"if (!isStandardizedApartCheckRequired()) {
c.setStandardizedApartCheckNotRequired();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,1,0,0,0.37,43,30
276_71,71,71,c.setStandardizedApartCheckNotRequired();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.37,44,30
276_73,73,73,resolvents.add(c);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.31,46,32
276_79,79,79,return resolvents;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,1,0,0,0.32,52,33
275_1,1,1,public Set<Clause> binaryResolvents(Clause othC) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,2,0.61,2,1
275_2,2,2,Set<Clause> resolvents = new LinkedHashSet<Clause>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,1,0,2,0.58,1,0
275_3,3,6,"if (isEmpty() && othC.isEmpty()) {
resolvents.add(new Clause());
return resolvents;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,7,5,1,0,3,0.78,0,0
275_4,4,4,resolvents.add(new Clause());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,2,0.63,1,0
275_5,5,5,return resolvents;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.54,2,1
275_8,8,8,othC = saIfRequired(othC);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,5,1,0,0,0.25,5,3
275_10,10,10,List<Literal> allPosLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,5,1,0,0,0.44,7,4
275_11,11,11,List<Literal> allNegLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.45,8,4
275_12,12,12,allPosLits.addAll(this.positiveLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,1,0,0,0.41,9,5
275_13,13,13,allPosLits.addAll(othC.positiveLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,1,0,0,0.4,10,6
275_14,14,14,allNegLits.addAll(this.negativeLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,1,0,0,0.43,11,7
275_15,15,15,allNegLits.addAll(othC.negativeLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,7,5,1,0,0,0.42,12,8
275_17,17,17,List<Literal> trPosLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,5,1,0,0,0.44,14,10
275_18,18,18,List<Literal> trNegLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.44,15,10
275_19,19,19,List<Literal> copyRPosLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.43,16,11
275_20,20,20,List<Literal> copyRNegLits = new ArrayList<Literal>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,5,1,0,0,0.43,17,12
275_22,22,77,"for (int i = 0; i < 2; i++) {
trPosLits.clear();
trNegLits.clear();

if (i == 0) {
trPosLits.addAll(this.positiveLiterals);
trNegLits.addAll(othC.negativeLiterals);
} else {
trPosLits.addAll(othC.positiveLiterals);
trNegLits.addAll(this.negativeLiterals);
}

Map<Variable, Term> copyRBindings = new LinkedHashMap<Variable, Term>();
for (Literal pl : trPosLits) {
for (Literal nl : trNegLits) {
copyRBindings.clear();
if (null != _unifier.unify(pl.getAtomicSentence(),
nl.getAtomicSentence(), copyRBindings)) {
copyRPosLits.clear();
copyRNegLits.clear();
boolean found = false;
for (Literal l : allPosLits) {
if (!found && pl.equals(l)) {
found = true;
continue;
}
copyRPosLits.add(_substVisitor.subst(copyRBindings,
l));
}
found = false;
for (Literal l : allNegLits) {
if (!found && nl.equals(l)) {
found = true;
continue;
}
copyRNegLits.add(_substVisitor.subst(copyRBindings,
l));
}
Map<Variable, Term> renameSubstitituon = _standardizeApart
.standardizeApart(copyRPosLits, copyRNegLits,
_saIndexical);
Clause c = new Clause(copyRPosLits, copyRNegLits);
c.setProofStep(new ProofStepClauseBinaryResolvent(c,
pl, nl, this, othC, copyRBindings,
renameSubstitituon));
if (isImmutable()) {
c.setImmutable();
}
if (!isStandardizedApartCheckRequired()) {
c.setStandardizedApartCheckNotRequired();
}
resolvents.add(c);
}
}
}
}",0,0,0,1,0,0,0,0,0,36,6,56,0,0,1,1,7,5,1,0,2,0.52,19,14
275_23,23,23,trPosLits.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,5,1,0,0,0.27,20,14
275_24,24,24,trNegLits.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,7,5,1,0,0,0.32,21,15
275_26,26,32,"if (i == 0) {
trPosLits.addAll(this.positiveLiterals);
trNegLits.addAll(othC.negativeLiterals);
} else {
trPosLits.addAll(othC.positiveLiterals);
trNegLits.addAll(this.negativeLiterals);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,1,1,7,5,1,0,0,0.41,23,17
275_27,27,27,trPosLits.addAll(this.positiveLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,5,1,0,0,0.41,24,17
275_28,28,28,trNegLits.addAll(othC.negativeLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,5,1,0,0,0.41,25,18
275_29,29,29,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.27,26,19
275_30,30,30,trPosLits.addAll(othC.positiveLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,5,1,0,0,0.4,27,20
275_31,31,31,trNegLits.addAll(this.negativeLiterals);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,5,1,0,0,0.42,28,21
275_34,34,34,"Map<Variable, Term> copyRBindings = new LinkedHashMap<Variable, Term>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,5,1,0,0,0.38,31,23
275_35,35,76,"for (Literal pl : trPosLits) {
for (Literal nl : trNegLits) {
copyRBindings.clear();
if (null != _unifier.unify(pl.getAtomicSentence(),
nl.getAtomicSentence(), copyRBindings)) {
copyRPosLits.clear();
copyRNegLits.clear();
boolean found = false;
for (Literal l : allPosLits) {
if (!found && pl.equals(l)) {
found = true;
continue;
}
copyRPosLits.add(_substVisitor.subst(copyRBindings,
l));
}
found = false;
for (Literal l : allNegLits) {
if (!found && nl.equals(l)) {
found = true;
continue;
}
copyRNegLits.add(_substVisitor.subst(copyRBindings,
l));
}
Map<Variable, Term> renameSubstitituon = _standardizeApart
.standardizeApart(copyRPosLits, copyRNegLits,
_saIndexical);
Clause c = new Clause(copyRPosLits, copyRNegLits);
c.setProofStep(new ProofStepClauseBinaryResolvent(c,
pl, nl, this, othC, copyRBindings,
renameSubstitituon));
if (isImmutable()) {
c.setImmutable();
}
if (!isStandardizedApartCheckRequired()) {
c.setStandardizedApartCheckNotRequired();
}
resolvents.add(c);
}
}
}",0,0,0,1,0,0,0,0,0,26,5,42,0,1,0,0,7,5,1,0,2,0.52,32,23
275_36,36,75,"for (Literal nl : trNegLits) {
copyRBindings.clear();
if (null != _unifier.unify(pl.getAtomicSentence(),
nl.getAtomicSentence(), copyRBindings)) {
copyRPosLits.clear();
copyRNegLits.clear();
boolean found = false;
for (Literal l : allPosLits) {
if (!found && pl.equals(l)) {
found = true;
continue;
}
copyRPosLits.add(_substVisitor.subst(copyRBindings,
l));
}
found = false;
for (Literal l : allNegLits) {
if (!found && nl.equals(l)) {
found = true;
continue;
}
copyRNegLits.add(_substVisitor.subst(copyRBindings,
l));
}
Map<Variable, Term> renameSubstitituon = _standardizeApart
.standardizeApart(copyRPosLits, copyRNegLits,
_saIndexical);
Clause c = new Clause(copyRPosLits, copyRNegLits);
c.setProofStep(new ProofStepClauseBinaryResolvent(c,
pl, nl, this, othC, copyRBindings,
renameSubstitituon));
if (isImmutable()) {
c.setImmutable();
}
if (!isStandardizedApartCheckRequired()) {
c.setStandardizedApartCheckNotRequired();
}
resolvents.add(c);
}
}",0,0,0,1,0,0,0,0,0,25,4,40,0,0,0,0,7,5,1,0,2,0.52,33,24
275_37,37,37,copyRBindings.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,1,0,0,0.26,34,25
275_38,38,74,"if (null != _unifier.unify(pl.getAtomicSentence(),
nl.getAtomicSentence(), copyRBindings)) {
copyRPosLits.clear();
copyRNegLits.clear();
boolean found = false;
for (Literal l : allPosLits) {
if (!found && pl.equals(l)) {
found = true;
continue;
}
copyRPosLits.add(_substVisitor.subst(copyRBindings,
l));
}
found = false;
for (Literal l : allNegLits) {
if (!found && nl.equals(l)) {
found = true;
continue;
}
copyRNegLits.add(_substVisitor.subst(copyRBindings,
l));
}
Map<Variable, Term> renameSubstitituon = _standardizeApart
.standardizeApart(copyRPosLits, copyRNegLits,
_saIndexical);
Clause c = new Clause(copyRPosLits, copyRNegLits);
c.setProofStep(new ProofStepClauseBinaryResolvent(c,
pl, nl, this, othC, copyRBindings,
renameSubstitituon));
if (isImmutable()) {
c.setImmutable();
}
if (!isStandardizedApartCheckRequired()) {
c.setStandardizedApartCheckNotRequired();
}
resolvents.add(c);
}",1,0,0,0,0,0,0,0,0,23,3,37,1,1,0,0,7,5,1,0,2,0.52,35,26
275_39,39,39,"nl.getAtomicSentence(), copyRBindings)) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.37,36,27
275_40,40,40,copyRPosLits.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,5,1,0,0,0.27,37,28
275_41,41,41,copyRNegLits.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,5,1,0,0,0.31,38,29
275_42,42,42,boolean found = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,1,0,0,0.32,39,30
275_43,43,50,"for (Literal l : allPosLits) {
if (!found && pl.equals(l)) {
found = true;
continue;
}
copyRPosLits.add(_substVisitor.subst(copyRBindings,
l));
}",0,0,0,1,0,0,0,0,0,4,2,8,0,1,0,0,7,5,1,0,0,0.4,40,31
275_44,44,47,"if (!found && pl.equals(l)) {
found = true;
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,7,5,1,0,0,0.35,41,32
275_45,45,45,found = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.34,42,33
275_46,46,46,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.25,43,34
275_48,48,49,"copyRPosLits.add(_substVisitor.subst(copyRBindings,
l));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,7,5,1,0,0,0.32,45,36
275_51,51,51,found = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,0,0.33,48,37
275_52,52,59,"for (Literal l : allNegLits) {
if (!found && nl.equals(l)) {
found = true;
continue;
}
copyRNegLits.add(_substVisitor.subst(copyRBindings,
l));
}",0,0,0,1,0,0,0,0,0,4,2,8,0,1,0,0,7,5,1,0,0,0.41,49,37
275_53,53,56,"if (!found && nl.equals(l)) {
found = true;
continue;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,7,5,1,0,0,0.35,50,38
275_54,54,54,found = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.34,51,39
275_55,55,55,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.25,52,40
275_57,57,58,"copyRNegLits.add(_substVisitor.subst(copyRBindings,
l));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,7,5,1,0,0,0.33,54,42
275_60,60,62,"Map<Variable, Term> renameSubstitituon = _standardizeApart
.standardizeApart(copyRPosLits, copyRNegLits,
_saIndexical);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,7,5,1,0,0,0.39,57,43
275_63,63,63,"Clause c = new Clause(copyRPosLits, copyRNegLits);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.49,60,44
275_64,64,66,"c.setProofStep(new ProofStepClauseBinaryResolvent(c,
pl, nl, this, othC, copyRBindings,
renameSubstitituon));",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,7,5,1,0,2,0.52,61,44
275_67,67,69,"if (isImmutable()) {
c.setImmutable();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,5,1,0,0,0.37,64,46
275_68,68,68,c.setImmutable();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.34,65,46
275_70,70,72,"if (!isStandardizedApartCheckRequired()) {
c.setStandardizedApartCheckNotRequired();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,5,1,0,0,0.29,67,48
275_71,71,71,c.setStandardizedApartCheckNotRequired();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.29,68,48
275_73,73,73,resolvents.add(c);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.46,70,50
275_79,79,79,return resolvents;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,5,1,0,1,0.54,76,51
274_1,1,1,	public boolean subsumes(Clause othC) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,2,0,1,0.51,14,9
274_2,2,2,boolean subsumes = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,6,2,0,0,0.25,13,8
274_4,4,26,"if (!(this == othC)) {
if (this.getNumberLiterals() < othC.getNumberLiterals()
&& this.getNumberPositiveLiterals() <= othC
.getNumberPositiveLiterals()
&& this.getNumberNegativeLiterals() <= othC
.getNumberNegativeLiterals()) {

Map<String, List<Literal>> thisToTry = collectLikeLiterals(this.literals);
Map<String, List<Literal>> othCToTry = collectLikeLiterals(othC.literals);
if (othCToTry.keySet().containsAll(thisToTry.keySet())) {
boolean isAPossSubset = true;
for (String pk : thisToTry.keySet()) {
if (thisToTry.get(pk).size() > othCToTry.get(pk).size()) {
isAPossSubset = false;
break;
}
}
if (isAPossSubset) {
subsumes = checkSubsumes(othC, thisToTry, othCToTry);
}
}
}
}",1,0,0,0,0,0,0,0,0,13,5,23,0,0,1,1,9,6,2,0,3,0.63,0,0
274_5,5,25,"if (this.getNumberLiterals() < othC.getNumberLiterals()
&& this.getNumberPositiveLiterals() <= othC
.getNumberPositiveLiterals()
&& this.getNumberNegativeLiterals() <= othC
.getNumberNegativeLiterals()) {

Map<String, List<Literal>> thisToTry = collectLikeLiterals(this.literals);
Map<String, List<Literal>> othCToTry = collectLikeLiterals(othC.literals);
if (othCToTry.keySet().containsAll(thisToTry.keySet())) {
boolean isAPossSubset = true;
for (String pk : thisToTry.keySet()) {
if (thisToTry.get(pk).size() > othCToTry.get(pk).size()) {
isAPossSubset = false;
break;
}
}
if (isAPossSubset) {
subsumes = checkSubsumes(othC, thisToTry, othCToTry);
}
}
}",1,0,0,0,0,0,0,0,0,12,4,21,0,0,0,0,9,6,2,0,3,0.63,0,0
274_6,6,7,"&& this.getNumberPositiveLiterals() <= othC
.getNumberPositiveLiterals()",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,6,2,0,1,0.52,8,5
274_8,8,9,"&& this.getNumberNegativeLiterals() <= othC
.getNumberNegativeLiterals()) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,6,2,0,1,0.56,6,4
274_11,11,11,"Map<String, List<Literal>> thisToTry = collectLikeLiterals(this.literals);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,9,6,2,0,1,0.62,4,3
274_12,12,12,"Map<String, List<Literal>> othCToTry = collectLikeLiterals(othC.literals);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,9,6,2,0,1,0.6,3,2
274_13,13,24,"if (othCToTry.keySet().containsAll(thisToTry.keySet())) {
boolean isAPossSubset = true;
for (String pk : thisToTry.keySet()) {
if (thisToTry.get(pk).size() > othCToTry.get(pk).size()) {
isAPossSubset = false;
break;
}
}
if (isAPossSubset) {
subsumes = checkSubsumes(othC, thisToTry, othCToTry);
}
}",1,0,0,0,0,0,0,0,0,7,3,12,0,1,0,0,9,6,2,0,2,0.52,0,0
274_14,14,14,boolean isAPossSubset = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,6,2,0,1,0.46,1,0
274_15,15,20,"for (String pk : thisToTry.keySet()) {
if (thisToTry.get(pk).size() > othCToTry.get(pk).size()) {
isAPossSubset = false;
break;
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,0,9,6,2,0,2,0.5,0,0
274_16,16,19,"if (thisToTry.get(pk).size() > othCToTry.get(pk).size()) {
isAPossSubset = false;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,9,6,2,0,1,0.42,1,0
274_17,17,17,isAPossSubset = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,2,0,1,0.48,2,1
274_18,18,18,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,9,6,2,0,0,0.28,3,2
274_21,21,23,"if (isAPossSubset) {
subsumes = checkSubsumes(othC, thisToTry, othCToTry);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,9,6,2,0,1,0.44,6,4
274_22,22,22,"subsumes = checkSubsumes(othC, thisToTry, othCToTry);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,2,0,0,0.32,7,4
274_28,28,28,return subsumes;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,9,6,2,0,0,0.27,13,6
273_1,1,1,	public boolean subsumes(Clause othC) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.59,12,7
273_2,2,2,boolean subsumes = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,5,0,0,0,0.26,11,6
273_4,4,26,"if (!(this == othC)) {
if (this.getNumberLiterals() < othC.getNumberLiterals()
&& this.getNumberPositiveLiterals() <= othC
.getNumberPositiveLiterals()
&& this.getNumberNegativeLiterals() <= othC
.getNumberNegativeLiterals()) {

Map<String, List<Literal>> thisToTry = collectLikeLiterals(this.literals);
Map<String, List<Literal>> othCToTry = collectLikeLiterals(othC.literals);
if (othCToTry.keySet().containsAll(thisToTry.keySet())) {
boolean isAPossSubset = true;
for (String pk : thisToTry.keySet()) {
if (thisToTry.get(pk).size() > othCToTry.get(pk).size()) {
isAPossSubset = false;
break;
}
}
if (isAPossSubset) {
subsumes = checkSubsumes(othC, thisToTry, othCToTry);
}
}
}
}",1,0,0,0,0,0,0,0,0,13,5,23,0,0,1,1,6,5,0,0,3,0.65,0,0
273_5,5,25,"if (this.getNumberLiterals() < othC.getNumberLiterals()
&& this.getNumberPositiveLiterals() <= othC
.getNumberPositiveLiterals()
&& this.getNumberNegativeLiterals() <= othC
.getNumberNegativeLiterals()) {

Map<String, List<Literal>> thisToTry = collectLikeLiterals(this.literals);
Map<String, List<Literal>> othCToTry = collectLikeLiterals(othC.literals);
if (othCToTry.keySet().containsAll(thisToTry.keySet())) {
boolean isAPossSubset = true;
for (String pk : thisToTry.keySet()) {
if (thisToTry.get(pk).size() > othCToTry.get(pk).size()) {
isAPossSubset = false;
break;
}
}
if (isAPossSubset) {
subsumes = checkSubsumes(othC, thisToTry, othCToTry);
}
}
}",1,0,0,0,0,0,0,0,0,12,4,21,0,0,0,0,6,5,0,0,3,0.65,0,0
273_6,6,7,"&& this.getNumberPositiveLiterals() <= othC
.getNumberPositiveLiterals()",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,0,0,1,0.52,6,3
273_8,8,9,"&& this.getNumberNegativeLiterals() <= othC
.getNumberNegativeLiterals()) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,0,0,1,0.57,4,2
273_11,11,11,"Map<String, List<Literal>> thisToTry = collectLikeLiterals(this.literals);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,6,5,0,0,2,0.68,2,1
273_12,12,12,"Map<String, List<Literal>> othCToTry = collectLikeLiterals(othC.literals);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,5,0,0,2,0.66,1,0
273_13,13,24,"if (othCToTry.keySet().containsAll(thisToTry.keySet())) {
boolean isAPossSubset = true;
for (String pk : thisToTry.keySet()) {
if (thisToTry.get(pk).size() > othCToTry.get(pk).size()) {
isAPossSubset = false;
break;
}
}
if (isAPossSubset) {
subsumes = checkSubsumes(othC, thisToTry, othCToTry);
}
}",1,0,0,0,0,0,0,0,0,7,3,12,0,1,0,0,6,5,0,0,1,0.47,0,0
273_14,14,14,boolean isAPossSubset = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.49,1,0
273_15,15,20,"for (String pk : thisToTry.keySet()) {
if (thisToTry.get(pk).size() > othCToTry.get(pk).size()) {
isAPossSubset = false;
break;
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,0,6,5,0,0,1,0.46,2,1
273_16,16,19,"if (thisToTry.get(pk).size() > othCToTry.get(pk).size()) {
isAPossSubset = false;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,6,5,0,0,1,0.45,3,2
273_17,17,17,isAPossSubset = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.51,4,3
273_18,18,18,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,5,0,0,0,0.38,5,4
273_21,21,23,"if (isAPossSubset) {
subsumes = checkSubsumes(othC, thisToTry, othCToTry);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,5,0,0,1,0.46,8,6
273_22,22,22,"subsumes = checkSubsumes(othC, thisToTry, othCToTry);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.34,9,6
273_28,28,28,return subsumes;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,5,0,0,0,0.28,15,8
272_1,1,1,	public boolean subsumes(Clause othC) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,1,0.51,4,2
272_2,2,2,boolean subsumes = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,5,0,0,0,0.27,3,1
272_4,4,26,"if (!(this == othC)) {
if (this.getNumberLiterals() < othC.getNumberLiterals()
&& this.getNumberPositiveLiterals() <= othC
.getNumberPositiveLiterals()
&& this.getNumberNegativeLiterals() <= othC
.getNumberNegativeLiterals()) {

Map<String, List<Literal>> thisToTry = collectLikeLiterals(this.literals);
Map<String, List<Literal>> othCToTry = collectLikeLiterals(othC.literals);
if (othCToTry.keySet().containsAll(thisToTry.keySet())) {
boolean isAPossSubset = true;
for (String pk : thisToTry.keySet()) {
if (thisToTry.get(pk).size() > othCToTry.get(pk).size()) {
isAPossSubset = false;
break;
}
}
if (isAPossSubset) {
subsumes = checkSubsumes(othC, thisToTry, othCToTry);
}
}
}
}",1,0,0,0,0,0,0,0,0,13,5,23,0,0,1,1,9,5,0,0,4,0.64,0,0
272_5,5,25,"if (this.getNumberLiterals() < othC.getNumberLiterals()
&& this.getNumberPositiveLiterals() <= othC
.getNumberPositiveLiterals()
&& this.getNumberNegativeLiterals() <= othC
.getNumberNegativeLiterals()) {

Map<String, List<Literal>> thisToTry = collectLikeLiterals(this.literals);
Map<String, List<Literal>> othCToTry = collectLikeLiterals(othC.literals);
if (othCToTry.keySet().containsAll(thisToTry.keySet())) {
boolean isAPossSubset = true;
for (String pk : thisToTry.keySet()) {
if (thisToTry.get(pk).size() > othCToTry.get(pk).size()) {
isAPossSubset = false;
break;
}
}
if (isAPossSubset) {
subsumes = checkSubsumes(othC, thisToTry, othCToTry);
}
}
}",1,0,0,0,0,0,0,0,0,12,4,21,0,0,0,0,9,5,0,0,4,0.64,0,0
272_6,6,7,"&& this.getNumberPositiveLiterals() <= othC
.getNumberPositiveLiterals()",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,0,0,2,0.62,1,0
272_8,8,9,"&& this.getNumberNegativeLiterals() <= othC
.getNumberNegativeLiterals()) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,0,0,2,0.61,3,2
272_11,11,11,"Map<String, List<Literal>> thisToTry = collectLikeLiterals(this.literals);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,9,5,0,0,1,0.57,6,3
272_12,12,12,"Map<String, List<Literal>> othCToTry = collectLikeLiterals(othC.literals);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,9,5,0,0,1,0.55,7,3
272_13,13,24,"if (othCToTry.keySet().containsAll(thisToTry.keySet())) {
boolean isAPossSubset = true;
for (String pk : thisToTry.keySet()) {
if (thisToTry.get(pk).size() > othCToTry.get(pk).size()) {
isAPossSubset = false;
break;
}
}
if (isAPossSubset) {
subsumes = checkSubsumes(othC, thisToTry, othCToTry);
}
}",1,0,0,0,0,0,0,0,0,7,3,12,0,1,0,0,9,5,0,0,1,0.5,8,4
272_14,14,14,boolean isAPossSubset = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,0,0,1,0.54,9,5
272_15,15,20,"for (String pk : thisToTry.keySet()) {
if (thisToTry.get(pk).size() > othCToTry.get(pk).size()) {
isAPossSubset = false;
break;
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,0,9,5,0,0,1,0.5,10,6
272_16,16,19,"if (thisToTry.get(pk).size() > othCToTry.get(pk).size()) {
isAPossSubset = false;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,9,5,0,0,1,0.5,11,7
272_17,17,17,isAPossSubset = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,1,0.57,12,8
272_18,18,18,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,9,5,0,0,0,0.43,13,9
272_21,21,23,"if (isAPossSubset) {
subsumes = checkSubsumes(othC, thisToTry, othCToTry);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,9,5,0,0,1,0.5,16,11
272_22,22,22,"subsumes = checkSubsumes(othC, thisToTry, othCToTry);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.33,17,11
272_28,28,28,return subsumes;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,9,5,0,0,0,0.3,23,13
271_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,0,0,0,0.32,14,10
271_2,2,2,InputStream is = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.34,13,9
271_3,3,3,FileOutputStream fos = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,3,0,0,1,0.56,12,8
271_5,5,5,"String tempDir = System.getProperty(""java.io.tmpdir"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,0,0,0,0.38,10,7
271_6,6,6,"File outputFile = new File(tempDir, localFilename);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,5,3,0,0,2,0.66,9,6
271_8,8,30,"try {
URLConnection urlConn = url.openConnection();
is = urlConn.getInputStream();
fos = new FileOutputStream(outputFile);

byte[] buffer = new byte[HiCGlobals.bufferSize];
int length;

while ((length = is.read(buffer)) > 0) {
fos.write(buffer, 0, length);
}
return outputFile.getAbsolutePath();
} finally {
try {
if (is != null) {
is.close();
}
} finally {
if (fos != null) {
fos.close();
}
}
}",0,0,0,0,1,0,0,0,0,15,3,23,0,0,1,0,5,3,0,0,3,0.58,0,0
271_9,9,9,URLConnection urlConn = url.openConnection();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.33,6,4
271_10,10,10,is = urlConn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.33,5,3
271_11,11,11,fos = new FileOutputStream(outputFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,0,0,1,0.57,4,2
271_13,13,13,byte[] buffer = new byte[HiCGlobals.bufferSize];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,3,0,0,0,0.34,2,1
271_14,14,14,int length;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,3,0,0,0,0.24,1,0
271_16,16,18,"while ((length = is.read(buffer)) > 0) {
fos.write(buffer, 0, length);
}",0,1,0,0,0,0,0,0,0,1,1,3,0,0,1,0,5,3,0,0,2,0.57,0,0
271_17,17,17,"fos.write(buffer, 0, length);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.51,1,0
271_19,19,19,return outputFile.getAbsolutePath();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.46,3,2
271_20,20,20,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.28,4,2
271_21,21,29,"try {
if (is != null) {
is.close();
}
} finally {
if (fos != null) {
fos.close();
}
}",0,0,0,0,1,0,0,0,0,5,2,9,0,0,0,0,5,3,0,0,0,0.42,5,3
271_22,22,24,"if (is != null) {
is.close();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,3,0,0,0,0.24,6,4
271_23,23,23,is.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.18,7,5
271_25,25,25,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.28,9,7
271_26,26,28,"if (fos != null) {
fos.close();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,3,0,0,0,0.47,10,7
271_27,27,27,fos.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.44,11,8
270_1,1,3,"private static GenomeWideList<MotifAnchor> loadGlobalMotifs(String path, String genomeID,
FeatureFilter<MotifAnchor> anchorFilter,
MotifLocation motifLocation) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,7,7,0,0,1,0.45,5,4
270_4,4,4,InputStream is = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,7,0,0,2,0.65,4,3
270_5,5,5,BufferedReader reader = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.36,3,2
270_6,6,6,GenomeWideList<MotifAnchor> newAnchorList;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,7,0,0,0,0.4,2,1
270_8,8,36,"try {
is = ParsingUtils.openInputStream(extractProperMotifFilePath(genomeID, path, motifLocation));
reader = new BufferedReader(new InputStreamReader(is), HiCGlobals.bufferSize);
} catch (Exception e) {
System.err.println(""Unable to create input stream for global motifs "" + motifLocation);
System.exit(49);
} finally {
ChromosomeHandler handler = HiCFileTools.loadChromosomes(genomeID);

Set<MotifAnchor> anchors = new HashSet<>();

try {
if (reader != null) {
anchors.addAll(parseGlobalMotifFile(reader, handler));
}
} catch (Exception e3) {
System.err.println(""Unable to parse motif file"");
System.exit(50);
}

if (is != null) {
try {
is.close();
} catch (Exception e4) {
System.err.println(""Error closing file stream for motif file"");
}
}
newAnchorList = new GenomeWideList<>(handler, new ArrayList<>(anchors));
}",0,0,0,0,1,0,0,0,0,20,3,29,0,0,1,1,7,7,0,0,5,0.67,0,0
270_9,9,9,"is = ParsingUtils.openInputStream(extractProperMotifFilePath(genomeID, path, motifLocation));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,4,0.67,0,0
270_10,10,10,"reader = new BufferedReader(new InputStreamReader(is), HiCGlobals.bufferSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,2,0.53,1,0
270_11,11,11,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.37,2,1
270_12,12,12,"System.err.println(""Unable to create input stream for global motifs "" + motifLocation);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,4,0.71,3,2
270_13,13,13,System.exit(49);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.28,4,3
270_14,14,14,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.29,5,4
270_15,15,15,ChromosomeHandler handler = HiCFileTools.loadChromosomes(genomeID);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,7,0,0,1,0.42,6,5
270_17,17,17,Set<MotifAnchor> anchors = new HashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,7,0,0,0,0.41,8,7
270_19,19,26,"try {
if (reader != null) {
anchors.addAll(parseGlobalMotifFile(reader, handler));
}
} catch (Exception e3) {
System.err.println(""Unable to parse motif file"");
System.exit(50);
}",0,0,0,0,1,0,0,0,0,5,2,8,0,0,1,1,7,7,0,0,1,0.47,10,8
270_20,20,22,"if (reader != null) {
anchors.addAll(parseGlobalMotifFile(reader, handler));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,7,0,0,1,0.45,11,8
270_21,21,21,"anchors.addAll(parseGlobalMotifFile(reader, handler));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.45,12,9
270_23,23,23,} catch (Exception e3) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.37,14,11
270_24,24,24,"System.err.println(""Unable to parse motif file"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.5,15,11
270_25,25,25,System.exit(50);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.28,16,12
270_28,28,34,"if (is != null) {
try {
is.close();
} catch (Exception e4) {
System.err.println(""Error closing file stream for motif file"");
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,7,7,0,0,2,0.53,19,14
270_29,29,33,"try {
is.close();
} catch (Exception e4) {
System.err.println(""Error closing file stream for motif file"");
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,7,7,0,0,2,0.54,20,14
270_30,30,30,is.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.31,21,15
270_31,31,31,} catch (Exception e4) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.37,22,16
270_32,32,32,"System.err.println(""Error closing file stream for motif file"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,2,0.57,23,17
270_35,35,35,"newAnchorList = new GenomeWideList<>(handler, new ArrayList<>(anchors));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.42,26,19
270_38,38,39,"if (anchorFilter != null)
newAnchorList.filterLists(anchorFilter);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,7,7,0,0,0,0.38,29,20
270_39,39,39,newAnchorList.filterLists(anchorFilter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,7,0,0,0,0.38,30,20
270_41,41,41,return newAnchorList;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,7,0,0,0,0.41,32,22
267_1,1,1,    public boolean getTagToggle(String tag) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,0,1,1,0,0.35,3,2
267_2,2,2,"Set<String> toggledTags = settings.getStringSet(getResString(R.string.settings_key_tags_toggles), Collections.emptySet());",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,0,1,1,2,0.59,2,1
267_4,4,4,assert toggledTags != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,0,1,1,0,0.37,0,0
267_6,6,6,return !toggledTags.contains(tag);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,0,1,1,0,0.38,1,0
266_1,1,1,    public boolean getTagToggle(String tag) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,2,0.63,0,0
266_2,2,2,"Set<String> toggledTags = settings.getStringSet(getResString(R.string.settings_key_tags_toggles), Collections.emptySet());",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,6,1,0,2,0.56,0,0
266_4,4,4,assert toggledTags != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,8,6,1,0,2,0.66,2,1
266_6,6,6,return !toggledTags.contains(tag);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,8,6,1,0,2,0.7,4,2
265_1,1,1,    public List<Constants.SearchIncludes> getSearchValues() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,0,1,1,0,0.37,5,3
265_2,2,2,"Set<String> stringValues = settings.getStringSet(getResString(R.string.settings_key_search_includes), new HashSet<>(Arrays.asList(context.getResources().getStringArray(R.array.settings_defaults_search_includes))));",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,0,1,1,1,0.48,4,2
265_4,4,4,List<Constants.SearchIncludes> values = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,0,1,1,0,0.35,2,1
265_6,6,6,assert stringValues != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,0,1,1,0,0.33,0,0
265_8,8,10,"for (String value : stringValues) {
values.add(Constants.SearchIncludes.valueOf(value.toUpperCase(Locale.ENGLISH)));
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,1,1,5,0,1,1,0,0.37,1,0
265_9,9,9,values.add(Constants.SearchIncludes.valueOf(value.toUpperCase(Locale.ENGLISH)));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,0,1,1,0,0.37,2,0
265_12,12,12,return values;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,0,1,1,0,0.34,5,2
264_1,1,1,    public int getTheme() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.32,13,9
264_2,2,2,int theme = R.style.AppTheme_NoActionBar;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.41,12,8
264_3,3,3,"String themeMode = getString(R.string.settings_key_theme_mode, R.string.settings_default_theme_mode);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,0,0,2,0.64,11,7
264_5,5,35,"if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q && themeMode.equals(""auto"")){
boolean blackTheme = getBoolean(R.string.settings_key_theme_black_auto, false);

switch (context.getResources().getConfiguration().uiMode & Configuration.UI_MODE_NIGHT_MASK) {
case Configuration.UI_MODE_NIGHT_YES:
if (blackTheme)
theme = R.style.AppTheme_Black_NoActionBar;
else
theme = R.style.AppTheme_Dark_NoActionBar;
break;
case Configuration.UI_MODE_NIGHT_NO:
case Configuration.UI_MODE_NIGHT_UNDEFINED:
default:
theme = R.style.AppTheme_NoActionBar;
break;
}
} else {
String themeName = getString(R.string.settings_key_theme, R.string.settings_default_theme);

switch (themeName) {
case ""light"":
theme = R.style.AppTheme_NoActionBar;
break;
case ""dark"":
theme = R.style.AppTheme_Dark_NoActionBar;
break;
case ""black"":
theme = R.style.AppTheme_Black_NoActionBar;
break;
}
}",1,0,0,0,0,0,0,0,0,17,2,31,0,0,1,1,6,4,0,0,4,0.71,0,0
264_6,6,6,"boolean blackTheme = getBoolean(R.string.settings_key_theme_black_auto, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,0,0,0,0.43,8,5
264_8,8,8,switch (context.getResources().getConfiguration().uiMode & Configuration.UI_MODE_NIGHT_MASK) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,0,0,1,0.57,6,4
264_9,9,10,"case Configuration.UI_MODE_NIGHT_YES:
if (blackTheme)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,0,0,1,0.64,4,3
264_11,11,11,theme = R.style.AppTheme_Black_NoActionBar;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.45,3,2
264_12,12,13,"else
theme = R.style.AppTheme_Dark_NoActionBar;",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,6,4,0,0,0,0.39,1,1
264_14,14,14,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,4,0,0,0,0.29,0,0
264_15,15,18,"case Configuration.UI_MODE_NIGHT_NO:
case Configuration.UI_MODE_NIGHT_UNDEFINED:
default:
theme = R.style.AppTheme_NoActionBar;",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,6,4,0,0,3,0.72,0,0
264_19,19,19,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,4,0,0,0,0.29,4,1
264_21,21,21,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.21,6,2
264_22,22,22,"String themeName = getString(R.string.settings_key_theme, R.string.settings_default_theme);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,0,0,1,0.4,7,2
264_24,24,24,switch (themeName) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,0,0,0,0.37,9,4
264_25,25,26,"case ""light"":
theme = R.style.AppTheme_NoActionBar;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,0,0,1,0.47,10,4
264_27,27,27,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,4,0,0,0,0.29,12,6
264_28,28,29,"case ""dark"":
theme = R.style.AppTheme_Dark_NoActionBar;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,0,0,0,0.4,13,6
264_30,30,30,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,4,0,0,0,0.29,15,8
264_31,31,32,"case ""black"":
theme = R.style.AppTheme_Black_NoActionBar;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,0,0,0,0.46,16,8
264_33,33,33,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,4,0,0,0,0.29,18,10
264_37,37,37,return theme;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,4,0,0,0,0.3,22,11
263_1,1,1,    public int getTheme() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.14,7,5
263_2,2,2,int theme = R.style.AppTheme_NoActionBar;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.3,6,4
263_3,3,3,"String themeMode = getString(R.string.settings_key_theme_mode, R.string.settings_default_theme_mode);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,1,0,0,1,0.66,5,3
263_5,5,35,"if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q && themeMode.equals(""auto"")){
boolean blackTheme = getBoolean(R.string.settings_key_theme_black_auto, false);

switch (context.getResources().getConfiguration().uiMode & Configuration.UI_MODE_NIGHT_MASK) {
case Configuration.UI_MODE_NIGHT_YES:
if (blackTheme)
theme = R.style.AppTheme_Black_NoActionBar;
else
theme = R.style.AppTheme_Dark_NoActionBar;
break;
case Configuration.UI_MODE_NIGHT_NO:
case Configuration.UI_MODE_NIGHT_UNDEFINED:
default:
theme = R.style.AppTheme_NoActionBar;
break;
}
} else {
String themeName = getString(R.string.settings_key_theme, R.string.settings_default_theme);

switch (themeName) {
case ""light"":
theme = R.style.AppTheme_NoActionBar;
break;
case ""dark"":
theme = R.style.AppTheme_Dark_NoActionBar;
break;
case ""black"":
theme = R.style.AppTheme_Black_NoActionBar;
break;
}
}",1,0,0,0,0,0,0,0,0,17,2,31,0,0,1,1,2,1,0,0,2,0.62,0,0
263_6,6,6,"boolean blackTheme = getBoolean(R.string.settings_key_theme_black_auto, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,1,0,0,0,0.33,2,1
263_8,8,8,switch (context.getResources().getConfiguration().uiMode & Configuration.UI_MODE_NIGHT_MASK) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,1,0,0,1,0.66,0,0
263_9,9,10,"case Configuration.UI_MODE_NIGHT_YES:
if (blackTheme)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,1,0.68,0,0
263_11,11,11,theme = R.style.AppTheme_Black_NoActionBar;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.33,2,1
263_12,12,13,"else
theme = R.style.AppTheme_Dark_NoActionBar;",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,2,1,0,0,1,0.31,3,1
263_14,14,14,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,1,0,0,0,0.23,5,3
263_15,15,18,"case Configuration.UI_MODE_NIGHT_NO:
case Configuration.UI_MODE_NIGHT_UNDEFINED:
default:
theme = R.style.AppTheme_NoActionBar;",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,2,1,0,0,1,0.64,6,3
263_19,19,19,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,1,0,0,0,0.23,10,5
263_21,21,21,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.24,12,6
263_22,22,22,"String themeName = getString(R.string.settings_key_theme, R.string.settings_default_theme);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,1,0,0,0,0.22,13,6
263_24,24,24,switch (themeName) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,1,0,0,0,0.3,15,8
263_25,25,26,"case ""light"":
theme = R.style.AppTheme_NoActionBar;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,0,0.3,16,8
263_27,27,27,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,1,0,0,0,0.23,18,10
263_28,28,29,"case ""dark"":
theme = R.style.AppTheme_Dark_NoActionBar;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,1,0.3,19,10
263_30,30,30,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,1,0,0,0,0.23,21,12
263_31,31,32,"case ""black"":
theme = R.style.AppTheme_Black_NoActionBar;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,0,0.33,22,12
263_33,33,33,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,1,0,0,0,0.23,24,14
263_37,37,37,return theme;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,1,0,0,0,0.09,28,15
259_1,1,1,"static Bitmap generateBitmap(Context context, Bitmap bm, int width, int height) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.5,27,19
259_2,2,4,"if (bm == null) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,3,1,0,0,0.35,24,17
259_3,3,3,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.21,25,17
259_6,6,6,WindowManager wm = (WindowManager)context.getSystemService(Context.WINDOW_SERVICE);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,3,1,0,0,0.36,22,16
259_7,7,7,DisplayMetrics metrics = new DisplayMetrics();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.33,21,15
259_8,8,8,wm.getDefaultDisplay().getMetrics(metrics);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.4,20,14
259_9,9,9,bm.setDensity(metrics.noncompatDensityDpi);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,1,0,0,0.49,19,13
259_11,11,14,"if (width <= 0 || height <= 0
|| (bm.getWidth() == width && bm.getHeight() == height)) {
return bm;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,5,3,1,0,0,0.51,14,10
259_12,12,12,|| (bm.getWidth() == width && bm.getHeight() == height)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.51,16,11
259_13,13,13,return bm;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.41,15,10
259_16,16,54,"try {
Bitmap newbm = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);
newbm.setDensity(metrics.noncompatDensityDpi);

Canvas c = new Canvas(newbm);
Rect targetRect = new Rect();
targetRect.right = bm.getWidth();
targetRect.bottom = bm.getHeight();

int deltaw = width - targetRect.right;
int deltah = height - targetRect.bottom;

if (deltaw > 0 || deltah > 0) {
float scale;
if (deltaw > deltah) {
scale = width / (float)targetRect.right;
} else {
scale = height / (float)targetRect.bottom;
}
targetRect.right = (int)(targetRect.right*scale);
targetRect.bottom = (int)(targetRect.bottom*scale);
deltaw = width - targetRect.right;
deltah = height - targetRect.bottom;
}

targetRect.offset(deltaw/2, deltah/2);

Paint paint = new Paint();
paint.setFilterBitmap(true);
paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC));
c.drawBitmap(bm, null, targetRect, paint);

bm.recycle();
c.setBitmap(null);
return newbm;
} catch (OutOfMemoryError e) {
Log.w(TAG, ""Can't generate default bitmap"", e);
return bm;
}",0,0,0,0,1,0,0,0,0,29,3,39,0,0,1,0,5,3,1,0,1,0.57,0,0
259_17,17,17,"Bitmap newbm = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.55,11,8
259_18,18,18,newbm.setDensity(metrics.noncompatDensityDpi);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,1,0,0,0.47,10,7
259_20,20,20,Canvas c = new Canvas(newbm);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,3,1,0,0,0.48,8,6
259_21,21,21,Rect targetRect = new Rect();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.52,7,5
259_22,22,22,targetRect.right = bm.getWidth();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.5,6,4
259_23,23,23,targetRect.bottom = bm.getHeight();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,1,0,0,0.52,5,3
259_25,25,25,int deltaw = width - targetRect.right;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,1,0,0,0.5,3,2
259_26,26,26,int deltah = height - targetRect.bottom;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,5,3,1,0,0,0.53,2,1
259_28,28,39,"if (deltaw > 0 || deltah > 0) {
float scale;
if (deltaw > deltah) {
scale = width / (float)targetRect.right;
} else {
scale = height / (float)targetRect.bottom;
}
targetRect.right = (int)(targetRect.right*scale);
targetRect.bottom = (int)(targetRect.bottom*scale);
deltaw = width - targetRect.right;
deltah = height - targetRect.bottom;
}",1,0,0,0,0,0,0,0,0,9,2,12,0,0,1,1,5,3,1,0,1,0.6,0,0
259_29,29,29,float scale;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.71,0,0
259_30,30,34,"if (deltaw > deltah) {
scale = width / (float)targetRect.right;
} else {
scale = height / (float)targetRect.bottom;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,5,3,1,0,1,0.62,1,0
259_31,31,31,scale = width / (float)targetRect.right;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.62,2,1
259_32,32,32,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.23,3,2
259_33,33,33,scale = height / (float)targetRect.bottom;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.64,4,3
259_35,35,35,targetRect.right = (int)(targetRect.right*scale);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.55,6,5
259_36,36,36,targetRect.bottom = (int)(targetRect.bottom*scale);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.59,7,5
259_37,37,37,deltaw = width - targetRect.right;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.51,8,6
259_38,38,38,deltah = height - targetRect.bottom;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.54,9,7
259_41,41,41,"targetRect.offset(deltaw/2, deltah/2);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,3,1,0,0,0.48,12,9
259_43,43,43,Paint paint = new Paint();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,1,0,0,0.5,14,10
259_44,44,44,paint.setFilterBitmap(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.42,15,10
259_45,45,45,paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.5,16,11
259_46,46,46,"c.drawBitmap(bm, null, targetRect, paint);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,1,0,0,0.52,17,12
259_48,48,48,bm.recycle();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,0,0.48,19,14
259_49,49,49,c.setBitmap(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.37,20,14
259_50,50,50,return newbm;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.22,21,15
259_51,51,51,} catch (OutOfMemoryError e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.24,22,16
259_52,52,52,"Log.w(TAG, ""Can't generate default bitmap"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.36,23,17
259_53,53,53,return bm;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.41,24,18
258_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,1,0,0,0.26,6,5
258_2,2,5,"if (sGlobals.mService == null) {
Log.w(TAG, ""WallpaperService not running"");
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,4,3,1,0,1,0.41,2,2
258_3,3,3,"Log.w(TAG, ""WallpaperService not running"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.43,4,3
258_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.2,3,2
258_6,6,22,"try {
Resources resources = mContext.getResources();
ParcelFileDescriptor fd = sGlobals.mService.setWallpaper(
""res:"" + resources.getResourceName(resid));
if (fd != null) {
FileOutputStream fos = null;
try {
fos = new ParcelFileDescriptor.AutoCloseOutputStream(fd);
setWallpaper(resources.openRawResource(resid), fos);
} finally {
if (fos != null) {
fos.close();
}
}
}
} catch (RemoteException e) {
}",0,0,0,0,1,0,0,0,0,11,4,17,0,0,0,0,4,3,1,0,2,0.5,0,0
258_7,7,7,Resources resources = mContext.getResources();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.23,0,0
258_8,8,9,"ParcelFileDescriptor fd = sGlobals.mService.setWallpaper(
""res:"" + resources.getResourceName(resid));",0,0,0,0,0,1,0,0,0,0,0,2,1,1,0,0,4,3,1,0,2,0.52,0,0
258_10,10,20,"if (fd != null) {
FileOutputStream fos = null;
try {
fos = new ParcelFileDescriptor.AutoCloseOutputStream(fd);
setWallpaper(resources.openRawResource(resid), fos);
} finally {
if (fos != null) {
fos.close();
}
}
}",1,0,0,0,0,0,0,0,0,7,3,11,1,1,0,0,4,3,1,0,2,0.5,2,1
258_11,11,11,FileOutputStream fos = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.29,3,1
258_12,12,19,"try {
fos = new ParcelFileDescriptor.AutoCloseOutputStream(fd);
setWallpaper(resources.openRawResource(resid), fos);
} finally {
if (fos != null) {
fos.close();
}
}",0,0,0,0,1,0,0,0,0,5,2,8,0,1,0,0,4,3,1,0,2,0.51,4,2
258_13,13,13,fos = new ParcelFileDescriptor.AutoCloseOutputStream(fd);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.29,5,3
258_14,14,14,"setWallpaper(resources.openRawResource(resid), fos);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,2,0.58,6,4
258_15,15,15,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.13,7,5
258_16,16,18,"if (fos != null) {
fos.close();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,1,0,0,0.3,8,6
258_17,17,17,fos.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.28,9,7
258_21,21,21,} catch (RemoteException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.28,13,9
257_1,1,1,private static InternalDimension stringToInternalDimension(String dimension) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.42,11,10
257_2,2,2,Matcher matcher = DIMENSION_PATTERN.matcher(dimension);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.5,10,9
257_3,3,14,"if (matcher.matches()) {
float value = Float.valueOf(matcher.group(1)).floatValue();
String unit = matcher.group(3).toLowerCase();
Integer dimensionUnit = dimensionConstantLookup.get(unit);
if (dimensionUnit == null) {
throw new NumberFormatException();
} else {
return new InternalDimension(value, dimensionUnit);
}
} else {
throw new NumberFormatException();
}",1,0,0,0,0,0,0,0,0,9,2,12,0,1,0,0,2,1,0,0,1,0.53,0,0
257_4,4,4,float value = Float.valueOf(matcher.group(1)).floatValue();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,1,0,0,0,0.36,8,7
257_5,5,5,String unit = matcher.group(3).toLowerCase();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,1,0,0,0,0.38,7,6
257_6,6,6,Integer dimensionUnit = dimensionConstantLookup.get(unit);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.39,6,5
257_7,7,11,"if (dimensionUnit == null) {
throw new NumberFormatException();
} else {
return new InternalDimension(value, dimensionUnit);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,2,1,0,0,1,0.53,1,1
257_8,8,8,throw new NumberFormatException();,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,1,0,0,1,0.58,4,3
257_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.38,3,2
257_10,10,10,"return new InternalDimension(value, dimensionUnit);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.33,2,1
257_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.38,0,0
257_13,13,13,throw new NumberFormatException();,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,1,0,0,1,0.58,0,0
256_1,1,1,private static InternalDimension stringToInternalDimension(String dimension) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.56,8,8
256_2,2,2,Matcher matcher = DIMENSION_PATTERN.matcher(dimension);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.63,7,7
256_3,3,14,"if (matcher.matches()) {
float value = Float.valueOf(matcher.group(1)).floatValue();
String unit = matcher.group(3).toLowerCase();
Integer dimensionUnit = dimensionConstantLookup.get(unit);
if (dimensionUnit == null) {
throw new NumberFormatException();
} else {
return new InternalDimension(value, dimensionUnit);
}
} else {
throw new NumberFormatException();
}",1,0,0,0,0,0,0,0,0,9,2,12,0,1,0,0,3,2,0,0,2,0.65,0,0
256_4,4,4,float value = Float.valueOf(matcher.group(1)).floatValue();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.48,5,5
256_5,5,5,String unit = matcher.group(3).toLowerCase();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.41,4,4
256_6,6,6,Integer dimensionUnit = dimensionConstantLookup.get(unit);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.54,3,3
256_7,7,11,"if (dimensionUnit == null) {
throw new NumberFormatException();
} else {
return new InternalDimension(value, dimensionUnit);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,3,2,0,0,2,0.65,0,0
256_8,8,8,throw new NumberFormatException();,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,0,0,0,0.34,1,1
256_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.37,0,0
256_10,10,10,"return new InternalDimension(value, dimensionUnit);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.67,0,0
256_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.37,2,1
256_13,13,13,throw new NumberFormatException();,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,0,0,0,0.34,3,1
252_1,1,1,private static InternalDimension stringToInternalDimension(String dimension) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.4,2,2
252_2,2,2,Matcher matcher = DIMENSION_PATTERN.matcher(dimension);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.31,1,1
252_3,3,14,"if (matcher.matches()) {
float value = Float.valueOf(matcher.group(1)).floatValue();
String unit = matcher.group(3).toLowerCase();
Integer dimensionUnit = dimensionConstantLookup.get(unit);
if (dimensionUnit == null) {
throw new NumberFormatException();
} else {
return new InternalDimension(value, dimensionUnit);
}
} else {
throw new NumberFormatException();
}",1,0,0,0,0,0,0,0,0,9,2,12,0,1,0,0,2,2,0,0,1,0.55,0,0
252_4,4,4,float value = Float.valueOf(matcher.group(1)).floatValue();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,2,0,0,1,0.62,0,0
252_5,5,5,String unit = matcher.group(3).toLowerCase();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.38,1,0
252_6,6,6,Integer dimensionUnit = dimensionConstantLookup.get(unit);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.42,2,1
252_7,7,11,"if (dimensionUnit == null) {
throw new NumberFormatException();
} else {
return new InternalDimension(value, dimensionUnit);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,2,2,0,0,1,0.51,3,2
252_8,8,8,throw new NumberFormatException();,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,2,0,0,0,0.37,4,3
252_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,5,4
252_10,10,10,"return new InternalDimension(value, dimensionUnit);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.53,6,5
252_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,8,7
252_13,13,13,throw new NumberFormatException();,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,2,0,0,0,0.37,9,7
251_1,1,1,private static InternalDimension stringToInternalDimension(String dimension) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.28,2,2
251_2,2,2,Matcher matcher = DIMENSION_PATTERN.matcher(dimension);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.46,1,1
251_3,3,14,"if (matcher.matches()) {
float value = Float.valueOf(matcher.group(1)).floatValue();
String unit = matcher.group(3).toLowerCase();
Integer dimensionUnit = dimensionConstantLookup.get(unit);
if (dimensionUnit == null) {
throw new NumberFormatException();
} else {
return new InternalDimension(value, dimensionUnit);
}
} else {
throw new NumberFormatException();
}",1,0,0,0,0,0,0,0,0,9,2,12,0,1,0,0,2,1,1,0,1,0.5,0,0
251_4,4,4,float value = Float.valueOf(matcher.group(1)).floatValue();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,1,1,0,0,0.4,0,0
251_5,5,5,String unit = matcher.group(3).toLowerCase();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,1,1,0,0,0.39,1,0
251_6,6,6,Integer dimensionUnit = dimensionConstantLookup.get(unit);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.22,2,1
251_7,7,11,"if (dimensionUnit == null) {
throw new NumberFormatException();
} else {
return new InternalDimension(value, dimensionUnit);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,2,1,1,0,0,0.3,3,2
251_8,8,8,throw new NumberFormatException();,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,1,1,0,0,0.28,4,3
251_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.33,5,4
251_10,10,10,"return new InternalDimension(value, dimensionUnit);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.25,6,5
251_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.33,8,7
251_13,13,13,throw new NumberFormatException();,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,1,1,0,0,0.28,9,7
226_1,1,1,private boolean matchOrUpdateInstance() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.46,15,8
226_2,2,2,int currentSelectorCounter = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.39,14,7
226_3,3,3,int currentSelectorInstance = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,1,0,0,0,0.34,13,6
226_5,5,8,"if (mSelectorAttributes.indexOfKey(UiSelector.SELECTOR_INSTANCE) >= 0) {
currentSelectorInstance =
(Integer)mSelectorAttributes.get(UiSelector.SELECTOR_INSTANCE);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,1,1,2,1,0,0,0,0.36,8,4
226_6,6,7,"currentSelectorInstance =
(Integer)mSelectorAttributes.get(UiSelector.SELECTOR_INSTANCE);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,0,0.35,9,4
226_10,10,12,"if (mSelectorAttributes.indexOfKey(UiSelector.SELECTOR_COUNT) >= 0) {
currentSelectorCounter = (Integer)mSelectorAttributes.get(UiSelector.SELECTOR_COUNT);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,1,0,0,1,0.52,4,2
226_11,11,11,currentSelectorCounter = (Integer)mSelectorAttributes.get(UiSelector.SELECTOR_COUNT);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.52,5,2
226_14,14,16,"if (currentSelectorInstance == currentSelectorCounter) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,2,1,0,0,0,0.26,0,0
226_15,15,15,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.1,1,0
226_17,17,19,"if (currentSelectorInstance > currentSelectorCounter) {
mSelectorAttributes.put(UiSelector.SELECTOR_COUNT, ++currentSelectorCounter);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,1,0,0,1,0.5,0,0
226_18,18,18,"mSelectorAttributes.put(UiSelector.SELECTOR_COUNT, ++currentSelectorCounter);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.51,1,0
226_20,20,20,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.15,3,2
225_1,1,1,private boolean matchOrUpdateInstance() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.39,8,4
225_2,2,2,int currentSelectorCounter = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.35,7,3
225_3,3,3,int currentSelectorInstance = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,5,1,0,1,0.47,6,2
225_5,5,8,"if (mSelectorAttributes.indexOfKey(UiSelector.SELECTOR_INSTANCE) >= 0) {
currentSelectorInstance =
(Integer)mSelectorAttributes.get(UiSelector.SELECTOR_INSTANCE);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,1,1,6,5,1,0,1,0.49,1,0
225_6,6,7,"currentSelectorInstance =
(Integer)mSelectorAttributes.get(UiSelector.SELECTOR_INSTANCE);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,1,0.5,2,0
225_10,10,12,"if (mSelectorAttributes.indexOfKey(UiSelector.SELECTOR_COUNT) >= 0) {
currentSelectorCounter = (Integer)mSelectorAttributes.get(UiSelector.SELECTOR_COUNT);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,5,1,0,1,0.49,0,0
225_11,11,11,currentSelectorCounter = (Integer)mSelectorAttributes.get(UiSelector.SELECTOR_COUNT);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.49,1,0
225_14,14,16,"if (currentSelectorInstance == currentSelectorCounter) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,6,5,1,0,1,0.39,4,2
225_15,15,15,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.21,5,2
225_17,17,19,"if (currentSelectorInstance > currentSelectorCounter) {
mSelectorAttributes.put(UiSelector.SELECTOR_COUNT, ++currentSelectorCounter);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,5,1,0,2,0.55,7,4
225_18,18,18,"mSelectorAttributes.put(UiSelector.SELECTOR_COUNT, ++currentSelectorCounter);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.49,8,4
225_20,20,20,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.23,10,6
224_1,1,1,private boolean matchOrUpdateInstance() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,2,0.64,3,2
224_2,2,2,int currentSelectorCounter = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.27,2,1
224_3,3,3,int currentSelectorInstance = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,5,1,0,1,0.37,1,0
224_5,5,8,"if (mSelectorAttributes.indexOfKey(UiSelector.SELECTOR_INSTANCE) >= 0) {
currentSelectorInstance =
(Integer)mSelectorAttributes.get(UiSelector.SELECTOR_INSTANCE);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,1,1,6,5,1,0,2,0.54,0,0
224_6,6,7,"currentSelectorInstance =
(Integer)mSelectorAttributes.get(UiSelector.SELECTOR_INSTANCE);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,2,0.55,1,0
224_10,10,12,"if (mSelectorAttributes.indexOfKey(UiSelector.SELECTOR_COUNT) >= 0) {
currentSelectorCounter = (Integer)mSelectorAttributes.get(UiSelector.SELECTOR_COUNT);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,5,1,0,1,0.43,5,2
224_11,11,11,currentSelectorCounter = (Integer)mSelectorAttributes.get(UiSelector.SELECTOR_COUNT);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.43,6,2
224_14,14,16,"if (currentSelectorInstance == currentSelectorCounter) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,6,5,1,0,1,0.38,9,4
224_15,15,15,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.29,10,4
224_17,17,19,"if (currentSelectorInstance > currentSelectorCounter) {
mSelectorAttributes.put(UiSelector.SELECTOR_COUNT, ++currentSelectorCounter);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,5,1,0,2,0.47,12,6
224_18,18,18,"mSelectorAttributes.put(UiSelector.SELECTOR_COUNT, ++currentSelectorCounter);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.4,13,6
224_20,20,20,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.26,15,8
200_1,1,2,"  @Override
public Collection<String> alterTableDropColumnStatements(Table table, final Column column) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.44,21,9
200_3,3,3,List<String> statements = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.27,20,8
200_5,5,6,"if (StringUtils.isNotBlank(column.getDefaultValue()))
statements.add(dropDefaultForColumn(table, column));",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,4,4,0,0,0,0.41,17,6
200_6,6,6,"statements.add(dropDefaultForColumn(table, column));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.38,17,6
200_8,8,8,boolean recreatePrimaryKey = column.isPrimaryKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,3,0.86,15,5
200_9,9,11,"if (recreatePrimaryKey) {
statements.add(dropPrimaryKey(table));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,4,4,0,0,3,0.76,12,3
200_10,10,10,statements.add(dropPrimaryKey(table));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.6,13,3
200_13,13,18,"StringBuilder statement = new StringBuilder()
.append(""ALTER TABLE "")
.append(schemaNamePrefix())
.append(table.getName())
.append("" DROP COLUMN "")
.append(column.getName());",0,0,0,0,0,1,0,0,0,0,0,6,0,0,1,1,4,4,0,0,0,0.47,5,2
200_20,20,20,statements.add(statement.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.28,3,1
200_22,22,22,List<Column> primaryKeyColumns = primaryKeysForTable(table);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,4,0,0,2,0.7,1,0
200_24,24,30,"if (recreatePrimaryKey && !primaryKeyColumns.isEmpty()) {
statements.add(new StringBuilder()
.append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")
.append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))
.toString()
);
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,1,1,4,4,0,0,3,0.72,0,0
200_25,25,25,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.28,1,0
200_26,26,26,".append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.47,2,1
200_27,27,27,".append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,2,0.66,3,2
200_28,28,28,.toString(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.27,4,3
200_32,32,32,return statements;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.27,8,5
199_1,1,2,"  @Override
public Collection<String> alterTableDropColumnStatements(Table table, final Column column) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,7,0,0,2,0.67,5,3
199_3,3,3,List<String> statements = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,7,0,0,0,0.31,4,2
199_5,5,6,"if (StringUtils.isNotBlank(column.getDefaultValue()))
statements.add(dropDefaultForColumn(table, column));",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,9,7,0,0,2,0.61,1,0
199_6,6,6,"statements.add(dropDefaultForColumn(table, column));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,7,0,0,2,0.64,1,0
199_8,8,8,boolean recreatePrimaryKey = column.isPrimaryKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,7,0,0,3,0.78,0,0
199_9,9,11,"if (recreatePrimaryKey) {
statements.add(dropPrimaryKey(table));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,9,7,0,0,3,0.76,1,0
199_10,10,10,statements.add(dropPrimaryKey(table));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,3,0.75,2,1
199_13,13,18,"StringBuilder statement = new StringBuilder()
.append(""ALTER TABLE "")
.append(schemaNamePrefix())
.append(table.getName())
.append("" DROP COLUMN "")
.append(column.getName());",0,0,0,0,0,1,0,0,0,0,0,6,0,0,1,1,9,7,0,0,2,0.65,5,3
199_20,20,20,statements.add(statement.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,7,0,0,0,0.36,12,4
199_22,22,22,List<Column> primaryKeyColumns = primaryKeysForTable(table);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,9,7,0,0,3,0.76,14,5
199_24,24,30,"if (recreatePrimaryKey && !primaryKeyColumns.isEmpty()) {
statements.add(new StringBuilder()
.append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")
.append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))
.toString()
);
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,1,1,9,7,0,0,3,0.69,16,6
199_25,25,25,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.35,17,6
199_26,26,26,".append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,7,0,0,0,0.47,18,7
199_27,27,27,".append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,7,0,0,3,0.73,19,8
199_28,28,28,.toString(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.36,20,9
199_32,32,32,return statements;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,9,7,0,0,0,0.33,24,11
198_1,1,2,"  @Override
public Collection<String> alterTableDropColumnStatements(Table table, final Column column) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,2,0.59,2,1
198_3,3,3,List<String> statements = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.31,1,0
198_5,5,6,"if (StringUtils.isNotBlank(column.getDefaultValue()))
statements.add(dropDefaultForColumn(table, column));",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,4,3,0,0,3,0.69,0,0
198_6,6,6,"statements.add(dropDefaultForColumn(table, column));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,3,0.76,1,0
198_8,8,8,boolean recreatePrimaryKey = column.isPrimaryKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,1,0.44,3,2
198_9,9,11,"if (recreatePrimaryKey) {
statements.add(dropPrimaryKey(table));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,4,3,0,0,1,0.46,4,2
198_10,10,10,statements.add(dropPrimaryKey(table));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.48,5,3
198_13,13,18,"StringBuilder statement = new StringBuilder()
.append(""ALTER TABLE "")
.append(schemaNamePrefix())
.append(table.getName())
.append("" DROP COLUMN "")
.append(column.getName());",0,0,0,0,0,1,0,0,0,0,0,6,0,0,1,1,4,3,0,0,2,0.56,8,5
198_20,20,20,statements.add(statement.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.3,15,6
198_22,22,22,List<Column> primaryKeyColumns = primaryKeysForTable(table);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.45,17,7
198_24,24,30,"if (recreatePrimaryKey && !primaryKeyColumns.isEmpty()) {
statements.add(new StringBuilder()
.append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")
.append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))
.toString()
);
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,1,1,4,3,0,0,1,0.44,19,8
198_25,25,25,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.34,20,8
198_26,26,26,".append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.33,21,9
198_27,27,27,".append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,1,0.44,22,10
198_28,28,28,.toString(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.2,23,11
198_32,32,32,return statements;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.3,27,13
197_1,1,2,"@Override
public Collection<String> alterTableChangeColumnStatements(Table table, final Column oldColumn, Column newColumn) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.47,76,36
197_3,3,3,List<String> statements = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.27,75,35
197_5,5,29,"if (oldColumn.isAutoNumbered() && !newColumn.isAutoNumbered()) {
Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));
Collection<String> cloneTableStatements = tableDeploymentStatements(clone);
statements.addAll(tableDeploymentStatements(clone));

statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());

statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());

statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}
}",1,0,0,0,0,0,0,0,0,8,2,25,0,0,1,1,4,4,0,0,2,0.59,49,26
197_6,6,7,"Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,4,0,0,0,0.42,71,33
197_8,8,8,Collection<String> cloneTableStatements = tableDeploymentStatements(clone);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,4,0,0,0,0.37,70,32
197_9,9,9,statements.addAll(tableDeploymentStatements(clone));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,4,0,0,0,0.36,69,31
197_11,11,11,"statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.46,67,30
197_13,13,13,"statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.42,65,29
197_15,15,19,"statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,1,0,4,4,0,0,0,0.44,59,28
197_21,21,28,"if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,0,0,4,4,0,0,2,0.59,50,26
197_22,22,26,"statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,4,4,0,0,0,0.44,52,26
197_31,31,31,"Table oldTable = oldTableForChangeColumn(table, oldColumn, newColumn);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.44,47,25
197_33,33,39,"for (Index index : oldTable.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,4,4,0,0,0,0.41,39,21
197_34,34,38,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,4,4,0,0,0,0.41,40,21
197_35,35,37,"if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,4,0,0,0,0.4,41,21
197_36,36,36,"statements.addAll(indexDropStatements(oldTable, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.35,42,21
197_41,41,42,"if (StringUtils.isNotBlank(oldColumn.getDefaultValue()))
statements.add(dropDefaultForColumn(table, oldColumn));",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,4,4,0,0,0,0.41,36,19
197_42,42,42,"statements.add(dropDefaultForColumn(table, oldColumn));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.38,36,19
197_44,44,51,"if (!oldColumn.getName().equals(newColumn.getName())) {
statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,1,1,4,4,0,0,0,0.45,27,17
197_45,45,49,"statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,4,4,0,0,0,0.45,29,17
197_53,53,53,boolean recreatePrimaryKey = oldColumn.isPrimaryKey() || newColumn.isPrimaryKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,4,0,0,3,0.81,25,16
197_55,55,57,"if (recreatePrimaryKey && !primaryKeysForTable(oldTable).isEmpty()) {
statements.add(dropPrimaryKey(table));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,4,0,0,3,0.76,21,14
197_56,56,56,statements.add(dropPrimaryKey(table));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.6,22,14
197_59,59,59,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.28,19,13
197_60,60,60,".append(""ALTER TABLE "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.48,18,12
197_61,61,61,.append(schemaNamePrefix()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.46,17,11
197_62,62,62,.append(table.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.4,16,10
197_63,63,63,".append("" ALTER COLUMN "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.51,15,9
197_64,64,64,.append(newColumn.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.41,14,8
197_65,65,65,.append(' '),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.39,13,7
197_66,66,66,".append(sqlRepresentationOfColumnType(table, newColumn, true))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.44,12,6
197_67,67,67,.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.27,11,5
197_69,69,75,"for (Index index : table.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,4,4,0,0,0,0.4,3,1
197_70,70,74,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,4,4,0,0,0,0.4,4,1
197_71,71,73,"if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,4,0,0,0,0.39,5,1
197_72,72,72,"statements.addAll(addIndexStatements(table, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.33,6,1
197_77,77,77,List<Column> primaryKeyColumns = primaryKeysForTable(table);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,4,0,0,2,0.7,1,0
197_79,79,85,"if (recreatePrimaryKey && !primaryKeyColumns.isEmpty()) {
statements.add(new StringBuilder()
.append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")
.append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))
.toString()
);
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,1,1,4,4,0,0,3,0.72,0,0
197_80,80,80,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.28,1,0
197_81,81,81,".append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.47,2,1
197_82,82,82,".append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,2,0.66,3,2
197_83,83,83,.toString(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.27,4,3
197_87,87,87,return statements;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.27,8,5
196_1,1,2,"@Override
public Collection<String> alterTableChangeColumnStatements(Table table, final Column oldColumn, Column newColumn) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.39,66,31
196_3,3,3,List<String> statements = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.33,65,30
196_5,5,29,"if (oldColumn.isAutoNumbered() && !newColumn.isAutoNumbered()) {
Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));
Collection<String> cloneTableStatements = tableDeploymentStatements(clone);
statements.addAll(tableDeploymentStatements(clone));

statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());

statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());

statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}
}",1,0,0,0,0,0,0,0,0,8,2,25,0,0,1,1,4,3,0,0,1,0.47,39,21
196_6,6,7,"Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,3,0,0,0,0.35,61,28
196_8,8,8,Collection<String> cloneTableStatements = tableDeploymentStatements(clone);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,3,0,0,0,0.33,60,27
196_9,9,9,statements.addAll(tableDeploymentStatements(clone));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,3,0,0,0,0.3,59,26
196_11,11,11,"statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.31,57,25
196_13,13,13,"statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.43,55,24
196_15,15,19,"statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,1,0,4,3,0,0,0,0.34,49,23
196_21,21,28,"if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,0,0,4,3,0,0,0,0.34,40,21
196_22,22,26,"statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,4,3,0,0,0,0.34,42,21
196_31,31,31,"Table oldTable = oldTableForChangeColumn(table, oldColumn, newColumn);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.34,37,20
196_33,33,39,"for (Index index : oldTable.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,4,3,0,0,2,0.57,29,16
196_34,34,38,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,4,3,0,0,2,0.54,30,16
196_35,35,37,"if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,2,0.54,31,16
196_36,36,36,"statements.addAll(indexDropStatements(oldTable, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.61,32,16
196_41,41,42,"if (StringUtils.isNotBlank(oldColumn.getDefaultValue()))
statements.add(dropDefaultForColumn(table, oldColumn));",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,4,3,0,0,1,0.41,26,14
196_42,42,42,"statements.add(dropDefaultForColumn(table, oldColumn));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.45,26,14
196_44,44,51,"if (!oldColumn.getName().equals(newColumn.getName())) {
statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,1,1,4,3,0,0,0,0.36,17,12
196_45,45,49,"statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,4,3,0,0,0,0.36,19,12
196_53,53,53,boolean recreatePrimaryKey = oldColumn.isPrimaryKey() || newColumn.isPrimaryKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.35,15,11
196_55,55,57,"if (recreatePrimaryKey && !primaryKeysForTable(oldTable).isEmpty()) {
statements.add(dropPrimaryKey(table));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,1,0.43,11,9
196_56,56,56,statements.add(dropPrimaryKey(table));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.45,12,9
196_59,59,59,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.35,9,8
196_60,60,60,".append(""ALTER TABLE "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.32,8,7
196_61,61,61,.append(schemaNamePrefix()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.27,7,6
196_62,62,62,.append(table.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.28,6,5
196_63,63,63,".append("" ALTER COLUMN "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.34,5,4
196_64,64,64,.append(newColumn.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.35,4,3
196_65,65,65,.append(' '),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.29,3,2
196_66,66,66,".append(sqlRepresentationOfColumnType(table, newColumn, true))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.38,2,1
196_67,67,67,.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.16,1,0
196_69,69,75,"for (Index index : table.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,4,3,0,0,1,0.5,0,0
196_70,70,74,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,4,3,0,0,1,0.47,1,0
196_71,71,73,"if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,1,0.46,2,1
196_72,72,72,"statements.addAll(addIndexStatements(table, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.47,3,2
196_77,77,77,List<Column> primaryKeyColumns = primaryKeysForTable(table);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.3,8,4
196_79,79,85,"if (recreatePrimaryKey && !primaryKeyColumns.isEmpty()) {
statements.add(new StringBuilder()
.append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")
.append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))
.toString()
);
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,1,1,4,3,0,0,0,0.34,10,5
196_80,80,80,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,11,5
196_81,81,81,".append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.31,12,6
196_82,82,82,".append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.31,13,7
196_83,83,83,.toString(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.16,14,8
196_87,87,87,return statements;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.22,18,10
195_1,1,2,"@Override
public Collection<String> alterTableChangeColumnStatements(Table table, final Column oldColumn, Column newColumn) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,0,0,0,0.25,52,20
195_3,3,3,List<String> statements = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.15,51,19
195_5,5,29,"if (oldColumn.isAutoNumbered() && !newColumn.isAutoNumbered()) {
Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));
Collection<String> cloneTableStatements = tableDeploymentStatements(clone);
statements.addAll(tableDeploymentStatements(clone));

statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());

statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());

statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}
}",1,0,0,0,0,0,0,0,0,8,2,25,0,0,1,1,4,2,0,0,2,0.44,25,10
195_6,6,7,"Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,2,0,0,0,0.22,47,17
195_8,8,8,Collection<String> cloneTableStatements = tableDeploymentStatements(clone);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,2,0,0,0,0.23,46,16
195_9,9,9,statements.addAll(tableDeploymentStatements(clone));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,2,0,0,0,0.23,45,15
195_11,11,11,"statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.26,43,14
195_13,13,13,"statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,1,0.41,41,13
195_15,15,19,"statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,1,0,4,2,0,0,0,0.33,35,12
195_21,21,28,"if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,0,0,4,2,0,0,1,0.34,26,10
195_22,22,26,"statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,4,2,0,0,1,0.33,28,10
195_31,31,31,"Table oldTable = oldTableForChangeColumn(table, oldColumn, newColumn);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.22,23,9
195_33,33,39,"for (Index index : oldTable.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,4,2,0,0,1,0.43,15,5
195_34,34,38,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,4,2,0,0,1,0.43,16,5
195_35,35,37,"if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,2,0,0,1,0.45,17,5
195_36,36,36,"statements.addAll(indexDropStatements(oldTable, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.42,18,5
195_41,41,42,"if (StringUtils.isNotBlank(oldColumn.getDefaultValue()))
statements.add(dropDefaultForColumn(table, oldColumn));",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,4,2,0,0,1,0.46,12,3
195_42,42,42,"statements.add(dropDefaultForColumn(table, oldColumn));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,0,0,1,0.47,12,3
195_44,44,51,"if (!oldColumn.getName().equals(newColumn.getName())) {
statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,1,1,4,2,0,0,0,0.31,3,1
195_45,45,49,"statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,4,2,0,0,0,0.31,5,1
195_53,53,53,boolean recreatePrimaryKey = oldColumn.isPrimaryKey() || newColumn.isPrimaryKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.32,1,0
195_55,55,57,"if (recreatePrimaryKey && !primaryKeysForTable(oldTable).isEmpty()) {
statements.add(dropPrimaryKey(table));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,0,0,1,0.49,0,0
195_56,56,56,statements.add(dropPrimaryKey(table));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.47,1,0
195_59,59,59,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.16,4,2
195_60,60,60,".append(""ALTER TABLE "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,0,0,0,0.32,5,2
195_61,61,61,.append(schemaNamePrefix()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,0,0,0,0.27,6,3
195_62,62,62,.append(table.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,0,0,0,0.3,7,4
195_63,63,63,".append("" ALTER COLUMN "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,0,0,0,0.29,8,5
195_64,64,64,.append(newColumn.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,0,0,0,0.25,9,6
195_65,65,65,.append(' '),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,0,0,0,0.32,10,7
195_66,66,66,".append(sqlRepresentationOfColumnType(table, newColumn, true))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,0,0,0,0.36,11,8
195_67,67,67,.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.11,12,9
195_69,69,75,"for (Index index : table.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,4,2,0,0,0,0.27,14,11
195_70,70,74,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,4,2,0,0,0,0.27,15,11
195_71,71,73,"if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,2,0,0,0,0.27,16,12
195_72,72,72,"statements.addAll(addIndexStatements(table, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.21,17,13
195_77,77,77,List<Column> primaryKeyColumns = primaryKeysForTable(table);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.26,22,15
195_79,79,85,"if (recreatePrimaryKey && !primaryKeyColumns.isEmpty()) {
statements.add(new StringBuilder()
.append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")
.append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))
.toString()
);
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,1,1,4,2,0,0,0,0.31,24,16
195_80,80,80,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.16,25,16
195_81,81,81,".append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,0,0,0,0.31,26,17
195_82,82,82,".append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,0,0,0,0.3,27,18
195_83,83,83,.toString(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.11,28,19
195_87,87,87,return statements;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.23,32,21
194_1,1,2,"@Override
public Collection<String> alterTableChangeColumnStatements(Table table, final Column oldColumn, Column newColumn) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,7,0,0,3,0.64,50,19
194_3,3,3,List<String> statements = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,10,7,0,0,1,0.46,49,18
194_5,5,29,"if (oldColumn.isAutoNumbered() && !newColumn.isAutoNumbered()) {
Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));
Collection<String> cloneTableStatements = tableDeploymentStatements(clone);
statements.addAll(tableDeploymentStatements(clone));

statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());

statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());

statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}
}",1,0,0,0,0,0,0,0,0,8,2,25,0,0,1,1,10,7,0,0,7,0.68,23,9
194_6,6,7,"Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,10,7,0,0,2,0.56,45,16
194_8,8,8,Collection<String> cloneTableStatements = tableDeploymentStatements(clone);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,10,7,0,0,0,0.4,44,15
194_9,9,9,statements.addAll(tableDeploymentStatements(clone));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,10,7,0,0,0,0.37,43,14
194_11,11,11,"statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,10,7,0,0,0,0.44,41,13
194_13,13,13,"statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,10,7,0,0,1,0.49,39,12
194_15,15,19,"statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,1,0,10,7,0,0,0,0.45,33,11
194_21,21,28,"if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,0,0,10,7,0,0,3,0.52,24,9
194_22,22,26,"statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,10,7,0,0,1,0.45,26,9
194_31,31,31,"Table oldTable = oldTableForChangeColumn(table, oldColumn, newColumn);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,10,7,0,0,3,0.66,21,8
194_33,33,39,"for (Index index : oldTable.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,10,7,0,0,3,0.61,13,4
194_34,34,38,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,10,7,0,0,3,0.61,14,4
194_35,35,37,"if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,7,0,0,3,0.59,15,4
194_36,36,36,"statements.addAll(indexDropStatements(oldTable, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,0,0,2,0.55,16,4
194_41,41,42,"if (StringUtils.isNotBlank(oldColumn.getDefaultValue()))
statements.add(dropDefaultForColumn(table, oldColumn));",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,10,7,0,0,3,0.6,10,2
194_42,42,42,"statements.add(dropDefaultForColumn(table, oldColumn));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,10,7,0,0,3,0.62,10,2
194_44,44,51,"if (!oldColumn.getName().equals(newColumn.getName())) {
statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,1,1,10,7,0,0,3,0.63,1,0
194_45,45,49,"statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,10,7,0,0,3,0.61,3,0
194_53,53,53,boolean recreatePrimaryKey = oldColumn.isPrimaryKey() || newColumn.isPrimaryKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,10,7,0,0,5,0.8,0,0
194_55,55,57,"if (recreatePrimaryKey && !primaryKeysForTable(oldTable).isEmpty()) {
statements.add(dropPrimaryKey(table));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,10,7,0,0,4,0.69,2,1
194_56,56,56,statements.add(dropPrimaryKey(table));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,0,0,3,0.62,3,1
194_59,59,59,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,10,7,0,0,1,0.5,6,3
194_60,60,60,".append(""ALTER TABLE "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,7,0,0,0,0.44,7,3
194_61,61,61,.append(schemaNamePrefix()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,7,0,0,0,0.44,8,4
194_62,62,62,.append(table.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,7,0,0,0,0.38,9,5
194_63,63,63,".append("" ALTER COLUMN "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,7,0,0,1,0.56,10,6
194_64,64,64,.append(newColumn.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,7,0,0,2,0.59,11,7
194_65,65,65,.append(' '),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,7,0,0,0,0.37,12,8
194_66,66,66,".append(sqlRepresentationOfColumnType(table, newColumn, true))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,7,0,0,2,0.57,13,9
194_67,67,67,.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,10,7,0,0,0,0.34,14,10
194_69,69,75,"for (Index index : table.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,10,7,0,0,2,0.55,16,12
194_70,70,74,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,10,7,0,0,2,0.55,17,12
194_71,71,73,"if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,7,0,0,2,0.53,18,13
194_72,72,72,"statements.addAll(addIndexStatements(table, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,0,0,0,0.37,19,14
194_77,77,77,List<Column> primaryKeyColumns = primaryKeysForTable(table);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,10,7,0,0,3,0.65,24,16
194_79,79,85,"if (recreatePrimaryKey && !primaryKeyColumns.isEmpty()) {
statements.add(new StringBuilder()
.append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")
.append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))
.toString()
);
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,1,1,10,7,0,0,4,0.66,26,17
194_80,80,80,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,0,0,1,0.5,27,17
194_81,81,81,".append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,7,0,0,0,0.45,28,18
194_82,82,82,".append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,7,0,0,3,0.63,29,19
194_83,83,83,.toString(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,0,0,0,0.34,30,20
194_87,87,87,return statements;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,10,7,0,0,0,0.29,34,22
193_1,1,2,"@Override
public Collection<String> alterTableChangeColumnStatements(Table table, final Column oldColumn, Column newColumn) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,1,0.57,41,17
193_3,3,3,List<String> statements = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.31,40,16
193_5,5,29,"if (oldColumn.isAutoNumbered() && !newColumn.isAutoNumbered()) {
Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));
Collection<String> cloneTableStatements = tableDeploymentStatements(clone);
statements.addAll(tableDeploymentStatements(clone));

statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());

statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());

statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}
}",1,0,0,0,0,0,0,0,0,8,2,25,0,0,1,1,3,2,0,0,2,0.58,14,7
193_6,6,7,"Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,3,2,0,0,1,0.53,36,14
193_8,8,8,Collection<String> cloneTableStatements = tableDeploymentStatements(clone);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.41,35,13
193_9,9,9,statements.addAll(tableDeploymentStatements(clone));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,3,2,0,0,0,0.36,34,12
193_11,11,11,"statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.38,32,11
193_13,13,13,"statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.36,30,10
193_15,15,19,"statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,1,0,3,2,0,0,1,0.48,24,9
193_21,21,28,"if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,0,0,3,2,0,0,1,0.47,15,7
193_22,22,26,"statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,3,2,0,0,1,0.48,17,7
193_31,31,31,"Table oldTable = oldTableForChangeColumn(table, oldColumn, newColumn);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,0,0,1,0.57,12,6
193_33,33,39,"for (Index index : oldTable.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,3,2,0,0,1,0.5,4,2
193_34,34,38,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,3,2,0,0,1,0.51,5,2
193_35,35,37,"if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,1,0.49,6,2
193_36,36,36,"statements.addAll(indexDropStatements(oldTable, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.36,7,2
193_41,41,42,"if (StringUtils.isNotBlank(oldColumn.getDefaultValue()))
statements.add(dropDefaultForColumn(table, oldColumn));",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,3,2,0,0,1,0.49,1,0
193_42,42,42,"statements.add(dropDefaultForColumn(table, oldColumn));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,1,0.51,1,0
193_44,44,51,"if (!oldColumn.getName().equals(newColumn.getName())) {
statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,1,1,3,2,0,0,2,0.61,0,0
193_45,45,49,"statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,3,2,0,0,2,0.61,1,0
193_53,53,53,boolean recreatePrimaryKey = oldColumn.isPrimaryKey() || newColumn.isPrimaryKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,0,0,1,0.52,9,2
193_55,55,57,"if (recreatePrimaryKey && !primaryKeysForTable(oldTable).isEmpty()) {
statements.add(dropPrimaryKey(table));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,0,0.36,11,3
193_56,56,56,statements.add(dropPrimaryKey(table));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.32,12,3
193_59,59,59,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.33,15,5
193_60,60,60,".append(""ALTER TABLE "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,0,0.38,16,5
193_61,61,61,.append(schemaNamePrefix()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,0,0.39,17,6
193_62,62,62,.append(table.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,0,0.34,18,7
193_63,63,63,".append("" ALTER COLUMN "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,1,0.55,19,8
193_64,64,64,.append(newColumn.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,1,0.5,20,9
193_65,65,65,.append(' '),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,0,0.32,21,10
193_66,66,66,".append(sqlRepresentationOfColumnType(table, newColumn, true))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,1,0.53,22,11
193_67,67,67,.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.24,23,12
193_69,69,75,"for (Index index : table.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,3,2,0,0,1,0.49,25,14
193_70,70,74,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,3,2,0,0,1,0.49,26,14
193_71,71,73,"if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,1,0.47,27,15
193_72,72,72,"statements.addAll(addIndexStatements(table, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.33,28,16
193_77,77,77,List<Column> primaryKeyColumns = primaryKeysForTable(table);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,0,0,1,0.5,33,18
193_79,79,85,"if (recreatePrimaryKey && !primaryKeyColumns.isEmpty()) {
statements.add(new StringBuilder()
.append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")
.append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))
.toString()
);
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,1,1,3,2,0,0,1,0.49,35,19
193_80,80,80,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.33,36,19
193_81,81,81,".append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,0,0.38,37,20
193_82,82,82,".append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,1,0.47,38,21
193_83,83,83,.toString(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.24,39,22
193_87,87,87,return statements;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.3,43,24
192_1,1,2,"@Override
public Collection<String> alterTableChangeColumnStatements(Table table, final Column oldColumn, Column newColumn) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,2,0.6,38,15
192_3,3,3,List<String> statements = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.31,37,14
192_5,5,29,"if (oldColumn.isAutoNumbered() && !newColumn.isAutoNumbered()) {
Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));
Collection<String> cloneTableStatements = tableDeploymentStatements(clone);
statements.addAll(tableDeploymentStatements(clone));

statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());

statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());

statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}
}",1,0,0,0,0,0,0,0,0,8,2,25,0,0,1,1,4,3,0,0,3,0.61,11,5
192_6,6,7,"Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,3,0,0,1,0.49,33,12
192_8,8,8,Collection<String> cloneTableStatements = tableDeploymentStatements(clone);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,3,0,0,0,0.32,32,11
192_9,9,9,statements.addAll(tableDeploymentStatements(clone));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,3,0,0,0,0.32,31,10
192_11,11,11,"statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.34,29,9
192_13,13,13,"statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.46,27,8
192_15,15,19,"statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,1,0,4,3,0,0,0,0.36,21,7
192_21,21,28,"if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,0,0,4,3,0,0,0,0.36,12,5
192_22,22,26,"statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,4,3,0,0,0,0.36,14,5
192_31,31,31,"Table oldTable = oldTableForChangeColumn(table, oldColumn, newColumn);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,2,0.65,9,4
192_33,33,39,"for (Index index : oldTable.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,4,3,0,0,3,0.68,1,0
192_34,34,38,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,4,3,0,0,3,0.69,2,0
192_35,35,37,"if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,3,0.68,3,0
192_36,36,36,"statements.addAll(indexDropStatements(oldTable, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.61,4,0
192_41,41,42,"if (StringUtils.isNotBlank(oldColumn.getDefaultValue()))
statements.add(dropDefaultForColumn(table, oldColumn));",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,4,3,0,0,4,0.83,0,0
192_42,42,42,"statements.add(dropDefaultForColumn(table, oldColumn));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,4,0.88,1,0
192_44,44,51,"if (!oldColumn.getName().equals(newColumn.getName())) {
statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,1,1,4,3,0,0,2,0.57,3,2
192_45,45,49,"statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,4,3,0,0,2,0.56,4,2
192_53,53,53,boolean recreatePrimaryKey = oldColumn.isPrimaryKey() || newColumn.isPrimaryKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,2,0.57,12,4
192_55,55,57,"if (recreatePrimaryKey && !primaryKeysForTable(oldTable).isEmpty()) {
statements.add(dropPrimaryKey(table));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,2,0.56,14,5
192_56,56,56,statements.add(dropPrimaryKey(table));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.48,15,5
192_59,59,59,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.34,18,7
192_60,60,60,".append(""ALTER TABLE "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.32,19,7
192_61,61,61,.append(schemaNamePrefix()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.31,20,8
192_62,62,62,.append(table.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.28,21,9
192_63,63,63,".append("" ALTER COLUMN "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,1,0.48,22,10
192_64,64,64,.append(newColumn.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,1,0.46,23,11
192_65,65,65,.append(' '),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.23,24,12
192_66,66,66,".append(sqlRepresentationOfColumnType(table, newColumn, true))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,1,0.48,25,13
192_67,67,67,.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.2,26,14
192_69,69,75,"for (Index index : table.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,4,3,0,0,1,0.47,28,16
192_70,70,74,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,4,3,0,0,1,0.47,29,16
192_71,71,73,"if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,1,0.45,30,17
192_72,72,72,"statements.addAll(addIndexStatements(table, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,31,18
192_77,77,77,List<Column> primaryKeyColumns = primaryKeysForTable(table);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.45,36,20
192_79,79,85,"if (recreatePrimaryKey && !primaryKeyColumns.isEmpty()) {
statements.add(new StringBuilder()
.append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")
.append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))
.toString()
);
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,1,1,4,3,0,0,1,0.44,38,21
192_80,80,80,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.34,39,21
192_81,81,81,".append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.33,40,22
192_82,82,82,".append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,1,0.44,41,23
192_83,83,83,.toString(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.2,42,24
192_87,87,87,return statements;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.3,46,26
191_1,1,2,"@Override
public Collection<String> alterTableChangeColumnStatements(Table table, final Column oldColumn, Column newColumn) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,7,0,0,2,0.6,30,11
191_3,3,3,List<String> statements = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,7,0,0,0,0.28,29,10
191_5,5,29,"if (oldColumn.isAutoNumbered() && !newColumn.isAutoNumbered()) {
Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));
Collection<String> cloneTableStatements = tableDeploymentStatements(clone);
statements.addAll(tableDeploymentStatements(clone));

statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());

statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());

statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}
}",1,0,0,0,0,0,0,0,0,8,2,25,0,0,1,1,7,7,0,0,3,0.62,3,1
191_6,6,7,"Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,7,7,0,0,1,0.49,25,8
191_8,8,8,Collection<String> cloneTableStatements = tableDeploymentStatements(clone);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,7,7,0,0,0,0.37,24,7
191_9,9,9,statements.addAll(tableDeploymentStatements(clone));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,7,7,0,0,0,0.35,23,6
191_11,11,11,"statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,7,0,0,0,0.37,21,5
191_13,13,13,"statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,7,0,0,1,0.5,19,4
191_15,15,19,"statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,1,0,7,7,0,0,0,0.36,13,3
191_21,21,28,"if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,0,0,7,7,0,0,1,0.42,4,1
191_22,22,26,"statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,7,7,0,0,0,0.35,6,1
191_31,31,31,"Table oldTable = oldTableForChangeColumn(table, oldColumn, newColumn);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,7,0,0,2,0.57,1,0
191_33,33,39,"for (Index index : oldTable.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,7,7,0,0,3,0.71,0,0
191_34,34,38,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,7,7,0,0,3,0.69,1,0
191_35,35,37,"if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,7,0,0,3,0.67,2,1
191_36,36,36,"statements.addAll(indexDropStatements(oldTable, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,2,0.63,3,2
191_41,41,42,"if (StringUtils.isNotBlank(oldColumn.getDefaultValue()))
statements.add(dropDefaultForColumn(table, oldColumn));",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,7,7,0,0,2,0.6,8,4
191_42,42,42,"statements.add(dropDefaultForColumn(table, oldColumn));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,7,0,0,2,0.65,9,4
191_44,44,51,"if (!oldColumn.getName().equals(newColumn.getName())) {
statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,1,1,7,7,0,0,1,0.48,11,6
191_45,45,49,"statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,7,7,0,0,1,0.47,12,6
191_53,53,53,boolean recreatePrimaryKey = oldColumn.isPrimaryKey() || newColumn.isPrimaryKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,7,0,0,1,0.49,20,8
191_55,55,57,"if (recreatePrimaryKey && !primaryKeysForTable(oldTable).isEmpty()) {
statements.add(dropPrimaryKey(table));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,7,0,0,1,0.51,22,9
191_56,56,56,statements.add(dropPrimaryKey(table));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.53,23,9
191_59,59,59,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,7,0,0,0,0.31,26,11
191_60,60,60,".append(""ALTER TABLE "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,7,0,0,0,0.35,27,11
191_61,61,61,.append(schemaNamePrefix()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,7,0,0,0,0.31,28,12
191_62,62,62,.append(table.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,7,0,0,0,0.34,29,13
191_63,63,63,".append("" ALTER COLUMN "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,7,0,0,1,0.51,30,14
191_64,64,64,.append(newColumn.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,7,0,0,1,0.44,31,15
191_65,65,65,.append(' '),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,7,0,0,0,0.25,32,16
191_66,66,66,".append(sqlRepresentationOfColumnType(table, newColumn, true))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,7,0,0,1,0.51,33,17
191_67,67,67,.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,7,0,0,0,0.22,34,18
191_69,69,75,"for (Index index : table.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,7,7,0,0,2,0.59,36,20
191_70,70,74,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,7,7,0,0,2,0.57,37,20
191_71,71,73,"if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,7,0,0,2,0.54,38,21
191_72,72,72,"statements.addAll(addIndexStatements(table, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.49,39,22
191_77,77,77,List<Column> primaryKeyColumns = primaryKeysForTable(table);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,7,0,0,1,0.5,44,24
191_79,79,85,"if (recreatePrimaryKey && !primaryKeyColumns.isEmpty()) {
statements.add(new StringBuilder()
.append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")
.append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))
.toString()
);
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,1,1,7,7,0,0,1,0.46,46,25
191_80,80,80,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.31,47,25
191_81,81,81,".append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,7,0,0,0,0.34,48,26
191_82,82,82,".append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,7,0,0,1,0.47,49,27
191_83,83,83,.toString(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.22,50,28
191_87,87,87,return statements;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,7,0,0,0,0.27,54,30
190_1,1,2,"@Override
public Collection<String> alterTableChangeColumnStatements(Table table, final Column oldColumn, Column newColumn) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,2,0.61,28,10
190_3,3,3,List<String> statements = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.36,27,9
190_5,5,29,"if (oldColumn.isAutoNumbered() && !newColumn.isAutoNumbered()) {
Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));
Collection<String> cloneTableStatements = tableDeploymentStatements(clone);
statements.addAll(tableDeploymentStatements(clone));

statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());

statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());

statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}
}",1,0,0,0,0,0,0,0,0,8,2,25,0,0,1,1,4,2,1,0,2,0.59,1,0
190_6,6,7,"Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,2,1,0,1,0.57,23,7
190_8,8,8,Collection<String> cloneTableStatements = tableDeploymentStatements(clone);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,2,1,0,1,0.53,22,6
190_9,9,9,statements.addAll(tableDeploymentStatements(clone));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,2,1,0,1,0.49,21,5
190_11,11,11,"statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,1,0.5,19,4
190_13,13,13,"statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,1,0.49,17,3
190_15,15,19,"statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,1,0,4,2,1,0,1,0.5,11,2
190_21,21,28,"if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,0,0,4,2,1,0,1,0.5,2,0
190_22,22,26,"statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,4,2,1,0,1,0.5,4,0
190_31,31,31,"Table oldTable = oldTableForChangeColumn(table, oldColumn, newColumn);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,1,0,2,0.71,0,0
190_33,33,39,"for (Index index : oldTable.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,4,2,1,0,2,0.55,2,1
190_34,34,38,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,4,2,1,0,2,0.54,3,1
190_35,35,37,"if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,2,1,0,2,0.55,4,2
190_36,36,36,"statements.addAll(indexDropStatements(oldTable, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.55,5,3
190_41,41,42,"if (StringUtils.isNotBlank(oldColumn.getDefaultValue()))
statements.add(dropDefaultForColumn(table, oldColumn));",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,4,2,1,0,2,0.54,10,5
190_42,42,42,"statements.add(dropDefaultForColumn(table, oldColumn));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,2,0.56,11,5
190_44,44,51,"if (!oldColumn.getName().equals(newColumn.getName())) {
statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,1,1,4,2,1,0,2,0.59,13,7
190_45,45,49,"statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,4,2,1,0,2,0.59,14,7
190_53,53,53,boolean recreatePrimaryKey = oldColumn.isPrimaryKey() || newColumn.isPrimaryKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,1,0,1,0.46,22,9
190_55,55,57,"if (recreatePrimaryKey && !primaryKeysForTable(oldTable).isEmpty()) {
statements.add(dropPrimaryKey(table));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,1,0,2,0.56,24,10
190_56,56,56,statements.add(dropPrimaryKey(table));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.42,25,10
190_59,59,59,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.41,28,12
190_60,60,60,".append(""ALTER TABLE "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,1,0.55,29,12
190_61,61,61,.append(schemaNamePrefix()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,0,0.42,30,13
190_62,62,62,.append(table.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,1,0.51,31,14
190_63,63,63,".append("" ALTER COLUMN "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,0,0.39,32,15
190_64,64,64,.append(newColumn.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,0,0.42,33,16
190_65,65,65,.append(' '),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,0,0.38,34,17
190_66,66,66,".append(sqlRepresentationOfColumnType(table, newColumn, true))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,1,0.49,35,18
190_67,67,67,.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.23,36,19
190_69,69,75,"for (Index index : table.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,4,2,1,0,1,0.46,38,21
190_70,70,74,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,4,2,1,0,1,0.45,39,21
190_71,71,73,"if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,2,1,0,1,0.45,40,22
190_72,72,72,"statements.addAll(addIndexStatements(table, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.41,41,23
190_77,77,77,List<Column> primaryKeyColumns = primaryKeysForTable(table);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,1,0,1,0.46,46,25
190_79,79,85,"if (recreatePrimaryKey && !primaryKeyColumns.isEmpty()) {
statements.add(new StringBuilder()
.append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")
.append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))
.toString()
);
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,1,1,4,2,1,0,2,0.59,48,26
190_80,80,80,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.41,49,26
190_81,81,81,".append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,1,0.53,50,27
190_82,82,82,".append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,2,0.56,51,28
190_83,83,83,.toString(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.23,52,29
190_87,87,87,return statements;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.26,56,31
189_1,1,2,"@Override
public Collection<String> alterTableChangeColumnStatements(Table table, final Column oldColumn, Column newColumn) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,5,1,0,1,0.51,12,7
189_3,3,3,List<String> statements = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,5,1,0,0,0.31,11,6
189_5,5,29,"if (oldColumn.isAutoNumbered() && !newColumn.isAutoNumbered()) {
Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));
Collection<String> cloneTableStatements = tableDeploymentStatements(clone);
statements.addAll(tableDeploymentStatements(clone));

statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());

statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());

statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}
}",1,0,0,0,0,0,0,0,0,8,2,25,0,0,1,1,7,5,1,0,3,0.6,0,0
189_6,6,7,"Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,7,5,1,0,2,0.59,7,4
189_8,8,8,Collection<String> cloneTableStatements = tableDeploymentStatements(clone);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,7,5,1,0,2,0.63,6,3
189_9,9,9,statements.addAll(tableDeploymentStatements(clone));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,7,5,1,0,2,0.55,5,2
189_11,11,11,"statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,5,1,0,2,0.52,3,1
189_13,13,13,"statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,5,1,0,1,0.47,1,0
189_15,15,19,"statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,1,0,7,5,1,0,3,0.57,0,0
189_21,21,28,"if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,0,0,7,5,1,0,3,0.58,6,1
189_22,22,26,"statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,7,5,1,0,3,0.57,7,1
189_31,31,31,"Table oldTable = oldTableForChangeColumn(table, oldColumn, newColumn);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,5,1,0,1,0.52,16,3
189_33,33,39,"for (Index index : oldTable.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,7,5,1,0,1,0.44,18,4
189_34,34,38,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,7,5,1,0,1,0.44,19,4
189_35,35,37,"if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,5,1,0,1,0.43,20,5
189_36,36,36,"statements.addAll(indexDropStatements(oldTable, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.42,21,6
189_41,41,42,"if (StringUtils.isNotBlank(oldColumn.getDefaultValue()))
statements.add(dropDefaultForColumn(table, oldColumn));",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,7,5,1,0,1,0.44,26,8
189_42,42,42,"statements.add(dropDefaultForColumn(table, oldColumn));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,5,1,0,1,0.43,27,8
189_44,44,51,"if (!oldColumn.getName().equals(newColumn.getName())) {
statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,1,1,7,5,1,0,2,0.51,29,10
189_45,45,49,"statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,7,5,1,0,2,0.52,30,10
189_53,53,53,boolean recreatePrimaryKey = oldColumn.isPrimaryKey() || newColumn.isPrimaryKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,5,1,0,0,0.4,38,12
189_55,55,57,"if (recreatePrimaryKey && !primaryKeysForTable(oldTable).isEmpty()) {
statements.add(dropPrimaryKey(table));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,5,1,0,1,0.48,40,13
189_56,56,56,statements.add(dropPrimaryKey(table));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.44,41,13
189_59,59,59,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,5,1,0,0,0.36,44,15
189_60,60,60,".append(""ALTER TABLE "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,5,1,0,1,0.57,45,15
189_61,61,61,.append(schemaNamePrefix()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,5,1,0,0,0.42,46,16
189_62,62,62,.append(table.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,5,1,0,1,0.52,47,17
189_63,63,63,".append("" ALTER COLUMN "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,5,1,0,0,0.42,48,18
189_64,64,64,.append(newColumn.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,5,1,0,0,0.4,49,19
189_65,65,65,.append(' '),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,5,1,0,0,0.44,50,20
189_66,66,66,".append(sqlRepresentationOfColumnType(table, newColumn, true))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,5,1,0,1,0.5,51,21
189_67,67,67,.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,5,1,0,0,0.29,52,22
189_69,69,75,"for (Index index : table.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,7,5,1,0,1,0.43,54,24
189_70,70,74,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,7,5,1,0,1,0.43,55,24
189_71,71,73,"if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,5,1,0,1,0.43,56,25
189_72,72,72,"statements.addAll(addIndexStatements(table, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.42,57,26
189_77,77,77,List<Column> primaryKeyColumns = primaryKeysForTable(table);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,5,1,0,1,0.48,62,28
189_79,79,85,"if (recreatePrimaryKey && !primaryKeyColumns.isEmpty()) {
statements.add(new StringBuilder()
.append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")
.append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))
.toString()
);
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,1,1,7,5,1,0,1,0.49,64,29
189_80,80,80,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.36,65,29
189_81,81,81,".append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,5,1,0,1,0.51,66,30
189_82,82,82,".append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,5,1,0,1,0.47,67,31
189_83,83,83,.toString(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.29,68,32
189_87,87,87,return statements;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,5,1,0,0,0.29,72,34
188_1,1,2,"@Override
public Collection<String> alterTableChangeColumnStatements(Table table, final Column oldColumn, Column newColumn) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,1,0.5,10,6
188_3,3,3,List<String> statements = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.26,9,5
188_5,5,29,"if (oldColumn.isAutoNumbered() && !newColumn.isAutoNumbered()) {
Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));
Collection<String> cloneTableStatements = tableDeploymentStatements(clone);
statements.addAll(tableDeploymentStatements(clone));

statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());

statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());

statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}
}",1,0,0,0,0,0,0,0,0,8,2,25,0,0,1,1,3,3,0,0,2,0.63,0,0
188_6,6,7,"Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,3,3,0,0,1,0.54,5,3
188_8,8,8,Collection<String> cloneTableStatements = tableDeploymentStatements(clone);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,3,0,0,1,0.51,4,2
188_9,9,9,statements.addAll(tableDeploymentStatements(clone));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,3,3,0,0,1,0.51,3,1
188_11,11,11,"statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.5,1,0
188_13,13,13,"statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,2,0.68,0,0
188_15,15,19,"statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,1,0,3,3,0,0,1,0.48,2,1
188_21,21,28,"if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,0,0,3,3,0,0,1,0.48,8,2
188_22,22,26,"statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,3,3,0,0,1,0.48,9,2
188_31,31,31,"Table oldTable = oldTableForChangeColumn(table, oldColumn, newColumn);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.5,18,4
188_33,33,39,"for (Index index : oldTable.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,3,3,0,0,2,0.58,20,5
188_34,34,38,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,3,3,0,0,2,0.58,21,5
188_35,35,37,"if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,2,0.58,22,6
188_36,36,36,"statements.addAll(indexDropStatements(oldTable, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.63,23,7
188_41,41,42,"if (StringUtils.isNotBlank(oldColumn.getDefaultValue()))
statements.add(dropDefaultForColumn(table, oldColumn));",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,3,3,0,0,2,0.58,28,9
188_42,42,42,"statements.add(dropDefaultForColumn(table, oldColumn));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,2,0.65,29,9
188_44,44,51,"if (!oldColumn.getName().equals(newColumn.getName())) {
statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,1,1,3,3,0,0,1,0.46,31,11
188_45,45,49,"statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,3,3,0,0,1,0.47,32,11
188_53,53,53,boolean recreatePrimaryKey = oldColumn.isPrimaryKey() || newColumn.isPrimaryKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.34,40,13
188_55,55,57,"if (recreatePrimaryKey && !primaryKeysForTable(oldTable).isEmpty()) {
statements.add(dropPrimaryKey(table));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,2,0.65,42,14
188_56,56,56,statements.add(dropPrimaryKey(table));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.69,43,14
188_59,59,59,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.31,46,16
188_60,60,60,".append(""ALTER TABLE "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.52,47,16
188_61,61,61,.append(schemaNamePrefix()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.34,48,17
188_62,62,62,.append(table.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.49,49,18
188_63,63,63,".append("" ALTER COLUMN "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.34,50,19
188_64,64,64,.append(newColumn.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.32,51,20
188_65,65,65,.append(' '),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.29,52,21
188_66,66,66,".append(sqlRepresentationOfColumnType(table, newColumn, true))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.5,53,22
188_67,67,67,.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.22,54,23
188_69,69,75,"for (Index index : table.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,3,3,0,0,1,0.44,56,25
188_70,70,74,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,3,3,0,0,1,0.44,57,25
188_71,71,73,"if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,1,0.44,58,26
188_72,72,72,"statements.addAll(addIndexStatements(table, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.48,59,27
188_77,77,77,List<Column> primaryKeyColumns = primaryKeysForTable(table);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.5,64,29
188_79,79,85,"if (recreatePrimaryKey && !primaryKeyColumns.isEmpty()) {
statements.add(new StringBuilder()
.append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")
.append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))
.toString()
);
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,1,1,3,3,0,0,1,0.46,66,30
188_80,80,80,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.31,67,30
188_81,81,81,".append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.48,68,31
188_82,82,82,".append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.47,69,32
188_83,83,83,.toString(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.22,70,33
188_87,87,87,return statements;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.31,74,35
187_1,1,2,"@Override
public Collection<String> alterTableChangeColumnStatements(Table table, final Column oldColumn, Column newColumn) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,6,1,0,1,0.52,8,5
187_3,3,3,List<String> statements = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,6,1,0,0,0.32,7,4
187_5,5,29,"if (oldColumn.isAutoNumbered() && !newColumn.isAutoNumbered()) {
Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));
Collection<String> cloneTableStatements = tableDeploymentStatements(clone);
statements.addAll(tableDeploymentStatements(clone));

statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());

statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());

statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}
}",1,0,0,0,0,0,0,0,0,8,2,25,0,0,1,1,8,6,1,0,3,0.62,0,0
187_6,6,7,"Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,8,6,1,0,2,0.63,3,2
187_8,8,8,Collection<String> cloneTableStatements = tableDeploymentStatements(clone);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,8,6,1,0,2,0.67,2,1
187_9,9,9,statements.addAll(tableDeploymentStatements(clone));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,8,6,1,0,2,0.65,1,0
187_11,11,11,"statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,8,6,1,0,3,0.63,0,0
187_13,13,13,"statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,8,6,1,0,1,0.51,2,1
187_15,15,19,"statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,1,0,8,6,1,0,2,0.53,4,2
187_21,21,28,"if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,0,0,8,6,1,0,2,0.55,10,3
187_22,22,26,"statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,8,6,1,0,2,0.53,11,3
187_31,31,31,"Table oldTable = oldTableForChangeColumn(table, oldColumn, newColumn);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,8,6,1,0,1,0.55,20,5
187_33,33,39,"for (Index index : oldTable.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,8,6,1,0,1,0.46,22,6
187_34,34,38,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,8,6,1,0,1,0.46,23,6
187_35,35,37,"if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,6,1,0,1,0.46,24,7
187_36,36,36,"statements.addAll(indexDropStatements(oldTable, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,1,0.47,25,8
187_41,41,42,"if (StringUtils.isNotBlank(oldColumn.getDefaultValue()))
statements.add(dropDefaultForColumn(table, oldColumn));",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,8,6,1,0,1,0.44,30,10
187_42,42,42,"statements.add(dropDefaultForColumn(table, oldColumn));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,6,1,0,1,0.48,31,10
187_44,44,51,"if (!oldColumn.getName().equals(newColumn.getName())) {
statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,1,1,8,6,1,0,1,0.46,33,12
187_45,45,49,"statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,8,6,1,0,1,0.47,34,12
187_53,53,53,boolean recreatePrimaryKey = oldColumn.isPrimaryKey() || newColumn.isPrimaryKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,8,6,1,0,0,0.39,42,14
187_55,55,57,"if (recreatePrimaryKey && !primaryKeysForTable(oldTable).isEmpty()) {
statements.add(dropPrimaryKey(table));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,8,6,1,0,1,0.52,44,15
187_56,56,56,statements.add(dropPrimaryKey(table));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,1,0.5,45,15
187_59,59,59,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,6,1,0,0,0.35,48,17
187_60,60,60,".append(""ALTER TABLE "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,8,6,1,0,1,0.54,49,17
187_61,61,61,.append(schemaNamePrefix()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,8,6,1,0,0,0.35,50,18
187_62,62,62,.append(table.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,8,6,1,0,1,0.49,51,19
187_63,63,63,".append("" ALTER COLUMN "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,8,6,1,0,0,0.37,52,20
187_64,64,64,.append(newColumn.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,8,6,1,0,0,0.34,53,21
187_65,65,65,.append(' '),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,8,6,1,0,0,0.29,54,22
187_66,66,66,".append(sqlRepresentationOfColumnType(table, newColumn, true))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,8,6,1,0,1,0.51,55,23
187_67,67,67,.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,6,1,0,0,0.24,56,24
187_69,69,75,"for (Index index : table.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,8,6,1,0,1,0.46,58,26
187_70,70,74,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,8,6,1,0,1,0.46,59,26
187_71,71,73,"if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,6,1,0,1,0.46,60,27
187_72,72,72,"statements.addAll(addIndexStatements(table, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,1,0.48,61,28
187_77,77,77,List<Column> primaryKeyColumns = primaryKeysForTable(table);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,8,6,1,0,1,0.52,66,30
187_79,79,85,"if (recreatePrimaryKey && !primaryKeyColumns.isEmpty()) {
statements.add(new StringBuilder()
.append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")
.append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))
.toString()
);
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,1,1,8,6,1,0,1,0.48,68,31
187_80,80,80,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.35,69,31
187_81,81,81,".append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,8,6,1,0,1,0.49,70,32
187_82,82,82,".append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,8,6,1,0,1,0.47,71,33
187_83,83,83,.toString(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.24,72,34
187_87,87,87,return statements;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,8,6,1,0,0,0.37,76,36
186_1,1,2,"@Override
public Collection<String> alterTableChangeColumnStatements(Table table, final Column oldColumn, Column newColumn) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,1,0.59,3,2
186_3,3,3,List<String> statements = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.4,2,1
186_5,5,29,"if (oldColumn.isAutoNumbered() && !newColumn.isAutoNumbered()) {
Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));
Collection<String> cloneTableStatements = tableDeploymentStatements(clone);
statements.addAll(tableDeploymentStatements(clone));

statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());

statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());

statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}
}",1,0,0,0,0,0,0,0,0,8,2,25,0,0,1,1,3,3,0,0,2,0.67,0,0
186_6,6,7,"Table clone = table(table.getName() + ""Clone"")
.columns(table.columns().toArray(new Column[table.columns().size()]));",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,3,3,0,0,2,0.75,0,0
186_8,8,8,Collection<String> cloneTableStatements = tableDeploymentStatements(clone);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,3,0,0,2,0.7,2,1
186_9,9,9,statements.addAll(tableDeploymentStatements(clone));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,3,3,0,0,2,0.67,3,1
186_11,11,11,"statements.add(""ALTER TABLE "" + schemaNamePrefix() + table.getName() + "" SWITCH TO "" + schemaNamePrefix() + clone.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,2,0.62,5,3
186_13,13,13,"statements.add(""DROP TABLE "" + schemaNamePrefix() + table.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.53,7,4
186_15,15,19,"statements.add(String.format(""EXECUTE sp_rename '%s%s', '%s%s'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,1,0,3,3,0,0,2,0.61,9,5
186_21,21,28,"if (containsPrimaryKeyConstraint(cloneTableStatements, clone.getName())) {
statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,0,0,3,3,0,0,2,0.63,15,6
186_22,22,26,"statements.add(String.format(""EXECUTE sp_rename '%s%s_PK', '%s%s_PK', 'OBJECT'"",
schemaNamePrefix(),
clone.getName(),
schemaNamePrefix(),
table.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,3,3,0,0,2,0.61,16,6
186_31,31,31,"Table oldTable = oldTableForChangeColumn(table, oldColumn, newColumn);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.63,25,8
186_33,33,39,"for (Index index : oldTable.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,3,3,0,0,1,0.46,27,9
186_34,34,38,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,3,3,0,0,1,0.45,28,9
186_35,35,37,"if (column.equalsIgnoreCase(oldColumn.getName())) {
statements.addAll(indexDropStatements(oldTable, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,1,0.45,29,10
186_36,36,36,"statements.addAll(indexDropStatements(oldTable, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.47,30,11
186_41,41,42,"if (StringUtils.isNotBlank(oldColumn.getDefaultValue()))
statements.add(dropDefaultForColumn(table, oldColumn));",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,3,3,0,0,1,0.45,35,13
186_42,42,42,"statements.add(dropDefaultForColumn(table, oldColumn));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.48,36,13
186_44,44,51,"if (!oldColumn.getName().equals(newColumn.getName())) {
statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()
));
}",1,0,0,0,0,0,0,0,0,1,1,8,0,0,1,1,3,3,0,0,1,0.53,38,15
186_45,45,49,"statements.add(String.format(""EXEC sp_rename '%s%s.%s', '%s', 'COLUMN'"",
schemaNamePrefix(),
table.getName(),
oldColumn.getName(),
newColumn.getName()",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,3,3,0,0,1,0.54,39,15
186_53,53,53,boolean recreatePrimaryKey = oldColumn.isPrimaryKey() || newColumn.isPrimaryKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.41,47,17
186_55,55,57,"if (recreatePrimaryKey && !primaryKeysForTable(oldTable).isEmpty()) {
statements.add(dropPrimaryKey(table));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,1,0.53,49,18
186_56,56,56,statements.add(dropPrimaryKey(table));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.48,50,18
186_59,59,59,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.4,53,20
186_60,60,60,".append(""ALTER TABLE "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.58,54,20
186_61,61,61,.append(schemaNamePrefix()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.39,55,21
186_62,62,62,.append(table.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.55,56,22
186_63,63,63,".append("" ALTER COLUMN "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.37,57,23
186_64,64,64,.append(newColumn.getName()),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.41,58,24
186_65,65,65,.append(' '),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.35,59,25
186_66,66,66,".append(sqlRepresentationOfColumnType(table, newColumn, true))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.56,60,26
186_67,67,67,.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.24,61,27
186_69,69,75,"for (Index index : table.indexes()) {
for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,0,1,1,3,3,0,0,1,0.52,63,29
186_70,70,74,"for (String column : index.columnNames()) {
if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,3,3,0,0,1,0.51,64,29
186_71,71,73,"if (column.equalsIgnoreCase(newColumn.getName())) {
statements.addAll(addIndexStatements(table, index));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,1,0.51,65,30
186_72,72,72,"statements.addAll(addIndexStatements(table, index));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.48,66,31
186_77,77,77,List<Column> primaryKeyColumns = primaryKeysForTable(table);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.54,71,33
186_79,79,85,"if (recreatePrimaryKey && !primaryKeyColumns.isEmpty()) {
statements.add(new StringBuilder()
.append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")
.append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))
.toString()
);
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,1,1,3,3,0,0,1,0.53,73,34
186_80,80,80,statements.add(new StringBuilder(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.4,74,34
186_81,81,81,".append(""ALTER TABLE "").append(schemaNamePrefix()).append(table.getName()).append("" ADD "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.53,75,35
186_82,82,82,".append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeyColumns)))",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.5,76,36
186_83,83,83,.toString(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.24,77,37
186_87,87,87,return statements;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.27,81,39
185_1,1,2,"  @Override
public Collection<String> alterTableAddColumnStatements(Table table, Column column) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,6,2,0,2,0.58,15,4
185_3,3,3,List<String> statements = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,6,2,0,1,0.45,14,3
185_6,6,13,"StringBuilder statement = new StringBuilder()
.append(""ALTER TABLE "")
.append(schemaNamePrefix())
.append(table.getName())
.append("" ADD "")
.append(column.getName())
.append(' ')
.append(sqlRepresentationOfColumnType(table, column, true));",0,0,0,0,0,1,0,0,0,0,0,8,0,0,1,1,9,6,2,0,3,0.59,4,2
185_15,15,15,statements.add(statement.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,6,2,0,1,0.49,2,1
185_17,17,26,"if (column.isPrimaryKey()) {
StringBuilder primaryKeyStatement = new StringBuilder()
.append(""ALTER TABLE "")
.append(schemaNamePrefix())
.append(table.getName())
.append("" ADD "")
.append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeysForTable(table))));

statements.add(primaryKeyStatement.toString());
}",1,0,0,0,0,0,0,0,0,2,1,10,0,0,1,1,9,6,2,0,4,0.67,0,0
185_18,18,23,"StringBuilder primaryKeyStatement = new StringBuilder()
.append(""ALTER TABLE "")
.append(schemaNamePrefix())
.append(table.getName())
.append("" ADD "")
.append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeysForTable(table))));",0,0,0,0,0,1,0,0,0,0,0,6,0,0,0,1,9,6,2,0,4,0.65,0,0
185_25,25,25,statements.add(primaryKeyStatement.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,6,2,0,2,0.6,7,1
185_28,28,28,return statements;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,9,6,2,0,0,0.26,10,2
184_1,1,2,"  @Override
public Collection<String> alterTableAddColumnStatements(Table table, Column column) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,1,0.58,14,3
184_3,3,3,List<String> statements = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.29,13,2
184_6,6,13,"StringBuilder statement = new StringBuilder()
.append(""ALTER TABLE "")
.append(schemaNamePrefix())
.append(table.getName())
.append("" ADD "")
.append(column.getName())
.append(' ')
.append(sqlRepresentationOfColumnType(table, column, true));",0,0,0,0,0,1,0,0,0,0,0,8,0,0,1,1,4,3,0,0,1,0.56,3,1
184_15,15,15,statements.add(statement.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.33,1,0
184_17,17,26,"if (column.isPrimaryKey()) {
StringBuilder primaryKeyStatement = new StringBuilder()
.append(""ALTER TABLE "")
.append(schemaNamePrefix())
.append(table.getName())
.append("" ADD "")
.append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeysForTable(table))));

statements.add(primaryKeyStatement.toString());
}",1,0,0,0,0,0,0,0,0,2,1,10,0,0,1,1,4,3,0,0,3,0.72,0,0
184_18,18,23,"StringBuilder primaryKeyStatement = new StringBuilder()
.append(""ALTER TABLE "")
.append(schemaNamePrefix())
.append(table.getName())
.append("" ADD "")
.append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeysForTable(table))));",0,0,0,0,0,1,0,0,0,0,0,6,0,0,0,1,4,3,0,0,3,0.7,1,0
184_25,25,25,statements.add(primaryKeyStatement.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,2,0.62,8,2
184_28,28,28,return statements;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.35,11,3
183_1,1,2,"  @Override
protected String getSqlFrom(UpdateStatement statement) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.32,22,13
183_3,3,3,String destinationTableName = statement.getTable().getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.36,21,12
183_5,5,7,"if (StringUtils.isBlank(destinationTableName)) {
throw new IllegalArgumentException(String.format(""Cannot create SQL for a blank table [%s]"", destinationTableName));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,0,0.39,17,10
183_6,6,6,"throw new IllegalArgumentException(String.format(""Cannot create SQL for a blank table [%s]"", destinationTableName));",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,2,0,0,0,0.38,18,10
183_9,9,9,StringBuilder sqlBuilder = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.42,15,9
183_11,11,11,"sqlBuilder.append(""UPDATE "");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.48,13,8
183_13,13,13,sqlBuilder.append(schemaNamePrefix(statement.getTable()));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,2,2,0,0,0,0.49,11,7
183_14,14,14,sqlBuilder.append(destinationTableName);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,2,2,0,0,0,0.49,10,6
183_16,16,16,sqlBuilder.append(getUpdateStatementSetFieldSql(statement.getFields()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.42,8,5
183_18,18,23,"if (!statement.getTable().getAlias().equals("""")) {
sqlBuilder.append("" FROM "");
sqlBuilder.append(schemaNamePrefix(statement.getTable()));
sqlBuilder.append(destinationTableName);
sqlBuilder.append(String.format("" %s"", statement.getTable().getAlias()));
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,1,1,2,2,0,0,0,0.49,1,0
183_19,19,19,"sqlBuilder.append("" FROM "");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.54,5,3
183_20,20,20,sqlBuilder.append(schemaNamePrefix(statement.getTable()));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.49,4,2
183_21,21,21,sqlBuilder.append(destinationTableName);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.49,3,1
183_22,22,22,"sqlBuilder.append(String.format("" %s"", statement.getTable().getAlias()));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.46,2,0
183_25,25,28,"if (statement.getWhereCriterion() != null) {
sqlBuilder.append("" WHERE "");
sqlBuilder.append(getSqlFrom(statement.getWhereCriterion()));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,2,2,0,0,0,0.46,0,0
183_26,26,26,"sqlBuilder.append("" WHERE "");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.54,1,0
183_27,27,27,sqlBuilder.append(getSqlFrom(statement.getWhereCriterion()));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.47,2,1
183_30,30,30,return sqlBuilder.toString();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.38,5,3
182_1,1,2,"  @Override
protected String getSqlFrom(UpdateStatement statement) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,0,0.36,15,8
182_3,3,3,String destinationTableName = statement.getTable().getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,1,0.49,14,7
182_5,5,7,"if (StringUtils.isBlank(destinationTableName)) {
throw new IllegalArgumentException(String.format(""Cannot create SQL for a blank table [%s]"", destinationTableName));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,1,0,1,0.52,10,5
182_6,6,6,"throw new IllegalArgumentException(String.format(""Cannot create SQL for a blank table [%s]"", destinationTableName));",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,1,0,1,0.51,11,5
182_9,9,9,StringBuilder sqlBuilder = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.4,8,4
182_11,11,11,"sqlBuilder.append(""UPDATE "");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.47,6,3
182_13,13,13,sqlBuilder.append(schemaNamePrefix(statement.getTable()));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,4,2,1,0,1,0.55,4,2
182_14,14,14,sqlBuilder.append(destinationTableName);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,2,1,0,1,0.58,3,1
182_16,16,16,sqlBuilder.append(getUpdateStatementSetFieldSql(statement.getFields()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.4,1,0
182_18,18,23,"if (!statement.getTable().getAlias().equals("""")) {
sqlBuilder.append("" FROM "");
sqlBuilder.append(schemaNamePrefix(statement.getTable()));
sqlBuilder.append(destinationTableName);
sqlBuilder.append(String.format("" %s"", statement.getTable().getAlias()));
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,1,1,4,2,1,0,1,0.57,0,0
182_19,19,19,"sqlBuilder.append("" FROM "");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.5,1,0
182_20,20,20,sqlBuilder.append(schemaNamePrefix(statement.getTable()));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,1,0.55,2,1
182_21,21,21,sqlBuilder.append(destinationTableName);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,1,0.58,3,2
182_22,22,22,"sqlBuilder.append(String.format("" %s"", statement.getTable().getAlias()));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,1,0.56,4,3
182_25,25,28,"if (statement.getWhereCriterion() != null) {
sqlBuilder.append("" WHERE "");
sqlBuilder.append(getSqlFrom(statement.getWhereCriterion()));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,4,2,1,0,0,0.43,7,5
182_26,26,26,"sqlBuilder.append("" WHERE "");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.5,8,5
182_27,27,27,sqlBuilder.append(getSqlFrom(statement.getWhereCriterion()));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.42,9,6
182_30,30,30,return sqlBuilder.toString();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.37,12,8
181_1,1,2,"  @Override
protected String getSqlFrom(UpdateStatement statement) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,1,0,0,0.28,13,7
181_3,3,3,String destinationTableName = statement.getTable().getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,1,1,0,0,0.32,12,6
181_5,5,7,"if (StringUtils.isBlank(destinationTableName)) {
throw new IllegalArgumentException(String.format(""Cannot create SQL for a blank table [%s]"", destinationTableName));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,1,1,0,0,0.34,8,4
181_6,6,6,"throw new IllegalArgumentException(String.format(""Cannot create SQL for a blank table [%s]"", destinationTableName));",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,1,1,0,0,0.33,9,4
181_9,9,9,StringBuilder sqlBuilder = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,1,1,0,0,0.34,6,3
181_11,11,11,"sqlBuilder.append(""UPDATE "");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,1,0,0,0.32,4,2
181_13,13,13,sqlBuilder.append(schemaNamePrefix(statement.getTable()));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,3,1,1,0,0,0.36,2,1
181_14,14,14,sqlBuilder.append(destinationTableName);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,3,1,1,0,0,0.35,1,0
181_16,16,16,sqlBuilder.append(getUpdateStatementSetFieldSql(statement.getFields()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,1,0,1,0.49,0,0
181_18,18,23,"if (!statement.getTable().getAlias().equals("""")) {
sqlBuilder.append("" FROM "");
sqlBuilder.append(schemaNamePrefix(statement.getTable()));
sqlBuilder.append(destinationTableName);
sqlBuilder.append(String.format("" %s"", statement.getTable().getAlias()));
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,1,1,3,1,1,0,0,0.37,2,1
181_19,19,19,"sqlBuilder.append("" FROM "");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,1,0,0,0.34,3,1
181_20,20,20,sqlBuilder.append(schemaNamePrefix(statement.getTable()));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,1,0,0,0.36,4,2
181_21,21,21,sqlBuilder.append(destinationTableName);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,1,0,0,0.35,5,3
181_22,22,22,"sqlBuilder.append(String.format("" %s"", statement.getTable().getAlias()));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,1,0,0,0.33,6,4
181_25,25,28,"if (statement.getWhereCriterion() != null) {
sqlBuilder.append("" WHERE "");
sqlBuilder.append(getSqlFrom(statement.getWhereCriterion()));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,1,1,0,0,0.32,9,6
181_26,26,26,"sqlBuilder.append("" WHERE "");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,1,0,0,0.34,10,6
181_27,27,27,sqlBuilder.append(getSqlFrom(statement.getWhereCriterion()));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,1,0,0,0.32,11,7
181_30,30,30,return sqlBuilder.toString();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,1,1,0,0,0.33,14,9
180_1,1,2,"  @Override
protected String getSqlFrom(UpdateStatement statement) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,1,0,1,0.5,10,5
180_3,3,3,String destinationTableName = statement.getTable().getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,1,1,0,1,0.51,9,4
180_5,5,7,"if (StringUtils.isBlank(destinationTableName)) {
throw new IllegalArgumentException(String.format(""Cannot create SQL for a blank table [%s]"", destinationTableName));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,1,1,0,1,0.49,5,2
180_6,6,6,"throw new IllegalArgumentException(String.format(""Cannot create SQL for a blank table [%s]"", destinationTableName));",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,1,1,0,1,0.49,6,2
180_9,9,9,StringBuilder sqlBuilder = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,1,1,0,0,0.37,3,1
180_11,11,11,"sqlBuilder.append(""UPDATE "");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,1,0,1,0.56,1,0
180_13,13,13,sqlBuilder.append(schemaNamePrefix(statement.getTable()));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,3,1,1,0,1,0.51,0,0
180_14,14,14,sqlBuilder.append(destinationTableName);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,3,1,1,0,1,0.54,1,0
180_16,16,16,sqlBuilder.append(getUpdateStatementSetFieldSql(statement.getFields()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,1,0,1,0.48,3,2
180_18,18,23,"if (!statement.getTable().getAlias().equals("""")) {
sqlBuilder.append("" FROM "");
sqlBuilder.append(schemaNamePrefix(statement.getTable()));
sqlBuilder.append(destinationTableName);
sqlBuilder.append(String.format("" %s"", statement.getTable().getAlias()));
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,1,1,3,1,1,0,1,0.49,5,3
180_19,19,19,"sqlBuilder.append("" FROM "");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,1,0,0,0.39,6,3
180_20,20,20,sqlBuilder.append(schemaNamePrefix(statement.getTable()));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,1,0,1,0.51,7,4
180_21,21,21,sqlBuilder.append(destinationTableName);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,1,0,1,0.54,8,5
180_22,22,22,"sqlBuilder.append(String.format("" %s"", statement.getTable().getAlias()));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,1,0,1,0.46,9,6
180_25,25,28,"if (statement.getWhereCriterion() != null) {
sqlBuilder.append("" WHERE "");
sqlBuilder.append(getSqlFrom(statement.getWhereCriterion()));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,1,1,0,0,0.36,12,8
180_26,26,26,"sqlBuilder.append("" WHERE "");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,1,0,0,0.39,13,8
180_27,27,27,sqlBuilder.append(getSqlFrom(statement.getWhereCriterion()));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,1,0,0,0.35,14,9
180_30,30,30,return sqlBuilder.toString();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,1,1,0,0,0.34,17,11
179_1,1,2,"  @Override
protected String getSqlFrom(UpdateStatement statement) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,1,0,0,0.24,8,4
179_3,3,3,String destinationTableName = statement.getTable().getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,1,1,0,0,0.23,7,3
179_5,5,7,"if (StringUtils.isBlank(destinationTableName)) {
throw new IllegalArgumentException(String.format(""Cannot create SQL for a blank table [%s]"", destinationTableName));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,1,1,0,0,0.26,3,1
179_6,6,6,"throw new IllegalArgumentException(String.format(""Cannot create SQL for a blank table [%s]"", destinationTableName));",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,1,1,0,0,0.27,4,1
179_9,9,9,StringBuilder sqlBuilder = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,1,1,0,0,0.25,1,0
179_11,11,11,"sqlBuilder.append(""UPDATE "");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,1,1,0,0,0.22,0,0
179_13,13,13,sqlBuilder.append(schemaNamePrefix(statement.getTable()));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,2,1,1,0,0,0.23,2,1
179_14,14,14,sqlBuilder.append(destinationTableName);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,2,1,1,0,0,0.24,3,1
179_16,16,16,sqlBuilder.append(getUpdateStatementSetFieldSql(statement.getFields()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,1,1,0,0,0.21,5,3
179_18,18,23,"if (!statement.getTable().getAlias().equals("""")) {
sqlBuilder.append("" FROM "");
sqlBuilder.append(schemaNamePrefix(statement.getTable()));
sqlBuilder.append(destinationTableName);
sqlBuilder.append(String.format("" %s"", statement.getTable().getAlias()));
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,1,1,2,1,1,0,0,0.23,7,4
179_19,19,19,"sqlBuilder.append("" FROM "");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,1,1,0,0,0.25,8,4
179_20,20,20,sqlBuilder.append(schemaNamePrefix(statement.getTable()));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,1,1,0,0,0.23,9,5
179_21,21,21,sqlBuilder.append(destinationTableName);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,1,1,0,0,0.24,10,6
179_22,22,22,"sqlBuilder.append(String.format("" %s"", statement.getTable().getAlias()));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,1,1,0,0,0.22,11,7
179_25,25,28,"if (statement.getWhereCriterion() != null) {
sqlBuilder.append("" WHERE "");
sqlBuilder.append(getSqlFrom(statement.getWhereCriterion()));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,2,1,1,0,0,0.22,14,9
179_26,26,26,"sqlBuilder.append("" WHERE "");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,1,1,0,0,0.25,15,9
179_27,27,27,sqlBuilder.append(getSqlFrom(statement.getWhereCriterion()));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,1,1,0,0,0.23,16,10
179_30,30,30,return sqlBuilder.toString();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,1,1,0,0,0.18,19,12
178_1,1,2,"@Override
public Collection<String> internalTableDeploymentStatements(Table table) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,3,0.74,2,1
178_3,3,3,List<String> statements = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.51,1,0
178_5,5,5,StringBuilder createTableStatement = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,3,0.71,0,0
178_6,6,6,"createTableStatement.append(""CREATE "");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.85,1,0
178_7,7,7,"createTableStatement.append(""TABLE "");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.85,2,1
178_8,8,8,createTableStatement.append(schemaNamePrefix());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.76,3,2
178_9,9,9,createTableStatement.append(table.getName());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.77,4,3
178_10,10,10,"createTableStatement.append("" ("");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,3,0,0,3,0.83,5,4
178_12,12,12,boolean first = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.24,7,6
178_13,13,25,"for (Column column : table.columns()) {
if (!first) {
createTableStatement.append("", "");
}
createTableStatement.append(String.format(""[%s] "", column.getName()));
createTableStatement.append(sqlRepresentationOfColumnType(table, column, false));
if (column.isAutoNumbered()) {
int autoNumberStart = column.getAutoNumberStart() == -1 ? 1 : column.getAutoNumberStart();
createTableStatement.append("" IDENTITY("" + autoNumberStart + "", 1)"");
}

first = false;
}",0,0,0,1,0,0,0,0,0,8,2,13,0,1,0,1,4,3,0,0,3,0.7,8,6
178_14,14,16,"if (!first) {
createTableStatement.append("", "");
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,3,0,0,3,0.77,9,7
178_15,15,15,"createTableStatement.append("", "");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.83,10,8
178_17,17,17,"createTableStatement.append(String.format(""[%s] "", column.getName()));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.7,12,10
178_18,18,18,"createTableStatement.append(sqlRepresentationOfColumnType(table, column, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.75,13,10
178_19,19,22,"if (column.isAutoNumbered()) {
int autoNumberStart = column.getAutoNumberStart() == -1 ? 1 : column.getAutoNumberStart();
createTableStatement.append("" IDENTITY("" + autoNumberStart + "", 1)"");
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,1,4,3,0,0,3,0.65,14,11
178_20,20,20,int autoNumberStart = column.getAutoNumberStart() == -1 ? 1 : column.getAutoNumberStart();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.35,15,12
178_21,21,21,"createTableStatement.append("" IDENTITY("" + autoNumberStart + "", 1)"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,3,0.73,16,13
178_24,24,24,first = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.29,19,15
178_27,27,27,List<Column> primaryKeys = primaryKeysForTable(table);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.55,22,16
178_29,29,32,"if (!primaryKeys.isEmpty()) {
createTableStatement.append("", "");
createTableStatement.append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeys)));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,4,3,0,0,3,0.72,24,17
178_30,30,30,"createTableStatement.append("", "");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.83,25,17
178_31,31,31,"createTableStatement.append(buildPrimaryKeyConstraint(table.getName(), namesOfColumns(primaryKeys)));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,3,0.71,26,18
178_34,34,34,"createTableStatement.append("")"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,3,0.83,29,20
178_36,36,36,statements.add(createTableStatement.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,3,0.79,31,21
178_38,38,38,return statements;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.55,33,22
163_1,1,1,"    protected RequestHandle sendRequest(DefaultHttpClient client, HttpContext httpContext, HttpUriRequest uriRequest, String contentType, ResponseHandlerInterface responseHandler, Context context) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.51,29,18
163_2,2,4,"if (uriRequest == null) {
throw new IllegalArgumentException(""HttpUriRequest must not be null"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,2,1,0,1,0.52,26,16
163_3,3,3,"throw new IllegalArgumentException(""HttpUriRequest must not be null"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,1,0,1,0.5,27,16
163_6,6,8,"if (responseHandler == null) {
throw new IllegalArgumentException(""ResponseHandler must not be null"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,1,0,0,0.31,22,14
163_7,7,7,"throw new IllegalArgumentException(""ResponseHandler must not be null"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,1,0,0,0.31,23,14
163_10,10,12,"if (responseHandler.getUseSynchronousMode() && !responseHandler.getUsePoolThread()) {
throw new IllegalArgumentException(""Synchronous ResponseHandler used in AsyncHttpClient. You should create your response handler in a looper thread or use SyncHttpClient instead."");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,1,0,0,0.32,18,12
163_11,11,11,"throw new IllegalArgumentException(""Synchronous ResponseHandler used in AsyncHttpClient. You should create your response handler in a looper thread or use SyncHttpClient instead."");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,1,0,0,0.33,19,12
163_14,14,20,"if (contentType != null) {
if (uriRequest instanceof HttpEntityEnclosingRequestBase && ((HttpEntityEnclosingRequestBase) uriRequest).getEntity() != null && uriRequest.containsHeader(HEADER_CONTENT_TYPE)) {
log.w(LOG_TAG, ""Passed contentType will be ignored because HttpEntity sets content type"");
} else {
uriRequest.setHeader(HEADER_CONTENT_TYPE, contentType);
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,1,4,2,1,0,1,0.52,10,7
163_15,15,19,"if (uriRequest instanceof HttpEntityEnclosingRequestBase && ((HttpEntityEnclosingRequestBase) uriRequest).getEntity() != null && uriRequest.containsHeader(HEADER_CONTENT_TYPE)) {
log.w(LOG_TAG, ""Passed contentType will be ignored because HttpEntity sets content type"");
} else {
uriRequest.setHeader(HEADER_CONTENT_TYPE, contentType);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,4,2,1,0,1,0.52,11,7
163_16,16,16,"log.w(LOG_TAG, ""Passed contentType will be ignored because HttpEntity sets content type"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.28,14,9
163_17,17,17,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,-0.03,13,8
163_18,18,18,"uriRequest.setHeader(HEADER_CONTENT_TYPE, contentType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.49,12,7
163_22,22,22,responseHandler.setRequestHeaders(uriRequest.getAllHeaders());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,1,0.56,8,6
163_23,23,23,responseHandler.setRequestURI(uriRequest.getURI());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,1,0.55,7,5
163_25,25,25,"AsyncHttpRequest request = newAsyncHttpRequest(client, httpContext, uriRequest, contentType, responseHandler, context);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,1,0.54,5,4
163_26,26,26,threadPool.submit(request);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.56,4,3
163_27,27,27,RequestHandle requestHandle = new RequestHandle(request);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,4,2,1,0,1,0.62,3,2
163_29,29,47,"if (context != null) {
List<RequestHandle> requestList;
synchronized (requestMap) {
requestList = requestMap.get(context);
if (requestList == null) {
requestList = Collections.synchronizedList(new LinkedList<RequestHandle>());
requestMap.put(context, requestList);
}
}

requestList.add(requestHandle);

Iterator<RequestHandle> iterator = requestList.iterator();
while (iterator.hasNext()) {
if (iterator.next().shouldBeGarbageCollected()) {
iterator.remove();
}
}
}",1,0,0,0,0,0,0,0,0,11,3,19,0,0,1,1,4,2,1,0,3,0.75,0,0
163_30,30,30,List<RequestHandle> requestList;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.59,0,0
163_31,31,31,synchronized (requestMap) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.79,0,0
163_32,32,32,requestList = requestMap.get(context);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.72,1,0
163_33,33,36,"if (requestList == null) {
requestList = Collections.synchronizedList(new LinkedList<RequestHandle>());
requestMap.put(context, requestList);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,4,2,1,0,2,0.67,2,1
163_34,34,34,requestList = Collections.synchronizedList(new LinkedList<RequestHandle>());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.53,3,2
163_35,35,35,"requestMap.put(context, requestList);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.74,4,3
163_39,39,39,requestList.add(requestHandle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,2,0.76,8,5
163_41,41,41,Iterator<RequestHandle> iterator = requestList.iterator();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,1,0.55,10,6
163_42,42,46,"while (iterator.hasNext()) {
if (iterator.next().shouldBeGarbageCollected()) {
iterator.remove();
}
}",0,1,0,0,0,0,0,0,0,2,2,5,0,1,0,0,4,2,1,0,0,0.26,11,6
163_43,43,45,"if (iterator.next().shouldBeGarbageCollected()) {
iterator.remove();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,2,1,0,0,0.26,12,7
163_44,44,44,iterator.remove();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.26,13,8
163_49,49,49,return requestHandle;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,1,0,1,0.51,18,10
162_1,1,1,"public static String getUrlWithQueryString(boolean shouldEncodeUrl, String url, RequestParams params) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,0,2,0,2,0.57,17,12
162_2,2,3,"if (url == null)
return null;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,1,5,0,2,0,0,0.4,15,10
162_3,3,3,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,5,0,2,0,0,0.34,15,10
162_5,5,14,"if (shouldEncodeUrl) {
try {
String decodedURL = URLDecoder.decode(url, ""UTF-8"");
URL _url = new URL(decodedURL);
URI _uri = new URI(_url.getProtocol(), _url.getUserInfo(), _url.getHost(), _url.getPort(), _url.getPath(), _url.getQuery(), _url.getRef());
url = _uri.toASCIIString();
} catch (Exception ex) {
log.e(LOG_TAG, ""getUrlWithQueryString encoding URL"", ex);
}
}",1,0,0,0,0,0,0,0,0,7,2,10,0,0,1,1,5,0,2,0,2,0.53,4,2
162_6,6,13,"try {
String decodedURL = URLDecoder.decode(url, ""UTF-8"");
URL _url = new URL(decodedURL);
URI _uri = new URI(_url.getProtocol(), _url.getUserInfo(), _url.getHost(), _url.getPort(), _url.getPath(), _url.getQuery(), _url.getRef());
url = _uri.toASCIIString();
} catch (Exception ex) {
log.e(LOG_TAG, ""getUrlWithQueryString encoding URL"", ex);
}",0,0,0,0,1,0,0,0,0,6,1,8,0,0,0,0,5,0,2,0,2,0.53,5,2
162_7,7,7,"String decodedURL = URLDecoder.decode(url, ""UTF-8"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,0,2,0,1,0.5,11,7
162_8,8,8,URL _url = new URL(decodedURL);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,0,2,0,0,0.41,10,6
162_9,9,9,"URI _uri = new URI(_url.getProtocol(), _url.getUserInfo(), _url.getHost(), _url.getPort(), _url.getPath(), _url.getQuery(), _url.getRef());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,0,2,0,1,0.44,9,5
162_10,10,10,url = _uri.toASCIIString();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,0,2,0,1,0.52,8,4
162_11,11,11,} catch (Exception ex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,0,2,0,0,0.3,7,3
162_12,12,12,"log.e(LOG_TAG, ""getUrlWithQueryString encoding URL"", ex);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,0,2,0,2,0.53,6,2
162_16,16,23,"if (params != null) {
String paramString = params.getParamString().trim();

if (!paramString.equals("""") && !paramString.equals(""?"")) {
url += url.contains(""?"") ? ""&"" : ""?"";
url += paramString;
}
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,1,1,5,0,2,0,2,0.62,0,0
162_17,17,17,String paramString = params.getParamString().trim();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,0,2,0,1,0.54,1,0
162_19,19,22,"if (!paramString.equals("""") && !paramString.equals(""?"")) {
url += url.contains(""?"") ? ""&"" : ""?"";
url += paramString;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,5,0,2,0,2,0.64,0,0
162_20,20,20,"url += url.contains(""?"") ? ""&"" : ""?"";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,0,2,0,0,0.37,1,0
162_21,21,21,url += paramString;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,0,2,0,1,0.56,2,1
162_25,25,25,return url;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,0,2,0,0,0.4,6,3
161_1,1,2,"@Override
public void onSuccess(final int statusCode, final Header[] headers, final byte[] responseBody) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,2,1,0,3,0.62,1,0
161_4,4,4,"saveBytesOnDisk(destFile, responseBody);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,2,1,0,5,0.93,0,0
161_6,6,6,runOnUiThread(new Runnable() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,0,0.24,2,1
161_8,8,9,"@Override
public void run() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,2,1,0,0,0.27,4,2
161_10,10,10,"debugStatusCode(LOG_TAG, statusCode);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.33,6,3
161_11,11,11,"debugHeaders(LOG_TAG, headers);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.34,7,3
161_12,12,14,"if (responseBody != null) {
addView(getColoredView(LIGHTGREEN, ""Request succeeded ("" + statusCode + ""): (bytes="" + destFile.length() + ""), path: "" + destFile.getAbsolutePath()));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,2,1,0,3,0.66,8,4
161_13,13,13,"addView(getColoredView(LIGHTGREEN, ""Request succeeded ("" + statusCode + ""): (bytes="" + destFile.length() + ""), path: "" + destFile.getAbsolutePath()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.51,9,5
136_1,1,2,"    @NonNull
private synchronized Map<Long, AlbumSlice> getOrCreateAlbum(@NonNull final Song song) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.53,35,23
136_3,3,3,Set<Artist> artists = getOrCreateArtistByName(song);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.67,34,22
136_5,5,5,Set<Long> albumIdsSameName = albumsByName.get(song.albumName);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,3,3,0,0,0,0.62,32,21
136_6,6,14,"if (albumIdsSameName != null) {
for (long id : albumIdsSameName) {
AlbumSlice byMainArtist = albumsByAlbumIdAndArtistId.get(id).get(song.artistId);
if (byMainArtist != null) {
song.albumId = byMainArtist.getId();
break;
}
}
}",1,0,0,0,0,0,0,0,0,5,3,9,1,1,0,1,3,3,0,0,1,0.61,23,15
136_7,7,13,"for (long id : albumIdsSameName) {
AlbumSlice byMainArtist = albumsByAlbumIdAndArtistId.get(id).get(song.artistId);
if (byMainArtist != null) {
song.albumId = byMainArtist.getId();
break;
}
}",0,0,0,1,0,0,0,0,0,4,2,7,0,0,0,0,3,3,0,0,1,0.61,24,15
136_8,8,8,AlbumSlice byMainArtist = albumsByAlbumIdAndArtistId.get(id).get(song.artistId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.64,29,18
136_9,9,12,"if (byMainArtist != null) {
song.albumId = byMainArtist.getId();
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,3,3,0,0,1,0.6,25,15
136_10,10,10,song.albumId = byMainArtist.getId();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.63,27,16
136_11,11,11,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,3,0,0,0,0.06,26,15
136_16,16,16,"Map<Long, AlbumSlice> albumsByArtist = albumsByAlbumIdAndArtistId.get(song.albumId);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,3,3,0,0,1,0.66,21,14
136_17,17,20,"if (albumsByArtist == null) {
albumsByAlbumIdAndArtistId.put(song.albumId, new HashMap<>());
albumsByArtist = albumsByAlbumIdAndArtistId.get(song.albumId);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,1,3,3,0,0,1,0.67,17,11
136_18,18,18,"albumsByAlbumIdAndArtistId.put(song.albumId, new HashMap<>());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.64,19,12
136_19,19,19,albumsByArtist = albumsByAlbumIdAndArtistId.get(song.albumId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.7,18,11
136_22,22,22,"Map<Long, AlbumSlice> result = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.47,15,10
136_23,23,39,"for (Artist artist : artists) {
if (!albumsByArtist.containsKey(artist.id)) {
AlbumSlice album = new AlbumSlice();
albumsByArtist.put(artist.id, album);

Set<Long> albumsId = albumsByName.get(song.albumName);
if (albumsId == null) {
albumsByName.put(song.albumName, new HashSet<>());
albumsId = albumsByName.get(song.albumName);
}
albumsId.add(song.albumId);

artist.albums.add(album);
}

result.put(artist.id, albumsByArtist.get(artist.id));
}",0,0,0,1,0,0,0,0,0,10,3,17,0,1,0,1,3,3,0,0,1,0.67,0,0
136_24,24,36,"if (!albumsByArtist.containsKey(artist.id)) {
AlbumSlice album = new AlbumSlice();
albumsByArtist.put(artist.id, album);

Set<Long> albumsId = albumsByName.get(song.albumName);
if (albumsId == null) {
albumsByName.put(song.albumName, new HashSet<>());
albumsId = albumsByName.get(song.albumName);
}
albumsId.add(song.albumId);

artist.albums.add(album);
}",1,0,0,0,0,0,0,0,0,8,2,13,0,0,0,1,3,3,0,0,1,0.66,1,0
136_25,25,25,AlbumSlice album = new AlbumSlice();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.55,12,7
136_26,26,26,"albumsByArtist.put(artist.id, album);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,1,0.7,11,6
136_28,28,28,Set<Long> albumsId = albumsByName.get(song.albumName);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,3,3,0,0,0,0.62,9,5
136_29,29,32,"if (albumsId == null) {
albumsByName.put(song.albumName, new HashSet<>());
albumsId = albumsByName.get(song.albumName);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,3,3,0,0,0,0.64,5,2
136_30,30,30,"albumsByName.put(song.albumName, new HashSet<>());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.62,7,3
136_31,31,31,albumsId = albumsByName.get(song.albumName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.67,6,2
136_33,33,33,albumsId.add(song.albumId);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.63,4,1
136_35,35,35,artist.albums.add(album);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.7,2,0
136_38,38,38,"result.put(artist.id, albumsByArtist.get(artist.id));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.62,0,0
136_41,41,41,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.16,3,1
135_1,1,2,"    @NonNull
private synchronized Map<Long, AlbumSlice> getOrCreateAlbum(@NonNull final Song song) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.48,21,14
135_3,3,3,Set<Artist> artists = getOrCreateArtistByName(song);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.58,20,13
135_5,5,5,Set<Long> albumIdsSameName = albumsByName.get(song.albumName);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,3,3,0,0,0,0.54,18,12
135_6,6,14,"if (albumIdsSameName != null) {
for (long id : albumIdsSameName) {
AlbumSlice byMainArtist = albumsByAlbumIdAndArtistId.get(id).get(song.artistId);
if (byMainArtist != null) {
song.albumId = byMainArtist.getId();
break;
}
}
}",1,0,0,0,0,0,0,0,0,5,3,9,1,1,0,1,3,3,0,0,1,0.57,9,6
135_7,7,13,"for (long id : albumIdsSameName) {
AlbumSlice byMainArtist = albumsByAlbumIdAndArtistId.get(id).get(song.artistId);
if (byMainArtist != null) {
song.albumId = byMainArtist.getId();
break;
}
}",0,0,0,1,0,0,0,0,0,4,2,7,0,0,0,0,3,3,0,0,1,0.57,10,6
135_8,8,8,AlbumSlice byMainArtist = albumsByAlbumIdAndArtistId.get(id).get(song.artistId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.59,15,9
135_9,9,12,"if (byMainArtist != null) {
song.albumId = byMainArtist.getId();
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,3,3,0,0,1,0.57,11,6
135_10,10,10,song.albumId = byMainArtist.getId();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.59,13,7
135_11,11,11,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,3,0,0,0,0.24,12,6
135_16,16,16,"Map<Long, AlbumSlice> albumsByArtist = albumsByAlbumIdAndArtistId.get(song.albumId);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,3,3,0,0,1,0.58,7,5
135_17,17,20,"if (albumsByArtist == null) {
albumsByAlbumIdAndArtistId.put(song.albumId, new HashMap<>());
albumsByArtist = albumsByAlbumIdAndArtistId.get(song.albumId);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,1,3,3,0,0,1,0.59,3,2
135_18,18,18,"albumsByAlbumIdAndArtistId.put(song.albumId, new HashMap<>());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.56,5,3
135_19,19,19,albumsByArtist = albumsByAlbumIdAndArtistId.get(song.albumId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.61,4,2
135_22,22,22,"Map<Long, AlbumSlice> result = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.44,1,1
135_23,23,39,"for (Artist artist : artists) {
if (!albumsByArtist.containsKey(artist.id)) {
AlbumSlice album = new AlbumSlice();
albumsByArtist.put(artist.id, album);

Set<Long> albumsId = albumsByName.get(song.albumName);
if (albumsId == null) {
albumsByName.put(song.albumName, new HashSet<>());
albumsId = albumsByName.get(song.albumName);
}
albumsId.add(song.albumId);

artist.albums.add(album);
}

result.put(artist.id, albumsByArtist.get(artist.id));
}",0,0,0,1,0,0,0,0,0,10,3,17,0,1,0,1,3,3,0,0,1,0.61,0,0
135_24,24,36,"if (!albumsByArtist.containsKey(artist.id)) {
AlbumSlice album = new AlbumSlice();
albumsByArtist.put(artist.id, album);

Set<Long> albumsId = albumsByName.get(song.albumName);
if (albumsId == null) {
albumsByName.put(song.albumName, new HashSet<>());
albumsId = albumsByName.get(song.albumName);
}
albumsId.add(song.albumId);

artist.albums.add(album);
}",1,0,0,0,0,0,0,0,0,8,2,13,0,0,0,1,3,3,0,0,1,0.61,0,0
135_25,25,25,AlbumSlice album = new AlbumSlice();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.55,1,0
135_26,26,26,"albumsByArtist.put(artist.id, album);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,1,0.64,2,1
135_28,28,28,Set<Long> albumsId = albumsByName.get(song.albumName);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,3,3,0,0,0,0.54,4,3
135_29,29,32,"if (albumsId == null) {
albumsByName.put(song.albumName, new HashSet<>());
albumsId = albumsByName.get(song.albumName);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,3,3,0,0,0,0.56,5,3
135_30,30,30,"albumsByName.put(song.albumName, new HashSet<>());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.56,6,4
135_31,31,31,albumsId = albumsByName.get(song.albumName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.59,7,5
135_33,33,33,albumsId.add(song.albumId);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.58,9,7
135_35,35,35,artist.albums.add(album);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.66,11,8
135_38,38,38,"result.put(artist.id, albumsByArtist.get(artist.id));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.56,14,9
135_41,41,41,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.14,17,10
134_1,1,2,"    @NonNull
private synchronized Map<Long, AlbumSlice> getOrCreateAlbum(@NonNull final Song song) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.29,13,8
134_3,3,3,Set<Artist> artists = getOrCreateArtistByName(song);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.31,12,7
134_5,5,5,Set<Long> albumIdsSameName = albumsByName.get(song.albumName);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,2,2,0,0,1,0.54,10,6
134_6,6,14,"if (albumIdsSameName != null) {
for (long id : albumIdsSameName) {
AlbumSlice byMainArtist = albumsByAlbumIdAndArtistId.get(id).get(song.artistId);
if (byMainArtist != null) {
song.albumId = byMainArtist.getId();
break;
}
}
}",1,0,0,0,0,0,0,0,0,5,3,9,1,1,0,1,2,2,0,0,1,0.58,1,0
134_7,7,13,"for (long id : albumIdsSameName) {
AlbumSlice byMainArtist = albumsByAlbumIdAndArtistId.get(id).get(song.artistId);
if (byMainArtist != null) {
song.albumId = byMainArtist.getId();
break;
}
}",0,0,0,1,0,0,0,0,0,4,2,7,0,0,0,0,2,2,0,0,1,0.58,2,0
134_8,8,8,AlbumSlice byMainArtist = albumsByAlbumIdAndArtistId.get(id).get(song.artistId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.58,7,3
134_9,9,12,"if (byMainArtist != null) {
song.albumId = byMainArtist.getId();
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,2,2,0,0,1,0.54,3,0
134_10,10,10,song.albumId = byMainArtist.getId();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.59,5,1
134_11,11,11,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,2,0,0,0,0.15,4,0
134_16,16,16,"Map<Long, AlbumSlice> albumsByArtist = albumsByAlbumIdAndArtistId.get(song.albumId);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,2,2,0,0,1,0.56,0,0
134_17,17,20,"if (albumsByArtist == null) {
albumsByAlbumIdAndArtistId.put(song.albumId, new HashMap<>());
albumsByArtist = albumsByAlbumIdAndArtistId.get(song.albumId);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,1,2,2,0,0,1,0.58,1,0
134_18,18,18,"albumsByAlbumIdAndArtistId.put(song.albumId, new HashMap<>());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.59,2,1
134_19,19,19,albumsByArtist = albumsByAlbumIdAndArtistId.get(song.albumId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.6,3,2
134_22,22,22,"Map<Long, AlbumSlice> result = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.31,6,4
134_23,23,39,"for (Artist artist : artists) {
if (!albumsByArtist.containsKey(artist.id)) {
AlbumSlice album = new AlbumSlice();
albumsByArtist.put(artist.id, album);

Set<Long> albumsId = albumsByName.get(song.albumName);
if (albumsId == null) {
albumsByName.put(song.albumName, new HashSet<>());
albumsId = albumsByName.get(song.albumName);
}
albumsId.add(song.albumId);

artist.albums.add(album);
}

result.put(artist.id, albumsByArtist.get(artist.id));
}",0,0,0,1,0,0,0,0,0,10,3,17,0,1,0,1,2,2,0,0,1,0.55,7,4
134_24,24,36,"if (!albumsByArtist.containsKey(artist.id)) {
AlbumSlice album = new AlbumSlice();
albumsByArtist.put(artist.id, album);

Set<Long> albumsId = albumsByName.get(song.albumName);
if (albumsId == null) {
albumsByName.put(song.albumName, new HashSet<>());
albumsId = albumsByName.get(song.albumName);
}
albumsId.add(song.albumId);

artist.albums.add(album);
}",1,0,0,0,0,0,0,0,0,8,2,13,0,0,0,1,2,2,0,0,1,0.55,8,5
134_25,25,25,AlbumSlice album = new AlbumSlice();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.28,9,6
134_26,26,26,"albumsByArtist.put(artist.id, album);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,1,0.57,10,7
134_28,28,28,Set<Long> albumsId = albumsByName.get(song.albumName);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,2,2,0,0,1,0.54,12,9
134_29,29,32,"if (albumsId == null) {
albumsByName.put(song.albumName, new HashSet<>());
albumsId = albumsByName.get(song.albumName);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,2,2,0,0,1,0.54,13,9
134_30,30,30,"albumsByName.put(song.albumName, new HashSet<>());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.37,14,10
134_31,31,31,albumsId = albumsByName.get(song.albumName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.56,15,11
134_33,33,33,albumsId.add(song.albumId);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,1,0.61,17,13
134_35,35,35,artist.albums.add(album);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.32,19,14
134_38,38,38,"result.put(artist.id, albumsByArtist.get(artist.id));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,1,0.56,22,15
134_41,41,41,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.22,25,16
133_1,1,2,"    @NonNull
private synchronized Map<Long, AlbumSlice> getOrCreateAlbum(@NonNull final Song song) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,1,0,1,0.48,2,1
133_3,3,3,Set<Artist> artists = getOrCreateArtistByName(song);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,1,0,1,0.64,1,0
133_5,5,5,Set<Long> albumIdsSameName = albumsByName.get(song.albumName);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,5,4,1,0,2,0.67,0,0
133_6,6,14,"if (albumIdsSameName != null) {
for (long id : albumIdsSameName) {
AlbumSlice byMainArtist = albumsByAlbumIdAndArtistId.get(id).get(song.artistId);
if (byMainArtist != null) {
song.albumId = byMainArtist.getId();
break;
}
}
}",1,0,0,0,0,0,0,0,0,5,3,9,1,1,0,1,5,4,1,0,2,0.6,1,0
133_7,7,13,"for (long id : albumIdsSameName) {
AlbumSlice byMainArtist = albumsByAlbumIdAndArtistId.get(id).get(song.artistId);
if (byMainArtist != null) {
song.albumId = byMainArtist.getId();
break;
}
}",0,0,0,1,0,0,0,0,0,4,2,7,0,0,0,0,5,4,1,0,2,0.6,2,1
133_8,8,8,AlbumSlice byMainArtist = albumsByAlbumIdAndArtistId.get(id).get(song.artistId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.57,3,2
133_9,9,12,"if (byMainArtist != null) {
song.albumId = byMainArtist.getId();
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,4,1,0,1,0.53,4,3
133_10,10,10,song.albumId = byMainArtist.getId();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.56,5,4
133_11,11,11,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,4,1,0,0,0.06,6,5
133_16,16,16,"Map<Long, AlbumSlice> albumsByArtist = albumsByAlbumIdAndArtistId.get(song.albumId);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,5,4,1,0,1,0.6,11,7
133_17,17,20,"if (albumsByArtist == null) {
albumsByAlbumIdAndArtistId.put(song.albumId, new HashMap<>());
albumsByArtist = albumsByAlbumIdAndArtistId.get(song.albumId);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,1,5,4,1,0,1,0.61,12,7
133_18,18,18,"albumsByAlbumIdAndArtistId.put(song.albumId, new HashMap<>());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.56,13,8
133_19,19,19,albumsByArtist = albumsByAlbumIdAndArtistId.get(song.albumId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.63,14,9
133_22,22,22,"Map<Long, AlbumSlice> result = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,1,0,1,0.43,17,11
133_23,23,39,"for (Artist artist : artists) {
if (!albumsByArtist.containsKey(artist.id)) {
AlbumSlice album = new AlbumSlice();
albumsByArtist.put(artist.id, album);

Set<Long> albumsId = albumsByName.get(song.albumName);
if (albumsId == null) {
albumsByName.put(song.albumName, new HashSet<>());
albumsId = albumsByName.get(song.albumName);
}
albumsId.add(song.albumId);

artist.albums.add(album);
}

result.put(artist.id, albumsByArtist.get(artist.id));
}",0,0,0,1,0,0,0,0,0,10,3,17,0,1,0,1,5,4,1,0,2,0.66,18,11
133_24,24,36,"if (!albumsByArtist.containsKey(artist.id)) {
AlbumSlice album = new AlbumSlice();
albumsByArtist.put(artist.id, album);

Set<Long> albumsId = albumsByName.get(song.albumName);
if (albumsId == null) {
albumsByName.put(song.albumName, new HashSet<>());
albumsId = albumsByName.get(song.albumName);
}
albumsId.add(song.albumId);

artist.albums.add(album);
}",1,0,0,0,0,0,0,0,0,8,2,13,0,0,0,1,5,4,1,0,2,0.66,19,12
133_25,25,25,AlbumSlice album = new AlbumSlice();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.55,20,13
133_26,26,26,"albumsByArtist.put(artist.id, album);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,1,0,1,0.63,21,14
133_28,28,28,Set<Long> albumsId = albumsByName.get(song.albumName);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,5,4,1,0,2,0.66,23,16
133_29,29,32,"if (albumsId == null) {
albumsByName.put(song.albumName, new HashSet<>());
albumsId = albumsByName.get(song.albumName);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,5,4,1,0,2,0.67,24,16
133_30,30,30,"albumsByName.put(song.albumName, new HashSet<>());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,2,0.65,25,17
133_31,31,31,albumsId = albumsByName.get(song.albumName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,2,0.72,26,18
133_33,33,33,albumsId.add(song.albumId);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,1,0,1,0.57,28,20
133_35,35,35,artist.albums.add(album);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,1,0,1,0.63,30,21
133_38,38,38,"result.put(artist.id, albumsByArtist.get(artist.id));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,1,0,1,0.56,33,22
133_41,41,41,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,4,1,0,0,0.18,36,23
132_1,1,2,"@NonNull
private synchronized Set<Artist> getOrCreateArtistByName(@NonNull final Song song) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,6,1,0,2,0.52,23,13
132_3,3,13,"Function<String, Artist> getOrCreateArtist = (@NonNull final String artistName) -> {
Artist artist = artistsByName.get(artistName);
if (artist == null) {
long artistId = artistsByName.size();
artist = new Artist(artistId, artistName);

artistsByName.put(artistName, artist);
artistsById.put(artistId, artist);
}
return artist;
};",0,0,0,0,0,1,0,0,0,4,2,11,0,0,0,1,10,6,1,0,2,0.66,12,8
132_4,4,4,Artist artist = artistsByName.get(artistName);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,6,1,0,1,0.63,21,11
132_5,5,11,"if (artist == null) {
long artistId = artistsByName.size();
artist = new Artist(artistId, artistName);

artistsByName.put(artistName, artist);
artistsById.put(artistId, artist);
}",1,0,0,0,0,0,0,0,0,1,1,7,0,1,0,0,10,6,1,0,2,0.71,14,9
132_6,6,6,long artistId = artistsByName.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,6,1,0,2,0.66,19,9
132_12,12,12,return artist;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,10,6,1,0,1,0.52,13,8
132_15,15,15,Set<String> names = new HashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,10,6,1,0,0,0.38,10,7
132_16,16,16,names.addAll(song.artistNames);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,10,6,1,0,2,0.59,9,6
132_17,17,17,names.addAll(song.albumArtistNames);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,10,6,1,0,2,0.61,8,5
132_18,18,20,"if (names.size() > 1) {
names.remove("""");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,10,6,1,0,0,0.42,5,3
132_19,19,19,"names.remove("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.45,6,3
132_21,21,21,Set<Artist> artists = new HashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,6,1,0,1,0.52,4,2
132_22,22,24,"for (final String name : names) {
artists.add(getOrCreateArtist.apply(name));
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,10,6,1,0,1,0.5,1,0
132_23,23,23,artists.add(getOrCreateArtist.apply(name));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,1,0.52,2,0
132_26,26,26,Artist mainArtist = getOrCreateArtist.apply(song.artistNames.get(0));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,10,6,1,0,2,0.57,0,0
132_27,27,27,song.artistId = mainArtist.getId();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,10,6,1,0,3,0.69,1,0
132_29,29,29,return artists;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,10,6,1,0,1,0.52,3,2
131_1,1,1,    synchronized void removeSongById(long songId) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.63,51,34
131_2,2,2,Song song = songsById.get(songId);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,3,0,0,1,0.65,50,33
131_3,3,54,"if (song != null) {
Map<Long, AlbumSlice> impactedAlbumsByArtist = albumsByAlbumIdAndArtistId.get(song.albumId);
Set<Long> orphanArtists = new HashSet<>();
for (Map.Entry<Long, AlbumSlice> pair : impactedAlbumsByArtist.entrySet()) {
Album album = pair.getValue();
if (album.songs.remove(song)) {
if (album.songs.isEmpty()) {
orphanArtists.add(pair.getKey());
}
}
}

for (Long artistId : orphanArtists) {
Artist artist = artistsById.get(artistId);

Album album = impactedAlbumsByArtist.get(artistId);
impactedAlbumsByArtist.remove(artistId);

if (artist == null) continue;

artist.albums.remove(album);
if (artist.albums.isEmpty()) {
artistsById.remove(artist.id);
artistsByName.remove(artist.name);
}
}
if (impactedAlbumsByArtist.isEmpty()) {
albumsByAlbumIdAndArtistId.remove(song.albumId);

Set<Long> albumsId = albumsByName.get(song.albumName);
albumsId.remove(song.albumId);
if (albumsId.isEmpty()) {
albumsByName.remove(song.albumName);
}
}

Genre genre = genresByName.get(song.genre);
if (genre != null) {
ArrayList<Song> songs = songsByGenreId.get(genre.id);
if (songs != null) {
songs.remove(song);
if (songs.isEmpty()) {
genresByName.remove(genre.name);
songsByGenreId.remove(genre.id);
} else {
genre.songCount = songs.size();
}
}
}

songsById.remove(songId);
}",1,0,0,0,0,0,0,0,0,33,4,52,1,1,0,0,4,3,0,0,2,0.7,0,0
131_4,4,4,"Map<Long, AlbumSlice> impactedAlbumsByArtist = albumsByAlbumIdAndArtistId.get(song.albumId);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.61,48,31
131_5,5,5,Set<Long> orphanArtists = new HashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.51,47,30
131_6,6,13,"for (Map.Entry<Long, AlbumSlice> pair : impactedAlbumsByArtist.entrySet()) {
Album album = pair.getValue();
if (album.songs.remove(song)) {
if (album.songs.isEmpty()) {
orphanArtists.add(pair.getKey());
}
}
}",0,0,0,1,0,0,0,0,0,4,3,8,0,1,0,1,4,3,0,0,2,0.67,39,25
131_7,7,7,Album album = pair.getValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.52,45,28
131_8,8,12,"if (album.songs.remove(song)) {
if (album.songs.isEmpty()) {
orphanArtists.add(pair.getKey());
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,1,0,0,4,3,0,0,2,0.72,40,25
131_9,9,11,"if (album.songs.isEmpty()) {
orphanArtists.add(pair.getKey());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,1,0.6,41,25
131_10,10,10,orphanArtists.add(pair.getKey());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.55,42,25
131_15,15,28,"for (Long artistId : orphanArtists) {
Artist artist = artistsById.get(artistId);

Album album = impactedAlbumsByArtist.get(artistId);
impactedAlbumsByArtist.remove(artistId);

if (artist == null) continue;

artist.albums.remove(album);
if (artist.albums.isEmpty()) {
artistsById.remove(artist.id);
artistsByName.remove(artist.name);
}
}",0,0,0,1,0,0,0,0,0,8,2,14,1,1,1,0,4,3,0,0,1,0.72,24,16
131_16,16,16,Artist artist = artistsById.get(artistId);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.6,36,23
131_18,18,18,Album album = impactedAlbumsByArtist.get(artistId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.62,34,22
131_19,19,19,impactedAlbumsByArtist.remove(artistId);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,1,0.74,33,21
131_21,21,21,if (artist == null) continue;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.51,31,20
131_23,23,23,artist.albums.remove(album);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,4,3,0,0,1,0.79,29,19
131_24,24,27,"if (artist.albums.isEmpty()) {
artistsById.remove(artist.id);
artistsByName.remove(artist.name);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,4,3,0,0,1,0.7,25,16
131_25,25,25,artistsById.remove(artist.id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,1,0.68,27,17
131_26,26,26,artistsByName.remove(artist.name);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,1,0.72,26,16
131_29,29,37,"if (impactedAlbumsByArtist.isEmpty()) {
albumsByAlbumIdAndArtistId.remove(song.albumId);

Set<Long> albumsId = albumsByName.get(song.albumName);
albumsId.remove(song.albumId);
if (albumsId.isEmpty()) {
albumsByName.remove(song.albumName);
}
}",1,0,0,0,0,0,0,0,0,5,2,9,1,1,0,1,4,3,0,0,2,0.68,15,10
131_30,30,30,albumsByAlbumIdAndArtistId.remove(song.albumId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,2,0.7,22,14
131_32,32,32,Set<Long> albumsId = albumsByName.get(song.albumName);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,1,0.59,20,13
131_33,33,33,albumsId.remove(song.albumId);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,2,0.71,19,12
131_34,34,36,"if (albumsId.isEmpty()) {
albumsByName.remove(song.albumName);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,3,0,0,2,0.69,16,10
131_35,35,35,albumsByName.remove(song.albumName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.75,17,10
131_39,39,39,Genre genre = genresByName.get(song.genre);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,4,3,0,0,1,0.67,13,9
131_40,40,51,"if (genre != null) {
ArrayList<Song> songs = songsByGenreId.get(genre.id);
if (songs != null) {
songs.remove(song);
if (songs.isEmpty()) {
genresByName.remove(genre.name);
songsByGenreId.remove(genre.id);
} else {
genre.songCount = songs.size();
}
}
}",1,0,0,0,0,0,0,0,0,8,3,12,1,1,0,1,4,3,0,0,2,0.7,1,0
131_41,41,41,ArrayList<Song> songs = songsByGenreId.get(genre.id);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.62,11,7
131_42,42,50,"if (songs != null) {
songs.remove(song);
if (songs.isEmpty()) {
genresByName.remove(genre.name);
songsByGenreId.remove(genre.id);
} else {
genre.songCount = songs.size();
}
}",1,0,0,0,0,0,0,0,0,6,2,9,0,1,0,0,4,3,0,0,2,0.71,2,0
131_43,43,43,songs.remove(song);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,2,0.85,9,5
131_44,44,49,"if (songs.isEmpty()) {
genresByName.remove(genre.name);
songsByGenreId.remove(genre.id);
} else {
genre.songCount = songs.size();
}",1,0,0,0,0,0,0,0,0,4,1,6,1,1,0,0,4,3,0,0,2,0.69,3,0
131_45,45,45,genresByName.remove(genre.name);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,1,0.67,7,3
131_46,46,46,songsByGenreId.remove(genre.id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,2,0.7,6,2
131_47,47,47,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.19,5,1
131_48,48,48,genre.songCount = songs.size();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.65,4,0
131_53,53,53,songsById.remove(songId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,2,0.71,0,0
130_1,1,1,    synchronized void removeSongById(long songId) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.67,37,24
130_2,2,2,Song song = songsById.get(songId);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,4,0,0,1,0.7,36,23
130_3,3,54,"if (song != null) {
Map<Long, AlbumSlice> impactedAlbumsByArtist = albumsByAlbumIdAndArtistId.get(song.albumId);
Set<Long> orphanArtists = new HashSet<>();
for (Map.Entry<Long, AlbumSlice> pair : impactedAlbumsByArtist.entrySet()) {
Album album = pair.getValue();
if (album.songs.remove(song)) {
if (album.songs.isEmpty()) {
orphanArtists.add(pair.getKey());
}
}
}

for (Long artistId : orphanArtists) {
Artist artist = artistsById.get(artistId);

Album album = impactedAlbumsByArtist.get(artistId);
impactedAlbumsByArtist.remove(artistId);

if (artist == null) continue;

artist.albums.remove(album);
if (artist.albums.isEmpty()) {
artistsById.remove(artist.id);
artistsByName.remove(artist.name);
}
}
if (impactedAlbumsByArtist.isEmpty()) {
albumsByAlbumIdAndArtistId.remove(song.albumId);

Set<Long> albumsId = albumsByName.get(song.albumName);
albumsId.remove(song.albumId);
if (albumsId.isEmpty()) {
albumsByName.remove(song.albumName);
}
}

Genre genre = genresByName.get(song.genre);
if (genre != null) {
ArrayList<Song> songs = songsByGenreId.get(genre.id);
if (songs != null) {
songs.remove(song);
if (songs.isEmpty()) {
genresByName.remove(genre.name);
songsByGenreId.remove(genre.id);
} else {
genre.songCount = songs.size();
}
}
}

songsById.remove(songId);
}",1,0,0,0,0,0,0,0,0,33,4,52,1,1,0,0,4,4,0,0,3,0.76,0,0
130_4,4,4,"Map<Long, AlbumSlice> impactedAlbumsByArtist = albumsByAlbumIdAndArtistId.get(song.albumId);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.67,34,21
130_5,5,5,Set<Long> orphanArtists = new HashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.55,33,20
130_6,6,13,"for (Map.Entry<Long, AlbumSlice> pair : impactedAlbumsByArtist.entrySet()) {
Album album = pair.getValue();
if (album.songs.remove(song)) {
if (album.songs.isEmpty()) {
orphanArtists.add(pair.getKey());
}
}
}",0,0,0,1,0,0,0,0,0,4,3,8,0,1,0,1,4,4,0,0,2,0.71,25,15
130_7,7,7,Album album = pair.getValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.6,31,18
130_8,8,12,"if (album.songs.remove(song)) {
if (album.songs.isEmpty()) {
orphanArtists.add(pair.getKey());
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,1,0,0,4,4,0,0,2,0.75,26,15
130_9,9,11,"if (album.songs.isEmpty()) {
orphanArtists.add(pair.getKey());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,4,0,0,1,0.64,27,15
130_10,10,10,orphanArtists.add(pair.getKey());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.59,28,15
130_15,15,28,"for (Long artistId : orphanArtists) {
Artist artist = artistsById.get(artistId);

Album album = impactedAlbumsByArtist.get(artistId);
impactedAlbumsByArtist.remove(artistId);

if (artist == null) continue;

artist.albums.remove(album);
if (artist.albums.isEmpty()) {
artistsById.remove(artist.id);
artistsByName.remove(artist.name);
}
}",0,0,0,1,0,0,0,0,0,8,2,14,1,1,1,0,4,4,0,0,1,0.76,10,6
130_16,16,16,Artist artist = artistsById.get(artistId);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.66,22,13
130_18,18,18,Album album = impactedAlbumsByArtist.get(artistId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.69,20,12
130_19,19,19,impactedAlbumsByArtist.remove(artistId);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,4,0,0,1,0.8,19,11
130_21,21,21,if (artist == null) continue;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.55,17,10
130_23,23,23,artist.albums.remove(album);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,4,4,0,0,1,0.85,15,9
130_24,24,27,"if (artist.albums.isEmpty()) {
artistsById.remove(artist.id);
artistsByName.remove(artist.name);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,4,4,0,0,1,0.77,11,6
130_25,25,25,artistsById.remove(artist.id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,1,0.74,13,7
130_26,26,26,artistsByName.remove(artist.name);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,1,0.81,12,6
130_29,29,37,"if (impactedAlbumsByArtist.isEmpty()) {
albumsByAlbumIdAndArtistId.remove(song.albumId);

Set<Long> albumsId = albumsByName.get(song.albumName);
albumsId.remove(song.albumId);
if (albumsId.isEmpty()) {
albumsByName.remove(song.albumName);
}
}",1,0,0,0,0,0,0,0,0,5,2,9,1,1,0,1,4,4,0,0,2,0.75,1,0
130_30,30,30,albumsByAlbumIdAndArtistId.remove(song.albumId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,2,0.76,8,4
130_32,32,32,Set<Long> albumsId = albumsByName.get(song.albumName);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,1,0.65,6,3
130_33,33,33,albumsId.remove(song.albumId);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,2,0.76,5,2
130_34,34,36,"if (albumsId.isEmpty()) {
albumsByName.remove(song.albumName);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,4,0,0,2,0.76,2,0
130_35,35,35,albumsByName.remove(song.albumName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.82,3,0
130_39,39,39,Genre genre = genresByName.get(song.genre);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,4,4,0,0,2,0.8,0,0
130_40,40,51,"if (genre != null) {
ArrayList<Song> songs = songsByGenreId.get(genre.id);
if (songs != null) {
songs.remove(song);
if (songs.isEmpty()) {
genresByName.remove(genre.name);
songsByGenreId.remove(genre.id);
} else {
genre.songCount = songs.size();
}
}
}",1,0,0,0,0,0,0,0,0,8,3,12,1,1,0,1,4,4,0,0,3,0.79,1,0
130_41,41,41,ArrayList<Song> songs = songsByGenreId.get(genre.id);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,2,0.71,2,1
130_42,42,50,"if (songs != null) {
songs.remove(song);
if (songs.isEmpty()) {
genresByName.remove(genre.name);
songsByGenreId.remove(genre.id);
} else {
genre.songCount = songs.size();
}
}",1,0,0,0,0,0,0,0,0,6,2,9,0,1,0,0,4,4,0,0,3,0.8,3,2
130_43,43,43,songs.remove(song);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,2,0.9,4,3
130_44,44,49,"if (songs.isEmpty()) {
genresByName.remove(genre.name);
songsByGenreId.remove(genre.id);
} else {
genre.songCount = songs.size();
}",1,0,0,0,0,0,0,0,0,4,1,6,1,1,0,0,4,4,0,0,3,0.79,5,4
130_45,45,45,genresByName.remove(genre.name);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,2,0.82,6,5
130_46,46,46,songsByGenreId.remove(genre.id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,3,0.8,7,6
130_47,47,47,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.19,8,7
130_48,48,48,genre.songCount = songs.size();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.74,9,8
130_53,53,53,songsById.remove(songId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,2,0.76,14,10
128_1,1,1,    synchronized void removeSongById(long songId) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.64,2,2
128_2,2,2,Song song = songsById.get(songId);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,5,0,0,1,0.68,1,1
128_3,3,54,"if (song != null) {
Map<Long, AlbumSlice> impactedAlbumsByArtist = albumsByAlbumIdAndArtistId.get(song.albumId);
Set<Long> orphanArtists = new HashSet<>();
for (Map.Entry<Long, AlbumSlice> pair : impactedAlbumsByArtist.entrySet()) {
Album album = pair.getValue();
if (album.songs.remove(song)) {
if (album.songs.isEmpty()) {
orphanArtists.add(pair.getKey());
}
}
}

for (Long artistId : orphanArtists) {
Artist artist = artistsById.get(artistId);

Album album = impactedAlbumsByArtist.get(artistId);
impactedAlbumsByArtist.remove(artistId);

if (artist == null) continue;

artist.albums.remove(album);
if (artist.albums.isEmpty()) {
artistsById.remove(artist.id);
artistsByName.remove(artist.name);
}
}
if (impactedAlbumsByArtist.isEmpty()) {
albumsByAlbumIdAndArtistId.remove(song.albumId);

Set<Long> albumsId = albumsByName.get(song.albumName);
albumsId.remove(song.albumId);
if (albumsId.isEmpty()) {
albumsByName.remove(song.albumName);
}
}

Genre genre = genresByName.get(song.genre);
if (genre != null) {
ArrayList<Song> songs = songsByGenreId.get(genre.id);
if (songs != null) {
songs.remove(song);
if (songs.isEmpty()) {
genresByName.remove(genre.name);
songsByGenreId.remove(genre.id);
} else {
genre.songCount = songs.size();
}
}
}

songsById.remove(songId);
}",1,0,0,0,0,0,0,0,0,33,4,52,1,1,0,0,5,5,0,0,3,0.73,0,0
128_4,4,4,"Map<Long, AlbumSlice> impactedAlbumsByArtist = albumsByAlbumIdAndArtistId.get(song.albumId);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.67,0,0
128_5,5,5,Set<Long> orphanArtists = new HashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.52,1,0
128_6,6,13,"for (Map.Entry<Long, AlbumSlice> pair : impactedAlbumsByArtist.entrySet()) {
Album album = pair.getValue();
if (album.songs.remove(song)) {
if (album.songs.isEmpty()) {
orphanArtists.add(pair.getKey());
}
}
}",0,0,0,1,0,0,0,0,0,4,3,8,0,1,0,1,5,5,0,0,3,0.69,2,1
128_7,7,7,Album album = pair.getValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.62,3,2
128_8,8,12,"if (album.songs.remove(song)) {
if (album.songs.isEmpty()) {
orphanArtists.add(pair.getKey());
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,1,0,0,5,5,0,0,3,0.74,4,3
128_9,9,11,"if (album.songs.isEmpty()) {
orphanArtists.add(pair.getKey());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,5,0,0,2,0.63,5,4
128_10,10,10,orphanArtists.add(pair.getKey());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.56,6,5
128_15,15,28,"for (Long artistId : orphanArtists) {
Artist artist = artistsById.get(artistId);

Album album = impactedAlbumsByArtist.get(artistId);
impactedAlbumsByArtist.remove(artistId);

if (artist == null) continue;

artist.albums.remove(album);
if (artist.albums.isEmpty()) {
artistsById.remove(artist.id);
artistsByName.remove(artist.name);
}
}",0,0,0,1,0,0,0,0,0,8,2,14,1,1,1,0,5,5,0,0,2,0.74,11,7
128_16,16,16,Artist artist = artistsById.get(artistId);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,5,0,0,0,0.64,12,7
128_18,18,18,Album album = impactedAlbumsByArtist.get(artistId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,1,0.71,14,9
128_19,19,19,impactedAlbumsByArtist.remove(artistId);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,2,0.79,15,9
128_21,21,21,if (artist == null) continue;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,5,0,0,0,0.51,17,11
128_23,23,23,artist.albums.remove(album);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,5,5,0,0,2,0.85,19,12
128_24,24,27,"if (artist.albums.isEmpty()) {
artistsById.remove(artist.id);
artistsByName.remove(artist.name);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,5,5,0,0,2,0.74,20,12
128_25,25,25,artistsById.remove(artist.id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,5,0,0,1,0.71,21,13
128_26,26,26,artistsByName.remove(artist.name);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,5,0,0,1,0.74,22,14
128_29,29,37,"if (impactedAlbumsByArtist.isEmpty()) {
albumsByAlbumIdAndArtistId.remove(song.albumId);

Set<Long> albumsId = albumsByName.get(song.albumName);
albumsId.remove(song.albumId);
if (albumsId.isEmpty()) {
albumsByName.remove(song.albumName);
}
}",1,0,0,0,0,0,0,0,0,5,2,9,1,1,0,1,5,5,0,0,3,0.74,25,16
128_30,30,30,albumsByAlbumIdAndArtistId.remove(song.albumId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,5,0,0,3,0.76,26,16
128_32,32,32,Set<Long> albumsId = albumsByName.get(song.albumName);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,2,0.64,28,18
128_33,33,33,albumsId.remove(song.albumId);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,5,0,0,3,0.76,29,18
128_34,34,36,"if (albumsId.isEmpty()) {
albumsByName.remove(song.albumName);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,5,0,0,3,0.74,30,19
128_35,35,35,albumsByName.remove(song.albumName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,3,0.79,31,20
128_39,39,39,Genre genre = genresByName.get(song.genre);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,5,5,0,0,1,0.68,35,22
128_40,40,51,"if (genre != null) {
ArrayList<Song> songs = songsByGenreId.get(genre.id);
if (songs != null) {
songs.remove(song);
if (songs.isEmpty()) {
genresByName.remove(genre.name);
songsByGenreId.remove(genre.id);
} else {
genre.songCount = songs.size();
}
}
}",1,0,0,0,0,0,0,0,0,8,3,12,1,1,0,1,5,5,0,0,2,0.71,36,22
128_41,41,41,ArrayList<Song> songs = songsByGenreId.get(genre.id);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.64,37,23
128_42,42,50,"if (songs != null) {
songs.remove(song);
if (songs.isEmpty()) {
genresByName.remove(genre.name);
songsByGenreId.remove(genre.id);
} else {
genre.songCount = songs.size();
}
}",1,0,0,0,0,0,0,0,0,6,2,9,0,1,0,0,5,5,0,0,2,0.72,38,24
128_43,43,43,songs.remove(song);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,5,0,0,2,0.85,39,25
128_44,44,49,"if (songs.isEmpty()) {
genresByName.remove(genre.name);
songsByGenreId.remove(genre.id);
} else {
genre.songCount = songs.size();
}",1,0,0,0,0,0,0,0,0,4,1,6,1,1,0,0,5,5,0,0,2,0.71,40,26
128_45,45,45,genresByName.remove(genre.name);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,5,0,0,1,0.69,41,27
128_46,46,46,songsByGenreId.remove(genre.id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,5,0,0,2,0.72,42,28
128_47,47,47,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.22,43,29
128_48,48,48,genre.songCount = songs.size();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.66,44,30
128_53,53,53,songsById.remove(songId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,2,0.72,49,32
126_1,1,1,    synchronized void addSong(@NonNull final Song song) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.47,5,3
126_2,2,2,"Map<Long, AlbumSlice> albums = getOrCreateAlbum(song);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.51,4,2
126_3,3,5,"for (Album album : albums.values()) {
album.songs.add(song);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,3,2,0,0,0,0.58,1,0
126_4,4,4,album.songs.add(song);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.57,2,0
126_7,7,7,Genre genre = getOrCreateGenreByName(song);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.63,0,0
126_8,8,8,ArrayList<Song> songs = songsByGenreId.get(genre.id);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.56,1,0
126_9,9,12,"if (songs != null) {
songs.add(song);
genre.songCount = songs.size();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,3,2,0,0,1,0.57,2,1
126_10,10,10,songs.add(song);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.54,3,2
126_11,11,11,genre.songCount = songs.size();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.59,4,3
126_14,14,14,"songsById.put(song.id, song);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.54,7,5
126_16,16,20,"for (Long artistId : albums.keySet()) {
Artist artist = artistsById.get(artistId);
if (artist == null) continue;
Collections.sort(artist.albums, AlbumLoader.BY_YEAR_DESC);
}",0,0,0,1,0,0,0,0,0,3,1,5,1,1,1,0,3,2,0,0,0,0.57,9,6
126_17,17,17,Artist artist = artistsById.get(artistId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.56,10,6
126_18,18,18,if (artist == null) continue;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.43,11,7
126_19,19,19,"Collections.sort(artist.albums, AlbumLoader.BY_YEAR_DESC);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.61,12,8
126_21,21,23,"for (Album album : albums.values()) {
Collections.sort(album.songs, SongLoader.BY_DISC_TRACK);
}",0,0,0,1,0,0,0,0,0,1,1,3,1,1,0,0,3,2,0,0,0,0.57,14,10
126_22,22,22,"Collections.sort(album.songs, SongLoader.BY_DISC_TRACK);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.53,15,10
119_1,1,2,"@Override
public SearchAggregation apply(final Aggregation aggregation) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,13,9,2,0,0,0.36,5,3
119_4,4,4,Optional<String> setFilterValue = Optional.empty();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,13,9,2,0,1,0.46,3,2
119_5,5,7,"if (appliedFilters.get(aggregation.getAttributeCode()) != null) {
setFilterValue = Optional.ofNullable(appliedFilters.get(aggregation.getAttributeCode()));
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,13,9,2,0,2,0.52,0,0
119_6,6,6,setFilterValue = Optional.ofNullable(appliedFilters.get(aggregation.getAttributeCode()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,2,0,2,0.53,1,0
119_8,8,8,final String identifier = aggregation.getAttributeCode();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,13,9,2,0,1,0.43,0,0
119_10,10,11,"final Optional<FilterAttributeMetadata> attributeMetadata = availableFilters.stream()
.filter(filterCandidate -> filterCandidate.getAttributeCode().equals(identifier)).findFirst();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,13,9,2,0,3,0.61,2,1
119_12,12,12,final boolean filterable = attributeMetadata.isPresent();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,13,9,2,0,2,0.53,4,2
119_14,14,14,SearchAggregationImpl searchAggregation = new SearchAggregationImpl();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,13,9,2,0,0,0.36,6,3
119_15,15,15,searchAggregation.setFilterable(filterable);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,13,9,2,0,1,0.52,7,3
119_16,16,16,searchAggregation.setCount(aggregation.getCount() != null ? aggregation.getCount() : 0);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,13,9,2,0,0,0.31,8,4
119_17,17,17,"searchAggregation.setOptions(getOptions(aggregation, appliedFilters));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,13,9,2,0,1,0.46,9,5
119_18,18,18,searchAggregation.setDisplayLabel(aggregation.getLabel());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,13,9,2,0,0,0.34,10,6
119_19,19,19,searchAggregation.setIdentifier(identifier);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,13,9,2,0,0,0.39,11,7
119_20,20,20,"searchAggregation.setRemoveFilters(getRemoveFilters(aggregation, appliedFilters));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,13,9,2,0,1,0.5,12,8
119_22,22,22,setFilterValue.ifPresent(appliedValue -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,13,9,2,0,1,0.45,14,10
119_23,23,23,searchAggregation.setAppliedFilterValue(appliedValue);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,13,9,2,0,1,0.46,15,10
119_24,24,25,"searchAggregation.setAppliedFilterDisplayLabel(getAppliedFilterDisplayLabel(aggregation, appliedValue, identifier,
attributeMetadata.get()));",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,13,9,2,0,2,0.5,16,11
119_28,28,28,return searchAggregation;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,13,9,2,0,0,0.39,20,13
111_1,1,1,private static InternalDimension stringToInternalDimension(String dimension) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.42,6,6
111_2,2,2,Matcher matcher = DIMENSION_PATTERN.matcher(dimension);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.5,5,5
111_3,3,14,"if (matcher.matches()) {
float value = Float.valueOf(matcher.group(1)).floatValue();
String unit = matcher.group(3).toLowerCase();
Integer dimensionUnit = dimensionConstantLookup.get(unit);
if (dimensionUnit == null) {
throw new NumberFormatException();
} else {
return new InternalDimension(value, dimensionUnit);
}
} else {
throw new NumberFormatException();
}",1,0,0,0,0,0,0,0,0,9,2,12,0,1,0,0,2,1,0,0,1,0.53,0,0
111_4,4,4,float value = Float.valueOf(matcher.group(1)).floatValue();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,1,0,0,0,0.36,3,3
111_5,5,5,String unit = matcher.group(3).toLowerCase();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,1,0,0,0,0.38,2,2
111_6,6,6,Integer dimensionUnit = dimensionConstantLookup.get(unit);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.39,1,1
111_7,7,11,"if (dimensionUnit == null) {
throw new NumberFormatException();
} else {
return new InternalDimension(value, dimensionUnit);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,2,1,0,0,1,0.53,0,0
111_8,8,8,throw new NumberFormatException();,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,1,0,0,1,0.58,0,0
111_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.38,1,0
111_10,10,10,"return new InternalDimension(value, dimensionUnit);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.33,2,1
111_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.38,4,3
111_13,13,13,throw new NumberFormatException();,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,1,0,0,1,0.58,5,3
109_1,1,1,private static InternalDimension stringToInternalDimension(String dimension) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.62,3,3
109_2,2,2,Matcher matcher = DIMENSION_PATTERN.matcher(dimension);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.57,2,2
109_3,3,14,"if (matcher.matches()) {
float value = Float.valueOf(matcher.group(1)).floatValue();
String unit = matcher.group(3).toLowerCase();
Integer dimensionUnit = dimensionConstantLookup.get(unit);
if (dimensionUnit == null) {
throw new NumberFormatException();
} else {
return new InternalDimension(value, dimensionUnit);
}
} else {
throw new NumberFormatException();
}",1,0,0,0,0,0,0,0,0,9,2,12,0,1,0,0,3,2,0,0,2,0.67,0,0
109_4,4,4,float value = Float.valueOf(matcher.group(1)).floatValue();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.53,0,0
109_5,5,5,String unit = matcher.group(3).toLowerCase();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,2,0,0,1,0.54,0,0
109_6,6,6,Integer dimensionUnit = dimensionConstantLookup.get(unit);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,2,0.77,1,0
109_7,7,11,"if (dimensionUnit == null) {
throw new NumberFormatException();
} else {
return new InternalDimension(value, dimensionUnit);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,3,2,0,0,2,0.67,2,1
109_8,8,8,throw new NumberFormatException();,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,0,0,0,0.35,3,2
109_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,4,3
109_10,10,10,"return new InternalDimension(value, dimensionUnit);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.71,5,4
109_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,7,6
109_13,13,13,throw new NumberFormatException();,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,0,0,0,0.35,8,6
107_1,1,1,private static InternalDimension stringToInternalDimension(String dimension) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.42,0,0
107_2,2,2,Matcher matcher = DIMENSION_PATTERN.matcher(dimension);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.68,0,0
107_3,3,14,"if (matcher.matches()) {
float value = Float.valueOf(matcher.group(1)).floatValue();
String unit = matcher.group(3).toLowerCase();
Integer dimensionUnit = dimensionConstantLookup.get(unit);
if (dimensionUnit == null) {
throw new NumberFormatException();
} else {
return new InternalDimension(value, dimensionUnit);
}
} else {
throw new NumberFormatException();
}",1,0,0,0,0,0,0,0,0,9,2,12,0,1,0,0,3,3,0,0,1,0.55,1,0
107_4,4,4,float value = Float.valueOf(matcher.group(1)).floatValue();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,3,0,0,0,0.47,2,1
107_5,5,5,String unit = matcher.group(3).toLowerCase();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,3,0,0,0,0.51,3,2
107_6,6,6,Integer dimensionUnit = dimensionConstantLookup.get(unit);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.32,4,3
107_7,7,11,"if (dimensionUnit == null) {
throw new NumberFormatException();
} else {
return new InternalDimension(value, dimensionUnit);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,3,3,0,0,0,0.39,5,4
107_8,8,8,throw new NumberFormatException();,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,0,0.37,6,5
107_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.31,7,6
107_10,10,10,"return new InternalDimension(value, dimensionUnit);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,8,7
107_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.31,10,9
107_13,13,13,throw new NumberFormatException();,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,0,0.37,11,9
100_1,1,2,"    @Override
public void onPlayStateChanged() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,1,0,0,0.38,2,1
100_3,3,3,super.onPlayStateChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,1,0,0,0.37,1,0
100_5,5,5,adapter.notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,1,0.51,0,0
98_1,1,2,"@Override
protected void onCreate(Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,0,0.36,18,12
98_3,3,3,super.onCreate(savedInstanceState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,5,1,0,0,0.37,17,11
98_5,5,5,ActivitySearchBinding binding = ActivitySearchBinding.inflate(LayoutInflater.from(this));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,5,1,0,0,0.37,15,10
98_6,6,6,recyclerView = binding.recyclerView;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,1,0,0,0.43,14,9
98_7,7,7,toolbar = binding.toolbar;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,1,0,0,0.43,13,8
98_8,8,8,empty = binding.empty;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,1,0,0,0.34,12,7
98_9,9,9,setContentView(binding.getRoot());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,5,1,0,0,0.37,11,6
98_11,11,11,setDrawUnderStatusbar();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,5,1,0,0,0.5,9,5
98_13,13,13,setStatusbarColorAuto();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,5,1,0,1,0.6,7,4
98_14,14,14,setNavigationbarColorAuto();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.58,6,3
98_15,15,15,setTaskDescriptionColorAuto();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,5,1,0,1,0.54,5,2
98_17,17,17,recyclerView.setLayoutManager(new LinearLayoutManager(this));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,5,1,0,0,0.43,3,1
98_19,19,19,"ThemeStyleUtil.getInstance().setHeaderPadding(recyclerView, getResources().getDisplayMetrics().density);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,5,1,0,0,0.43,1,0
98_21,21,21,"Drawable unwrappedDrawable = AppCompatResources.getDrawable(this, R.drawable.scrollbar_vertical_thumb);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,5,1,0,1,0.53,0,0
98_22,22,22,Drawable wrappedDrawable = DrawableCompat.wrap(unwrappedDrawable);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,1,0,0,0.46,1,0
98_23,23,23,"DrawableCompat.setTint(wrappedDrawable, ThemeStore.accentColor(this));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,5,1,0,1,0.57,2,1
98_25,25,25,"adapter = new SearchAdapter(this, Collections.emptyList());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,5,1,0,0,0.35,4,3
98_26,26,26,adapter.registerAdapterDataObserver(new RecyclerView.AdapterDataObserver() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.43,5,3
98_27,27,28,"@Override
public void onChanged() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,1,0.48,6,4
98_29,29,29,super.onChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.57,8,6
98_30,30,30,empty.setVisibility(adapter.getItemCount() < 1 ? View.VISIBLE : View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.45,9,6
98_33,33,33,recyclerView.setAdapter(adapter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,5,1,0,0,0.43,12,8
98_35,35,35,"recyclerView.setOnTouchListener((v, event) -> {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,5,1,0,0,0.4,14,9
98_36,36,36,hideSoftKeyboard();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.44,15,9
98_37,37,37,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.36,16,10
98_40,40,40,setUpToolBar();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,5,1,0,0,0.5,19,12
98_42,42,44,"if (savedInstanceState != null) {
query = savedInstanceState.getString(QUERY);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,5,1,0,0,0.34,21,13
98_43,43,43,query = savedInstanceState.getString(QUERY);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.34,22,13
98_46,46,46,"LoaderManager.getInstance(this).initLoader(LOADER_ID, null, this);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,5,1,0,0,0.36,25,15
89_1,1,2,"    @Override
protected void onFinishInflate() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,1,0,0,0.4,31,21
89_3,3,3,super.onFinishInflate();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.46,30,20
89_4,4,4,setSurfaceTextureListener(new SurfaceTextureListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.36,29,19
89_5,5,5,private SurfaceTexture mTextureToDestroy = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,3,1,0,0,0.32,28,18
89_7,7,9,"@Override
public void onSurfaceTextureAvailable(SurfaceTexture surfaceTexture, int width,
int height) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,5,3,1,0,0,0.38,24,17
89_10,10,10,setVisibility(View.INVISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.61,23,16
89_11,11,11,Uri videoUri = getFingerprintLocationAnimation();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.5,22,15
89_12,12,14,"if (mMediaPlayer != null) {
mMediaPlayer.release();
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,5,3,1,0,0,0.34,19,13
89_13,13,13,mMediaPlayer.release();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.33,20,13
89_15,15,18,"if (mTextureToDestroy != null) {
mTextureToDestroy.release();
mTextureToDestroy = null;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,0,0,0,5,3,1,0,0,0.29,15,10
89_16,16,16,mTextureToDestroy.release();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.28,17,11
89_17,17,17,mTextureToDestroy = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.29,16,10
89_19,19,19,"mMediaPlayer = createMediaPlayer(mContext, videoUri);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.44,14,9
89_20,20,22,"if (mMediaPlayer == null) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,3,1,0,0,0.3,11,7
89_21,21,21,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.15,12,7
89_23,23,23,mMediaPlayer.setSurface(new Surface(surfaceTexture));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.38,10,6
89_24,24,24,mMediaPlayer.setOnPreparedListener(new OnPreparedListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.39,9,5
89_25,25,26,"@Override
public void onPrepared(MediaPlayer mediaPlayer) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,1,0,0,0.37,7,4
89_27,27,27,mediaPlayer.setLooping(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.37,6,3
89_30,30,30,mMediaPlayer.setOnInfoListener(new OnInfoListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.38,3,2
89_31,31,32,"@Override
public boolean onInfo(MediaPlayer mediaPlayer, int what, int extra) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,1,0,0,0.38,1,1
89_33,33,35,"if (what == MediaPlayer.MEDIA_INFO_VIDEO_RENDERING_START) {
setVisibility(View.VISIBLE);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,3,1,0,3,0.7,0,0
89_34,34,34,setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.56,0,0
89_36,36,36,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.19,2,1
89_39,39,39,mAspect = (float) mMediaPlayer.getVideoHeight() / mMediaPlayer.getVideoWidth();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.48,5,2
89_40,40,40,requestLayout();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.4,6,2
89_41,41,41,startAnimation();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.59,7,3
89_44,44,46,"@Override
public void onSurfaceTextureSizeChanged(SurfaceTexture surfaceTexture,
int width, int height) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,5,3,1,0,0,0.38,10,5
89_49,49,50,"@Override
public boolean onSurfaceTextureDestroyed(SurfaceTexture surfaceTexture) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,3,1,0,0,0.32,15,6
89_51,51,51,mTextureToDestroy = surfaceTexture;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.32,17,7
89_52,52,52,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.19,18,7
89_55,55,56,"@Override
public void onSurfaceTextureUpdated(SurfaceTexture surfaceTexture) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,3,1,0,0,0.34,21,9
88_1,1,2,"    @Override
protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,3,2,0,2,0.68,0,0
88_3,3,3,int originalWidth = MeasureSpec.getSize(widthMeasureSpec);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,2,0,1,0.68,0,0
88_4,4,4,int height = Math.round(mAspect * originalWidth);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,2,0,3,0.84,1,0
88_5,5,5,"super.onMeasure(widthMeasureSpec, MeasureSpec.makeMeasureSpec(height, MeasureSpec.EXACTLY));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,2,0,2,0.72,2,1
31_1,1,1,    public static String extractAeroGearSenderInformation(final HttpServletRequest request) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.4,4,3
31_2,2,2,"String client = request.getHeader(""aerogear-sender"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,1,0,1,0.46,3,2
31_3,3,5,"if (hasValue(client)) {
return client;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,8,5,1,0,2,0.62,0,0
31_4,4,4,return client;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.57,1,0
31_6,6,6,"return request.getHeader(""user-agent"");",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,1,0,4,0.73,0,0
21_1,1,1,"    private void configureTransform(int viewWidth, int viewHeight) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.6,11,7
21_2,2,4,"if (mTextureView == null) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,2,0,0,0,0.43,8,5
21_3,3,3,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.17,9,5
21_6,6,6,float scaleX = (float) viewWidth / mPreviewSize.getWidth();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,0,0,1,0.68,6,4
21_7,7,7,float scaleY = (float) viewHeight / mPreviewSize.getHeight();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,1,0.67,5,3
21_9,9,9,"float smaller = Math.min(scaleX, scaleY);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.78,3,2
21_10,10,10,scaleX = scaleX / smaller;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.77,2,1
21_11,11,11,scaleY = scaleY / smaller;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,0,0,1,0.8,1,0
21_13,13,13,mTextureView.setTranslationX(getResources().getDimension(R.dimen.face_preview_translate_x));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,2,0,0,0,0.56,0,0
21_14,14,14,mTextureView.setTranslationY(getResources().getDimension(R.dimen.face_preview_translate_y));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,2,0,0,0,0.54,1,0
21_16,16,16,final TypedValue scale = new TypedValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.5,3,2
21_17,17,17,"getResources().getValue(R.dimen.face_preview_scale, scale, true );",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.58,4,2
21_18,18,18,mTextureView.setScaleX(scaleX * scale.getFloat());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,1,0.68,5,3
21_19,19,19,mTextureView.setScaleY(scaleY * scale.getFloat());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,1,0.67,6,4
20_1,1,1,"    private void configureTransform(int viewWidth, int viewHeight) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.5,4,2
20_2,2,4,"if (mTextureView == null) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,2,0,0,0,0.32,1,0
20_3,3,3,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.13,2,0
20_6,6,6,float scaleX = (float) viewWidth / mPreviewSize.getWidth();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.59,0,0
20_7,7,7,float scaleY = (float) viewHeight / mPreviewSize.getHeight();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.6,1,0
20_9,9,9,"float smaller = Math.min(scaleX, scaleY);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.65,3,2
20_10,10,10,scaleX = scaleX / smaller;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.61,4,2
20_11,11,11,scaleY = scaleY / smaller;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.66,5,3
20_13,13,13,mTextureView.setTranslationX(getResources().getDimension(R.dimen.face_preview_translate_x));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,2,0,0,0,0.48,7,5
20_14,14,14,mTextureView.setTranslationY(getResources().getDimension(R.dimen.face_preview_translate_y));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,2,0,0,0,0.48,8,5
20_16,16,16,final TypedValue scale = new TypedValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.47,10,7
20_17,17,17,"getResources().getValue(R.dimen.face_preview_scale, scale, true );",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.5,11,7
20_18,18,18,mTextureView.setScaleX(scaleX * scale.getFloat());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.54,12,8
20_19,19,19,mTextureView.setScaleY(scaleY * scale.getFloat());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.55,13,9
19_1,1,2,"        @Override
public void onOpened(CameraDevice cameraDevice) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,0,0,1,0.54,24,14
19_3,3,3,mCameraDevice = cameraDevice;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.61,23,13
19_4,4,42,"try {
SurfaceTexture texture = mTextureView.getSurfaceTexture();
texture.setDefaultBufferSize(mPreviewSize.getWidth(), mPreviewSize.getHeight());

Surface surface = new Surface(texture);

mPreviewRequestBuilder =
mCameraDevice.createCaptureRequest(CameraDevice.TEMPLATE_PREVIEW);
mPreviewRequestBuilder.addTarget(surface);

mCameraDevice.createCaptureSession(Arrays.asList(surface),
new CameraCaptureSession.StateCallback() {

@Override
public void onConfigured(CameraCaptureSession cameraCaptureSession) {
if (null == mCameraDevice) {
return;
}
mCaptureSession = cameraCaptureSession;
try {
mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);

mPreviewRequest = mPreviewRequestBuilder.build();
mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);
} catch (CameraAccessException e) {
Log.e(TAG, ""Unable to access camera"", e);
}
}

@Override
public void onConfigureFailed(CameraCaptureSession cameraCaptureSession) {
Log.e(TAG, ""Unable to configure camera"");
}
}, null );
} catch (CameraAccessException e) {
e.printStackTrace();
}",0,0,0,0,1,0,0,0,0,21,4,39,0,0,0,0,5,4,0,0,2,0.56,0,0
19_5,5,5,SurfaceTexture texture = mTextureView.getSurfaceTexture();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.44,21,11
19_6,6,6,"texture.setDefaultBufferSize(mPreviewSize.getWidth(), mPreviewSize.getHeight());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,0,0,1,0.55,20,10
19_8,8,8,Surface surface = new Surface(texture);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,4,0,0,0,0.47,18,9
19_10,10,11,"mPreviewRequestBuilder =
mCameraDevice.createCaptureRequest(CameraDevice.TEMPLATE_PREVIEW);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,4,0,0,2,0.59,15,8
19_12,12,12,mPreviewRequestBuilder.addTarget(surface);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,4,0,0,1,0.5,14,7
19_14,14,15,"mCameraDevice.createCaptureSession(Arrays.asList(surface),
new CameraCaptureSession.StateCallback() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,4,0,0,1,0.52,11,6
19_17,17,18,"@Override
public void onConfigured(CameraCaptureSession cameraCaptureSession) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,4,0,0,1,0.53,8,5
19_19,19,21,"if (null == mCameraDevice) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,4,0,0,1,0.48,5,3
19_20,20,20,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.19,6,3
19_22,22,22,mCaptureSession = cameraCaptureSession;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.54,4,2
19_23,23,32,"try {
mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);

mPreviewRequest = mPreviewRequestBuilder.build();
mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);
} catch (CameraAccessException e) {
Log.e(TAG, ""Unable to access camera"", e);
}",0,0,0,0,1,0,0,0,0,5,1,10,0,0,0,0,5,4,0,0,2,0.52,0,0
19_24,24,25,"mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,5,4,0,0,1,0.47,1,0
19_27,27,27,mPreviewRequest = mPreviewRequestBuilder.build();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,0,0,1,0.51,0,0
19_28,28,29,"mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,0,0,1,0.48,1,0
19_30,30,30,} catch (CameraAccessException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.42,3,2
19_31,31,31,"Log.e(TAG, ""Unable to access camera"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.43,4,2
19_35,35,36,"@Override
public void onConfigureFailed(CameraCaptureSession cameraCaptureSession) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,4,0,0,1,0.52,8,4
19_37,37,37,"Log.e(TAG, ""Unable to configure camera"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.45,10,5
19_39,39,39,"}, null );",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.15,12,6
19_40,40,40,} catch (CameraAccessException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.42,13,6
19_41,41,41,e.printStackTrace();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.31,14,7
18_1,1,2,"        @Override
public void onOpened(CameraDevice cameraDevice) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,1,0.57,21,13
18_3,3,3,mCameraDevice = cameraDevice;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.68,20,12
18_4,4,42,"try {
SurfaceTexture texture = mTextureView.getSurfaceTexture();
texture.setDefaultBufferSize(mPreviewSize.getWidth(), mPreviewSize.getHeight());

Surface surface = new Surface(texture);

mPreviewRequestBuilder =
mCameraDevice.createCaptureRequest(CameraDevice.TEMPLATE_PREVIEW);
mPreviewRequestBuilder.addTarget(surface);

mCameraDevice.createCaptureSession(Arrays.asList(surface),
new CameraCaptureSession.StateCallback() {

@Override
public void onConfigured(CameraCaptureSession cameraCaptureSession) {
if (null == mCameraDevice) {
return;
}
mCaptureSession = cameraCaptureSession;
try {
mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);

mPreviewRequest = mPreviewRequestBuilder.build();
mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);
} catch (CameraAccessException e) {
Log.e(TAG, ""Unable to access camera"", e);
}
}

@Override
public void onConfigureFailed(CameraCaptureSession cameraCaptureSession) {
Log.e(TAG, ""Unable to configure camera"");
}
}, null );
} catch (CameraAccessException e) {
e.printStackTrace();
}",0,0,0,0,1,0,0,0,0,21,4,39,0,0,0,0,5,5,0,0,3,0.65,0,0
18_5,5,5,SurfaceTexture texture = mTextureView.getSurfaceTexture();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.46,18,10
18_6,6,6,"texture.setDefaultBufferSize(mPreviewSize.getWidth(), mPreviewSize.getHeight());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,1,0.52,17,9
18_8,8,8,Surface surface = new Surface(texture);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,5,0,0,0,0.45,15,8
18_10,10,11,"mPreviewRequestBuilder =
mCameraDevice.createCaptureRequest(CameraDevice.TEMPLATE_PREVIEW);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,5,0,0,2,0.65,12,7
18_12,12,12,mPreviewRequestBuilder.addTarget(surface);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,5,0,0,1,0.53,11,6
18_14,14,15,"mCameraDevice.createCaptureSession(Arrays.asList(surface),
new CameraCaptureSession.StateCallback() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,5,0,0,1,0.55,8,5
18_17,17,18,"@Override
public void onConfigured(CameraCaptureSession cameraCaptureSession) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,5,0,0,1,0.55,5,4
18_19,19,21,"if (null == mCameraDevice) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,5,0,0,1,0.56,2,2
18_20,20,20,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.26,3,2
18_22,22,22,mCaptureSession = cameraCaptureSession;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.57,1,1
18_23,23,32,"try {
mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);

mPreviewRequest = mPreviewRequestBuilder.build();
mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);
} catch (CameraAccessException e) {
Log.e(TAG, ""Unable to access camera"", e);
}",0,0,0,0,1,0,0,0,0,5,1,10,0,0,0,0,5,5,0,0,3,0.63,0,0
18_24,24,25,"mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,5,5,0,0,2,0.61,0,0
18_27,27,27,mPreviewRequest = mPreviewRequestBuilder.build();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,1,0.56,3,1
18_28,28,29,"mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,1,0.53,4,1
18_30,30,30,} catch (CameraAccessException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.5,6,3
18_31,31,31,"Log.e(TAG, ""Unable to access camera"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.49,7,3
18_35,35,36,"@Override
public void onConfigureFailed(CameraCaptureSession cameraCaptureSession) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,5,0,0,1,0.55,11,5
18_37,37,37,"Log.e(TAG, ""Unable to configure camera"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.51,13,6
18_39,39,39,"}, null );",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.25,15,7
18_40,40,40,} catch (CameraAccessException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.5,16,7
18_41,41,41,e.printStackTrace();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.34,17,8
17_1,1,2,"        @Override
public void onOpened(CameraDevice cameraDevice) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,1,0,0,0.45,19,11
17_3,3,3,mCameraDevice = cameraDevice;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.45,18,10
17_4,4,42,"try {
SurfaceTexture texture = mTextureView.getSurfaceTexture();
texture.setDefaultBufferSize(mPreviewSize.getWidth(), mPreviewSize.getHeight());

Surface surface = new Surface(texture);

mPreviewRequestBuilder =
mCameraDevice.createCaptureRequest(CameraDevice.TEMPLATE_PREVIEW);
mPreviewRequestBuilder.addTarget(surface);

mCameraDevice.createCaptureSession(Arrays.asList(surface),
new CameraCaptureSession.StateCallback() {

@Override
public void onConfigured(CameraCaptureSession cameraCaptureSession) {
if (null == mCameraDevice) {
return;
}
mCaptureSession = cameraCaptureSession;
try {
mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);

mPreviewRequest = mPreviewRequestBuilder.build();
mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);
} catch (CameraAccessException e) {
Log.e(TAG, ""Unable to access camera"", e);
}
}

@Override
public void onConfigureFailed(CameraCaptureSession cameraCaptureSession) {
Log.e(TAG, ""Unable to configure camera"");
}
}, null );
} catch (CameraAccessException e) {
e.printStackTrace();
}",0,0,0,0,1,0,0,0,0,21,4,39,0,0,0,0,5,4,1,0,2,0.59,0,0
17_5,5,5,SurfaceTexture texture = mTextureView.getSurfaceTexture();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.47,16,8
17_6,6,6,"texture.setDefaultBufferSize(mPreviewSize.getWidth(), mPreviewSize.getHeight());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,1,0,1,0.52,15,7
17_8,8,8,Surface surface = new Surface(texture);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,4,1,0,0,0.46,13,6
17_10,10,11,"mPreviewRequestBuilder =
mCameraDevice.createCaptureRequest(CameraDevice.TEMPLATE_PREVIEW);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,4,1,0,1,0.51,10,5
17_12,12,12,mPreviewRequestBuilder.addTarget(surface);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,4,1,0,1,0.48,9,4
17_14,14,15,"mCameraDevice.createCaptureSession(Arrays.asList(surface),
new CameraCaptureSession.StateCallback() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,4,1,0,1,0.55,6,3
17_17,17,18,"@Override
public void onConfigured(CameraCaptureSession cameraCaptureSession) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,4,1,0,1,0.58,3,2
17_19,19,21,"if (null == mCameraDevice) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,4,1,0,0,0.39,0,0
17_20,20,20,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.22,1,0
17_22,22,22,mCaptureSession = cameraCaptureSession;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.64,0,0
17_23,23,32,"try {
mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);

mPreviewRequest = mPreviewRequestBuilder.build();
mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);
} catch (CameraAccessException e) {
Log.e(TAG, ""Unable to access camera"", e);
}",0,0,0,0,1,0,0,0,0,5,1,10,0,0,0,0,5,4,1,0,2,0.56,1,0
17_24,24,25,"mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,5,4,1,0,1,0.46,2,1
17_27,27,27,mPreviewRequest = mPreviewRequestBuilder.build();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,1,0,1,0.51,5,3
17_28,28,29,"mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,1,0,2,0.58,6,3
17_30,30,30,} catch (CameraAccessException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.39,8,5
17_31,31,31,"Log.e(TAG, ""Unable to access camera"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.42,9,5
17_35,35,36,"@Override
public void onConfigureFailed(CameraCaptureSession cameraCaptureSession) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,4,1,0,1,0.57,13,7
17_37,37,37,"Log.e(TAG, ""Unable to configure camera"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.42,15,8
17_39,39,39,"}, null );",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.18,17,9
17_40,40,40,} catch (CameraAccessException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.39,18,9
17_41,41,41,e.printStackTrace();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.42,19,10
16_1,1,2,"        @Override
public void onOpened(CameraDevice cameraDevice) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,1,0.57,16,9
16_3,3,3,mCameraDevice = cameraDevice;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.66,15,8
16_4,4,42,"try {
SurfaceTexture texture = mTextureView.getSurfaceTexture();
texture.setDefaultBufferSize(mPreviewSize.getWidth(), mPreviewSize.getHeight());

Surface surface = new Surface(texture);

mPreviewRequestBuilder =
mCameraDevice.createCaptureRequest(CameraDevice.TEMPLATE_PREVIEW);
mPreviewRequestBuilder.addTarget(surface);

mCameraDevice.createCaptureSession(Arrays.asList(surface),
new CameraCaptureSession.StateCallback() {

@Override
public void onConfigured(CameraCaptureSession cameraCaptureSession) {
if (null == mCameraDevice) {
return;
}
mCaptureSession = cameraCaptureSession;
try {
mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);

mPreviewRequest = mPreviewRequestBuilder.build();
mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);
} catch (CameraAccessException e) {
Log.e(TAG, ""Unable to access camera"", e);
}
}

@Override
public void onConfigureFailed(CameraCaptureSession cameraCaptureSession) {
Log.e(TAG, ""Unable to configure camera"");
}
}, null );
} catch (CameraAccessException e) {
e.printStackTrace();
}",0,0,0,0,1,0,0,0,0,21,4,39,0,0,0,0,3,2,0,0,1,0.52,0,0
16_5,5,5,SurfaceTexture texture = mTextureView.getSurfaceTexture();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.28,13,6
16_6,6,6,"texture.setDefaultBufferSize(mPreviewSize.getWidth(), mPreviewSize.getHeight());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.4,12,5
16_8,8,8,Surface surface = new Surface(texture);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.25,10,4
16_10,10,11,"mPreviewRequestBuilder =
mCameraDevice.createCaptureRequest(CameraDevice.TEMPLATE_PREVIEW);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,3,2,0,0,1,0.53,7,3
16_12,12,12,mPreviewRequestBuilder.addTarget(surface);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.35,6,2
16_14,14,15,"mCameraDevice.createCaptureSession(Arrays.asList(surface),
new CameraCaptureSession.StateCallback() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,3,2,0,0,1,0.55,3,1
16_17,17,18,"@Override
public void onConfigured(CameraCaptureSession cameraCaptureSession) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,3,2,0,0,1,0.58,0,0
16_19,19,21,"if (null == mCameraDevice) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,1,0.53,0,0
16_20,20,20,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.25,1,0
16_22,22,22,mCaptureSession = cameraCaptureSession;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.64,3,2
16_23,23,32,"try {
mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);

mPreviewRequest = mPreviewRequestBuilder.build();
mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);
} catch (CameraAccessException e) {
Log.e(TAG, ""Unable to access camera"", e);
}",0,0,0,0,1,0,0,0,0,5,1,10,0,0,0,0,3,2,0,0,1,0.5,4,2
16_24,24,25,"mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,3,2,0,0,0,0.39,5,3
16_27,27,27,mPreviewRequest = mPreviewRequestBuilder.build();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.37,8,5
16_28,28,29,"mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.43,9,5
16_30,30,30,} catch (CameraAccessException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.5,11,7
16_31,31,31,"Log.e(TAG, ""Unable to access camera"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.46,12,7
16_35,35,36,"@Override
public void onConfigureFailed(CameraCaptureSession cameraCaptureSession) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,3,2,0,0,1,0.57,16,9
16_37,37,37,"Log.e(TAG, ""Unable to configure camera"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.47,18,10
16_39,39,39,"}, null );",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.2,20,11
16_40,40,40,} catch (CameraAccessException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.5,21,11
16_41,41,41,e.printStackTrace();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,22,12
15_1,1,2,"        @Override
public void onOpened(CameraDevice cameraDevice) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,6,0,0,1,0.57,11,7
15_3,3,3,mCameraDevice = cameraDevice;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.69,10,6
15_4,4,42,"try {
SurfaceTexture texture = mTextureView.getSurfaceTexture();
texture.setDefaultBufferSize(mPreviewSize.getWidth(), mPreviewSize.getHeight());

Surface surface = new Surface(texture);

mPreviewRequestBuilder =
mCameraDevice.createCaptureRequest(CameraDevice.TEMPLATE_PREVIEW);
mPreviewRequestBuilder.addTarget(surface);

mCameraDevice.createCaptureSession(Arrays.asList(surface),
new CameraCaptureSession.StateCallback() {

@Override
public void onConfigured(CameraCaptureSession cameraCaptureSession) {
if (null == mCameraDevice) {
return;
}
mCaptureSession = cameraCaptureSession;
try {
mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);

mPreviewRequest = mPreviewRequestBuilder.build();
mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);
} catch (CameraAccessException e) {
Log.e(TAG, ""Unable to access camera"", e);
}
}

@Override
public void onConfigureFailed(CameraCaptureSession cameraCaptureSession) {
Log.e(TAG, ""Unable to configure camera"");
}
}, null );
} catch (CameraAccessException e) {
e.printStackTrace();
}",0,0,0,0,1,0,0,0,0,21,4,39,0,0,0,0,6,6,0,0,5,0.78,0,0
15_5,5,5,SurfaceTexture texture = mTextureView.getSurfaceTexture();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,0,0.45,8,4
15_6,6,6,"texture.setDefaultBufferSize(mPreviewSize.getWidth(), mPreviewSize.getHeight());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,6,0,0,1,0.54,7,3
15_8,8,8,Surface surface = new Surface(texture);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,6,0,0,0,0.49,5,2
15_10,10,11,"mPreviewRequestBuilder =
mCameraDevice.createCaptureRequest(CameraDevice.TEMPLATE_PREVIEW);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,6,0,0,4,0.79,2,1
15_12,12,12,mPreviewRequestBuilder.addTarget(surface);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,6,0,0,1,0.51,1,0
15_14,14,15,"mCameraDevice.createCaptureSession(Arrays.asList(surface),
new CameraCaptureSession.StateCallback() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,6,0,0,4,0.83,0,0
15_17,17,18,"@Override
public void onConfigured(CameraCaptureSession cameraCaptureSession) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,6,0,0,3,0.75,3,1
15_19,19,21,"if (null == mCameraDevice) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,6,0,0,1,0.59,5,2
15_20,20,20,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.27,6,2
15_22,22,22,mCaptureSession = cameraCaptureSession;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,3,0.89,8,4
15_23,23,32,"try {
mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);

mPreviewRequest = mPreviewRequestBuilder.build();
mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);
} catch (CameraAccessException e) {
Log.e(TAG, ""Unable to access camera"", e);
}",0,0,0,0,1,0,0,0,0,5,1,10,0,0,0,0,6,6,0,0,4,0.69,9,4
15_24,24,25,"mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,6,6,0,0,2,0.55,10,5
15_27,27,27,mPreviewRequest = mPreviewRequestBuilder.build();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,6,0,0,1,0.54,13,7
15_28,28,29,"mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,6,0,0,3,0.65,14,7
15_30,30,30,} catch (CameraAccessException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.53,16,9
15_31,31,31,"Log.e(TAG, ""Unable to access camera"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.52,17,9
15_35,35,36,"@Override
public void onConfigureFailed(CameraCaptureSession cameraCaptureSession) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,6,0,0,3,0.74,21,11
15_37,37,37,"Log.e(TAG, ""Unable to configure camera"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.53,23,12
15_39,39,39,"}, null );",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.26,25,13
15_40,40,40,} catch (CameraAccessException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.53,26,13
15_41,41,41,e.printStackTrace();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.3,27,14
14_1,1,2,"        @Override
public void onOpened(CameraDevice cameraDevice) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,0,0.35,7,5
14_3,3,3,mCameraDevice = cameraDevice;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.31,6,4
14_4,4,42,"try {
SurfaceTexture texture = mTextureView.getSurfaceTexture();
texture.setDefaultBufferSize(mPreviewSize.getWidth(), mPreviewSize.getHeight());

Surface surface = new Surface(texture);

mPreviewRequestBuilder =
mCameraDevice.createCaptureRequest(CameraDevice.TEMPLATE_PREVIEW);
mPreviewRequestBuilder.addTarget(surface);

mCameraDevice.createCaptureSession(Arrays.asList(surface),
new CameraCaptureSession.StateCallback() {

@Override
public void onConfigured(CameraCaptureSession cameraCaptureSession) {
if (null == mCameraDevice) {
return;
}
mCaptureSession = cameraCaptureSession;
try {
mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);

mPreviewRequest = mPreviewRequestBuilder.build();
mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);
} catch (CameraAccessException e) {
Log.e(TAG, ""Unable to access camera"", e);
}
}

@Override
public void onConfigureFailed(CameraCaptureSession cameraCaptureSession) {
Log.e(TAG, ""Unable to configure camera"");
}
}, null );
} catch (CameraAccessException e) {
e.printStackTrace();
}",0,0,0,0,1,0,0,0,0,21,4,39,0,0,0,0,6,5,1,0,5,0.73,0,0
14_5,5,5,SurfaceTexture texture = mTextureView.getSurfaceTexture();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,1,0,1,0.55,4,2
14_6,6,6,"texture.setDefaultBufferSize(mPreviewSize.getWidth(), mPreviewSize.getHeight());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,5,1,0,1,0.53,3,1
14_8,8,8,Surface surface = new Surface(texture);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,5,1,0,1,0.61,1,0
14_10,10,11,"mPreviewRequestBuilder =
mCameraDevice.createCaptureRequest(CameraDevice.TEMPLATE_PREVIEW);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,5,1,0,3,0.67,0,0
14_12,12,12,mPreviewRequestBuilder.addTarget(surface);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,5,1,0,3,0.7,2,1
14_14,14,15,"mCameraDevice.createCaptureSession(Arrays.asList(surface),
new CameraCaptureSession.StateCallback() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,5,1,0,2,0.5,4,2
14_17,17,18,"@Override
public void onConfigured(CameraCaptureSession cameraCaptureSession) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,5,1,0,1,0.45,7,3
14_19,19,21,"if (null == mCameraDevice) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,5,1,0,0,0.31,9,4
14_20,20,20,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.22,10,4
14_22,22,22,mCaptureSession = cameraCaptureSession;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.48,12,6
14_23,23,32,"try {
mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);

mPreviewRequest = mPreviewRequestBuilder.build();
mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);
} catch (CameraAccessException e) {
Log.e(TAG, ""Unable to access camera"", e);
}",0,0,0,0,1,0,0,0,0,5,1,10,0,0,0,0,6,5,1,0,4,0.71,13,6
14_24,24,25,"mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,6,5,1,0,4,0.74,14,7
14_27,27,27,mPreviewRequest = mPreviewRequestBuilder.build();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,5,1,0,2,0.72,17,9
14_28,28,29,"mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,3,0.69,18,9
14_30,30,30,} catch (CameraAccessException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.33,20,11
14_31,31,31,"Log.e(TAG, ""Unable to access camera"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.33,21,11
14_35,35,36,"@Override
public void onConfigureFailed(CameraCaptureSession cameraCaptureSession) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,5,1,0,1,0.43,25,13
14_37,37,37,"Log.e(TAG, ""Unable to configure camera"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.32,27,14
14_39,39,39,"}, null );",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.23,29,15
14_40,40,40,} catch (CameraAccessException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.33,30,15
14_41,41,41,e.printStackTrace();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.35,31,16
13_1,1,2,"        @Override
public void onOpened(CameraDevice cameraDevice) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,2,3,0,0,0.36,5,4
13_3,3,3,mCameraDevice = cameraDevice;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,0,0.33,4,3
13_4,4,42,"try {
SurfaceTexture texture = mTextureView.getSurfaceTexture();
texture.setDefaultBufferSize(mPreviewSize.getWidth(), mPreviewSize.getHeight());

Surface surface = new Surface(texture);

mPreviewRequestBuilder =
mCameraDevice.createCaptureRequest(CameraDevice.TEMPLATE_PREVIEW);
mPreviewRequestBuilder.addTarget(surface);

mCameraDevice.createCaptureSession(Arrays.asList(surface),
new CameraCaptureSession.StateCallback() {

@Override
public void onConfigured(CameraCaptureSession cameraCaptureSession) {
if (null == mCameraDevice) {
return;
}
mCaptureSession = cameraCaptureSession;
try {
mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);

mPreviewRequest = mPreviewRequestBuilder.build();
mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);
} catch (CameraAccessException e) {
Log.e(TAG, ""Unable to access camera"", e);
}
}

@Override
public void onConfigureFailed(CameraCaptureSession cameraCaptureSession) {
Log.e(TAG, ""Unable to configure camera"");
}
}, null );
} catch (CameraAccessException e) {
e.printStackTrace();
}",0,0,0,0,1,0,0,0,0,21,4,39,0,0,0,0,5,2,3,0,2,0.54,0,0
13_5,5,5,SurfaceTexture texture = mTextureView.getSurfaceTexture();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,3,0,1,0.6,2,1
13_6,6,6,"texture.setDefaultBufferSize(mPreviewSize.getWidth(), mPreviewSize.getHeight());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,2,3,0,1,0.54,1,0
13_8,8,8,Surface surface = new Surface(texture);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,2,3,0,1,0.68,0,0
13_10,10,11,"mPreviewRequestBuilder =
mCameraDevice.createCaptureRequest(CameraDevice.TEMPLATE_PREVIEW);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,2,3,0,1,0.49,2,1
13_12,12,12,mPreviewRequestBuilder.addTarget(surface);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,3,0,2,0.56,4,2
13_14,14,15,"mCameraDevice.createCaptureSession(Arrays.asList(surface),
new CameraCaptureSession.StateCallback() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,2,3,0,1,0.48,6,3
13_17,17,18,"@Override
public void onConfigured(CameraCaptureSession cameraCaptureSession) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,2,3,0,0,0.39,9,4
13_19,19,21,"if (null == mCameraDevice) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,2,3,0,0,0.28,11,5
13_20,20,20,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,3,0,0,0.11,12,5
13_22,22,22,mCaptureSession = cameraCaptureSession;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,0,0.39,14,7
13_23,23,32,"try {
mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);

mPreviewRequest = mPreviewRequestBuilder.build();
mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);
} catch (CameraAccessException e) {
Log.e(TAG, ""Unable to access camera"", e);
}",0,0,0,0,1,0,0,0,0,5,1,10,0,0,0,0,5,2,3,0,1,0.46,15,7
13_24,24,25,"mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,5,2,3,0,1,0.46,16,8
13_27,27,27,mPreviewRequest = mPreviewRequestBuilder.build();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,3,0,1,0.5,19,10
13_28,28,29,"mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,2,3,0,1,0.45,20,10
13_30,30,30,} catch (CameraAccessException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,0,0.32,22,12
13_31,31,31,"Log.e(TAG, ""Unable to access camera"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,0,0.32,23,12
13_35,35,36,"@Override
public void onConfigureFailed(CameraCaptureSession cameraCaptureSession) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,2,3,0,0,0.38,27,14
13_37,37,37,"Log.e(TAG, ""Unable to configure camera"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,0,0.33,29,15
13_39,39,39,"}, null );",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,0,0.07,31,16
13_40,40,40,} catch (CameraAccessException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,0,0.32,32,16
13_41,41,41,e.printStackTrace();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,0,0.34,33,17
12_1,1,2,"        @Override
public void onOpened(CameraDevice cameraDevice) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.28,2,2
12_3,3,3,mCameraDevice = cameraDevice;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.22,1,1
12_4,4,42,"try {
SurfaceTexture texture = mTextureView.getSurfaceTexture();
texture.setDefaultBufferSize(mPreviewSize.getWidth(), mPreviewSize.getHeight());

Surface surface = new Surface(texture);

mPreviewRequestBuilder =
mCameraDevice.createCaptureRequest(CameraDevice.TEMPLATE_PREVIEW);
mPreviewRequestBuilder.addTarget(surface);

mCameraDevice.createCaptureSession(Arrays.asList(surface),
new CameraCaptureSession.StateCallback() {

@Override
public void onConfigured(CameraCaptureSession cameraCaptureSession) {
if (null == mCameraDevice) {
return;
}
mCaptureSession = cameraCaptureSession;
try {
mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);

mPreviewRequest = mPreviewRequestBuilder.build();
mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);
} catch (CameraAccessException e) {
Log.e(TAG, ""Unable to access camera"", e);
}
}

@Override
public void onConfigureFailed(CameraCaptureSession cameraCaptureSession) {
Log.e(TAG, ""Unable to configure camera"");
}
}, null );
} catch (CameraAccessException e) {
e.printStackTrace();
}",0,0,0,0,1,0,0,0,0,21,4,39,0,0,0,0,4,4,0,0,4,0.67,0,0
12_5,5,5,SurfaceTexture texture = mTextureView.getSurfaceTexture();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.35,0,0
12_6,6,6,"texture.setDefaultBufferSize(mPreviewSize.getWidth(), mPreviewSize.getHeight());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,4,0,0,3,0.74,1,0
12_8,8,8,Surface surface = new Surface(texture);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.37,3,2
12_10,10,11,"mPreviewRequestBuilder =
mCameraDevice.createCaptureRequest(CameraDevice.TEMPLATE_PREVIEW);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,4,0,0,0,0.31,5,3
12_12,12,12,mPreviewRequestBuilder.addTarget(surface);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.32,7,4
12_14,14,15,"mCameraDevice.createCaptureSession(Arrays.asList(surface),
new CameraCaptureSession.StateCallback() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,4,0,0,0,0.31,9,5
12_17,17,18,"@Override
public void onConfigured(CameraCaptureSession cameraCaptureSession) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,4,0,0,1,0.4,12,6
12_19,19,21,"if (null == mCameraDevice) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,4,0,0,0,0.25,14,7
12_20,20,20,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.23,15,7
12_22,22,22,mCaptureSession = cameraCaptureSession;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.25,17,9
12_23,23,32,"try {
mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);

mPreviewRequest = mPreviewRequestBuilder.build();
mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);
} catch (CameraAccessException e) {
Log.e(TAG, ""Unable to access camera"", e);
}",0,0,0,0,1,0,0,0,0,5,1,10,0,0,0,0,4,4,0,0,0,0.35,18,9
12_24,24,25,"mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE,
CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,4,4,0,0,0,0.31,19,10
12_27,27,27,mPreviewRequest = mPreviewRequestBuilder.build();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.31,22,12
12_28,28,29,"mCaptureSession.setRepeatingRequest(mPreviewRequest,
null , mHandler);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.32,23,12
12_30,30,30,} catch (CameraAccessException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.31,25,14
12_31,31,31,"Log.e(TAG, ""Unable to access camera"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.32,26,14
12_35,35,36,"@Override
public void onConfigureFailed(CameraCaptureSession cameraCaptureSession) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,4,0,0,1,0.4,30,16
12_37,37,37,"Log.e(TAG, ""Unable to configure camera"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.46,32,17
12_39,39,39,"}, null );",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.24,34,18
12_40,40,40,} catch (CameraAccessException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.31,35,18
12_41,41,41,e.printStackTrace();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.43,36,19
