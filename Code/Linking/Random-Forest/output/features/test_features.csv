id,start,end,code,if,while,for,enhancedfor,try,decl,return,break,throw,num substatement,nested level,number lines,same method,same variable,previous blank,next blank,num tokens,num nouns,num verbs,next line blank,common keywords,cosine distance,line distance,statement distance
4022_1,1,2,"    @Override
public void finishedTrackingActivity(ResponseData responseData) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,2,0,1,0.53,0,0
4022_3,3,7,"if (responseData instanceof SessionResponseData) {
logger.debug(""Finished tracking session"");
attributionHandler.checkSessionResponse((SessionResponseData)responseData);
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,8,5,2,0,5,0.8,0,0
4022_4,4,4,"logger.debug(""Finished tracking session"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,1,0.49,1,0
4022_5,5,5,attributionHandler.checkSessionResponse((SessionResponseData)responseData);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,5,0.88,2,1
4022_6,6,6,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.24,3,2
4022_8,8,12,"if (responseData instanceof SdkClickResponseData) {
checkForInstallReferrerInfo((SdkClickResponseData) responseData);
attributionHandler.checkSdkClickResponse((SdkClickResponseData)responseData);
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,8,5,2,0,4,0.71,5,4
4022_9,9,9,checkForInstallReferrerInfo((SdkClickResponseData) responseData);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,2,0.59,6,4
4022_10,10,10,attributionHandler.checkSdkClickResponse((SdkClickResponseData)responseData);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,4,0.76,7,5
4022_11,11,11,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.24,8,6
4022_13,13,16,"if (responseData instanceof EventResponseData) {
launchEventResponseTasks((EventResponseData)responseData);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,8,5,2,0,1,0.52,10,8
4022_14,14,14,launchEventResponseTasks((EventResponseData)responseData);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,1,0.53,11,8
4022_15,15,15,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.24,12,9
4023_1,1,2,"    @Override
public void finishedTrackingActivity(ResponseData responseData) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,6,2,0,1,0.51,5,4
4023_3,3,7,"if (responseData instanceof SessionResponseData) {
logger.debug(""Finished tracking session"");
attributionHandler.checkSessionResponse((SessionResponseData)responseData);
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,9,6,2,0,4,0.69,0,0
4023_4,4,4,"logger.debug(""Finished tracking session"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,2,0,0,0.39,3,2
4023_5,5,5,attributionHandler.checkSessionResponse((SessionResponseData)responseData);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,2,0,4,0.77,2,1
4023_6,6,6,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,6,2,0,0,0.25,1,0
4023_8,8,12,"if (responseData instanceof SdkClickResponseData) {
checkForInstallReferrerInfo((SdkClickResponseData) responseData);
attributionHandler.checkSdkClickResponse((SdkClickResponseData)responseData);
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,9,6,2,0,6,0.84,0,0
4023_9,9,9,checkForInstallReferrerInfo((SdkClickResponseData) responseData);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,2,0,4,0.73,1,0
4023_10,10,10,attributionHandler.checkSdkClickResponse((SdkClickResponseData)responseData);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,2,0,6,0.89,2,1
4023_11,11,11,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,6,2,0,0,0.25,3,2
4023_13,13,16,"if (responseData instanceof EventResponseData) {
launchEventResponseTasks((EventResponseData)responseData);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,9,6,2,0,1,0.51,5,4
4023_14,14,14,launchEventResponseTasks((EventResponseData)responseData);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,2,0,1,0.52,6,4
4023_15,15,15,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,6,2,0,0,0.25,7,5
4024_1,1,2,"    @Override
public void finishedTrackingActivity(ResponseData responseData) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,1,0.45,10,8
4024_3,3,7,"if (responseData instanceof SessionResponseData) {
logger.debug(""Finished tracking session"");
attributionHandler.checkSessionResponse((SessionResponseData)responseData);
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,3,2,1,0,2,0.67,5,4
4024_4,4,4,"logger.debug(""Finished tracking session"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.39,8,6
4024_5,5,5,attributionHandler.checkSessionResponse((SessionResponseData)responseData);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,2,0.7,7,5
4024_6,6,6,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.22,6,4
4024_8,8,12,"if (responseData instanceof SdkClickResponseData) {
checkForInstallReferrerInfo((SdkClickResponseData) responseData);
attributionHandler.checkSdkClickResponse((SdkClickResponseData)responseData);
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,3,2,1,0,2,0.64,0,0
4024_9,9,9,checkForInstallReferrerInfo((SdkClickResponseData) responseData);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,2,0.63,3,2
4024_10,10,10,attributionHandler.checkSdkClickResponse((SdkClickResponseData)responseData);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,2,0.65,2,1
4024_11,11,11,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.22,1,0
4024_13,13,16,"if (responseData instanceof EventResponseData) {
launchEventResponseTasks((EventResponseData)responseData);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,3,2,1,0,2,0.69,0,0
4024_14,14,14,launchEventResponseTasks((EventResponseData)responseData);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,2,0.71,1,0
4024_15,15,15,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.22,2,1
4033_1,1,1,private void checkForPreinstallI() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,1,0.33,22,14
4033_2,2,2,if (activityState == null) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,0,0.24,21,13
4033_3,3,3,if (!activityState.enabled) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,0,0.27,20,12
4033_4,4,4,if (activityState.isGdprForgotten) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,3,0,0,0,0.23,19,11
4033_6,6,6,sendPreinstallReferrerI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,8,3,0,0,1,0.29,17,10
4033_8,8,8,if (!adjustConfig.preinstallTrackingEnabled) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,3,0,0,1,0.36,15,9
4033_9,9,9,if (internalState.hasPreinstallBeenRead()) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,3,0,0,2,0.45,14,8
4033_11,11,14,"if (deviceInfo.packageName == null || deviceInfo.packageName.isEmpty()) {
logger.debug(""Can't read preinstall payload, invalid package name"");
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,8,3,0,0,3,0.5,9,5
4033_12,12,12,"logger.debug(""Can't read preinstall payload, invalid package name"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,3,0.57,11,6
4033_13,13,13,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,3,0,0,0,0.17,10,5
4033_16,16,16,SharedPreferencesManager sharedPreferencesManager = new SharedPreferencesManager(getContext());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,3,0,0,0,0.34,7,4
4033_17,17,17,long readStatus = sharedPreferencesManager.getPreinstallPayloadReadStatus();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,8,3,0,0,3,0.54,6,3
4033_19,19,22,"if (PreinstallUtil.hasAllLocationsBeenRead(readStatus)) {
internalState.preinstallHasBeenRead = true;
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,8,3,0,0,2,0.5,1,0
4033_20,20,20,internalState.preinstallHasBeenRead = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,2,0.46,3,1
4033_21,21,21,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,3,0,0,0,0.17,2,0
4033_24,24,33,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES, readStatus)) {
String payloadSystemProperty = PreinstallUtil.getPayloadFromSystemProperty(
deviceInfo.packageName, logger);

if (payloadSystemProperty != null && !payloadSystemProperty.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,8,3,0,0,5,0.74,0,0
4033_25,25,26,"String payloadSystemProperty = PreinstallUtil.getPayloadFromSystemProperty(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,8,3,0,0,4,0.65,1,0
4033_28,28,32,"if (payloadSystemProperty != null && !payloadSystemProperty.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,8,3,0,0,5,0.73,4,2
4033_29,29,29,"sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,4,0.68,5,2
4033_30,30,30,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,0,0.23,6,3
4033_31,31,31,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,4,0.66,7,4
4033_35,35,44,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus)) {
String payloadSystemPropertyReflection = PreinstallUtil.getPayloadFromSystemPropertyReflection(
deviceInfo.packageName, logger);

if (payloadSystemPropertyReflection != null && !payloadSystemPropertyReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,8,3,0,0,5,0.71,11,6
4033_36,36,37,"String payloadSystemPropertyReflection = PreinstallUtil.getPayloadFromSystemPropertyReflection(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,8,3,0,0,4,0.63,12,6
4033_39,39,43,"if (payloadSystemPropertyReflection != null && !payloadSystemPropertyReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,8,3,0,0,5,0.7,15,8
4033_40,40,40,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,4,0.65,16,8
4033_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,0,0.23,17,9
4033_42,42,42,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,4,0.65,18,10
4033_46,46,55,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus)) {
String payloadSystemPropertyFilePath = PreinstallUtil.getPayloadFromSystemPropertyFilePath(
deviceInfo.packageName, logger);

if (payloadSystemPropertyFilePath != null && !payloadSystemPropertyFilePath.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,8,3,0,0,5,0.71,22,12
4033_47,47,48,"String payloadSystemPropertyFilePath = PreinstallUtil.getPayloadFromSystemPropertyFilePath(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,8,3,0,0,4,0.63,23,12
4033_50,50,54,"if (payloadSystemPropertyFilePath != null && !payloadSystemPropertyFilePath.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,8,3,0,0,5,0.7,26,14
4033_51,51,51,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,4,0.65,27,14
4033_52,52,52,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,0,0.23,28,15
4033_53,53,53,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,4,0.67,29,16
4033_57,57,66,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus)) {
String payloadSystemPropertyFilePathReflection = PreinstallUtil.getPayloadFromSystemPropertyFilePathReflection(
deviceInfo.packageName, logger);

if (payloadSystemPropertyFilePathReflection != null && !payloadSystemPropertyFilePathReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,8,3,0,0,5,0.69,33,18
4033_58,58,59,"String payloadSystemPropertyFilePathReflection = PreinstallUtil.getPayloadFromSystemPropertyFilePathReflection(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,8,3,0,0,4,0.62,34,18
4033_61,61,65,"if (payloadSystemPropertyFilePathReflection != null && !payloadSystemPropertyFilePathReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,8,3,0,0,5,0.68,37,20
4033_62,62,62,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,4,0.63,38,20
4033_63,63,63,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,0,0.23,39,21
4033_64,64,64,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,4,0.65,40,22
4033_68,68,79,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER, readStatus)) {
String payloadContentProviderDefault = PreinstallUtil.getPayloadFromContentProviderDefault(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadContentProviderDefault != null && !payloadContentProviderDefault.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,12,0,0,1,1,8,3,0,0,3,0.54,44,24
4033_69,69,72,"String payloadContentProviderDefault = PreinstallUtil.getPayloadFromContentProviderDefault(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,8,3,0,0,2,0.45,45,24
4033_74,74,78,"if (payloadContentProviderDefault != null && !payloadContentProviderDefault.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,8,3,0,0,3,0.53,50,26
4033_75,75,75,"sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,2,0.47,51,26
4033_76,76,76,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,0,0.23,52,27
4033_77,77,77,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,2,0.5,53,28
4033_81,81,94,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus)) {
List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderIntentAction(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,6,3,14,0,0,1,1,8,3,0,0,3,0.53,57,30
4033_82,82,85,"List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderIntentAction(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,8,3,0,0,2,0.45,58,30
4033_87,87,93,"if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,8,3,0,0,3,0.52,63,32
4033_88,88,90,"for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,8,3,0,0,2,0.48,64,32
4033_89,89,89,"sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,2,0.48,65,33
4033_91,91,91,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,0,0.23,67,35
4033_92,92,92,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,2,0.49,68,35
4033_96,96,109,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus)) {
List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderNoPermission(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,6,3,14,0,0,1,1,8,3,0,0,3,0.54,72,37
4033_97,97,100,"List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderNoPermission(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,8,3,0,0,2,0.47,73,37
4033_102,102,108,"if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,8,3,0,0,3,0.53,78,39
4033_103,103,105,"for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,8,3,0,0,2,0.5,79,39
4033_104,104,104,"sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,2,0.5,80,40
4033_106,106,106,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,0,0.23,82,42
4033_107,107,107,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,2,0.51,83,42
4033_111,111,122,"if (PreinstallUtil.hasNotBeenRead(Constants.FILE_SYSTEM, readStatus)) {
String payloadFileSystem = PreinstallUtil.getPayloadFromFileSystem(
deviceInfo.packageName,
adjustConfig.preinstallFilePath,
logger);

if (payloadFileSystem != null && !payloadFileSystem.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,12,0,0,1,1,8,3,0,0,4,0.63,87,44
4033_112,112,115,"String payloadFileSystem = PreinstallUtil.getPayloadFromFileSystem(
deviceInfo.packageName,
adjustConfig.preinstallFilePath,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,8,3,0,0,3,0.54,88,44
4033_117,117,121,"if (payloadFileSystem != null && !payloadFileSystem.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,8,3,0,0,4,0.63,93,46
4033_118,118,118,"sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,3,0.57,94,46
4033_119,119,119,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,0,0.23,95,47
4033_120,120,120,"readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,3,0.58,96,48
4033_124,124,124,sharedPreferencesManager.setPreinstallPayloadReadStatus(readStatus);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,8,3,0,0,3,0.55,100,50
4033_126,126,126,internalState.preinstallHasBeenRead = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,3,0,0,2,0.46,102,51
4034_1,1,1,private void checkForPreinstallI() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,1,0.29,33,20
4034_2,2,2,if (activityState == null) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.19,32,19
4034_3,3,3,if (!activityState.enabled) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.2,31,18
4034_4,4,4,if (activityState.isGdprForgotten) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,6,0,0,0,0.15,30,17
4034_6,6,6,sendPreinstallReferrerI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,6,0,0,1,0.29,28,16
4034_8,8,8,if (!adjustConfig.preinstallTrackingEnabled) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,6,0,0,1,0.34,26,15
4034_9,9,9,if (internalState.hasPreinstallBeenRead()) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,6,0,0,2,0.41,25,14
4034_11,11,14,"if (deviceInfo.packageName == null || deviceInfo.packageName.isEmpty()) {
logger.debug(""Can't read preinstall payload, invalid package name"");
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,9,6,0,0,3,0.48,20,11
4034_12,12,12,"logger.debug(""Can't read preinstall payload, invalid package name"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,3,0.55,22,12
4034_13,13,13,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.1,21,11
4034_16,16,16,SharedPreferencesManager sharedPreferencesManager = new SharedPreferencesManager(getContext());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,6,0,0,0,0.32,18,10
4034_17,17,17,long readStatus = sharedPreferencesManager.getPreinstallPayloadReadStatus();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,9,6,0,0,3,0.52,17,9
4034_19,19,22,"if (PreinstallUtil.hasAllLocationsBeenRead(readStatus)) {
internalState.preinstallHasBeenRead = true;
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,9,6,0,0,2,0.48,12,6
4034_20,20,20,internalState.preinstallHasBeenRead = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,2,0.43,14,7
4034_21,21,21,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.1,13,6
4034_24,24,33,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES, readStatus)) {
String payloadSystemProperty = PreinstallUtil.getPayloadFromSystemProperty(
deviceInfo.packageName, logger);

if (payloadSystemProperty != null && !payloadSystemProperty.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,9,6,0,0,5,0.7,1,0
4034_25,25,26,"String payloadSystemProperty = PreinstallUtil.getPayloadFromSystemProperty(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,9,6,0,0,4,0.63,8,4
4034_28,28,32,"if (payloadSystemProperty != null && !payloadSystemProperty.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,9,6,0,0,5,0.69,2,0
4034_29,29,29,"sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,4,0.64,5,2
4034_30,30,30,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.16,4,1
4034_31,31,31,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,4,0.65,3,0
4034_35,35,44,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus)) {
String payloadSystemPropertyReflection = PreinstallUtil.getPayloadFromSystemPropertyReflection(
deviceInfo.packageName, logger);

if (payloadSystemPropertyReflection != null && !payloadSystemPropertyReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,9,6,0,0,6,0.76,0,0
4034_36,36,37,"String payloadSystemPropertyReflection = PreinstallUtil.getPayloadFromSystemPropertyReflection(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,9,6,0,0,5,0.7,1,0
4034_39,39,43,"if (payloadSystemPropertyReflection != null && !payloadSystemPropertyReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,9,6,0,0,6,0.75,4,2
4034_40,40,40,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,5,0.71,5,2
4034_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.16,6,3
4034_42,42,42,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,5,0.71,7,4
4034_46,46,55,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus)) {
String payloadSystemPropertyFilePath = PreinstallUtil.getPayloadFromSystemPropertyFilePath(
deviceInfo.packageName, logger);

if (payloadSystemPropertyFilePath != null && !payloadSystemPropertyFilePath.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,9,6,0,0,5,0.67,11,6
4034_47,47,48,"String payloadSystemPropertyFilePath = PreinstallUtil.getPayloadFromSystemPropertyFilePath(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,9,6,0,0,4,0.6,12,6
4034_50,50,54,"if (payloadSystemPropertyFilePath != null && !payloadSystemPropertyFilePath.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,9,6,0,0,5,0.66,15,8
4034_51,51,51,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,4,0.61,16,8
4034_52,52,52,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.16,17,9
4034_53,53,53,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,4,0.65,18,10
4034_57,57,66,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus)) {
String payloadSystemPropertyFilePathReflection = PreinstallUtil.getPayloadFromSystemPropertyFilePathReflection(
deviceInfo.packageName, logger);

if (payloadSystemPropertyFilePathReflection != null && !payloadSystemPropertyFilePathReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,9,6,0,0,6,0.74,22,12
4034_58,58,59,"String payloadSystemPropertyFilePathReflection = PreinstallUtil.getPayloadFromSystemPropertyFilePathReflection(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,9,6,0,0,5,0.67,23,12
4034_61,61,65,"if (payloadSystemPropertyFilePathReflection != null && !payloadSystemPropertyFilePathReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,9,6,0,0,6,0.73,26,14
4034_62,62,62,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,5,0.68,27,14
4034_63,63,63,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.16,28,15
4034_64,64,64,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,5,0.71,29,16
4034_68,68,79,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER, readStatus)) {
String payloadContentProviderDefault = PreinstallUtil.getPayloadFromContentProviderDefault(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadContentProviderDefault != null && !payloadContentProviderDefault.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,12,0,0,1,1,9,6,0,0,3,0.52,33,18
4034_69,69,72,"String payloadContentProviderDefault = PreinstallUtil.getPayloadFromContentProviderDefault(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,9,6,0,0,2,0.46,34,18
4034_74,74,78,"if (payloadContentProviderDefault != null && !payloadContentProviderDefault.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,9,6,0,0,3,0.51,39,20
4034_75,75,75,"sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,2,0.45,40,20
4034_76,76,76,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.16,41,21
4034_77,77,77,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,2,0.51,42,22
4034_81,81,94,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus)) {
List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderIntentAction(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,6,3,14,0,0,1,1,9,6,0,0,3,0.51,46,24
4034_82,82,85,"List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderIntentAction(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,9,6,0,0,2,0.44,47,24
4034_87,87,93,"if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,9,6,0,0,3,0.5,52,26
4034_88,88,90,"for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,9,6,0,0,2,0.46,53,26
4034_89,89,89,"sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,2,0.45,54,27
4034_91,91,91,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.16,56,29
4034_92,92,92,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,2,0.49,57,29
4034_96,96,109,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus)) {
List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderNoPermission(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,6,3,14,0,0,1,1,9,6,0,0,3,0.52,61,31
4034_97,97,100,"List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderNoPermission(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,9,6,0,0,2,0.46,62,31
4034_102,102,108,"if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,9,6,0,0,3,0.5,67,33
4034_103,103,105,"for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,9,6,0,0,2,0.48,68,33
4034_104,104,104,"sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,2,0.47,69,34
4034_106,106,106,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.16,71,36
4034_107,107,107,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,2,0.51,72,36
4034_111,111,122,"if (PreinstallUtil.hasNotBeenRead(Constants.FILE_SYSTEM, readStatus)) {
String payloadFileSystem = PreinstallUtil.getPayloadFromFileSystem(
deviceInfo.packageName,
adjustConfig.preinstallFilePath,
logger);

if (payloadFileSystem != null && !payloadFileSystem.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,12,0,0,1,1,9,6,0,0,4,0.6,76,38
4034_112,112,115,"String payloadFileSystem = PreinstallUtil.getPayloadFromFileSystem(
deviceInfo.packageName,
adjustConfig.preinstallFilePath,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,9,6,0,0,3,0.52,77,38
4034_117,117,121,"if (payloadFileSystem != null && !payloadFileSystem.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,9,6,0,0,4,0.59,82,40
4034_118,118,118,"sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,3,0.53,83,40
4034_119,119,119,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.16,84,41
4034_120,120,120,"readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,3,0.56,85,42
4034_124,124,124,sharedPreferencesManager.setPreinstallPayloadReadStatus(readStatus);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,6,0,0,3,0.53,89,44
4034_126,126,126,internalState.preinstallHasBeenRead = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,6,0,0,2,0.43,91,45
4035_1,1,1,private void checkForPreinstallI() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,1,0.35,44,26
4035_2,2,2,if (activityState == null) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,0,0.2,43,25
4035_3,3,3,if (!activityState.enabled) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,0,0.22,42,24
4035_4,4,4,if (activityState.isGdprForgotten) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,4,1,0,0,0.18,41,23
4035_6,6,6,sendPreinstallReferrerI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,4,1,0,1,0.28,39,22
4035_8,8,8,if (!adjustConfig.preinstallTrackingEnabled) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,4,1,0,1,0.36,37,21
4035_9,9,9,if (internalState.hasPreinstallBeenRead()) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,4,1,0,2,0.43,36,20
4035_11,11,14,"if (deviceInfo.packageName == null || deviceInfo.packageName.isEmpty()) {
logger.debug(""Can't read preinstall payload, invalid package name"");
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,9,4,1,0,3,0.5,31,17
4035_12,12,12,"logger.debug(""Can't read preinstall payload, invalid package name"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,3,0.58,33,18
4035_13,13,13,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,4,1,0,0,0.18,32,17
4035_16,16,16,SharedPreferencesManager sharedPreferencesManager = new SharedPreferencesManager(getContext());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,4,1,0,0,0.31,29,16
4035_17,17,17,long readStatus = sharedPreferencesManager.getPreinstallPayloadReadStatus();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,9,4,1,0,3,0.57,28,15
4035_19,19,22,"if (PreinstallUtil.hasAllLocationsBeenRead(readStatus)) {
internalState.preinstallHasBeenRead = true;
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,9,4,1,0,2,0.51,23,12
4035_20,20,20,internalState.preinstallHasBeenRead = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,2,0.43,25,13
4035_21,21,21,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,4,1,0,0,0.18,24,12
4035_24,24,33,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES, readStatus)) {
String payloadSystemProperty = PreinstallUtil.getPayloadFromSystemProperty(
deviceInfo.packageName, logger);

if (payloadSystemProperty != null && !payloadSystemProperty.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,9,4,1,0,5,0.72,12,6
4035_25,25,26,"String payloadSystemProperty = PreinstallUtil.getPayloadFromSystemProperty(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,9,4,1,0,4,0.65,19,10
4035_28,28,32,"if (payloadSystemProperty != null && !payloadSystemProperty.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,9,4,1,0,5,0.72,13,6
4035_29,29,29,"sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,4,0.66,16,8
4035_30,30,30,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,0,0.25,15,7
4035_31,31,31,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,4,0.67,14,6
4035_35,35,44,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus)) {
String payloadSystemPropertyReflection = PreinstallUtil.getPayloadFromSystemPropertyReflection(
deviceInfo.packageName, logger);

if (payloadSystemPropertyReflection != null && !payloadSystemPropertyReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,9,4,1,0,5,0.7,1,0
4035_36,36,37,"String payloadSystemPropertyReflection = PreinstallUtil.getPayloadFromSystemPropertyReflection(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,9,4,1,0,4,0.63,8,4
4035_39,39,43,"if (payloadSystemPropertyReflection != null && !payloadSystemPropertyReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,9,4,1,0,5,0.69,2,0
4035_40,40,40,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,4,0.63,5,2
4035_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,0,0.25,4,1
4035_42,42,42,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,4,0.65,3,0
4035_46,46,55,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus)) {
String payloadSystemPropertyFilePath = PreinstallUtil.getPayloadFromSystemPropertyFilePath(
deviceInfo.packageName, logger);

if (payloadSystemPropertyFilePath != null && !payloadSystemPropertyFilePath.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,9,4,1,0,7,0.82,0,0
4035_47,47,48,"String payloadSystemPropertyFilePath = PreinstallUtil.getPayloadFromSystemPropertyFilePath(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,9,4,1,0,6,0.75,1,0
4035_50,50,54,"if (payloadSystemPropertyFilePath != null && !payloadSystemPropertyFilePath.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,9,4,1,0,7,0.81,4,2
4035_51,51,51,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,6,0.76,5,2
4035_52,52,52,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,0,0.25,6,3
4035_53,53,53,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,5,0.73,7,4
4035_57,57,66,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus)) {
String payloadSystemPropertyFilePathReflection = PreinstallUtil.getPayloadFromSystemPropertyFilePathReflection(
deviceInfo.packageName, logger);

if (payloadSystemPropertyFilePathReflection != null && !payloadSystemPropertyFilePathReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,9,4,1,0,7,0.79,11,6
4035_58,58,59,"String payloadSystemPropertyFilePathReflection = PreinstallUtil.getPayloadFromSystemPropertyFilePathReflection(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,9,4,1,0,6,0.73,12,6
4035_61,61,65,"if (payloadSystemPropertyFilePathReflection != null && !payloadSystemPropertyFilePathReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,9,4,1,0,7,0.78,15,8
4035_62,62,62,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,6,0.73,16,8
4035_63,63,63,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,0,0.25,17,9
4035_64,64,64,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,5,0.71,18,10
4035_68,68,79,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER, readStatus)) {
String payloadContentProviderDefault = PreinstallUtil.getPayloadFromContentProviderDefault(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadContentProviderDefault != null && !payloadContentProviderDefault.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,12,0,0,1,1,9,4,1,0,3,0.53,22,12
4035_69,69,72,"String payloadContentProviderDefault = PreinstallUtil.getPayloadFromContentProviderDefault(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,9,4,1,0,2,0.45,23,12
4035_74,74,78,"if (payloadContentProviderDefault != null && !payloadContentProviderDefault.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,9,4,1,0,3,0.52,28,14
4035_75,75,75,"sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,2,0.45,29,14
4035_76,76,76,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,0,0.25,30,15
4035_77,77,77,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,2,0.52,31,16
4035_81,81,94,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus)) {
List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderIntentAction(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,6,3,14,0,0,1,1,9,4,1,0,3,0.52,35,18
4035_82,82,85,"List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderIntentAction(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,9,4,1,0,2,0.44,36,18
4035_87,87,93,"if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,9,4,1,0,3,0.51,41,20
4035_88,88,90,"for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,9,4,1,0,2,0.47,42,20
4035_89,89,89,"sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,2,0.46,43,21
4035_91,91,91,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,0,0.25,45,23
4035_92,92,92,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,2,0.49,46,23
4035_96,96,109,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus)) {
List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderNoPermission(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,6,3,14,0,0,1,1,9,4,1,0,3,0.53,50,25
4035_97,97,100,"List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderNoPermission(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,9,4,1,0,2,0.46,51,25
4035_102,102,108,"if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,9,4,1,0,3,0.52,56,27
4035_103,103,105,"for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,9,4,1,0,2,0.49,57,27
4035_104,104,104,"sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,2,0.49,58,28
4035_106,106,106,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,0,0.25,60,30
4035_107,107,107,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,2,0.52,61,30
4035_111,111,122,"if (PreinstallUtil.hasNotBeenRead(Constants.FILE_SYSTEM, readStatus)) {
String payloadFileSystem = PreinstallUtil.getPayloadFromFileSystem(
deviceInfo.packageName,
adjustConfig.preinstallFilePath,
logger);

if (payloadFileSystem != null && !payloadFileSystem.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,12,0,0,1,1,9,4,1,0,6,0.75,65,32
4035_112,112,115,"String payloadFileSystem = PreinstallUtil.getPayloadFromFileSystem(
deviceInfo.packageName,
adjustConfig.preinstallFilePath,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,9,4,1,0,5,0.68,66,32
4035_117,117,121,"if (payloadFileSystem != null && !payloadFileSystem.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,9,4,1,0,5,0.72,71,34
4035_118,118,118,"sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,4,0.67,72,34
4035_119,119,119,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,0,0.25,73,35
4035_120,120,120,"readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,4,0.68,74,36
4035_124,124,124,sharedPreferencesManager.setPreinstallPayloadReadStatus(readStatus);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,4,1,0,3,0.56,78,38
4035_126,126,126,internalState.preinstallHasBeenRead = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,4,1,0,2,0.43,80,39
4036_1,1,1,private void checkForPreinstallI() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,1,0.34,55,32
4036_2,2,2,if (activityState == null) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,0,0.22,54,31
4036_3,3,3,if (!activityState.enabled) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,0,0.22,53,30
4036_4,4,4,if (activityState.isGdprForgotten) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,11,6,1,0,0,0.19,52,29
4036_6,6,6,sendPreinstallReferrerI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,11,6,1,0,1,0.28,50,28
4036_8,8,8,if (!adjustConfig.preinstallTrackingEnabled) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,11,6,1,0,1,0.35,48,27
4036_9,9,9,if (internalState.hasPreinstallBeenRead()) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,11,6,1,0,2,0.43,47,26
4036_11,11,14,"if (deviceInfo.packageName == null || deviceInfo.packageName.isEmpty()) {
logger.debug(""Can't read preinstall payload, invalid package name"");
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,11,6,1,0,3,0.48,42,23
4036_12,12,12,"logger.debug(""Can't read preinstall payload, invalid package name"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,3,0.55,44,24
4036_13,13,13,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,1,0,0,0.18,43,23
4036_16,16,16,SharedPreferencesManager sharedPreferencesManager = new SharedPreferencesManager(getContext());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,11,6,1,0,0,0.32,40,22
4036_17,17,17,long readStatus = sharedPreferencesManager.getPreinstallPayloadReadStatus();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,11,6,1,0,3,0.55,39,21
4036_19,19,22,"if (PreinstallUtil.hasAllLocationsBeenRead(readStatus)) {
internalState.preinstallHasBeenRead = true;
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,11,6,1,0,2,0.49,34,18
4036_20,20,20,internalState.preinstallHasBeenRead = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,2,0.43,36,19
4036_21,21,21,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,1,0,0,0.18,35,18
4036_24,24,33,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES, readStatus)) {
String payloadSystemProperty = PreinstallUtil.getPayloadFromSystemProperty(
deviceInfo.packageName, logger);

if (payloadSystemProperty != null && !payloadSystemProperty.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,11,6,1,0,5,0.69,23,12
4036_25,25,26,"String payloadSystemProperty = PreinstallUtil.getPayloadFromSystemProperty(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,11,6,1,0,4,0.62,30,16
4036_28,28,32,"if (payloadSystemProperty != null && !payloadSystemProperty.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,11,6,1,0,5,0.68,24,12
4036_29,29,29,"sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,4,0.63,27,14
4036_30,30,30,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,0,0.17,26,13
4036_31,31,31,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,4,0.65,25,12
4036_35,35,44,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus)) {
String payloadSystemPropertyReflection = PreinstallUtil.getPayloadFromSystemPropertyReflection(
deviceInfo.packageName, logger);

if (payloadSystemPropertyReflection != null && !payloadSystemPropertyReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,11,6,1,0,6,0.74,12,6
4036_36,36,37,"String payloadSystemPropertyReflection = PreinstallUtil.getPayloadFromSystemPropertyReflection(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,11,6,1,0,5,0.68,19,10
4036_39,39,43,"if (payloadSystemPropertyReflection != null && !payloadSystemPropertyReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,11,6,1,0,6,0.74,13,6
4036_40,40,40,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,5,0.7,16,8
4036_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,0,0.17,15,7
4036_42,42,42,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,5,0.7,14,6
4036_46,46,55,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus)) {
String payloadSystemPropertyFilePath = PreinstallUtil.getPayloadFromSystemPropertyFilePath(
deviceInfo.packageName, logger);

if (payloadSystemPropertyFilePath != null && !payloadSystemPropertyFilePath.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,11,6,1,0,7,0.77,1,0
4036_47,47,48,"String payloadSystemPropertyFilePath = PreinstallUtil.getPayloadFromSystemPropertyFilePath(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,11,6,1,0,6,0.71,8,4
4036_50,50,54,"if (payloadSystemPropertyFilePath != null && !payloadSystemPropertyFilePath.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,11,6,1,0,7,0.76,2,0
4036_51,51,51,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,6,0.72,5,2
4036_52,52,52,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,0,0.17,4,1
4036_53,53,53,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,5,0.7,3,0
4036_57,57,66,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus)) {
String payloadSystemPropertyFilePathReflection = PreinstallUtil.getPayloadFromSystemPropertyFilePathReflection(
deviceInfo.packageName, logger);

if (payloadSystemPropertyFilePathReflection != null && !payloadSystemPropertyFilePathReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,11,6,1,0,8,0.82,0,0
4036_58,58,59,"String payloadSystemPropertyFilePathReflection = PreinstallUtil.getPayloadFromSystemPropertyFilePathReflection(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,11,6,1,0,7,0.77,1,0
4036_61,61,65,"if (payloadSystemPropertyFilePathReflection != null && !payloadSystemPropertyFilePathReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,11,6,1,0,8,0.81,4,2
4036_62,62,62,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,7,0.77,5,2
4036_63,63,63,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,0,0.17,6,3
4036_64,64,64,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,6,0.74,7,4
4036_68,68,79,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER, readStatus)) {
String payloadContentProviderDefault = PreinstallUtil.getPayloadFromContentProviderDefault(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadContentProviderDefault != null && !payloadContentProviderDefault.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,12,0,0,1,1,11,6,1,0,3,0.53,11,6
4036_69,69,72,"String payloadContentProviderDefault = PreinstallUtil.getPayloadFromContentProviderDefault(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,11,6,1,0,2,0.47,12,6
4036_74,74,78,"if (payloadContentProviderDefault != null && !payloadContentProviderDefault.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,11,6,1,0,3,0.52,17,8
4036_75,75,75,"sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,2,0.47,18,8
4036_76,76,76,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,0,0.17,19,9
4036_77,77,77,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,2,0.53,20,10
4036_81,81,94,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus)) {
List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderIntentAction(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,6,3,14,0,0,1,1,11,6,1,0,3,0.51,24,12
4036_82,82,85,"List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderIntentAction(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,11,6,1,0,2,0.45,25,12
4036_87,87,93,"if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,11,6,1,0,3,0.5,30,14
4036_88,88,90,"for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,11,6,1,0,2,0.47,31,14
4036_89,89,89,"sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,2,0.46,32,15
4036_91,91,91,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,0,0.17,34,17
4036_92,92,92,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,2,0.5,35,17
4036_96,96,109,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus)) {
List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderNoPermission(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,6,3,14,0,0,1,1,11,6,1,0,3,0.52,39,19
4036_97,97,100,"List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderNoPermission(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,11,6,1,0,2,0.46,40,19
4036_102,102,108,"if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,11,6,1,0,3,0.51,45,21
4036_103,103,105,"for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,11,6,1,0,2,0.49,46,21
4036_104,104,104,"sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,2,0.48,47,22
4036_106,106,106,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,0,0.17,49,24
4036_107,107,107,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,2,0.52,50,24
4036_111,111,122,"if (PreinstallUtil.hasNotBeenRead(Constants.FILE_SYSTEM, readStatus)) {
String payloadFileSystem = PreinstallUtil.getPayloadFromFileSystem(
deviceInfo.packageName,
adjustConfig.preinstallFilePath,
logger);

if (payloadFileSystem != null && !payloadFileSystem.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,12,0,0,1,1,11,6,1,0,6,0.71,54,26
4036_112,112,115,"String payloadFileSystem = PreinstallUtil.getPayloadFromFileSystem(
deviceInfo.packageName,
adjustConfig.preinstallFilePath,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,11,6,1,0,5,0.65,55,26
4036_117,117,121,"if (payloadFileSystem != null && !payloadFileSystem.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,11,6,1,0,5,0.68,60,28
4036_118,118,118,"sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,4,0.64,61,28
4036_119,119,119,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,0,0.17,62,29
4036_120,120,120,"readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,4,0.64,63,30
4036_124,124,124,sharedPreferencesManager.setPreinstallPayloadReadStatus(readStatus);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,11,6,1,0,3,0.55,67,32
4036_126,126,126,internalState.preinstallHasBeenRead = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,11,6,1,0,2,0.43,69,33
4037_1,1,1,private void checkForPreinstallI() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,1,0.33,66,38
4037_2,2,2,if (activityState == null) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.24,65,37
4037_3,3,3,if (!activityState.enabled) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.25,64,36
4037_4,4,4,if (activityState.isGdprForgotten) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,4,0,0,0,0.23,63,35
4037_6,6,6,sendPreinstallReferrerI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,8,4,0,0,1,0.3,61,34
4037_8,8,8,if (!adjustConfig.preinstallTrackingEnabled) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,4,0,0,1,0.37,59,33
4037_9,9,9,if (internalState.hasPreinstallBeenRead()) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,4,0,0,2,0.46,58,32
4037_11,11,14,"if (deviceInfo.packageName == null || deviceInfo.packageName.isEmpty()) {
logger.debug(""Can't read preinstall payload, invalid package name"");
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,8,4,0,0,3,0.48,53,29
4037_12,12,12,"logger.debug(""Can't read preinstall payload, invalid package name"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,3,0.54,55,30
4037_13,13,13,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.28,54,29
4037_16,16,16,SharedPreferencesManager sharedPreferencesManager = new SharedPreferencesManager(getContext());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,4,0,0,0,0.34,51,28
4037_17,17,17,long readStatus = sharedPreferencesManager.getPreinstallPayloadReadStatus();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,8,4,0,0,3,0.53,50,27
4037_19,19,22,"if (PreinstallUtil.hasAllLocationsBeenRead(readStatus)) {
internalState.preinstallHasBeenRead = true;
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,8,4,0,0,2,0.51,45,24
4037_20,20,20,internalState.preinstallHasBeenRead = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,2,0.45,47,25
4037_21,21,21,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.28,46,24
4037_24,24,33,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES, readStatus)) {
String payloadSystemProperty = PreinstallUtil.getPayloadFromSystemProperty(
deviceInfo.packageName, logger);

if (payloadSystemProperty != null && !payloadSystemProperty.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,8,4,0,0,3,0.55,34,18
4037_25,25,26,"String payloadSystemProperty = PreinstallUtil.getPayloadFromSystemProperty(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,8,4,0,0,2,0.47,41,22
4037_28,28,32,"if (payloadSystemProperty != null && !payloadSystemProperty.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,8,4,0,0,3,0.53,35,18
4037_29,29,29,"sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,2,0.46,38,20
4037_30,30,30,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.18,37,19
4037_31,31,31,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,2,0.51,36,18
4037_35,35,44,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus)) {
String payloadSystemPropertyReflection = PreinstallUtil.getPayloadFromSystemPropertyReflection(
deviceInfo.packageName, logger);

if (payloadSystemPropertyReflection != null && !payloadSystemPropertyReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,8,4,0,0,3,0.55,23,12
4037_36,36,37,"String payloadSystemPropertyReflection = PreinstallUtil.getPayloadFromSystemPropertyReflection(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,8,4,0,0,2,0.47,30,16
4037_39,39,43,"if (payloadSystemPropertyReflection != null && !payloadSystemPropertyReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,8,4,0,0,3,0.53,24,12
4037_40,40,40,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,2,0.47,27,14
4037_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.18,26,13
4037_42,42,42,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,2,0.52,25,12
4037_46,46,55,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus)) {
String payloadSystemPropertyFilePath = PreinstallUtil.getPayloadFromSystemPropertyFilePath(
deviceInfo.packageName, logger);

if (payloadSystemPropertyFilePath != null && !payloadSystemPropertyFilePath.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,8,4,0,0,3,0.55,12,6
4037_47,47,48,"String payloadSystemPropertyFilePath = PreinstallUtil.getPayloadFromSystemPropertyFilePath(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,8,4,0,0,2,0.48,19,10
4037_50,50,54,"if (payloadSystemPropertyFilePath != null && !payloadSystemPropertyFilePath.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,8,4,0,0,3,0.54,13,6
4037_51,51,51,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,2,0.47,16,8
4037_52,52,52,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.18,15,7
4037_53,53,53,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,2,0.52,14,6
4037_57,57,66,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus)) {
String payloadSystemPropertyFilePathReflection = PreinstallUtil.getPayloadFromSystemPropertyFilePathReflection(
deviceInfo.packageName, logger);

if (payloadSystemPropertyFilePathReflection != null && !payloadSystemPropertyFilePathReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,8,4,0,0,3,0.55,1,0
4037_58,58,59,"String payloadSystemPropertyFilePathReflection = PreinstallUtil.getPayloadFromSystemPropertyFilePathReflection(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,8,4,0,0,2,0.47,8,4
4037_61,61,65,"if (payloadSystemPropertyFilePathReflection != null && !payloadSystemPropertyFilePathReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,8,4,0,0,3,0.54,2,0
4037_62,62,62,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,2,0.47,5,2
4037_63,63,63,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.18,4,1
4037_64,64,64,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,2,0.52,3,0
4037_68,68,79,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER, readStatus)) {
String payloadContentProviderDefault = PreinstallUtil.getPayloadFromContentProviderDefault(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadContentProviderDefault != null && !payloadContentProviderDefault.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,12,0,0,1,1,8,4,0,0,5,0.7,0,0
4037_69,69,72,"String payloadContentProviderDefault = PreinstallUtil.getPayloadFromContentProviderDefault(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,8,4,0,0,4,0.62,1,0
4037_74,74,78,"if (payloadContentProviderDefault != null && !payloadContentProviderDefault.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,8,4,0,0,5,0.69,6,2
4037_75,75,75,"sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,4,0.63,7,2
4037_76,76,76,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.18,8,3
4037_77,77,77,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,3,0.6,9,4
4037_81,81,94,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus)) {
List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderIntentAction(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,6,3,14,0,0,1,1,8,4,0,0,4,0.61,13,6
4037_82,82,85,"List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderIntentAction(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,8,4,0,0,3,0.53,14,6
4037_87,87,93,"if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,8,4,0,0,4,0.6,19,8
4037_88,88,90,"for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,8,4,0,0,3,0.56,20,8
4037_89,89,89,"sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,3,0.54,21,9
4037_91,91,91,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.18,23,11
4037_92,92,92,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,3,0.58,24,11
4037_96,96,109,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus)) {
List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderNoPermission(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,6,3,14,0,0,1,1,8,4,0,0,4,0.62,28,13
4037_97,97,100,"List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderNoPermission(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,8,4,0,0,3,0.54,29,13
4037_102,102,108,"if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,8,4,0,0,4,0.61,34,15
4037_103,103,105,"for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,8,4,0,0,3,0.57,35,15
4037_104,104,104,"sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,3,0.55,36,16
4037_106,106,106,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.18,38,18
4037_107,107,107,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,3,0.59,39,18
4037_111,111,122,"if (PreinstallUtil.hasNotBeenRead(Constants.FILE_SYSTEM, readStatus)) {
String payloadFileSystem = PreinstallUtil.getPayloadFromFileSystem(
deviceInfo.packageName,
adjustConfig.preinstallFilePath,
logger);

if (payloadFileSystem != null && !payloadFileSystem.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,12,0,0,1,1,8,4,0,0,3,0.55,43,20
4037_112,112,115,"String payloadFileSystem = PreinstallUtil.getPayloadFromFileSystem(
deviceInfo.packageName,
adjustConfig.preinstallFilePath,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,8,4,0,0,2,0.47,44,20
4037_117,117,121,"if (payloadFileSystem != null && !payloadFileSystem.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,8,4,0,0,3,0.53,49,22
4037_118,118,118,"sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,2,0.46,50,22
4037_119,119,119,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.18,51,23
4037_120,120,120,"readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,2,0.52,52,24
4037_124,124,124,sharedPreferencesManager.setPreinstallPayloadReadStatus(readStatus);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,8,4,0,0,3,0.53,56,26
4037_126,126,126,internalState.preinstallHasBeenRead = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,4,0,0,2,0.45,58,27
4038_1,1,1,private void checkForPreinstallI() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,1,0.38,79,44
4038_2,2,2,if (activityState == null) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,0,0.29,78,43
4038_3,3,3,if (!activityState.enabled) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,0,0.3,77,42
4038_4,4,4,if (activityState.isGdprForgotten) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,11,5,0,0,0,0.29,76,41
4038_6,6,6,sendPreinstallReferrerI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,11,5,0,0,1,0.31,74,40
4038_8,8,8,if (!adjustConfig.preinstallTrackingEnabled) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,11,5,0,0,1,0.36,72,39
4038_9,9,9,if (internalState.hasPreinstallBeenRead()) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,11,5,0,0,2,0.47,71,38
4038_11,11,14,"if (deviceInfo.packageName == null || deviceInfo.packageName.isEmpty()) {
logger.debug(""Can't read preinstall payload, invalid package name"");
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,11,5,0,0,3,0.48,66,35
4038_12,12,12,"logger.debug(""Can't read preinstall payload, invalid package name"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,3,0.56,68,36
4038_13,13,13,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,5,0,0,0,0.2,67,35
4038_16,16,16,SharedPreferencesManager sharedPreferencesManager = new SharedPreferencesManager(getContext());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,11,5,0,0,0,0.34,64,34
4038_17,17,17,long readStatus = sharedPreferencesManager.getPreinstallPayloadReadStatus();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,11,5,0,0,3,0.52,63,33
4038_19,19,22,"if (PreinstallUtil.hasAllLocationsBeenRead(readStatus)) {
internalState.preinstallHasBeenRead = true;
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,11,5,0,0,2,0.51,58,30
4038_20,20,20,internalState.preinstallHasBeenRead = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,2,0.48,60,31
4038_21,21,21,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,5,0,0,0,0.2,59,30
4038_24,24,33,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES, readStatus)) {
String payloadSystemProperty = PreinstallUtil.getPayloadFromSystemProperty(
deviceInfo.packageName, logger);

if (payloadSystemProperty != null && !payloadSystemProperty.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,11,5,0,0,3,0.58,47,24
4038_25,25,26,"String payloadSystemProperty = PreinstallUtil.getPayloadFromSystemProperty(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,11,5,0,0,2,0.49,54,28
4038_28,28,32,"if (payloadSystemProperty != null && !payloadSystemProperty.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,11,5,0,0,3,0.57,48,24
4038_29,29,29,"sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,2,0.53,51,26
4038_30,30,30,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,0,0.22,50,25
4038_31,31,31,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,2,0.53,49,24
4038_35,35,44,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus)) {
String payloadSystemPropertyReflection = PreinstallUtil.getPayloadFromSystemPropertyReflection(
deviceInfo.packageName, logger);

if (payloadSystemPropertyReflection != null && !payloadSystemPropertyReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,11,5,0,0,3,0.56,36,18
4038_36,36,37,"String payloadSystemPropertyReflection = PreinstallUtil.getPayloadFromSystemPropertyReflection(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,11,5,0,0,2,0.48,43,22
4038_39,39,43,"if (payloadSystemPropertyReflection != null && !payloadSystemPropertyReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,11,5,0,0,3,0.55,37,18
4038_40,40,40,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,2,0.51,40,20
4038_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,0,0.22,39,19
4038_42,42,42,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,2,0.52,38,18
4038_46,46,55,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus)) {
String payloadSystemPropertyFilePath = PreinstallUtil.getPayloadFromSystemPropertyFilePath(
deviceInfo.packageName, logger);

if (payloadSystemPropertyFilePath != null && !payloadSystemPropertyFilePath.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,11,5,0,0,3,0.58,25,12
4038_47,47,48,"String payloadSystemPropertyFilePath = PreinstallUtil.getPayloadFromSystemPropertyFilePath(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,11,5,0,0,2,0.49,32,16
4038_50,50,54,"if (payloadSystemPropertyFilePath != null && !payloadSystemPropertyFilePath.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,11,5,0,0,3,0.56,26,12
4038_51,51,51,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,2,0.53,29,14
4038_52,52,52,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,0,0.22,28,13
4038_53,53,53,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,2,0.53,27,12
4038_57,57,66,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus)) {
String payloadSystemPropertyFilePathReflection = PreinstallUtil.getPayloadFromSystemPropertyFilePathReflection(
deviceInfo.packageName, logger);

if (payloadSystemPropertyFilePathReflection != null && !payloadSystemPropertyFilePathReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,11,5,0,0,3,0.57,14,6
4038_58,58,59,"String payloadSystemPropertyFilePathReflection = PreinstallUtil.getPayloadFromSystemPropertyFilePathReflection(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,11,5,0,0,2,0.48,21,10
4038_61,61,65,"if (payloadSystemPropertyFilePathReflection != null && !payloadSystemPropertyFilePathReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,11,5,0,0,3,0.55,15,6
4038_62,62,62,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,2,0.52,18,8
4038_63,63,63,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,0,0.22,17,7
4038_64,64,64,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,2,0.52,16,6
4038_68,68,79,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER, readStatus)) {
String payloadContentProviderDefault = PreinstallUtil.getPayloadFromContentProviderDefault(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadContentProviderDefault != null && !payloadContentProviderDefault.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,12,0,0,1,1,11,5,0,0,5,0.7,1,0
4038_69,69,72,"String payloadContentProviderDefault = PreinstallUtil.getPayloadFromContentProviderDefault(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,11,5,0,0,4,0.59,8,4
4038_74,74,78,"if (payloadContentProviderDefault != null && !payloadContentProviderDefault.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,11,5,0,0,5,0.7,2,0
4038_75,75,75,"sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,4,0.67,5,2
4038_76,76,76,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,0,0.22,4,1
4038_77,77,77,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,4,0.64,3,0
4038_81,81,94,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus)) {
List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderIntentAction(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,6,3,14,0,0,1,1,11,5,0,0,7,0.79,0,0
4038_82,82,85,"List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderIntentAction(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,11,5,0,0,6,0.69,1,0
4038_87,87,93,"if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,11,5,0,0,7,0.79,6,2
4038_88,88,90,"for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,11,5,0,0,6,0.77,7,2
4038_89,89,89,"sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,6,0.75,8,3
4038_91,91,91,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,0,0.22,10,5
4038_92,92,92,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,6,0.74,11,5
4038_96,96,109,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus)) {
List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderNoPermission(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,6,3,14,0,0,1,1,11,5,0,0,8,0.81,15,7
4038_97,97,100,"List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderNoPermission(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,11,5,0,0,7,0.72,16,7
4038_102,102,108,"if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,11,5,0,0,8,0.81,21,9
4038_103,103,105,"for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,11,5,0,0,7,0.79,22,9
4038_104,104,104,"sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,5,0.71,23,10
4038_106,106,106,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,0,0.22,25,12
4038_107,107,107,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,5,0.68,26,12
4038_111,111,122,"if (PreinstallUtil.hasNotBeenRead(Constants.FILE_SYSTEM, readStatus)) {
String payloadFileSystem = PreinstallUtil.getPayloadFromFileSystem(
deviceInfo.packageName,
adjustConfig.preinstallFilePath,
logger);

if (payloadFileSystem != null && !payloadFileSystem.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,12,0,0,1,1,11,5,0,0,3,0.57,30,14
4038_112,112,115,"String payloadFileSystem = PreinstallUtil.getPayloadFromFileSystem(
deviceInfo.packageName,
adjustConfig.preinstallFilePath,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,11,5,0,0,2,0.48,31,14
4038_117,117,121,"if (payloadFileSystem != null && !payloadFileSystem.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,11,5,0,0,3,0.56,36,16
4038_118,118,118,"sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,2,0.53,37,16
4038_119,119,119,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,0,0.22,38,17
4038_120,120,120,"readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,5,0,0,2,0.53,39,18
4038_124,124,124,sharedPreferencesManager.setPreinstallPayloadReadStatus(readStatus);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,11,5,0,0,3,0.51,43,20
4038_126,126,126,internalState.preinstallHasBeenRead = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,11,5,0,0,2,0.48,45,21
4039_1,1,1,private void checkForPreinstallI() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,1,0.36,94,51
4039_2,2,2,if (activityState == null) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,0,0.28,93,50
4039_3,3,3,if (!activityState.enabled) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,0,0.29,92,49
4039_4,4,4,if (activityState.isGdprForgotten) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,12,5,0,0,0,0.28,91,48
4039_6,6,6,sendPreinstallReferrerI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,12,5,0,0,1,0.28,89,47
4039_8,8,8,if (!adjustConfig.preinstallTrackingEnabled) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,12,5,0,0,1,0.37,87,46
4039_9,9,9,if (internalState.hasPreinstallBeenRead()) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,12,5,0,0,2,0.46,86,45
4039_11,11,14,"if (deviceInfo.packageName == null || deviceInfo.packageName.isEmpty()) {
logger.debug(""Can't read preinstall payload, invalid package name"");
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,12,5,0,0,3,0.47,81,42
4039_12,12,12,"logger.debug(""Can't read preinstall payload, invalid package name"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,3,0.54,83,43
4039_13,13,13,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,12,5,0,0,0,0.2,82,42
4039_16,16,16,SharedPreferencesManager sharedPreferencesManager = new SharedPreferencesManager(getContext());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,12,5,0,0,0,0.33,79,41
4039_17,17,17,long readStatus = sharedPreferencesManager.getPreinstallPayloadReadStatus();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,12,5,0,0,3,0.52,78,40
4039_19,19,22,"if (PreinstallUtil.hasAllLocationsBeenRead(readStatus)) {
internalState.preinstallHasBeenRead = true;
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,12,5,0,0,2,0.51,73,37
4039_20,20,20,internalState.preinstallHasBeenRead = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,2,0.48,75,38
4039_21,21,21,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,12,5,0,0,0,0.2,74,37
4039_24,24,33,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES, readStatus)) {
String payloadSystemProperty = PreinstallUtil.getPayloadFromSystemProperty(
deviceInfo.packageName, logger);

if (payloadSystemProperty != null && !payloadSystemProperty.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,12,5,0,0,3,0.57,62,31
4039_25,25,26,"String payloadSystemProperty = PreinstallUtil.getPayloadFromSystemProperty(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,12,5,0,0,2,0.49,69,35
4039_28,28,32,"if (payloadSystemProperty != null && !payloadSystemProperty.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,12,5,0,0,3,0.55,63,31
4039_29,29,29,"sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,2,0.53,66,33
4039_30,30,30,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,0,0.21,65,32
4039_31,31,31,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,2,0.51,64,31
4039_35,35,44,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus)) {
String payloadSystemPropertyReflection = PreinstallUtil.getPayloadFromSystemPropertyReflection(
deviceInfo.packageName, logger);

if (payloadSystemPropertyReflection != null && !payloadSystemPropertyReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,12,5,0,0,3,0.55,51,25
4039_36,36,37,"String payloadSystemPropertyReflection = PreinstallUtil.getPayloadFromSystemPropertyReflection(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,12,5,0,0,2,0.48,58,29
4039_39,39,43,"if (payloadSystemPropertyReflection != null && !payloadSystemPropertyReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,12,5,0,0,3,0.54,52,25
4039_40,40,40,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,2,0.51,55,27
4039_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,0,0.21,54,26
4039_42,42,42,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,2,0.5,53,25
4039_46,46,55,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus)) {
String payloadSystemPropertyFilePath = PreinstallUtil.getPayloadFromSystemPropertyFilePath(
deviceInfo.packageName, logger);

if (payloadSystemPropertyFilePath != null && !payloadSystemPropertyFilePath.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,12,5,0,0,3,0.56,40,19
4039_47,47,48,"String payloadSystemPropertyFilePath = PreinstallUtil.getPayloadFromSystemPropertyFilePath(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,12,5,0,0,2,0.49,47,23
4039_50,50,54,"if (payloadSystemPropertyFilePath != null && !payloadSystemPropertyFilePath.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,12,5,0,0,3,0.55,41,19
4039_51,51,51,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,2,0.52,44,21
4039_52,52,52,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,0,0.21,43,20
4039_53,53,53,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,2,0.51,42,19
4039_57,57,66,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus)) {
String payloadSystemPropertyFilePathReflection = PreinstallUtil.getPayloadFromSystemPropertyFilePathReflection(
deviceInfo.packageName, logger);

if (payloadSystemPropertyFilePathReflection != null && !payloadSystemPropertyFilePathReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,12,5,0,0,3,0.55,29,13
4039_58,58,59,"String payloadSystemPropertyFilePathReflection = PreinstallUtil.getPayloadFromSystemPropertyFilePathReflection(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,12,5,0,0,2,0.48,36,17
4039_61,61,65,"if (payloadSystemPropertyFilePathReflection != null && !payloadSystemPropertyFilePathReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,12,5,0,0,3,0.54,30,13
4039_62,62,62,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,2,0.51,33,15
4039_63,63,63,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,0,0.21,32,14
4039_64,64,64,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,2,0.51,31,13
4039_68,68,79,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER, readStatus)) {
String payloadContentProviderDefault = PreinstallUtil.getPayloadFromContentProviderDefault(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadContentProviderDefault != null && !payloadContentProviderDefault.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,12,0,0,1,1,12,5,0,0,5,0.68,16,7
4039_69,69,72,"String payloadContentProviderDefault = PreinstallUtil.getPayloadFromContentProviderDefault(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,12,5,0,0,4,0.58,23,11
4039_74,74,78,"if (payloadContentProviderDefault != null && !payloadContentProviderDefault.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,12,5,0,0,5,0.68,17,7
4039_75,75,75,"sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,4,0.66,20,9
4039_76,76,76,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,0,0.21,19,8
4039_77,77,77,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,4,0.62,18,7
4039_81,81,94,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus)) {
List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderIntentAction(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,6,3,14,0,0,1,1,12,5,0,0,7,0.77,1,0
4039_82,82,85,"List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderIntentAction(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,12,5,0,0,6,0.67,10,5
4039_87,87,93,"if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,12,5,0,0,7,0.77,2,0
4039_88,88,90,"for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,12,5,0,0,6,0.75,5,2
4039_89,89,89,"sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,6,0.73,6,2
4039_91,91,91,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,0,0.21,4,1
4039_92,92,92,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,6,0.71,3,0
4039_96,96,109,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus)) {
List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderNoPermission(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,6,3,14,0,0,1,1,12,5,0,0,8,0.78,0,0
4039_97,97,100,"List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderNoPermission(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,12,5,0,0,7,0.7,1,0
4039_102,102,108,"if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,12,5,0,0,8,0.79,6,2
4039_103,103,105,"for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,12,5,0,0,7,0.77,7,2
4039_104,104,104,"sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,5,0.69,8,3
4039_106,106,106,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,0,0.21,10,5
4039_107,107,107,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,5,0.66,11,5
4039_111,111,122,"if (PreinstallUtil.hasNotBeenRead(Constants.FILE_SYSTEM, readStatus)) {
String payloadFileSystem = PreinstallUtil.getPayloadFromFileSystem(
deviceInfo.packageName,
adjustConfig.preinstallFilePath,
logger);

if (payloadFileSystem != null && !payloadFileSystem.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,12,0,0,1,1,12,5,0,0,3,0.56,15,7
4039_112,112,115,"String payloadFileSystem = PreinstallUtil.getPayloadFromFileSystem(
deviceInfo.packageName,
adjustConfig.preinstallFilePath,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,12,5,0,0,2,0.48,16,7
4039_117,117,121,"if (payloadFileSystem != null && !payloadFileSystem.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,12,5,0,0,3,0.55,21,9
4039_118,118,118,"sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,2,0.52,22,9
4039_119,119,119,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,0,0.21,23,10
4039_120,120,120,"readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,0,0,2,0.52,24,11
4039_124,124,124,sharedPreferencesManager.setPreinstallPayloadReadStatus(readStatus);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,12,5,0,0,3,0.5,28,13
4039_126,126,126,internalState.preinstallHasBeenRead = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,12,5,0,0,2,0.48,30,14
4040_1,1,1,private void checkForPreinstallI() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,1,0.35,109,58
4040_2,2,2,if (activityState == null) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.21,108,57
4040_3,3,3,if (!activityState.enabled) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.22,107,56
4040_4,4,4,if (activityState.isGdprForgotten) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,5,0,0,0,0.19,106,55
4040_6,6,6,sendPreinstallReferrerI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,5,0,0,1,0.27,104,54
4040_8,8,8,if (!adjustConfig.preinstallTrackingEnabled) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,5,0,0,1,0.38,102,53
4040_9,9,9,if (internalState.hasPreinstallBeenRead()) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,5,0,0,2,0.44,101,52
4040_11,11,14,"if (deviceInfo.packageName == null || deviceInfo.packageName.isEmpty()) {
logger.debug(""Can't read preinstall payload, invalid package name"");
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,9,5,0,0,3,0.49,96,49
4040_12,12,12,"logger.debug(""Can't read preinstall payload, invalid package name"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,3,0.56,98,50
4040_13,13,13,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.19,97,49
4040_16,16,16,SharedPreferencesManager sharedPreferencesManager = new SharedPreferencesManager(getContext());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,5,0,0,0,0.33,94,48
4040_17,17,17,long readStatus = sharedPreferencesManager.getPreinstallPayloadReadStatus();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,9,5,0,0,3,0.55,93,47
4040_19,19,22,"if (PreinstallUtil.hasAllLocationsBeenRead(readStatus)) {
internalState.preinstallHasBeenRead = true;
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,9,5,0,0,2,0.52,88,44
4040_20,20,20,internalState.preinstallHasBeenRead = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,2,0.44,90,45
4040_21,21,21,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.19,89,44
4040_24,24,33,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES, readStatus)) {
String payloadSystemProperty = PreinstallUtil.getPayloadFromSystemProperty(
deviceInfo.packageName, logger);

if (payloadSystemProperty != null && !payloadSystemProperty.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,9,5,0,0,4,0.64,77,38
4040_25,25,26,"String payloadSystemProperty = PreinstallUtil.getPayloadFromSystemProperty(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,9,5,0,0,3,0.58,84,42
4040_28,28,32,"if (payloadSystemProperty != null && !payloadSystemProperty.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,9,5,0,0,4,0.62,78,38
4040_29,29,29,"sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,3,0.57,81,40
4040_30,30,30,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.23,80,39
4040_31,31,31,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,3,0.58,79,38
4040_35,35,44,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus)) {
String payloadSystemPropertyReflection = PreinstallUtil.getPayloadFromSystemPropertyReflection(
deviceInfo.packageName, logger);

if (payloadSystemPropertyReflection != null && !payloadSystemPropertyReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,9,5,0,0,4,0.61,66,32
4040_36,36,37,"String payloadSystemPropertyReflection = PreinstallUtil.getPayloadFromSystemPropertyReflection(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,9,5,0,0,3,0.55,73,36
4040_39,39,43,"if (payloadSystemPropertyReflection != null && !payloadSystemPropertyReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,9,5,0,0,4,0.59,67,32
4040_40,40,40,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,3,0.54,70,34
4040_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.23,69,33
4040_42,42,42,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,3,0.57,68,32
4040_46,46,55,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus)) {
String payloadSystemPropertyFilePath = PreinstallUtil.getPayloadFromSystemPropertyFilePath(
deviceInfo.packageName, logger);

if (payloadSystemPropertyFilePath != null && !payloadSystemPropertyFilePath.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,9,5,0,0,5,0.69,55,26
4040_47,47,48,"String payloadSystemPropertyFilePath = PreinstallUtil.getPayloadFromSystemPropertyFilePath(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,9,5,0,0,4,0.65,62,30
4040_50,50,54,"if (payloadSystemPropertyFilePath != null && !payloadSystemPropertyFilePath.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,9,5,0,0,5,0.67,56,26
4040_51,51,51,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,4,0.62,59,28
4040_52,52,52,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.23,58,27
4040_53,53,53,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,3,0.59,57,26
4040_57,57,66,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus)) {
String payloadSystemPropertyFilePathReflection = PreinstallUtil.getPayloadFromSystemPropertyFilePathReflection(
deviceInfo.packageName, logger);

if (payloadSystemPropertyFilePathReflection != null && !payloadSystemPropertyFilePathReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,9,5,0,0,5,0.67,44,20
4040_58,58,59,"String payloadSystemPropertyFilePathReflection = PreinstallUtil.getPayloadFromSystemPropertyFilePathReflection(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,9,5,0,0,4,0.62,51,24
4040_61,61,65,"if (payloadSystemPropertyFilePathReflection != null && !payloadSystemPropertyFilePathReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,9,5,0,0,5,0.65,45,20
4040_62,62,62,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,4,0.6,48,22
4040_63,63,63,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.23,47,21
4040_64,64,64,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,3,0.58,46,20
4040_68,68,79,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER, readStatus)) {
String payloadContentProviderDefault = PreinstallUtil.getPayloadFromContentProviderDefault(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadContentProviderDefault != null && !payloadContentProviderDefault.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,12,0,0,1,1,9,5,0,0,3,0.52,31,14
4040_69,69,72,"String payloadContentProviderDefault = PreinstallUtil.getPayloadFromContentProviderDefault(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,9,5,0,0,2,0.45,38,18
4040_74,74,78,"if (payloadContentProviderDefault != null && !payloadContentProviderDefault.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,9,5,0,0,3,0.5,32,14
4040_75,75,75,"sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,2,0.44,35,16
4040_76,76,76,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.23,34,15
4040_77,77,77,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,2,0.5,33,14
4040_81,81,94,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus)) {
List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderIntentAction(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,6,3,14,0,0,1,1,9,5,0,0,3,0.51,16,7
4040_82,82,85,"List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderIntentAction(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,9,5,0,0,2,0.44,25,12
4040_87,87,93,"if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,9,5,0,0,3,0.5,17,7
4040_88,88,90,"for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,9,5,0,0,2,0.46,20,9
4040_89,89,89,"sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,2,0.45,21,9
4040_91,91,91,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.23,19,8
4040_92,92,92,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,2,0.47,18,7
4040_96,96,109,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus)) {
List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderNoPermission(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,6,3,14,0,0,1,1,9,5,0,0,3,0.52,1,0
4040_97,97,100,"List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderNoPermission(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,9,5,0,0,2,0.46,10,5
4040_102,102,108,"if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,9,5,0,0,3,0.51,2,0
4040_103,103,105,"for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,9,5,0,0,2,0.48,5,2
4040_104,104,104,"sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,2,0.48,6,2
4040_106,106,106,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.23,4,1
4040_107,107,107,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,2,0.5,3,0
4040_111,111,122,"if (PreinstallUtil.hasNotBeenRead(Constants.FILE_SYSTEM, readStatus)) {
String payloadFileSystem = PreinstallUtil.getPayloadFromFileSystem(
deviceInfo.packageName,
adjustConfig.preinstallFilePath,
logger);

if (payloadFileSystem != null && !payloadFileSystem.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,12,0,0,1,1,9,5,0,0,5,0.72,0,0
4040_112,112,115,"String payloadFileSystem = PreinstallUtil.getPayloadFromFileSystem(
deviceInfo.packageName,
adjustConfig.preinstallFilePath,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,9,5,0,0,4,0.65,1,0
4040_117,117,121,"if (payloadFileSystem != null && !payloadFileSystem.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,9,5,0,0,5,0.71,6,2
4040_118,118,118,"sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,4,0.66,7,2
4040_119,119,119,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.23,8,3
4040_120,120,120,"readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,4,0.65,9,4
4040_124,124,124,sharedPreferencesManager.setPreinstallPayloadReadStatus(readStatus);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,5,0,0,3,0.52,13,6
4040_126,126,126,internalState.preinstallHasBeenRead = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,5,0,0,2,0.44,15,7
4041_1,1,1,    private void startI() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.51,0,0
4041_2,2,6,"if (internalState.hasFirstSdkStartNotOcurred()) {
AdjustSigner.onResume(adjustConfig.logger);
startFirstSessionI();
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,1,4,2,0,0,3,0.71,0,0
4041_3,3,3,AdjustSigner.onResume(adjustConfig.logger);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.34,1,0
4041_4,4,4,startFirstSessionI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.68,2,1
4041_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.18,3,2
4041_8,8,10,"if (!activityState.enabled) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,0,0,0,0.28,6,4
4041_9,9,9,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.18,7,4
4041_12,12,12,AdjustSigner.onResume(adjustConfig.logger);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.34,10,6
4041_14,14,14,updateHandlersStatusAndSendI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.25,12,7
4041_16,16,16,processSessionI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.21,14,8
4041_18,18,18,checkAttributionStateI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,1,0.52,16,9
4041_20,20,20,processCachedDeeplinkI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.19,18,10
4043_1,1,1,private void startFirstSessionI() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.39,3,2
4043_2,2,2,activityState = new ActivityState();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.36,2,1
4043_3,3,3,internalState.firstSdkStart = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.35,1,0
4043_5,5,5,updateHandlersStatusAndSendI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,3,0.84,0,0
4043_7,7,7,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.34,2,1
4043_9,9,9,SharedPreferencesManager sharedPreferencesManager = new SharedPreferencesManager(getContext());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,0,0,0,0.34,4,2
4043_10,10,10,activityState.pushToken = sharedPreferencesManager.getPushToken();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,0,0.31,5,2
4043_12,12,39,"if (internalState.isEnabled()) {
if (sharedPreferencesManager.getGdprForgetMe()) {
gdprForgetMeI();
} else {
if (sharedPreferencesManager.getDisableThirdPartySharing()) {
disableThirdPartySharingI();
}
for (AdjustThirdPartySharing adjustThirdPartySharing :
adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray)
{
trackThirdPartySharingI(adjustThirdPartySharing);
}
if (adjustConfig.preLaunchActions.lastMeasurementConsentTracked != null) {
trackMeasurementConsentI(
adjustConfig.preLaunchActions.
lastMeasurementConsentTracked.booleanValue());
}

adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray =
new ArrayList<>();
adjustConfig.preLaunchActions.lastMeasurementConsentTracked = null;


activityState.sessionCount = 1;
transferSessionPackageI(now);
checkAfterNewStartI(sharedPreferencesManager);
}
}",1,0,0,0,0,0,0,0,0,15,3,28,0,0,1,1,4,2,0,0,0,0.39,7,4
4043_13,13,38,"if (sharedPreferencesManager.getGdprForgetMe()) {
gdprForgetMeI();
} else {
if (sharedPreferencesManager.getDisableThirdPartySharing()) {
disableThirdPartySharingI();
}
for (AdjustThirdPartySharing adjustThirdPartySharing :
adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray)
{
trackThirdPartySharingI(adjustThirdPartySharing);
}
if (adjustConfig.preLaunchActions.lastMeasurementConsentTracked != null) {
trackMeasurementConsentI(
adjustConfig.preLaunchActions.
lastMeasurementConsentTracked.booleanValue());
}

adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray =
new ArrayList<>();
adjustConfig.preLaunchActions.lastMeasurementConsentTracked = null;


activityState.sessionCount = 1;
transferSessionPackageI(now);
checkAfterNewStartI(sharedPreferencesManager);
}",1,0,0,0,0,0,0,0,0,14,2,26,0,0,0,0,4,2,0,0,0,0.39,8,4
4043_14,14,14,gdprForgetMeI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.38,9,5
4043_15,15,15,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.22,10,6
4043_16,16,18,"if (sharedPreferencesManager.getDisableThirdPartySharing()) {
disableThirdPartySharingI();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,2,0,0,0,0.39,11,7
4043_17,17,17,disableThirdPartySharingI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.39,12,8
4043_19,19,23,"for (AdjustThirdPartySharing adjustThirdPartySharing :
adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray)
{
trackThirdPartySharingI(adjustThirdPartySharing);
}",0,0,0,1,0,0,0,0,0,2,1,5,0,0,0,0,4,2,0,0,0,0.4,14,10
4043_20,20,20,adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.38,15,10
4043_22,22,22,trackThirdPartySharingI(adjustThirdPartySharing);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.41,17,12
4043_24,24,28,"if (adjustConfig.preLaunchActions.lastMeasurementConsentTracked != null) {
trackMeasurementConsentI(
adjustConfig.preLaunchActions.
lastMeasurementConsentTracked.booleanValue());
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,1,4,2,0,0,0,0.3,19,13
4043_25,25,27,"trackMeasurementConsentI(
adjustConfig.preLaunchActions.
lastMeasurementConsentTracked.booleanValue());",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,4,2,0,0,0,0.3,20,13
4043_30,30,31,"adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray =
new ArrayList<>();",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,2,0,0,0,0.36,25,15
4043_32,32,32,adjustConfig.preLaunchActions.lastMeasurementConsentTracked = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.31,27,16
4043_35,35,35,activityState.sessionCount = 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.36,30,17
4043_36,36,36,transferSessionPackageI(now);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.4,31,17
4043_37,37,37,checkAfterNewStartI(sharedPreferencesManager);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.33,32,18
4043_41,41,41,activityState.resetSessionAttributes(now);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.39,36,20
4043_42,42,42,activityState.enabled = internalState.isEnabled();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.33,37,20
4043_43,43,43,activityState.updatePackages = internalState.itHasToUpdatePackages();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,0,0,1,0.51,38,21
4043_45,45,45,writeActivityStateI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.35,40,23
4043_46,46,46,sharedPreferencesManager.removePushToken();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.31,41,23
4043_47,47,47,sharedPreferencesManager.removeGdprForgetMe();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.38,42,24
4043_48,48,48,sharedPreferencesManager.removeDisableThirdPartySharing();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,0,0.39,43,25
4043_50,50,50,processCachedDeeplinkI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.3,45,27
4044_1,1,1,private void startFirstSessionI() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.62,10,6
4044_2,2,2,activityState = new ActivityState();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.28,9,5
4044_3,3,3,internalState.firstSdkStart = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,4,0,0,1,0.54,8,4
4044_5,5,5,updateHandlersStatusAndSendI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,4,0,0,0,0.31,6,3
4044_7,7,7,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,4,0,0,0,0.32,4,2
4044_9,9,9,SharedPreferencesManager sharedPreferencesManager = new SharedPreferencesManager(getContext());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,0,0.36,2,1
4044_10,10,10,activityState.pushToken = sharedPreferencesManager.getPushToken();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,0,0,0,0.34,1,0
4044_12,12,39,"if (internalState.isEnabled()) {
if (sharedPreferencesManager.getGdprForgetMe()) {
gdprForgetMeI();
} else {
if (sharedPreferencesManager.getDisableThirdPartySharing()) {
disableThirdPartySharingI();
}
for (AdjustThirdPartySharing adjustThirdPartySharing :
adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray)
{
trackThirdPartySharingI(adjustThirdPartySharing);
}
if (adjustConfig.preLaunchActions.lastMeasurementConsentTracked != null) {
trackMeasurementConsentI(
adjustConfig.preLaunchActions.
lastMeasurementConsentTracked.booleanValue());
}

adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray =
new ArrayList<>();
adjustConfig.preLaunchActions.lastMeasurementConsentTracked = null;


activityState.sessionCount = 1;
transferSessionPackageI(now);
checkAfterNewStartI(sharedPreferencesManager);
}
}",1,0,0,0,0,0,0,0,0,15,3,28,0,0,1,1,5,4,0,0,4,0.63,0,0
4044_13,13,38,"if (sharedPreferencesManager.getGdprForgetMe()) {
gdprForgetMeI();
} else {
if (sharedPreferencesManager.getDisableThirdPartySharing()) {
disableThirdPartySharingI();
}
for (AdjustThirdPartySharing adjustThirdPartySharing :
adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray)
{
trackThirdPartySharingI(adjustThirdPartySharing);
}
if (adjustConfig.preLaunchActions.lastMeasurementConsentTracked != null) {
trackMeasurementConsentI(
adjustConfig.preLaunchActions.
lastMeasurementConsentTracked.booleanValue());
}

adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray =
new ArrayList<>();
adjustConfig.preLaunchActions.lastMeasurementConsentTracked = null;


activityState.sessionCount = 1;
transferSessionPackageI(now);
checkAfterNewStartI(sharedPreferencesManager);
}",1,0,0,0,0,0,0,0,0,14,2,26,0,0,0,0,5,4,0,0,3,0.59,1,0
4044_14,14,14,gdprForgetMeI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.24,2,1
4044_15,15,15,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.26,3,2
4044_16,16,18,"if (sharedPreferencesManager.getDisableThirdPartySharing()) {
disableThirdPartySharingI();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,4,0,0,0,0.44,4,3
4044_17,17,17,disableThirdPartySharingI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.42,5,4
4044_19,19,23,"for (AdjustThirdPartySharing adjustThirdPartySharing :
adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray)
{
trackThirdPartySharingI(adjustThirdPartySharing);
}",0,0,0,1,0,0,0,0,0,2,1,5,0,0,0,0,5,4,0,0,1,0.42,7,6
4044_20,20,20,adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.34,8,6
4044_22,22,22,trackThirdPartySharingI(adjustThirdPartySharing);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.47,10,8
4044_24,24,28,"if (adjustConfig.preLaunchActions.lastMeasurementConsentTracked != null) {
trackMeasurementConsentI(
adjustConfig.preLaunchActions.
lastMeasurementConsentTracked.booleanValue());
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,1,5,4,0,0,1,0.43,12,9
4044_25,25,27,"trackMeasurementConsentI(
adjustConfig.preLaunchActions.
lastMeasurementConsentTracked.booleanValue());",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,5,4,0,0,1,0.44,13,9
4044_30,30,31,"adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray =
new ArrayList<>();",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,4,0,0,0,0.34,18,11
4044_32,32,32,adjustConfig.preLaunchActions.lastMeasurementConsentTracked = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,4,0,0,1,0.41,20,12
4044_35,35,35,activityState.sessionCount = 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,0,0,1,0.41,23,13
4044_36,36,36,transferSessionPackageI(now);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.68,24,13
4044_37,37,37,checkAfterNewStartI(sharedPreferencesManager);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.34,25,14
4044_41,41,41,activityState.resetSessionAttributes(now);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,0,0,1,0.46,29,16
4044_42,42,42,activityState.enabled = internalState.isEnabled();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.54,30,16
4044_43,43,43,activityState.updatePackages = internalState.itHasToUpdatePackages();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,4,0,0,1,0.49,31,17
4044_45,45,45,writeActivityStateI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,0,0,0,0.32,33,19
4044_46,46,46,sharedPreferencesManager.removePushToken();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.35,34,19
4044_47,47,47,sharedPreferencesManager.removeGdprForgetMe();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.35,35,20
4044_48,48,48,sharedPreferencesManager.removeDisableThirdPartySharing();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,0,0,0,0.42,36,21
4044_50,50,50,processCachedDeeplinkI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,4,0,0,0,0.27,38,23
4045_1,1,1,private void startFirstSessionI() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,1,0.5,14,10
4045_2,2,2,activityState = new ActivityState();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.36,13,9
4045_3,3,3,internalState.firstSdkStart = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,6,1,0,1,0.51,12,8
4045_5,5,5,updateHandlersStatusAndSendI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,6,1,0,1,0.46,10,7
4045_7,7,7,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,9,6,1,0,0,0.33,8,6
4045_9,9,9,SharedPreferencesManager sharedPreferencesManager = new SharedPreferencesManager(getContext());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,6,1,0,1,0.49,6,5
4045_10,10,10,activityState.pushToken = sharedPreferencesManager.getPushToken();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,9,6,1,0,1,0.47,5,4
4045_12,12,39,"if (internalState.isEnabled()) {
if (sharedPreferencesManager.getGdprForgetMe()) {
gdprForgetMeI();
} else {
if (sharedPreferencesManager.getDisableThirdPartySharing()) {
disableThirdPartySharingI();
}
for (AdjustThirdPartySharing adjustThirdPartySharing :
adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray)
{
trackThirdPartySharingI(adjustThirdPartySharing);
}
if (adjustConfig.preLaunchActions.lastMeasurementConsentTracked != null) {
trackMeasurementConsentI(
adjustConfig.preLaunchActions.
lastMeasurementConsentTracked.booleanValue());
}

adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray =
new ArrayList<>();
adjustConfig.preLaunchActions.lastMeasurementConsentTracked = null;


activityState.sessionCount = 1;
transferSessionPackageI(now);
checkAfterNewStartI(sharedPreferencesManager);
}
}",1,0,0,0,0,0,0,0,0,15,3,28,0,0,1,1,9,6,1,0,5,0.66,0,0
4045_13,13,38,"if (sharedPreferencesManager.getGdprForgetMe()) {
gdprForgetMeI();
} else {
if (sharedPreferencesManager.getDisableThirdPartySharing()) {
disableThirdPartySharingI();
}
for (AdjustThirdPartySharing adjustThirdPartySharing :
adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray)
{
trackThirdPartySharingI(adjustThirdPartySharing);
}
if (adjustConfig.preLaunchActions.lastMeasurementConsentTracked != null) {
trackMeasurementConsentI(
adjustConfig.preLaunchActions.
lastMeasurementConsentTracked.booleanValue());
}

adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray =
new ArrayList<>();
adjustConfig.preLaunchActions.lastMeasurementConsentTracked = null;


activityState.sessionCount = 1;
transferSessionPackageI(now);
checkAfterNewStartI(sharedPreferencesManager);
}",1,0,0,0,0,0,0,0,0,14,2,26,0,0,0,0,9,6,1,0,5,0.67,0,0
4045_14,14,14,gdprForgetMeI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.41,1,1
4045_15,15,15,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.35,0,0
4045_16,16,18,"if (sharedPreferencesManager.getDisableThirdPartySharing()) {
disableThirdPartySharingI();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,9,6,1,0,4,0.74,0,0
4045_17,17,17,disableThirdPartySharingI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,4,0.81,1,0
4045_19,19,23,"for (AdjustThirdPartySharing adjustThirdPartySharing :
adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray)
{
trackThirdPartySharingI(adjustThirdPartySharing);
}",0,0,0,1,0,0,0,0,0,2,1,5,0,0,0,0,9,6,1,0,3,0.67,3,2
4045_20,20,20,adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,3,0.59,4,2
4045_22,22,22,trackThirdPartySharingI(adjustThirdPartySharing);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,3,0.71,6,4
4045_24,24,28,"if (adjustConfig.preLaunchActions.lastMeasurementConsentTracked != null) {
trackMeasurementConsentI(
adjustConfig.preLaunchActions.
lastMeasurementConsentTracked.booleanValue());
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,1,9,6,1,0,0,0.42,8,5
4045_25,25,27,"trackMeasurementConsentI(
adjustConfig.preLaunchActions.
lastMeasurementConsentTracked.booleanValue());",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,9,6,1,0,0,0.42,9,5
4045_30,30,31,"adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray =
new ArrayList<>();",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,9,6,1,0,3,0.56,14,7
4045_32,32,32,adjustConfig.preLaunchActions.lastMeasurementConsentTracked = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,6,1,0,0,0.42,16,8
4045_35,35,35,activityState.sessionCount = 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,6,1,0,0,0.35,19,9
4045_36,36,36,transferSessionPackageI(now);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.34,20,9
4045_37,37,37,checkAfterNewStartI(sharedPreferencesManager);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,2,0.55,21,10
4045_41,41,41,activityState.resetSessionAttributes(now);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,6,1,0,0,0.4,25,12
4045_42,42,42,activityState.enabled = internalState.isEnabled();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.42,26,12
4045_43,43,43,activityState.updatePackages = internalState.itHasToUpdatePackages();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,6,1,0,0,0.37,27,13
4045_45,45,45,writeActivityStateI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,6,1,0,0,0.36,29,15
4045_46,46,46,sharedPreferencesManager.removePushToken();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,6,1,0,1,0.48,30,15
4045_47,47,47,sharedPreferencesManager.removeGdprForgetMe();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,6,1,0,1,0.49,31,16
4045_48,48,48,sharedPreferencesManager.removeDisableThirdPartySharing();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,9,6,1,0,4,0.7,32,17
4045_50,50,50,processCachedDeeplinkI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,6,1,0,0,0.25,34,19
4046_1,1,1,private void startFirstSessionI() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.29,48,29
4046_2,2,2,activityState = new ActivityState();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.27,47,28
4046_3,3,3,internalState.firstSdkStart = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.23,46,27
4046_5,5,5,updateHandlersStatusAndSendI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.28,44,26
4046_7,7,7,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.25,42,25
4046_9,9,9,SharedPreferencesManager sharedPreferencesManager = new SharedPreferencesManager(getContext());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.27,40,24
4046_10,10,10,activityState.pushToken = sharedPreferencesManager.getPushToken();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.29,39,23
4046_12,12,39,"if (internalState.isEnabled()) {
if (sharedPreferencesManager.getGdprForgetMe()) {
gdprForgetMeI();
} else {
if (sharedPreferencesManager.getDisableThirdPartySharing()) {
disableThirdPartySharingI();
}
for (AdjustThirdPartySharing adjustThirdPartySharing :
adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray)
{
trackThirdPartySharingI(adjustThirdPartySharing);
}
if (adjustConfig.preLaunchActions.lastMeasurementConsentTracked != null) {
trackMeasurementConsentI(
adjustConfig.preLaunchActions.
lastMeasurementConsentTracked.booleanValue());
}

adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray =
new ArrayList<>();
adjustConfig.preLaunchActions.lastMeasurementConsentTracked = null;


activityState.sessionCount = 1;
transferSessionPackageI(now);
checkAfterNewStartI(sharedPreferencesManager);
}
}",1,0,0,0,0,0,0,0,0,15,3,28,0,0,1,1,4,2,1,0,1,0.45,10,7
4046_13,13,38,"if (sharedPreferencesManager.getGdprForgetMe()) {
gdprForgetMeI();
} else {
if (sharedPreferencesManager.getDisableThirdPartySharing()) {
disableThirdPartySharingI();
}
for (AdjustThirdPartySharing adjustThirdPartySharing :
adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray)
{
trackThirdPartySharingI(adjustThirdPartySharing);
}
if (adjustConfig.preLaunchActions.lastMeasurementConsentTracked != null) {
trackMeasurementConsentI(
adjustConfig.preLaunchActions.
lastMeasurementConsentTracked.booleanValue());
}

adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray =
new ArrayList<>();
adjustConfig.preLaunchActions.lastMeasurementConsentTracked = null;


activityState.sessionCount = 1;
transferSessionPackageI(now);
checkAfterNewStartI(sharedPreferencesManager);
}",1,0,0,0,0,0,0,0,0,14,2,26,0,0,0,0,4,2,1,0,1,0.45,11,7
4046_14,14,14,gdprForgetMeI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.15,35,20
4046_15,15,15,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.12,34,19
4046_16,16,18,"if (sharedPreferencesManager.getDisableThirdPartySharing()) {
disableThirdPartySharingI();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,2,1,0,0,0.29,31,17
4046_17,17,17,disableThirdPartySharingI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.28,32,17
4046_19,19,23,"for (AdjustThirdPartySharing adjustThirdPartySharing :
adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray)
{
trackThirdPartySharingI(adjustThirdPartySharing);
}",0,0,0,1,0,0,0,0,0,2,1,5,0,0,0,0,4,2,1,0,0,0.38,26,14
4046_20,20,20,adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.39,29,15
4046_22,22,22,trackThirdPartySharingI(adjustThirdPartySharing);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.31,27,14
4046_24,24,28,"if (adjustConfig.preLaunchActions.lastMeasurementConsentTracked != null) {
trackMeasurementConsentI(
adjustConfig.preLaunchActions.
lastMeasurementConsentTracked.booleanValue());
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,1,4,2,1,0,0,0.36,21,12
4046_25,25,27,"trackMeasurementConsentI(
adjustConfig.preLaunchActions.
lastMeasurementConsentTracked.booleanValue());",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,4,2,1,0,0,0.36,22,12
4046_30,30,31,"adjustConfig.preLaunchActions.preLaunchAdjustThirdPartySharingArray =
new ArrayList<>();",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,2,1,0,0,0.4,18,11
4046_32,32,32,adjustConfig.preLaunchActions.lastMeasurementConsentTracked = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.36,17,10
4046_35,35,35,activityState.sessionCount = 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.28,14,9
4046_36,36,36,transferSessionPackageI(now);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.3,13,8
4046_37,37,37,checkAfterNewStartI(sharedPreferencesManager);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.42,12,7
4046_41,41,41,activityState.resetSessionAttributes(now);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.32,8,6
4046_42,42,42,activityState.enabled = internalState.isEnabled();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.28,7,5
4046_43,43,43,activityState.updatePackages = internalState.itHasToUpdatePackages();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.3,6,4
4046_45,45,45,writeActivityStateI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.29,4,3
4046_46,46,46,sharedPreferencesManager.removePushToken();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.27,3,2
4046_47,47,47,sharedPreferencesManager.removeGdprForgetMe();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.26,2,1
4046_48,48,48,sharedPreferencesManager.removeDisableThirdPartySharing();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.29,1,0
4046_50,50,50,processCachedDeeplinkI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,1,0.55,0,0
4048_1,1,1,private void processSessionI() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.34,32,20
4048_2,2,4,"if (activityState.isGdprForgotten) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,2,1,0,0,0.19,29,18
4048_3,3,3,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.12,30,18
4048_6,6,6,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,2,1,0,0,0.22,27,17
4048_8,8,8,long lastInterval = now - activityState.lastActivity;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,2,1,0,0,0.23,25,16
4048_10,10,15,"if (lastInterval < 0) {
logger.error(TIME_TRAVEL);
activityState.lastActivity = now;
writeActivityStateI();
return;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,1,1,5,2,1,0,0,0.29,18,11
4048_11,11,11,logger.error(TIME_TRAVEL);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.34,22,14
4048_12,12,12,activityState.lastActivity = now;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.18,21,13
4048_13,13,13,writeActivityStateI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.21,20,12
4048_14,14,14,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.12,19,11
4048_17,17,21,"if (lastInterval > SESSION_INTERVAL) {
trackNewSessionI(now);
checkAfterNewStartI();
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,5,2,1,0,2,0.58,12,7
4048_18,18,18,trackNewSessionI(now);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.52,15,9
4048_19,19,19,checkAfterNewStartI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,2,0.67,14,8
4048_20,20,20,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.12,13,7
4048_23,23,38,"if (lastInterval > SUBSESSION_INTERVAL) {
activityState.subsessionCount++;
activityState.sessionLength += lastInterval;
activityState.lastActivity = now;
logger.verbose(""Started subsession %d of session %d"",
activityState.subsessionCount,
activityState.sessionCount);
writeActivityStateI();

checkForPreinstallI();

installReferrer.startConnection();
installReferrerHuawei.readReferrer();

return;
}",1,0,0,0,0,0,0,0,0,9,1,16,0,0,1,1,5,2,1,0,2,0.41,0,0
4048_24,24,24,activityState.subsessionCount++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.24,9,5
4048_25,25,25,activityState.sessionLength += lastInterval;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.3,8,4
4048_26,26,26,activityState.lastActivity = now;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.18,7,3
4048_27,27,29,"logger.verbose(""Started subsession %d of session %d"",
activityState.subsessionCount,
activityState.sessionCount);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,5,2,1,0,0,0.33,4,2
4048_30,30,30,writeActivityStateI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,1,0,0,0.21,3,1
4048_32,32,32,checkForPreinstallI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,2,1,0,1,0.65,1,0
4048_34,34,34,installReferrer.startConnection();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,1,0.22,0,0
4048_35,35,35,installReferrerHuawei.readReferrer();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,1,0,1,0.21,1,0
4048_37,37,37,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,2,1,0,0,0.12,3,2
4048_40,40,40,"logger.verbose(""Time span since last activity too short for a new subsession"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,1,0.45,6,3
4049_1,1,1,    private void checkAttributionStateI() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.33,2,1
4049_2,2,2,if (!checkActivityStateI(activityState)) { return; },1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,2,1,0,0,0,0.32,1,0
4049_4,4,8,"if (internalState.isFirstLaunch()) {
if (internalState.hasSessionResponseNotBeenProcessed()) {
return;
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,0,1,1,2,1,0,0,2,0.69,0,0
4049_5,5,7,"if (internalState.hasSessionResponseNotBeenProcessed()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,1,0,0,0,0.23,1,0
4049_6,6,6,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.1,2,1
4049_10,10,12,"if (attribution != null && !activityState.askingAttribution) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,1,0,0,0,0.3,6,3
4049_11,11,11,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.1,7,3
4049_14,14,14,attributionHandler.getAttribution();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,1,0,0,0,0.26,10,5
4050_1,1,1,    private void checkAttributionStateI() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.35,3,2
4050_2,2,2,if (!checkActivityStateI(activityState)) { return; },1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,5,3,0,0,0,0.34,2,1
4050_4,4,8,"if (internalState.isFirstLaunch()) {
if (internalState.hasSessionResponseNotBeenProcessed()) {
return;
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,0,1,1,5,3,0,0,4,0.76,0,0
4050_5,5,7,"if (internalState.hasSessionResponseNotBeenProcessed()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,3,0,0,2,0.57,0,0
4050_6,6,6,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.21,1,0
4050_10,10,12,"if (attribution != null && !activityState.askingAttribution) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,3,0,0,0,0.36,5,2
4050_11,11,11,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.21,6,2
4050_14,14,14,attributionHandler.getAttribution();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,0,0,0,0.33,9,4
4051_1,1,1,    private void checkAttributionStateI() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.52,8,4
4051_2,2,2,if (!checkActivityStateI(activityState)) { return; },1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,5,4,1,0,0,0.33,7,3
4051_4,4,8,"if (internalState.isFirstLaunch()) {
if (internalState.hasSessionResponseNotBeenProcessed()) {
return;
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,0,1,1,5,4,1,0,0,0.35,1,0
4051_5,5,7,"if (internalState.hasSessionResponseNotBeenProcessed()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,4,1,0,0,0.36,2,0
4051_6,6,6,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.26,3,0
4051_10,10,12,"if (attribution != null && !activityState.askingAttribution) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,4,1,0,2,0.68,0,0
4051_11,11,11,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.26,1,0
4051_14,14,14,attributionHandler.getAttribution();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,1,0,1,0.59,4,2
4052_1,1,1,    private void endI() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.36,0,0
4052_2,2,4,"if (!toSendI()) {
pauseSendingI();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,2,1,0,2,0.9,0,0
4052_3,3,3,pauseSendingI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.9,1,0
4052_6,6,8,"if (updateActivityStateI(System.currentTimeMillis())) {
writeActivityStateI();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,4,2,1,0,0,0.34,4,2
4052_7,7,7,writeActivityStateI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.3,5,2
4057_1,1,1,"private Map<String, String> getInfoParameters(String source) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,1,0.42,4,3
4057_2,2,2,ContentResolver contentResolver = adjustConfig.context.getContentResolver();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.32,3,2
4057_3,3,3,"Map<String, String> parameters = new HashMap<String, String>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,5,2,0,1,0.38,2,1
4057_4,4,4,"Map<String, String> imeiParameters = Reflection.getImeiParameters(adjustConfig.context, logger);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,5,2,0,1,0.49,1,0
4057_6,6,8,"if (imeiParameters != null) {
parameters.putAll(imeiParameters);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,5,2,0,1,0.58,0,0
4057_7,7,7,parameters.putAll(imeiParameters);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,1,0.6,1,0
4057_10,10,10,"Map<String, String> oaidParameters = Reflection.getOaidParameters(adjustConfig.context, logger);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,5,2,0,1,0.45,4,2
4057_11,11,13,"if (oaidParameters != null) {
parameters.putAll(oaidParameters);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,7,5,2,0,1,0.55,5,2
4057_12,12,12,parameters.putAll(oaidParameters);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,1,0.57,6,3
4057_15,15,15,deviceInfo.reloadPlayIds(adjustConfig.context);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,5,2,0,0,0.36,9,5
4057_16,16,16,"PackageBuilder.addString(parameters, ""android_uuid"", activityStateCopy.uuid);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,2,0,2,0.53,10,5
4057_17,17,17,"PackageBuilder.addString(parameters, ""gps_adid"", deviceInfo.playAdId);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,2,0,2,0.52,11,6
4057_18,18,18,"PackageBuilder.addLong(parameters, ""gps_adid_attempt"", deviceInfo.playAdIdAttempt);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,2,0,2,0.51,12,7
4057_19,19,19,"PackageBuilder.addString(parameters, ""gps_adid_src"", deviceInfo.playAdIdSource);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,2,0,2,0.53,13,8
4057_20,20,20,"PackageBuilder.addBoolean(parameters, ""tracking_enabled"", deviceInfo.isTrackingEnabled);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,2,0,2,0.56,14,9
4057_21,21,21,"PackageBuilder.addString(parameters, ""fire_adid"", Util.getFireAdvertisingId(contentResolver));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,2,0,2,0.49,15,10
4057_22,22,22,"PackageBuilder.addBoolean(parameters, ""fire_tracking_enabled"", Util.getFireTrackingEnabled(contentResolver));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,7,5,2,0,2,0.54,16,11
4057_24,24,31,"if (!containsPlayIds(parameters) && !containsFireIds(parameters)) {
logger.warn(""Google Advertising ID or Fire Advertising ID not detected, "" +
""fallback to non Google Play and Fire identifiers will take place"");
deviceInfo.reloadNonPlayIds(adjustConfig.context);
PackageBuilder.addString(parameters, ""android_id"", deviceInfo.androidId);
PackageBuilder.addString(parameters, ""mac_md5"", deviceInfo.macShortMd5);
PackageBuilder.addString(parameters, ""mac_sha1"", deviceInfo.macSha1);
}",1,0,0,0,0,0,0,0,0,5,1,8,0,0,1,1,7,5,2,0,2,0.54,18,13
4057_25,25,26,"logger.warn(""Google Advertising ID or Fire Advertising ID not detected, "" +
""fallback to non Google Play and Fire identifiers will take place"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,5,2,0,0,0.39,19,13
4057_27,27,27,deviceInfo.reloadNonPlayIds(adjustConfig.context);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.35,21,15
4057_28,28,28,"PackageBuilder.addString(parameters, ""android_id"", deviceInfo.androidId);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,2,0,2,0.53,22,15
4057_29,29,29,"PackageBuilder.addString(parameters, ""mac_md5"", deviceInfo.macShortMd5);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,2,0,2,0.57,23,16
4057_30,30,30,"PackageBuilder.addString(parameters, ""mac_sha1"", deviceInfo.macSha1);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,2,0,2,0.54,24,17
4057_33,33,33,"PackageBuilder.addString(parameters, ""app_secret"", adjustConfig.appSecret);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,7,5,2,0,2,0.59,27,19
4057_34,34,34,"PackageBuilder.addString(parameters, ""app_token"", adjustConfig.appToken);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,2,0,2,0.52,28,19
4057_35,35,35,"PackageBuilder.addBoolean(parameters, ""attribution_deeplink"", true);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,2,0,2,0.56,29,20
4057_36,36,36,"PackageBuilder.addDateInMilliseconds(parameters, ""created_at"", createdAt);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,2,0,2,0.51,30,21
4057_37,37,37,"PackageBuilder.addBoolean(parameters, ""device_known"", adjustConfig.deviceKnown);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,2,0,2,0.52,31,22
4057_38,38,38,"PackageBuilder.addBoolean(parameters, ""needs_cost"", adjustConfig.needsCost);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,2,0,2,0.49,32,23
4057_39,39,39,"PackageBuilder.addString(parameters, ""environment"", adjustConfig.environment);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,2,0,2,0.55,33,24
4057_40,40,40,"PackageBuilder.addBoolean(parameters, ""event_buffering_enabled"", adjustConfig.eventBufferingEnabled);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,2,0,2,0.51,34,25
4057_41,41,41,"PackageBuilder.addString(parameters, ""external_device_id"", adjustConfig.externalDeviceId);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,2,0,2,0.52,35,26
4057_42,42,42,"PackageBuilder.addBoolean(parameters, ""needs_response_details"", true);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,2,0,2,0.51,36,27
4057_43,43,43,"PackageBuilder.addString(parameters, ""push_token"", activityStateCopy.pushToken);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,2,0,2,0.52,37,28
4057_44,44,44,"PackageBuilder.addString(parameters, ""secret_id"", adjustConfig.secretId);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,2,0,2,0.56,38,29
4057_45,45,45,"PackageBuilder.addString(parameters, ""source"", source);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,7,5,2,0,2,0.53,39,30
4057_47,47,47,checkDeviceIds(parameters);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,7,5,2,0,2,0.58,41,32
4057_48,48,48,return parameters;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,7,5,2,0,1,0.5,42,32
4058_1,1,1,"private Map<String, String> getInfoParameters(String source) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,1,0.44,8,5
4058_2,2,2,ContentResolver contentResolver = adjustConfig.context.getContentResolver();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.33,7,4
4058_3,3,3,"Map<String, String> parameters = new HashMap<String, String>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,5,2,0,1,0.38,6,3
4058_4,4,4,"Map<String, String> imeiParameters = Reflection.getImeiParameters(adjustConfig.context, logger);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,5,2,0,1,0.51,5,2
4058_6,6,8,"if (imeiParameters != null) {
parameters.putAll(imeiParameters);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,5,2,0,1,0.61,1,0
4058_7,7,7,parameters.putAll(imeiParameters);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,1,0.62,2,0
4058_10,10,10,"Map<String, String> oaidParameters = Reflection.getOaidParameters(adjustConfig.context, logger);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,5,2,0,2,0.46,0,0
4058_11,11,13,"if (oaidParameters != null) {
parameters.putAll(oaidParameters);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,7,5,2,0,2,0.57,1,0
4058_12,12,12,parameters.putAll(oaidParameters);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,2,0.59,2,1
4058_15,15,15,deviceInfo.reloadPlayIds(adjustConfig.context);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,5,2,0,0,0.36,5,3
4058_16,16,16,"PackageBuilder.addString(parameters, ""android_uuid"", activityStateCopy.uuid);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,2,0,2,0.56,6,3
4058_17,17,17,"PackageBuilder.addString(parameters, ""gps_adid"", deviceInfo.playAdId);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,2,0,2,0.54,7,4
4058_18,18,18,"PackageBuilder.addLong(parameters, ""gps_adid_attempt"", deviceInfo.playAdIdAttempt);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,2,0,2,0.53,8,5
4058_19,19,19,"PackageBuilder.addString(parameters, ""gps_adid_src"", deviceInfo.playAdIdSource);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,2,0,2,0.56,9,6
4058_20,20,20,"PackageBuilder.addBoolean(parameters, ""tracking_enabled"", deviceInfo.isTrackingEnabled);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,2,0,2,0.54,10,7
4058_21,21,21,"PackageBuilder.addString(parameters, ""fire_adid"", Util.getFireAdvertisingId(contentResolver));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,2,0,2,0.51,11,8
4058_22,22,22,"PackageBuilder.addBoolean(parameters, ""fire_tracking_enabled"", Util.getFireTrackingEnabled(contentResolver));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,7,5,2,0,2,0.52,12,9
4058_24,24,31,"if (!containsPlayIds(parameters) && !containsFireIds(parameters)) {
logger.warn(""Google Advertising ID or Fire Advertising ID not detected, "" +
""fallback to non Google Play and Fire identifiers will take place"");
deviceInfo.reloadNonPlayIds(adjustConfig.context);
PackageBuilder.addString(parameters, ""android_id"", deviceInfo.androidId);
PackageBuilder.addString(parameters, ""mac_md5"", deviceInfo.macShortMd5);
PackageBuilder.addString(parameters, ""mac_sha1"", deviceInfo.macSha1);
}",1,0,0,0,0,0,0,0,0,5,1,8,0,0,1,1,7,5,2,0,2,0.56,14,11
4058_25,25,26,"logger.warn(""Google Advertising ID or Fire Advertising ID not detected, "" +
""fallback to non Google Play and Fire identifiers will take place"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,5,2,0,0,0.4,15,11
4058_27,27,27,deviceInfo.reloadNonPlayIds(adjustConfig.context);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.36,17,13
4058_28,28,28,"PackageBuilder.addString(parameters, ""android_id"", deviceInfo.androidId);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,2,0,2,0.55,18,13
4058_29,29,29,"PackageBuilder.addString(parameters, ""mac_md5"", deviceInfo.macShortMd5);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,2,0,2,0.59,19,14
4058_30,30,30,"PackageBuilder.addString(parameters, ""mac_sha1"", deviceInfo.macSha1);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,2,0,2,0.56,20,15
4058_33,33,33,"PackageBuilder.addString(parameters, ""app_secret"", adjustConfig.appSecret);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,7,5,2,0,2,0.61,23,17
4058_34,34,34,"PackageBuilder.addString(parameters, ""app_token"", adjustConfig.appToken);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,2,0,2,0.54,24,17
4058_35,35,35,"PackageBuilder.addBoolean(parameters, ""attribution_deeplink"", true);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,2,0,2,0.57,25,18
4058_36,36,36,"PackageBuilder.addDateInMilliseconds(parameters, ""created_at"", createdAt);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,2,0,2,0.53,26,19
4058_37,37,37,"PackageBuilder.addBoolean(parameters, ""device_known"", adjustConfig.deviceKnown);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,2,0,2,0.54,27,20
4058_38,38,38,"PackageBuilder.addBoolean(parameters, ""needs_cost"", adjustConfig.needsCost);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,2,0,2,0.51,28,21
4058_39,39,39,"PackageBuilder.addString(parameters, ""environment"", adjustConfig.environment);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,2,0,2,0.57,29,22
4058_40,40,40,"PackageBuilder.addBoolean(parameters, ""event_buffering_enabled"", adjustConfig.eventBufferingEnabled);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,2,0,2,0.5,30,23
4058_41,41,41,"PackageBuilder.addString(parameters, ""external_device_id"", adjustConfig.externalDeviceId);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,2,0,2,0.52,31,24
4058_42,42,42,"PackageBuilder.addBoolean(parameters, ""needs_response_details"", true);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,2,0,2,0.53,32,25
4058_43,43,43,"PackageBuilder.addString(parameters, ""push_token"", activityStateCopy.pushToken);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,2,0,2,0.54,33,26
4058_44,44,44,"PackageBuilder.addString(parameters, ""secret_id"", adjustConfig.secretId);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,2,0,2,0.59,34,27
4058_45,45,45,"PackageBuilder.addString(parameters, ""source"", source);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,7,5,2,0,2,0.54,35,28
4058_47,47,47,checkDeviceIds(parameters);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,7,5,2,0,2,0.61,37,30
4058_48,48,48,return parameters;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,7,5,2,0,1,0.51,38,30
152_1,1,6,"    private static PackageBuilder queryStringClickPackageBuilder(
final List<UrlQuerySanitizer.ParameterValuePair> queryList,
final ActivityState activityState,
final AdjustConfig adjustConfig,
final DeviceInfo deviceInfo,
final SessionParameters sessionParameters) {",0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,4,4,0,0,2,0.52,18,8
152_7,7,9,"if (queryList == null) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,4,0,0,1,0.51,15,6
152_8,8,8,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.58,16,6
152_11,11,11,"Map<String, String> queryStringParameters = new LinkedHashMap<String, String>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.26,13,5
152_12,12,12,AdjustAttribution queryStringAttribution = new AdjustAttribution();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.26,12,4
152_14,14,20,"for (UrlQuerySanitizer.ParameterValuePair parameterValuePair : queryList) {
readQueryString(
parameterValuePair.mParameter,
parameterValuePair.mValue,
queryStringParameters,
queryStringAttribution);
}",0,0,0,1,0,0,0,0,0,1,1,7,0,0,1,1,4,4,0,0,0,0.28,4,2
152_15,15,19,"readQueryString(
parameterValuePair.mParameter,
parameterValuePair.mValue,
queryStringParameters,
queryStringAttribution);",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,4,4,0,0,0,0.27,5,2
152_22,22,22,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.26,2,1
152_23,23,23,String reftag = queryStringParameters.remove(Constants.REFTAG);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.27,1,0
152_25,25,28,"if (activityState != null) {
long lastInterval = now - activityState.lastActivity;
activityState.lastInterval = lastInterval;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,4,4,0,0,3,0.72,0,0
152_26,26,26,long lastInterval = now - activityState.lastActivity;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,2,0.6,1,0
152_27,27,27,activityState.lastInterval = lastInterval;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,2,0.57,2,1
152_30,30,35,"PackageBuilder builder = new PackageBuilder(
adjustConfig,
deviceInfo,
activityState,
sessionParameters,
now);",0,0,0,0,0,1,0,0,0,0,0,6,0,0,1,1,4,4,0,0,2,0.52,5,3
152_37,37,37,builder.extraParameters = queryStringParameters;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.29,12,4
152_38,38,38,builder.attribution = queryStringAttribution;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.27,13,4
152_39,39,39,builder.reftag = reftag;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,4,0,0,0,0.12,14,5
152_41,41,41,return builder;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.3,16,7
915_1,1,6,"    private static PackageBuilder queryStringClickPackageBuilder(
final List<UrlQuerySanitizer.ParameterValuePair> queryList,
final ActivityState activityState,
final AdjustConfig adjustConfig,
final DeviceInfo deviceInfo,
final SessionParameters sessionParameters) {",0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,7,6,0,0,2,0.5,18,8
915_7,7,9,"if (queryList == null) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,7,6,0,0,1,0.49,15,6
915_8,8,8,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,6,0,0,1,0.54,16,6
915_11,11,11,"Map<String, String> queryStringParameters = new LinkedHashMap<String, String>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,6,0,0,0,0.27,13,5
915_12,12,12,AdjustAttribution queryStringAttribution = new AdjustAttribution();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,6,0,0,0,0.27,12,4
915_14,14,20,"for (UrlQuerySanitizer.ParameterValuePair parameterValuePair : queryList) {
readQueryString(
parameterValuePair.mParameter,
parameterValuePair.mValue,
queryStringParameters,
queryStringAttribution);
}",0,0,0,1,0,0,0,0,0,1,1,7,0,0,1,1,7,6,0,0,0,0.31,4,2
915_15,15,19,"readQueryString(
parameterValuePair.mParameter,
parameterValuePair.mValue,
queryStringParameters,
queryStringAttribution);",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,7,6,0,0,0,0.29,5,2
915_22,22,22,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,6,0,0,0,0.33,2,1
915_23,23,23,String reftag = queryStringParameters.remove(Constants.REFTAG);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,6,0,0,0,0.31,1,0
915_25,25,28,"if (activityState != null) {
long lastInterval = now - activityState.lastActivity;
activityState.lastInterval = lastInterval;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,7,6,0,0,3,0.69,0,0
915_26,26,26,long lastInterval = now - activityState.lastActivity;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,0,0,2,0.59,1,0
915_27,27,27,activityState.lastInterval = lastInterval;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,2,0.57,2,1
915_30,30,35,"PackageBuilder builder = new PackageBuilder(
adjustConfig,
deviceInfo,
activityState,
sessionParameters,
now);",0,0,0,0,0,1,0,0,0,0,0,6,0,0,1,1,7,6,0,0,2,0.52,5,3
915_37,37,37,builder.extraParameters = queryStringParameters;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,7,6,0,0,0,0.29,12,4
915_38,38,38,builder.attribution = queryStringAttribution;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.27,13,4
915_39,39,39,builder.reftag = reftag;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,7,6,0,0,0,0.14,14,5
915_41,41,41,return builder;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,6,0,0,0,0.28,16,7
1787_1,1,1,public static boolean hasAllLocationsBeenRead(long status) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,2,0,3,0.61,0,0
1787_2,2,2,return (status & ALL_LOCATION_BITMASK) == ALL_LOCATION_BITMASK;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,4,2,0,2,0.65,0,0
1788_1,1,1,"public static boolean hasNotBeenRead(String location, long status) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,2,3,0,3,0.59,0,0
1788_2,2,2,switch(location) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,2,3,0,1,0.47,0,0
1788_3,3,4,"case Constants.SYSTEM_PROPERTIES :
return (status & SYSTEM_PROPERTY_BITMASK) != SYSTEM_PROPERTY_BITMASK;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,2,3,0,1,0.4,1,0
1788_5,5,6,"case Constants.SYSTEM_PROPERTIES_REFLECTION :
return (status & SYSTEM_PROPERTY_REFLECTION_BITMASK) != SYSTEM_PROPERTY_REFLECTION_BITMASK;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,2,3,0,1,0.37,3,2
1788_7,7,8,"case Constants.SYSTEM_PROPERTIES_PATH :
return (status & SYSTEM_PROPERTY_PATH_BITMASK) != SYSTEM_PROPERTY_PATH_BITMASK;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,2,3,0,1,0.4,5,3
1788_9,9,10,"case Constants.SYSTEM_PROPERTIES_PATH_REFLECTION :
return (status & SYSTEM_PROPERTY_PATH_REFLECTION_BITMASK) != SYSTEM_PROPERTY_PATH_REFLECTION_BITMASK;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,2,3,0,1,0.38,7,4
1788_11,11,12,"case Constants.CONTENT_PROVIDER :
return (status & CONTENT_PROVIDER_BITMASK) != CONTENT_PROVIDER_BITMASK;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,2,3,0,1,0.38,9,5
1788_13,13,14,"case Constants.CONTENT_PROVIDER_INTENT_ACTION :
return (status & CONTENT_PROVIDER_INTENT_ACTION_BITMASK) != CONTENT_PROVIDER_INTENT_ACTION_BITMASK;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,2,3,0,1,0.39,11,6
1788_15,15,16,"case Constants.FILE_SYSTEM :
return (status & FILE_SYSTEM_BITMASK) != FILE_SYSTEM_BITMASK;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,2,3,0,1,0.38,13,7
1788_17,17,18,"case Constants.CONTENT_PROVIDER_NO_PERMISSION:
return (status & CONTENT_PROVIDER_NO_PERMISSION_BITMASK) != CONTENT_PROVIDER_NO_PERMISSION_BITMASK;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,2,3,0,1,0.4,15,8
1788_20,20,20,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,2,3,0,0,0.3,18,9
1789_1,1,1,"public static long markAsRead(String location, long status) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,2,0,2,0.52,0,0
1789_2,2,2,switch(location) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,2,0,1,0.48,0,0
1789_3,3,4,"case Constants.SYSTEM_PROPERTIES :
return (status | SYSTEM_PROPERTY_BITMASK);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,2,2,0,0,0.33,1,0
1789_5,5,6,"case Constants.SYSTEM_PROPERTIES_REFLECTION :
return (status | SYSTEM_PROPERTY_REFLECTION_BITMASK);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,2,2,0,0,0.31,3,2
1789_7,7,8,"case Constants.SYSTEM_PROPERTIES_PATH :
return (status | SYSTEM_PROPERTY_PATH_BITMASK);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,2,2,0,0,0.34,5,3
1789_9,9,10,"case Constants.SYSTEM_PROPERTIES_PATH_REFLECTION :
return (status | SYSTEM_PROPERTY_PATH_REFLECTION_BITMASK);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,2,2,0,0,0.32,7,4
1789_11,11,12,"case Constants.CONTENT_PROVIDER :
return (status | CONTENT_PROVIDER_BITMASK);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,2,2,0,0,0.3,9,5
1789_13,13,14,"case Constants.CONTENT_PROVIDER_INTENT_ACTION :
return (status | CONTENT_PROVIDER_INTENT_ACTION_BITMASK);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,2,2,0,0,0.32,11,6
1789_15,15,16,"case Constants.FILE_SYSTEM :
return (status | FILE_SYSTEM_BITMASK);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,2,2,0,0,0.29,13,7
1789_17,17,18,"case Constants.CONTENT_PROVIDER_NO_PERMISSION:
return (status | CONTENT_PROVIDER_NO_PERMISSION_BITMASK);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,2,2,0,0,0.32,15,8
1789_20,20,20,return status;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,2,2,0,0,0.32,18,9
1430_1,1,2,"    @Override
public void onWindowShown() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,0,0,0,0.33,2,1
1430_3,3,3,super.onWindowShown();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,0,0,0,0.28,1,0
1430_5,5,5,Adjust.onResume();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,0,0,2,0.76,0,0
1431_1,1,2,"    @Override
public void onWindowHidden() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,0,0,0,0.34,2,1
1431_3,3,3,super.onWindowHidden();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,0,0,0,0.31,1,0
1431_5,5,5,Adjust.onPause();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,0,0,2,0.77,0,0
1432_1,1,1,public void onTrackSimpleEventClick() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,1,0.5,2,1
1432_2,2,2,"AdjustEvent event = new AdjustEvent(""g3mfiw"");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,6,1,0,1,0.5,1,0
1432_4,4,4,"event.setCallbackId(""PrettyRandomIdentifier"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,8,6,1,0,3,0.67,0,0
1432_6,6,6,Adjust.trackEvent(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,6,1,0,1,0.5,2,1
4072_1,1,1,private void checkForPreinstallI() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.33,4,3
4072_2,2,2,if (activityState == null) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.25,3,2
4072_3,3,3,if (!activityState.enabled) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.43,2,1
4072_4,4,4,if (activityState.isGdprForgotten) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,5,0,0,0,0.26,1,0
4072_6,6,6,sendPreinstallReferrerI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,8,5,0,0,3,0.68,0,0
4072_8,8,8,if (!adjustConfig.preinstallTrackingEnabled) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,5,0,0,3,0.57,2,1
4072_9,9,9,if (internalState.hasPreinstallBeenRead()) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,5,0,0,1,0.37,3,1
4072_11,11,14,"if (deviceInfo.packageName == null || deviceInfo.packageName.isEmpty()) {
logger.debug(""Can't read preinstall payload, invalid package name"");
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,8,5,0,0,1,0.39,5,3
4072_12,12,12,"logger.debug(""Can't read preinstall payload, invalid package name"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.44,6,3
4072_13,13,13,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.17,7,4
4072_16,16,16,SharedPreferencesManager sharedPreferencesManager = new SharedPreferencesManager(getContext());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,5,0,0,0,0.35,10,6
4072_17,17,17,long readStatus = sharedPreferencesManager.getPreinstallPayloadReadStatus();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,8,5,0,0,1,0.41,11,6
4072_19,19,22,"if (PreinstallUtil.hasAllLocationsBeenRead(readStatus)) {
internalState.preinstallHasBeenRead = true;
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,8,5,0,0,1,0.4,13,8
4072_20,20,20,internalState.preinstallHasBeenRead = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.39,14,8
4072_21,21,21,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.17,15,9
4072_24,24,33,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES, readStatus)) {
String payloadSystemProperty = PreinstallUtil.getPayloadFromSystemProperty(
deviceInfo.packageName, logger);

if (payloadSystemProperty != null && !payloadSystemProperty.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,8,5,0,0,2,0.47,18,11
4072_25,25,26,"String payloadSystemProperty = PreinstallUtil.getPayloadFromSystemProperty(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,8,5,0,0,1,0.38,19,11
4072_28,28,32,"if (payloadSystemProperty != null && !payloadSystemProperty.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,8,5,0,0,2,0.46,22,13
4072_29,29,29,"sdkClickHandler.sendPreinstallPayload(payloadSystemProperty, Constants.SYSTEM_PROPERTIES);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,2,0.45,23,13
4072_30,30,30,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.22,24,14
4072_31,31,31,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.4,25,15
4072_35,35,44,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus)) {
String payloadSystemPropertyReflection = PreinstallUtil.getPayloadFromSystemPropertyReflection(
deviceInfo.packageName, logger);

if (payloadSystemPropertyReflection != null && !payloadSystemPropertyReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,8,5,0,0,2,0.47,29,17
4072_36,36,37,"String payloadSystemPropertyReflection = PreinstallUtil.getPayloadFromSystemPropertyReflection(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,8,5,0,0,1,0.37,30,17
4072_39,39,43,"if (payloadSystemPropertyReflection != null && !payloadSystemPropertyReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,8,5,0,0,2,0.46,33,19
4072_40,40,40,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyReflection, Constants.SYSTEM_PROPERTIES_REFLECTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,2,0.44,34,19
4072_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.22,35,20
4072_42,42,42,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_REFLECTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.39,36,21
4072_46,46,55,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus)) {
String payloadSystemPropertyFilePath = PreinstallUtil.getPayloadFromSystemPropertyFilePath(
deviceInfo.packageName, logger);

if (payloadSystemPropertyFilePath != null && !payloadSystemPropertyFilePath.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,8,5,0,0,2,0.47,40,23
4072_47,47,48,"String payloadSystemPropertyFilePath = PreinstallUtil.getPayloadFromSystemPropertyFilePath(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,8,5,0,0,1,0.37,41,23
4072_50,50,54,"if (payloadSystemPropertyFilePath != null && !payloadSystemPropertyFilePath.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,8,5,0,0,2,0.46,44,25
4072_51,51,51,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePath, Constants.SYSTEM_PROPERTIES_PATH);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,2,0.44,45,25
4072_52,52,52,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.22,46,26
4072_53,53,53,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.4,47,27
4072_57,57,66,"if (PreinstallUtil.hasNotBeenRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus)) {
String payloadSystemPropertyFilePathReflection = PreinstallUtil.getPayloadFromSystemPropertyFilePathReflection(
deviceInfo.packageName, logger);

if (payloadSystemPropertyFilePathReflection != null && !payloadSystemPropertyFilePathReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,8,5,0,0,2,0.46,51,29
4072_58,58,59,"String payloadSystemPropertyFilePathReflection = PreinstallUtil.getPayloadFromSystemPropertyFilePathReflection(
deviceInfo.packageName, logger);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,8,5,0,0,1,0.37,52,29
4072_61,61,65,"if (payloadSystemPropertyFilePathReflection != null && !payloadSystemPropertyFilePathReflection.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,8,5,0,0,2,0.45,55,31
4072_62,62,62,"sdkClickHandler.sendPreinstallPayload(payloadSystemPropertyFilePathReflection, Constants.SYSTEM_PROPERTIES_PATH_REFLECTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,2,0.43,56,31
4072_63,63,63,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.22,57,32
4072_64,64,64,"readStatus = PreinstallUtil.markAsRead(Constants.SYSTEM_PROPERTIES_PATH_REFLECTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.39,58,33
4072_68,68,79,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER, readStatus)) {
String payloadContentProviderDefault = PreinstallUtil.getPayloadFromContentProviderDefault(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadContentProviderDefault != null && !payloadContentProviderDefault.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,12,0,0,1,1,8,5,0,0,2,0.46,62,35
4072_69,69,72,"String payloadContentProviderDefault = PreinstallUtil.getPayloadFromContentProviderDefault(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,8,5,0,0,1,0.37,63,35
4072_74,74,78,"if (payloadContentProviderDefault != null && !payloadContentProviderDefault.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,8,5,0,0,2,0.45,68,37
4072_75,75,75,"sdkClickHandler.sendPreinstallPayload(payloadContentProviderDefault, Constants.CONTENT_PROVIDER);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,2,0.43,69,37
4072_76,76,76,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.22,70,38
4072_77,77,77,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.39,71,39
4072_81,81,94,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus)) {
List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderIntentAction(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,6,3,14,0,0,1,1,8,5,0,0,2,0.47,75,41
4072_82,82,85,"List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderIntentAction(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,8,5,0,0,1,0.37,76,41
4072_87,87,93,"if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,8,5,0,0,2,0.46,81,43
4072_88,88,90,"for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,8,5,0,0,2,0.43,82,43
4072_89,89,89,"sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_INTENT_ACTION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,2,0.45,83,44
4072_91,91,91,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.22,85,46
4072_92,92,92,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_INTENT_ACTION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.41,86,46
4072_96,96,109,"if (PreinstallUtil.hasNotBeenRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus)) {
List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderNoPermission(
adjustConfig.context,
deviceInfo.packageName,
logger);

if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);
}
}",1,0,0,0,0,0,0,0,0,6,3,14,0,0,1,1,8,5,0,0,2,0.49,90,48
4072_97,97,100,"List<String> payloadListContentProviderIntentAction = PreinstallUtil.getPayloadsFromContentProviderNoPermission(
adjustConfig.context,
deviceInfo.packageName,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,8,5,0,0,1,0.41,91,48
4072_102,102,108,"if (payloadListContentProviderIntentAction != null && !payloadListContentProviderIntentAction.isEmpty()) {
for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}
} else {
readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,8,5,0,0,2,0.47,96,50
4072_103,103,105,"for (String payload : payloadListContentProviderIntentAction) {
sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,8,5,0,0,2,0.48,97,50
4072_104,104,104,"sdkClickHandler.sendPreinstallPayload(payload, Constants.CONTENT_PROVIDER_NO_PERMISSION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,2,0.51,98,51
4072_106,106,106,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.22,100,53
4072_107,107,107,"readStatus = PreinstallUtil.markAsRead(Constants.CONTENT_PROVIDER_NO_PERMISSION, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.42,101,53
4072_111,111,122,"if (PreinstallUtil.hasNotBeenRead(Constants.FILE_SYSTEM, readStatus)) {
String payloadFileSystem = PreinstallUtil.getPayloadFromFileSystem(
deviceInfo.packageName,
adjustConfig.preinstallFilePath,
logger);

if (payloadFileSystem != null && !payloadFileSystem.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);
}
}",1,0,0,0,0,0,0,0,0,5,2,12,0,0,1,1,8,5,0,0,2,0.45,105,55
4072_112,112,115,"String payloadFileSystem = PreinstallUtil.getPayloadFromFileSystem(
deviceInfo.packageName,
adjustConfig.preinstallFilePath,
logger);",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,8,5,0,0,1,0.36,106,55
4072_117,117,121,"if (payloadFileSystem != null && !payloadFileSystem.isEmpty()) {
sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);
} else {
readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,8,5,0,0,2,0.44,111,57
4072_118,118,118,"sdkClickHandler.sendPreinstallPayload(payloadFileSystem, Constants.FILE_SYSTEM);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,2,0.42,112,57
4072_119,119,119,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,0,0.22,113,58
4072_120,120,120,"readStatus = PreinstallUtil.markAsRead(Constants.FILE_SYSTEM, readStatus);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,0,0,1,0.39,114,59
4072_124,124,124,sharedPreferencesManager.setPreinstallPayloadReadStatus(readStatus);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,8,5,0,0,1,0.42,118,61
4072_126,126,126,internalState.preinstallHasBeenRead = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,5,0,0,1,0.39,120,62
4088_1,1,1,    private void checkAttributionStateI() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.34,3,2
4088_2,2,2,if (!checkActivityStateI(activityState)) { return; },1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,3,3,0,0,0,0.31,2,1
4088_4,4,8,"if (internalState.isFirstLaunch()) {
if (internalState.hasSessionResponseNotBeenProcessed()) {
return;
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,0,1,1,3,3,0,0,2,0.67,0,0
4088_5,5,7,"if (internalState.hasSessionResponseNotBeenProcessed()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,2,0.68,0,0
4088_6,6,6,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.22,1,0
4088_10,10,12,"if (attribution != null && !activityState.askingAttribution) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,0,0.37,5,2
4088_11,11,11,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.22,6,2
4088_14,14,14,attributionHandler.getAttribution();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.35,9,4
101_1,1,1,private void getAttributionI(long delayInMilliseconds) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.43,0,0
101_2,2,4,"if (timer.getFireIn() > delayInMilliseconds) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,2,1,0,0,0.44,0,0
101_3,3,3,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.21,1,0
101_6,6,10,"if (delayInMilliseconds != 0) {
double waitTimeSeconds = delayInMilliseconds / 1000.0;
String secondsString = Util.SecondsDisplayFormat.format(waitTimeSeconds);
logger.debug(""Waiting to query attribution in %s seconds"", secondsString);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,6,2,1,0,1,0.47,4,2
101_7,7,7,double waitTimeSeconds = delayInMilliseconds / 1000.0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,1,0,1,0.52,5,2
101_8,8,8,String secondsString = Util.SecondsDisplayFormat.format(waitTimeSeconds);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,1,0,1,0.46,6,3
101_9,9,9,"logger.debug(""Waiting to query attribution in %s seconds"", secondsString);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,1,0,0,0.36,7,4
101_12,12,12,timer.startIn(delayInMilliseconds);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,2,1,0,0,0.46,10,6
102_1,1,1,private void getAttributionI(long delayInMilliseconds) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.43,10,6
102_2,2,4,"if (timer.getFireIn() > delayInMilliseconds) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,3,1,0,2,0.62,7,4
102_3,3,3,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.1,8,4
102_6,6,10,"if (delayInMilliseconds != 0) {
double waitTimeSeconds = delayInMilliseconds / 1000.0;
String secondsString = Util.SecondsDisplayFormat.format(waitTimeSeconds);
logger.debug(""Waiting to query attribution in %s seconds"", secondsString);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,5,3,1,0,1,0.5,1,0
102_7,7,7,double waitTimeSeconds = delayInMilliseconds / 1000.0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.53,4,2
102_8,8,8,String secondsString = Util.SecondsDisplayFormat.format(waitTimeSeconds);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.46,3,1
102_9,9,9,"logger.debug(""Waiting to query attribution in %s seconds"", secondsString);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.4,2,0
102_12,12,12,timer.startIn(delayInMilliseconds);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,1,0.6,0,0
103_1,1,1,    private void sendAttributionRequestI() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,3,0.76,8,5
103_2,2,4,"if (activityHandlerWeakRef.get().getActivityState().isGdprForgotten) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,5,0,0,0,0.34,5,3
103_3,3,3,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.24,6,3
103_5,5,8,"if (paused) {
logger.debug(""Attribution handler is paused"");
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,6,5,0,0,1,0.51,1,0
103_6,6,6,"logger.debug(""Attribution handler is paused"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.54,3,1
103_7,7,7,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.24,2,0
103_10,10,10,ActivityPackage attributionPackage = buildAndGetAttributionPackage();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,5,0,0,2,0.68,0,0
103_11,11,11,"logger.verbose(""%s"", attributionPackage.getExtendedString());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,5,0,0,2,0.61,1,0
103_13,13,13,"Map<String, String> sendingParameters = generateSendingParametersI();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,5,0,0,1,0.48,3,2
103_15,15,18,"activityPackageSender.sendActivityPackage(
attributionPackage,
sendingParameters,
this);",0,0,0,0,0,0,0,0,0,0,0,4,0,0,1,0,6,5,0,0,3,0.74,5,3
2672_1,1,1,void reloadPlayIds(Context context) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.46,9,6
2672_2,2,2,String previousPlayAdId = playAdId;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.42,8,5
2672_3,3,3,Boolean previousIsTrackingEnabled = isTrackingEnabled;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,5,0,0,0,0.37,7,4
2672_5,5,5,playAdId = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,1,0.42,5,3
2672_6,6,6,isTrackingEnabled = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.32,4,2
2672_7,7,7,playAdIdSource = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.42,3,1
2672_8,8,8,playAdIdAttempt = -1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,5,0,0,2,0.58,2,0
2672_11,11,30,"for (int serviceAttempt = 1; serviceAttempt <= 3; serviceAttempt += 1) {
try {
long timeoutServiceMilli = Constants.ONE_SECOND * 3 * serviceAttempt;
GooglePlayServicesClient.GooglePlayServicesInfo gpsInfo =
GooglePlayServicesClient.getGooglePlayServicesInfo(context,
timeoutServiceMilli);
if (playAdId == null) {
playAdId = gpsInfo.getGpsAdid();
}
if (isTrackingEnabled == null) {
isTrackingEnabled = gpsInfo.isTrackingEnabled();
}

if (playAdId != null && isTrackingEnabled != null) {
playAdIdSource = ""service"";
playAdIdAttempt = serviceAttempt;
return;
}
} catch (Exception e) {}
}",0,0,1,0,0,0,0,0,0,12,3,20,0,0,1,1,5,5,0,0,4,0.74,0,0
2672_12,12,29,"try {
long timeoutServiceMilli = Constants.ONE_SECOND * 3 * serviceAttempt;
GooglePlayServicesClient.GooglePlayServicesInfo gpsInfo =
GooglePlayServicesClient.getGooglePlayServicesInfo(context,
timeoutServiceMilli);
if (playAdId == null) {
playAdId = gpsInfo.getGpsAdid();
}
if (isTrackingEnabled == null) {
isTrackingEnabled = gpsInfo.isTrackingEnabled();
}

if (playAdId != null && isTrackingEnabled != null) {
playAdIdSource = ""service"";
playAdIdAttempt = serviceAttempt;
return;
}
} catch (Exception e) {}",0,0,0,0,1,0,0,0,0,11,2,18,0,0,0,0,5,5,0,0,4,0.73,1,0
2672_13,13,13,long timeoutServiceMilli = Constants.ONE_SECOND * 3 * serviceAttempt;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.64,2,1
2672_14,14,16,"GooglePlayServicesClient.GooglePlayServicesInfo gpsInfo =
GooglePlayServicesClient.getGooglePlayServicesInfo(context,
timeoutServiceMilli);",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,5,5,0,0,3,0.76,3,2
2672_17,17,19,"if (playAdId == null) {
playAdId = gpsInfo.getGpsAdid();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,5,0,0,1,0.46,6,4
2672_18,18,18,playAdId = gpsInfo.getGpsAdid();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.45,7,4
2672_20,20,22,"if (isTrackingEnabled == null) {
isTrackingEnabled = gpsInfo.isTrackingEnabled();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,5,5,0,0,0,0.34,9,6
2672_21,21,21,isTrackingEnabled = gpsInfo.isTrackingEnabled();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.34,10,6
2672_24,24,28,"if (playAdId != null && isTrackingEnabled != null) {
playAdIdSource = ""service"";
playAdIdAttempt = serviceAttempt;
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,5,5,0,0,3,0.65,13,8
2672_25,25,25,"playAdIdSource = ""service"";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.58,14,8
2672_26,26,26,playAdIdAttempt = serviceAttempt;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,3,0.76,15,9
2672_27,27,27,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.2,16,10
2672_29,29,29,} catch (Exception e) {},0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.32,18,12
2672_32,32,54,"for (int libAttempt = 1; libAttempt <= 3; libAttempt += 1) {
Object advertisingInfoObject = Util.getAdvertisingInfoObject(
context, Constants.ONE_SECOND * 11);

if (advertisingInfoObject == null) {
continue;
}

if (playAdId == null) {
playAdId = Util.getPlayAdId(
context, advertisingInfoObject, Constants.ONE_SECOND);
}
if (isTrackingEnabled == null) {
isTrackingEnabled = Util.isPlayTrackingEnabled(
context, advertisingInfoObject, Constants.ONE_SECOND);
}

if (playAdId != null && isTrackingEnabled != null) {
playAdIdSource = ""library"";
playAdIdAttempt = libAttempt;
return;
}
}",0,0,1,0,0,0,0,0,0,11,2,23,0,0,1,1,5,5,0,0,2,0.56,21,13
2672_33,33,34,"Object advertisingInfoObject = Util.getAdvertisingInfoObject(
context, Constants.ONE_SECOND * 11);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,5,5,0,0,0,0.39,22,13
2672_36,36,38,"if (advertisingInfoObject == null) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,5,0,0,0,0.39,25,15
2672_37,37,37,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.35,26,15
2672_40,40,43,"if (playAdId == null) {
playAdId = Util.getPlayAdId(
context, advertisingInfoObject, Constants.ONE_SECOND);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,1,0,5,5,0,0,1,0.49,29,17
2672_41,41,42,"playAdId = Util.getPlayAdId(
context, advertisingInfoObject, Constants.ONE_SECOND);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,1,0.48,30,17
2672_44,44,47,"if (isTrackingEnabled == null) {
isTrackingEnabled = Util.isPlayTrackingEnabled(
context, advertisingInfoObject, Constants.ONE_SECOND);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,5,5,0,0,1,0.48,33,19
2672_45,45,46,"isTrackingEnabled = Util.isPlayTrackingEnabled(
context, advertisingInfoObject, Constants.ONE_SECOND);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,1,0.48,34,19
2672_49,49,53,"if (playAdId != null && isTrackingEnabled != null) {
playAdIdSource = ""library"";
playAdIdAttempt = libAttempt;
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,5,5,0,0,2,0.56,38,21
2672_50,50,50,"playAdIdSource = ""library"";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.44,39,21
2672_51,51,51,playAdIdAttempt = libAttempt;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.64,40,22
2672_52,52,52,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.2,41,23
2672_56,56,58,"if (playAdId == null) {
playAdId = previousPlayAdId;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,5,5,0,0,1,0.44,45,25
2672_57,57,57,playAdId = previousPlayAdId;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.44,46,25
2672_59,59,61,"if (isTrackingEnabled == null) {
isTrackingEnabled = previousIsTrackingEnabled;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,5,0,0,0,0.34,48,27
2672_60,60,60,isTrackingEnabled = previousIsTrackingEnabled;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.34,49,27
519_1,1,1,"    public OpenDeviceIdentifierService getOpenDeviceIdentifierService(long timeOut, TimeUnit timeUnit) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.55,0,0
519_2,2,2,IBinder service;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.56,0,0
519_3,3,9,"try {
service = binders.poll(timeOut, timeUnit);
} catch (InterruptedException e) {
logger.error(""Waiting for OpenDeviceIdentifier Service interrupted: %s"",
e.getMessage());
return null;
}",0,0,0,0,1,0,0,0,0,4,1,7,0,1,0,0,5,5,0,0,3,0.64,1,0
519_4,4,4,"service = binders.poll(timeOut, timeUnit);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.64,2,1
519_5,5,5,} catch (InterruptedException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.4,3,2
519_6,6,7,"logger.error(""Waiting for OpenDeviceIdentifier Service interrupted: %s"",
e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,2,0.61,4,3
519_8,8,8,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.22,6,5
519_10,10,13,"if (service == null) {
logger.warn(""Timed out waiting for OpenDeviceIdentifier service connection"");
return null;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,5,5,0,0,2,0.61,8,6
519_11,11,11,"logger.warn(""Timed out waiting for OpenDeviceIdentifier service connection"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.62,9,6
519_12,12,12,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.22,10,7
519_15,15,15,set(service);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,5,0,0,1,0.5,13,9
519_17,17,17,return OpenDeviceIdentifierService.Stub.asInterface(service);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,5,0,0,1,0.53,15,10
520_1,1,1,"    public OpenDeviceIdentifierService getOpenDeviceIdentifierService(long timeOut, TimeUnit timeUnit) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.38,13,9
520_2,2,2,IBinder service;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.26,12,8
520_3,3,9,"try {
service = binders.poll(timeOut, timeUnit);
} catch (InterruptedException e) {
logger.error(""Waiting for OpenDeviceIdentifier Service interrupted: %s"",
e.getMessage());
return null;
}",0,0,0,0,1,0,0,0,0,4,1,7,0,1,0,0,4,1,1,0,1,0.46,5,3
520_4,4,4,"service = binders.poll(timeOut, timeUnit);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,1,0.49,10,6
520_5,5,5,} catch (InterruptedException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.38,9,5
520_6,6,7,"logger.error(""Waiting for OpenDeviceIdentifier Service interrupted: %s"",
e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,1,1,0,0,0.38,7,4
520_8,8,8,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.13,6,3
520_10,10,13,"if (service == null) {
logger.warn(""Timed out waiting for OpenDeviceIdentifier service connection"");
return null;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,4,1,1,0,0,0.36,1,0
520_11,11,11,"logger.warn(""Timed out waiting for OpenDeviceIdentifier service connection"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.39,3,1
520_12,12,12,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.13,2,0
520_15,15,15,set(service);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,1,1,0,1,0.48,0,0
520_17,17,17,return OpenDeviceIdentifierService.Stub.asInterface(service);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,1,1,0,0,0.26,2,1
3308_1,1,1,public void registerFacebookSDKJSInterface() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.42,9,5
3308_2,2,2,String fbApplicationId = FacebookSDKJSInterface.getApplicationId(application.getApplicationContext());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,2,0.57,8,4
3308_3,3,3,"AdjustFactory.getLogger().info(""AdjustBridgeInstance fbApplicationId: %s"", fbApplicationId);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,1,0,1,0.53,7,3
3308_5,5,7,"if (fbApplicationId == null) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,3,1,0,1,0.52,3,1
3308_6,6,6,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.22,4,1
3308_9,9,9,this.facebookSDKJSInterface = new FacebookSDKJSInterface();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,3,1,0,1,0.46,1,0
3308_11,11,16,"if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
this.webView.addJavascriptInterface(facebookSDKJSInterface,
FB_JAVASCRIPT_INTERFACE_NAME_PREFIX
+ fbApplicationId
);
}",1,0,0,0,0,0,0,0,0,1,1,6,0,0,1,0,5,3,1,0,3,0.71,0,0
3308_12,12,15,"this.webView.addJavascriptInterface(facebookSDKJSInterface,
FB_JAVASCRIPT_INTERFACE_NAME_PREFIX
+ fbApplicationId
);",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,5,3,1,0,3,0.76,1,0
45_1,1,1,    public static <V> ListenableFuture<V> whenAnyCompleteCancelOthers(Iterable<? extends ListenableFuture<? extends V>> futures),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,2,0.59,4,2
45_3,3,3,"requireNonNull(futures, ""futures is null"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,1,0.49,2,1
45_4,4,4,"checkArgument(!isEmpty(futures), ""futures is empty"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,4,1,0,1,0.52,1,0
45_6,6,6,ListenableFuture<V> anyComplete = whenAnyComplete(futures);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,4,1,0,1,0.55,0,0
45_7,7,8,"anyComplete.addListener(
() -> {",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,8,4,1,0,0,0.41,1,0
45_9,9,11,"for (ListenableFuture<?> future : futures) {
future.cancel(true);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,8,4,1,0,2,0.68,3,2
45_10,10,10,future.cancel(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,2,0.65,4,2
45_12,12,13,"},
directExecutor());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,4,1,0,0,0.35,6,4
45_14,14,14,return anyComplete;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,4,1,0,0,0.37,8,5
46_1,1,2,"    @Deprecated
public static <T> CompletableFuture<T> addTimeout(CompletableFuture<T> future, Callable<T> onTimeout, Duration timeout, ScheduledExecutorService executorService)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,2,0.59,6,4
46_4,4,4,"requireNonNull(future, ""future is null"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,1,0.56,4,3
46_5,5,5,"requireNonNull(onTimeout, ""timeoutValue is null"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.37,3,2
46_6,6,6,"requireNonNull(timeout, ""timeout is null"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.38,2,1
46_7,7,7,"requireNonNull(executorService, ""executorService is null"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,3,0,0,0,0.36,1,0
46_9,9,11,"if (future.isDone()) {
return future;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,2,0.76,0,0
46_10,10,10,return future;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.83,1,0
46_13,13,13,"UnmodifiableCompletableFuture<T> futureWithTimeout = (UnmodifiableCompletableFuture<T>) unmodifiableFuture(future, true);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,2,0.65,4,2
46_15,15,15,"ScheduledFuture<?> timeoutTaskFuture = executorService.schedule(new TimeoutFutureTask<>(futureWithTimeout, onTimeout, future), timeout.toMillis(), MILLISECONDS);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.52,6,3
46_17,17,17,"future.whenCompleteAsync((value, exception) -> timeoutTaskFuture.cancel(false), executorService);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,2,0.64,8,4
46_19,19,19,return futureWithTimeout;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,0,0,2,0.73,10,5
47_1,1,2,"    @Deprecated
public static <T> CompletableFuture<T> addTimeout(CompletableFuture<T> future, Callable<T> onTimeout, Duration timeout, ScheduledExecutorService executorService)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,0,0,1,0.57,10,6
47_4,4,4,"requireNonNull(future, ""future is null"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,0,0,1,0.51,8,5
47_5,5,5,"requireNonNull(onTimeout, ""timeoutValue is null"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,0,0,0,0.3,7,4
47_6,6,6,"requireNonNull(timeout, ""timeout is null"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,0,0,0,0.31,6,3
47_7,7,7,"requireNonNull(executorService, ""executorService is null"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,5,4,0,0,0,0.38,5,2
47_9,9,11,"if (future.isDone()) {
return future;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,4,0,0,1,0.58,1,0
47_10,10,10,return future;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.55,2,0
47_13,13,13,"UnmodifiableCompletableFuture<T> futureWithTimeout = (UnmodifiableCompletableFuture<T>) unmodifiableFuture(future, true);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,4,0,0,2,0.72,0,0
47_15,15,15,"ScheduledFuture<?> timeoutTaskFuture = executorService.schedule(new TimeoutFutureTask<>(futureWithTimeout, onTimeout, future), timeout.toMillis(), MILLISECONDS);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,4,0,0,1,0.57,2,1
47_17,17,17,"future.whenCompleteAsync((value, exception) -> timeoutTaskFuture.cancel(false), executorService);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,4,0,0,2,0.6,4,2
47_19,19,19,return futureWithTimeout;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,4,0,0,1,0.51,6,3
48_1,1,2,"    @Deprecated
public static <T> CompletableFuture<T> addTimeout(CompletableFuture<T> future, Callable<T> onTimeout, Duration timeout, ScheduledExecutorService executorService)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,0,0,3,0.68,12,7
48_4,4,4,"requireNonNull(future, ""future is null"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,5,0,0,1,0.5,10,6
48_5,5,5,"requireNonNull(onTimeout, ""timeoutValue is null"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,5,0,0,0,0.4,9,5
48_6,6,6,"requireNonNull(timeout, ""timeout is null"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,5,0,0,0,0.4,8,4
48_7,7,7,"requireNonNull(executorService, ""executorService is null"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,6,5,0,0,0,0.4,7,3
48_9,9,11,"if (future.isDone()) {
return future;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,5,0,0,1,0.61,3,1
48_10,10,10,return future;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.55,4,1
48_13,13,13,"UnmodifiableCompletableFuture<T> futureWithTimeout = (UnmodifiableCompletableFuture<T>) unmodifiableFuture(future, true);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,5,0,0,2,0.64,1,0
48_15,15,15,"ScheduledFuture<?> timeoutTaskFuture = executorService.schedule(new TimeoutFutureTask<>(futureWithTimeout, onTimeout, future), timeout.toMillis(), MILLISECONDS);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,5,0,0,3,0.76,0,0
48_17,17,17,"future.whenCompleteAsync((value, exception) -> timeoutTaskFuture.cancel(false), executorService);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,5,0,0,3,0.69,2,1
48_19,19,19,return futureWithTimeout;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,5,0,0,1,0.58,4,2
49_1,1,2,"    @Deprecated
public static <T> CompletableFuture<T> addTimeout(CompletableFuture<T> future, Callable<T> onTimeout, Duration timeout, ScheduledExecutorService executorService)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,0,0,3,0.72,14,8
49_4,4,4,"requireNonNull(future, ""future is null"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,3,0,0,1,0.54,12,7
49_5,5,5,"requireNonNull(onTimeout, ""timeoutValue is null"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,3,0,0,1,0.53,11,6
49_6,6,6,"requireNonNull(timeout, ""timeout is null"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,3,0,0,1,0.54,10,5
49_7,7,7,"requireNonNull(executorService, ""executorService is null"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,5,3,0,0,0,0.42,9,4
49_9,9,11,"if (future.isDone()) {
return future;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,3,0,0,1,0.63,5,2
49_10,10,10,return future;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.6,6,2
49_13,13,13,"UnmodifiableCompletableFuture<T> futureWithTimeout = (UnmodifiableCompletableFuture<T>) unmodifiableFuture(future, true);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,3,0,0,3,0.73,3,1
49_15,15,15,"ScheduledFuture<?> timeoutTaskFuture = executorService.schedule(new TimeoutFutureTask<>(futureWithTimeout, onTimeout, future), timeout.toMillis(), MILLISECONDS);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,3,0,0,3,0.79,1,0
49_17,17,17,"future.whenCompleteAsync((value, exception) -> timeoutTaskFuture.cancel(false), executorService);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,3,0,0,5,0.86,0,0
49_19,19,19,return futureWithTimeout;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,3,0,0,2,0.73,2,1
50_1,1,2,"        @Override
public void run()",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,2,0,1,0.54,5,2
50_4,4,6,"if (settableFuture.isDone()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,3,2,0,1,0.51,1,0
50_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.24,2,0
50_8,8,15,"try {
T result = timeoutValue.call();
settableFuture.internalComplete(result);
}
catch (Throwable t) {
settableFuture.internalCompleteExceptionally(t);
throwIfInstanceOf(t, RuntimeException.class);
}",0,0,0,0,1,0,0,0,0,5,1,8,0,0,1,1,6,3,2,0,3,0.62,0,0
50_9,9,9,T result = timeoutValue.call();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,2,0,2,0.62,1,0
50_10,10,10,settableFuture.internalComplete(result);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,2,0.65,2,1
50_12,12,12,catch (Throwable t) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.28,4,3
50_13,13,13,settableFuture.internalCompleteExceptionally(t);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.51,5,3
50_14,14,14,"throwIfInstanceOf(t, RuntimeException.class);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.33,6,4
50_17,17,17,Future<T> future = futureReference.get();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,2,0,1,0.58,9,6
50_18,18,20,"if (future != null) {
future.cancel(true);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,2,0,1,0.55,10,6
50_19,19,19,future.cancel(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.54,11,7
51_1,1,2,"        @Override
public void run()",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,1,0,0,0.44,14,8
51_4,4,6,"if (settableFuture.isDone()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,3,1,0,1,0.55,10,6
51_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.31,11,6
51_8,8,15,"try {
T result = timeoutValue.call();
settableFuture.internalComplete(result);
}
catch (Throwable t) {
settableFuture.internalCompleteExceptionally(t);
throwIfInstanceOf(t, RuntimeException.class);
}",0,0,0,0,1,0,0,0,0,5,1,8,0,0,1,1,5,3,1,0,1,0.5,1,0
51_9,9,9,T result = timeoutValue.call();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.28,7,4
51_10,10,10,settableFuture.internalComplete(result);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.55,6,3
51_12,12,12,catch (Throwable t) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.38,4,2
51_13,13,13,settableFuture.internalCompleteExceptionally(t);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.56,3,1
51_14,14,14,"throwIfInstanceOf(t, RuntimeException.class);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.38,2,0
51_17,17,17,Future<T> future = futureReference.get();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,1,0,1,0.63,0,0
51_18,18,20,"if (future != null) {
future.cancel(true);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,3,1,0,2,0.68,1,0
51_19,19,19,future.cancel(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,2,0.68,2,1
1809_1,1,1,    public void registerConfigurationClasses(Collection<? extends Module> modules),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,1,0,4,0.68,1,0
1809_3,3,3,modules.stream(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,1,0,1,0.5,0,0
1809_4,4,4,.filter(ConfigurationAwareModule.class::isInstance),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,1,0,3,0.61,1,0
1809_5,5,5,.map(ConfigurationAwareModule.class::cast),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,1,0,3,0.6,2,1
1809_6,6,6,.forEach(module -> module.setConfigurationFactory(this));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,13,11,1,0,3,0.72,3,2
1809_8,8,36,"for (Element element : Elements.getElements(modules)) {
element.acceptVisitor(new DefaultElementVisitor<Void>()
{
@Override
public <T> Void visit(Binding<T> binding)
{
if (binding instanceof InstanceBinding) {
InstanceBinding<T> instanceBinding = (InstanceBinding<T>) binding;

if (instanceBinding.getInstance() instanceof ConfigurationBindingListenerHolder) {
addConfigurationBindingListener(((ConfigurationBindingListenerHolder) instanceBinding.getInstance()).getConfigurationBindingListener());
}

if (instanceBinding.getInstance() instanceof ConfigDefaultsHolder) {
registerConfigDefaults((ConfigDefaultsHolder<?>) instanceBinding.getInstance());
}
}

if (binding instanceof ProviderInstanceBinding) {
ProviderInstanceBinding<?> providerInstanceBinding = (ProviderInstanceBinding<?>) binding;
Provider<?> provider = providerInstanceBinding.getUserSuppliedProvider();
if (provider instanceof ConfigurationProvider) {
registerConfigurationProvider((ConfigurationProvider<?>) provider, Optional.of(binding.getSource()));
}
}
return null;
}
});
}",0,0,0,1,0,0,0,0,0,14,5,29,0,0,1,0,13,11,1,0,4,0.58,5,4
1809_9,9,9,element.acceptVisitor(new DefaultElementVisitor<Void>(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,1,0,0,0.4,6,4
1809_11,11,12,"@Override
public <T> Void visit(Binding<T> binding)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,13,11,1,0,0,0.42,8,6
1809_14,14,24,"if (binding instanceof InstanceBinding) {
InstanceBinding<T> instanceBinding = (InstanceBinding<T>) binding;

if (instanceBinding.getInstance() instanceof ConfigurationBindingListenerHolder) {
addConfigurationBindingListener(((ConfigurationBindingListenerHolder) instanceBinding.getInstance()).getConfigurationBindingListener());
}

if (instanceBinding.getInstance() instanceof ConfigDefaultsHolder) {
registerConfigDefaults((ConfigDefaultsHolder<?>) instanceBinding.getInstance());
}
}",1,0,0,0,0,0,0,0,0,5,2,11,0,0,0,1,13,11,1,0,3,0.55,11,7
1809_15,15,15,InstanceBinding<T> instanceBinding = (InstanceBinding<T>) binding;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,13,11,1,0,0,0.37,12,7
1809_17,17,19,"if (instanceBinding.getInstance() instanceof ConfigurationBindingListenerHolder) {
addConfigurationBindingListener(((ConfigurationBindingListenerHolder) instanceBinding.getInstance()).getConfigurationBindingListener());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,13,11,1,0,1,0.5,14,9
1809_18,18,18,addConfigurationBindingListener(((ConfigurationBindingListenerHolder) instanceBinding.getInstance()).getConfigurationBindingListener());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,1,0,1,0.51,15,9
1809_21,21,23,"if (instanceBinding.getInstance() instanceof ConfigDefaultsHolder) {
registerConfigDefaults((ConfigDefaultsHolder<?>) instanceBinding.getInstance());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,13,11,1,0,2,0.5,18,11
1809_22,22,22,registerConfigDefaults((ConfigDefaultsHolder<?>) instanceBinding.getInstance());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,1,0,2,0.52,19,11
1809_26,26,32,"if (binding instanceof ProviderInstanceBinding) {
ProviderInstanceBinding<?> providerInstanceBinding = (ProviderInstanceBinding<?>) binding;
Provider<?> provider = providerInstanceBinding.getUserSuppliedProvider();
if (provider instanceof ConfigurationProvider) {
registerConfigurationProvider((ConfigurationProvider<?>) provider, Optional.of(binding.getSource()));
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,13,11,1,0,2,0.52,23,13
1809_27,27,27,ProviderInstanceBinding<?> providerInstanceBinding = (ProviderInstanceBinding<?>) binding;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,13,11,1,0,0,0.38,24,13
1809_28,28,28,Provider<?> provider = providerInstanceBinding.getUserSuppliedProvider();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,13,11,1,0,0,0.43,25,14
1809_29,29,31,"if (provider instanceof ConfigurationProvider) {
registerConfigurationProvider((ConfigurationProvider<?>) provider, Optional.of(binding.getSource()));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,13,11,1,0,2,0.55,26,15
1809_30,30,30,"registerConfigurationProvider((ConfigurationProvider<?>) provider, Optional.of(binding.getSource()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,11,1,0,2,0.55,27,16
1809_33,33,33,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,13,11,1,0,0,0.24,30,18
1810_1,1,1,    public void registerConfigurationClasses(Collection<? extends Module> modules),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.57,15,9
1810_3,3,3,modules.stream(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,13,8
1810_4,4,4,.filter(ConfigurationAwareModule.class::isInstance),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.52,12,7
1810_5,5,5,.map(ConfigurationAwareModule.class::cast),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.5,11,6
1810_6,6,6,.forEach(module -> module.setConfigurationFactory(this));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,1,0.57,10,5
1810_8,8,36,"for (Element element : Elements.getElements(modules)) {
element.acceptVisitor(new DefaultElementVisitor<Void>()
{
@Override
public <T> Void visit(Binding<T> binding)
{
if (binding instanceof InstanceBinding) {
InstanceBinding<T> instanceBinding = (InstanceBinding<T>) binding;

if (instanceBinding.getInstance() instanceof ConfigurationBindingListenerHolder) {
addConfigurationBindingListener(((ConfigurationBindingListenerHolder) instanceBinding.getInstance()).getConfigurationBindingListener());
}

if (instanceBinding.getInstance() instanceof ConfigDefaultsHolder) {
registerConfigDefaults((ConfigDefaultsHolder<?>) instanceBinding.getInstance());
}
}

if (binding instanceof ProviderInstanceBinding) {
ProviderInstanceBinding<?> providerInstanceBinding = (ProviderInstanceBinding<?>) binding;
Provider<?> provider = providerInstanceBinding.getUserSuppliedProvider();
if (provider instanceof ConfigurationProvider) {
registerConfigurationProvider((ConfigurationProvider<?>) provider, Optional.of(binding.getSource()));
}
}
return null;
}
});
}",0,0,0,1,0,0,0,0,0,14,5,29,0,0,1,0,2,2,0,0,2,0.71,0,0
1810_9,9,9,element.acceptVisitor(new DefaultElementVisitor<Void>(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,7,3
1810_11,11,12,"@Override
public <T> Void visit(Binding<T> binding)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.41,4,2
1810_14,14,24,"if (binding instanceof InstanceBinding) {
InstanceBinding<T> instanceBinding = (InstanceBinding<T>) binding;

if (instanceBinding.getInstance() instanceof ConfigurationBindingListenerHolder) {
addConfigurationBindingListener(((ConfigurationBindingListenerHolder) instanceBinding.getInstance()).getConfigurationBindingListener());
}

if (instanceBinding.getInstance() instanceof ConfigDefaultsHolder) {
registerConfigDefaults((ConfigDefaultsHolder<?>) instanceBinding.getInstance());
}
}",1,0,0,0,0,0,0,0,0,5,2,11,0,0,0,1,2,2,0,0,2,0.73,0,0
1810_15,15,15,InstanceBinding<T> instanceBinding = (InstanceBinding<T>) binding;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.39,1,0
1810_17,17,19,"if (instanceBinding.getInstance() instanceof ConfigurationBindingListenerHolder) {
addConfigurationBindingListener(((ConfigurationBindingListenerHolder) instanceBinding.getInstance()).getConfigurationBindingListener());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,2,0.78,0,0
1810_18,18,18,addConfigurationBindingListener(((ConfigurationBindingListenerHolder) instanceBinding.getInstance()).getConfigurationBindingListener());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,2,0.8,1,0
1810_21,21,23,"if (instanceBinding.getInstance() instanceof ConfigDefaultsHolder) {
registerConfigDefaults((ConfigDefaultsHolder<?>) instanceBinding.getInstance());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,2,2,0,0,0,0.4,4,2
1810_22,22,22,registerConfigDefaults((ConfigDefaultsHolder<?>) instanceBinding.getInstance());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.41,5,2
1810_26,26,32,"if (binding instanceof ProviderInstanceBinding) {
ProviderInstanceBinding<?> providerInstanceBinding = (ProviderInstanceBinding<?>) binding;
Provider<?> provider = providerInstanceBinding.getUserSuppliedProvider();
if (provider instanceof ConfigurationProvider) {
registerConfigurationProvider((ConfigurationProvider<?>) provider, Optional.of(binding.getSource()));
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,2,2,0,0,1,0.59,9,4
1810_27,27,27,ProviderInstanceBinding<?> providerInstanceBinding = (ProviderInstanceBinding<?>) binding;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.4,10,4
1810_28,28,28,Provider<?> provider = providerInstanceBinding.getUserSuppliedProvider();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.39,11,5
1810_29,29,31,"if (provider instanceof ConfigurationProvider) {
registerConfigurationProvider((ConfigurationProvider<?>) provider, Optional.of(binding.getSource()));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,2,0,0,1,0.63,12,6
1810_30,30,30,"registerConfigurationProvider((ConfigurationProvider<?>) provider, Optional.of(binding.getSource()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.62,13,7
1810_33,33,33,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,16,9
1811_1,1,1,    public void registerConfigurationClasses(Collection<? extends Module> modules),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.27,19,11
1811_3,3,3,modules.stream(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.15,17,10
1811_4,4,4,.filter(ConfigurationAwareModule.class::isInstance),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.28,16,9
1811_5,5,5,.map(ConfigurationAwareModule.class::cast),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.27,15,8
1811_6,6,6,.forEach(module -> module.setConfigurationFactory(this));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.3,14,7
1811_8,8,36,"for (Element element : Elements.getElements(modules)) {
element.acceptVisitor(new DefaultElementVisitor<Void>()
{
@Override
public <T> Void visit(Binding<T> binding)
{
if (binding instanceof InstanceBinding) {
InstanceBinding<T> instanceBinding = (InstanceBinding<T>) binding;

if (instanceBinding.getInstance() instanceof ConfigurationBindingListenerHolder) {
addConfigurationBindingListener(((ConfigurationBindingListenerHolder) instanceBinding.getInstance()).getConfigurationBindingListener());
}

if (instanceBinding.getInstance() instanceof ConfigDefaultsHolder) {
registerConfigDefaults((ConfigDefaultsHolder<?>) instanceBinding.getInstance());
}
}

if (binding instanceof ProviderInstanceBinding) {
ProviderInstanceBinding<?> providerInstanceBinding = (ProviderInstanceBinding<?>) binding;
Provider<?> provider = providerInstanceBinding.getUserSuppliedProvider();
if (provider instanceof ConfigurationProvider) {
registerConfigurationProvider((ConfigurationProvider<?>) provider, Optional.of(binding.getSource()));
}
}
return null;
}
});
}",0,0,0,1,0,0,0,0,0,14,5,29,0,0,1,0,2,2,0,0,2,0.65,0,0
1811_9,9,9,element.acceptVisitor(new DefaultElementVisitor<Void>(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.49,11,5
1811_11,11,12,"@Override
public <T> Void visit(Binding<T> binding)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.22,8,4
1811_14,14,24,"if (binding instanceof InstanceBinding) {
InstanceBinding<T> instanceBinding = (InstanceBinding<T>) binding;

if (instanceBinding.getInstance() instanceof ConfigurationBindingListenerHolder) {
addConfigurationBindingListener(((ConfigurationBindingListenerHolder) instanceBinding.getInstance()).getConfigurationBindingListener());
}

if (instanceBinding.getInstance() instanceof ConfigDefaultsHolder) {
registerConfigDefaults((ConfigDefaultsHolder<?>) instanceBinding.getInstance());
}
}",1,0,0,0,0,0,0,0,0,5,2,11,0,0,0,1,2,2,0,0,2,0.67,0,0
1811_15,15,15,InstanceBinding<T> instanceBinding = (InstanceBinding<T>) binding;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.27,5,2
1811_17,17,19,"if (instanceBinding.getInstance() instanceof ConfigurationBindingListenerHolder) {
addConfigurationBindingListener(((ConfigurationBindingListenerHolder) instanceBinding.getInstance()).getConfigurationBindingListener());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,0,0.29,1,0
1811_18,18,18,addConfigurationBindingListener(((ConfigurationBindingListenerHolder) instanceBinding.getInstance()).getConfigurationBindingListener());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.29,2,0
1811_21,21,23,"if (instanceBinding.getInstance() instanceof ConfigDefaultsHolder) {
registerConfigDefaults((ConfigDefaultsHolder<?>) instanceBinding.getInstance());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,2,2,0,0,2,0.76,0,0
1811_22,22,22,registerConfigDefaults((ConfigDefaultsHolder<?>) instanceBinding.getInstance());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,2,0.78,1,0
1811_26,26,32,"if (binding instanceof ProviderInstanceBinding) {
ProviderInstanceBinding<?> providerInstanceBinding = (ProviderInstanceBinding<?>) binding;
Provider<?> provider = providerInstanceBinding.getUserSuppliedProvider();
if (provider instanceof ConfigurationProvider) {
registerConfigurationProvider((ConfigurationProvider<?>) provider, Optional.of(binding.getSource()));
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,2,2,0,0,0,0.31,5,2
1811_27,27,27,ProviderInstanceBinding<?> providerInstanceBinding = (ProviderInstanceBinding<?>) binding;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.29,6,2
1811_28,28,28,Provider<?> provider = providerInstanceBinding.getUserSuppliedProvider();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.28,7,3
1811_29,29,31,"if (provider instanceof ConfigurationProvider) {
registerConfigurationProvider((ConfigurationProvider<?>) provider, Optional.of(binding.getSource()));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,2,0,0,0,0.31,8,4
1811_30,30,30,"registerConfigurationProvider((ConfigurationProvider<?>) provider, Optional.of(binding.getSource()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.31,9,5
1811_33,33,33,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.23,12,7
1812_1,1,1,    public void registerConfigurationClasses(Collection<? extends Module> modules),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.52,24,13
1812_3,3,3,modules.stream(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.23,22,12
1812_4,4,4,.filter(ConfigurationAwareModule.class::isInstance),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.55,21,11
1812_5,5,5,.map(ConfigurationAwareModule.class::cast),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.52,20,10
1812_6,6,6,.forEach(module -> module.setConfigurationFactory(this));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,1,0.59,19,9
1812_8,8,36,"for (Element element : Elements.getElements(modules)) {
element.acceptVisitor(new DefaultElementVisitor<Void>()
{
@Override
public <T> Void visit(Binding<T> binding)
{
if (binding instanceof InstanceBinding) {
InstanceBinding<T> instanceBinding = (InstanceBinding<T>) binding;

if (instanceBinding.getInstance() instanceof ConfigurationBindingListenerHolder) {
addConfigurationBindingListener(((ConfigurationBindingListenerHolder) instanceBinding.getInstance()).getConfigurationBindingListener());
}

if (instanceBinding.getInstance() instanceof ConfigDefaultsHolder) {
registerConfigDefaults((ConfigDefaultsHolder<?>) instanceBinding.getInstance());
}
}

if (binding instanceof ProviderInstanceBinding) {
ProviderInstanceBinding<?> providerInstanceBinding = (ProviderInstanceBinding<?>) binding;
Provider<?> provider = providerInstanceBinding.getUserSuppliedProvider();
if (provider instanceof ConfigurationProvider) {
registerConfigurationProvider((ConfigurationProvider<?>) provider, Optional.of(binding.getSource()));
}
}
return null;
}
});
}",0,0,0,1,0,0,0,0,0,14,5,29,0,0,1,0,2,2,0,0,2,0.72,0,0
1812_9,9,9,element.acceptVisitor(new DefaultElementVisitor<Void>(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.3,16,7
1812_11,11,12,"@Override
public <T> Void visit(Binding<T> binding)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.34,13,6
1812_14,14,24,"if (binding instanceof InstanceBinding) {
InstanceBinding<T> instanceBinding = (InstanceBinding<T>) binding;

if (instanceBinding.getInstance() instanceof ConfigurationBindingListenerHolder) {
addConfigurationBindingListener(((ConfigurationBindingListenerHolder) instanceBinding.getInstance()).getConfigurationBindingListener());
}

if (instanceBinding.getInstance() instanceof ConfigDefaultsHolder) {
registerConfigDefaults((ConfigDefaultsHolder<?>) instanceBinding.getInstance());
}
}",1,0,0,0,0,0,0,0,0,5,2,11,0,0,0,1,2,2,0,0,1,0.57,1,0
1812_15,15,15,InstanceBinding<T> instanceBinding = (InstanceBinding<T>) binding;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.39,10,4
1812_17,17,19,"if (instanceBinding.getInstance() instanceof ConfigurationBindingListenerHolder) {
addConfigurationBindingListener(((ConfigurationBindingListenerHolder) instanceBinding.getInstance()).getConfigurationBindingListener());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,1,0.59,6,2
1812_18,18,18,addConfigurationBindingListener(((ConfigurationBindingListenerHolder) instanceBinding.getInstance()).getConfigurationBindingListener());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.59,7,2
1812_21,21,23,"if (instanceBinding.getInstance() instanceof ConfigDefaultsHolder) {
registerConfigDefaults((ConfigDefaultsHolder<?>) instanceBinding.getInstance());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,2,2,0,0,0,0.36,2,0
1812_22,22,22,registerConfigDefaults((ConfigDefaultsHolder<?>) instanceBinding.getInstance());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.36,3,0
1812_26,26,32,"if (binding instanceof ProviderInstanceBinding) {
ProviderInstanceBinding<?> providerInstanceBinding = (ProviderInstanceBinding<?>) binding;
Provider<?> provider = providerInstanceBinding.getUserSuppliedProvider();
if (provider instanceof ConfigurationProvider) {
registerConfigurationProvider((ConfigurationProvider<?>) provider, Optional.of(binding.getSource()));
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,2,2,0,0,2,0.82,0,0
1812_27,27,27,ProviderInstanceBinding<?> providerInstanceBinding = (ProviderInstanceBinding<?>) binding;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.66,1,0
1812_28,28,28,Provider<?> provider = providerInstanceBinding.getUserSuppliedProvider();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.68,2,1
1812_29,29,31,"if (provider instanceof ConfigurationProvider) {
registerConfigurationProvider((ConfigurationProvider<?>) provider, Optional.of(binding.getSource()));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,2,0,0,2,0.86,3,2
1812_30,30,30,"registerConfigurationProvider((ConfigurationProvider<?>) provider, Optional.of(binding.getSource()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,2,0.84,4,3
1812_33,33,33,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,7,5
1813_1,1,1,    public List<Message> validateRegisteredConfigurationProvider(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.29,4,3
1813_3,3,3,List<Message> messages = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.27,2,2
1813_4,4,14,"for (ConfigurationProvider<?> configurationProvider : ImmutableList.copyOf(registeredProviders)) {
try {
configurationProvider.get();
}
catch (ConfigurationException e) {
ImmutableList<Object> sources = configurationProvider.getBindingSource().map(ImmutableList::of).orElse(ImmutableList.of());
for (Message message : e.getErrorMessages()) {
messages.add(new Message(sources, message.getMessage(), message.getCause()));
}
}
}",0,0,0,1,0,0,0,0,0,6,3,11,0,1,0,0,5,4,0,0,2,0.51,0,0
1813_5,5,13,"try {
configurationProvider.get();
}
catch (ConfigurationException e) {
ImmutableList<Object> sources = configurationProvider.getBindingSource().map(ImmutableList::of).orElse(ImmutableList.of());
for (Message message : e.getErrorMessages()) {
messages.add(new Message(sources, message.getMessage(), message.getCause()));
}
}",0,0,0,0,1,0,0,0,0,5,2,9,0,0,0,0,5,4,0,0,2,0.5,0,0
1813_6,6,6,configurationProvider.get();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.26,0,0
1813_8,8,8,catch (ConfigurationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.53,2,1
1813_9,9,9,ImmutableList<Object> sources = configurationProvider.getBindingSource().map(ImmutableList::of).orElse(ImmutableList.of());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.4,3,1
1813_10,10,12,"for (Message message : e.getErrorMessages()) {
messages.add(new Message(sources, message.getMessage(), message.getCause()));
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,0,5,4,0,0,1,0.41,4,2
1813_11,11,11,"messages.add(new Message(sources, message.getMessage(), message.getCause()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.4,5,3
1813_15,15,15,return messages;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.24,9,5
1814_1,1,1,    public List<Message> validateRegisteredConfigurationProvider(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,1,0.47,7,5
1814_3,3,3,List<Message> messages = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,2,0,1,0.58,5,4
1814_4,4,14,"for (ConfigurationProvider<?> configurationProvider : ImmutableList.copyOf(registeredProviders)) {
try {
configurationProvider.get();
}
catch (ConfigurationException e) {
ImmutableList<Object> sources = configurationProvider.getBindingSource().map(ImmutableList::of).orElse(ImmutableList.of());
for (Message message : e.getErrorMessages()) {
messages.add(new Message(sources, message.getMessage(), message.getCause()));
}
}
}",0,0,0,1,0,0,0,0,0,6,3,11,0,1,0,0,5,2,2,0,3,0.67,0,0
1814_5,5,13,"try {
configurationProvider.get();
}
catch (ConfigurationException e) {
ImmutableList<Object> sources = configurationProvider.getBindingSource().map(ImmutableList::of).orElse(ImmutableList.of());
for (Message message : e.getErrorMessages()) {
messages.add(new Message(sources, message.getMessage(), message.getCause()));
}
}",0,0,0,0,1,0,0,0,0,5,2,9,0,0,0,0,5,2,2,0,3,0.68,0,0
1814_6,6,6,configurationProvider.get();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.22,2,1
1814_8,8,8,catch (ConfigurationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.42,0,0
1814_9,9,9,ImmutableList<Object> sources = configurationProvider.getBindingSource().map(ImmutableList::of).orElse(ImmutableList.of());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,2,0,1,0.47,0,0
1814_10,10,12,"for (Message message : e.getErrorMessages()) {
messages.add(new Message(sources, message.getMessage(), message.getCause()));
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,0,5,2,2,0,2,0.63,1,0
1814_11,11,11,"messages.add(new Message(sources, message.getMessage(), message.getCause()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,1,0.51,2,1
1814_15,15,15,return messages;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,2,2,0,0,0.35,6,3
1815_1,1,1,"    private <T> ConfigurationHolder<T> build(Class<T> configClass, Optional<String> configPrefix, ConfigDefaults<T> configDefaults)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.38,29,15
1815_3,3,5,"if (configClass == null) {
throw new NullPointerException(""configClass is null"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,3,2,0,0,0.35,25,13
1815_4,4,4,"throw new NullPointerException(""configClass is null"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,3,2,0,0,0.35,26,13
1815_7,7,9,"String prefix = configPrefix
.map(value -> value + ""."")
.orElse("""");",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,6,3,2,0,0,0.37,21,12
1815_11,11,11,ConfigurationMetadata<T> configurationMetadata = getMetadata(configClass);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,2,0,0,0.38,19,11
1815_12,12,12,configurationMetadata.getProblems().throwIfHasErrors();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,3,2,0,0,0.36,18,10
1815_14,14,14,T instance = newInstance(configurationMetadata);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,3,2,0,0,0.3,16,9
1815_16,16,16,configDefaults.setDefaults(instance);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,2,0,0,0.36,14,8
1815_18,18,18,Problems problems = new Problems(monitor);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,3,2,0,0,0.39,12,7
1815_20,20,29,"for (AttributeMetadata attribute : configurationMetadata.getAttributes().values()) {
Problems attributeProblems = new Problems(monitor);
try {
setConfigProperty(instance, attribute, prefix, attributeProblems);
}
catch (InvalidConfigurationException e) {
attributeProblems.addError(e.getCause(), e.getMessage());
}
problems.record(attributeProblems);
}",0,0,0,1,0,0,0,0,0,6,2,10,0,0,1,1,6,3,2,0,1,0.45,1,0
1815_21,21,21,Problems attributeProblems = new Problems(monitor);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.39,9,5
1815_22,22,27,"try {
setConfigProperty(instance, attribute, prefix, attributeProblems);
}
catch (InvalidConfigurationException e) {
attributeProblems.addError(e.getCause(), e.getMessage());
}",0,0,0,0,1,0,0,0,0,3,1,6,0,1,0,0,6,3,2,0,1,0.44,3,1
1815_23,23,23,"setConfigProperty(instance, attribute, prefix, attributeProblems);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.49,7,3
1815_25,25,25,catch (InvalidConfigurationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.35,5,2
1815_26,26,26,"attributeProblems.addError(e.getCause(), e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.33,4,1
1815_28,28,28,problems.record(attributeProblems);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.4,2,0
1815_31,31,38,"if (configClass.isAnnotationPresent(DefunctConfig.class)) {
for (String value : configClass.getAnnotation(DefunctConfig.class).value()) {
String name = prefix + value;
if (!value.isEmpty() && properties.get(name) != null) {
problems.addError(""Defunct property '%s' (class [%s]) cannot be configured."", name, configClass.toString());
}
}
}",1,0,0,0,0,0,0,0,0,4,3,8,0,0,1,1,6,3,2,0,2,0.45,0,0
1815_32,32,37,"for (String value : configClass.getAnnotation(DefunctConfig.class).value()) {
String name = prefix + value;
if (!value.isEmpty() && properties.get(name) != null) {
problems.addError(""Defunct property '%s' (class [%s]) cannot be configured."", name, configClass.toString());
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,0,0,0,6,3,2,0,2,0.45,1,0
1815_33,33,33,String name = prefix + value;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.31,2,1
1815_34,34,36,"if (!value.isEmpty() && properties.get(name) != null) {
problems.addError(""Defunct property '%s' (class [%s]) cannot be configured."", name, configClass.toString());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,2,0,2,0.45,3,2
1815_35,35,35,"problems.addError(""Defunct property '%s' (class [%s]) cannot be configured."", name, configClass.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,2,0.45,4,3
1815_40,40,40,problems.throwIfHasErrors();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,2,0,0,0.36,9,5
1815_42,42,58,"for (ConstraintViolation<?> violation : validate(instance)) {
String propertyFieldName = violation.getPropertyPath().toString();
String attributeName = LOWER_CAMEL.to(UPPER_CAMEL, propertyFieldName);
AttributeMetadata attribute = configurationMetadata.getAttributes().get(attributeName);
if (attribute != null && attribute.getInjectionPoint() != null) {
String propertyName = attribute.getInjectionPoint().getProperty();
if (!prefix.isEmpty()) {
propertyName = prefix + propertyName;
}
problems.addError(""Invalid configuration property %s: %s (for class %s.%s)"",
propertyName, violation.getMessage(), configClass.getName(), violation.getPropertyPath());
}
else {
problems.addError(""Invalid configuration property with prefix '%s': %s (for class %s.%s)"",
prefix, violation.getMessage(), configClass.getName(), violation.getPropertyPath());
}
}",0,0,0,1,0,0,0,0,0,10,3,17,0,0,1,1,6,3,2,0,1,0.47,11,6
1815_43,43,43,String propertyFieldName = violation.getPropertyPath().toString();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,2,0,1,0.45,12,6
1815_44,44,44,"String attributeName = LOWER_CAMEL.to(UPPER_CAMEL, propertyFieldName);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,2,0,1,0.45,13,7
1815_45,45,45,AttributeMetadata attribute = configurationMetadata.getAttributes().get(attributeName);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.35,14,8
1815_46,46,57,"if (attribute != null && attribute.getInjectionPoint() != null) {
String propertyName = attribute.getInjectionPoint().getProperty();
if (!prefix.isEmpty()) {
propertyName = prefix + propertyName;
}
problems.addError(""Invalid configuration property %s: %s (for class %s.%s)"",
propertyName, violation.getMessage(), configClass.getName(), violation.getPropertyPath());
}
else {
problems.addError(""Invalid configuration property with prefix '%s': %s (for class %s.%s)"",
prefix, violation.getMessage(), configClass.getName(), violation.getPropertyPath());
}",1,0,0,0,0,0,0,0,0,6,2,12,0,1,0,0,6,3,2,0,1,0.47,15,9
1815_47,47,47,String propertyName = attribute.getInjectionPoint().getProperty();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,2,0,1,0.46,16,10
1815_48,48,50,"if (!prefix.isEmpty()) {
propertyName = prefix + propertyName;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,2,0,1,0.47,17,11
1815_49,49,49,propertyName = prefix + propertyName;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.49,18,12
1815_51,51,52,"problems.addError(""Invalid configuration property %s: %s (for class %s.%s)"",
propertyName, violation.getMessage(), configClass.getName(), violation.getPropertyPath());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,6,3,2,0,1,0.48,20,14
1815_54,54,54,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.24,23,15
1815_55,55,56,"problems.addError(""Invalid configuration property with prefix '%s': %s (for class %s.%s)"",
prefix, violation.getMessage(), configClass.getName(), violation.getPropertyPath());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,2,0,1,0.47,24,15
1815_60,60,60,problems.throwIfHasErrors();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,2,0,0,0.36,29,17
1815_62,62,62,"return new ConfigurationHolder<>(instance, problems);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,2,0,0,0.34,31,18
1816_1,1,1,"    private <T> void setConfigProperty(T instance, AttributeMetadata attribute, String prefix, Problems problems)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.51,2,1
1816_2,2,2,throws InvalidConfigurationException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,1,1,0,0,0.38,1,0
1816_4,4,4,"ConfigurationMetadata.InjectionPointMetaData injectionPoint = findOperativeInjectionPoint(attribute, prefix, problems);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,1,1,0,0,0.37,0,0
1816_6,6,8,"if (injectionPoint == null) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,1,1,0,0,0.2,2,1
1816_7,7,7,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.07,3,1
1816_10,10,12,"if (injectionPoint.getSetter().isAnnotationPresent(Deprecated.class)) {
problems.addWarning(""Configuration property '%s' is deprecated and should not be used"", prefix + injectionPoint.getProperty());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,1,1,0,2,0.64,6,3
1816_11,11,11,"problems.addWarning(""Configuration property '%s' is deprecated and should not be used"", prefix + injectionPoint.getProperty());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,2,0.65,7,3
1816_14,14,14,"Object value = getInjectedValue(attribute, injectionPoint, prefix);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,1,1,0,2,0.66,10,5
1816_16,16,24,"try {
injectionPoint.getSetter().invoke(instance, value);
}
catch (Throwable e) {
if (e instanceof InvocationTargetException && e.getCause() != null) {
e = e.getCause();
}
throw new InvalidConfigurationException(e, format(""Error invoking configuration method [%s]"", injectionPoint.getSetter().toGenericString()));
}",0,0,0,0,1,0,0,0,0,5,2,9,0,0,1,0,3,1,1,0,2,0.61,12,6
1816_17,17,17,"injectionPoint.getSetter().invoke(instance, value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,2,0.66,13,6
1816_19,19,19,catch (Throwable e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.29,15,8
1816_20,20,22,"if (e instanceof InvocationTargetException && e.getCause() != null) {
e = e.getCause();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,1,1,0,1,0.51,16,8
1816_21,21,21,e = e.getCause();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.47,17,9
1816_23,23,23,"throw new InvalidConfigurationException(e, format(""Error invoking configuration method [%s]"", injectionPoint.getSetter().toGenericString()));",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,1,1,0,1,0.49,19,11
1817_1,1,1,"    private <T> void setConfigProperty(T instance, AttributeMetadata attribute, String prefix, Problems problems)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.42,4,2
1817_2,2,2,throws InvalidConfigurationException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,1,0,0,0.34,3,1
1817_4,4,4,"ConfigurationMetadata.InjectionPointMetaData injectionPoint = findOperativeInjectionPoint(attribute, prefix, problems);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,3,1,0,2,0.64,1,0
1817_6,6,8,"if (injectionPoint == null) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,3,1,0,2,0.6,0,0
1817_7,7,7,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.2,1,0
1817_10,10,12,"if (injectionPoint.getSetter().isAnnotationPresent(Deprecated.class)) {
problems.addWarning(""Configuration property '%s' is deprecated and should not be used"", prefix + injectionPoint.getProperty());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,3,1,0,4,0.74,4,2
1817_11,11,11,"problems.addWarning(""Configuration property '%s' is deprecated and should not be used"", prefix + injectionPoint.getProperty());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,3,0.66,5,2
1817_14,14,14,"Object value = getInjectedValue(attribute, injectionPoint, prefix);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,3,1,0,3,0.72,8,4
1817_16,16,24,"try {
injectionPoint.getSetter().invoke(instance, value);
}
catch (Throwable e) {
if (e instanceof InvocationTargetException && e.getCause() != null) {
e = e.getCause();
}
throw new InvalidConfigurationException(e, format(""Error invoking configuration method [%s]"", injectionPoint.getSetter().toGenericString()));
}",0,0,0,0,1,0,0,0,0,5,2,9,0,0,1,0,5,3,1,0,4,0.73,10,5
1817_17,17,17,"injectionPoint.getSetter().invoke(instance, value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,4,0.79,11,5
1817_19,19,19,catch (Throwable e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.44,13,7
1817_20,20,22,"if (e instanceof InvocationTargetException && e.getCause() != null) {
e = e.getCause();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,3,1,0,1,0.53,14,7
1817_21,21,21,e = e.getCause();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.52,15,8
1817_23,23,23,"throw new InvalidConfigurationException(e, format(""Error invoking configuration method [%s]"", injectionPoint.getSetter().toGenericString()));",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,1,0,4,0.72,17,10
1818_1,1,1,"private Object getInjectedValue(AttributeMetadata attribute, ConfigurationMetadata.InjectionPointMetaData injectionPoint, String prefix)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,2,0.6,5,3
1818_2,2,2,throws InvalidConfigurationException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,1,1,0,0,0.38,4,2
1818_4,4,4,String name = prefix + injectionPoint.getProperty();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,2,0.65,2,1
1818_5,5,5,usedProperties.add(name);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,1,1,0,1,0.53,1,0
1818_7,7,7,String value = properties.get(name);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,1,1,0,3,0.87,0,0
1818_8,8,8,String printableValue = value;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,1,0.67,1,0
1818_9,9,11,"if (attribute.isSecuritySensitive()) {
printableValue = ""[REDACTED]"";
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,1,1,0,1,0.64,2,1
1818_10,10,10,"printableValue = ""[REDACTED]"";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.66,3,2
1818_13,13,15,"if (value == null) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,1,1,0,1,0.47,6,4
1818_14,14,14,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.12,7,4
1818_17,17,17,Class<?> propertyType = injectionPoint.getSetter().getParameterTypes()[0];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,1,1,0,2,0.64,10,6
1818_19,19,19,"Object finalValue = coerce(propertyType, value);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,1,1,0,2,0.69,12,7
1818_20,20,26,"if (finalValue == null) {
throw new InvalidConfigurationException(format(""Invalid value '%s' for type %s (property '%s') in order to call [%s]"",
printableValue,
propertyType.getName(),
name,
injectionPoint.getSetter().toGenericString()));
}",1,0,0,0,0,0,0,0,0,1,1,7,0,1,0,0,3,1,1,0,3,0.74,13,7
1818_21,21,25,"throw new InvalidConfigurationException(format(""Invalid value '%s' for type %s (property '%s') in order to call [%s]"",
printableValue,
propertyType.getName(),
name,
injectionPoint.getSetter().toGenericString()));",0,0,0,0,0,0,0,0,1,0,0,5,0,0,0,0,3,1,1,0,3,0.74,14,8
1818_27,27,27,return finalValue;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,1,1,0,1,0.5,20,10
1819_1,1,1,"private Object getInjectedValue(AttributeMetadata attribute, ConfigurationMetadata.InjectionPointMetaData injectionPoint, String prefix)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.42,15,9
1819_2,2,2,throws InvalidConfigurationException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,0,0,0,0.38,14,8
1819_4,4,4,String name = prefix + injectionPoint.getProperty();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.42,12,7
1819_5,5,5,usedProperties.add(name);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,0,0,1,0.45,11,6
1819_7,7,7,String value = properties.get(name);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,0,0,2,0.59,9,5
1819_8,8,8,String printableValue = value;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.61,8,4
1819_9,9,11,"if (attribute.isSecuritySensitive()) {
printableValue = ""[REDACTED]"";
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,5,3,0,0,1,0.57,5,2
1819_10,10,10,"printableValue = ""[REDACTED]"";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.59,6,2
1819_13,13,15,"if (value == null) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,3,0,0,1,0.4,1,0
1819_14,14,14,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.14,2,0
1819_17,17,17,Class<?> propertyType = injectionPoint.getSetter().getParameterTypes()[0];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,3,0,0,2,0.59,0,0
1819_19,19,19,"Object finalValue = coerce(propertyType, value);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,0,0,5,0.94,2,1
1819_20,20,26,"if (finalValue == null) {
throw new InvalidConfigurationException(format(""Invalid value '%s' for type %s (property '%s') in order to call [%s]"",
printableValue,
propertyType.getName(),
name,
injectionPoint.getSetter().toGenericString()));
}",1,0,0,0,0,0,0,0,0,1,1,7,0,1,0,0,5,3,0,0,4,0.76,3,1
1819_21,21,25,"throw new InvalidConfigurationException(format(""Invalid value '%s' for type %s (property '%s') in order to call [%s]"",
printableValue,
propertyType.getName(),
name,
injectionPoint.getSetter().toGenericString()));",0,0,0,0,0,0,0,0,1,0,0,5,0,0,0,0,5,3,0,0,3,0.67,4,2
1819_27,27,27,return finalValue;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.69,10,4
1820_1,1,1,"    private static Object coerce(Class<?> type, String value)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,3,0,3,0.63,41,25
1820_3,3,5,"if (type.isPrimitive() && value == null) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,11,6,3,0,1,0.48,37,23
1820_4,4,4,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,3,0,0,0.25,38,23
1820_7,7,41,"try {
if (String.class == type) {
return value;
}
if (Boolean.class == type || boolean.class == type) {
if (""true"".equalsIgnoreCase(value)) {
return Boolean.TRUE;
}
if (""false"".equalsIgnoreCase(value)) {
return Boolean.FALSE;
}
return null;
}
if (Byte.class == type || byte.class == type) {
return Byte.valueOf(value);
}
if (Short.class == type || short.class == type) {
return Short.valueOf(value);
}
if (Integer.class == type || int.class == type) {
return Integer.valueOf(value);
}
if (Long.class == type || long.class == type) {
return Long.valueOf(value);
}
if (Float.class == type || float.class == type) {
return Float.valueOf(value);
}
if (Double.class == type || double.class == type) {
return Double.valueOf(value);
}
}
catch (Exception ignored) {
return null;
}",0,0,0,0,1,0,0,0,0,22,3,35,0,0,1,1,11,6,3,0,2,0.58,1,0
1820_8,8,10,"if (String.class == type) {
return value;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,11,6,3,0,2,0.59,32,20
1820_9,9,9,return value;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,3,0,1,0.47,33,20
1820_11,11,19,"if (Boolean.class == type || boolean.class == type) {
if (""true"".equalsIgnoreCase(value)) {
return Boolean.TRUE;
}
if (""false"".equalsIgnoreCase(value)) {
return Boolean.FALSE;
}
return null;
}",1,0,0,0,0,0,0,0,0,5,2,9,0,0,0,0,11,6,3,0,1,0.44,23,14
1820_12,12,14,"if (""true"".equalsIgnoreCase(value)) {
return Boolean.TRUE;
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,11,6,3,0,1,0.44,28,17
1820_13,13,13,return Boolean.TRUE;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,3,0,0,0.28,29,17
1820_15,15,17,"if (""false"".equalsIgnoreCase(value)) {
return Boolean.FALSE;
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,11,6,3,0,1,0.43,25,15
1820_16,16,16,return Boolean.FALSE;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,3,0,0,0.27,26,15
1820_18,18,18,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,3,0,0,0.25,24,14
1820_20,20,22,"if (Byte.class == type || byte.class == type) {
return Byte.valueOf(value);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,11,6,3,0,1,0.48,20,12
1820_21,21,21,return Byte.valueOf(value);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,3,0,1,0.51,21,12
1820_23,23,25,"if (Short.class == type || short.class == type) {
return Short.valueOf(value);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,11,6,3,0,1,0.46,17,10
1820_24,24,24,return Short.valueOf(value);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,3,0,1,0.49,18,10
1820_26,26,28,"if (Integer.class == type || int.class == type) {
return Integer.valueOf(value);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,11,6,3,0,1,0.53,14,8
1820_27,27,27,return Integer.valueOf(value);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,3,0,1,0.55,15,8
1820_29,29,31,"if (Long.class == type || long.class == type) {
return Long.valueOf(value);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,11,6,3,0,1,0.48,11,6
1820_30,30,30,return Long.valueOf(value);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,3,0,1,0.5,12,6
1820_32,32,34,"if (Float.class == type || float.class == type) {
return Float.valueOf(value);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,11,6,3,0,1,0.53,8,4
1820_33,33,33,return Float.valueOf(value);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,3,0,1,0.55,9,4
1820_35,35,37,"if (Double.class == type || double.class == type) {
return Double.valueOf(value);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,11,6,3,0,1,0.53,5,2
1820_36,36,36,return Double.valueOf(value);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,3,0,1,0.55,6,2
1820_39,39,39,catch (Exception ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,3,0,0,0.29,3,1
1820_40,40,40,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,3,0,0,0.25,2,0
1820_43,43,55,"try {
Method fromString = type.getMethod(""fromString"", String.class);
if (fromString.getReturnType().isAssignableFrom(type)) {
try {
return fromString.invoke(null, value);
}
catch (ReflectiveOperationException e) {
return null;
}
}
}
catch (NoSuchMethodException ignored) {
}",0,0,0,0,1,0,0,0,0,7,3,13,0,0,1,1,11,6,3,0,3,0.59,0,0
1820_44,44,44,"Method fromString = type.getMethod(""fromString"", String.class);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,6,3,0,2,0.68,1,0
1820_45,45,52,"if (fromString.getReturnType().isAssignableFrom(type)) {
try {
return fromString.invoke(null, value);
}
catch (ReflectiveOperationException e) {
return null;
}
}",1,0,0,0,0,0,0,0,0,4,2,8,0,1,0,0,11,6,3,0,2,0.5,2,1
1820_46,46,51,"try {
return fromString.invoke(null, value);
}
catch (ReflectiveOperationException e) {
return null;
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,11,6,3,0,2,0.49,3,2
1820_47,47,47,"return fromString.invoke(null, value);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,3,0,2,0.57,4,3
1820_49,49,49,catch (ReflectiveOperationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,3,0,0,0.3,6,5
1820_50,50,50,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,3,0,0,0.25,7,5
1820_54,54,54,catch (NoSuchMethodException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,3,0,1,0.44,11,7
1820_57,57,74,"if (type.isEnum()) {
try {
return Enum.valueOf(type.asSubclass(Enum.class), value);
}
catch (IllegalArgumentException ignored) {
}
Object match = null;
for (Enum<?> option : type.asSubclass(Enum.class).getEnumConstants()) {
String enumValue = value.replace(""-"", ""_"");
if (option.name().equalsIgnoreCase(enumValue)) {
if (match != null) {
return null;
}
match = option;
}
}
return match;
}",1,0,0,0,0,0,0,0,0,11,4,18,0,0,1,1,11,6,3,0,3,0.61,14,8
1820_58,58,62,"try {
return Enum.valueOf(type.asSubclass(Enum.class), value);
}
catch (IllegalArgumentException ignored) {
}",0,0,0,0,1,0,0,0,0,2,1,5,0,0,0,0,11,6,3,0,2,0.54,15,8
1820_59,59,59,"return Enum.valueOf(type.asSubclass(Enum.class), value);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,3,0,2,0.61,16,9
1820_61,61,61,catch (IllegalArgumentException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,3,0,0,0.38,18,11
1820_63,63,63,Object match = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,6,3,0,0,0.3,20,12
1820_64,64,72,"for (Enum<?> option : type.asSubclass(Enum.class).getEnumConstants()) {
String enumValue = value.replace(""-"", ""_"");
if (option.name().equalsIgnoreCase(enumValue)) {
if (match != null) {
return null;
}
match = option;
}
}",0,0,0,1,0,0,0,0,0,5,3,9,0,1,0,0,11,6,3,0,3,0.63,21,12
1820_65,65,65,"String enumValue = value.replace(""-"", ""_"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,6,3,0,3,0.73,22,13
1820_66,66,71,"if (option.name().equalsIgnoreCase(enumValue)) {
if (match != null) {
return null;
}
match = option;
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,0,11,6,3,0,2,0.5,23,14
1820_67,67,69,"if (match != null) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,11,6,3,0,0,0.29,24,15
1820_68,68,68,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,3,0,0,0.25,25,16
1820_70,70,70,match = option;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,6,3,0,0,0.36,27,18
1820_73,73,73,return match;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,11,6,3,0,0,0.29,30,19
1820_76,76,79,"if (LIST_OF_STRINGS_TYPE_TOKEN.isSubtypeOf(TypeToken.of(type))) {
return VALUE_SPLITTER.splitToStream(value)
.collect(toImmutableList());
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,1,1,11,6,3,0,2,0.56,33,20
1820_77,77,78,"return VALUE_SPLITTER.splitToStream(value)
.collect(toImmutableList());",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,11,6,3,0,1,0.53,34,20
1820_81,81,93,"try {
Method valueOf = type.getMethod(""valueOf"", String.class);
if (valueOf.getReturnType().isAssignableFrom(type)) {
try {
return valueOf.invoke(null, value);
}
catch (ReflectiveOperationException e) {
return null;
}
}
}
catch (NoSuchMethodException ignored) {
}",0,0,0,0,1,0,0,0,0,7,3,13,0,0,1,1,11,6,3,0,3,0.59,38,22
1820_82,82,82,"Method valueOf = type.getMethod(""valueOf"", String.class);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,6,3,0,3,0.71,39,22
1820_83,83,90,"if (valueOf.getReturnType().isAssignableFrom(type)) {
try {
return valueOf.invoke(null, value);
}
catch (ReflectiveOperationException e) {
return null;
}
}",1,0,0,0,0,0,0,0,0,4,2,8,0,1,0,0,11,6,3,0,1,0.44,40,23
1820_84,84,89,"try {
return valueOf.invoke(null, value);
}
catch (ReflectiveOperationException e) {
return null;
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,11,6,3,0,1,0.42,41,24
1820_85,85,85,"return valueOf.invoke(null, value);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,3,0,1,0.49,42,25
1820_87,87,87,catch (ReflectiveOperationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,3,0,0,0.3,44,27
1820_88,88,88,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,3,0,0,0.25,45,27
1820_92,92,92,catch (NoSuchMethodException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,3,0,1,0.44,49,29
1820_95,95,105,"try {
Constructor<?> constructor = type.getConstructor(String.class);
try {
return constructor.newInstance(value);
}
catch (ReflectiveOperationException e) {
return null;
}
}
catch (NoSuchMethodException ignored) {
}",0,0,0,0,1,0,0,0,0,6,2,11,0,0,1,1,11,6,3,0,3,0.54,52,30
1820_96,96,96,Constructor<?> constructor = type.getConstructor(String.class);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,6,3,0,1,0.52,53,30
1820_97,97,102,"try {
return constructor.newInstance(value);
}
catch (ReflectiveOperationException e) {
return null;
}",0,0,0,0,1,0,0,0,0,3,1,6,0,1,0,0,11,6,3,0,1,0.39,54,31
1820_98,98,98,return constructor.newInstance(value);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,3,0,1,0.43,55,32
1820_100,100,100,catch (ReflectiveOperationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,3,0,0,0.3,57,34
1820_101,101,101,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,3,0,0,0.25,58,34
1820_104,104,104,catch (NoSuchMethodException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,3,0,1,0.44,61,36
1820_107,107,107,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,11,6,3,0,0,0.25,64,37
1821_1,1,1,"    private static Object coerce(Class<?> type, String value)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,3,0.71,79,47
1821_3,3,5,"if (type.isPrimitive() && value == null) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,4,0,0,1,0.53,75,45
1821_4,4,4,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.25,76,45
1821_7,7,41,"try {
if (String.class == type) {
return value;
}
if (Boolean.class == type || boolean.class == type) {
if (""true"".equalsIgnoreCase(value)) {
return Boolean.TRUE;
}
if (""false"".equalsIgnoreCase(value)) {
return Boolean.FALSE;
}
return null;
}
if (Byte.class == type || byte.class == type) {
return Byte.valueOf(value);
}
if (Short.class == type || short.class == type) {
return Short.valueOf(value);
}
if (Integer.class == type || int.class == type) {
return Integer.valueOf(value);
}
if (Long.class == type || long.class == type) {
return Long.valueOf(value);
}
if (Float.class == type || float.class == type) {
return Float.valueOf(value);
}
if (Double.class == type || double.class == type) {
return Double.valueOf(value);
}
}
catch (Exception ignored) {
return null;
}",0,0,0,0,1,0,0,0,0,22,3,35,0,0,1,1,5,4,0,0,2,0.59,39,22
1821_8,8,10,"if (String.class == type) {
return value;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,4,0,0,2,0.64,70,42
1821_9,9,9,return value;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.52,71,42
1821_11,11,19,"if (Boolean.class == type || boolean.class == type) {
if (""true"".equalsIgnoreCase(value)) {
return Boolean.TRUE;
}
if (""false"".equalsIgnoreCase(value)) {
return Boolean.FALSE;
}
return null;
}",1,0,0,0,0,0,0,0,0,5,2,9,0,0,0,0,5,4,0,0,1,0.45,61,36
1821_12,12,14,"if (""true"".equalsIgnoreCase(value)) {
return Boolean.TRUE;
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,5,4,0,0,1,0.43,66,39
1821_13,13,13,return Boolean.TRUE;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.24,67,39
1821_15,15,17,"if (""false"".equalsIgnoreCase(value)) {
return Boolean.FALSE;
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,5,4,0,0,1,0.43,63,37
1821_16,16,16,return Boolean.FALSE;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.24,64,37
1821_18,18,18,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.25,62,36
1821_20,20,22,"if (Byte.class == type || byte.class == type) {
return Byte.valueOf(value);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,4,0,0,1,0.53,58,34
1821_21,21,21,return Byte.valueOf(value);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.56,59,34
1821_23,23,25,"if (Short.class == type || short.class == type) {
return Short.valueOf(value);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,4,0,0,1,0.5,55,32
1821_24,24,24,return Short.valueOf(value);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.53,56,32
1821_26,26,28,"if (Integer.class == type || int.class == type) {
return Integer.valueOf(value);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,4,0,0,1,0.57,52,30
1821_27,27,27,return Integer.valueOf(value);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.62,53,30
1821_29,29,31,"if (Long.class == type || long.class == type) {
return Long.valueOf(value);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,4,0,0,1,0.52,49,28
1821_30,30,30,return Long.valueOf(value);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.55,50,28
1821_32,32,34,"if (Float.class == type || float.class == type) {
return Float.valueOf(value);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,4,0,0,1,0.49,46,26
1821_33,33,33,return Float.valueOf(value);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.52,47,26
1821_35,35,37,"if (Double.class == type || double.class == type) {
return Double.valueOf(value);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,4,0,0,1,0.49,43,24
1821_36,36,36,return Double.valueOf(value);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.52,44,24
1821_39,39,39,catch (Exception ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.31,41,23
1821_40,40,40,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.25,40,22
1821_43,43,55,"try {
Method fromString = type.getMethod(""fromString"", String.class);
if (fromString.getReturnType().isAssignableFrom(type)) {
try {
return fromString.invoke(null, value);
}
catch (ReflectiveOperationException e) {
return null;
}
}
}
catch (NoSuchMethodException ignored) {
}",0,0,0,0,1,0,0,0,0,7,3,13,0,0,1,1,5,4,0,0,3,0.65,25,14
1821_44,44,44,"Method fromString = type.getMethod(""fromString"", String.class);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,2,0.7,36,20
1821_45,45,52,"if (fromString.getReturnType().isAssignableFrom(type)) {
try {
return fromString.invoke(null, value);
}
catch (ReflectiveOperationException e) {
return null;
}
}",1,0,0,0,0,0,0,0,0,4,2,8,0,1,0,0,5,4,0,0,2,0.55,28,15
1821_46,46,51,"try {
return fromString.invoke(null, value);
}
catch (ReflectiveOperationException e) {
return null;
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,5,4,0,0,2,0.55,29,15
1821_47,47,47,"return fromString.invoke(null, value);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.63,33,17
1821_49,49,49,catch (ReflectiveOperationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.33,31,16
1821_50,50,50,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.25,30,15
1821_54,54,54,catch (NoSuchMethodException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.48,26,14
1821_57,57,74,"if (type.isEnum()) {
try {
return Enum.valueOf(type.asSubclass(Enum.class), value);
}
catch (IllegalArgumentException ignored) {
}
Object match = null;
for (Enum<?> option : type.asSubclass(Enum.class).getEnumConstants()) {
String enumValue = value.replace(""-"", ""_"");
if (option.name().equalsIgnoreCase(enumValue)) {
if (match != null) {
return null;
}
match = option;
}
}
return match;
}",1,0,0,0,0,0,0,0,0,11,4,18,0,0,1,1,5,4,0,0,2,0.56,6,2
1821_58,58,62,"try {
return Enum.valueOf(type.asSubclass(Enum.class), value);
}
catch (IllegalArgumentException ignored) {
}",0,0,0,0,1,0,0,0,0,2,1,5,0,0,0,0,5,4,0,0,1,0.5,18,10
1821_59,59,59,"return Enum.valueOf(type.asSubclass(Enum.class), value);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.51,21,11
1821_61,61,61,catch (IllegalArgumentException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.41,19,10
1821_63,63,63,Object match = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.3,17,9
1821_64,64,72,"for (Enum<?> option : type.asSubclass(Enum.class).getEnumConstants()) {
String enumValue = value.replace(""-"", ""_"");
if (option.name().equalsIgnoreCase(enumValue)) {
if (match != null) {
return null;
}
match = option;
}
}",0,0,0,1,0,0,0,0,0,5,3,9,0,1,0,0,5,4,0,0,2,0.57,8,3
1821_65,65,65,"String enumValue = value.replace(""-"", ""_"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,2,0.67,15,7
1821_66,66,71,"if (option.name().equalsIgnoreCase(enumValue)) {
if (match != null) {
return null;
}
match = option;
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,0,5,4,0,0,1,0.48,9,3
1821_67,67,69,"if (match != null) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,4,0,0,0,0.28,11,4
1821_68,68,68,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.25,12,4
1821_70,70,70,match = option;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.35,10,3
1821_73,73,73,return match;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.28,7,2
1821_76,76,79,"if (LIST_OF_STRINGS_TYPE_TOKEN.isSubtypeOf(TypeToken.of(type))) {
return VALUE_SPLITTER.splitToStream(value)
.collect(toImmutableList());
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,1,1,5,4,0,0,2,0.59,1,0
1821_77,77,78,"return VALUE_SPLITTER.splitToStream(value)
.collect(toImmutableList());",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,5,4,0,0,1,0.57,2,0
1821_81,81,93,"try {
Method valueOf = type.getMethod(""valueOf"", String.class);
if (valueOf.getReturnType().isAssignableFrom(type)) {
try {
return valueOf.invoke(null, value);
}
catch (ReflectiveOperationException e) {
return null;
}
}
}
catch (NoSuchMethodException ignored) {
}",0,0,0,0,1,0,0,0,0,7,3,13,0,0,1,1,5,4,0,0,3,0.65,0,0
1821_82,82,82,"Method valueOf = type.getMethod(""valueOf"", String.class);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,3,0.77,1,0
1821_83,83,90,"if (valueOf.getReturnType().isAssignableFrom(type)) {
try {
return valueOf.invoke(null, value);
}
catch (ReflectiveOperationException e) {
return null;
}
}",1,0,0,0,0,0,0,0,0,4,2,8,0,1,0,0,5,4,0,0,1,0.49,2,1
1821_84,84,89,"try {
return valueOf.invoke(null, value);
}
catch (ReflectiveOperationException e) {
return null;
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,5,4,0,0,1,0.47,3,2
1821_85,85,85,"return valueOf.invoke(null, value);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.54,4,3
1821_87,87,87,catch (ReflectiveOperationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.33,6,5
1821_88,88,88,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.25,7,5
1821_92,92,92,catch (NoSuchMethodException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.48,11,7
1821_95,95,105,"try {
Constructor<?> constructor = type.getConstructor(String.class);
try {
return constructor.newInstance(value);
}
catch (ReflectiveOperationException e) {
return null;
}
}
catch (NoSuchMethodException ignored) {
}",0,0,0,0,1,0,0,0,0,6,2,11,0,0,1,1,5,4,0,0,3,0.6,14,8
1821_96,96,96,Constructor<?> constructor = type.getConstructor(String.class);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.53,15,8
1821_97,97,102,"try {
return constructor.newInstance(value);
}
catch (ReflectiveOperationException e) {
return null;
}",0,0,0,0,1,0,0,0,0,3,1,6,0,1,0,0,5,4,0,0,1,0.45,16,9
1821_98,98,98,return constructor.newInstance(value);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.47,17,10
1821_100,100,100,catch (ReflectiveOperationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.33,19,12
1821_101,101,101,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.25,20,12
1821_104,104,104,catch (NoSuchMethodException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.48,23,14
1821_107,107,107,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,4,0,0,0,0.25,26,15
1822_1,1,1,"    private static Object coerce(Class<?> type, String value)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.53,93,55
1822_3,3,5,"if (type.isPrimitive() && value == null) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,3,1,0,0,0.42,89,53
1822_4,4,4,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.26,90,53
1822_7,7,41,"try {
if (String.class == type) {
return value;
}
if (Boolean.class == type || boolean.class == type) {
if (""true"".equalsIgnoreCase(value)) {
return Boolean.TRUE;
}
if (""false"".equalsIgnoreCase(value)) {
return Boolean.FALSE;
}
return null;
}
if (Byte.class == type || byte.class == type) {
return Byte.valueOf(value);
}
if (Short.class == type || short.class == type) {
return Short.valueOf(value);
}
if (Integer.class == type || int.class == type) {
return Integer.valueOf(value);
}
if (Long.class == type || long.class == type) {
return Long.valueOf(value);
}
if (Float.class == type || float.class == type) {
return Float.valueOf(value);
}
if (Double.class == type || double.class == type) {
return Double.valueOf(value);
}
}
catch (Exception ignored) {
return null;
}",0,0,0,0,1,0,0,0,0,22,3,35,0,0,1,1,4,3,1,0,1,0.52,53,30
1822_8,8,10,"if (String.class == type) {
return value;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,1,0,1,0.56,84,50
1822_9,9,9,return value;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.3,85,50
1822_11,11,19,"if (Boolean.class == type || boolean.class == type) {
if (""true"".equalsIgnoreCase(value)) {
return Boolean.TRUE;
}
if (""false"".equalsIgnoreCase(value)) {
return Boolean.FALSE;
}
return null;
}",1,0,0,0,0,0,0,0,0,5,2,9,0,0,0,0,4,3,1,0,0,0.36,75,44
1822_12,12,14,"if (""true"".equalsIgnoreCase(value)) {
return Boolean.TRUE;
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,4,3,1,0,0,0.32,80,47
1822_13,13,13,return Boolean.TRUE;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.23,81,47
1822_15,15,17,"if (""false"".equalsIgnoreCase(value)) {
return Boolean.FALSE;
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,4,3,1,0,0,0.32,77,45
1822_16,16,16,return Boolean.FALSE;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.23,78,45
1822_18,18,18,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.26,76,44
1822_20,20,22,"if (Byte.class == type || byte.class == type) {
return Byte.valueOf(value);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,3,1,0,0,0.41,72,42
1822_21,21,21,return Byte.valueOf(value);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.34,73,42
1822_23,23,25,"if (Short.class == type || short.class == type) {
return Short.valueOf(value);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,3,1,0,0,0.41,69,40
1822_24,24,24,return Short.valueOf(value);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.34,70,40
1822_26,26,28,"if (Integer.class == type || int.class == type) {
return Integer.valueOf(value);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,3,1,0,0,0.43,66,38
1822_27,27,27,return Integer.valueOf(value);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.37,67,38
1822_29,29,31,"if (Long.class == type || long.class == type) {
return Long.valueOf(value);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,3,1,0,0,0.47,63,36
1822_30,30,30,return Long.valueOf(value);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.39,64,36
1822_32,32,34,"if (Float.class == type || float.class == type) {
return Float.valueOf(value);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,3,1,0,0,0.4,60,34
1822_33,33,33,return Float.valueOf(value);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.32,61,34
1822_35,35,37,"if (Double.class == type || double.class == type) {
return Double.valueOf(value);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,3,1,0,0,0.39,57,32
1822_36,36,36,return Double.valueOf(value);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.31,58,32
1822_39,39,39,catch (Exception ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.28,55,31
1822_40,40,40,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.26,54,30
1822_43,43,55,"try {
Method fromString = type.getMethod(""fromString"", String.class);
if (fromString.getReturnType().isAssignableFrom(type)) {
try {
return fromString.invoke(null, value);
}
catch (ReflectiveOperationException e) {
return null;
}
}
}
catch (NoSuchMethodException ignored) {
}",0,0,0,0,1,0,0,0,0,7,3,13,0,0,1,1,4,3,1,0,1,0.53,39,22
1822_44,44,44,"Method fromString = type.getMethod(""fromString"", String.class);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.62,50,28
1822_45,45,52,"if (fromString.getReturnType().isAssignableFrom(type)) {
try {
return fromString.invoke(null, value);
}
catch (ReflectiveOperationException e) {
return null;
}
}",1,0,0,0,0,0,0,0,0,4,2,8,0,1,0,0,4,3,1,0,1,0.5,42,23
1822_46,46,51,"try {
return fromString.invoke(null, value);
}
catch (ReflectiveOperationException e) {
return null;
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,4,3,1,0,1,0.45,43,23
1822_47,47,47,"return fromString.invoke(null, value);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.49,47,25
1822_49,49,49,catch (ReflectiveOperationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.32,45,24
1822_50,50,50,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.26,44,23
1822_54,54,54,catch (NoSuchMethodException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.34,40,22
1822_57,57,74,"if (type.isEnum()) {
try {
return Enum.valueOf(type.asSubclass(Enum.class), value);
}
catch (IllegalArgumentException ignored) {
}
Object match = null;
for (Enum<?> option : type.asSubclass(Enum.class).getEnumConstants()) {
String enumValue = value.replace(""-"", ""_"");
if (option.name().equalsIgnoreCase(enumValue)) {
if (match != null) {
return null;
}
match = option;
}
}
return match;
}",1,0,0,0,0,0,0,0,0,11,4,18,0,0,1,1,4,3,1,0,1,0.49,20,10
1822_58,58,62,"try {
return Enum.valueOf(type.asSubclass(Enum.class), value);
}
catch (IllegalArgumentException ignored) {
}",0,0,0,0,1,0,0,0,0,2,1,5,0,0,0,0,4,3,1,0,0,0.4,32,18
1822_59,59,59,"return Enum.valueOf(type.asSubclass(Enum.class), value);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.37,35,19
1822_61,61,61,catch (IllegalArgumentException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.4,33,18
1822_63,63,63,Object match = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.3,31,17
1822_64,64,72,"for (Enum<?> option : type.asSubclass(Enum.class).getEnumConstants()) {
String enumValue = value.replace(""-"", ""_"");
if (option.name().equalsIgnoreCase(enumValue)) {
if (match != null) {
return null;
}
match = option;
}
}",0,0,0,1,0,0,0,0,0,5,3,9,0,1,0,0,4,3,1,0,1,0.49,22,11
1822_65,65,65,"String enumValue = value.replace(""-"", ""_"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.51,29,15
1822_66,66,71,"if (option.name().equalsIgnoreCase(enumValue)) {
if (match != null) {
return null;
}
match = option;
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,0,4,3,1,0,0,0.38,23,11
1822_67,67,69,"if (match != null) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,1,0,0,0.29,25,12
1822_68,68,68,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.26,26,12
1822_70,70,70,match = option;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.37,24,11
1822_73,73,73,return match;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.3,21,10
1822_76,76,79,"if (LIST_OF_STRINGS_TYPE_TOKEN.isSubtypeOf(TypeToken.of(type))) {
return VALUE_SPLITTER.splitToStream(value)
.collect(toImmutableList());
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,1,1,4,3,1,0,1,0.51,15,8
1822_77,77,78,"return VALUE_SPLITTER.splitToStream(value)
.collect(toImmutableList());",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,4,3,1,0,0,0.39,16,8
1822_81,81,93,"try {
Method valueOf = type.getMethod(""valueOf"", String.class);
if (valueOf.getReturnType().isAssignableFrom(type)) {
try {
return valueOf.invoke(null, value);
}
catch (ReflectiveOperationException e) {
return null;
}
}
}
catch (NoSuchMethodException ignored) {
}",0,0,0,0,1,0,0,0,0,7,3,13,0,0,1,1,4,3,1,0,1,0.49,1,0
1822_82,82,82,"Method valueOf = type.getMethod(""valueOf"", String.class);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.55,12,6
1822_83,83,90,"if (valueOf.getReturnType().isAssignableFrom(type)) {
try {
return valueOf.invoke(null, value);
}
catch (ReflectiveOperationException e) {
return null;
}
}",1,0,0,0,0,0,0,0,0,4,2,8,0,1,0,0,4,3,1,0,0,0.38,4,1
1822_84,84,89,"try {
return valueOf.invoke(null, value);
}
catch (ReflectiveOperationException e) {
return null;
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,4,3,1,0,0,0.33,5,1
1822_85,85,85,"return valueOf.invoke(null, value);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.32,9,3
1822_87,87,87,catch (ReflectiveOperationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.32,7,2
1822_88,88,88,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.26,6,1
1822_92,92,92,catch (NoSuchMethodException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.34,2,0
1822_95,95,105,"try {
Constructor<?> constructor = type.getConstructor(String.class);
try {
return constructor.newInstance(value);
}
catch (ReflectiveOperationException e) {
return null;
}
}
catch (NoSuchMethodException ignored) {
}",0,0,0,0,1,0,0,0,0,6,2,11,0,0,1,1,4,3,1,0,2,0.58,0,0
1822_96,96,96,Constructor<?> constructor = type.getConstructor(String.class);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,2,0.72,1,0
1822_97,97,102,"try {
return constructor.newInstance(value);
}
catch (ReflectiveOperationException e) {
return null;
}",0,0,0,0,1,0,0,0,0,3,1,6,0,1,0,0,4,3,1,0,1,0.42,2,1
1822_98,98,98,return constructor.newInstance(value);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.43,3,2
1822_100,100,100,catch (ReflectiveOperationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.32,5,4
1822_101,101,101,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.26,6,4
1822_104,104,104,catch (NoSuchMethodException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.34,9,6
1822_107,107,107,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,1,0,0,0.26,12,7
2968_1,1,1,"    private Map<String, AttributeMetadata> buildAttributeMetadata(Class<T> configClass)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,1,0.49,13,7
2968_3,3,3,"Map<String, AttributeMetadata> attributes = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,6,1,0,0,0.37,11,6
2968_4,4,13,"for (Method configMethod : findConfigMethods(configClass)) {
AttributeMetadata attribute = buildAttributeMetadata(configClass, configMethod);

if (attribute != null) {
if (attributes.containsKey(attribute.getName())) {
problems.addError(""Configuration class [%s] Multiple methods are annotated for @Config attribute [%s]"", configClass.getName(), attribute.getName());
}
attributes.put(attribute.getName(), attribute);
}
}",0,0,0,1,0,0,0,0,0,5,3,10,0,1,0,1,8,6,1,0,4,0.67,1,0
2968_5,5,5,"AttributeMetadata attribute = buildAttributeMetadata(configClass, configMethod);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,6,1,0,2,0.59,9,4
2968_7,7,12,"if (attribute != null) {
if (attributes.containsKey(attribute.getName())) {
problems.addError(""Configuration class [%s] Multiple methods are annotated for @Config attribute [%s]"", configClass.getName(), attribute.getName());
}
attributes.put(attribute.getName(), attribute);
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,1,0,8,6,1,0,3,0.58,2,0
2968_8,8,10,"if (attributes.containsKey(attribute.getName())) {
problems.addError(""Configuration class [%s] Multiple methods are annotated for @Config attribute [%s]"", configClass.getName(), attribute.getName());
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,8,6,1,0,3,0.59,4,1
2968_9,9,9,"problems.addError(""Configuration class [%s] Multiple methods are annotated for @Config attribute [%s]"", configClass.getName(), attribute.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,3,0.62,5,1
2968_11,11,11,"attributes.put(attribute.getName(), attribute);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,6,1,0,0,0.39,3,0
2968_15,15,15,Collection<Method> legacyMethods = findLegacyConfigMethods(configClass);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,6,1,0,4,0.79,0,0
2968_16,16,22,"for (AttributeMetadata attribute : attributes.values()) {
for (InjectionPointMetaData injectionPoint : attribute.getLegacyInjectionPoints()) {
if (legacyMethods.contains(injectionPoint.getSetter())) {
legacyMethods.remove(injectionPoint.getSetter());
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,1,0,0,8,6,1,0,2,0.56,1,0
2968_17,17,21,"for (InjectionPointMetaData injectionPoint : attribute.getLegacyInjectionPoints()) {
if (legacyMethods.contains(injectionPoint.getSetter())) {
legacyMethods.remove(injectionPoint.getSetter());
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,8,6,1,0,2,0.57,2,1
2968_18,18,20,"if (legacyMethods.contains(injectionPoint.getSetter())) {
legacyMethods.remove(injectionPoint.getSetter());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,6,1,0,2,0.6,3,2
2968_19,19,19,legacyMethods.remove(injectionPoint.getSetter());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,2,0.61,4,3
2968_23,23,28,"for (Method method : legacyMethods) {
if (!method.isAnnotationPresent(Config.class)) {
validateSetter(method);
problems.addError(""@LegacyConfig method [%s] is not associated with any valid @Config attribute."", method.toGenericString());
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,1,8,6,1,0,4,0.75,8,5
2968_24,24,27,"if (!method.isAnnotationPresent(Config.class)) {
validateSetter(method);
problems.addError(""@LegacyConfig method [%s] is not associated with any valid @Config attribute."", method.toGenericString());
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,8,6,1,0,4,0.72,9,5
2968_25,25,25,validateSetter(method);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,1,0,1,0.55,10,6
2968_26,26,26,"problems.addError(""@LegacyConfig method [%s] is not associated with any valid @Config attribute."", method.toGenericString());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,1,0,4,0.72,11,7
2968_30,30,30,Collection<Method> sensitiveMethods = findSensitiveConfigMethods(configClass);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,6,1,0,3,0.71,15,9
2968_31,31,35,"for (Method method : sensitiveMethods) {
if (!method.isAnnotationPresent(Config.class)) {
problems.addError(""@ConfigSecuritySensitive method [%s] is not annotated with @Config."", method.toGenericString());
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,1,0,1,8,6,1,0,3,0.69,16,9
2968_32,32,34,"if (!method.isAnnotationPresent(Config.class)) {
problems.addError(""@ConfigSecuritySensitive method [%s] is not annotated with @Config."", method.toGenericString());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,6,1,0,3,0.67,17,10
2968_33,33,33,"problems.addError(""@ConfigSecuritySensitive method [%s] is not annotated with @Config."", method.toGenericString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,3,0.66,18,11
2968_37,37,37,Collection<Method> hiddenMethods = findHiddenConfigMethods(configClass);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,6,1,0,3,0.7,22,13
2968_38,38,42,"for (Method method : hiddenMethods) {
if (!method.isAnnotationPresent(Config.class)) {
problems.addError(""@ConfigHidden method [%s] is not annotated with @Config."", method.toGenericString());
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,1,0,1,8,6,1,0,3,0.69,23,13
2968_39,39,41,"if (!method.isAnnotationPresent(Config.class)) {
problems.addError(""@ConfigHidden method [%s] is not annotated with @Config."", method.toGenericString());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,6,1,0,3,0.67,24,14
2968_40,40,40,"problems.addError(""@ConfigHidden method [%s] is not annotated with @Config."", method.toGenericString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,3,0.67,25,15
2968_44,44,44,return attributes;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,8,6,1,0,0,0.37,29,17
2969_1,1,1,"    private Map<String, AttributeMetadata> buildAttributeMetadata(Class<T> configClass)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,1,0.5,28,16
2969_3,3,3,"Map<String, AttributeMetadata> attributes = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,7,1,0,0,0.37,26,15
2969_4,4,13,"for (Method configMethod : findConfigMethods(configClass)) {
AttributeMetadata attribute = buildAttributeMetadata(configClass, configMethod);

if (attribute != null) {
if (attributes.containsKey(attribute.getName())) {
problems.addError(""Configuration class [%s] Multiple methods are annotated for @Config attribute [%s]"", configClass.getName(), attribute.getName());
}
attributes.put(attribute.getName(), attribute);
}
}",0,0,0,1,0,0,0,0,0,5,3,10,0,1,0,1,9,7,1,0,4,0.68,16,9
2969_5,5,5,"AttributeMetadata attribute = buildAttributeMetadata(configClass, configMethod);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,7,1,0,2,0.58,24,13
2969_7,7,12,"if (attribute != null) {
if (attributes.containsKey(attribute.getName())) {
problems.addError(""Configuration class [%s] Multiple methods are annotated for @Config attribute [%s]"", configClass.getName(), attribute.getName());
}
attributes.put(attribute.getName(), attribute);
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,1,0,9,7,1,0,3,0.61,17,9
2969_8,8,10,"if (attributes.containsKey(attribute.getName())) {
problems.addError(""Configuration class [%s] Multiple methods are annotated for @Config attribute [%s]"", configClass.getName(), attribute.getName());
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,9,7,1,0,3,0.62,19,10
2969_9,9,9,"problems.addError(""Configuration class [%s] Multiple methods are annotated for @Config attribute [%s]"", configClass.getName(), attribute.getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,3,0.64,20,10
2969_11,11,11,"attributes.put(attribute.getName(), attribute);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,9,7,1,0,0,0.4,18,9
2969_15,15,15,Collection<Method> legacyMethods = findLegacyConfigMethods(configClass);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,7,1,0,3,0.69,14,8
2969_16,16,22,"for (AttributeMetadata attribute : attributes.values()) {
for (InjectionPointMetaData injectionPoint : attribute.getLegacyInjectionPoints()) {
if (legacyMethods.contains(injectionPoint.getSetter())) {
legacyMethods.remove(injectionPoint.getSetter());
}
}
}",0,0,0,1,0,0,0,0,0,3,3,7,0,1,0,0,9,7,1,0,1,0.51,7,4
2969_17,17,21,"for (InjectionPointMetaData injectionPoint : attribute.getLegacyInjectionPoints()) {
if (legacyMethods.contains(injectionPoint.getSetter())) {
legacyMethods.remove(injectionPoint.getSetter());
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,0,0,9,7,1,0,1,0.51,8,4
2969_18,18,20,"if (legacyMethods.contains(injectionPoint.getSetter())) {
legacyMethods.remove(injectionPoint.getSetter());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,9,7,1,0,1,0.54,9,4
2969_19,19,19,legacyMethods.remove(injectionPoint.getSetter());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,1,0.54,10,4
2969_23,23,28,"for (Method method : legacyMethods) {
if (!method.isAnnotationPresent(Config.class)) {
validateSetter(method);
problems.addError(""@LegacyConfig method [%s] is not associated with any valid @Config attribute."", method.toGenericString());
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,1,9,7,1,0,3,0.7,1,0
2969_24,24,27,"if (!method.isAnnotationPresent(Config.class)) {
validateSetter(method);
problems.addError(""@LegacyConfig method [%s] is not associated with any valid @Config attribute."", method.toGenericString());
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,9,7,1,0,3,0.69,2,0
2969_25,25,25,validateSetter(method);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,7,1,0,1,0.56,4,1
2969_26,26,26,"problems.addError(""@LegacyConfig method [%s] is not associated with any valid @Config attribute."", method.toGenericString());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,7,1,0,3,0.68,3,0
2969_30,30,30,Collection<Method> sensitiveMethods = findSensitiveConfigMethods(configClass);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,7,1,0,4,0.77,0,0
2969_31,31,35,"for (Method method : sensitiveMethods) {
if (!method.isAnnotationPresent(Config.class)) {
problems.addError(""@ConfigSecuritySensitive method [%s] is not annotated with @Config."", method.toGenericString());
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,1,0,1,9,7,1,0,5,0.78,1,0
2969_32,32,34,"if (!method.isAnnotationPresent(Config.class)) {
problems.addError(""@ConfigSecuritySensitive method [%s] is not annotated with @Config."", method.toGenericString());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,9,7,1,0,5,0.75,2,1
2969_33,33,33,"problems.addError(""@ConfigSecuritySensitive method [%s] is not annotated with @Config."", method.toGenericString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,5,0.76,3,2
2969_37,37,37,Collection<Method> hiddenMethods = findHiddenConfigMethods(configClass);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,7,1,0,3,0.68,7,4
2969_38,38,42,"for (Method method : hiddenMethods) {
if (!method.isAnnotationPresent(Config.class)) {
problems.addError(""@ConfigHidden method [%s] is not annotated with @Config."", method.toGenericString());
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,1,0,1,9,7,1,0,3,0.7,8,4
2969_39,39,41,"if (!method.isAnnotationPresent(Config.class)) {
problems.addError(""@ConfigHidden method [%s] is not annotated with @Config."", method.toGenericString());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,9,7,1,0,3,0.68,9,5
2969_40,40,40,"problems.addError(""@ConfigHidden method [%s] is not annotated with @Config."", method.toGenericString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,3,0.68,10,6
2969_44,44,44,return attributes;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,9,7,1,0,0,0.36,14,8
2970_1,1,1,"private AttributeMetadata buildAttributeMetadata(Class<T> configClass, Method configMethod)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.43,11,6
2970_3,3,3,checkArgument(configMethod.isAnnotationPresent(Config.class));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.48,9,5
2970_5,5,7,"if (!validateAnnotations(configMethod)) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,0,0.45,5,3
2970_6,6,6,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.31,6,3
2970_9,9,9,String propertyName = configMethod.getAnnotation(Config.class).value();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.41,3,2
2970_10,10,10,final boolean securitySensitive = configMethod.isAnnotationPresent(ConfigSecuritySensitive.class);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0.45,2,1
2970_11,11,11,final boolean hidden = configMethod.isAnnotationPresent(ConfigHidden.class);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,2,2,0,0,0,0.43,1,0
2970_13,13,15,"if (!validateSetter(configMethod)) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,0,0.45,0,0
2970_14,14,14,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.31,1,0
2970_17,17,17,String attributeName = configMethod.getName().substring(3);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.38,4,2
2970_19,19,19,"AttributeMetaDataBuilder builder = new AttributeMetaDataBuilder(configClass, attributeName, securitySensitive, hidden);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.39,6,3
2970_21,21,23,"if (configMethod.isAnnotationPresent(ConfigDescription.class)) {
builder.setDescription(configMethod.getAnnotation(ConfigDescription.class).value());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,0,0.4,8,4
2970_22,22,22,builder.setDescription(configMethod.getAnnotation(ConfigDescription.class).value());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.39,9,4
2970_25,25,25,"Method getter = findGetter(configClass, configMethod, attributeName);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.37,12,6
2970_26,26,32,"if (getter != null) {
builder.setGetter(getter);

if (configMethod.isAnnotationPresent(Deprecated.class) != getter.isAnnotationPresent(Deprecated.class)) {
problems.addError(""Methods [%s] and [%s] must be @Deprecated together"", configMethod, getter);
}
}",1,0,0,0,0,0,0,0,0,3,2,7,0,1,0,1,2,2,0,0,0,0.41,13,6
2970_27,27,27,builder.setGetter(getter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.17,14,7
2970_29,29,31,"if (configMethod.isAnnotationPresent(Deprecated.class) != getter.isAnnotationPresent(Deprecated.class)) {
problems.addError(""Methods [%s] and [%s] must be @Deprecated together"", configMethod, getter);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,2,2,0,0,0,0.43,16,9
2970_30,30,30,"problems.addError(""Methods [%s] and [%s] must be @Deprecated together"", configMethod, getter);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.42,17,9
2970_34,34,36,"if (defunctConfig.contains(propertyName)) {
problems.addError(""@Config property '%s' on method [%s] is defunct on class [%s]"", propertyName, configMethod, configClass);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,0,0.42,21,11
2970_35,35,35,"problems.addError(""@Config property '%s' on method [%s] is defunct on class [%s]"", propertyName, configMethod, configClass);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.43,22,11
2970_38,38,38,"builder.addInjectionPoint(InjectionPointMetaData.newCurrent(configClass, propertyName, configMethod));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.38,25,13
2970_40,40,46,"for (InjectionPointMetaData injectionPoint : findLegacySetters(configClass, propertyName, attributeName)) {
if (!injectionPoint.getSetter().isAnnotationPresent(Config.class) && !injectionPoint.getSetter().isAnnotationPresent(Deprecated.class)) {
problems.addWarning(""Replaced @LegacyConfig method [%s] should be @Deprecated"", injectionPoint.getSetter().toGenericString());
}

builder.addInjectionPoint(injectionPoint);
}",0,0,0,1,0,0,0,0,0,3,2,7,0,0,1,1,2,2,0,0,0,0.43,27,14
2970_41,41,43,"if (!injectionPoint.getSetter().isAnnotationPresent(Config.class) && !injectionPoint.getSetter().isAnnotationPresent(Deprecated.class)) {
problems.addWarning(""Replaced @LegacyConfig method [%s] should be @Deprecated"", injectionPoint.getSetter().toGenericString());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,2,2,0,0,0,0.44,28,14
2970_42,42,42,"problems.addWarning(""Replaced @LegacyConfig method [%s] should be @Deprecated"", injectionPoint.getSetter().toGenericString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.42,29,15
2970_45,45,45,builder.addInjectionPoint(injectionPoint);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.37,32,17
2970_48,48,48,return builder.build();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.18,35,18
2971_1,1,1,"private AttributeMetadata buildAttributeMetadata(Class<T> configClass, Method configMethod)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.54,15,8
2971_3,3,3,checkArgument(configMethod.isAnnotationPresent(Config.class));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.39,13,7
2971_5,5,7,"if (!validateAnnotations(configMethod)) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,0,0.36,9,5
2971_6,6,6,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.24,10,5
2971_9,9,9,String propertyName = configMethod.getAnnotation(Config.class).value();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.55,7,4
2971_10,10,10,final boolean securitySensitive = configMethod.isAnnotationPresent(ConfigSecuritySensitive.class);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.38,6,3
2971_11,11,11,final boolean hidden = configMethod.isAnnotationPresent(ConfigHidden.class);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,3,3,0,0,0,0.38,5,2
2971_13,13,15,"if (!validateSetter(configMethod)) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,0,0.43,1,0
2971_14,14,14,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.24,2,0
2971_17,17,17,String attributeName = configMethod.getName().substring(3);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,2,0.71,0,0
2971_19,19,19,"AttributeMetaDataBuilder builder = new AttributeMetaDataBuilder(configClass, attributeName, securitySensitive, hidden);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,2,0.61,2,1
2971_21,21,23,"if (configMethod.isAnnotationPresent(ConfigDescription.class)) {
builder.setDescription(configMethod.getAnnotation(ConfigDescription.class).value());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,0,0.42,4,2
2971_22,22,22,builder.setDescription(configMethod.getAnnotation(ConfigDescription.class).value());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.42,5,2
2971_25,25,25,"Method getter = findGetter(configClass, configMethod, attributeName);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,2,0.59,8,4
2971_26,26,32,"if (getter != null) {
builder.setGetter(getter);

if (configMethod.isAnnotationPresent(Deprecated.class) != getter.isAnnotationPresent(Deprecated.class)) {
problems.addError(""Methods [%s] and [%s] must be @Deprecated together"", configMethod, getter);
}
}",1,0,0,0,0,0,0,0,0,3,2,7,0,1,0,1,3,3,0,0,0,0.36,9,4
2971_27,27,27,builder.setGetter(getter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.21,10,5
2971_29,29,31,"if (configMethod.isAnnotationPresent(Deprecated.class) != getter.isAnnotationPresent(Deprecated.class)) {
problems.addError(""Methods [%s] and [%s] must be @Deprecated together"", configMethod, getter);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,3,0,0,0,0.39,12,7
2971_30,30,30,"problems.addError(""Methods [%s] and [%s] must be @Deprecated together"", configMethod, getter);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.37,13,7
2971_34,34,36,"if (defunctConfig.contains(propertyName)) {
problems.addError(""@Config property '%s' on method [%s] is defunct on class [%s]"", propertyName, configMethod, configClass);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,1,0.53,17,9
2971_35,35,35,"problems.addError(""@Config property '%s' on method [%s] is defunct on class [%s]"", propertyName, configMethod, configClass);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.52,18,9
2971_38,38,38,"builder.addInjectionPoint(InjectionPointMetaData.newCurrent(configClass, propertyName, configMethod));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.48,21,11
2971_40,40,46,"for (InjectionPointMetaData injectionPoint : findLegacySetters(configClass, propertyName, attributeName)) {
if (!injectionPoint.getSetter().isAnnotationPresent(Config.class) && !injectionPoint.getSetter().isAnnotationPresent(Deprecated.class)) {
problems.addWarning(""Replaced @LegacyConfig method [%s] should be @Deprecated"", injectionPoint.getSetter().toGenericString());
}

builder.addInjectionPoint(injectionPoint);
}",0,0,0,1,0,0,0,0,0,3,2,7,0,0,1,1,3,3,0,0,2,0.59,23,12
2971_41,41,43,"if (!injectionPoint.getSetter().isAnnotationPresent(Config.class) && !injectionPoint.getSetter().isAnnotationPresent(Deprecated.class)) {
problems.addWarning(""Replaced @LegacyConfig method [%s] should be @Deprecated"", injectionPoint.getSetter().toGenericString());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,3,0,0,0,0.43,24,12
2971_42,42,42,"problems.addWarning(""Replaced @LegacyConfig method [%s] should be @Deprecated"", injectionPoint.getSetter().toGenericString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.43,25,13
2971_45,45,45,builder.addInjectionPoint(injectionPoint);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.27,28,15
2971_48,48,48,return builder.build();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.28,31,16
2972_1,1,1,"private AttributeMetadata buildAttributeMetadata(Class<T> configClass, Method configMethod)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.28,23,12
2972_3,3,3,checkArgument(configMethod.isAnnotationPresent(Config.class));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,1,0,0,0.23,21,11
2972_5,5,7,"if (!validateAnnotations(configMethod)) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,1,1,0,0,0.27,17,9
2972_6,6,6,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.22,18,9
2972_9,9,9,String propertyName = configMethod.getAnnotation(Config.class).value();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,2,1,1,0,0,0.27,15,8
2972_10,10,10,final boolean securitySensitive = configMethod.isAnnotationPresent(ConfigSecuritySensitive.class);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,2,1,1,0,0,0.24,14,7
2972_11,11,11,final boolean hidden = configMethod.isAnnotationPresent(ConfigHidden.class);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,2,1,1,0,0,0.23,13,6
2972_13,13,15,"if (!validateSetter(configMethod)) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,1,1,0,0,0.28,9,4
2972_14,14,14,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.22,10,4
2972_17,17,17,String attributeName = configMethod.getName().substring(3);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,1,1,0,0,0.23,7,3
2972_19,19,19,"AttributeMetaDataBuilder builder = new AttributeMetaDataBuilder(configClass, attributeName, securitySensitive, hidden);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,1,1,0,0,0.21,5,2
2972_21,21,23,"if (configMethod.isAnnotationPresent(ConfigDescription.class)) {
builder.setDescription(configMethod.getAnnotation(ConfigDescription.class).value());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,1,1,0,0,0.23,1,0
2972_22,22,22,builder.setDescription(configMethod.getAnnotation(ConfigDescription.class).value());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.23,2,0
2972_25,25,25,"Method getter = findGetter(configClass, configMethod, attributeName);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,1,1,0,2,0.74,0,0
2972_26,26,32,"if (getter != null) {
builder.setGetter(getter);

if (configMethod.isAnnotationPresent(Deprecated.class) != getter.isAnnotationPresent(Deprecated.class)) {
problems.addError(""Methods [%s] and [%s] must be @Deprecated together"", configMethod, getter);
}
}",1,0,0,0,0,0,0,0,0,3,2,7,0,1,0,1,2,1,1,0,1,0.55,1,0
2972_27,27,27,builder.setGetter(getter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,1,0,1,0.56,2,1
2972_29,29,31,"if (configMethod.isAnnotationPresent(Deprecated.class) != getter.isAnnotationPresent(Deprecated.class)) {
problems.addError(""Methods [%s] and [%s] must be @Deprecated together"", configMethod, getter);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,2,1,1,0,1,0.52,4,3
2972_30,30,30,"problems.addError(""Methods [%s] and [%s] must be @Deprecated together"", configMethod, getter);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.52,5,3
2972_34,34,36,"if (defunctConfig.contains(propertyName)) {
problems.addError(""@Config property '%s' on method [%s] is defunct on class [%s]"", propertyName, configMethod, configClass);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,1,1,0,0,0.27,9,5
2972_35,35,35,"problems.addError(""@Config property '%s' on method [%s] is defunct on class [%s]"", propertyName, configMethod, configClass);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.27,10,5
2972_38,38,38,"builder.addInjectionPoint(InjectionPointMetaData.newCurrent(configClass, propertyName, configMethod));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,1,1,0,0,0.26,13,7
2972_40,40,46,"for (InjectionPointMetaData injectionPoint : findLegacySetters(configClass, propertyName, attributeName)) {
if (!injectionPoint.getSetter().isAnnotationPresent(Config.class) && !injectionPoint.getSetter().isAnnotationPresent(Deprecated.class)) {
problems.addWarning(""Replaced @LegacyConfig method [%s] should be @Deprecated"", injectionPoint.getSetter().toGenericString());
}

builder.addInjectionPoint(injectionPoint);
}",0,0,0,1,0,0,0,0,0,3,2,7,0,0,1,1,2,1,1,0,1,0.41,15,8
2972_41,41,43,"if (!injectionPoint.getSetter().isAnnotationPresent(Config.class) && !injectionPoint.getSetter().isAnnotationPresent(Deprecated.class)) {
problems.addWarning(""Replaced @LegacyConfig method [%s] should be @Deprecated"", injectionPoint.getSetter().toGenericString());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,2,1,1,0,0,0.23,16,8
2972_42,42,42,"problems.addWarning(""Replaced @LegacyConfig method [%s] should be @Deprecated"", injectionPoint.getSetter().toGenericString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.23,17,9
2972_45,45,45,builder.addInjectionPoint(injectionPoint);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,1,1,0,0,0.17,20,11
2972_48,48,48,return builder.build();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,1,1,0,0,0.09,23,12
2973_1,1,1,"private AttributeMetadata buildAttributeMetadata(Class<T> configClass, Method configMethod)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.42,36,19
2973_3,3,3,checkArgument(configMethod.isAnnotationPresent(Config.class));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,1,0,0,0.44,34,18
2973_5,5,7,"if (!validateAnnotations(configMethod)) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,3,1,0,0,0.4,30,16
2973_6,6,6,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.23,31,16
2973_9,9,9,String propertyName = configMethod.getAnnotation(Config.class).value();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,3,1,0,1,0.5,28,15
2973_10,10,10,final boolean securitySensitive = configMethod.isAnnotationPresent(ConfigSecuritySensitive.class);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,6,3,1,0,0,0.46,27,14
2973_11,11,11,final boolean hidden = configMethod.isAnnotationPresent(ConfigHidden.class);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,6,3,1,0,0,0.43,26,13
2973_13,13,15,"if (!validateSetter(configMethod)) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,3,1,0,1,0.47,22,11
2973_14,14,14,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.23,23,11
2973_17,17,17,String attributeName = configMethod.getName().substring(3);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,3,1,0,0,0.41,20,10
2973_19,19,19,"AttributeMetaDataBuilder builder = new AttributeMetaDataBuilder(configClass, attributeName, securitySensitive, hidden);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,3,1,0,0,0.45,18,9
2973_21,21,23,"if (configMethod.isAnnotationPresent(ConfigDescription.class)) {
builder.setDescription(configMethod.getAnnotation(ConfigDescription.class).value());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,3,1,0,0,0.44,14,7
2973_22,22,22,builder.setDescription(configMethod.getAnnotation(ConfigDescription.class).value());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.42,15,7
2973_25,25,25,"Method getter = findGetter(configClass, configMethod, attributeName);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,1,0,0,0.39,12,6
2973_26,26,32,"if (getter != null) {
builder.setGetter(getter);

if (configMethod.isAnnotationPresent(Deprecated.class) != getter.isAnnotationPresent(Deprecated.class)) {
problems.addError(""Methods [%s] and [%s] must be @Deprecated together"", configMethod, getter);
}
}",1,0,0,0,0,0,0,0,0,3,2,7,0,1,0,1,6,3,1,0,1,0.51,5,2
2973_27,27,27,builder.setGetter(getter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,1,0,0,0.27,10,4
2973_29,29,31,"if (configMethod.isAnnotationPresent(Deprecated.class) != getter.isAnnotationPresent(Deprecated.class)) {
problems.addError(""Methods [%s] and [%s] must be @Deprecated together"", configMethod, getter);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,6,3,1,0,1,0.54,6,2
2973_30,30,30,"problems.addError(""Methods [%s] and [%s] must be @Deprecated together"", configMethod, getter);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.54,7,2
2973_34,34,36,"if (defunctConfig.contains(propertyName)) {
problems.addError(""@Config property '%s' on method [%s] is defunct on class [%s]"", propertyName, configMethod, configClass);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,3,1,0,2,0.62,1,0
2973_35,35,35,"problems.addError(""@Config property '%s' on method [%s] is defunct on class [%s]"", propertyName, configMethod, configClass);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,2,0.62,2,0
2973_38,38,38,"builder.addInjectionPoint(InjectionPointMetaData.newCurrent(configClass, propertyName, configMethod));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,1,0,5,0.81,0,0
2973_40,40,46,"for (InjectionPointMetaData injectionPoint : findLegacySetters(configClass, propertyName, attributeName)) {
if (!injectionPoint.getSetter().isAnnotationPresent(Config.class) && !injectionPoint.getSetter().isAnnotationPresent(Deprecated.class)) {
problems.addWarning(""Replaced @LegacyConfig method [%s] should be @Deprecated"", injectionPoint.getSetter().toGenericString());
}

builder.addInjectionPoint(injectionPoint);
}",0,0,0,1,0,0,0,0,0,3,2,7,0,0,1,1,6,3,1,0,5,0.78,2,1
2973_41,41,43,"if (!injectionPoint.getSetter().isAnnotationPresent(Config.class) && !injectionPoint.getSetter().isAnnotationPresent(Deprecated.class)) {
problems.addWarning(""Replaced @LegacyConfig method [%s] should be @Deprecated"", injectionPoint.getSetter().toGenericString());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,3,1,0,4,0.72,3,1
2973_42,42,42,"problems.addWarning(""Replaced @LegacyConfig method [%s] should be @Deprecated"", injectionPoint.getSetter().toGenericString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,4,0.7,4,2
2973_45,45,45,builder.addInjectionPoint(injectionPoint);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,1,0,3,0.77,7,4
2973_48,48,48,return builder.build();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,1,0,0,0.28,10,5
2974_1,1,1,"private AttributeMetadata buildAttributeMetadata(Class<T> configClass, Method configMethod)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.46,38,20
2974_3,3,3,checkArgument(configMethod.isAnnotationPresent(Config.class));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.46,36,19
2974_5,5,7,"if (!validateAnnotations(configMethod)) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,4,1,0,0,0.44,32,17
2974_6,6,6,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.25,33,17
2974_9,9,9,String propertyName = configMethod.getAnnotation(Config.class).value();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,4,1,0,1,0.53,30,16
2974_10,10,10,final boolean securitySensitive = configMethod.isAnnotationPresent(ConfigSecuritySensitive.class);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,6,4,1,0,0,0.48,29,15
2974_11,11,11,final boolean hidden = configMethod.isAnnotationPresent(ConfigHidden.class);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,6,4,1,0,0,0.45,28,14
2974_13,13,15,"if (!validateSetter(configMethod)) {
return null;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,4,1,0,1,0.5,24,12
2974_14,14,14,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.25,25,12
2974_17,17,17,String attributeName = configMethod.getName().substring(3);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,1,0,0,0.45,22,11
2974_19,19,19,"AttributeMetaDataBuilder builder = new AttributeMetaDataBuilder(configClass, attributeName, securitySensitive, hidden);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,1,0,0,0.47,20,10
2974_21,21,23,"if (configMethod.isAnnotationPresent(ConfigDescription.class)) {
builder.setDescription(configMethod.getAnnotation(ConfigDescription.class).value());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,4,1,0,0,0.46,16,8
2974_22,22,22,builder.setDescription(configMethod.getAnnotation(ConfigDescription.class).value());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.45,17,8
2974_25,25,25,"Method getter = findGetter(configClass, configMethod, attributeName);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,1,0,0,0.44,14,7
2974_26,26,32,"if (getter != null) {
builder.setGetter(getter);

if (configMethod.isAnnotationPresent(Deprecated.class) != getter.isAnnotationPresent(Deprecated.class)) {
problems.addError(""Methods [%s] and [%s] must be @Deprecated together"", configMethod, getter);
}
}",1,0,0,0,0,0,0,0,0,3,2,7,0,1,0,1,6,4,1,0,1,0.53,7,3
2974_27,27,27,builder.setGetter(getter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.27,12,5
2974_29,29,31,"if (configMethod.isAnnotationPresent(Deprecated.class) != getter.isAnnotationPresent(Deprecated.class)) {
problems.addError(""Methods [%s] and [%s] must be @Deprecated together"", configMethod, getter);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,6,4,1,0,1,0.56,8,3
2974_30,30,30,"problems.addError(""Methods [%s] and [%s] must be @Deprecated together"", configMethod, getter);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.56,9,3
2974_34,34,36,"if (defunctConfig.contains(propertyName)) {
problems.addError(""@Config property '%s' on method [%s] is defunct on class [%s]"", propertyName, configMethod, configClass);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,4,1,0,2,0.65,3,1
2974_35,35,35,"problems.addError(""@Config property '%s' on method [%s] is defunct on class [%s]"", propertyName, configMethod, configClass);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,2,0.65,4,1
2974_38,38,38,"builder.addInjectionPoint(InjectionPointMetaData.newCurrent(configClass, propertyName, configMethod));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,1,0,4,0.75,1,0
2974_40,40,46,"for (InjectionPointMetaData injectionPoint : findLegacySetters(configClass, propertyName, attributeName)) {
if (!injectionPoint.getSetter().isAnnotationPresent(Config.class) && !injectionPoint.getSetter().isAnnotationPresent(Deprecated.class)) {
problems.addWarning(""Replaced @LegacyConfig method [%s] should be @Deprecated"", injectionPoint.getSetter().toGenericString());
}

builder.addInjectionPoint(injectionPoint);
}",0,0,0,1,0,0,0,0,0,3,2,7,0,0,1,1,6,4,1,0,6,0.85,0,0
2974_41,41,43,"if (!injectionPoint.getSetter().isAnnotationPresent(Config.class) && !injectionPoint.getSetter().isAnnotationPresent(Deprecated.class)) {
problems.addWarning(""Replaced @LegacyConfig method [%s] should be @Deprecated"", injectionPoint.getSetter().toGenericString());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,4,1,0,5,0.79,1,0
2974_42,42,42,"problems.addWarning(""Replaced @LegacyConfig method [%s] should be @Deprecated"", injectionPoint.getSetter().toGenericString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,5,0.78,2,1
2974_45,45,45,builder.addInjectionPoint(injectionPoint);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,1,0,3,0.77,5,3
2974_48,48,48,return builder.build();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,4,1,0,0,0.29,8,4
2975_1,1,1,"    private static Collection<Method> findAnnotatedMethods(Class<?> configClass, Class<? extends java.lang.annotation.Annotation> annotation)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,1,0.53,3,1
2975_3,3,3,List<Method> result = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,5,1,0,1,0.47,1,0
2975_5,5,14,"for (Method method : configClass.getMethods()) {
if (method.isSynthetic() || method.isBridge() || Modifier.isStatic(method.getModifiers())) {
continue;
}

Method managedMethod = findAnnotatedMethod(configClass, annotation, method.getName(), method.getParameterTypes());
if (managedMethod != null) {
result.add(managedMethod);
}
}",0,0,0,1,0,0,0,0,0,5,2,10,0,0,1,1,9,5,1,0,1,0.56,0,0
2975_6,6,8,"if (method.isSynthetic() || method.isBridge() || Modifier.isStatic(method.getModifiers())) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,9,5,1,0,1,0.54,1,0
2975_7,7,7,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,0,0.31,2,1
2975_10,10,10,"Method managedMethod = findAnnotatedMethod(configClass, annotation, method.getName(), method.getParameterTypes());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,5,1,0,1,0.52,5,3
2975_11,11,13,"if (managedMethod != null) {
result.add(managedMethod);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,9,5,1,0,1,0.45,6,3
2975_12,12,12,result.add(managedMethod);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,1,0.41,7,4
2975_16,16,16,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,9,5,1,0,1,0.44,11,6
2976_1,1,1,"    private static Collection<Method> findAnnotatedMethods(Class<?> configClass, Class<? extends java.lang.annotation.Annotation> annotation)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,1,0.5,4,2
2976_3,3,3,List<Method> result = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,7,0,0,1,0.42,2,1
2976_5,5,14,"for (Method method : configClass.getMethods()) {
if (method.isSynthetic() || method.isBridge() || Modifier.isStatic(method.getModifiers())) {
continue;
}

Method managedMethod = findAnnotatedMethod(configClass, annotation, method.getName(), method.getParameterTypes());
if (managedMethod != null) {
result.add(managedMethod);
}
}",0,0,0,1,0,0,0,0,0,5,2,10,0,0,1,1,8,7,0,0,1,0.54,0,0
2976_6,6,8,"if (method.isSynthetic() || method.isBridge() || Modifier.isStatic(method.getModifiers())) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,8,7,0,0,1,0.51,0,0
2976_7,7,7,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,0,0.35,1,0
2976_10,10,10,"Method managedMethod = findAnnotatedMethod(configClass, annotation, method.getName(), method.getParameterTypes());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,7,0,0,1,0.49,4,2
2976_11,11,13,"if (managedMethod != null) {
result.add(managedMethod);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,8,7,0,0,1,0.48,5,2
2976_12,12,12,result.add(managedMethod);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,1,0.44,6,3
2976_16,16,16,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,8,7,0,0,0,0.37,10,5
2977_1,1,1,"    private static Collection<Method> findAnnotatedMethods(Class<?> configClass, Class<? extends java.lang.annotation.Annotation> annotation)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,2,0.69,8,4
2977_3,3,3,List<Method> result = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.35,6,3
2977_5,5,14,"for (Method method : configClass.getMethods()) {
if (method.isSynthetic() || method.isBridge() || Modifier.isStatic(method.getModifiers())) {
continue;
}

Method managedMethod = findAnnotatedMethod(configClass, annotation, method.getName(), method.getParameterTypes());
if (managedMethod != null) {
result.add(managedMethod);
}
}",0,0,0,1,0,0,0,0,0,5,2,10,0,0,1,1,6,4,1,0,2,0.59,0,0
2977_6,6,8,"if (method.isSynthetic() || method.isBridge() || Modifier.isStatic(method.getModifiers())) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,4,1,0,0,0.42,1,0
2977_7,7,7,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.19,2,0
2977_10,10,10,"Method managedMethod = findAnnotatedMethod(configClass, annotation, method.getName(), method.getParameterTypes());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,1,0,2,0.62,0,0
2977_11,11,13,"if (managedMethod != null) {
result.add(managedMethod);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,1,0,0,0.41,1,0
2977_12,12,12,result.add(managedMethod);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.4,2,1
2977_16,16,16,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,4,1,0,0,0.28,6,3
2978_1,1,1,"private Method findGetter(Class<?> configClass, Method configMethod, String attributeName)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,2,0.64,1,0
2978_3,3,3,"String getterName = ""get"" + attributeName;",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.46,0,0
2978_4,4,4,"String isName = ""is"" + attributeName;",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,1,0,0,0.23,1,0
2978_6,6,6,List<Method> getters = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,1,0,1,0.55,3,2
2978_7,7,7,List<Method> unusableGetters = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.56,4,2
2978_8,8,19,"for (Class<?> clazz = configClass; (clazz != null) && !clazz.equals(Object.class); clazz = clazz.getSuperclass()) {
for (Method method : clazz.getDeclaredMethods()) {
if (method.getName().equals(getterName) || method.getName().equals(isName)) {
if (isUsableMethod(method) && !method.getReturnType().equals(Void.TYPE) && method.getParameterTypes().length == 0) {
getters.add(method);
}
else {
unusableGetters.add(method);
}
}
}
}",0,0,0,1,0,0,0,0,0,6,4,12,0,1,0,1,3,2,1,0,1,0.53,5,3
2978_9,9,18,"for (Method method : clazz.getDeclaredMethods()) {
if (method.getName().equals(getterName) || method.getName().equals(isName)) {
if (isUsableMethod(method) && !method.getReturnType().equals(Void.TYPE) && method.getParameterTypes().length == 0) {
getters.add(method);
}
else {
unusableGetters.add(method);
}
}
}",0,0,0,1,0,0,0,0,0,5,3,10,0,0,0,0,3,2,1,0,1,0.54,6,4
2978_10,10,17,"if (method.getName().equals(getterName) || method.getName().equals(isName)) {
if (isUsableMethod(method) && !method.getReturnType().equals(Void.TYPE) && method.getParameterTypes().length == 0) {
getters.add(method);
}
else {
unusableGetters.add(method);
}
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,0,0,3,2,1,0,1,0.53,7,5
2978_11,11,16,"if (isUsableMethod(method) && !method.getReturnType().equals(Void.TYPE) && method.getParameterTypes().length == 0) {
getters.add(method);
}
else {
unusableGetters.add(method);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,0,0,0,3,2,1,0,1,0.54,8,6
2978_12,12,12,getters.add(method);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.63,9,7
2978_14,14,14,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.15,11,9
2978_15,15,15,unusableGetters.add(method);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.62,12,9
2978_21,21,32,"if (getters.isEmpty()) {
String unusable = """";
if (!unusableGetters.isEmpty()) {
StringBuilder builder = new StringBuilder("" The following methods are unusable: "");
for (Method method : unusableGetters) {
builder.append('[').append(method.toGenericString()).append(']');
}
unusable = builder.toString();
}
problems.addError(""No getter for @Config method [%s].%s"", configMethod.toGenericString(), unusable);
return null;
}",1,0,0,0,0,0,0,0,0,8,3,12,0,0,1,1,3,2,1,0,1,0.52,18,11
2978_22,22,22,"String unusable = """";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.28,19,11
2978_23,23,29,"if (!unusableGetters.isEmpty()) {
StringBuilder builder = new StringBuilder("" The following methods are unusable: "");
for (Method method : unusableGetters) {
builder.append('[').append(method.toGenericString()).append(']');
}
unusable = builder.toString();
}",1,0,0,0,0,0,0,0,0,4,2,7,1,1,0,0,3,2,1,0,1,0.51,20,12
2978_24,24,24,"StringBuilder builder = new StringBuilder("" The following methods are unusable: "");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.29,21,13
2978_25,25,27,"for (Method method : unusableGetters) {
builder.append('[').append(method.toGenericString()).append(']');
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,0,3,2,1,0,1,0.53,22,14
2978_26,26,26,builder.append('[').append(method.toGenericString()).append(']');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.27,23,15
2978_28,28,28,unusable = builder.toString();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.24,25,17
2978_30,30,30,"problems.addError(""No getter for @Config method [%s].%s"", configMethod.toGenericString(), unusable);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,1,0,1,0.53,27,18
2978_31,31,31,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.2,28,18
2978_34,34,37,"if (getters.size() > 1) {
problems.addError(""Multiple getters found for @Config setter [%s]"", configMethod.toGenericString());
return null;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,2,1,0,1,0.52,31,20
2978_35,35,35,"problems.addError(""Multiple getters found for @Config setter [%s]"", configMethod.toGenericString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.52,32,20
2978_36,36,36,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.2,33,21
2978_39,39,39,return getters.get(0);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,2,1,0,1,0.48,36,23
1581_1,1,1,    public void bindGenericEventClient(List<Class<?>> eventTypes),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,3,0.71,7,4
1581_3,3,3,"requireNonNull(eventTypes, ""eventTypes is null"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,2,0.59,5,3
1581_4,4,4,"checkArgument(!eventTypes.isEmpty(), ""eventTypes is empty"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,6,1,0,2,0.62,4,2
1581_6,6,6,Binder sourcedBinder = binder.withSource(getCaller());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,6,1,0,0,0.38,2,1
1581_7,7,7,"Multibinder<EventTypeMetadata<?>> metadataBinder = newSetBinder(binder, new TypeLiteral<EventTypeMetadata<?>>() {});",0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,7,6,1,0,3,0.74,1,0
1581_9,9,15,"for (Class<?> eventType : eventTypes) {
EventTypeMetadata<?> eventTypeMetadata = getEventTypeMetadata(eventType);
metadataBinder.addBinding().toInstance(eventTypeMetadata);
for (String error : eventTypeMetadata.getErrors()) {
sourcedBinder.addError(error);
}
}",0,0,0,1,0,0,0,0,0,4,2,7,0,0,1,0,7,6,1,0,5,0.91,0,0
1581_10,10,10,EventTypeMetadata<?> eventTypeMetadata = getEventTypeMetadata(eventType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,1,0,3,0.8,1,0
1581_11,11,11,metadataBinder.addBinding().toInstance(eventTypeMetadata);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,1,0,4,0.84,2,1
1581_12,12,14,"for (String error : eventTypeMetadata.getErrors()) {
sourcedBinder.addError(error);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,0,7,6,1,0,4,0.8,3,2
1581_13,13,13,sourcedBinder.addError(error);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,1,0.56,4,3
1582_1,1,1,    private static StackTraceElement getCaller(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,1,0.5,1,0
1582_3,3,3,StackTraceElement[] stack = Thread.currentThread().getStackTrace();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.36,0,0
1582_4,4,4,boolean foundThisClass = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,2,0,1,0.5,1,0
1582_5,5,16,"for (StackTraceElement element : stack) {
if (!foundThisClass) {
if (element.getClassName().equals(EventBinder.class.getName())) {
foundThisClass = true;
}
}
else {
if (!element.getClassName().equals(EventBinder.class.getName())) {
return element;
}
}
}",0,0,0,1,0,0,0,0,0,6,3,12,0,1,0,0,5,2,2,0,1,0.5,2,1
1582_6,6,15,"if (!foundThisClass) {
if (element.getClassName().equals(EventBinder.class.getName())) {
foundThisClass = true;
}
}
else {
if (!element.getClassName().equals(EventBinder.class.getName())) {
return element;
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,0,0,5,2,2,0,1,0.5,3,2
1582_7,7,9,"if (element.getClassName().equals(EventBinder.class.getName())) {
foundThisClass = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,2,2,0,1,0.51,4,3
1582_8,8,8,foundThisClass = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,1,0.51,5,4
1582_11,11,11,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.15,8,6
1582_12,12,14,"if (!element.getClassName().equals(EventBinder.class.getName())) {
return element;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,2,2,0,1,0.48,9,6
1582_13,13,13,return element;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.27,10,7
1582_17,17,17,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.26,14,9
1387_1,1,7,"@Override
public Object readFrom(Class<Object> type,
Type genericType,
Annotation[] annotations,
MediaType mediaType,
MultivaluedMap<String, String> httpHeaders,
InputStream inputStream)",0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,8,3,0,0,0,0.41,10,6
1387_8,8,8,throws IOException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,3,0,0,2,0.74,9,5
1387_10,10,25,"try {
JsonParser jsonParser = getReaderJsonFactory().createParser(inputStream);

jsonParser.disable(JsonParser.Feature.AUTO_CLOSE_SOURCE);

return objectMapper.readValue(jsonParser, objectMapper.getTypeFactory().constructType(genericType));
}
catch (Exception e) {
if (e instanceof IOException && !(e instanceof JsonProcessingException) && !(e instanceof EOFException)) {
throw e;
}

log.debug(e, ""Invalid JSON for Java type: %s"", type);

throw new JsonMapperParsingException(type, e);
}",0,0,0,0,1,0,0,0,0,8,2,16,0,0,0,0,8,3,0,0,4,0.68,0,0
1387_11,11,11,JsonParser jsonParser = getReaderJsonFactory().createParser(inputStream);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,3,0,0,1,0.55,6,3
1387_13,13,13,jsonParser.disable(JsonParser.Feature.AUTO_CLOSE_SOURCE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,8,3,0,0,1,0.52,4,2
1387_15,15,15,"return objectMapper.readValue(jsonParser, objectMapper.getTypeFactory().constructType(genericType));",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,8,3,0,0,2,0.55,2,1
1387_17,17,17,catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,0,0,1,0.67,0,0
1387_18,18,20,"if (e instanceof IOException && !(e instanceof JsonProcessingException) && !(e instanceof EOFException)) {
throw e;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,8,3,0,0,3,0.68,0,0
1387_19,19,19,throw e;,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,3,0,0,0,0.62,1,0
1387_22,22,22,"log.debug(e, ""Invalid JSON for Java type: %s"", type);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,8,3,0,0,1,0.49,4,2
1387_24,24,24,"throw new JsonMapperParsingException(type, e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,8,3,0,0,2,0.61,6,3
1388_1,1,7,"@Override
public Object readFrom(Class<Object> type,
Type genericType,
Annotation[] annotations,
MediaType mediaType,
MultivaluedMap<String, String> httpHeaders,
InputStream inputStream)",0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,5,2,1,0,0,0.35,14,8
1388_8,8,8,throws IOException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,1,0,1,0.72,13,7
1388_10,10,25,"try {
JsonParser jsonParser = getReaderJsonFactory().createParser(inputStream);

jsonParser.disable(JsonParser.Feature.AUTO_CLOSE_SOURCE);

return objectMapper.readValue(jsonParser, objectMapper.getTypeFactory().constructType(genericType));
}
catch (Exception e) {
if (e instanceof IOException && !(e instanceof JsonProcessingException) && !(e instanceof EOFException)) {
throw e;
}

log.debug(e, ""Invalid JSON for Java type: %s"", type);

throw new JsonMapperParsingException(type, e);
}",0,0,0,0,1,0,0,0,0,8,2,16,0,0,0,0,5,2,1,0,3,0.62,0,0
1388_11,11,11,JsonParser jsonParser = getReaderJsonFactory().createParser(inputStream);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,2,1,0,0,0.35,10,5
1388_13,13,13,jsonParser.disable(JsonParser.Feature.AUTO_CLOSE_SOURCE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,2,1,0,0,0.35,8,4
1388_15,15,15,"return objectMapper.readValue(jsonParser, objectMapper.getTypeFactory().constructType(genericType));",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,2,1,0,0,0.35,6,3
1388_17,17,17,catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.71,4,2
1388_18,18,20,"if (e instanceof IOException && !(e instanceof JsonProcessingException) && !(e instanceof EOFException)) {
throw e;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,2,1,0,1,0.63,1,0
1388_19,19,19,throw e;,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,1,0,0,0.64,2,0
1388_22,22,22,"log.debug(e, ""Invalid JSON for Java type: %s"", type);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,2,1,0,2,0.61,0,0
1388_24,24,24,"throw new JsonMapperParsingException(type, e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,5,2,1,0,1,0.55,2,1
1389_1,1,7,"@Override
public Object readFrom(Class<Object> type,
Type genericType,
Annotation[] annotations,
MediaType mediaType,
MultivaluedMap<String, String> httpHeaders,
InputStream inputStream)",0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,10,6,1,0,0,0.47,16,9
1389_8,8,8,throws IOException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,10,6,1,0,2,0.72,15,8
1389_10,10,25,"try {
JsonParser jsonParser = getReaderJsonFactory().createParser(inputStream);

jsonParser.disable(JsonParser.Feature.AUTO_CLOSE_SOURCE);

return objectMapper.readValue(jsonParser, objectMapper.getTypeFactory().constructType(genericType));
}
catch (Exception e) {
if (e instanceof IOException && !(e instanceof JsonProcessingException) && !(e instanceof EOFException)) {
throw e;
}

log.debug(e, ""Invalid JSON for Java type: %s"", type);

throw new JsonMapperParsingException(type, e);
}",0,0,0,0,1,0,0,0,0,8,2,16,0,0,0,0,10,6,1,0,5,0.69,0,0
1389_11,11,11,JsonParser jsonParser = getReaderJsonFactory().createParser(inputStream);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,10,6,1,0,1,0.56,12,6
1389_13,13,13,jsonParser.disable(JsonParser.Feature.AUTO_CLOSE_SOURCE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,10,6,1,0,1,0.51,10,5
1389_15,15,15,"return objectMapper.readValue(jsonParser, objectMapper.getTypeFactory().constructType(genericType));",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,10,6,1,0,2,0.57,8,4
1389_17,17,17,catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,1,0.66,6,3
1389_18,18,20,"if (e instanceof IOException && !(e instanceof JsonProcessingException) && !(e instanceof EOFException)) {
throw e;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,10,6,1,0,3,0.67,3,1
1389_19,19,19,throw e;,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,10,6,1,0,1,0.64,4,1
1389_22,22,22,"log.debug(e, ""Invalid JSON for Java type: %s"", type);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,10,6,1,0,2,0.58,1,0
1389_24,24,24,"throw new JsonMapperParsingException(type, e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,10,6,1,0,4,0.69,0,0
1532_1,1,1,"public static LogFileName generateNextLogFileName(Path masterLogFile, Optional<String> compressionExtension)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.47,10,7
1532_3,3,3,LocalDateTime dateTime = LocalDateTime.now().withNano(0);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,1,0,0,0.41,8,6
1532_4,4,4,String suffix = DATE_TIME_FORMATTER.format(dateTime);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,1,0,0,0.42,7,5
1532_5,5,11,"for (int index = 0; index < MAX_GENERATED_INDEX; index++) {
String newFileName = masterLogFile.getFileName() + suffix + (index > 0 ? ""-"" + index : """");
Path newFile = masterLogFile.resolveSibling(newFileName);
if (!fileAlreadyExists(newFile, compressionExtension)) {
return new LogFileName(newFileName, dateTime, OptionalInt.of(index), OptionalInt.empty(), Optional.empty(), false);
}
}",0,0,1,0,0,0,0,0,0,4,2,7,0,1,0,0,8,5,1,0,1,0.46,0,0
1532_6,6,6,"String newFileName = masterLogFile.getFileName() + suffix + (index > 0 ? ""-"" + index : """");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,1,0,1,0.45,5,3
1532_7,7,7,Path newFile = masterLogFile.resolveSibling(newFileName);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,1,0,1,0.43,4,2
1532_8,8,10,"if (!fileAlreadyExists(newFile, compressionExtension)) {
return new LogFileName(newFileName, dateTime, OptionalInt.of(index), OptionalInt.empty(), Optional.empty(), false);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,8,5,1,0,1,0.45,1,0
1532_9,9,9,"return new LogFileName(newFileName, dateTime, OptionalInt.of(index), OptionalInt.empty(), Optional.empty(), false);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.45,2,0
1532_12,12,12,String slug = randomUUID().toString();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,1,0,2,0.59,0,0
1532_13,13,13,"String randomFileName = masterLogFile.getFileName() + suffix + ""--"" + slug;",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,1,0,2,0.52,1,0
1532_14,14,14,"return new LogFileName(randomFileName, dateTime, OptionalInt.of(0), OptionalInt.empty(), Optional.of(slug), false);",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,8,5,1,0,2,0.51,2,1
1276_1,1,2,"@Override
public synchronized void close()",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.5,19,11
1276_3,3,3,throws IOException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,0,0.41,18,10
1276_5,5,5,"IOException exception = new IOException(""Exception thrown attempting to close the file output."");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.46,16,9
1276_7,7,20,"if (currentOutputStream != null) {
try {
currentOutputStream.flush();
}
catch (IOException e) {
exception.addSuppressed(e);
}
try {
currentOutputStream.close();
}
catch (IOException e) {
exception.addSuppressed(e);
}
}",1,0,0,0,0,0,0,0,0,8,2,14,0,0,1,1,3,3,0,0,0,0.44,1,0
1276_8,8,13,"try {
currentOutputStream.flush();
}
catch (IOException e) {
exception.addSuppressed(e);
}",0,0,0,0,1,0,0,0,0,3,1,6,1,1,0,0,3,3,0,0,0,0.4,8,4
1276_9,9,9,currentOutputStream.flush();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.41,12,6
1276_11,11,11,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.4,10,5
1276_12,12,12,exception.addSuppressed(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.31,9,4
1276_14,14,19,"try {
currentOutputStream.close();
}
catch (IOException e) {
exception.addSuppressed(e);
}",0,0,0,0,1,0,0,0,0,3,1,6,1,1,0,0,3,3,0,0,0,0.44,2,0
1276_15,15,15,currentOutputStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.48,6,2
1276_17,17,17,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.4,4,1
1276_18,18,18,exception.addSuppressed(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.31,3,0
1276_22,22,30,"if (compressionExecutor != null) {
compressionExecutor.shutdown();
try {
compressionExecutor.awaitTermination(1, TimeUnit.MINUTES);
}
catch (InterruptedException e) {
Thread.currentThread().interrupt();
}
}",1,0,0,0,0,0,0,0,0,5,2,9,0,0,1,1,3,3,0,0,1,0.61,0,0
1276_23,23,23,compressionExecutor.shutdown();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.68,1,0
1276_24,24,29,"try {
compressionExecutor.awaitTermination(1, TimeUnit.MINUTES);
}
catch (InterruptedException e) {
Thread.currentThread().interrupt();
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,3,3,0,0,1,0.58,2,1
1276_25,25,25,"compressionExecutor.awaitTermination(1, TimeUnit.MINUTES);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.62,3,2
1276_27,27,27,catch (InterruptedException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.43,5,4
1276_28,28,28,Thread.currentThread().interrupt();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.43,6,4
1276_32,32,32,currentOutputStream = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.4,10,6
1276_33,33,33,currentOutputFile = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.39,11,6
1276_34,34,34,currentOutputFileName = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,12,7
1276_35,35,35,currentFileSize = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.37,13,8
1276_37,37,39,"if (exception.getSuppressed().length > 0) {
throw exception;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,3,0,0,0,0.35,15,10
1276_38,38,38,throw exception;,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,0,0.31,16,10
1277_1,1,1,private synchronized void rollFile(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.54,17,11
1277_2,2,2,throws IOException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,5,1,0,0,0.38,16,10
1277_5,5,5,LogFileName newFileName = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,8,5,1,0,2,0.59,13,9
1277_6,6,6,Path newFile = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,5,1,0,2,0.64,12,8
1277_7,7,7,OutputStream newOutputStream = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,1,0,1,0.48,11,7
1277_8,8,17,"for (int i = 0; i < MAX_OPEN_NEW_LOG_ATTEMPTS; i++) {
try {
newFileName = LogFileName.generateNextLogFileName(symlink, compressionType.getExtension());
newFile = symlink.resolveSibling(newFileName.getFileName());
newOutputStream = new BufferedOutputStream(Files.newOutputStream(newFile, CREATE_NEW), MAX_BATCH_BYTES);
break;
}
catch (FileAlreadyExistsException ignore) {
}
}",0,0,1,0,0,0,0,0,0,6,2,10,0,1,0,1,8,5,1,0,4,0.67,1,0
1277_9,9,16,"try {
newFileName = LogFileName.generateNextLogFileName(symlink, compressionType.getExtension());
newFile = symlink.resolveSibling(newFileName.getFileName());
newOutputStream = new BufferedOutputStream(Files.newOutputStream(newFile, CREATE_NEW), MAX_BATCH_BYTES);
break;
}
catch (FileAlreadyExistsException ignore) {
}",0,0,0,0,1,0,0,0,0,5,1,8,0,0,0,0,8,5,1,0,3,0.64,2,0
1277_10,10,10,"newFileName = LogFileName.generateNextLogFileName(symlink, compressionType.getExtension());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,1,0,2,0.54,8,4
1277_11,11,11,newFile = symlink.resolveSibling(newFileName.getFileName());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,1,0,2,0.63,7,3
1277_12,12,12,"newOutputStream = new BufferedOutputStream(Files.newOutputStream(newFile, CREATE_NEW), MAX_BATCH_BYTES);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,1,0,2,0.62,6,2
1277_13,13,13,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,8,5,1,0,0,0.2,5,1
1277_15,15,15,catch (FileAlreadyExistsException ignore) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,2,0.58,3,0
1277_19,19,21,"if (newOutputStream == null) {
throw new IOException(""Could not create new a unique log file: "" + newFile);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,8,5,1,0,2,0.63,0,0
1277_20,20,20,"throw new IOException(""Could not create new a unique log file: "" + newFile);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,5,1,0,2,0.64,1,0
1277_23,23,23,"IOException exception = new IOException(String.format(""Unable to %s log file"", currentOutputStream == null ? ""setup initial"" : ""roll""));",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,8,5,1,0,2,0.53,4,2
1277_25,25,46,"if (currentOutputStream != null) {
try {
currentOutputStream.close();
}
catch (IOException e) {
exception.addSuppressed(new IOException(""Unable to close old output stream: "" + currentOutputFile, e));
}
historyManager.addFile(currentOutputFile, currentOutputFileName, currentFileSize);
if (compressionExecutor != null) {
Path originalFile = currentOutputFile;
LogFileName originalLogFileName = currentOutputFileName;
long originalFileSize = currentFileSize;
compressionExecutor.submit(() -> {
try {
compressInternal(originalFile, originalLogFileName, originalFileSize);
}
catch (IOException e) {
exception.addSuppressed(e);
}
});
}
}",1,0,0,0,0,0,0,0,0,14,4,22,0,0,1,1,8,5,1,0,2,0.56,6,3
1277_26,26,31,"try {
currentOutputStream.close();
}
catch (IOException e) {
exception.addSuppressed(new IOException(""Unable to close old output stream: "" + currentOutputFile, e));
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,8,5,1,0,2,0.53,7,3
1277_27,27,27,currentOutputStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.36,8,4
1277_29,29,29,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.35,10,6
1277_30,30,30,"exception.addSuppressed(new IOException(""Unable to close old output stream: "" + currentOutputFile, e));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,2,0.55,11,6
1277_32,32,32,"historyManager.addFile(currentOutputFile, currentOutputFileName, currentFileSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.48,13,8
1277_33,33,45,"if (compressionExecutor != null) {
Path originalFile = currentOutputFile;
LogFileName originalLogFileName = currentOutputFileName;
long originalFileSize = currentFileSize;
compressionExecutor.submit(() -> {
try {
compressInternal(originalFile, originalLogFileName, originalFileSize);
}
catch (IOException e) {
exception.addSuppressed(e);
}
});
}",1,0,0,0,0,0,0,0,0,8,3,13,0,0,0,0,8,5,1,0,1,0.51,14,8
1277_34,34,34,Path originalFile = currentOutputFile;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.51,15,9
1277_35,35,35,LogFileName originalLogFileName = currentOutputFileName;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.47,16,10
1277_36,36,36,long originalFileSize = currentFileSize;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.49,17,11
1277_37,37,37,compressionExecutor.submit(() -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.47,18,12
1277_38,38,43,"try {
compressInternal(originalFile, originalLogFileName, originalFileSize);
}
catch (IOException e) {
exception.addSuppressed(e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,8,5,1,0,1,0.48,19,13
1277_39,39,39,"compressInternal(originalFile, originalLogFileName, originalFileSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.51,20,14
1277_41,41,41,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.35,22,16
1277_42,42,42,exception.addSuppressed(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.32,23,16
1277_48,48,48,currentOutputFile = newFile;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,5,1,0,2,0.64,29,18
1277_49,49,49,currentOutputFileName = newFileName;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,2,0.57,30,18
1277_50,50,50,currentOutputStream = newOutputStream;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.44,31,19
1277_51,51,51,currentFileSize = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,5,1,0,1,0.45,32,20
1277_53,53,61,"try {
if (Files.exists(symlink)) {
Files.delete(symlink);
}
Files.createSymbolicLink(symlink, newFile);
}
catch (IOException e) {
exception.addSuppressed(new IOException(""Unable to update symlink"", e));
}",0,0,0,0,1,0,0,0,0,5,2,9,0,0,1,1,8,5,1,0,3,0.62,34,22
1277_54,54,56,"if (Files.exists(symlink)) {
Files.delete(symlink);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,5,1,0,2,0.69,35,22
1277_55,55,55,Files.delete(symlink);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.59,36,23
1277_57,57,57,"Files.createSymbolicLink(symlink, newFile);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,2,0.63,38,25
1277_59,59,59,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.35,40,26
1277_60,60,60,"exception.addSuppressed(new IOException(""Unable to update symlink"", e));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.48,41,26
1277_63,63,65,"if (exception.getSuppressed().length > 0) {
throw exception;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,8,5,1,0,0,0.33,44,28
1277_64,64,64,throw exception;,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,5,1,0,0,0.35,45,28
1278_1,1,1,private synchronized void rollFile(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,7,2,0,1,0.55,21,13
1278_2,2,2,throws IOException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,17,7,2,0,2,0.69,20,12
1278_5,5,5,LogFileName newFileName = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,17,7,2,0,2,0.54,17,11
1278_6,6,6,Path newFile = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,17,7,2,0,2,0.58,16,10
1278_7,7,7,OutputStream newOutputStream = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,17,7,2,0,3,0.69,15,9
1278_8,8,17,"for (int i = 0; i < MAX_OPEN_NEW_LOG_ATTEMPTS; i++) {
try {
newFileName = LogFileName.generateNextLogFileName(symlink, compressionType.getExtension());
newFile = symlink.resolveSibling(newFileName.getFileName());
newOutputStream = new BufferedOutputStream(Files.newOutputStream(newFile, CREATE_NEW), MAX_BATCH_BYTES);
break;
}
catch (FileAlreadyExistsException ignore) {
}
}",0,0,1,0,0,0,0,0,0,6,2,10,0,1,0,1,17,7,2,0,6,0.69,5,2
1278_9,9,16,"try {
newFileName = LogFileName.generateNextLogFileName(symlink, compressionType.getExtension());
newFile = symlink.resolveSibling(newFileName.getFileName());
newOutputStream = new BufferedOutputStream(Files.newOutputStream(newFile, CREATE_NEW), MAX_BATCH_BYTES);
break;
}
catch (FileAlreadyExistsException ignore) {
}",0,0,0,0,1,0,0,0,0,5,1,8,0,0,0,0,17,7,2,0,5,0.68,6,2
1278_10,10,10,"newFileName = LogFileName.generateNextLogFileName(symlink, compressionType.getExtension());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,17,7,2,0,2,0.52,12,6
1278_11,11,11,newFile = symlink.resolveSibling(newFileName.getFileName());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,17,7,2,0,2,0.55,11,5
1278_12,12,12,"newOutputStream = new BufferedOutputStream(Files.newOutputStream(newFile, CREATE_NEW), MAX_BATCH_BYTES);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,17,7,2,0,4,0.7,10,4
1278_13,13,13,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,17,7,2,0,0,0.29,9,3
1278_15,15,15,catch (FileAlreadyExistsException ignore) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,7,2,0,2,0.57,7,2
1278_19,19,21,"if (newOutputStream == null) {
throw new IOException(""Could not create new a unique log file: "" + newFile);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,17,7,2,0,6,0.75,1,0
1278_20,20,20,"throw new IOException(""Could not create new a unique log file: "" + newFile);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,17,7,2,0,4,0.71,2,0
1278_23,23,23,"IOException exception = new IOException(String.format(""Unable to %s log file"", currentOutputStream == null ? ""setup initial"" : ""roll""));",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,17,7,2,0,5,0.68,0,0
1278_25,25,46,"if (currentOutputStream != null) {
try {
currentOutputStream.close();
}
catch (IOException e) {
exception.addSuppressed(new IOException(""Unable to close old output stream: "" + currentOutputFile, e));
}
historyManager.addFile(currentOutputFile, currentOutputFileName, currentFileSize);
if (compressionExecutor != null) {
Path originalFile = currentOutputFile;
LogFileName originalLogFileName = currentOutputFileName;
long originalFileSize = currentFileSize;
compressionExecutor.submit(() -> {
try {
compressInternal(originalFile, originalLogFileName, originalFileSize);
}
catch (IOException e) {
exception.addSuppressed(e);
}
});
}
}",1,0,0,0,0,0,0,0,0,14,4,22,0,0,1,1,17,7,2,0,7,0.73,2,1
1278_26,26,31,"try {
currentOutputStream.close();
}
catch (IOException e) {
exception.addSuppressed(new IOException(""Unable to close old output stream: "" + currentOutputFile, e));
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,17,7,2,0,7,0.77,3,1
1278_27,27,27,currentOutputStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,7,2,0,2,0.56,4,2
1278_29,29,29,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,7,2,0,1,0.65,6,4
1278_30,30,30,"exception.addSuppressed(new IOException(""Unable to close old output stream: "" + currentOutputFile, e));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,7,2,0,7,0.79,7,4
1278_32,32,32,"historyManager.addFile(currentOutputFile, currentOutputFileName, currentFileSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,7,2,0,3,0.56,9,6
1278_33,33,45,"if (compressionExecutor != null) {
Path originalFile = currentOutputFile;
LogFileName originalLogFileName = currentOutputFileName;
long originalFileSize = currentFileSize;
compressionExecutor.submit(() -> {
try {
compressInternal(originalFile, originalLogFileName, originalFileSize);
}
catch (IOException e) {
exception.addSuppressed(e);
}
});
}",1,0,0,0,0,0,0,0,0,8,3,13,0,0,0,0,17,7,2,0,5,0.66,10,6
1278_34,34,34,Path originalFile = currentOutputFile;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,17,7,2,0,2,0.55,11,7
1278_35,35,35,LogFileName originalLogFileName = currentOutputFileName;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,17,7,2,0,2,0.5,12,8
1278_36,36,36,long originalFileSize = currentFileSize;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,17,7,2,0,1,0.48,13,9
1278_37,37,37,compressionExecutor.submit(() -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,7,2,0,0,0.52,14,10
1278_38,38,43,"try {
compressInternal(originalFile, originalLogFileName, originalFileSize);
}
catch (IOException e) {
exception.addSuppressed(e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,17,7,2,0,4,0.66,15,11
1278_39,39,39,"compressInternal(originalFile, originalLogFileName, originalFileSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,7,2,0,1,0.52,16,12
1278_41,41,41,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,7,2,0,1,0.65,18,14
1278_42,42,42,exception.addSuppressed(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,7,2,0,3,0.71,19,14
1278_48,48,48,currentOutputFile = newFile;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,17,7,2,0,3,0.66,25,16
1278_49,49,49,currentOutputFileName = newFileName;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,7,2,0,3,0.57,26,16
1278_50,50,50,currentOutputStream = newOutputStream;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,7,2,0,3,0.68,27,17
1278_51,51,51,currentFileSize = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,17,7,2,0,1,0.44,28,18
1278_53,53,61,"try {
if (Files.exists(symlink)) {
Files.delete(symlink);
}
Files.createSymbolicLink(symlink, newFile);
}
catch (IOException e) {
exception.addSuppressed(new IOException(""Unable to update symlink"", e));
}",0,0,0,0,1,0,0,0,0,5,2,9,0,0,1,1,17,7,2,0,5,0.72,30,20
1278_54,54,56,"if (Files.exists(symlink)) {
Files.delete(symlink);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,17,7,2,0,1,0.51,31,20
1278_55,55,55,Files.delete(symlink);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,7,2,0,1,0.51,32,21
1278_57,57,57,"Files.createSymbolicLink(symlink, newFile);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,7,2,0,2,0.62,34,23
1278_59,59,59,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,7,2,0,1,0.65,36,24
1278_60,60,60,"exception.addSuppressed(new IOException(""Unable to update symlink"", e));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,7,2,0,4,0.72,37,24
1278_63,63,65,"if (exception.getSuppressed().length > 0) {
throw exception;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,17,7,2,0,3,0.62,40,26
1278_64,64,64,throw exception;,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,17,7,2,0,2,0.7,41,26
1279_1,1,1,private synchronized void rollFile(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,0,0,0,0.47,23,14
1279_2,2,2,throws IOException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,10,6,0,0,0,0.4,22,13
1279_5,5,5,LogFileName newFileName = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,10,6,0,0,1,0.47,19,12
1279_6,6,6,Path newFile = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,6,0,0,0,0.34,18,11
1279_7,7,7,OutputStream newOutputStream = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,6,0,0,0,0.4,17,10
1279_8,8,17,"for (int i = 0; i < MAX_OPEN_NEW_LOG_ATTEMPTS; i++) {
try {
newFileName = LogFileName.generateNextLogFileName(symlink, compressionType.getExtension());
newFile = symlink.resolveSibling(newFileName.getFileName());
newOutputStream = new BufferedOutputStream(Files.newOutputStream(newFile, CREATE_NEW), MAX_BATCH_BYTES);
break;
}
catch (FileAlreadyExistsException ignore) {
}
}",0,0,1,0,0,0,0,0,0,6,2,10,0,1,0,1,10,6,0,0,3,0.58,7,3
1279_9,9,16,"try {
newFileName = LogFileName.generateNextLogFileName(symlink, compressionType.getExtension());
newFile = symlink.resolveSibling(newFileName.getFileName());
newOutputStream = new BufferedOutputStream(Files.newOutputStream(newFile, CREATE_NEW), MAX_BATCH_BYTES);
break;
}
catch (FileAlreadyExistsException ignore) {
}",0,0,0,0,1,0,0,0,0,5,1,8,0,0,0,0,10,6,0,0,2,0.52,8,3
1279_10,10,10,"newFileName = LogFileName.generateNextLogFileName(symlink, compressionType.getExtension());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,6,0,0,2,0.54,14,7
1279_11,11,11,newFile = symlink.resolveSibling(newFileName.getFileName());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,6,0,0,0,0.37,13,6
1279_12,12,12,"newOutputStream = new BufferedOutputStream(Files.newOutputStream(newFile, CREATE_NEW), MAX_BATCH_BYTES);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,6,0,0,0,0.42,12,5
1279_13,13,13,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,10,6,0,0,0,0.23,11,4
1279_15,15,15,catch (FileAlreadyExistsException ignore) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,0,0,0,0.41,9,3
1279_19,19,21,"if (newOutputStream == null) {
throw new IOException(""Could not create new a unique log file: "" + newFile);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,10,6,0,0,1,0.48,3,1
1279_20,20,20,"throw new IOException(""Could not create new a unique log file: "" + newFile);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,10,6,0,0,1,0.49,4,1
1279_23,23,23,"IOException exception = new IOException(String.format(""Unable to %s log file"", currentOutputStream == null ? ""setup initial"" : ""roll""));",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,10,6,0,0,4,0.67,1,0
1279_25,25,46,"if (currentOutputStream != null) {
try {
currentOutputStream.close();
}
catch (IOException e) {
exception.addSuppressed(new IOException(""Unable to close old output stream: "" + currentOutputFile, e));
}
historyManager.addFile(currentOutputFile, currentOutputFileName, currentFileSize);
if (compressionExecutor != null) {
Path originalFile = currentOutputFile;
LogFileName originalLogFileName = currentOutputFileName;
long originalFileSize = currentFileSize;
compressionExecutor.submit(() -> {
try {
compressInternal(originalFile, originalLogFileName, originalFileSize);
}
catch (IOException e) {
exception.addSuppressed(e);
}
});
}
}",1,0,0,0,0,0,0,0,0,14,4,22,0,0,1,1,10,6,0,0,4,0.64,0,0
1279_26,26,31,"try {
currentOutputStream.close();
}
catch (IOException e) {
exception.addSuppressed(new IOException(""Unable to close old output stream: "" + currentOutputFile, e));
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,10,6,0,0,2,0.56,1,0
1279_27,27,27,currentOutputStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,0,0,2,0.63,2,1
1279_29,29,29,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,0,0,0,0.43,4,3
1279_30,30,30,"exception.addSuppressed(new IOException(""Unable to close old output stream: "" + currentOutputFile, e));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,0,0,2,0.55,5,3
1279_32,32,32,"historyManager.addFile(currentOutputFile, currentOutputFileName, currentFileSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,0,0,1,0.5,7,5
1279_33,33,45,"if (compressionExecutor != null) {
Path originalFile = currentOutputFile;
LogFileName originalLogFileName = currentOutputFileName;
long originalFileSize = currentFileSize;
compressionExecutor.submit(() -> {
try {
compressInternal(originalFile, originalLogFileName, originalFileSize);
}
catch (IOException e) {
exception.addSuppressed(e);
}
});
}",1,0,0,0,0,0,0,0,0,8,3,13,0,0,0,0,10,6,0,0,3,0.6,8,5
1279_34,34,34,Path originalFile = currentOutputFile;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,6,0,0,1,0.49,9,6
1279_35,35,35,LogFileName originalLogFileName = currentOutputFileName;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,6,0,0,2,0.57,10,7
1279_36,36,36,long originalFileSize = currentFileSize;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,6,0,0,1,0.46,11,8
1279_37,37,37,compressionExecutor.submit(() -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,0,0,1,0.56,12,9
1279_38,38,43,"try {
compressInternal(originalFile, originalLogFileName, originalFileSize);
}
catch (IOException e) {
exception.addSuppressed(e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,10,6,0,0,2,0.53,13,10
1279_39,39,39,"compressInternal(originalFile, originalLogFileName, originalFileSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,0,0,2,0.55,14,11
1279_41,41,41,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,0,0,0,0.43,16,13
1279_42,42,42,exception.addSuppressed(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,0,0,0,0.36,17,13
1279_48,48,48,currentOutputFile = newFile;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,10,6,0,0,1,0.5,23,15
1279_49,49,49,currentOutputFileName = newFileName;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,0,0,1,0.46,24,15
1279_50,50,50,currentOutputStream = newOutputStream;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,0,0,1,0.5,25,16
1279_51,51,51,currentFileSize = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,10,6,0,0,1,0.5,26,17
1279_53,53,61,"try {
if (Files.exists(symlink)) {
Files.delete(symlink);
}
Files.createSymbolicLink(symlink, newFile);
}
catch (IOException e) {
exception.addSuppressed(new IOException(""Unable to update symlink"", e));
}",0,0,0,0,1,0,0,0,0,5,2,9,0,0,1,1,10,6,0,0,0,0.44,28,19
1279_54,54,56,"if (Files.exists(symlink)) {
Files.delete(symlink);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,6,0,0,0,0.39,29,19
1279_55,55,55,Files.delete(symlink);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,0,0,0,0.38,30,20
1279_57,57,57,"Files.createSymbolicLink(symlink, newFile);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,0,0,0,0.39,32,22
1279_59,59,59,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,0,0,0,0.43,34,23
1279_60,60,60,"exception.addSuppressed(new IOException(""Unable to update symlink"", e));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,0,0,0,0.42,35,23
1279_63,63,65,"if (exception.getSuppressed().length > 0) {
throw exception;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,10,6,0,0,0,0.38,38,25
1279_64,64,64,throw exception;,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,10,6,0,0,0,0.35,39,25
1280_1,1,1,private synchronized void rollFile(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.45,51,33
1280_2,2,2,throws IOException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,1,0,0,0,0.31,50,32
1280_5,5,5,LogFileName newFileName = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,2,1,0,0,0,0.36,47,31
1280_6,6,6,Path newFile = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.4,46,30
1280_7,7,7,OutputStream newOutputStream = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.28,45,29
1280_8,8,17,"for (int i = 0; i < MAX_OPEN_NEW_LOG_ATTEMPTS; i++) {
try {
newFileName = LogFileName.generateNextLogFileName(symlink, compressionType.getExtension());
newFile = symlink.resolveSibling(newFileName.getFileName());
newOutputStream = new BufferedOutputStream(Files.newOutputStream(newFile, CREATE_NEW), MAX_BATCH_BYTES);
break;
}
catch (FileAlreadyExistsException ignore) {
}
}",0,0,1,0,0,0,0,0,0,6,2,10,0,1,0,1,2,1,0,0,1,0.49,35,22
1280_9,9,16,"try {
newFileName = LogFileName.generateNextLogFileName(symlink, compressionType.getExtension());
newFile = symlink.resolveSibling(newFileName.getFileName());
newOutputStream = new BufferedOutputStream(Files.newOutputStream(newFile, CREATE_NEW), MAX_BATCH_BYTES);
break;
}
catch (FileAlreadyExistsException ignore) {
}",0,0,0,0,1,0,0,0,0,5,1,8,0,0,0,0,2,1,0,0,1,0.49,36,22
1280_10,10,10,"newFileName = LogFileName.generateNextLogFileName(symlink, compressionType.getExtension());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,1,0.5,42,26
1280_11,11,11,newFile = symlink.resolveSibling(newFileName.getFileName());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,1,0.53,41,25
1280_12,12,12,"newOutputStream = new BufferedOutputStream(Files.newOutputStream(newFile, CREATE_NEW), MAX_BATCH_BYTES);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.37,40,24
1280_13,13,13,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,1,0,0,0,0.14,39,23
1280_15,15,15,catch (FileAlreadyExistsException ignore) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.32,37,22
1280_19,19,21,"if (newOutputStream == null) {
throw new IOException(""Could not create new a unique log file: "" + newFile);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,1,0,0,0,0.39,31,20
1280_20,20,20,"throw new IOException(""Could not create new a unique log file: "" + newFile);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,1,0,0,0,0.41,32,20
1280_23,23,23,"IOException exception = new IOException(String.format(""Unable to %s log file"", currentOutputStream == null ? ""setup initial"" : ""roll""));",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,1,0,0,0,0.38,29,19
1280_25,25,46,"if (currentOutputStream != null) {
try {
currentOutputStream.close();
}
catch (IOException e) {
exception.addSuppressed(new IOException(""Unable to close old output stream: "" + currentOutputFile, e));
}
historyManager.addFile(currentOutputFile, currentOutputFileName, currentFileSize);
if (compressionExecutor != null) {
Path originalFile = currentOutputFile;
LogFileName originalLogFileName = currentOutputFileName;
long originalFileSize = currentFileSize;
compressionExecutor.submit(() -> {
try {
compressInternal(originalFile, originalLogFileName, originalFileSize);
}
catch (IOException e) {
exception.addSuppressed(e);
}
});
}
}",1,0,0,0,0,0,0,0,0,14,4,22,0,0,1,1,2,1,0,0,0,0.39,6,4
1280_26,26,31,"try {
currentOutputStream.close();
}
catch (IOException e) {
exception.addSuppressed(new IOException(""Unable to close old output stream: "" + currentOutputFile, e));
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,2,1,0,0,0,0.38,21,14
1280_27,27,27,currentOutputStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.25,25,16
1280_29,29,29,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.3,23,15
1280_30,30,30,"exception.addSuppressed(new IOException(""Unable to close old output stream: "" + currentOutputFile, e));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.39,22,14
1280_32,32,32,"historyManager.addFile(currentOutputFile, currentOutputFileName, currentFileSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.38,20,13
1280_33,33,45,"if (compressionExecutor != null) {
Path originalFile = currentOutputFile;
LogFileName originalLogFileName = currentOutputFileName;
long originalFileSize = currentFileSize;
compressionExecutor.submit(() -> {
try {
compressInternal(originalFile, originalLogFileName, originalFileSize);
}
catch (IOException e) {
exception.addSuppressed(e);
}
});
}",1,0,0,0,0,0,0,0,0,8,3,13,0,0,0,0,2,1,0,0,0,0.39,7,4
1280_34,34,34,Path originalFile = currentOutputFile;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.41,18,11
1280_35,35,35,LogFileName originalLogFileName = currentOutputFileName;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.37,17,10
1280_36,36,36,long originalFileSize = currentFileSize;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.36,16,9
1280_37,37,37,compressionExecutor.submit(() -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.39,15,8
1280_38,38,43,"try {
compressInternal(originalFile, originalLogFileName, originalFileSize);
}
catch (IOException e) {
exception.addSuppressed(e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,2,1,0,0,0,0.37,9,4
1280_39,39,39,"compressInternal(originalFile, originalLogFileName, originalFileSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.38,13,6
1280_41,41,41,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.3,11,5
1280_42,42,42,exception.addSuppressed(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.25,10,4
1280_48,48,48,currentOutputFile = newFile;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,1,0,0,0,0.41,4,3
1280_49,49,49,currentOutputFileName = newFileName;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.38,3,2
1280_50,50,50,currentOutputStream = newOutputStream;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.3,2,1
1280_51,51,51,currentFileSize = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,0,0,0,0.33,1,0
1280_53,53,61,"try {
if (Files.exists(symlink)) {
Files.delete(symlink);
}
Files.createSymbolicLink(symlink, newFile);
}
catch (IOException e) {
exception.addSuppressed(new IOException(""Unable to update symlink"", e));
}",0,0,0,0,1,0,0,0,0,5,2,9,0,0,1,1,2,1,0,0,2,0.75,0,0
1280_54,54,56,"if (Files.exists(symlink)) {
Files.delete(symlink);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,1,0,0,1,0.64,1,0
1280_55,55,55,Files.delete(symlink);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.65,2,1
1280_57,57,57,"Files.createSymbolicLink(symlink, newFile);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.59,4,3
1280_59,59,59,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.3,6,4
1280_60,60,60,"exception.addSuppressed(new IOException(""Unable to update symlink"", e));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,2,0.74,7,4
1280_63,63,65,"if (exception.getSuppressed().length > 0) {
throw exception;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,2,1,0,0,0,0.22,10,6
1280_64,64,64,throw exception;,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,1,0,0,0,0.27,11,6
1281_1,1,1,"private void compressInternal(Path originalFile, LogFileName originalLogFileName, long originalFileSize)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,2,0.76,6,3
1281_2,2,2,throws IOException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,2,0,0,0,0.43,5,2
1281_4,4,4,tryCleanupTempFiles(symlink);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,1,0.68,3,1
1281_6,6,6,String compressionExtension = compressionType.getExtension().orElseThrow(IllegalStateException::new);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,1,0.61,1,0
1281_8,8,8,Path tempFile = originalFile.resolveSibling(TEMP_PREFIX + originalFile.getFileName() + compressionExtension);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,2,0.81,0,0
1281_9,9,16,"try (
InputStream input = Files.newInputStream(originalFile);
GZIPOutputStream gzipOutputStream = new GZIPOutputStream(Files.newOutputStream(tempFile))) {
ByteStreams.copy(input, gzipOutputStream);
}
catch (IOException e) {
throw new IOException(""Unable to compress log file"", e);
}",0,0,0,0,1,0,0,0,0,5,1,8,0,1,0,1,2,2,0,0,2,0.77,1,0
1281_10,10,10,InputStream input = Files.newInputStream(originalFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.67,2,1
1281_11,11,11,GZIPOutputStream gzipOutputStream = new GZIPOutputStream(Files.newOutputStream(tempFile))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.75,3,2
1281_12,12,12,"ByteStreams.copy(input, gzipOutputStream);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.59,4,3
1281_14,14,14,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.41,6,5
1281_15,15,15,"throw new IOException(""Unable to compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,2,0,0,2,0.76,7,5
1281_18,18,18,long compressedSize;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,1,0.68,10,7
1281_19,19,24,"try {
compressedSize = Files.size(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to get size of compress log file"", e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,1,0,1,2,2,0,0,2,0.76,11,7
1281_20,20,20,compressedSize = Files.size(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,2,0.87,12,8
1281_22,22,22,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.41,14,10
1281_23,23,23,"throw new IOException(""Unable to get size of compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,2,0,0,2,0.74,15,10
1281_26,26,26,synchronized (this) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.33,18,12
1281_27,27,35,"if (!historyManager.removeFile(originalFile)) {
try {
Files.deleteIfExists(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to delete compress log file"", e);
}
return;
}",1,0,0,0,0,0,0,0,0,5,2,9,0,0,0,1,2,2,0,0,2,0.75,19,12
1281_28,28,33,"try {
Files.deleteIfExists(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to delete compress log file"", e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,2,2,0,0,2,0.76,20,13
1281_29,29,29,Files.deleteIfExists(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.74,21,14
1281_31,31,31,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.41,23,16
1281_32,32,32,"throw new IOException(""Unable to delete compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,2,0,0,2,0.76,24,16
1281_34,34,34,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,26,18
1281_37,37,37,Path compressedFile = originalFile.resolveSibling(originalFile.getFileName() + compressionExtension);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,2,0.82,29,19
1281_39,39,39,LogFileName compressedFileName = originalLogFileName.withCompression(compressedFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,2,0.83,31,20
1281_40,40,51,"try {
Files.move(tempFile, compressedFile, ATOMIC_MOVE);
}
catch (IOException e) {
historyManager.addFile(originalFile, originalLogFileName, originalFileSize);

try {
Files.deleteIfExists(tempFile);
}
catch (IOException ignored) {
}
}",0,0,0,0,1,0,0,0,0,6,2,12,1,1,0,0,2,2,0,0,2,0.78,32,20
1281_41,41,41,"Files.move(tempFile, compressedFile, ATOMIC_MOVE);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,2,0.88,33,21
1281_43,43,43,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.41,35,23
1281_44,44,44,"historyManager.addFile(originalFile, originalLogFileName, originalFileSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,1,0.66,36,23
1281_46,46,50,"try {
Files.deleteIfExists(tempFile);
}
catch (IOException ignored) {
}",0,0,0,0,1,0,0,0,0,2,1,5,0,0,1,0,2,2,0,0,1,0.66,38,25
1281_47,47,47,Files.deleteIfExists(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.74,39,25
1281_49,49,49,catch (IOException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.41,41,27
1281_52,52,52,"historyManager.addFile(compressedFile, compressedFileName, compressedSize);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,2,2,0,0,2,0.84,44,28
1281_54,54,64,"try {
Files.deleteIfExists(originalFile);
}
catch (IOException deleteException) {
try {
Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);
}
catch (IOException ignored) {
throw new IOException(""Unable to delete original file after compression"", deleteException);
}
}",0,0,0,0,1,0,0,0,0,6,2,11,0,0,1,0,2,2,0,0,2,0.75,46,29
1281_55,55,55,Files.deleteIfExists(originalFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.7,47,29
1281_57,57,57,catch (IOException deleteException) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.44,49,31
1281_58,58,63,"try {
Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);
}
catch (IOException ignored) {
throw new IOException(""Unable to delete original file after compression"", deleteException);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,2,2,0,0,2,0.76,50,31
1281_59,59,59,"Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.68,51,32
1281_61,61,61,catch (IOException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.41,53,34
1281_62,62,62,"throw new IOException(""Unable to delete original file after compression"", deleteException);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,2,0,0,2,0.76,54,34
1282_1,1,1,"private void compressInternal(Path originalFile, LogFileName originalLogFileName, long originalFileSize)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,2,0.57,25,16
1282_2,2,2,throws IOException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,4,0,0,0,0.33,24,15
1282_4,4,4,tryCleanupTempFiles(symlink);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,0,0,1,0.51,22,14
1282_6,6,6,String compressionExtension = compressionType.getExtension().orElseThrow(IllegalStateException::new);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,0,0,0,0.36,20,13
1282_8,8,8,Path tempFile = originalFile.resolveSibling(TEMP_PREFIX + originalFile.getFileName() + compressionExtension);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,0,0,2,0.61,18,12
1282_9,9,16,"try (
InputStream input = Files.newInputStream(originalFile);
GZIPOutputStream gzipOutputStream = new GZIPOutputStream(Files.newOutputStream(tempFile))) {
ByteStreams.copy(input, gzipOutputStream);
}
catch (IOException e) {
throw new IOException(""Unable to compress log file"", e);
}",0,0,0,0,1,0,0,0,0,5,1,8,0,1,0,1,6,4,0,0,2,0.55,10,6
1282_10,10,10,InputStream input = Files.newInputStream(originalFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,0,0,2,0.59,16,10
1282_11,11,11,GZIPOutputStream gzipOutputStream = new GZIPOutputStream(Files.newOutputStream(tempFile))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.47,15,9
1282_12,12,12,"ByteStreams.copy(input, gzipOutputStream);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.4,14,8
1282_14,14,14,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.34,12,7
1282_15,15,15,"throw new IOException(""Unable to compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,4,0,0,1,0.47,11,6
1282_18,18,18,long compressedSize;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,0,0,0,0.38,8,5
1282_19,19,24,"try {
compressedSize = Files.size(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to get size of compress log file"", e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,1,0,1,6,4,0,0,1,0.48,2,1
1282_20,20,20,compressedSize = Files.size(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.55,6,3
1282_22,22,22,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.34,4,2
1282_23,23,23,"throw new IOException(""Unable to get size of compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,4,0,0,1,0.46,3,1
1282_26,26,26,synchronized (this) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,0,0,0,0.31,0,0
1282_27,27,35,"if (!historyManager.removeFile(originalFile)) {
try {
Files.deleteIfExists(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to delete compress log file"", e);
}
return;
}",1,0,0,0,0,0,0,0,0,5,2,9,0,0,0,1,6,4,0,0,5,0.74,0,0
1282_28,28,33,"try {
Files.deleteIfExists(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to delete compress log file"", e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,6,4,0,0,1,0.5,1,0
1282_29,29,29,Files.deleteIfExists(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.54,2,1
1282_31,31,31,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.34,4,3
1282_32,32,32,"throw new IOException(""Unable to delete compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,4,0,0,1,0.48,5,3
1282_34,34,34,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.18,7,5
1282_37,37,37,Path compressedFile = originalFile.resolveSibling(originalFile.getFileName() + compressionExtension);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,0,0,2,0.62,10,6
1282_39,39,39,LogFileName compressedFileName = originalLogFileName.withCompression(compressedFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,0,0,2,0.57,12,7
1282_40,40,51,"try {
Files.move(tempFile, compressedFile, ATOMIC_MOVE);
}
catch (IOException e) {
historyManager.addFile(originalFile, originalLogFileName, originalFileSize);

try {
Files.deleteIfExists(tempFile);
}
catch (IOException ignored) {
}
}",0,0,0,0,1,0,0,0,0,6,2,12,1,1,0,0,6,4,0,0,4,0.71,13,7
1282_41,41,41,"Files.move(tempFile, compressedFile, ATOMIC_MOVE);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.56,14,8
1282_43,43,43,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.34,16,10
1282_44,44,44,"historyManager.addFile(originalFile, originalLogFileName, originalFileSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,0,0,4,0.78,17,10
1282_46,46,50,"try {
Files.deleteIfExists(tempFile);
}
catch (IOException ignored) {
}",0,0,0,0,1,0,0,0,0,2,1,5,0,0,1,0,6,4,0,0,1,0.47,19,12
1282_47,47,47,Files.deleteIfExists(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.54,20,12
1282_49,49,49,catch (IOException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.31,22,14
1282_52,52,52,"historyManager.addFile(compressedFile, compressedFileName, compressedSize);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,6,4,0,0,3,0.68,25,15
1282_54,54,64,"try {
Files.deleteIfExists(originalFile);
}
catch (IOException deleteException) {
try {
Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);
}
catch (IOException ignored) {
throw new IOException(""Unable to delete original file after compression"", deleteException);
}
}",0,0,0,0,1,0,0,0,0,6,2,11,0,0,1,0,6,4,0,0,2,0.58,27,16
1282_55,55,55,Files.deleteIfExists(originalFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,2,0.64,28,16
1282_57,57,57,catch (IOException deleteException) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.37,30,18
1282_58,58,63,"try {
Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);
}
catch (IOException ignored) {
throw new IOException(""Unable to delete original file after compression"", deleteException);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,6,4,0,0,2,0.58,31,18
1282_59,59,59,"Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,2,0.62,32,19
1282_61,61,61,catch (IOException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.31,34,21
1282_62,62,62,"throw new IOException(""Unable to delete original file after compression"", deleteException);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,4,0,0,2,0.56,35,21
1283_1,1,1,"private void compressInternal(Path originalFile, LogFileName originalLogFileName, long originalFileSize)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.63,26,17
1283_2,2,2,throws IOException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,0,0.38,25,16
1283_4,4,4,tryCleanupTempFiles(symlink);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.63,23,15
1283_6,6,6,String compressionExtension = compressionType.getExtension().orElseThrow(IllegalStateException::new);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.51,21,14
1283_8,8,8,Path tempFile = originalFile.resolveSibling(TEMP_PREFIX + originalFile.getFileName() + compressionExtension);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,2,0.69,19,13
1283_9,9,16,"try (
InputStream input = Files.newInputStream(originalFile);
GZIPOutputStream gzipOutputStream = new GZIPOutputStream(Files.newOutputStream(tempFile))) {
ByteStreams.copy(input, gzipOutputStream);
}
catch (IOException e) {
throw new IOException(""Unable to compress log file"", e);
}",0,0,0,0,1,0,0,0,0,5,1,8,0,1,0,1,3,3,0,0,2,0.66,11,7
1283_10,10,10,InputStream input = Files.newInputStream(originalFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.58,17,11
1283_11,11,11,GZIPOutputStream gzipOutputStream = new GZIPOutputStream(Files.newOutputStream(tempFile))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.66,16,10
1283_12,12,12,"ByteStreams.copy(input, gzipOutputStream);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.52,15,9
1283_14,14,14,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,13,8
1283_15,15,15,"throw new IOException(""Unable to compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,2,0.64,12,7
1283_18,18,18,long compressedSize;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,1,0.58,9,6
1283_19,19,24,"try {
compressedSize = Files.size(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to get size of compress log file"", e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,1,0,1,3,3,0,0,2,0.65,3,2
1283_20,20,20,compressedSize = Files.size(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.76,7,4
1283_22,22,22,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,5,3
1283_23,23,23,"throw new IOException(""Unable to get size of compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,2,0.62,4,2
1283_26,26,26,synchronized (this) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.36,1,1
1283_27,27,35,"if (!historyManager.removeFile(originalFile)) {
try {
Files.deleteIfExists(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to delete compress log file"", e);
}
return;
}",1,0,0,0,0,0,0,0,0,5,2,9,0,0,0,1,3,3,0,0,3,0.77,0,0
1283_28,28,33,"try {
Files.deleteIfExists(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to delete compress log file"", e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,3,3,0,0,2,0.67,0,0
1283_29,29,29,Files.deleteIfExists(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.69,1,0
1283_31,31,31,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,3,2
1283_32,32,32,"throw new IOException(""Unable to delete compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,2,0.67,4,2
1283_34,34,34,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.23,6,4
1283_37,37,37,Path compressedFile = originalFile.resolveSibling(originalFile.getFileName() + compressionExtension);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,2,0.7,9,5
1283_39,39,39,LogFileName compressedFileName = originalLogFileName.withCompression(compressedFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,2,0.7,11,6
1283_40,40,51,"try {
Files.move(tempFile, compressedFile, ATOMIC_MOVE);
}
catch (IOException e) {
historyManager.addFile(originalFile, originalLogFileName, originalFileSize);

try {
Files.deleteIfExists(tempFile);
}
catch (IOException ignored) {
}
}",0,0,0,0,1,0,0,0,0,6,2,12,1,1,0,0,3,3,0,0,2,0.69,12,6
1283_41,41,41,"Files.move(tempFile, compressedFile, ATOMIC_MOVE);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.77,13,7
1283_43,43,43,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,15,9
1283_44,44,44,"historyManager.addFile(originalFile, originalLogFileName, originalFileSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.59,16,9
1283_46,46,50,"try {
Files.deleteIfExists(tempFile);
}
catch (IOException ignored) {
}",0,0,0,0,1,0,0,0,0,2,1,5,0,0,1,0,3,3,0,0,1,0.6,18,11
1283_47,47,47,Files.deleteIfExists(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.69,19,11
1283_49,49,49,catch (IOException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,21,13
1283_52,52,52,"historyManager.addFile(compressedFile, compressedFileName, compressedSize);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,3,3,0,0,2,0.74,24,14
1283_54,54,64,"try {
Files.deleteIfExists(originalFile);
}
catch (IOException deleteException) {
try {
Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);
}
catch (IOException ignored) {
throw new IOException(""Unable to delete original file after compression"", deleteException);
}
}",0,0,0,0,1,0,0,0,0,6,2,11,0,0,1,0,3,3,0,0,2,0.67,26,15
1283_55,55,55,Files.deleteIfExists(originalFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.65,27,15
1283_57,57,57,catch (IOException deleteException) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.44,29,17
1283_58,58,63,"try {
Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);
}
catch (IOException ignored) {
throw new IOException(""Unable to delete original file after compression"", deleteException);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,3,3,0,0,2,0.67,30,17
1283_59,59,59,"Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.63,31,18
1283_61,61,61,catch (IOException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,33,20
1283_62,62,62,"throw new IOException(""Unable to delete original file after compression"", deleteException);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,2,0.67,34,20
1284_1,1,1,"private void compressInternal(Path originalFile, LogFileName originalLogFileName, long originalFileSize)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,3,0.66,37,23
1284_2,2,2,throws IOException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,5,0,0,0,0.37,36,22
1284_4,4,4,tryCleanupTempFiles(symlink);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,5,0,0,2,0.58,34,21
1284_6,6,6,String compressionExtension = compressionType.getExtension().orElseThrow(IllegalStateException::new);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,5,0,0,1,0.49,32,20
1284_8,8,8,Path tempFile = originalFile.resolveSibling(TEMP_PREFIX + originalFile.getFileName() + compressionExtension);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,5,0,0,4,0.73,30,19
1284_9,9,16,"try (
InputStream input = Files.newInputStream(originalFile);
GZIPOutputStream gzipOutputStream = new GZIPOutputStream(Files.newOutputStream(tempFile))) {
ByteStreams.copy(input, gzipOutputStream);
}
catch (IOException e) {
throw new IOException(""Unable to compress log file"", e);
}",0,0,0,0,1,0,0,0,0,5,1,8,0,1,0,1,7,5,0,0,3,0.61,22,13
1284_10,10,10,InputStream input = Files.newInputStream(originalFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,5,0,0,1,0.52,28,17
1284_11,11,11,GZIPOutputStream gzipOutputStream = new GZIPOutputStream(Files.newOutputStream(tempFile))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,2,0.63,27,16
1284_12,12,12,"ByteStreams.copy(input, gzipOutputStream);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.51,26,15
1284_14,14,14,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.35,24,14
1284_15,15,15,"throw new IOException(""Unable to compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,5,0,0,2,0.56,23,13
1284_18,18,18,long compressedSize;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,5,0,0,1,0.57,20,12
1284_19,19,24,"try {
compressedSize = Files.size(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to get size of compress log file"", e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,1,0,1,7,5,0,0,3,0.62,14,8
1284_20,20,20,compressedSize = Files.size(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,3,0.74,18,10
1284_22,22,22,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.35,16,9
1284_23,23,23,"throw new IOException(""Unable to get size of compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,5,0,0,2,0.57,15,8
1284_26,26,26,synchronized (this) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,5,0,0,0,0.26,12,7
1284_27,27,35,"if (!historyManager.removeFile(originalFile)) {
try {
Files.deleteIfExists(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to delete compress log file"", e);
}
return;
}",1,0,0,0,0,0,0,0,0,5,2,9,0,0,0,1,7,5,0,0,3,0.58,3,1
1284_28,28,33,"try {
Files.deleteIfExists(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to delete compress log file"", e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,7,5,0,0,3,0.59,5,2
1284_29,29,29,Files.deleteIfExists(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,2,0.65,9,4
1284_31,31,31,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.35,7,3
1284_32,32,32,"throw new IOException(""Unable to delete compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,5,0,0,2,0.55,6,2
1284_34,34,34,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.2,4,1
1284_37,37,37,Path compressedFile = originalFile.resolveSibling(originalFile.getFileName() + compressionExtension);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,5,0,0,3,0.7,1,0
1284_39,39,39,LogFileName compressedFileName = originalLogFileName.withCompression(compressedFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,5,0,0,3,0.76,0,0
1284_40,40,51,"try {
Files.move(tempFile, compressedFile, ATOMIC_MOVE);
}
catch (IOException e) {
historyManager.addFile(originalFile, originalLogFileName, originalFileSize);

try {
Files.deleteIfExists(tempFile);
}
catch (IOException ignored) {
}
}",0,0,0,0,1,0,0,0,0,6,2,12,1,1,0,0,7,5,0,0,5,0.73,1,0
1284_41,41,41,"Files.move(tempFile, compressedFile, ATOMIC_MOVE);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,4,0.82,2,1
1284_43,43,43,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.35,4,3
1284_44,44,44,"historyManager.addFile(originalFile, originalLogFileName, originalFileSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,5,0,0,2,0.61,5,3
1284_46,46,50,"try {
Files.deleteIfExists(tempFile);
}
catch (IOException ignored) {
}",0,0,0,0,1,0,0,0,0,2,1,5,0,0,1,0,7,5,0,0,2,0.55,7,5
1284_47,47,47,Files.deleteIfExists(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,2,0.65,8,5
1284_49,49,49,catch (IOException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.35,10,7
1284_52,52,52,"historyManager.addFile(compressedFile, compressedFileName, compressedSize);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,7,5,0,0,3,0.74,13,8
1284_54,54,64,"try {
Files.deleteIfExists(originalFile);
}
catch (IOException deleteException) {
try {
Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);
}
catch (IOException ignored) {
throw new IOException(""Unable to delete original file after compression"", deleteException);
}
}",0,0,0,0,1,0,0,0,0,6,2,11,0,0,1,0,7,5,0,0,4,0.66,15,9
1284_55,55,55,Files.deleteIfExists(originalFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,1,0.55,16,9
1284_57,57,57,catch (IOException deleteException) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.37,18,11
1284_58,58,63,"try {
Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);
}
catch (IOException ignored) {
throw new IOException(""Unable to delete original file after compression"", deleteException);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,7,5,0,0,4,0.67,19,11
1284_59,59,59,"Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,3,0.69,20,12
1284_61,61,61,catch (IOException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.35,22,14
1284_62,62,62,"throw new IOException(""Unable to delete original file after compression"", deleteException);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,5,0,0,2,0.55,23,14
1285_1,1,1,"private void compressInternal(Path originalFile, LogFileName originalLogFileName, long originalFileSize)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,2,0,2,0.58,42,27
1285_2,2,2,throws IOException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,1,2,0,0,0.34,41,26
1285_4,4,4,tryCleanupTempFiles(symlink);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,1,2,0,1,0.51,39,25
1285_6,6,6,String compressionExtension = compressionType.getExtension().orElseThrow(IllegalStateException::new);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,1,2,0,0,0.38,37,24
1285_8,8,8,Path tempFile = originalFile.resolveSibling(TEMP_PREFIX + originalFile.getFileName() + compressionExtension);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,1,2,0,2,0.61,35,23
1285_9,9,16,"try (
InputStream input = Files.newInputStream(originalFile);
GZIPOutputStream gzipOutputStream = new GZIPOutputStream(Files.newOutputStream(tempFile))) {
ByteStreams.copy(input, gzipOutputStream);
}
catch (IOException e) {
throw new IOException(""Unable to compress log file"", e);
}",0,0,0,0,1,0,0,0,0,5,1,8,0,1,0,1,6,1,2,0,2,0.55,27,17
1285_10,10,10,InputStream input = Files.newInputStream(originalFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,1,2,0,2,0.6,33,21
1285_11,11,11,GZIPOutputStream gzipOutputStream = new GZIPOutputStream(Files.newOutputStream(tempFile))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,2,0,1,0.48,32,20
1285_12,12,12,"ByteStreams.copy(input, gzipOutputStream);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,2,0,0,0.4,31,19
1285_14,14,14,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,2,0,0,0.36,29,18
1285_15,15,15,"throw new IOException(""Unable to compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,1,2,0,1,0.48,28,17
1285_18,18,18,long compressedSize;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,1,2,0,0,0.38,25,16
1285_19,19,24,"try {
compressedSize = Files.size(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to get size of compress log file"", e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,1,0,1,6,1,2,0,1,0.49,19,12
1285_20,20,20,compressedSize = Files.size(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,2,0,1,0.54,23,14
1285_22,22,22,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,2,0,0,0.36,21,13
1285_23,23,23,"throw new IOException(""Unable to get size of compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,1,2,0,1,0.47,20,12
1285_26,26,26,synchronized (this) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,1,2,0,0,0.28,17,11
1285_27,27,35,"if (!historyManager.removeFile(originalFile)) {
try {
Files.deleteIfExists(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to delete compress log file"", e);
}
return;
}",1,0,0,0,0,0,0,0,0,5,2,9,0,0,0,1,6,1,2,0,4,0.68,8,5
1285_28,28,33,"try {
Files.deleteIfExists(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to delete compress log file"", e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,6,1,2,0,1,0.49,10,6
1285_29,29,29,Files.deleteIfExists(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,2,0,1,0.53,14,8
1285_31,31,31,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,2,0,0,0.36,12,7
1285_32,32,32,"throw new IOException(""Unable to delete compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,1,2,0,1,0.48,11,6
1285_34,34,34,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,1,2,0,0,0.18,9,5
1285_37,37,37,Path compressedFile = originalFile.resolveSibling(originalFile.getFileName() + compressionExtension);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,1,2,0,2,0.62,6,4
1285_39,39,39,LogFileName compressedFileName = originalLogFileName.withCompression(compressedFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,1,2,0,2,0.58,4,3
1285_40,40,51,"try {
Files.move(tempFile, compressedFile, ATOMIC_MOVE);
}
catch (IOException e) {
historyManager.addFile(originalFile, originalLogFileName, originalFileSize);

try {
Files.deleteIfExists(tempFile);
}
catch (IOException ignored) {
}
}",0,0,0,0,1,0,0,0,0,6,2,12,1,1,0,0,6,1,2,0,5,0.76,0,0
1285_41,41,41,"Files.move(tempFile, compressedFile, ATOMIC_MOVE);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,2,0,1,0.56,2,1
1285_43,43,43,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,2,0,0,0.36,0,0
1285_44,44,44,"historyManager.addFile(originalFile, originalLogFileName, originalFileSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,1,2,0,5,0.85,0,0
1285_46,46,50,"try {
Files.deleteIfExists(tempFile);
}
catch (IOException ignored) {
}",0,0,0,0,1,0,0,0,0,2,1,5,0,0,1,0,6,1,2,0,1,0.47,2,1
1285_47,47,47,Files.deleteIfExists(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,2,0,1,0.53,3,1
1285_49,49,49,catch (IOException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,2,0,0,0.33,5,3
1285_52,52,52,"historyManager.addFile(compressedFile, compressedFileName, compressedSize);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,6,1,2,0,4,0.76,8,4
1285_54,54,64,"try {
Files.deleteIfExists(originalFile);
}
catch (IOException deleteException) {
try {
Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);
}
catch (IOException ignored) {
throw new IOException(""Unable to delete original file after compression"", deleteException);
}
}",0,0,0,0,1,0,0,0,0,6,2,11,0,0,1,0,6,1,2,0,2,0.57,10,5
1285_55,55,55,Files.deleteIfExists(originalFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,2,0,2,0.64,11,5
1285_57,57,57,catch (IOException deleteException) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,2,0,0,0.35,13,7
1285_58,58,63,"try {
Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);
}
catch (IOException ignored) {
throw new IOException(""Unable to delete original file after compression"", deleteException);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,6,1,2,0,2,0.58,14,7
1285_59,59,59,"Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,2,0,2,0.62,15,8
1285_61,61,61,catch (IOException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,2,0,0,0.33,17,10
1285_62,62,62,"throw new IOException(""Unable to delete original file after compression"", deleteException);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,1,2,0,2,0.55,18,10
1286_1,1,1,"private void compressInternal(Path originalFile, LogFileName originalLogFileName, long originalFileSize)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.56,44,28
1286_2,2,2,throws IOException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,5,0,0,0,0.5,43,27
1286_4,4,4,tryCleanupTempFiles(symlink);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,5,0,0,2,0.71,41,26
1286_6,6,6,String compressionExtension = compressionType.getExtension().orElseThrow(IllegalStateException::new);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,5,0,0,0,0.49,39,25
1286_8,8,8,Path tempFile = originalFile.resolveSibling(TEMP_PREFIX + originalFile.getFileName() + compressionExtension);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,2,0.65,37,24
1286_9,9,16,"try (
InputStream input = Files.newInputStream(originalFile);
GZIPOutputStream gzipOutputStream = new GZIPOutputStream(Files.newOutputStream(tempFile))) {
ByteStreams.copy(input, gzipOutputStream);
}
catch (IOException e) {
throw new IOException(""Unable to compress log file"", e);
}",0,0,0,0,1,0,0,0,0,5,1,8,0,1,0,1,5,5,0,0,2,0.62,29,18
1286_10,10,10,InputStream input = Files.newInputStream(originalFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.51,35,22
1286_11,11,11,GZIPOutputStream gzipOutputStream = new GZIPOutputStream(Files.newOutputStream(tempFile))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.59,34,21
1286_12,12,12,"ByteStreams.copy(input, gzipOutputStream);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.39,33,20
1286_14,14,14,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.52,31,19
1286_15,15,15,"throw new IOException(""Unable to compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,5,0,0,1,0.63,30,18
1286_18,18,18,long compressedSize;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,0,0.41,27,17
1286_19,19,24,"try {
compressedSize = Files.size(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to get size of compress log file"", e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,1,0,1,5,5,0,0,2,0.67,21,13
1286_20,20,20,compressedSize = Files.size(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.67,25,15
1286_22,22,22,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.52,23,14
1286_23,23,23,"throw new IOException(""Unable to get size of compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,5,0,0,1,0.6,22,13
1286_26,26,26,synchronized (this) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,0,0.29,19,12
1286_27,27,35,"if (!historyManager.removeFile(originalFile)) {
try {
Files.deleteIfExists(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to delete compress log file"", e);
}
return;
}",1,0,0,0,0,0,0,0,0,5,2,9,0,0,0,1,5,5,0,0,3,0.74,10,6
1286_28,28,33,"try {
Files.deleteIfExists(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to delete compress log file"", e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,5,5,0,0,3,0.77,12,7
1286_29,29,29,Files.deleteIfExists(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,3,0.81,16,9
1286_31,31,31,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.52,14,8
1286_32,32,32,"throw new IOException(""Unable to delete compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,5,0,0,2,0.71,13,7
1286_34,34,34,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.23,11,6
1286_37,37,37,Path compressedFile = originalFile.resolveSibling(originalFile.getFileName() + compressionExtension);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,5,0,0,1,0.59,8,5
1286_39,39,39,LogFileName compressedFileName = originalLogFileName.withCompression(compressedFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,1,0.61,6,4
1286_40,40,51,"try {
Files.move(tempFile, compressedFile, ATOMIC_MOVE);
}
catch (IOException e) {
historyManager.addFile(originalFile, originalLogFileName, originalFileSize);

try {
Files.deleteIfExists(tempFile);
}
catch (IOException ignored) {
}
}",0,0,0,0,1,0,0,0,0,6,2,12,1,1,0,0,5,5,0,0,4,0.8,0,0
1286_41,41,41,"Files.move(tempFile, compressedFile, ATOMIC_MOVE);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,3,0.8,4,2
1286_43,43,43,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.52,2,1
1286_44,44,44,"historyManager.addFile(originalFile, originalLogFileName, originalFileSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,5,0,0,1,0.55,1,0
1286_46,46,50,"try {
Files.deleteIfExists(tempFile);
}
catch (IOException ignored) {
}",0,0,0,0,1,0,0,0,0,2,1,5,0,0,1,0,5,5,0,0,3,0.76,0,0
1286_47,47,47,Files.deleteIfExists(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,3,0.81,1,0
1286_49,49,49,catch (IOException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.46,3,2
1286_52,52,52,"historyManager.addFile(compressedFile, compressedFileName, compressedSize);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,5,5,0,0,1,0.57,6,3
1286_54,54,64,"try {
Files.deleteIfExists(originalFile);
}
catch (IOException deleteException) {
try {
Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);
}
catch (IOException ignored) {
throw new IOException(""Unable to delete original file after compression"", deleteException);
}
}",0,0,0,0,1,0,0,0,0,6,2,11,0,0,1,0,5,5,0,0,3,0.76,8,4
1286_55,55,55,Files.deleteIfExists(originalFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.69,9,4
1286_57,57,57,catch (IOException deleteException) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.64,11,6
1286_58,58,63,"try {
Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);
}
catch (IOException ignored) {
throw new IOException(""Unable to delete original file after compression"", deleteException);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,5,5,0,0,3,0.75,12,6
1286_59,59,59,"Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,3,0.73,13,7
1286_61,61,61,catch (IOException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.46,15,9
1286_62,62,62,"throw new IOException(""Unable to delete original file after compression"", deleteException);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,5,0,0,2,0.72,16,9
1287_1,1,1,"private void compressInternal(Path originalFile, LogFileName originalLogFileName, long originalFileSize)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.66,52,32
1287_2,2,2,throws IOException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,0,0.33,51,31
1287_4,4,4,tryCleanupTempFiles(symlink);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.56,49,30
1287_6,6,6,String compressionExtension = compressionType.getExtension().orElseThrow(IllegalStateException::new);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.38,47,29
1287_8,8,8,Path tempFile = originalFile.resolveSibling(TEMP_PREFIX + originalFile.getFileName() + compressionExtension);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,2,0.68,45,28
1287_9,9,16,"try (
InputStream input = Files.newInputStream(originalFile);
GZIPOutputStream gzipOutputStream = new GZIPOutputStream(Files.newOutputStream(tempFile))) {
ByteStreams.copy(input, gzipOutputStream);
}
catch (IOException e) {
throw new IOException(""Unable to compress log file"", e);
}",0,0,0,0,1,0,0,0,0,5,1,8,0,1,0,1,4,3,0,0,2,0.59,37,22
1287_10,10,10,InputStream input = Files.newInputStream(originalFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.62,43,26
1287_11,11,11,GZIPOutputStream gzipOutputStream = new GZIPOutputStream(Files.newOutputStream(tempFile))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.53,42,25
1287_12,12,12,"ByteStreams.copy(input, gzipOutputStream);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.4,41,24
1287_14,14,14,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,39,23
1287_15,15,15,"throw new IOException(""Unable to compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,1,0.52,38,22
1287_18,18,18,long compressedSize;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.43,35,21
1287_19,19,24,"try {
compressedSize = Files.size(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to get size of compress log file"", e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,1,0,1,4,3,0,0,1,0.51,29,17
1287_20,20,20,compressedSize = Files.size(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.57,33,19
1287_22,22,22,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,31,18
1287_23,23,23,"throw new IOException(""Unable to get size of compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,1,0.49,30,17
1287_26,26,26,synchronized (this) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.3,27,16
1287_27,27,35,"if (!historyManager.removeFile(originalFile)) {
try {
Files.deleteIfExists(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to delete compress log file"", e);
}
return;
}",1,0,0,0,0,0,0,0,0,5,2,9,0,0,0,1,4,3,0,0,3,0.71,18,10
1287_28,28,33,"try {
Files.deleteIfExists(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to delete compress log file"", e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,4,3,0,0,2,0.63,20,11
1287_29,29,29,Files.deleteIfExists(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.7,24,13
1287_31,31,31,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,22,12
1287_32,32,32,"throw new IOException(""Unable to delete compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,2,0.62,21,11
1287_34,34,34,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.22,19,10
1287_37,37,37,Path compressedFile = originalFile.resolveSibling(originalFile.getFileName() + compressionExtension);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,2,0.69,16,9
1287_39,39,39,LogFileName compressedFileName = originalLogFileName.withCompression(compressedFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,2,0.66,14,8
1287_40,40,51,"try {
Files.move(tempFile, compressedFile, ATOMIC_MOVE);
}
catch (IOException e) {
historyManager.addFile(originalFile, originalLogFileName, originalFileSize);

try {
Files.deleteIfExists(tempFile);
}
catch (IOException ignored) {
}
}",0,0,0,0,1,0,0,0,0,6,2,12,1,1,0,0,4,3,0,0,3,0.72,2,1
1287_41,41,41,"Files.move(tempFile, compressedFile, ATOMIC_MOVE);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.6,12,6
1287_43,43,43,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,10,5
1287_44,44,44,"historyManager.addFile(originalFile, originalLogFileName, originalFileSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,2,0.68,9,4
1287_46,46,50,"try {
Files.deleteIfExists(tempFile);
}
catch (IOException ignored) {
}",0,0,0,0,1,0,0,0,0,2,1,5,0,0,1,0,4,3,0,0,2,0.62,3,1
1287_47,47,47,Files.deleteIfExists(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.7,6,2
1287_49,49,49,catch (IOException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.33,4,1
1287_52,52,52,"historyManager.addFile(compressedFile, compressedFileName, compressedSize);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,3,0,0,1,0.55,1,0
1287_54,54,64,"try {
Files.deleteIfExists(originalFile);
}
catch (IOException deleteException) {
try {
Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);
}
catch (IOException ignored) {
throw new IOException(""Unable to delete original file after compression"", deleteException);
}
}",0,0,0,0,1,0,0,0,0,6,2,11,0,0,1,0,4,3,0,0,3,0.73,0,0
1287_55,55,55,Files.deleteIfExists(originalFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.86,1,0
1287_57,57,57,catch (IOException deleteException) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.5,3,2
1287_58,58,63,"try {
Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);
}
catch (IOException ignored) {
throw new IOException(""Unable to delete original file after compression"", deleteException);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,4,3,0,0,3,0.73,4,2
1287_59,59,59,"Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.76,5,3
1287_61,61,61,catch (IOException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.33,7,5
1287_62,62,62,"throw new IOException(""Unable to delete original file after compression"", deleteException);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,3,0.74,8,5
1288_1,1,1,"private void compressInternal(Path originalFile, LogFileName originalLogFileName, long originalFileSize)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.51,56,35
1288_2,2,2,throws IOException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,6,0,0,0,0.5,55,34
1288_4,4,4,tryCleanupTempFiles(symlink);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,6,0,0,2,0.7,53,33
1288_6,6,6,String compressionExtension = compressionType.getExtension().orElseThrow(IllegalStateException::new);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,6,0,0,0,0.47,51,32
1288_8,8,8,Path tempFile = originalFile.resolveSibling(TEMP_PREFIX + originalFile.getFileName() + compressionExtension);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,6,0,0,1,0.55,49,31
1288_9,9,16,"try (
InputStream input = Files.newInputStream(originalFile);
GZIPOutputStream gzipOutputStream = new GZIPOutputStream(Files.newOutputStream(tempFile))) {
ByteStreams.copy(input, gzipOutputStream);
}
catch (IOException e) {
throw new IOException(""Unable to compress log file"", e);
}",0,0,0,0,1,0,0,0,0,5,1,8,0,1,0,1,6,6,0,0,2,0.59,41,25
1288_10,10,10,InputStream input = Files.newInputStream(originalFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.46,47,29
1288_11,11,11,GZIPOutputStream gzipOutputStream = new GZIPOutputStream(Files.newOutputStream(tempFile))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.48,46,28
1288_12,12,12,"ByteStreams.copy(input, gzipOutputStream);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.36,45,27
1288_14,14,14,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.52,43,26
1288_15,15,15,"throw new IOException(""Unable to compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,6,0,0,1,0.6,42,25
1288_18,18,18,long compressedSize;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,6,0,0,0,0.37,39,24
1288_19,19,24,"try {
compressedSize = Files.size(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to get size of compress log file"", e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,1,0,1,6,6,0,0,2,0.64,33,20
1288_20,20,20,compressedSize = Files.size(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.55,37,22
1288_22,22,22,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.52,35,21
1288_23,23,23,"throw new IOException(""Unable to get size of compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,6,0,0,1,0.57,34,20
1288_26,26,26,synchronized (this) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,6,0,0,0,0.28,31,19
1288_27,27,35,"if (!historyManager.removeFile(originalFile)) {
try {
Files.deleteIfExists(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to delete compress log file"", e);
}
return;
}",1,0,0,0,0,0,0,0,0,5,2,9,0,0,0,1,6,6,0,0,3,0.71,22,13
1288_28,28,33,"try {
Files.deleteIfExists(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to delete compress log file"", e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,6,6,0,0,3,0.74,24,14
1288_29,29,29,Files.deleteIfExists(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,2,0.68,28,16
1288_31,31,31,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.52,26,15
1288_32,32,32,"throw new IOException(""Unable to delete compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,6,0,0,2,0.67,25,14
1288_34,34,34,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.23,23,13
1288_37,37,37,Path compressedFile = originalFile.resolveSibling(originalFile.getFileName() + compressionExtension);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,6,0,0,1,0.55,20,12
1288_39,39,39,LogFileName compressedFileName = originalLogFileName.withCompression(compressedFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,6,0,0,1,0.57,18,11
1288_40,40,51,"try {
Files.move(tempFile, compressedFile, ATOMIC_MOVE);
}
catch (IOException e) {
historyManager.addFile(originalFile, originalLogFileName, originalFileSize);

try {
Files.deleteIfExists(tempFile);
}
catch (IOException ignored) {
}
}",0,0,0,0,1,0,0,0,0,6,2,12,1,1,0,0,6,6,0,0,4,0.77,6,4
1288_41,41,41,"Files.move(tempFile, compressedFile, ATOMIC_MOVE);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,2,0.7,16,9
1288_43,43,43,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.52,14,8
1288_44,44,44,"historyManager.addFile(originalFile, originalLogFileName, originalFileSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,6,0,0,1,0.5,13,7
1288_46,46,50,"try {
Files.deleteIfExists(tempFile);
}
catch (IOException ignored) {
}",0,0,0,0,1,0,0,0,0,2,1,5,0,0,1,0,6,6,0,0,3,0.74,7,4
1288_47,47,47,Files.deleteIfExists(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,2,0.68,10,5
1288_49,49,49,catch (IOException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.47,8,4
1288_52,52,52,"historyManager.addFile(compressedFile, compressedFileName, compressedSize);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,6,6,0,0,1,0.52,5,3
1288_54,54,64,"try {
Files.deleteIfExists(originalFile);
}
catch (IOException deleteException) {
try {
Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);
}
catch (IOException ignored) {
throw new IOException(""Unable to delete original file after compression"", deleteException);
}
}",0,0,0,0,1,0,0,0,0,6,2,11,0,0,1,0,6,6,0,0,4,0.77,0,0
1288_55,55,55,Files.deleteIfExists(originalFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,2,0.64,2,1
1288_57,57,57,catch (IOException deleteException) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.64,0,0
1288_58,58,63,"try {
Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);
}
catch (IOException ignored) {
throw new IOException(""Unable to delete original file after compression"", deleteException);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,6,6,0,0,4,0.76,0,0
1288_59,59,59,"Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,3,0.68,1,0
1288_61,61,61,catch (IOException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.47,3,2
1288_62,62,62,"throw new IOException(""Unable to delete original file after compression"", deleteException);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,6,0,0,2,0.68,4,2
1289_1,1,1,"private void compressInternal(Path originalFile, LogFileName originalLogFileName, long originalFileSize)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.42,60,38
1289_2,2,2,throws IOException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,2,0,0,0.48,59,37
1289_4,4,4,tryCleanupTempFiles(symlink);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,2,0,0,0.46,57,36
1289_6,6,6,String compressionExtension = compressionType.getExtension().orElseThrow(IllegalStateException::new);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,2,2,0,0,0.42,55,35
1289_8,8,8,Path tempFile = originalFile.resolveSibling(TEMP_PREFIX + originalFile.getFileName() + compressionExtension);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,2,0,0,0.38,53,34
1289_9,9,16,"try (
InputStream input = Files.newInputStream(originalFile);
GZIPOutputStream gzipOutputStream = new GZIPOutputStream(Files.newOutputStream(tempFile))) {
ByteStreams.copy(input, gzipOutputStream);
}
catch (IOException e) {
throw new IOException(""Unable to compress log file"", e);
}",0,0,0,0,1,0,0,0,0,5,1,8,0,1,0,1,5,2,2,0,0,0.43,45,28
1289_10,10,10,InputStream input = Files.newInputStream(originalFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.28,51,32
1289_11,11,11,GZIPOutputStream gzipOutputStream = new GZIPOutputStream(Files.newOutputStream(tempFile))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.34,50,31
1289_12,12,12,"ByteStreams.copy(input, gzipOutputStream);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.3,49,30
1289_14,14,14,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.51,47,29
1289_15,15,15,"throw new IOException(""Unable to compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,2,0,0,0.49,46,28
1289_18,18,18,long compressedSize;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,2,0,0,0.36,43,27
1289_19,19,24,"try {
compressedSize = Files.size(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to get size of compress log file"", e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,1,0,1,5,2,2,0,0,0.48,37,23
1289_20,20,20,compressedSize = Files.size(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.36,41,25
1289_22,22,22,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.51,39,24
1289_23,23,23,"throw new IOException(""Unable to get size of compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,2,0,0,0.47,38,23
1289_26,26,26,synchronized (this) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,2,0,0,0.4,35,22
1289_27,27,35,"if (!historyManager.removeFile(originalFile)) {
try {
Files.deleteIfExists(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to delete compress log file"", e);
}
return;
}",1,0,0,0,0,0,0,0,0,5,2,9,0,0,0,1,5,2,2,0,1,0.58,26,16
1289_28,28,33,"try {
Files.deleteIfExists(tempFile);
}
catch (IOException e) {
throw new IOException(""Unable to delete compress log file"", e);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,5,2,2,0,1,0.59,28,17
1289_29,29,29,Files.deleteIfExists(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,1,0.52,32,19
1289_31,31,31,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.51,30,18
1289_32,32,32,"throw new IOException(""Unable to delete compress log file"", e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,2,0,1,0.58,29,17
1289_34,34,34,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.44,27,16
1289_37,37,37,Path compressedFile = originalFile.resolveSibling(originalFile.getFileName() + compressionExtension);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,2,2,0,0,0.38,24,15
1289_39,39,39,LogFileName compressedFileName = originalLogFileName.withCompression(compressedFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,2,0,0,0.41,22,14
1289_40,40,51,"try {
Files.move(tempFile, compressedFile, ATOMIC_MOVE);
}
catch (IOException e) {
historyManager.addFile(originalFile, originalLogFileName, originalFileSize);

try {
Files.deleteIfExists(tempFile);
}
catch (IOException ignored) {
}
}",0,0,0,0,1,0,0,0,0,6,2,12,1,1,0,0,5,2,2,0,2,0.59,10,7
1289_41,41,41,"Files.move(tempFile, compressedFile, ATOMIC_MOVE);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,1,0.51,20,12
1289_43,43,43,catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.51,18,11
1289_44,44,44,"historyManager.addFile(originalFile, originalLogFileName, originalFileSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,2,0,0,0.35,17,10
1289_46,46,50,"try {
Files.deleteIfExists(tempFile);
}
catch (IOException ignored) {
}",0,0,0,0,1,0,0,0,0,2,1,5,0,0,1,0,5,2,2,0,1,0.58,11,7
1289_47,47,47,Files.deleteIfExists(tempFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,1,0.52,14,8
1289_49,49,49,catch (IOException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.48,12,7
1289_52,52,52,"historyManager.addFile(compressedFile, compressedFileName, compressedSize);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,5,2,2,0,0,0.36,9,6
1289_54,54,64,"try {
Files.deleteIfExists(originalFile);
}
catch (IOException deleteException) {
try {
Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);
}
catch (IOException ignored) {
throw new IOException(""Unable to delete original file after compression"", deleteException);
}
}",0,0,0,0,1,0,0,0,0,6,2,11,0,0,1,0,5,2,2,0,2,0.63,0,0
1289_55,55,55,Files.deleteIfExists(originalFile);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,1,0.49,6,4
1289_57,57,57,catch (IOException deleteException) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,1,0.64,4,3
1289_58,58,63,"try {
Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);
}
catch (IOException ignored) {
throw new IOException(""Unable to delete original file after compression"", deleteException);
}",0,0,0,0,1,0,0,0,0,3,1,6,0,0,0,0,5,2,2,0,2,0.62,0,0
1289_59,59,59,"Files.move(originalFile, originalFile.resolveSibling(DELETED_PREFIX + originalFile.getFileName()), ATOMIC_MOVE);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,2,0.55,2,1
1289_61,61,61,catch (IOException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.48,0,0
1289_62,62,62,"throw new IOException(""Unable to delete original file after compression"", deleteException);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,2,0,1,0.59,0,0
630_1,1,1,"public static KeyStore loadKeyStore(File certificateChainFile, File privateKeyFile, Optional<String> keyPassword, boolean storeKeyWithPassword)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,3,0.65,12,7
630_2,2,2,"throws IOException, GeneralSecurityException",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,4,0,0,0,0.37,11,6
630_4,4,4,"PrivateKey key = loadPrivateKey(privateKeyFile, keyPassword);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,0,0,2,0.72,9,5
630_6,6,6,List<X509Certificate> certificateChain = readCertificateChain(certificateChainFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,1,0.55,7,4
630_7,7,9,"if (certificateChain.isEmpty()) {
throw new CertificateException(""Certificate file does not contain any certificates: "" + certificateChainFile);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,5,4,0,0,1,0.54,4,2
630_8,8,8,"throw new CertificateException(""Certificate file does not contain any certificates: "" + certificateChainFile);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,4,0,0,1,0.55,5,2
630_11,11,11,"KeyStore keyStore = KeyStore.getInstance(""JKS"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,1,0.48,2,1
630_12,12,12,"keyStore.load(null, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,0,0,1,0.46,1,0
630_14,14,14,Certificate[] certificates = certificateChain.toArray(new Certificate[0]);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,4,0,0,1,0.55,0,0
630_15,15,15,boolean foundMatchingCertificate = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,2,0.61,1,0
630_16,16,24,"for (int i = 0; i < certificates.length; i++) {
Certificate certificate = certificates[i];
if (matches(key, certificate)) {
foundMatchingCertificate = true;
certificates[i] = certificates[0];
certificates[0] = certificate;
break;
}
}",0,0,1,0,0,0,0,0,0,6,2,9,0,1,0,0,5,4,0,0,3,0.72,2,1
630_17,17,17,Certificate certificate = certificates[i];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.7,3,2
630_18,18,23,"if (matches(key, certificate)) {
foundMatchingCertificate = true;
certificates[i] = certificates[0];
certificates[0] = certificate;
break;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,5,4,0,0,3,0.73,4,3
630_19,19,19,foundMatchingCertificate = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.64,5,4
630_20,20,20,certificates[i] = certificates[0];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.58,6,5
630_21,21,21,certificates[0] = certificate;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.58,7,6
630_22,22,22,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,4,0,0,0,0.19,8,7
630_25,25,27,"if (!foundMatchingCertificate) {
throw new KeyStoreException(""Private key does not match the public key of any certificate"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,5,4,0,0,4,0.8,11,9
630_26,26,26,"throw new KeyStoreException(""Private key does not match the public key of any certificate"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,4,0,0,4,0.79,12,9
630_29,29,29,"char[] password = keyPassword.filter(value -> storeKeyWithPassword).orElse("""").toCharArray();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,1,0.47,15,11
630_30,30,30,"keyStore.setKeyEntry(""key"", key, password, certificates);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,2,0.67,16,11
630_31,31,31,return keyStore;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.52,17,12
631_1,1,1,"public static KeyStore loadKeyStore(File certificateChainFile, File privateKeyFile, Optional<String> keyPassword, boolean storeKeyWithPassword)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,3,0.65,18,13
631_2,2,2,"throws IOException, GeneralSecurityException",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,5,0,0,0,0.38,17,12
631_4,4,4,"PrivateKey key = loadPrivateKey(privateKeyFile, keyPassword);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,5,0,0,2,0.68,15,11
631_6,6,6,List<X509Certificate> certificateChain = readCertificateChain(certificateChainFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,5,0,0,1,0.56,13,10
631_7,7,9,"if (certificateChain.isEmpty()) {
throw new CertificateException(""Certificate file does not contain any certificates: "" + certificateChainFile);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,6,5,0,0,1,0.53,10,8
631_8,8,8,"throw new CertificateException(""Certificate file does not contain any certificates: "" + certificateChainFile);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,5,0,0,1,0.53,11,8
631_11,11,11,"KeyStore keyStore = KeyStore.getInstance(""JKS"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,5,0,0,1,0.49,8,7
631_12,12,12,"keyStore.load(null, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,5,0,0,1,0.43,7,6
631_14,14,14,Certificate[] certificates = certificateChain.toArray(new Certificate[0]);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,5,0,0,1,0.61,5,5
631_15,15,15,boolean foundMatchingCertificate = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.45,4,4
631_16,16,24,"for (int i = 0; i < certificates.length; i++) {
Certificate certificate = certificates[i];
if (matches(key, certificate)) {
foundMatchingCertificate = true;
certificates[i] = certificates[0];
certificates[0] = certificate;
break;
}
}",0,0,1,0,0,0,0,0,0,6,2,9,0,1,0,0,6,5,0,0,2,0.66,0,0
631_17,17,17,Certificate certificate = certificates[i];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.69,2,2
631_18,18,23,"if (matches(key, certificate)) {
foundMatchingCertificate = true;
certificates[i] = certificates[0];
certificates[0] = certificate;
break;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,6,5,0,0,2,0.64,0,0
631_19,19,19,foundMatchingCertificate = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.46,0,0
631_20,20,20,certificates[i] = certificates[0];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.65,0,0
631_21,21,21,certificates[0] = certificate;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.65,1,0
631_22,22,22,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,5,0,0,0,0.25,2,1
631_25,25,27,"if (!foundMatchingCertificate) {
throw new KeyStoreException(""Private key does not match the public key of any certificate"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,6,5,0,0,3,0.64,5,3
631_26,26,26,"throw new KeyStoreException(""Private key does not match the public key of any certificate"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,5,0,0,3,0.65,6,3
631_29,29,29,"char[] password = keyPassword.filter(value -> storeKeyWithPassword).orElse("""").toCharArray();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,5,0,0,1,0.49,9,5
631_30,30,30,"keyStore.setKeyEntry(""key"", key, password, certificates);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.63,10,5
631_31,31,31,return keyStore;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.49,11,6
1064_1,1,1,    public synchronized void merge(DecayCounter decayCounter),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.7,5,3
1064_3,3,3,"requireNonNull(decayCounter, ""decayCounter is null"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.64,3,2
1064_4,4,4,"checkArgument(decayCounter.alpha == alpha, ""Expected decayCounter to have alpha %s, but was %s"", alpha, decayCounter.alpha);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.8,2,1
1064_6,6,6,synchronized (decayCounter) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.71,0,0
1064_7,7,14,"if (landmarkInSeconds < decayCounter.landmarkInSeconds) {
rescaleToNewLandmark(decayCounter.landmarkInSeconds);
count += decayCounter.count;
}
else {
double otherRescaledCount = decayCounter.count / weight(alpha, landmarkInSeconds, decayCounter.landmarkInSeconds);
count += otherRescaledCount;
}",1,0,0,0,0,0,0,0,0,5,1,8,0,0,0,0,4,3,0,0,2,0.71,0,0
1064_8,8,8,rescaleToNewLandmark(decayCounter.landmarkInSeconds);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.67,1,0
1064_9,9,9,count += decayCounter.count;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.64,2,1
1064_11,11,11,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.27,4,3
1064_12,12,12,"double otherRescaledCount = decayCounter.count / weight(alpha, landmarkInSeconds, decayCounter.landmarkInSeconds);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,2,0.74,5,3
1064_13,13,13,count += otherRescaledCount;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.27,6,4
1065_1,1,1,    public synchronized void merge(DecayCounter decayCounter),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.65,6,4
1065_3,3,3,"requireNonNull(decayCounter, ""decayCounter is null"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.58,4,3
1065_4,4,4,"checkArgument(decayCounter.alpha == alpha, ""Expected decayCounter to have alpha %s, but was %s"", alpha, decayCounter.alpha);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.63,3,2
1065_6,6,6,synchronized (decayCounter) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.69,1,1
1065_7,7,14,"if (landmarkInSeconds < decayCounter.landmarkInSeconds) {
rescaleToNewLandmark(decayCounter.landmarkInSeconds);
count += decayCounter.count;
}
else {
double otherRescaledCount = decayCounter.count / weight(alpha, landmarkInSeconds, decayCounter.landmarkInSeconds);
count += otherRescaledCount;
}",1,0,0,0,0,0,0,0,0,5,1,8,0,0,0,0,4,3,0,0,2,0.65,0,0
1065_8,8,8,rescaleToNewLandmark(decayCounter.landmarkInSeconds);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.65,0,0
1065_9,9,9,count += decayCounter.count;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.67,1,0
1065_11,11,11,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.11,3,2
1065_12,12,12,"double otherRescaledCount = decayCounter.count / weight(alpha, landmarkInSeconds, decayCounter.landmarkInSeconds);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,2,0.65,4,2
1065_13,13,13,count += otherRescaledCount;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.32,5,3
1066_1,1,1,    public synchronized void merge(DecayCounter decayCounter),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.59,10,7
1066_3,3,3,"requireNonNull(decayCounter, ""decayCounter is null"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.52,8,6
1066_4,4,4,"checkArgument(decayCounter.alpha == alpha, ""Expected decayCounter to have alpha %s, but was %s"", alpha, decayCounter.alpha);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,1,0.58,7,5
1066_6,6,6,synchronized (decayCounter) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,1,0.63,5,4
1066_7,7,14,"if (landmarkInSeconds < decayCounter.landmarkInSeconds) {
rescaleToNewLandmark(decayCounter.landmarkInSeconds);
count += decayCounter.count;
}
else {
double otherRescaledCount = decayCounter.count / weight(alpha, landmarkInSeconds, decayCounter.landmarkInSeconds);
count += otherRescaledCount;
}",1,0,0,0,0,0,0,0,0,5,1,8,0,0,0,0,3,2,0,0,2,0.6,0,0
1066_8,8,8,rescaleToNewLandmark(decayCounter.landmarkInSeconds);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.59,3,2
1066_9,9,9,count += decayCounter.count;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.62,2,1
1066_11,11,11,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.1,0,0
1066_12,12,12,"double otherRescaledCount = decayCounter.count / weight(alpha, landmarkInSeconds, decayCounter.landmarkInSeconds);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,2,0.6,0,0
1066_13,13,13,count += otherRescaledCount;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.33,1,0
1067_1,1,1,    private void rescaleToNewLandmark(long newLandMarkInSeconds),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,3,0.51,1,0
1067_3,3,3,"count = count / weight(alpha, newLandMarkInSeconds, landmarkInSeconds);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,3,0.61,0,0
1067_4,4,4,landmarkInSeconds = newLandMarkInSeconds;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,2,0.47,1,0
4474_1,1,1,public static double oneMinute(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,1,0.52,1,0
4474_3,3,3,return 1.0 / TimeUnit.MINUTES.toSeconds(1);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,3,1,0,2,0.66,0,0
4475_1,1,1,public static double fiveMinutes(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,1,0.58,1,0
4475_3,3,3,return 1.0 / TimeUnit.MINUTES.toSeconds(5);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,3,1,0,3,0.67,0,0
4476_1,1,1,public static double fifteenMinutes(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,1,0.56,1,0
4476_3,3,3,return 1.0 / TimeUnit.MINUTES.toSeconds(15);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,3,1,0,3,0.7,0,0
4477_1,1,1,public static double seconds(int seconds),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,1,0,1,0.55,1,0
4477_3,3,3,return 1.0 / seconds;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,3,1,0,2,0.6,0,0
2786_1,1,1,public void merge(QuantileDigest other),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.52,3,1
2786_3,3,3,"rescaleToCommonLandmark(this, other);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.21,1,0
2786_5,5,5,"root = merge(root, other, other.root);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,1,0.6,0,0
2786_7,7,7,"max = Math.max(max, other.max);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.36,2,1
2786_8,8,8,"min = Math.min(min, other.min);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.36,3,1
2786_10,10,10,compress();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.42,5,3
2787_1,1,1,public void merge(QuantileDigest other),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.37,8,4
2787_3,3,3,"rescaleToCommonLandmark(this, other);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,0,0,0,0.34,6,3
2787_5,5,5,"root = merge(root, other, other.root);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,3,0,0,0,0.45,4,2
2787_7,7,7,"max = Math.max(max, other.max);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,0,0,0,0.35,2,1
2787_8,8,8,"min = Math.min(min, other.min);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,0,0,0,0.34,1,0
2787_10,10,10,compress();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,0,0,1,0.72,0,0
2788_1,1,2,"@VisibleForTesting
void compress()",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,4,2,0,0,0.36,4,2
2788_4,4,4,double bound = Math.floor(weightedCount / calculateCompressionFactor());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,4,2,0,1,0.58,2,1
2788_6,6,6,"postOrderTraversal(root, node -> {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,4,2,0,0,0.43,0,0
2788_7,7,7,int left = lefts[node];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,4,2,0,0,0.51,0,0
2788_8,8,8,int right = rights[node];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,4,2,0,0,0.48,1,0
2788_10,10,12,"if (left == -1 && right == -1) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,4,2,0,0,0.44,3,2
2788_11,11,11,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,4,2,0,0,0.27,4,2
2788_14,14,14,double leftCount = (left == -1) ? 0.0 : counts[left];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,4,2,0,1,0.58,7,4
2788_15,15,15,double rightCount = (right == -1) ? 0.0 : counts[right];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,4,2,0,1,0.56,8,4
2788_17,17,17,boolean shouldCompress = (counts[node] + leftCount + rightCount) < bound;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,4,2,0,0,0.46,10,6
2788_19,19,22,"if (left != -1 && (shouldCompress || leftCount < ZERO_WEIGHT_THRESHOLD)) {
lefts[node] = tryRemove(left);
counts[node] += leftCount;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,7,4,2,0,2,0.65,12,7
2788_20,20,20,lefts[node] = tryRemove(left);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,2,0,1,0.55,13,7
2788_21,21,21,counts[node] += leftCount;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,2,0,0,0.47,14,8
2788_24,24,27,"if (right != -1 && (shouldCompress || rightCount < ZERO_WEIGHT_THRESHOLD)) {
rights[node] = tryRemove(right);
counts[node] += rightCount;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,7,4,2,0,2,0.64,17,10
2788_25,25,25,rights[node] = tryRemove(right);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,2,0,1,0.53,18,10
2788_26,26,26,counts[node] += rightCount;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,2,0,0,0.43,19,11
2788_29,29,29,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,4,2,0,0,0.27,22,13
2788_32,32,34,"if (root != -1 && counts[root] < ZERO_WEIGHT_THRESHOLD) {
root = tryRemove(root);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,7,4,2,0,2,0.68,25,14
2788_33,33,33,root = tryRemove(root);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,2,0,1,0.55,26,14
2789_1,1,1,private void rescale(long newLandmarkInSeconds),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,3,0.47,1,0
2789_3,3,3,"double factor = weight(alpha, newLandmarkInSeconds, landmarkInSeconds);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,0,0,3,0.61,0,0
2789_4,4,4,weightedCount /= factor;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,5,0,0,1,0.57,1,0
2789_5,5,7,"for (int i = 0; i < nextNode; i++) {
counts[i] /= factor;
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,9,5,0,0,0,0.43,2,1
2789_6,6,6,counts[i] /= factor;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.45,3,2
2789_8,8,8,landmarkInSeconds = newLandmarkInSeconds;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,2,0.44,5,4
2790_1,1,1,"private void insert(long value, double count)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,2,0.54,18,12
2790_3,3,5,"if (count < ZERO_WEIGHT_THRESHOLD) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,12,9,1,0,0,0.41,14,10
2790_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.33,15,10
2790_7,7,7,long lastBranch = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,12,9,1,0,1,0.3,12,9
2790_8,8,8,int parent = -1;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,12,9,1,0,1,0.47,11,8
2790_9,9,9,int current = root;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,12,9,1,0,0,0.39,10,7
2790_11,11,41,"while (true) {
if (current == -1) {
setChild(parent, lastBranch, createLeaf(value, count));
return;
}

long currentValue = values[current];
byte currentLevel = levels[current];
if (!inSameSubtree(value, currentValue, currentLevel)) {
setChild(parent, lastBranch, makeSiblings(current, createLeaf(value, count)));
return;
}

if (currentLevel == 0 && currentValue == value) {
counts[current] += count;
weightedCount += count;
return;
}

long branch = value & getBranchMask(currentLevel);

parent = current;
lastBranch = branch;

if (branch == 0) {
current = lefts[current];
}
else {
current = rights[current];
}
}",0,1,0,0,0,0,0,0,0,19,2,31,0,0,1,0,12,9,1,0,4,0.63,0,0
2790_12,12,15,"if (current == -1) {
setChild(parent, lastBranch, createLeaf(value, count));
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,12,9,1,0,3,0.6,4,3
2790_13,13,13,"setChild(parent, lastBranch, createLeaf(value, count));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,3,0.62,6,4
2790_14,14,14,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.33,5,3
2790_17,17,17,long currentValue = values[current];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,12,9,1,0,1,0.51,2,2
2790_18,18,18,byte currentLevel = levels[current];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,9,1,0,1,0.5,1,1
2790_19,19,22,"if (!inSameSubtree(value, currentValue, currentLevel)) {
setChild(parent, lastBranch, makeSiblings(current, createLeaf(value, count)));
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,12,9,1,0,4,0.65,0,0
2790_20,20,20,"setChild(parent, lastBranch, makeSiblings(current, createLeaf(value, count)));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,3,0.59,0,0
2790_21,21,21,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.33,1,0
2790_24,24,28,"if (currentLevel == 0 && currentValue == value) {
counts[current] += count;
weightedCount += count;
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,12,9,1,0,2,0.55,4,2
2790_25,25,25,counts[current] += count;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.32,5,2
2790_26,26,26,weightedCount += count;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.33,6,3
2790_27,27,27,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.33,7,4
2790_30,30,30,long branch = value & getBranchMask(currentLevel);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,12,9,1,0,3,0.59,10,6
2790_32,32,32,parent = current;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,12,9,1,0,1,0.52,12,7
2790_33,33,33,lastBranch = branch;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,12,9,1,0,1,0.27,13,7
2790_35,35,40,"if (branch == 0) {
current = lefts[current];
}
else {
current = rights[current];
}",1,0,0,0,0,0,0,0,0,3,1,6,0,0,1,0,12,9,1,0,1,0.35,15,9
2790_36,36,36,current = lefts[current];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.34,16,9
2790_38,38,38,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.28,18,11
2790_39,39,39,current = rights[current];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.34,19,11
881_1,1,1,    private void acquirePermit(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.6,2,1
881_3,3,5,"if (counter.incrementAndGet() <= maxPermits) {
submitExecutor.execute(runNextTask);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,2,0.67,0,0
881_4,4,4,submitExecutor.execute(runNextTask);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.62,0,0
882_1,1,1,    private void releasePermit(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,1,0.6,2,1
882_3,3,5,"if (counter.getAndDecrement() > maxPermits) {
submitExecutor.execute(runNextTask);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,5,0,0,2,0.7,0,0
882_4,4,4,submitExecutor.execute(runNextTask);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,0,0,1,0.65,0,0
56_1,1,1,public void startFlashAnimation(final View flashOverlay) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.52,0,0
56_2,2,4,"if (mFlashAnim != null && mFlashAnim.isRunning()) {
mFlashAnim.cancel();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,4,1,0,2,0.65,0,0
56_3,3,3,mFlashAnim.cancel();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.59,1,0
56_5,5,6,"mFlashAnim = ObjectAnimator.ofFloat(flashOverlay, ""alpha"",
AnimationManager.FLASH_ALPHA_START, AnimationManager.FLASH_ALPHA_END);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,4,1,0,2,0.54,3,2
56_7,7,7,mFlashAnim.setDuration(AnimationManager.FLASH_DURATION);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.53,5,3
56_8,8,8,mFlashAnim.addListener(new Animator.AnimatorListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.54,6,3
56_9,9,10,"@Override
public void onAnimationStart(Animator animator) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,4,1,0,1,0.63,7,4
56_11,11,11,flashOverlay.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.36,9,6
56_14,14,15,"@Override
public void onAnimationEnd(Animator animator) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,7,4,1,0,2,0.68,12,7
56_16,16,16,flashOverlay.setAlpha(0f);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.39,14,8
56_17,17,17,flashOverlay.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.37,15,8
56_18,18,18,mFlashAnim.removeAllListeners();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.51,16,9
56_19,19,19,mFlashAnim = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.53,17,10
56_22,22,23,"@Override
public void onAnimationCancel(Animator animator) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,7,4,1,0,1,0.65,20,12
56_26,26,27,"@Override
public void onAnimationRepeat(Animator animator) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,7,4,1,0,1,0.61,24,13
56_30,30,30,mFlashAnim.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.55,28,14
57_1,1,1,public void startFlashAnimation(final View flashOverlay) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,3,0.75,3,2
57_2,2,4,"if (mFlashAnim != null && mFlashAnim.isRunning()) {
mFlashAnim.cancel();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,2,1,0,2,0.74,0,0
57_3,3,3,mFlashAnim.cancel();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.74,1,0
57_5,5,6,"mFlashAnim = ObjectAnimator.ofFloat(flashOverlay, ""alpha"",
AnimationManager.FLASH_ALPHA_START, AnimationManager.FLASH_ALPHA_END);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,3,0.78,0,0
57_7,7,7,mFlashAnim.setDuration(AnimationManager.FLASH_DURATION);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.73,2,1
57_8,8,8,mFlashAnim.addListener(new Animator.AnimatorListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,3,0.82,3,1
57_9,9,10,"@Override
public void onAnimationStart(Animator animator) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,2,0.72,4,2
57_11,11,11,flashOverlay.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.5,6,4
57_14,14,15,"@Override
public void onAnimationEnd(Animator animator) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,2,1,0,1,0.62,9,5
57_16,16,16,flashOverlay.setAlpha(0f);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.56,11,6
57_17,17,17,flashOverlay.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.51,12,6
57_18,18,18,mFlashAnim.removeAllListeners();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.69,13,7
57_19,19,19,mFlashAnim = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.73,14,8
57_22,22,23,"@Override
public void onAnimationCancel(Animator animator) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,2,1,0,1,0.61,17,10
57_26,26,27,"@Override
public void onAnimationRepeat(Animator animator) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,2,1,0,1,0.66,21,11
57_30,30,30,mFlashAnim.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,3,0.91,25,12
58_1,1,1,    public void cancelAnimations() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.62,0,0
58_2,2,4,"if (mFlashAnim != null && mFlashAnim.isRunning()) {
mFlashAnim.cancel();
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,7,4,1,0,2,0.65,0,0
58_3,3,3,mFlashAnim.cancel();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.59,1,0
58_5,5,7,"if (mCaptureAnimator != null && mCaptureAnimator.isStarted()) {
mCaptureAnimator.cancel();
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,7,4,1,0,1,0.59,3,2
58_6,6,6,mCaptureAnimator.cancel();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.6,4,2
59_1,1,1,    public void setParameters(Parameters parameters) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,11,1,0,2,0.67,0,0
59_2,2,2,if (parameters == null) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,11,1,0,3,0.76,0,0
59_3,3,3,mParameters = parameters;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,11,1,0,1,0.69,1,0
59_4,4,4,mFocusAreaSupported = CameraUtil.isFocusAreaSupported(parameters);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,11,1,0,2,0.54,2,1
59_5,5,5,mMeteringAreaSupported = CameraUtil.isMeteringAreaSupported(parameters);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,11,1,0,2,0.53,3,2
59_6,6,7,"mLockAeAwbNeeded = (CameraUtil.isAutoExposureLockSupported(mParameters) ||
CameraUtil.isAutoWhiteBalanceLockSupported(mParameters));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,16,11,1,0,2,0.56,4,3
60_1,1,1,private void setMatrix() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,14,1,0,1,0.54,3,3
60_2,2,7,"if (mPreviewRect.width() != 0 && mPreviewRect.height() != 0) {
Matrix matrix = new Matrix();
CameraUtil.prepareMatrix(matrix, mMirror, mDisplayOrientation, getPreviewRect());
matrix.invert(mMatrix);
mInitialized = true;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,17,14,1,0,2,0.63,0,0
60_3,3,3,Matrix matrix = new Matrix();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,17,14,1,0,1,0.65,1,1
60_4,4,4,"CameraUtil.prepareMatrix(matrix, mMirror, mDisplayOrientation, getPreviewRect());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,17,14,1,0,1,0.6,0,0
60_5,5,5,matrix.invert(mMatrix);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,17,14,1,0,2,0.76,0,0
60_6,6,6,mInitialized = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,14,1,0,0,0.35,1,0
61_1,1,1,    public void onShutterDown() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,4,3
61_2,2,2,if (!mInitialized) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.35,3,2
61_4,4,4,boolean autoFocusCalled = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,1,0.63,1,1
61_5,5,10,"if (needAutoFocusCall()) {
if (mState != STATE_SUCCESS && mState != STATE_FAIL) {
autoFocus();
autoFocusCalled = true;
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,1,4,3,0,0,1,0.59,0,0
61_6,6,9,"if (mState != STATE_SUCCESS && mState != STATE_FAIL) {
autoFocus();
autoFocusCalled = true;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,4,3,0,0,1,0.59,0,0
61_7,7,7,autoFocus();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.74,1,0
61_8,8,8,autoFocusCalled = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.63,2,1
61_12,12,12,if (!autoFocusCalled) lockAeAwbIfNeeded();,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.6,6,3
62_1,1,1,    public void onShutterUp() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.23,3,2
62_2,2,2,if (!mInitialized) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,0,0,0,0.33,2,1
62_4,4,9,"if (needAutoFocusCall()) {
if (mState == STATE_SUCCESS
|| mState == STATE_FAIL) {
cancelAutoFocus();
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,1,1,6,4,0,0,1,0.5,0,0
62_5,5,8,"if (mState == STATE_SUCCESS
|| mState == STATE_FAIL) {
cancelAutoFocus();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,6,4,0,0,1,0.5,0,0
62_6,6,6,|| mState == STATE_FAIL) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.4,1,0
62_7,7,7,cancelAutoFocus();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.5,2,1
62_11,11,11,unlockAeAwbIfNeeded();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,0,0,0,0.43,6,3
63_1,1,1,    public void doSnap() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,8,2,0,0,0.35,2,1
63_2,2,2,if (!mInitialized) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,16,8,2,0,0,0.32,1,0
63_4,4,10,"if (!needAutoFocusCall() || (mState == STATE_SUCCESS || mState == STATE_FAIL)) {
capture();
} else if (mState == STATE_FOCUSING) {
mState = STATE_FOCUSING_SNAP_ON_FINISH;
} else if (mState == STATE_IDLE) {
capture();
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,1,0,16,8,2,0,1,0.52,0,0
63_5,5,5,capture();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,8,2,0,0,0.32,1,0
63_6,6,6,} else if (mState == STATE_FOCUSING) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,8,2,0,0,0.49,2,1
63_7,7,7,mState = STATE_FOCUSING_SNAP_ON_FINISH;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,8,2,0,0,0.52,3,2
63_8,8,8,} else if (mState == STATE_IDLE) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,8,2,0,0,0.4,4,3
63_9,9,9,capture();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,16,8,2,0,0,0.32,5,4
64_1,1,1,    public void doSnap() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,9,2,0,0,0.36,5,4
64_2,2,2,if (!mInitialized) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,14,9,2,0,0,0.33,4,3
64_4,4,10,"if (!needAutoFocusCall() || (mState == STATE_SUCCESS || mState == STATE_FAIL)) {
capture();
} else if (mState == STATE_FOCUSING) {
mState = STATE_FOCUSING_SNAP_ON_FINISH;
} else if (mState == STATE_IDLE) {
capture();
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,1,0,14,9,2,0,2,0.6,0,0
64_5,5,5,capture();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,9,2,0,1,0.63,1,1
64_6,6,6,} else if (mState == STATE_FOCUSING) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,9,2,0,0,0.48,0,0
64_7,7,7,mState = STATE_FOCUSING_SNAP_ON_FINISH;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,9,2,0,0,0.5,0,0
64_8,8,8,} else if (mState == STATE_IDLE) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,9,2,0,0,0.4,1,0
64_9,9,9,capture();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,9,2,0,1,0.63,2,1
65_1,1,1,    public void doSnap() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,19,7,4,0,0,0.35,7,6
65_2,2,2,if (!mInitialized) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,19,7,4,0,0,0.35,6,5
65_4,4,10,"if (!needAutoFocusCall() || (mState == STATE_SUCCESS || mState == STATE_FAIL)) {
capture();
} else if (mState == STATE_FOCUSING) {
mState = STATE_FOCUSING_SNAP_ON_FINISH;
} else if (mState == STATE_IDLE) {
capture();
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,1,0,19,7,4,0,2,0.54,0,0
65_5,5,5,capture();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,19,7,4,0,0,0.32,3,3
65_6,6,6,} else if (mState == STATE_FOCUSING) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,19,7,4,0,1,0.53,2,2
65_7,7,7,mState = STATE_FOCUSING_SNAP_ON_FINISH;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,19,7,4,0,1,0.55,1,1
65_8,8,8,} else if (mState == STATE_IDLE) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,19,7,4,0,0,0.43,0,0
65_9,9,9,capture();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,19,7,4,0,0,0.32,0,0
66_1,1,1,"public void onAutoFocus(boolean focused, boolean shutterButtonPressed) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,3,0,2,0.53,1,1
66_2,2,24,"if (mState == STATE_FOCUSING_SNAP_ON_FINISH) {
if (focused) {
mState = STATE_SUCCESS;
} else {
mState = STATE_FAIL;
}
updateFocusUI();
capture();
} else if (mState == STATE_FOCUSING) {
if (focused) {
mState = STATE_SUCCESS;
} else {
mState = STATE_FAIL;
}
updateFocusUI();
if (mFocusArea != null) {
mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);
}
if (shutterButtonPressed) {
lockAeAwbIfNeeded();
}
} else if (mState == STATE_IDLE) {
}",1,0,0,0,0,0,0,0,0,17,2,23,0,0,0,0,13,9,3,0,4,0.62,0,0
66_3,3,7,"if (focused) {
mState = STATE_SUCCESS;
} else {
mState = STATE_FAIL;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,13,9,3,0,1,0.52,0,0
66_4,4,4,mState = STATE_SUCCESS;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,3,0,0,0.42,1,0
66_5,5,5,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,3,0,0,0.34,2,1
66_6,6,6,mState = STATE_FAIL;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,3,0,1,0.51,3,2
66_8,8,8,updateFocusUI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,3,0,1,0.49,5,4
66_9,9,9,capture();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,3,0,0,0.33,6,4
66_10,10,10,} else if (mState == STATE_FOCUSING) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,3,0,0,0.45,7,5
66_11,11,15,"if (focused) {
mState = STATE_SUCCESS;
} else {
mState = STATE_FAIL;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,13,9,3,0,1,0.52,8,6
66_12,12,12,mState = STATE_SUCCESS;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,3,0,0,0.42,9,7
66_13,13,13,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,3,0,0,0.34,10,8
66_14,14,14,mState = STATE_FAIL;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,3,0,1,0.51,11,9
66_16,16,16,updateFocusUI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,3,0,1,0.49,13,11
66_17,17,19,"if (mFocusArea != null) {
mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,13,9,3,0,1,0.49,14,11
66_18,18,18,"mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,3,0,1,0.48,15,12
66_20,20,22,"if (shutterButtonPressed) {
lockAeAwbIfNeeded();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,13,9,3,0,2,0.64,17,14
66_21,21,21,lockAeAwbIfNeeded();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,3,0,1,0.66,18,14
66_23,23,23,} else if (mState == STATE_IDLE) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,9,3,0,0,0.4,20,16
67_1,1,1,"public void onAutoFocus(boolean focused, boolean shutterButtonPressed) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.63,15,13
67_2,2,24,"if (mState == STATE_FOCUSING_SNAP_ON_FINISH) {
if (focused) {
mState = STATE_SUCCESS;
} else {
mState = STATE_FAIL;
}
updateFocusUI();
capture();
} else if (mState == STATE_FOCUSING) {
if (focused) {
mState = STATE_SUCCESS;
} else {
mState = STATE_FAIL;
}
updateFocusUI();
if (mFocusArea != null) {
mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);
}
if (shutterButtonPressed) {
lockAeAwbIfNeeded();
}
} else if (mState == STATE_IDLE) {
}",1,0,0,0,0,0,0,0,0,17,2,23,0,0,0,0,5,4,0,0,2,0.61,0,0
67_3,3,7,"if (focused) {
mState = STATE_SUCCESS;
} else {
mState = STATE_FAIL;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,5,4,0,0,0,0.38,9,8
67_4,4,4,mState = STATE_SUCCESS;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.26,12,10
67_5,5,5,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.26,11,9
67_6,6,6,mState = STATE_FAIL;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.25,10,8
67_8,8,8,updateFocusUI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.6,8,7
67_9,9,9,capture();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.33,7,6
67_10,10,10,} else if (mState == STATE_FOCUSING) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.41,6,5
67_11,11,15,"if (focused) {
mState = STATE_SUCCESS;
} else {
mState = STATE_FAIL;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,5,4,0,0,0,0.38,1,1
67_12,12,12,mState = STATE_SUCCESS;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.26,4,3
67_13,13,13,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.26,3,2
67_14,14,14,mState = STATE_FAIL;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.25,2,1
67_16,16,16,updateFocusUI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.6,0,0
67_17,17,19,"if (mFocusArea != null) {
mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,4,0,0,2,0.68,0,0
67_18,18,18,"mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.67,1,0
67_20,20,22,"if (shutterButtonPressed) {
lockAeAwbIfNeeded();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,4,0,0,0,0.42,3,2
67_21,21,21,lockAeAwbIfNeeded();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.38,4,2
67_23,23,23,} else if (mState == STATE_IDLE) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.33,6,4
68_1,1,1,"public void onAutoFocus(boolean focused, boolean shutterButtonPressed) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,2,0.56,19,16
68_2,2,24,"if (mState == STATE_FOCUSING_SNAP_ON_FINISH) {
if (focused) {
mState = STATE_SUCCESS;
} else {
mState = STATE_FAIL;
}
updateFocusUI();
capture();
} else if (mState == STATE_FOCUSING) {
if (focused) {
mState = STATE_SUCCESS;
} else {
mState = STATE_FAIL;
}
updateFocusUI();
if (mFocusArea != null) {
mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);
}
if (shutterButtonPressed) {
lockAeAwbIfNeeded();
}
} else if (mState == STATE_IDLE) {
}",1,0,0,0,0,0,0,0,0,17,2,23,0,0,0,0,8,6,0,0,5,0.69,0,0
68_3,3,7,"if (focused) {
mState = STATE_SUCCESS;
} else {
mState = STATE_FAIL;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,8,6,0,0,0,0.56,13,11
68_4,4,4,mState = STATE_SUCCESS;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.49,16,13
68_5,5,5,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.34,15,12
68_6,6,6,mState = STATE_FAIL;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.51,14,11
68_8,8,8,updateFocusUI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.41,12,10
68_9,9,9,capture();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.35,11,9
68_10,10,10,} else if (mState == STATE_FOCUSING) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.53,10,8
68_11,11,15,"if (focused) {
mState = STATE_SUCCESS;
} else {
mState = STATE_FAIL;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,8,6,0,0,0,0.56,5,4
68_12,12,12,mState = STATE_SUCCESS;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.49,8,6
68_13,13,13,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.34,7,5
68_14,14,14,mState = STATE_FAIL;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.51,6,4
68_16,16,16,updateFocusUI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.41,4,3
68_17,17,19,"if (mFocusArea != null) {
mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,6,0,0,0,0.43,1,1
68_18,18,18,"mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.43,2,1
68_20,20,22,"if (shutterButtonPressed) {
lockAeAwbIfNeeded();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,6,0,0,5,0.81,0,0
68_21,21,21,lockAeAwbIfNeeded();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,3,0.76,0,0
68_23,23,23,} else if (mState == STATE_IDLE) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.48,2,1
69_1,1,1,public void onAutoFocusMoving(boolean moving) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.36,3,1
69_2,2,2,if (!mInitialized) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.34,2,0
69_5,5,12,"if (mUI.hasFaces()) {
mUI.clearFocus();
if (mIsAFRunning) {
mUI.onFocusSucceeded(true);
mIsAFRunning = false;
}
return;
}",1,0,0,0,0,0,0,0,0,5,2,8,0,0,1,1,4,3,0,0,1,0.47,0,0
69_6,6,6,mUI.clearFocus();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,1,0
69_7,7,10,"if (mIsAFRunning) {
mUI.onFocusSucceeded(true);
mIsAFRunning = false;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,4,3,0,0,0,0.39,2,1
69_8,8,8,mUI.onFocusSucceeded(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.37,3,2
69_9,9,9,mIsAFRunning = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,4,3
69_11,11,11,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.28,6,5
69_14,14,14,if (mState != STATE_IDLE) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.28,9,6
69_16,16,22,"if (moving && !mPreviousMoving) {
mUI.onFocusStarted();
mIsAFRunning = true;
} else if (!moving) {
mUI.onFocusSucceeded(true);
mIsAFRunning = false;
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,1,1,4,3,0,0,0,0.4,11,7
69_17,17,17,mUI.onFocusStarted();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,12,7
69_18,18,18,mIsAFRunning = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.36,13,8
69_19,19,19,} else if (!moving) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,14,9
69_20,20,20,mUI.onFocusSucceeded(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.37,15,10
69_21,21,21,mIsAFRunning = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,16,11
69_24,24,24,"mHandler.sendEmptyMessageDelayed(RESET_FACE_DETECTION, RESET_FACE_DETECTION_DELAY);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,2,0.61,19,13
69_25,25,25,mPreviousMoving = moving;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.3,20,13
70_1,1,1,public void onAutoFocusMoving(boolean moving) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.31,12,7
70_2,2,2,if (!mInitialized) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,6,0,0,0,0.23,11,6
70_5,5,12,"if (mUI.hasFaces()) {
mUI.clearFocus();
if (mIsAFRunning) {
mUI.onFocusSucceeded(true);
mIsAFRunning = false;
}
return;
}",1,0,0,0,0,0,0,0,0,5,2,8,0,0,1,1,7,6,0,0,0,0.33,1,0
70_6,6,6,mUI.clearFocus();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.3,7,4
70_7,7,10,"if (mIsAFRunning) {
mUI.onFocusSucceeded(true);
mIsAFRunning = false;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,7,6,0,0,0,0.32,3,1
70_8,8,8,mUI.onFocusSucceeded(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.33,5,2
70_9,9,9,mIsAFRunning = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.3,4,1
70_11,11,11,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.23,2,0
70_14,14,14,if (mState != STATE_IDLE) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,6,0,0,0,0.3,0,0
70_16,16,22,"if (moving && !mPreviousMoving) {
mUI.onFocusStarted();
mIsAFRunning = true;
} else if (!moving) {
mUI.onFocusSucceeded(true);
mIsAFRunning = false;
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,1,1,7,6,0,0,0,0.32,2,1
70_17,17,17,mUI.onFocusStarted();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.3,3,1
70_18,18,18,mIsAFRunning = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.3,4,2
70_19,19,19,} else if (!moving) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.24,5,3
70_20,20,20,mUI.onFocusSucceeded(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.33,6,4
70_21,21,21,mIsAFRunning = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.3,7,5
70_24,24,24,"mHandler.sendEmptyMessageDelayed(RESET_FACE_DETECTION, RESET_FACE_DETECTION_DELAY);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,6,0,0,0,0.31,10,7
70_25,25,25,mPreviousMoving = moving;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.19,11,7
71_1,1,1,@TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.54,6,4
71_2,2,2,"private void initializeFocusAreas(int x, int y) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.4,5,3
71_3,3,6,"if (mFocusArea == null) {
mFocusArea = new ArrayList<Object>();
mFocusArea.add(new Area(new Rect(), 1));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,4,4,0,0,0,0.43,1,0
71_4,4,4,mFocusArea = new ArrayList<Object>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.44,3,1
71_5,5,5,"mFocusArea.add(new Area(new Rect(), 1));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.38,2,0
71_8,8,8,"calculateTapArea(x, y, 1f, ((Area) mFocusArea.get(0)).rect);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.48,0,0
72_1,1,1,@TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,8,0,0,0,0.5,6,4
72_2,2,2,"private void initializeMeteringAreas(int x, int y) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,8,0,0,1,0.56,5,3
72_3,3,6,"if (mMeteringArea == null) {
mMeteringArea = new ArrayList<Object>();
mMeteringArea.add(new Area(new Rect(), 1));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,13,8,0,0,1,0.6,1,0
72_4,4,4,mMeteringArea = new ArrayList<Object>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,8,0,0,1,0.57,3,1
72_5,5,5,"mMeteringArea.add(new Area(new Rect(), 1));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,8,0,0,1,0.57,2,0
72_8,8,8,"calculateTapArea(x, y, 1.5f, ((Area) mMeteringArea.get(0)).rect);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,13,8,0,0,1,0.65,0,0
73_1,1,1,"public void onSingleTapUp(int x, int y) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,2,0,0,0.45,5,2
73_2,2,2,if (!mInitialized || mState == STATE_FOCUSING_SNAP_ON_FINISH) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,2,2,0,0,0.43,4,1
73_4,4,5,"UsageStatistics.onEvent(UsageStatistics.COMPONENT_CAMERA,
UsageStatistics.ACTION_TOUCH_FOCUS, x + "","" + y);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,7,2,2,0,2,0.55,1,0
73_7,7,10,"if ((mState == STATE_FOCUSING ||
mState == STATE_SUCCESS || mState == STATE_FAIL)) {
cancelAutoFocus();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,7,2,2,0,2,0.54,0,0
73_8,8,8,mState == STATE_SUCCESS || mState == STATE_FAIL)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,2,0,0,0.3,1,0
73_9,9,9,cancelAutoFocus();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,2,0,2,0.71,2,1
73_11,11,11,if (mPreviewRect.width() == 0 || mPreviewRect.height() == 0) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,2,0,0,0.45,4,3
73_12,12,14,"if (mFocusAreaSupported) {
initializeFocusAreas(x, y);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,2,2,0,1,0.55,5,3
73_13,13,13,"initializeFocusAreas(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,2,0,1,0.54,6,4
73_15,15,17,"if (mMeteringAreaSupported) {
initializeMeteringAreas(x, y);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,7,2,2,0,0,0.44,8,6
73_16,16,16,"initializeMeteringAreas(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,2,0,0,0.45,9,6
73_19,19,19,"mUI.setFocusPosition(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,2,2,0,1,0.48,12,8
73_21,21,23,"if (mZslEnabled) {
mTouchAFRunning = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,2,2,0,1,0.47,14,9
73_22,22,22,mTouchAFRunning = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,2,0,1,0.48,15,9
73_25,25,25,mListener.stopFaceDetection();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,2,2,0,0,0.42,18,11
73_27,27,27,mListener.setFocusParameters();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,2,2,0,1,0.5,20,12
73_28,28,34,"if (mFocusAreaSupported) {
autoFocus();
} else {
updateFocusUI();
mHandler.removeMessages(RESET_TOUCH_FOCUS);
mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,0,0,7,2,2,0,2,0.58,21,12
73_29,29,29,autoFocus();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,2,0,1,0.62,22,13
73_30,30,30,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,2,0,0,0.24,23,14
73_31,31,31,updateFocusUI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,2,0,1,0.47,24,15
73_32,32,32,mHandler.removeMessages(RESET_TOUCH_FOCUS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,2,0,2,0.58,25,16
73_33,33,33,"mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,2,0,2,0.56,26,17
74_1,1,1,"public void onSingleTapUp(int x, int y) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.34,10,6
74_2,2,2,if (!mInitialized || mState == STATE_FOCUSING_SNAP_ON_FINISH) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,0,0,1,0.54,9,5
74_4,4,5,"UsageStatistics.onEvent(UsageStatistics.COMPONENT_CAMERA,
UsageStatistics.ACTION_TOUCH_FOCUS, x + "","" + y);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,5,3,0,0,1,0.5,6,4
74_7,7,10,"if ((mState == STATE_FOCUSING ||
mState == STATE_SUCCESS || mState == STATE_FAIL)) {
cancelAutoFocus();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,5,3,0,0,1,0.49,1,1
74_8,8,8,mState == STATE_SUCCESS || mState == STATE_FAIL)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.32,3,2
74_9,9,9,cancelAutoFocus();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.5,2,1
74_11,11,11,if (mPreviewRect.width() == 0 || mPreviewRect.height() == 0) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.35,0,0
74_12,12,14,"if (mFocusAreaSupported) {
initializeFocusAreas(x, y);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,3,0,0,3,0.83,0,0
74_13,13,13,"initializeFocusAreas(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,3,0.85,1,0
74_15,15,17,"if (mMeteringAreaSupported) {
initializeMeteringAreas(x, y);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,3,0,0,2,0.69,3,2
74_16,16,16,"initializeMeteringAreas(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,2,0.73,4,2
74_19,19,19,"mUI.setFocusPosition(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,3,0,0,1,0.5,7,4
74_21,21,23,"if (mZslEnabled) {
mTouchAFRunning = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,3,0,0,0,0.39,9,5
74_22,22,22,mTouchAFRunning = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.39,10,5
74_25,25,25,mListener.stopFaceDetection();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,3,0,0,0,0.32,13,7
74_27,27,27,mListener.setFocusParameters();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,0,0,1,0.5,15,8
74_28,28,34,"if (mFocusAreaSupported) {
autoFocus();
} else {
updateFocusUI();
mHandler.removeMessages(RESET_TOUCH_FOCUS);
mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,0,0,5,3,0,0,2,0.56,16,8
74_29,29,29,autoFocus();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.58,17,9
74_30,30,30,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.23,18,10
74_31,31,31,updateFocusUI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.52,19,11
74_32,32,32,mHandler.removeMessages(RESET_TOUCH_FOCUS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.45,20,12
74_33,33,33,"mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.47,21,13
75_1,1,1,"public void onSingleTapUp(int x, int y) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,13,8
75_2,2,2,if (!mInitialized || mState == STATE_FOCUSING_SNAP_ON_FINISH) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,1,0.5,12,7
75_4,4,5,"UsageStatistics.onEvent(UsageStatistics.COMPONENT_CAMERA,
UsageStatistics.ACTION_TOUCH_FOCUS, x + "","" + y);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,3,2,0,0,0,0.42,9,6
75_7,7,10,"if ((mState == STATE_FOCUSING ||
mState == STATE_SUCCESS || mState == STATE_FAIL)) {
cancelAutoFocus();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,3,2,0,0,0,0.44,4,3
75_8,8,8,mState == STATE_SUCCESS || mState == STATE_FAIL)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.37,6,4
75_9,9,9,cancelAutoFocus();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.4,5,3
75_11,11,11,if (mPreviewRect.width() == 0 || mPreviewRect.height() == 0) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.32,3,2
75_12,12,14,"if (mFocusAreaSupported) {
initializeFocusAreas(x, y);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,2,0.74,0,0
75_13,13,13,"initializeFocusAreas(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.78,1,0
75_15,15,17,"if (mMeteringAreaSupported) {
initializeMeteringAreas(x, y);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,2,0,0,3,0.91,0,0
75_16,16,16,"initializeMeteringAreas(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,3,0.94,1,0
75_19,19,19,"mUI.setFocusPosition(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.43,4,2
75_21,21,23,"if (mZslEnabled) {
mTouchAFRunning = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,0,0.36,6,3
75_22,22,22,mTouchAFRunning = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.37,7,3
75_25,25,25,mListener.stopFaceDetection();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.34,10,5
75_27,27,27,mListener.setFocusParameters();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.38,12,6
75_28,28,34,"if (mFocusAreaSupported) {
autoFocus();
} else {
updateFocusUI();
mHandler.removeMessages(RESET_TOUCH_FOCUS);
mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,0,0,3,2,0,0,1,0.53,13,6
75_29,29,29,autoFocus();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.41,14,7
75_30,30,30,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.21,15,8
75_31,31,31,updateFocusUI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.46,16,9
75_32,32,32,mHandler.removeMessages(RESET_TOUCH_FOCUS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.41,17,10
75_33,33,33,"mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.42,18,11
76_1,1,1,"public void onSingleTapUp(int x, int y) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.41,17,10
76_2,2,2,if (!mInitialized || mState == STATE_FOCUSING_SNAP_ON_FINISH) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,3,1,0,0,0.39,16,9
76_4,4,5,"UsageStatistics.onEvent(UsageStatistics.COMPONENT_CAMERA,
UsageStatistics.ACTION_TOUCH_FOCUS, x + "","" + y);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,7,3,1,0,2,0.55,13,8
76_7,7,10,"if ((mState == STATE_FOCUSING ||
mState == STATE_SUCCESS || mState == STATE_FAIL)) {
cancelAutoFocus();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,7,3,1,0,1,0.48,8,5
76_8,8,8,mState == STATE_SUCCESS || mState == STATE_FAIL)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.32,10,6
76_9,9,9,cancelAutoFocus();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,1,0.53,9,5
76_11,11,11,if (mPreviewRect.width() == 0 || mPreviewRect.height() == 0) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.44,7,4
76_12,12,14,"if (mFocusAreaSupported) {
initializeFocusAreas(x, y);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,3,1,0,2,0.67,4,2
76_13,13,13,"initializeFocusAreas(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,2,0.66,5,2
76_15,15,17,"if (mMeteringAreaSupported) {
initializeMeteringAreas(x, y);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,7,3,1,0,1,0.56,1,0
76_16,16,16,"initializeMeteringAreas(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,1,0.55,2,0
76_19,19,19,"mUI.setFocusPosition(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,3,1,0,2,0.65,0,0
76_21,21,23,"if (mZslEnabled) {
mTouchAFRunning = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,3,1,0,1,0.49,2,1
76_22,22,22,mTouchAFRunning = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,1,0.51,3,1
76_25,25,25,mListener.stopFaceDetection();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,3,1,0,0,0.36,6,3
76_27,27,27,mListener.setFocusParameters();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,3,1,0,2,0.61,8,4
76_28,28,34,"if (mFocusAreaSupported) {
autoFocus();
} else {
updateFocusUI();
mHandler.removeMessages(RESET_TOUCH_FOCUS);
mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,0,0,7,3,1,0,3,0.65,9,4
76_29,29,29,autoFocus();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,1,0.57,10,5
76_30,30,30,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.26,11,6
76_31,31,31,updateFocusUI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,1,0.55,12,7
76_32,32,32,mHandler.removeMessages(RESET_TOUCH_FOCUS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,2,0.58,13,8
76_33,33,33,"mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,2,0.59,14,9
77_1,1,1,"public void onSingleTapUp(int x, int y) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.38,23,13
77_2,2,2,if (!mInitialized || mState == STATE_FOCUSING_SNAP_ON_FINISH) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,6,1,0,0,0.4,22,12
77_4,4,5,"UsageStatistics.onEvent(UsageStatistics.COMPONENT_CAMERA,
UsageStatistics.ACTION_TOUCH_FOCUS, x + "","" + y);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,8,6,1,0,1,0.48,19,11
77_7,7,10,"if ((mState == STATE_FOCUSING ||
mState == STATE_SUCCESS || mState == STATE_FAIL)) {
cancelAutoFocus();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,8,6,1,0,1,0.48,14,8
77_8,8,8,mState == STATE_SUCCESS || mState == STATE_FAIL)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.33,16,9
77_9,9,9,cancelAutoFocus();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,1,0.55,15,8
77_11,11,11,if (mPreviewRect.width() == 0 || mPreviewRect.height() == 0) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.41,13,7
77_12,12,14,"if (mFocusAreaSupported) {
initializeFocusAreas(x, y);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,6,1,0,2,0.62,10,5
77_13,13,13,"initializeFocusAreas(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,2,0.6,11,5
77_15,15,17,"if (mMeteringAreaSupported) {
initializeMeteringAreas(x, y);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,8,6,1,0,2,0.62,7,3
77_16,16,16,"initializeMeteringAreas(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,2,0.6,8,3
77_19,19,19,"mUI.setFocusPosition(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,8,6,1,0,1,0.49,5,2
77_21,21,23,"if (mZslEnabled) {
mTouchAFRunning = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,8,6,1,0,0,0.43,1,0
77_22,22,22,mTouchAFRunning = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.44,2,0
77_25,25,25,mListener.stopFaceDetection();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,8,6,1,0,3,0.72,0,0
77_27,27,27,mListener.setFocusParameters();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,6,1,0,1,0.5,2,1
77_28,28,34,"if (mFocusAreaSupported) {
autoFocus();
} else {
updateFocusUI();
mHandler.removeMessages(RESET_TOUCH_FOCUS);
mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,0,0,8,6,1,0,2,0.56,3,1
77_29,29,29,autoFocus();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,1,0.59,4,2
77_30,30,30,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.25,5,3
77_31,31,31,updateFocusUI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,1,0.52,6,4
77_32,32,32,mHandler.removeMessages(RESET_TOUCH_FOCUS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,1,0.48,7,5
77_33,33,33,"mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,1,0.49,8,6
78_1,1,1,"public void onSingleTapUp(int x, int y) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.37,25,14
78_2,2,2,if (!mInitialized || mState == STATE_FOCUSING_SNAP_ON_FINISH) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,1,0,0,0.39,24,13
78_4,4,5,"UsageStatistics.onEvent(UsageStatistics.COMPONENT_CAMERA,
UsageStatistics.ACTION_TOUCH_FOCUS, x + "","" + y);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,5,3,1,0,1,0.49,21,12
78_7,7,10,"if ((mState == STATE_FOCUSING ||
mState == STATE_SUCCESS || mState == STATE_FAIL)) {
cancelAutoFocus();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,5,3,1,0,1,0.49,16,9
78_8,8,8,mState == STATE_SUCCESS || mState == STATE_FAIL)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.34,18,10
78_9,9,9,cancelAutoFocus();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.53,17,9
78_11,11,11,if (mPreviewRect.width() == 0 || mPreviewRect.height() == 0) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.35,15,8
78_12,12,14,"if (mFocusAreaSupported) {
initializeFocusAreas(x, y);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,3,1,0,2,0.74,12,6
78_13,13,13,"initializeFocusAreas(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,2,0.74,13,6
78_15,15,17,"if (mMeteringAreaSupported) {
initializeMeteringAreas(x, y);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,3,1,0,2,0.75,9,4
78_16,16,16,"initializeMeteringAreas(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,2,0.74,10,4
78_19,19,19,"mUI.setFocusPosition(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,3,1,0,2,0.67,7,3
78_21,21,23,"if (mZslEnabled) {
mTouchAFRunning = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,3,1,0,0,0.43,3,1
78_22,22,22,mTouchAFRunning = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.43,4,1
78_25,25,25,mListener.stopFaceDetection();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,3,1,0,0,0.35,1,0
78_27,27,27,mListener.setFocusParameters();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,2,0.65,0,0
78_28,28,34,"if (mFocusAreaSupported) {
autoFocus();
} else {
updateFocusUI();
mHandler.removeMessages(RESET_TOUCH_FOCUS);
mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,0,0,5,3,1,0,2,0.66,1,0
78_29,29,29,autoFocus();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.59,2,1
78_30,30,30,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.24,3,2
78_31,31,31,updateFocusUI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.6,4,3
78_32,32,32,mHandler.removeMessages(RESET_TOUCH_FOCUS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.5,5,4
78_33,33,33,"mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.51,6,5
79_1,1,1,"public void onSingleTapUp(int x, int y) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.39,30,19
79_2,2,2,if (!mInitialized || mState == STATE_FOCUSING_SNAP_ON_FINISH) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,1,0,0,0.34,29,18
79_4,4,5,"UsageStatistics.onEvent(UsageStatistics.COMPONENT_CAMERA,
UsageStatistics.ACTION_TOUCH_FOCUS, x + "","" + y);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,5,2,1,0,0,0.44,26,17
79_7,7,10,"if ((mState == STATE_FOCUSING ||
mState == STATE_SUCCESS || mState == STATE_FAIL)) {
cancelAutoFocus();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,5,2,1,0,0,0.41,21,14
79_8,8,8,mState == STATE_SUCCESS || mState == STATE_FAIL)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.38,23,15
79_9,9,9,cancelAutoFocus();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.35,22,14
79_11,11,11,if (mPreviewRect.width() == 0 || mPreviewRect.height() == 0) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.37,20,13
79_12,12,14,"if (mFocusAreaSupported) {
initializeFocusAreas(x, y);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,2,1,0,1,0.53,17,11
79_13,13,13,"initializeFocusAreas(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.52,18,11
79_15,15,17,"if (mMeteringAreaSupported) {
initializeMeteringAreas(x, y);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,2,1,0,2,0.67,14,9
79_16,16,16,"initializeMeteringAreas(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,2,0.66,15,9
79_19,19,19,"mUI.setFocusPosition(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,2,1,0,0,0.39,12,8
79_21,21,23,"if (mZslEnabled) {
mTouchAFRunning = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,2,1,0,0,0.35,8,6
79_22,22,22,mTouchAFRunning = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.37,9,6
79_25,25,25,mListener.stopFaceDetection();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,2,1,0,0,0.37,6,5
79_27,27,27,mListener.setFocusParameters();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,0,0.36,4,4
79_28,28,34,"if (mFocusAreaSupported) {
autoFocus();
} else {
updateFocusUI();
mHandler.removeMessages(RESET_TOUCH_FOCUS);
mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,0,0,5,2,1,0,2,0.58,0,0
79_29,29,29,autoFocus();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.37,2,2
79_30,30,30,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.3,1,1
79_31,31,31,updateFocusUI();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.41,0,0
79_32,32,32,mHandler.removeMessages(RESET_TOUCH_FOCUS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.46,0,0
79_33,33,33,"mHandler.sendEmptyMessageDelayed(RESET_TOUCH_FOCUS, RESET_TOUCH_FOCUS_DELAY);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.53,1,0
373_1,1,1,        private void doAlignFrame() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,0,0.47,3,2
373_2,2,2,mInputSurfaceTexture.updateTexImage();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,1,0.61,2,1
373_3,3,3,mInputSurfaceTexture.getTransformMatrix(mTransformMatrix);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,11,6,1,0,1,0.61,1,0
373_5,5,5,MosaicRenderer.setPreviewBackground(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,11,6,1,0,4,0.78,0,0
373_6,6,6,MosaicRenderer.preprocess(mTransformMatrix);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,1,0.67,1,0
373_7,7,7,MosaicRenderer.step();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,1,0.63,2,1
373_8,8,8,MosaicRenderer.setPreviewBackground(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,11,6,1,0,4,0.79,3,2
373_10,10,10,MosaicRenderer.setWarping(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,11,6,1,0,2,0.7,5,4
373_11,11,11,MosaicRenderer.transferGPUtoCPU();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,1,0.64,6,4
373_12,12,12,MosaicRenderer.updateMatrix();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,1,0.63,7,5
373_13,13,13,MosaicRenderer.step();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,1,0,1,0.63,8,6
374_1,1,1,        private void doShowPreviewFrame() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.47,4,3
374_2,2,2,mInputSurfaceTexture.updateTexImage();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,1,0.65,3,2
374_3,3,3,mInputSurfaceTexture.getTransformMatrix(mTransformMatrix);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,7,0,0,1,0.71,2,1
374_5,5,5,MosaicRenderer.setWarping(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,7,0,0,1,0.7,0,0
374_6,6,6,MosaicRenderer.preprocess(mTransformMatrix);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,2,0.81,0,0
374_7,7,7,MosaicRenderer.updateMatrix();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,1,0.72,1,0
374_8,8,8,MosaicRenderer.step();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,1,0.74,2,1
4884_1,1,1,"private void setTransformMatrix(int width, int height) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.48,2,1
4884_2,2,2,mMatrix = mSurfaceView.getMatrix();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.51,1,0
4884_4,4,4,"RectF previewRect = new RectF(0, 0, width, height);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,0,0,2,0.75,0,0
4884_5,5,5,mMatrix.mapRect(previewRect);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.67,1,0
4884_6,6,6,mController.onPreviewRectChanged(CameraUtil.rectFToRect(previewRect));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.64,2,1
4885_1,1,1,    public void initializeShutterButton() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,3,0.83,0,0
4885_2,2,2,mShutterButton.setImageResource(R.drawable.btn_new_shutter_panorama);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.55,0,0
4885_3,3,3,mShutterButton.setOnClickListener(new OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.57,1,0
4885_4,4,5,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.41,2,1
4885_8,8,8,mShutterButton.setOnShutterButtonListener(mController);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.6,6,3
4885_9,9,9,mShutterButton.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.59,7,3
4886_1,1,1,public boolean onBackPressed() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,1,0,1,0.49,0,0
4886_2,2,7,"if (mController.isImageCaptureIntent()) {
mController.onCaptureCancelled();
return true;
} else if (!mController.isCameraIdle()) {
return true;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,13,6,1,0,2,0.55,0,0
4886_3,3,3,mController.onCaptureCancelled();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,1,0,1,0.53,1,0
4886_4,4,4,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,13,6,1,0,0,0.27,2,1
4886_5,5,5,} else if (!mController.isCameraIdle()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,1,0,0,0.39,3,2
4886_6,6,6,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,13,6,1,0,0,0.27,4,3
4886_8,8,13,"if (mSwitcher != null && mSwitcher.showsPopup()) {
mSwitcher.closePopup();
return true;
} else {
return false;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,13,6,1,0,1,0.43,6,5
4886_9,9,9,mSwitcher.closePopup();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,1,0,1,0.48,7,5
4886_10,10,10,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,13,6,1,0,0,0.27,8,6
4886_11,11,11,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,1,0,0,0.23,9,7
4886_12,12,12,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,13,6,1,0,0,0.26,10,8
4887_1,1,1,public boolean onBackPressed() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.52,4,4
4887_2,2,7,"if (mController.isImageCaptureIntent()) {
mController.onCaptureCancelled();
return true;
} else if (!mController.isCameraIdle()) {
return true;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,4,2,1,0,0,0.36,0,0
4887_3,3,3,mController.onCaptureCancelled();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.3,2,2
4887_4,4,4,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.24,1,1
4887_5,5,5,} else if (!mController.isCameraIdle()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.36,0,0
4887_6,6,6,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.24,0,0
4887_8,8,13,"if (mSwitcher != null && mSwitcher.showsPopup()) {
mSwitcher.closePopup();
return true;
} else {
return false;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,4,2,1,0,0,0.31,2,1
4887_9,9,9,mSwitcher.closePopup();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.29,3,1
4887_10,10,10,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.24,4,2
4887_11,11,11,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.27,5,3
4887_12,12,12,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.23,6,4
1880_1,1,2,"    public void onCameraOpened(PreferenceGroup prefGroup, ComboPreferences prefs,
Camera.Parameters params, OnPreferenceChangedListener listener, MakeupLevelListener makeupListener) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.43,19,13
1880_3,3,7,"if (mPieRenderer == null) {
mPieRenderer = new PieRenderer(mActivity);
mPieRenderer.setPieListener(this);
mRenderOverlay.addRenderer(mPieRenderer);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,1,4,4,0,0,0,0.45,14,9
1880_4,4,4,mPieRenderer = new PieRenderer(mActivity);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.43,17,11
1880_5,5,5,mPieRenderer.setPieListener(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.47,16,10
1880_6,6,6,mRenderOverlay.addRenderer(mPieRenderer);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.43,15,9
1880_9,9,12,"if (mMenu == null) {
mMenu = new PhotoMenu(mActivity, this, makeupListener);
mMenu.setListener(listener);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,4,4,0,0,0,0.39,9,6
1880_10,10,10,"mMenu = new PhotoMenu(mActivity, this, makeupListener);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.38,11,7
1880_11,11,11,mMenu.setListener(listener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.42,10,6
1880_13,13,13,mMenu.initialize(prefGroup);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.35,8,5
1880_14,14,14,mMenuInitialized = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.37,7,4
1880_16,16,19,"if (mZoomRenderer == null) {
mZoomRenderer = new ZoomRenderer(mActivity);
mRenderOverlay.addRenderer(mZoomRenderer);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,4,4,0,0,0,0.4,2,1
1880_17,17,17,mZoomRenderer = new ZoomRenderer(mActivity);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.39,4,2
1880_18,18,18,mRenderOverlay.addRenderer(mZoomRenderer);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.4,3,1
1880_21,21,24,"if (mGestures == null) {
mGestures = new PreviewGestures(mActivity, this, mZoomRenderer, mPieRenderer, null);
mRenderOverlay.setGestures(mGestures);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,4,4,0,0,1,0.55,0,0
1880_22,22,22,"mGestures = new PreviewGestures(mActivity, this, mZoomRenderer, mPieRenderer, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.52,0,0
1880_23,23,23,mRenderOverlay.setGestures(mGestures);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.58,1,0
1880_25,25,25,mGestures.setPhotoMenu(mMenu);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,1,0.52,3,2
1880_27,27,27,mGestures.setZoomEnabled(params.isZoomSupported());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.5,5,3
1880_28,28,28,mGestures.setRenderOverlay(mRenderOverlay);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.51,6,3
1880_29,29,29,mRenderOverlay.requestLayout();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.38,7,4
1880_31,31,31,initializeZoom(params);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.37,9,6
1880_32,32,32,"updateOnScreenIndicators(params, prefGroup, prefs);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.36,10,6
1880_33,33,33,mActivity.setPreviewGestures(mGestures);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.55,11,7
1881_1,1,1,    public void animateCapture(final byte[] jpegData) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,3,0.72,0,0
1881_2,2,2,mActivity.updateThumbnail(jpegData);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.54,0,0
1882_1,1,1,    private void openMenu() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.43,1,1
1882_2,2,7,"if (mPieRenderer != null) {
if (mController.getCameraState() == PhotoController.FOCUSING) {
mController.cancelAutoFocus();
}
mPieRenderer.showInCenter();
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,0,0,9,6,0,0,1,0.55,0,0
1882_3,3,5,"if (mController.getCameraState() == PhotoController.FOCUSING) {
mController.cancelAutoFocus();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,9,6,0,0,1,0.53,0,0
1882_4,4,4,mController.cancelAutoFocus();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,1,0.57,1,0
1882_6,6,6,mPieRenderer.showInCenter();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.47,3,2
1883_1,1,2,"public void updateOnScreenIndicators(Camera.Parameters params,
PreferenceGroup group, ComboPreferences prefs) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,3,2,0,0,0.4,14,11
1883_3,3,3,if (params == null || group == null) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,2,0,0,0.34,13,10
1883_4,4,4,mOnScreenIndicators.updateSceneOnScreenIndicator(params.getSceneMode());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,2,0,0,0.31,12,9
1883_5,5,6,"mOnScreenIndicators.updateExposureOnScreenIndicator(params,
CameraSettings.readExposure(prefs));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,3,2,0,0,0.38,10,8
1883_7,7,7,mOnScreenIndicators.updateFlashOnScreenIndicator(params.getFlashMode());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,2,0,0,0.38,9,7
1883_8,8,8,int wbIndex = -1;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,9,3,2,0,1,0.42,8,6
1883_9,9,9,String wb = Camera.Parameters.WHITE_BALANCE_AUTO;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,3,2,0,1,0.51,7,5
1883_10,10,12,"if (Camera.Parameters.SCENE_MODE_AUTO.equals(params.getSceneMode())) {
wb = params.getWhiteBalance();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,9,3,2,0,1,0.47,4,3
1883_11,11,11,wb = params.getWhiteBalance();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,2,0,0,0.42,5,3
1883_13,13,13,ListPreference pref = group.findPreference(CameraSettings.KEY_WHITE_BALANCE);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,3,2,0,0,0.45,3,2
1883_14,14,16,"if (pref != null) {
wbIndex = pref.findIndexOfValue(wb);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,9,3,2,0,2,0.59,0,0
1883_15,15,15,wbIndex = pref.findIndexOfValue(wb);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,2,0,2,0.65,1,0
1883_17,17,17,mOnScreenIndicators.updateWBIndicator(wbIndex < 0 ? 2 : wbIndex);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,3,2,0,1,0.42,0,0
1883_18,18,18,"boolean location = RecordLocationPreference.get(prefs, CameraSettings.KEY_RECORD_LOCATION);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,3,2,0,0,0.36,1,0
1883_19,19,19,mOnScreenIndicators.updateLocationIndicator(location);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,3,2,0,0,0.3,2,1
1884_1,1,1,public boolean onBackPressed() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,1,0,1,0.49,8,5
1884_2,2,4,"if (mMenu != null && mMenu.handleBackKey()) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,13,6,1,0,1,0.41,5,3
1884_3,3,3,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,13,6,1,0,0,0.27,6,3
1884_6,6,9,"if (mPieRenderer != null && mPieRenderer.showsItems()) {
mPieRenderer.hide();
return true;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,13,6,1,0,0,0.46,0,0
1884_7,7,7,mPieRenderer.hide();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,1,0,0,0.5,2,1
1884_8,8,8,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,13,6,1,0,0,0.27,1,0
1884_10,10,15,"if (mController.isImageCaptureIntent()) {
mController.onCaptureCancelled();
return true;
} else if (!mController.isCameraIdle()) {
return true;
} ",1,0,0,0,0,0,0,0,0,5,1,6,0,0,0,0,13,6,1,0,2,0.55,0,0
1884_11,11,11,mController.onCaptureCancelled();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,1,0,1,0.53,1,0
1884_12,12,12,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,13,6,1,0,0,0.27,2,1
1884_13,13,13,} else if (!mController.isCameraIdle()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,1,0,0,0.39,3,2
1884_14,14,14,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,13,6,1,0,0,0.27,4,3
1884_15,15,15,} if (mSwitcher != null && mSwitcher.showsPopup()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,1,0,1,0.46,5,4
1884_16,16,16,mSwitcher.closePopup();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,1,0,1,0.48,6,5
1884_17,17,17,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,13,6,1,0,0,0.27,7,6
1884_18,18,18,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,1,0,0,0.23,8,7
1884_19,19,19,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,13,6,1,0,0,0.26,9,8
1885_1,1,1,    public boolean collapseCameraControls() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.33,1,1
1885_2,2,2,mSwitcher.closePopup();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.51,0,0
1885_3,3,3,boolean ret = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.32,0,0
1885_4,4,6,"if (mMenu != null) {
mMenu.removeAllView();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,4,0,0,1,0.49,1,0
1885_5,5,5,mMenu.removeAllView();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.53,2,1
1885_7,7,10,"if (mPopup != null) {
dismissAllPopup();
ret = true;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,4,4,0,0,1,0.63,4,3
1885_8,8,8,dismissAllPopup();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.75,5,3
1885_9,9,9,ret = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.31,6,4
1885_11,11,11,onShowSwitcherPopup();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.6,8,6
1885_12,12,12,mCameraControls.showRefocusToast(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.44,9,6
1885_13,13,13,return ret;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.28,10,7
634_1,1,2,"        @Override
public boolean onSingleTapUp (MotionEvent e) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,1,0.56,0,0
634_3,3,6,"if (mPie == null || !mPie.showsItems()) {
mTapListener.onSingleTapUp(null, (int) e.getX(), (int) e.getY());
return true;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,4,3,0,0,2,0.63,0,0
634_4,4,4,"mTapListener.onSingleTapUp(null, (int) e.getX(), (int) e.getY());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.53,1,0
634_5,5,5,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,2,1
634_7,7,7,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,4,3
635_1,1,1,    public boolean dispatchTouch(MotionEvent m) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,2,0.68,22,16
635_2,2,5,"if (setToFalse) {
waitUntilNextDown = false;
setToFalse = false;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,6,4,0,0,0,0.33,18,13
635_3,3,3,waitUntilNextDown = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.32,20,14
635_4,4,4,setToFalse = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.31,19,13
635_6,6,14,"if (waitUntilNextDown) {
if (MotionEvent.ACTION_UP != m.getActionMasked()
&& MotionEvent.ACTION_CANCEL != m.getActionMasked())
return true;
else {
setToFalse = true;
return true;
}
}",1,0,0,0,0,0,0,0,0,6,2,9,0,0,0,0,6,4,0,0,1,0.51,9,6
635_7,7,13,"if (MotionEvent.ACTION_UP != m.getActionMasked()
&& MotionEvent.ACTION_CANCEL != m.getActionMasked())
return true;
else {
setToFalse = true;
return true;
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,0,0,6,4,0,0,1,0.51,10,6
635_8,8,8,&& MotionEvent.ACTION_CANCEL != m.getActionMasked()),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.54,15,10
635_9,9,9,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.28,14,9
635_10,10,10,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.25,13,8
635_11,11,11,setToFalse = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.31,12,7
635_12,12,12,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.28,11,6
635_15,15,17,"if (!mEnabled) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,4,0,0,0,0.3,6,4
635_16,16,16,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.31,7,4
635_18,18,18,mCurrent = m;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.13,5,3
635_19,19,22,"if (MotionEvent.ACTION_DOWN == m.getActionMasked()) {
mMode = MODE_NONE;
mDown = MotionEvent.obtain(m);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,6,4,0,0,1,0.58,1,0
635_20,20,20,mMode = MODE_NONE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.41,3,1
635_21,21,21,mDown = MotionEvent.obtain(m);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.67,2,0
635_24,24,26,"if (mPie != null && mPie.isOpen()) {
return sendToPie(m);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,4,0,0,2,0.73,0,0
635_25,25,25,return sendToPie(m);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.58,1,0
635_28,28,30,"if (mTrackingFocus != null && mTrackingFocus.isVisible()) {
return sendToTrackingFocus(m);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,4,0,0,0,0.47,4,2
635_29,29,29,return sendToTrackingFocus(m);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.45,5,2
635_32,32,38,"if (mCaptureUI != null) {
if (mCaptureUI.isPreviewMenuBeingShown()) {
waitUntilNextDown = true;
mCaptureUI.removeFilterMenu(true);
return true;
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,1,6,4,0,0,0,0.37,8,4
635_33,33,37,"if (mCaptureUI.isPreviewMenuBeingShown()) {
waitUntilNextDown = true;
mCaptureUI.removeFilterMenu(true);
return true;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,6,4,0,0,0,0.37,9,4
635_34,34,34,waitUntilNextDown = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.3,10,5
635_35,35,35,mCaptureUI.removeFilterMenu(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.33,11,6
635_36,36,36,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.28,12,7
635_40,40,53,"if (mPhotoMenu != null) {
if (mPhotoMenu.isMenuBeingShown()) {
if (!mPhotoMenu.isMenuBeingAnimated()) {
waitUntilNextDown = true;
mPhotoMenu.closeView();
}
return true;
}
if (mPhotoMenu.isPreviewMenuBeingShown()) {
waitUntilNextDown = true;
mPhotoMenu.animateSlideOutPreviewMenu();
return true;
}
}",1,0,0,0,0,0,0,0,0,9,3,14,0,0,1,1,6,4,0,0,0,0.41,16,9
635_41,41,47,"if (mPhotoMenu.isMenuBeingShown()) {
if (!mPhotoMenu.isMenuBeingAnimated()) {
waitUntilNextDown = true;
mPhotoMenu.closeView();
}
return true;
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,0,0,6,4,0,0,0,0.38,17,9
635_42,42,45,"if (!mPhotoMenu.isMenuBeingAnimated()) {
waitUntilNextDown = true;
mPhotoMenu.closeView();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,6,4,0,0,0,0.39,18,10
635_43,43,43,waitUntilNextDown = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.3,19,11
635_44,44,44,mPhotoMenu.closeView();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.41,20,12
635_46,46,46,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.28,22,14
635_48,48,52,"if (mPhotoMenu.isPreviewMenuBeingShown()) {
waitUntilNextDown = true;
mPhotoMenu.animateSlideOutPreviewMenu();
return true;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,6,4,0,0,0,0.41,24,15
635_49,49,49,waitUntilNextDown = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.3,25,15
635_50,50,50,mPhotoMenu.animateSlideOutPreviewMenu();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.42,26,16
635_51,51,51,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.28,27,17
635_55,55,69,"if (mVideoMenu != null) {
if (mVideoMenu.isMenuBeingShown()) {
if (!mVideoMenu.isMenuBeingAnimated()) {
waitUntilNextDown = true;
mVideoMenu.closeView();
}
return true;
}

if (mVideoMenu.isPreviewMenuBeingShown()) {
waitUntilNextDown = true;
mVideoMenu.animateSlideOutPreviewMenu();
return true;
}
}",1,0,0,0,0,0,0,0,0,9,3,15,0,0,1,1,6,4,0,0,0,0.43,31,19
635_56,56,62,"if (mVideoMenu.isMenuBeingShown()) {
if (!mVideoMenu.isMenuBeingAnimated()) {
waitUntilNextDown = true;
mVideoMenu.closeView();
}
return true;
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,0,1,6,4,0,0,0,0.42,32,19
635_57,57,60,"if (!mVideoMenu.isMenuBeingAnimated()) {
waitUntilNextDown = true;
mVideoMenu.closeView();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,6,4,0,0,0,0.42,33,20
635_58,58,58,waitUntilNextDown = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.3,34,21
635_59,59,59,mVideoMenu.closeView();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.45,35,22
635_61,61,61,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.28,37,24
635_64,64,68,"if (mVideoMenu.isPreviewMenuBeingShown()) {
waitUntilNextDown = true;
mVideoMenu.animateSlideOutPreviewMenu();
return true;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,6,4,0,0,0,0.43,40,25
635_65,65,65,waitUntilNextDown = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.3,41,25
635_66,66,66,mVideoMenu.animateSlideOutPreviewMenu();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.45,42,26
635_67,67,67,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.28,43,27
635_71,71,71,mGestureDetector.onTouchEvent(m);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,6,4,0,0,2,0.73,47,29
635_72,72,82,"if (mZoom != null) {
mScale.onTouchEvent(m);
if (MotionEvent.ACTION_POINTER_DOWN == m.getActionMasked()) {
mMode = MODE_ZOOM;
if (mZoomEnabled) {
mZoom.onScaleBegin(mScale);
}
} else if (MotionEvent.ACTION_POINTER_UP == m.getActionMasked()) {
mZoom.onScaleEnd(mScale);
}
}",1,0,0,0,0,0,0,0,0,7,3,11,1,0,0,0,6,4,0,0,2,0.62,48,29
635_73,73,73,mScale.onTouchEvent(m);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,2,0.75,49,30
635_74,74,81,"if (MotionEvent.ACTION_POINTER_DOWN == m.getActionMasked()) {
mMode = MODE_ZOOM;
if (mZoomEnabled) {
mZoom.onScaleBegin(mScale);
}
} else if (MotionEvent.ACTION_POINTER_UP == m.getActionMasked()) {
mZoom.onScaleEnd(mScale);
}",1,0,0,0,0,0,0,0,0,5,2,8,0,0,0,0,6,4,0,0,1,0.57,50,31
635_75,75,75,mMode = MODE_ZOOM;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.46,51,32
635_76,76,78,"if (mZoomEnabled) {
mZoom.onScaleBegin(mScale);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,4,0,0,0,0.5,52,33
635_77,77,77,mZoom.onScaleBegin(mScale);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.51,53,34
635_79,79,79,} else if (MotionEvent.ACTION_POINTER_UP == m.getActionMasked()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.55,55,36
635_80,80,80,mZoom.onScaleEnd(mScale);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.47,56,36
635_83,83,83,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.28,59,38
636_1,1,1,    public boolean dispatchTouch(MotionEvent m) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,2,0.68,69,45
636_2,2,5,"if (setToFalse) {
waitUntilNextDown = false;
setToFalse = false;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,11,7,2,0,0,0.36,65,42
636_3,3,3,waitUntilNextDown = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.35,67,43
636_4,4,4,setToFalse = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.34,66,42
636_6,6,14,"if (waitUntilNextDown) {
if (MotionEvent.ACTION_UP != m.getActionMasked()
&& MotionEvent.ACTION_CANCEL != m.getActionMasked())
return true;
else {
setToFalse = true;
return true;
}
}",1,0,0,0,0,0,0,0,0,6,2,9,0,0,0,0,11,7,2,0,1,0.53,56,35
636_7,7,13,"if (MotionEvent.ACTION_UP != m.getActionMasked()
&& MotionEvent.ACTION_CANCEL != m.getActionMasked())
return true;
else {
setToFalse = true;
return true;
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,0,0,11,7,2,0,1,0.53,57,35
636_8,8,8,&& MotionEvent.ACTION_CANCEL != m.getActionMasked()),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,1,0.57,62,39
636_9,9,9,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.35,61,38
636_10,10,10,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.26,60,37
636_11,11,11,setToFalse = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.34,59,36
636_12,12,12,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.35,58,35
636_15,15,17,"if (!mEnabled) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,11,7,2,0,0,0.35,53,33
636_16,16,16,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.36,54,33
636_18,18,18,mCurrent = m;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.15,52,32
636_19,19,22,"if (MotionEvent.ACTION_DOWN == m.getActionMasked()) {
mMode = MODE_NONE;
mDown = MotionEvent.obtain(m);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,11,7,2,0,1,0.6,48,29
636_20,20,20,mMode = MODE_NONE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.39,50,30
636_21,21,21,mDown = MotionEvent.obtain(m);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,1,0.69,49,29
636_24,24,26,"if (mPie != null && mPie.isOpen()) {
return sendToPie(m);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,11,7,2,0,3,0.73,44,27
636_25,25,25,return sendToPie(m);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,7,2,0,2,0.69,45,27
636_28,28,30,"if (mTrackingFocus != null && mTrackingFocus.isVisible()) {
return sendToTrackingFocus(m);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,11,7,2,0,1,0.53,40,25
636_29,29,29,return sendToTrackingFocus(m);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,7,2,0,1,0.57,41,25
636_32,32,38,"if (mCaptureUI != null) {
if (mCaptureUI.isPreviewMenuBeingShown()) {
waitUntilNextDown = true;
mCaptureUI.removeFilterMenu(true);
return true;
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,1,11,7,2,0,0,0.4,32,20
636_33,33,37,"if (mCaptureUI.isPreviewMenuBeingShown()) {
waitUntilNextDown = true;
mCaptureUI.removeFilterMenu(true);
return true;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,11,7,2,0,0,0.4,33,20
636_34,34,34,waitUntilNextDown = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.33,36,22
636_35,35,35,mCaptureUI.removeFilterMenu(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.36,35,21
636_36,36,36,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.35,34,20
636_40,40,53,"if (mPhotoMenu != null) {
if (mPhotoMenu.isMenuBeingShown()) {
if (!mPhotoMenu.isMenuBeingAnimated()) {
waitUntilNextDown = true;
mPhotoMenu.closeView();
}
return true;
}
if (mPhotoMenu.isPreviewMenuBeingShown()) {
waitUntilNextDown = true;
mPhotoMenu.animateSlideOutPreviewMenu();
return true;
}
}",1,0,0,0,0,0,0,0,0,9,3,14,0,0,1,1,11,7,2,0,0,0.42,17,10
636_41,41,47,"if (mPhotoMenu.isMenuBeingShown()) {
if (!mPhotoMenu.isMenuBeingAnimated()) {
waitUntilNextDown = true;
mPhotoMenu.closeView();
}
return true;
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,0,0,11,7,2,0,0,0.4,23,14
636_42,42,45,"if (!mPhotoMenu.isMenuBeingAnimated()) {
waitUntilNextDown = true;
mPhotoMenu.closeView();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,11,7,2,0,0,0.4,25,15
636_43,43,43,waitUntilNextDown = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.33,27,16
636_44,44,44,mPhotoMenu.closeView();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.4,26,15
636_46,46,46,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.35,24,14
636_48,48,52,"if (mPhotoMenu.isPreviewMenuBeingShown()) {
waitUntilNextDown = true;
mPhotoMenu.animateSlideOutPreviewMenu();
return true;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,11,7,2,0,0,0.43,18,10
636_49,49,49,waitUntilNextDown = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.33,21,12
636_50,50,50,mPhotoMenu.animateSlideOutPreviewMenu();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.44,20,11
636_51,51,51,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.35,19,10
636_55,55,69,"if (mVideoMenu != null) {
if (mVideoMenu.isMenuBeingShown()) {
if (!mVideoMenu.isMenuBeingAnimated()) {
waitUntilNextDown = true;
mVideoMenu.closeView();
}
return true;
}

if (mVideoMenu.isPreviewMenuBeingShown()) {
waitUntilNextDown = true;
mVideoMenu.animateSlideOutPreviewMenu();
return true;
}
}",1,0,0,0,0,0,0,0,0,9,3,15,0,0,1,1,11,7,2,0,0,0.43,1,0
636_56,56,62,"if (mVideoMenu.isMenuBeingShown()) {
if (!mVideoMenu.isMenuBeingAnimated()) {
waitUntilNextDown = true;
mVideoMenu.closeView();
}
return true;
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,0,1,11,7,2,0,0,0.42,8,4
636_57,57,60,"if (!mVideoMenu.isMenuBeingAnimated()) {
waitUntilNextDown = true;
mVideoMenu.closeView();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,11,7,2,0,0,0.42,10,5
636_58,58,58,waitUntilNextDown = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.33,12,6
636_59,59,59,mVideoMenu.closeView();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.42,11,5
636_61,61,61,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.35,9,4
636_64,64,68,"if (mVideoMenu.isPreviewMenuBeingShown()) {
waitUntilNextDown = true;
mVideoMenu.animateSlideOutPreviewMenu();
return true;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,11,7,2,0,0,0.44,2,0
636_65,65,65,waitUntilNextDown = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.33,5,2
636_66,66,66,mVideoMenu.animateSlideOutPreviewMenu();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.45,4,1
636_67,67,67,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.35,3,0
636_71,71,71,mGestureDetector.onTouchEvent(m);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,11,7,2,0,4,0.85,0,0
636_72,72,82,"if (mZoom != null) {
mScale.onTouchEvent(m);
if (MotionEvent.ACTION_POINTER_DOWN == m.getActionMasked()) {
mMode = MODE_ZOOM;
if (mZoomEnabled) {
mZoom.onScaleBegin(mScale);
}
} else if (MotionEvent.ACTION_POINTER_UP == m.getActionMasked()) {
mZoom.onScaleEnd(mScale);
}
}",1,0,0,0,0,0,0,0,0,7,3,11,1,0,0,0,11,7,2,0,3,0.64,1,0
636_73,73,73,mScale.onTouchEvent(m);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,3,0.8,2,1
636_74,74,81,"if (MotionEvent.ACTION_POINTER_DOWN == m.getActionMasked()) {
mMode = MODE_ZOOM;
if (mZoomEnabled) {
mZoom.onScaleBegin(mScale);
}
} else if (MotionEvent.ACTION_POINTER_UP == m.getActionMasked()) {
mZoom.onScaleEnd(mScale);
}",1,0,0,0,0,0,0,0,0,5,2,8,0,0,0,0,11,7,2,0,2,0.6,3,2
636_75,75,75,mMode = MODE_ZOOM;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.44,4,3
636_76,76,78,"if (mZoomEnabled) {
mZoom.onScaleBegin(mScale);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,11,7,2,0,1,0.58,5,4
636_77,77,77,mZoom.onScaleBegin(mScale);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,1,0.63,6,5
636_79,79,79,} else if (MotionEvent.ACTION_POINTER_UP == m.getActionMasked()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,1,0.56,8,7
636_80,80,80,mZoom.onScaleEnd(mScale);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,2,0,1,0.6,9,7
636_83,83,83,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,7,2,0,0,0.35,12,9
721_1,1,2,"@Override
public void onOrientationChanged(int orientation) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,11,7,1,0,2,0.57,3,3
721_3,3,3,if (orientation == ORIENTATION_UNKNOWN) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,1,0,1,0.55,2,2
721_4,4,4,int oldOrientation = mDeviceOrientation;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,11,7,1,0,1,0.53,1,1
721_5,5,5,"mDeviceOrientation = CameraUtil.roundOrientation(orientation, mDeviceOrientation);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,1,0,1,0.6,0,0
721_6,6,7,"int orientationCompensation = mDeviceOrientation
+ CameraUtil.getDisplayRotation(mActivity) % 360;",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,11,7,1,0,4,0.67,0,0
721_8,8,10,"if (mOrientationCompensation != orientationCompensation) {
mOrientationCompensation = orientationCompensation;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,11,7,1,0,2,0.73,2,1
721_9,9,9,mOrientationCompensation = orientationCompensation;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,1,0,2,0.73,3,1
721_11,11,16,"if (oldOrientation != mDeviceOrientation
&& oldOrientation != OrientationEventListener.ORIENTATION_UNKNOWN) {
mPreviewLayoutChanged = true;
if (!mOrientationLocked)
mUI.setOrientation(mDeviceOrientation, true);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,11,7,1,0,2,0.61,5,3
721_12,12,12,&& oldOrientation != OrientationEventListener.ORIENTATION_UNKNOWN) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,1,0,1,0.55,6,3
721_13,13,13,mPreviewLayoutChanged = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,1,0,1,0.51,7,4
721_14,14,15,"if (!mOrientationLocked)
mUI.setOrientation(mDeviceOrientation, true);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,11,7,1,0,1,0.57,8,5
721_15,15,15,"mUI.setOrientation(mDeviceOrientation, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,7,1,0,1,0.53,9,6
722_1,1,1,private boolean openCamera() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,4,0,1,0.54,3,2
722_2,2,2,int cameraId = CameraHolder.instance().getBackCameraId();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,1,4,0,1,0.53,2,1
722_3,3,3,if (cameraId == -1) cameraId = 0;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,1,4,0,1,0.51,1,0
722_5,5,11,"if (mCameraDevice == null) {
mCameraDevice = CameraUtil.openCamera(mActivity, cameraId,
mMainHandler, mActivity.getCameraOpenErrorCallback());
if (mCameraDevice == null) {
return false;
}
}",1,0,0,0,0,0,0,0,0,3,2,7,0,1,1,0,6,1,4,0,2,0.64,0,0
722_6,6,7,"mCameraDevice = CameraUtil.openCamera(mActivity, cameraId,
mMainHandler, mActivity.getCameraOpenErrorCallback());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,1,4,0,2,0.63,1,0
722_8,8,10,"if (mCameraDevice == null) {
return false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,1,4,0,2,0.6,3,2
722_9,9,9,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,1,4,0,0,0.3,4,2
722_12,12,12,mCameraOrientation = CameraUtil.getCameraOrientation(cameraId);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,1,4,0,1,0.64,7,4
722_13,13,13,if (cameraId == CameraHolder.instance().getFrontCameraId()) mUsingFrontCamera = true;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,1,4,0,1,0.6,8,4
722_14,14,14,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,1,4,0,0,0.32,9,5
723_1,1,2,"private boolean findBestPreviewSize(List<Size> supportedSizes, boolean need4To3,
boolean needSmaller) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,1,1,0,0,0.33,5,5
723_3,3,3,int pixelsDiff = DEFAULT_CAPTURE_PIXELS;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.37,4,4
723_4,4,4,boolean hasFound = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.24,3,3
723_5,5,22,"for (Size size : supportedSizes) {
int h = size.height;
int w = size.width;
int d = DEFAULT_CAPTURE_PIXELS - h * w;
if (needSmaller && d < 0) {
continue;
}
if (need4To3 && (h * 4 != w * 3)) {
continue;
}
d = Math.abs(d);
if (d < pixelsDiff) {
mCameraPreviewWidth = w;
mCameraPreviewHeight = h;
pixelsDiff = d;
hasFound = true;
}
}",0,0,0,1,0,0,0,0,0,13,2,18,0,1,0,0,4,1,1,0,2,0.51,0,0
723_6,6,6,int h = size.height;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.37,1,1
723_7,7,7,int w = size.width;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.33,0,0
723_8,8,8,int d = DEFAULT_CAPTURE_PIXELS - h * w;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.36,0,0
723_9,9,11,"if (needSmaller && d < 0) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,1,1,0,0,0.3,1,0
723_10,10,10,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.18,2,1
723_12,12,14,"if (need4To3 && (h * 4 != w * 3)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,1,1,0,2,0.63,4,3
723_13,13,13,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.18,5,3
723_15,15,15,d = Math.abs(d);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.4,7,5
723_16,16,21,"if (d < pixelsDiff) {
mCameraPreviewWidth = w;
mCameraPreviewHeight = h;
pixelsDiff = d;
hasFound = true;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,4,1,1,0,0,0.35,8,5
723_17,17,17,mCameraPreviewWidth = w;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.26,9,6
723_18,18,18,mCameraPreviewHeight = h;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.32,10,7
723_19,19,19,pixelsDiff = d;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.41,11,8
723_20,20,20,hasFound = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.18,12,9
723_23,23,23,return hasFound;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.18,15,11
724_1,1,1,private void setupCaptureParams(Parameters parameters) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.37,23,18
724_2,2,2,List<Size> supportedSizes = parameters.getSupportedPreviewSizes();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,0,0.27,22,17
724_3,3,9,"if (!findBestPreviewSize(supportedSizes, true, true)) {
Log.w(TAG, ""No 4:3 ratio preview size supported."");
if (!findBestPreviewSize(supportedSizes, false, true)) {
Log.w(TAG, ""Can't find a supported preview size smaller than 960x720."");
findBestPreviewSize(supportedSizes, false, false);
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,1,0,0,6,6,0,0,1,0.4,15,12
724_4,4,4,"Log.w(TAG, ""No 4:3 ratio preview size supported."");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,6,0,0,1,0.43,20,15
724_5,5,8,"if (!findBestPreviewSize(supportedSizes, false, true)) {
Log.w(TAG, ""Can't find a supported preview size smaller than 960x720."");
findBestPreviewSize(supportedSizes, false, false);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,0,0,0,6,6,0,0,1,0.4,16,12
724_6,6,6,"Log.w(TAG, ""Can't find a supported preview size smaller than 960x720."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.44,18,13
724_7,7,7,"findBestPreviewSize(supportedSizes, false, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.3,17,12
724_10,10,11,"Log.d(TAG, ""camera preview h = ""
+ mCameraPreviewHeight + "" , w = "" + mCameraPreviewWidth);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,6,0,0,1,0.48,13,11
724_12,12,12,"parameters.setPreviewSize(mCameraPreviewWidth, mCameraPreviewHeight);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,6,0,0,0,0.35,12,10
724_14,14,14,List<int[]> frameRates = parameters.getSupportedPreviewFpsRange();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,6,0,0,0,0.3,10,9
724_15,15,15,int last = frameRates.size() - 1;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,0,0.25,9,8
724_16,16,16,int minFps = (frameRates.get(last))[Parameters.PREVIEW_FPS_MIN_INDEX];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,6,0,0,0,0.3,8,7
724_17,17,17,int maxFps = (frameRates.get(last))[Parameters.PREVIEW_FPS_MAX_INDEX];,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,6,0,0,0,0.3,7,6
724_18,18,18,"parameters.setPreviewFpsRange(minFps, maxFps);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,6,0,0,0,0.32,6,5
724_19,19,19,"Log.d(TAG, ""preview fps: "" + minFps + "", "" + maxFps);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,6,0,0,1,0.47,5,4
724_21,21,21,List<String> supportedFocusModes = parameters.getSupportedFocusModes();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,6,0,0,2,0.54,3,3
724_22,22,27,"if (supportedFocusModes.indexOf(mTargetFocusMode) >= 0) {
parameters.setFocusMode(mTargetFocusMode);
} else {
Log.w(TAG, ""Cannot set the focus mode to "" + mTargetFocusMode +
"" becuase the mode is not supported."");
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,1,6,6,0,0,3,0.66,0,0
724_23,23,23,parameters.setFocusMode(mTargetFocusMode);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,2,0.59,1,1
724_24,24,24,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.23,0,0
724_25,25,26,"Log.w(TAG, ""Cannot set the focus mode to "" + mTargetFocusMode +
"" becuase the mode is not supported."");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,6,0,0,3,0.68,0,0
724_29,29,29,"parameters.set(CameraUtil.RECORDING_HINT, CameraUtil.FALSE);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,6,0,0,0,0.39,4,1
724_31,31,31,mHorizontalViewAngle = parameters.getHorizontalViewAngle();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,6,0,0,0,0.36,6,2
724_32,32,32,mVerticalViewAngle =  parameters.getVerticalViewAngle();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.36,7,2
1413_1,1,1,    protected static String getFileExtension(String requestFormat) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.45,6,3
1413_2,2,4,"String outputFormat = (requestFormat == null)
? ""jpg""
: requestFormat;",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,3,3,0,0,0,0.45,3,2
1413_5,5,5,outputFormat = outputFormat.toLowerCase();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.37,2,1
1413_6,6,8,"return (outputFormat.equals(""png"") || outputFormat.equals(""gif""))
? ""png""
: ""jpg"";",0,0,0,0,0,0,1,0,0,0,0,3,0,1,0,0,3,3,0,0,1,0.6,0,0
815_1,1,1,"    public static File getFinalSaveDirectory(Context context, Uri sourceUri) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.46,5,3
815_2,2,2,"File saveDirectory = SaveImage.getSaveDirectory(context, sourceUri);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.49,4,2
815_3,3,6,"if ((saveDirectory == null) || !saveDirectory.canWrite()) {
saveDirectory = new File(Environment.getExternalStorageDirectory(),
SaveImage.DEFAULT_SAVE_DIRECTORY);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,3,2,1,0,1,0.59,0,0
815_4,4,5,"saveDirectory = new File(Environment.getExternalStorageDirectory(),
SaveImage.DEFAULT_SAVE_DIRECTORY);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,1,0.58,1,0
815_7,7,8,"if (!saveDirectory.exists())
saveDirectory.mkdirs();",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,3,2,1,0,2,0.71,0,0
815_8,8,8,saveDirectory.mkdirs();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.57,1,0
815_9,9,9,return saveDirectory;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.53,2,1
816_1,1,2,"public static void deleteAuxFiles(ContentResolver contentResolver,
Uri srcContentUri) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,14,8,2,0,2,0.54,12,6
816_3,3,3,final String[] fullPath = new String[1];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,14,8,2,0,1,0.42,11,5
816_4,4,4,String[] queryProjection = new String[] { ImageColumns.DATA };,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0,14,8,2,0,0,0.43,10,4
816_5,5,7,"querySourceFromContentResolver(contentResolver,
srcContentUri, queryProjection,
new ContentResolverQueryCallback() {",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,14,8,2,0,1,0.49,7,3
816_8,8,9,"@Override
public void onCursorResult(Cursor cursor) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,14,8,2,0,0,0.36,5,2
816_10,10,10,fullPath[0] = cursor.getString(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,8,2,0,1,0.44,4,1
816_14,14,39,"if (fullPath[0] != null) {
File currentFile = new File(fullPath[0]);

String filename = currentFile.getName();
int firstDotPos = filename.indexOf(""."");
final String filenameNoExt = (firstDotPos == -1) ? filename :
filename.substring(0, firstDotPos);
File auxDir = getLocalAuxDirectory(currentFile);
if (auxDir.exists()) {
FilenameFilter filter = new FilenameFilter() {
@Override
public boolean accept(File dir, String name) {
if (name.startsWith(filenameNoExt + ""."")) {
return true;
} else {
return false;
}
}
};

File[] auxFiles = auxDir.listFiles(filter);
for (File file : auxFiles) {
file.delete();
}
}
}",1,0,0,0,0,0,0,0,0,13,5,26,0,0,0,0,14,8,2,0,6,0.67,0,0
816_15,15,15,File currentFile = new File(fullPath[0]);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,14,8,2,0,2,0.58,0,0
816_17,17,17,String filename = currentFile.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,14,8,2,0,2,0.6,2,1
816_18,18,18,"int firstDotPos = filename.indexOf(""."");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,14,8,2,0,0,0.44,3,1
816_19,19,20,"final String filenameNoExt = (firstDotPos == -1) ? filename :
filename.substring(0, firstDotPos);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,14,8,2,0,0,0.45,4,2
816_21,21,21,File auxDir = getLocalAuxDirectory(currentFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,14,8,2,0,2,0.57,6,4
816_22,22,38,"if (auxDir.exists()) {
FilenameFilter filter = new FilenameFilter() {
@Override
public boolean accept(File dir, String name) {
if (name.startsWith(filenameNoExt + ""."")) {
return true;
} else {
return false;
}
}
};

File[] auxFiles = auxDir.listFiles(filter);
for (File file : auxFiles) {
file.delete();
}
}",1,0,0,0,0,0,0,0,0,7,4,17,0,1,0,0,14,8,2,0,4,0.64,7,4
816_23,23,32,"FilenameFilter filter = new FilenameFilter() {
@Override
public boolean accept(File dir, String name) {
if (name.startsWith(filenameNoExt + ""."")) {
return true;
} else {
return false;
}
}
};",0,0,0,0,0,1,0,0,0,3,3,10,0,0,0,1,14,8,2,0,3,0.58,8,5
816_26,26,30,"if (name.startsWith(filenameNoExt + ""."")) {
return true;
} else {
return false;
}",1,0,0,0,0,0,0,0,0,2,1,5,0,0,0,0,14,8,2,0,2,0.55,11,7
816_27,27,27,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,14,8,2,0,0,0.29,12,7
816_29,29,29,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,14,8,2,0,0,0.28,14,9
816_34,34,34,File[] auxFiles = auxDir.listFiles(filter);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,14,8,2,0,1,0.54,19,10
816_35,35,37,"for (File file : auxFiles) {
file.delete();
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,0,14,8,2,0,2,0.66,20,10
816_36,36,36,file.delete();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,8,2,0,2,0.73,21,11
817_1,1,2,"public static void deleteAuxFiles(ContentResolver contentResolver,
Uri srcContentUri) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,0,0,2,0.51,31,16
817_3,3,3,final String[] fullPath = new String[1];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.33,30,15
817_4,4,4,String[] queryProjection = new String[] { ImageColumns.DATA };,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0,9,5,0,0,1,0.47,29,14
817_5,5,7,"querySourceFromContentResolver(contentResolver,
srcContentUri, queryProjection,
new ContentResolverQueryCallback() {",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,9,5,0,0,0,0.42,26,13
817_8,8,9,"@Override
public void onCursorResult(Cursor cursor) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,0,0,0,0.33,24,12
817_10,10,10,fullPath[0] = cursor.getString(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.38,23,11
817_14,14,39,"if (fullPath[0] != null) {
File currentFile = new File(fullPath[0]);

String filename = currentFile.getName();
int firstDotPos = filename.indexOf(""."");
final String filenameNoExt = (firstDotPos == -1) ? filename :
filename.substring(0, firstDotPos);
File auxDir = getLocalAuxDirectory(currentFile);
if (auxDir.exists()) {
FilenameFilter filter = new FilenameFilter() {
@Override
public boolean accept(File dir, String name) {
if (name.startsWith(filenameNoExt + ""."")) {
return true;
} else {
return false;
}
}
};

File[] auxFiles = auxDir.listFiles(filter);
for (File file : auxFiles) {
file.delete();
}
}
}",1,0,0,0,0,0,0,0,0,13,5,26,0,0,0,0,9,5,0,0,5,0.67,0,0
817_15,15,15,File currentFile = new File(fullPath[0]);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,5,0,0,2,0.58,18,9
817_17,17,17,String filename = currentFile.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,5,0,0,3,0.66,16,8
817_18,18,18,"int firstDotPos = filename.indexOf(""."");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,0,0,0,0.44,15,7
817_19,19,20,"final String filenameNoExt = (firstDotPos == -1) ? filename :
filename.substring(0, firstDotPos);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,9,5,0,0,0,0.45,13,6
817_21,21,21,File auxDir = getLocalAuxDirectory(currentFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,0,0,3,0.61,12,5
817_22,22,38,"if (auxDir.exists()) {
FilenameFilter filter = new FilenameFilter() {
@Override
public boolean accept(File dir, String name) {
if (name.startsWith(filenameNoExt + ""."")) {
return true;
} else {
return false;
}
}
};

File[] auxFiles = auxDir.listFiles(filter);
for (File file : auxFiles) {
file.delete();
}
}",1,0,0,0,0,0,0,0,0,7,4,17,0,1,0,0,9,5,0,0,3,0.56,0,0
817_23,23,32,"FilenameFilter filter = new FilenameFilter() {
@Override
public boolean accept(File dir, String name) {
if (name.startsWith(filenameNoExt + ""."")) {
return true;
} else {
return false;
}
}
};",0,0,0,0,0,1,0,0,0,3,3,10,0,0,0,1,9,5,0,0,2,0.49,1,0
817_26,26,30,"if (name.startsWith(filenameNoExt + ""."")) {
return true;
} else {
return false;
}",1,0,0,0,0,0,0,0,0,2,1,5,0,0,0,0,9,5,0,0,1,0.45,3,0
817_27,27,27,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.25,6,1
817_29,29,29,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.23,4,0
817_34,34,34,File[] auxFiles = auxDir.listFiles(filter);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,5,0,0,1,0.47,0,0
817_35,35,37,"for (File file : auxFiles) {
file.delete();
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,0,9,5,0,0,2,0.65,1,0
817_36,36,36,file.delete();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,2,0.72,2,1
818_1,1,1,"private Uri moveSrcToAuxIfNeeded(Uri srcUri, File dstFile) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.42,6,4
818_2,2,2,"File srcFile = getLocalFileFromUri(mContext, srcUri);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.5,5,3
818_3,3,6,"if (srcFile == null) {
Log.d(LOGTAG, ""Source file is not a local file, no update."");
return srcUri;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,7,4,1,0,0,0.41,1,0
818_4,4,4,"Log.d(LOGTAG, ""Source file is not a local file, no update."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.38,3,1
818_5,5,5,return srcUri;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.39,2,0
818_8,8,8,File auxDiretory = getLocalAuxDirectory(dstFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,4,1,0,2,0.59,0,0
818_9,9,14,"if (!auxDiretory.exists()) {
boolean success = auxDiretory.mkdirs();
if (!success) {
return srcUri;
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,1,7,4,1,0,0,0.38,1,0
818_10,10,10,boolean success = auxDiretory.mkdirs();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,0,0.32,2,1
818_11,11,13,"if (!success) {
return srcUri;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,4,1,0,0,0.38,3,2
818_12,12,12,return srcUri;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.39,4,3
818_16,16,16,"File noMedia = new File(auxDiretory, "".nomedia"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,4,1,0,0,0.42,8,5
818_17,17,24,"if (!noMedia.exists()) {
try {
noMedia.createNewFile();
} catch (IOException e) {
Log.e(LOGTAG, ""Can't create the nomedia"");
return srcUri;
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,0,7,4,1,0,1,0.54,9,5
818_18,18,23,"try {
noMedia.createNewFile();
} catch (IOException e) {
Log.e(LOGTAG, ""Can't create the nomedia"");
return srcUri;
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,0,0,7,4,1,0,1,0.55,10,6
818_19,19,19,noMedia.createNewFile();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.5,11,7
818_20,20,20,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.39,12,8
818_21,21,21,"Log.e(LOGTAG, ""Can't create the nomedia"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.51,13,9
818_22,22,22,return srcUri;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.39,14,10
818_25,25,25,"File newSrcFile = new File(auxDiretory, dstFile.getName());",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,7,4,1,0,1,0.53,17,12
818_26,26,26,String to = newSrcFile.getName();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,7,4,1,0,1,0.55,18,12
818_27,27,27,String from = srcFile.getName();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,7,4,1,0,1,0.53,19,13
818_28,28,28,"to = to.substring(to.lastIndexOf("".""));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,4,1,0,0,0.31,20,14
818_29,29,29,"from = from.substring(from.lastIndexOf("".""));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,7,4,1,0,0,0.31,21,15
818_31,31,35,"if (!to.equals(from)) {
String name = dstFile.getName();
name = name.substring(0, name.lastIndexOf(""."")) + from;
newSrcFile = new File(auxDiretory, name);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,7,4,1,0,1,0.5,23,17
818_32,32,32,String name = dstFile.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.49,24,17
818_33,33,33,"name = name.substring(0, name.lastIndexOf(""."")) + from;",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,0,0.36,25,18
818_34,34,34,"newSrcFile = new File(auxDiretory, name);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,0,0.46,26,19
818_37,37,42,"if (!newSrcFile.exists()) {
boolean success = srcFile.renameTo(newSrcFile);
if (!success) {
return srcUri;
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,1,1,7,4,1,0,0,0.46,29,21
818_38,38,38,boolean success = srcFile.renameTo(newSrcFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,0,0.47,30,21
818_39,39,41,"if (!success) {
return srcUri;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,4,1,0,0,0.38,31,22
818_40,40,40,return srcUri;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.39,32,23
818_44,44,44,return Uri.fromFile(newSrcFile);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,7,4,1,0,0,0.44,36,25
819_1,1,1,"private Uri moveSrcToAuxIfNeeded(Uri srcUri, File dstFile) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,2,0,1,0.56,14,9
819_2,2,2,"File srcFile = getLocalFileFromUri(mContext, srcUri);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,6,2,0,1,0.57,13,8
819_3,3,6,"if (srcFile == null) {
Log.d(LOGTAG, ""Source file is not a local file, no update."");
return srcUri;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,11,6,2,0,1,0.57,9,5
819_4,4,4,"Log.d(LOGTAG, ""Source file is not a local file, no update."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,2,0,1,0.58,11,6
819_5,5,5,return srcUri;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,2,0,0,0.39,10,5
819_8,8,8,File auxDiretory = getLocalAuxDirectory(dstFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,11,6,2,0,2,0.64,7,4
819_9,9,14,"if (!auxDiretory.exists()) {
boolean success = auxDiretory.mkdirs();
if (!success) {
return srcUri;
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,1,11,6,2,0,0,0.43,1,0
819_10,10,10,boolean success = auxDiretory.mkdirs();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,6,2,0,0,0.44,5,2
819_11,11,13,"if (!success) {
return srcUri;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,11,6,2,0,0,0.42,2,0
819_12,12,12,return srcUri;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,2,0,0,0.39,3,0
819_16,16,16,"File noMedia = new File(auxDiretory, "".nomedia"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,11,6,2,0,3,0.72,0,0
819_17,17,24,"if (!noMedia.exists()) {
try {
noMedia.createNewFile();
} catch (IOException e) {
Log.e(LOGTAG, ""Can't create the nomedia"");
return srcUri;
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,0,11,6,2,0,3,0.62,1,0
819_18,18,23,"try {
noMedia.createNewFile();
} catch (IOException e) {
Log.e(LOGTAG, ""Can't create the nomedia"");
return srcUri;
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,0,0,11,6,2,0,3,0.61,2,1
819_19,19,19,noMedia.createNewFile();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,2,0,2,0.64,3,2
819_20,20,20,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,2,0,0,0.39,4,3
819_21,21,21,"Log.e(LOGTAG, ""Can't create the nomedia"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,6,2,0,1,0.58,5,4
819_22,22,22,return srcUri;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,2,0,0,0.39,6,5
819_25,25,25,"File newSrcFile = new File(auxDiretory, dstFile.getName());",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,11,6,2,0,1,0.59,9,7
819_26,26,26,String to = newSrcFile.getName();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,11,6,2,0,1,0.49,10,7
819_27,27,27,String from = srcFile.getName();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,11,6,2,0,1,0.5,11,8
819_28,28,28,"to = to.substring(to.lastIndexOf("".""));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,11,6,2,0,0,0.26,12,9
819_29,29,29,"from = from.substring(from.lastIndexOf("".""));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,11,6,2,0,0,0.26,13,10
819_31,31,35,"if (!to.equals(from)) {
String name = dstFile.getName();
name = name.substring(0, name.lastIndexOf(""."")) + from;
newSrcFile = new File(auxDiretory, name);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,11,6,2,0,1,0.5,15,12
819_32,32,32,String name = dstFile.getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,6,2,0,1,0.51,16,12
819_33,33,33,"name = name.substring(0, name.lastIndexOf(""."")) + from;",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,6,2,0,0,0.24,17,13
819_34,34,34,"newSrcFile = new File(auxDiretory, name);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,6,2,0,1,0.54,18,14
819_37,37,42,"if (!newSrcFile.exists()) {
boolean success = srcFile.renameTo(newSrcFile);
if (!success) {
return srcUri;
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,1,1,11,6,2,0,1,0.58,21,16
819_38,38,38,boolean success = srcFile.renameTo(newSrcFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,6,2,0,1,0.61,22,16
819_39,39,41,"if (!success) {
return srcUri;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,11,6,2,0,0,0.42,23,17
819_40,40,40,return srcUri;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,6,2,0,0,0.39,24,18
819_44,44,44,return Uri.fromFile(newSrcFile);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,11,6,2,0,1,0.57,28,20
982_1,1,1,    private synchronized void onLoadingDone(PanoramaMetadata metadata) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.37,2,2
982_2,2,2,mPanoramaMetadata = metadata;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.33,1,1
982_3,3,5,"if (mPanoramaMetadata == null) {
mPanoramaMetadata = PhotoSphereHelper.NOT_PANORAMA;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,5,1,0,1,0.33,0,0
982_4,4,4,mPanoramaMetadata = PhotoSphereHelper.NOT_PANORAMA;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.33,0,0
982_6,6,8,"for (PanoramaMetadataCallback cb : mCallbacksWaiting) {
cb.onPanoramaMetadataLoaded(mPanoramaMetadata);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,7,5,1,0,1,0.39,2,1
982_7,7,7,cb.onPanoramaMetadataLoaded(mPanoramaMetadata);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.4,3,1
982_9,9,9,mCallbacksWaiting = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.28,5,3
2486_1,1,2,"@Override
public void write(byte[] buffer, int offset, int length) throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,0,0.29,41,34
2486_3,3,71,"while ((mByteToSkip > 0 || mByteToCopy > 0 || mState != STATE_JPEG_DATA)
&& length > 0) {
if (mByteToSkip > 0) {
int byteToProcess = length > mByteToSkip ? mByteToSkip : length;
length -= byteToProcess;
mByteToSkip -= byteToProcess;
offset += byteToProcess;
}
if (mByteToCopy > 0) {
int byteToProcess = length > mByteToCopy ? mByteToCopy : length;
out.write(buffer, offset, byteToProcess);
mSize += byteToProcess;
length -= byteToProcess;
mByteToCopy -= byteToProcess;
offset += byteToProcess;
}
if (length == 0) {
return;
}
switch (mState) {
case STATE_SOI:
int byteRead = requestByteToBuffer(2, buffer, offset, length);
offset += byteRead;
length -= byteRead;
if (mBuffer.position() < 2) {
return;
}
mBuffer.rewind();
if (mBuffer.getShort() != JpegHeader.SOI) {
throw new IOException(""Not a valid jpeg image, cannot write exif"");
}
out.write(mBuffer.array(), 0, 2);
mSize += 2;
mState = STATE_FRAME_HEADER;
mBuffer.rewind();
writeExifData();
break;
case STATE_FRAME_HEADER:
byteRead = requestByteToBuffer(4, buffer, offset, length);
offset += byteRead;
length -= byteRead;
if (mBuffer.position() == 2) {
short tag = mBuffer.getShort();
if (tag == JpegHeader.EOI) {
out.write(mBuffer.array(), 0, 2);
mSize += 2;
mBuffer.rewind();
}
}
if (mBuffer.position() < 4) {
return;
}
mBuffer.rewind();
short marker = mBuffer.getShort();
if (marker == JpegHeader.APP1) {
mByteToSkip = (mBuffer.getShort() & 0x0000ffff) - 2;
mState = STATE_JPEG_DATA;
} else if (!JpegHeader.isSofMarker(marker)) {
out.write(mBuffer.array(), 0, 4);
mSize += 4;
mByteToCopy = (mBuffer.getShort() & 0x0000ffff) - 2;
} else {
out.write(mBuffer.array(), 0, 4);
mSize += 4;
mState = STATE_JPEG_DATA;
}
mBuffer.rewind();
}
}",0,1,0,0,0,0,0,0,0,55,4,69,1,0,0,0,5,5,0,0,3,0.52,0,0
2486_4,4,4,&& length > 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.15,39,32
2486_5,5,10,"if (mByteToSkip > 0) {
int byteToProcess = length > mByteToSkip ? mByteToSkip : length;
length -= byteToProcess;
mByteToSkip -= byteToProcess;
offset += byteToProcess;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,5,5,0,0,0,0.26,33,27
2486_6,6,6,int byteToProcess = length > mByteToSkip ? mByteToSkip : length;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.23,37,30
2486_7,7,7,length -= byteToProcess;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.23,36,29
2486_8,8,8,mByteToSkip -= byteToProcess;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.24,35,28
2486_9,9,9,offset += byteToProcess;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.29,34,27
2486_11,11,18,"if (mByteToCopy > 0) {
int byteToProcess = length > mByteToCopy ? mByteToCopy : length;
out.write(buffer, offset, byteToProcess);
mSize += byteToProcess;
length -= byteToProcess;
mByteToCopy -= byteToProcess;
offset += byteToProcess;
}",1,0,0,0,0,0,0,0,0,6,1,8,0,1,0,0,5,5,0,0,0,0.3,25,20
2486_12,12,12,int byteToProcess = length > mByteToCopy ? mByteToCopy : length;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.27,31,25
2486_13,13,13,"out.write(buffer, offset, byteToProcess);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.3,30,24
2486_14,14,14,mSize += byteToProcess;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.28,29,23
2486_15,15,15,length -= byteToProcess;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.23,28,22
2486_16,16,16,mByteToCopy -= byteToProcess;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.27,27,21
2486_17,17,17,offset += byteToProcess;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.29,26,20
2486_19,19,21,"if (length == 0) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,5,0,0,0,0.15,22,18
2486_20,20,20,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.14,23,18
2486_22,22,22,switch (mState) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.25,21,17
2486_23,23,24,"case STATE_SOI:
int byteRead = requestByteToBuffer(2, buffer, offset, length);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,5,5,0,0,0,0.32,19,16
2486_25,25,25,offset += byteRead;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.3,18,15
2486_26,26,26,length -= byteRead;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.25,17,14
2486_27,27,29,"if (mBuffer.position() < 2) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,5,0,0,0,0.27,14,12
2486_28,28,28,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.14,15,12
2486_30,30,30,mBuffer.rewind();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.32,13,11
2486_31,31,33,"if (mBuffer.getShort() != JpegHeader.SOI) {
throw new IOException(""Not a valid jpeg image, cannot write exif"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,5,0,0,1,0.47,10,9
2486_32,32,32,"throw new IOException(""Not a valid jpeg image, cannot write exif"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,5,0,0,1,0.48,11,9
2486_34,34,34,"out.write(mBuffer.array(), 0, 2);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.26,9,8
2486_35,35,35,mSize += 2;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.28,8,7
2486_36,36,36,mState = STATE_FRAME_HEADER;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.33,7,6
2486_37,37,37,mBuffer.rewind();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.32,6,5
2486_38,38,38,writeExifData();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.52,5,4
2486_39,39,39,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,5,0,0,0,0.16,4,3
2486_40,40,41,"case STATE_FRAME_HEADER:
byteRead = requestByteToBuffer(4, buffer, offset, length);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,5,5,0,0,0,0.39,2,2
2486_42,42,42,offset += byteRead;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.3,1,1
2486_43,43,43,length -= byteRead;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.25,0,0
2486_44,44,51,"if (mBuffer.position() == 2) {
short tag = mBuffer.getShort();
if (tag == JpegHeader.EOI) {
out.write(mBuffer.array(), 0, 2);
mSize += 2;
mBuffer.rewind();
}
}",1,0,0,0,0,0,0,0,0,5,2,8,1,0,0,0,5,5,0,0,0,0.31,0,0
2486_45,45,45,short tag = mBuffer.getShort();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.27,1,0
2486_46,46,50,"if (tag == JpegHeader.EOI) {
out.write(mBuffer.array(), 0, 2);
mSize += 2;
mBuffer.rewind();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,5,5,0,0,0,0.31,2,1
2486_47,47,47,"out.write(mBuffer.array(), 0, 2);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.26,3,2
2486_48,48,48,mSize += 2;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.28,4,3
2486_49,49,49,mBuffer.rewind();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.32,5,4
2486_52,52,54,"if (mBuffer.position() < 4) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,5,5,0,0,0,0.36,8,6
2486_53,53,53,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.14,9,6
2486_55,55,55,mBuffer.rewind();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.32,11,8
2486_56,56,56,short marker = mBuffer.getShort();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,5,0,0,0,0.31,12,8
2486_57,57,68,"if (marker == JpegHeader.APP1) {
mByteToSkip = (mBuffer.getShort() & 0x0000ffff) - 2;
mState = STATE_JPEG_DATA;
} else if (!JpegHeader.isSofMarker(marker)) {
out.write(mBuffer.array(), 0, 4);
mSize += 4;
mByteToCopy = (mBuffer.getShort() & 0x0000ffff) - 2;
} else {
out.write(mBuffer.array(), 0, 4);
mSize += 4;
mState = STATE_JPEG_DATA;
}",1,0,0,0,0,0,0,0,0,10,1,12,1,1,0,0,5,5,0,0,2,0.44,13,9
2486_58,58,58,mByteToSkip = (mBuffer.getShort() & 0x0000ffff) - 2;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.28,14,10
2486_59,59,59,mState = STATE_JPEG_DATA;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.5,15,11
2486_60,60,60,} else if (!JpegHeader.isSofMarker(marker)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.36,16,12
2486_61,61,61,"out.write(mBuffer.array(), 0, 4);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.35,17,13
2486_62,62,62,mSize += 4;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.41,18,14
2486_63,63,63,mByteToCopy = (mBuffer.getShort() & 0x0000ffff) - 2;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.3,19,15
2486_64,64,64,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.19,20,16
2486_65,65,65,"out.write(mBuffer.array(), 0, 4);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.35,21,17
2486_66,66,66,mSize += 4;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.41,22,18
2486_67,67,67,mState = STATE_JPEG_DATA;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.5,23,19
2486_69,69,69,mBuffer.rewind();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.32,25,21
2486_72,72,75,"if (length > 0) {
out.write(buffer, offset, length);
mSize += length;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,0,0,0,5,5,0,0,0,0.28,28,22
2486_73,73,73,"out.write(buffer, offset, length);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.3,29,22
2486_74,74,74,mSize += length;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.26,30,23
2487_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,1,0,0,0.41,66,38
2487_2,2,2,IfdData ifd0 = mExifData.getIfdData(IfdId.TYPE_IFD_0);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,1,0.54,65,37
2487_3,3,6,"if (ifd0 == null) {
ifd0 = new IfdData(IfdId.TYPE_IFD_0);
mExifData.addIfdData(ifd0);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,2,1,0,0,0.42,61,34
2487_4,4,4,ifd0 = new IfdData(IfdId.TYPE_IFD_0);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.29,63,35
2487_5,5,5,mExifData.addIfdData(ifd0);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.45,62,34
2487_7,7,7,ExifTag exifOffsetTag = mInterface.buildUninitializedTag(ExifInterface.TAG_EXIF_IFD);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,1,0.65,60,33
2487_8,8,11,"if (exifOffsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_EXIF_IFD);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,5,2,1,0,1,0.61,56,31
2487_9,9,10,"throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_EXIF_IFD);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,5,2,1,0,1,0.61,57,31
2487_12,12,12,ifd0.setTag(exifOffsetTag);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,2,1,0,1,0.64,55,30
2487_14,14,14,IfdData exifIfd = mExifData.getIfdData(IfdId.TYPE_IFD_EXIF);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,1,0.58,53,29
2487_15,15,18,"if (exifIfd == null) {
exifIfd = new IfdData(IfdId.TYPE_IFD_EXIF);
mExifData.addIfdData(exifIfd);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,5,2,1,0,0,0.49,49,26
2487_16,16,16,exifIfd = new IfdData(IfdId.TYPE_IFD_EXIF);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.46,51,27
2487_17,17,17,mExifData.addIfdData(exifIfd);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.48,50,26
2487_20,20,20,IfdData gpsIfd = mExifData.getIfdData(IfdId.TYPE_IFD_GPS);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,1,0.55,47,25
2487_21,21,28,"if (gpsIfd != null) {
ExifTag gpsOffsetTag = mInterface.buildUninitializedTag(ExifInterface.TAG_GPS_IFD);
if (gpsOffsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_GPS_IFD);
}
ifd0.setTag(gpsOffsetTag);
}",1,0,0,0,0,0,0,0,0,4,2,8,0,1,0,1,5,2,1,0,1,0.61,39,20
2487_22,22,22,ExifTag gpsOffsetTag = mInterface.buildUninitializedTag(ExifInterface.TAG_GPS_IFD);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,1,0.63,45,23
2487_23,23,26,"if (gpsOffsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_GPS_IFD);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,5,2,1,0,1,0.6,41,21
2487_24,24,25,"throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_GPS_IFD);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,5,2,1,0,1,0.6,42,21
2487_27,27,27,ifd0.setTag(gpsOffsetTag);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,1,0.54,40,20
2487_30,30,30,IfdData interIfd = mExifData.getIfdData(IfdId.TYPE_IFD_INTEROPERABILITY);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,1,0.56,37,19
2487_31,31,39,"if (interIfd != null) {
ExifTag interOffsetTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_INTEROPERABILITY_IFD);
if (interOffsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_INTEROPERABILITY_IFD);
}
exifIfd.setTag(interOffsetTag);
}",1,0,0,0,0,0,0,0,0,4,2,9,0,1,0,1,5,2,1,0,1,0.62,28,14
2487_32,32,33,"ExifTag interOffsetTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_INTEROPERABILITY_IFD);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,2,1,0,1,0.64,34,17
2487_34,34,37,"if (interOffsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_INTEROPERABILITY_IFD);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,5,2,1,0,1,0.6,30,15
2487_35,35,36,"throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_INTEROPERABILITY_IFD);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,5,2,1,0,1,0.6,31,15
2487_38,38,38,exifIfd.setTag(interOffsetTag);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,1,0.64,29,14
2487_41,41,41,IfdData ifd1 = mExifData.getIfdData(IfdId.TYPE_IFD_1);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,2,1,0,1,0.54,26,13
2487_43,43,103,"if (mExifData.hasCompressedThumbnail()) {

if (ifd1 == null) {
ifd1 = new IfdData(IfdId.TYPE_IFD_1);
mExifData.addIfdData(ifd1);
}

ExifTag offsetTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT);
if (offsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT);
}

ifd1.setTag(offsetTag);
ExifTag lengthTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH);
if (lengthTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH);
}

lengthTag.setValue(mExifData.getCompressedThumbnail().length);
ifd1.setTag(lengthTag);

ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_OFFSETS));
ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_BYTE_COUNTS));
} else if (mExifData.hasUncompressedStrip()) {
if (ifd1 == null) {
ifd1 = new IfdData(IfdId.TYPE_IFD_1);
mExifData.addIfdData(ifd1);
}
int stripCount = mExifData.getStripCount();
ExifTag offsetTag = mInterface.buildUninitializedTag(ExifInterface.TAG_STRIP_OFFSETS);
if (offsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_STRIP_OFFSETS);
}
ExifTag lengthTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_STRIP_BYTE_COUNTS);
if (lengthTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_STRIP_BYTE_COUNTS);
}
long[] lengths = new long[stripCount];
for (int i = 0; i < mExifData.getStripCount(); i++) {
lengths[i] = mExifData.getStrip(i).length;
}
lengthTag.setValue(lengths);
ifd1.setTag(offsetTag);
ifd1.setTag(lengthTag);
ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT));
ifd1.removeTag(ExifInterface
.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH));
} else if (ifd1 != null) {
ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_OFFSETS));
ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_BYTE_COUNTS));
ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT));
ifd1.removeTag(ExifInterface
.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH));
}",1,0,0,0,0,0,0,0,0,38,2,61,0,0,1,0,5,2,1,0,3,0.69,0,0
2487_45,45,48,"if (ifd1 == null) {
ifd1 = new IfdData(IfdId.TYPE_IFD_1);
mExifData.addIfdData(ifd1);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,5,2,1,0,0,0.43,19,9
2487_46,46,46,ifd1 = new IfdData(IfdId.TYPE_IFD_1);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.29,21,10
2487_47,47,47,mExifData.addIfdData(ifd1);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.45,20,9
2487_50,50,51,"ExifTag offsetTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,5,2,1,0,1,0.64,16,8
2487_52,52,55,"if (offsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,5,2,1,0,1,0.61,12,6
2487_53,53,54,"throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,5,2,1,0,1,0.61,13,6
2487_57,57,57,ifd1.setTag(offsetTag);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,1,0.53,10,5
2487_58,58,59,"ExifTag lengthTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,2,1,0,1,0.63,8,4
2487_60,60,63,"if (lengthTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,5,2,1,0,1,0.61,4,2
2487_61,61,62,"throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,5,2,1,0,1,0.6,5,2
2487_65,65,65,lengthTag.setValue(mExifData.getCompressedThumbnail().length);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,5,2,1,0,2,0.65,2,1
2487_66,66,66,ifd1.setTag(lengthTag);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,2,1,0,1,0.56,1,0
2487_68,68,68,ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_OFFSETS));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,5,2,1,0,2,0.71,0,0
2487_69,69,69,ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_BYTE_COUNTS));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,1,0,2,0.71,1,0
2487_70,70,70,} else if (mExifData.hasUncompressedStrip()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.51,2,1
2487_71,71,74,"if (ifd1 == null) {
ifd1 = new IfdData(IfdId.TYPE_IFD_1);
mExifData.addIfdData(ifd1);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,5,2,1,0,0,0.43,3,2
2487_72,72,72,ifd1 = new IfdData(IfdId.TYPE_IFD_1);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.29,4,3
2487_73,73,73,mExifData.addIfdData(ifd1);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.45,5,4
2487_75,75,75,int stripCount = mExifData.getStripCount();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.6,7,6
2487_76,76,76,ExifTag offsetTag = mInterface.buildUninitializedTag(ExifInterface.TAG_STRIP_OFFSETS);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,1,0.64,8,6
2487_77,77,80,"if (offsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_STRIP_OFFSETS);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,5,2,1,0,1,0.6,9,7
2487_78,78,79,"throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_STRIP_OFFSETS);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,5,2,1,0,1,0.6,10,8
2487_81,81,82,"ExifTag lengthTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_STRIP_BYTE_COUNTS);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,2,1,0,1,0.64,13,10
2487_83,83,86,"if (lengthTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_STRIP_BYTE_COUNTS);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,5,2,1,0,1,0.61,15,11
2487_84,84,85,"throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_STRIP_BYTE_COUNTS);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,5,2,1,0,1,0.61,16,11
2487_87,87,87,long[] lengths = new long[stripCount];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.41,19,13
2487_88,88,90,"for (int i = 0; i < mExifData.getStripCount(); i++) {
lengths[i] = mExifData.getStrip(i).length;
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,5,2,1,0,1,0.59,20,13
2487_89,89,89,lengths[i] = mExifData.getStrip(i).length;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.61,21,14
2487_91,91,91,lengthTag.setValue(lengths);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,1,0.46,23,16
2487_92,92,92,ifd1.setTag(offsetTag);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,1,0,1,0.53,24,16
2487_93,93,93,ifd1.setTag(lengthTag);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,1,0,1,0.56,25,17
2487_94,94,94,ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,1,0,2,0.71,26,18
2487_95,95,96,"ifd1.removeTag(ExifInterface
.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,5,2,1,0,2,0.7,27,19
2487_97,97,97,} else if (ifd1 != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.36,29,21
2487_98,98,98,ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_OFFSETS));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,1,0,2,0.71,30,21
2487_99,99,99,ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_BYTE_COUNTS));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,1,0,2,0.71,31,22
2487_100,100,100,ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,1,0,2,0.71,32,23
2487_101,101,102,"ifd1.removeTag(ExifInterface
.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,5,2,1,0,2,0.7,33,24
2488_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,2,0,0,0.42,92,57
2488_2,2,2,IfdData ifd0 = mExifData.getIfdData(IfdId.TYPE_IFD_0);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,2,0,1,0.55,91,56
2488_3,3,6,"if (ifd0 == null) {
ifd0 = new IfdData(IfdId.TYPE_IFD_0);
mExifData.addIfdData(ifd0);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,2,2,0,0,0.45,87,53
2488_4,4,4,ifd0 = new IfdData(IfdId.TYPE_IFD_0);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,2,0,0,0.32,89,54
2488_5,5,5,mExifData.addIfdData(ifd0);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,2,0,0,0.47,88,53
2488_7,7,7,ExifTag exifOffsetTag = mInterface.buildUninitializedTag(ExifInterface.TAG_EXIF_IFD);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,2,0,1,0.66,86,52
2488_8,8,11,"if (exifOffsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_EXIF_IFD);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,5,2,2,0,1,0.63,82,50
2488_9,9,10,"throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_EXIF_IFD);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,5,2,2,0,1,0.62,83,50
2488_12,12,12,ifd0.setTag(exifOffsetTag);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,2,2,0,1,0.67,81,49
2488_14,14,14,IfdData exifIfd = mExifData.getIfdData(IfdId.TYPE_IFD_EXIF);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,2,0,1,0.59,79,48
2488_15,15,18,"if (exifIfd == null) {
exifIfd = new IfdData(IfdId.TYPE_IFD_EXIF);
mExifData.addIfdData(exifIfd);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,5,2,2,0,0,0.51,75,45
2488_16,16,16,exifIfd = new IfdData(IfdId.TYPE_IFD_EXIF);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,2,0,0,0.48,77,46
2488_17,17,17,mExifData.addIfdData(exifIfd);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,2,0,0,0.5,76,45
2488_20,20,20,IfdData gpsIfd = mExifData.getIfdData(IfdId.TYPE_IFD_GPS);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,2,0,1,0.59,73,44
2488_21,21,28,"if (gpsIfd != null) {
ExifTag gpsOffsetTag = mInterface.buildUninitializedTag(ExifInterface.TAG_GPS_IFD);
if (gpsOffsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_GPS_IFD);
}
ifd0.setTag(gpsOffsetTag);
}",1,0,0,0,0,0,0,0,0,4,2,8,0,1,0,1,5,2,2,0,1,0.65,65,39
2488_22,22,22,ExifTag gpsOffsetTag = mInterface.buildUninitializedTag(ExifInterface.TAG_GPS_IFD);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,2,0,1,0.67,71,42
2488_23,23,26,"if (gpsOffsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_GPS_IFD);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,5,2,2,0,1,0.63,67,40
2488_24,24,25,"throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_GPS_IFD);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,5,2,2,0,1,0.62,68,40
2488_27,27,27,ifd0.setTag(gpsOffsetTag);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,2,0,1,0.62,66,39
2488_30,30,30,IfdData interIfd = mExifData.getIfdData(IfdId.TYPE_IFD_INTEROPERABILITY);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,2,0,1,0.56,63,38
2488_31,31,39,"if (interIfd != null) {
ExifTag interOffsetTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_INTEROPERABILITY_IFD);
if (interOffsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_INTEROPERABILITY_IFD);
}
exifIfd.setTag(interOffsetTag);
}",1,0,0,0,0,0,0,0,0,4,2,9,0,1,0,1,5,2,2,0,1,0.64,54,33
2488_32,32,33,"ExifTag interOffsetTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_INTEROPERABILITY_IFD);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,2,2,0,1,0.66,60,36
2488_34,34,37,"if (interOffsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_INTEROPERABILITY_IFD);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,5,2,2,0,1,0.62,56,34
2488_35,35,36,"throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_INTEROPERABILITY_IFD);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,5,2,2,0,1,0.61,57,34
2488_38,38,38,exifIfd.setTag(interOffsetTag);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,2,0,1,0.67,55,33
2488_41,41,41,IfdData ifd1 = mExifData.getIfdData(IfdId.TYPE_IFD_1);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,2,2,0,1,0.54,52,32
2488_43,43,103,"if (mExifData.hasCompressedThumbnail()) {

if (ifd1 == null) {
ifd1 = new IfdData(IfdId.TYPE_IFD_1);
mExifData.addIfdData(ifd1);
}

ExifTag offsetTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT);
if (offsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT);
}

ifd1.setTag(offsetTag);
ExifTag lengthTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH);
if (lengthTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH);
}

lengthTag.setValue(mExifData.getCompressedThumbnail().length);
ifd1.setTag(lengthTag);

ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_OFFSETS));
ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_BYTE_COUNTS));
} else if (mExifData.hasUncompressedStrip()) {
if (ifd1 == null) {
ifd1 = new IfdData(IfdId.TYPE_IFD_1);
mExifData.addIfdData(ifd1);
}
int stripCount = mExifData.getStripCount();
ExifTag offsetTag = mInterface.buildUninitializedTag(ExifInterface.TAG_STRIP_OFFSETS);
if (offsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_STRIP_OFFSETS);
}
ExifTag lengthTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_STRIP_BYTE_COUNTS);
if (lengthTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_STRIP_BYTE_COUNTS);
}
long[] lengths = new long[stripCount];
for (int i = 0; i < mExifData.getStripCount(); i++) {
lengths[i] = mExifData.getStrip(i).length;
}
lengthTag.setValue(lengths);
ifd1.setTag(offsetTag);
ifd1.setTag(lengthTag);
ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT));
ifd1.removeTag(ExifInterface
.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH));
} else if (ifd1 != null) {
ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_OFFSETS));
ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_BYTE_COUNTS));
ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT));
ifd1.removeTag(ExifInterface
.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH));
}",1,0,0,0,0,0,0,0,0,38,2,61,0,0,1,0,5,2,2,0,3,0.73,0,0
2488_45,45,48,"if (ifd1 == null) {
ifd1 = new IfdData(IfdId.TYPE_IFD_1);
mExifData.addIfdData(ifd1);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,5,2,2,0,0,0.45,45,28
2488_46,46,46,ifd1 = new IfdData(IfdId.TYPE_IFD_1);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,2,0,0,0.3,47,29
2488_47,47,47,mExifData.addIfdData(ifd1);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,2,0,0,0.47,46,28
2488_50,50,51,"ExifTag offsetTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,5,2,2,0,1,0.66,42,27
2488_52,52,55,"if (offsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,5,2,2,0,1,0.63,38,25
2488_53,53,54,"throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,5,2,2,0,1,0.63,39,25
2488_57,57,57,ifd1.setTag(offsetTag);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,2,0,1,0.57,36,24
2488_58,58,59,"ExifTag lengthTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,2,2,0,1,0.66,34,23
2488_60,60,63,"if (lengthTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,5,2,2,0,1,0.63,30,21
2488_61,61,62,"throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,5,2,2,0,1,0.62,31,21
2488_65,65,65,lengthTag.setValue(mExifData.getCompressedThumbnail().length);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,5,2,2,0,3,0.72,28,20
2488_66,66,66,ifd1.setTag(lengthTag);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,2,2,0,1,0.58,27,19
2488_68,68,68,ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_OFFSETS));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,5,2,2,0,2,0.7,25,18
2488_69,69,69,ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_BYTE_COUNTS));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,2,0,2,0.7,24,17
2488_70,70,70,} else if (mExifData.hasUncompressedStrip()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.53,23,16
2488_71,71,74,"if (ifd1 == null) {
ifd1 = new IfdData(IfdId.TYPE_IFD_1);
mExifData.addIfdData(ifd1);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,5,2,2,0,0,0.45,19,13
2488_72,72,72,ifd1 = new IfdData(IfdId.TYPE_IFD_1);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,2,0,0,0.3,21,14
2488_73,73,73,mExifData.addIfdData(ifd1);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,2,0,0,0.47,20,13
2488_75,75,75,int stripCount = mExifData.getStripCount();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,2,2,0,1,0.61,18,12
2488_76,76,76,ExifTag offsetTag = mInterface.buildUninitializedTag(ExifInterface.TAG_STRIP_OFFSETS);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,2,0,1,0.66,17,11
2488_77,77,80,"if (offsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_STRIP_OFFSETS);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,5,2,2,0,1,0.62,13,9
2488_78,78,79,"throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_STRIP_OFFSETS);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,5,2,2,0,1,0.62,14,9
2488_81,81,82,"ExifTag lengthTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_STRIP_BYTE_COUNTS);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,2,2,0,1,0.65,11,8
2488_83,83,86,"if (lengthTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_STRIP_BYTE_COUNTS);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,5,2,2,0,1,0.62,7,6
2488_84,84,85,"throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_STRIP_BYTE_COUNTS);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,5,2,2,0,1,0.61,8,6
2488_87,87,87,long[] lengths = new long[stripCount];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,2,0,0,0.44,6,5
2488_88,88,90,"for (int i = 0; i < mExifData.getStripCount(); i++) {
lengths[i] = mExifData.getStrip(i).length;
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,5,2,2,0,1,0.62,3,3
2488_89,89,89,lengths[i] = mExifData.getStrip(i).length;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,1,0.63,4,3
2488_91,91,91,lengthTag.setValue(lengths);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,2,0,1,0.49,2,2
2488_92,92,92,ifd1.setTag(offsetTag);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,2,0,1,0.57,1,1
2488_93,93,93,ifd1.setTag(lengthTag);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,2,0,1,0.58,0,0
2488_94,94,94,ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,2,0,2,0.71,0,0
2488_95,95,96,"ifd1.removeTag(ExifInterface
.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,5,2,2,0,2,0.71,1,0
2488_97,97,97,} else if (ifd1 != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.36,3,2
2488_98,98,98,ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_OFFSETS));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,2,0,2,0.7,4,2
2488_99,99,99,ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_BYTE_COUNTS));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,2,0,2,0.7,5,3
2488_100,100,100,ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,2,0,2,0.71,6,4
2488_101,101,102,"ifd1.removeTag(ExifInterface
.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,5,2,2,0,2,0.71,7,5
2489_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,3,2,0,0,0.39,96,60
2489_2,2,2,IfdData ifd0 = mExifData.getIfdData(IfdId.TYPE_IFD_0);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,2,0,1,0.55,95,59
2489_3,3,6,"if (ifd0 == null) {
ifd0 = new IfdData(IfdId.TYPE_IFD_0);
mExifData.addIfdData(ifd0);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,6,3,2,0,0,0.48,91,56
2489_4,4,4,ifd0 = new IfdData(IfdId.TYPE_IFD_0);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.37,93,57
2489_5,5,5,mExifData.addIfdData(ifd0);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.49,92,56
2489_7,7,7,ExifTag exifOffsetTag = mInterface.buildUninitializedTag(ExifInterface.TAG_EXIF_IFD);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,2,0,2,0.7,90,55
2489_8,8,11,"if (exifOffsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_EXIF_IFD);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,6,3,2,0,2,0.67,86,53
2489_9,9,10,"throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_EXIF_IFD);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,6,3,2,0,1,0.59,87,53
2489_12,12,12,ifd0.setTag(exifOffsetTag);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,3,2,0,2,0.74,85,52
2489_14,14,14,IfdData exifIfd = mExifData.getIfdData(IfdId.TYPE_IFD_EXIF);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,2,0,1,0.55,83,51
2489_15,15,18,"if (exifIfd == null) {
exifIfd = new IfdData(IfdId.TYPE_IFD_EXIF);
mExifData.addIfdData(exifIfd);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,6,3,2,0,0,0.5,79,48
2489_16,16,16,exifIfd = new IfdData(IfdId.TYPE_IFD_EXIF);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.46,81,49
2489_17,17,17,mExifData.addIfdData(exifIfd);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.51,80,48
2489_20,20,20,IfdData gpsIfd = mExifData.getIfdData(IfdId.TYPE_IFD_GPS);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,2,0,1,0.56,77,47
2489_21,21,28,"if (gpsIfd != null) {
ExifTag gpsOffsetTag = mInterface.buildUninitializedTag(ExifInterface.TAG_GPS_IFD);
if (gpsOffsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_GPS_IFD);
}
ifd0.setTag(gpsOffsetTag);
}",1,0,0,0,0,0,0,0,0,4,2,8,0,1,0,1,6,3,2,0,2,0.68,69,42
2489_22,22,22,ExifTag gpsOffsetTag = mInterface.buildUninitializedTag(ExifInterface.TAG_GPS_IFD);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,2,0,2,0.69,75,45
2489_23,23,26,"if (gpsOffsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_GPS_IFD);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,6,3,2,0,2,0.66,71,43
2489_24,24,25,"throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_GPS_IFD);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,6,3,2,0,1,0.6,72,43
2489_27,27,27,ifd0.setTag(gpsOffsetTag);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,2,0.67,70,42
2489_30,30,30,IfdData interIfd = mExifData.getIfdData(IfdId.TYPE_IFD_INTEROPERABILITY);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,2,0,1,0.53,67,41
2489_31,31,39,"if (interIfd != null) {
ExifTag interOffsetTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_INTEROPERABILITY_IFD);
if (interOffsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_INTEROPERABILITY_IFD);
}
exifIfd.setTag(interOffsetTag);
}",1,0,0,0,0,0,0,0,0,4,2,9,0,1,0,1,6,3,2,0,2,0.69,58,36
2489_32,32,33,"ExifTag interOffsetTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_INTEROPERABILITY_IFD);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,6,3,2,0,2,0.7,64,39
2489_34,34,37,"if (interOffsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_INTEROPERABILITY_IFD);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,6,3,2,0,2,0.66,60,37
2489_35,35,36,"throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_INTEROPERABILITY_IFD);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,6,3,2,0,1,0.59,61,37
2489_38,38,38,exifIfd.setTag(interOffsetTag);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,2,0.74,59,36
2489_41,41,41,IfdData ifd1 = mExifData.getIfdData(IfdId.TYPE_IFD_1);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,3,2,0,1,0.54,56,35
2489_43,43,103,"if (mExifData.hasCompressedThumbnail()) {

if (ifd1 == null) {
ifd1 = new IfdData(IfdId.TYPE_IFD_1);
mExifData.addIfdData(ifd1);
}

ExifTag offsetTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT);
if (offsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT);
}

ifd1.setTag(offsetTag);
ExifTag lengthTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH);
if (lengthTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH);
}

lengthTag.setValue(mExifData.getCompressedThumbnail().length);
ifd1.setTag(lengthTag);

ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_OFFSETS));
ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_BYTE_COUNTS));
} else if (mExifData.hasUncompressedStrip()) {
if (ifd1 == null) {
ifd1 = new IfdData(IfdId.TYPE_IFD_1);
mExifData.addIfdData(ifd1);
}
int stripCount = mExifData.getStripCount();
ExifTag offsetTag = mInterface.buildUninitializedTag(ExifInterface.TAG_STRIP_OFFSETS);
if (offsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_STRIP_OFFSETS);
}
ExifTag lengthTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_STRIP_BYTE_COUNTS);
if (lengthTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_STRIP_BYTE_COUNTS);
}
long[] lengths = new long[stripCount];
for (int i = 0; i < mExifData.getStripCount(); i++) {
lengths[i] = mExifData.getStrip(i).length;
}
lengthTag.setValue(lengths);
ifd1.setTag(offsetTag);
ifd1.setTag(lengthTag);
ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT));
ifd1.removeTag(ExifInterface
.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH));
} else if (ifd1 != null) {
ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_OFFSETS));
ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_BYTE_COUNTS));
ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT));
ifd1.removeTag(ExifInterface
.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH));
}",1,0,0,0,0,0,0,0,0,38,2,61,0,0,1,0,6,3,2,0,5,0.81,0,0
2489_45,45,48,"if (ifd1 == null) {
ifd1 = new IfdData(IfdId.TYPE_IFD_1);
mExifData.addIfdData(ifd1);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,6,3,2,0,0,0.47,49,31
2489_46,46,46,ifd1 = new IfdData(IfdId.TYPE_IFD_1);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.33,51,32
2489_47,47,47,mExifData.addIfdData(ifd1);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.49,50,31
2489_50,50,51,"ExifTag offsetTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,6,3,2,0,2,0.68,46,30
2489_52,52,55,"if (offsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,6,3,2,0,2,0.66,42,28
2489_53,53,54,"throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,6,3,2,0,1,0.59,43,28
2489_57,57,57,ifd1.setTag(offsetTag);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,2,0,2,0.67,40,27
2489_58,58,59,"ExifTag lengthTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,6,3,2,0,2,0.7,38,26
2489_60,60,63,"if (lengthTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,6,3,2,0,2,0.67,34,24
2489_61,61,62,"throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,6,3,2,0,2,0.66,35,24
2489_65,65,65,lengthTag.setValue(mExifData.getCompressedThumbnail().length);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,3,2,0,4,0.8,32,23
2489_66,66,66,ifd1.setTag(lengthTag);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,3,2,0,2,0.68,31,22
2489_68,68,68,ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_OFFSETS));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,6,3,2,0,3,0.72,29,21
2489_69,69,69,ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_BYTE_COUNTS));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,2,0,2,0.67,28,20
2489_70,70,70,} else if (mExifData.hasUncompressedStrip()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.49,27,19
2489_71,71,74,"if (ifd1 == null) {
ifd1 = new IfdData(IfdId.TYPE_IFD_1);
mExifData.addIfdData(ifd1);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,6,3,2,0,0,0.47,23,16
2489_72,72,72,ifd1 = new IfdData(IfdId.TYPE_IFD_1);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.33,25,17
2489_73,73,73,mExifData.addIfdData(ifd1);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.49,24,16
2489_75,75,75,int stripCount = mExifData.getStripCount();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.58,22,15
2489_76,76,76,ExifTag offsetTag = mInterface.buildUninitializedTag(ExifInterface.TAG_STRIP_OFFSETS);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,2,0,2,0.7,21,14
2489_77,77,80,"if (offsetTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_STRIP_OFFSETS);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,6,3,2,0,2,0.68,17,12
2489_78,78,79,"throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_STRIP_OFFSETS);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,6,3,2,0,2,0.66,18,12
2489_81,81,82,"ExifTag lengthTag = mInterface
.buildUninitializedTag(ExifInterface.TAG_STRIP_BYTE_COUNTS);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,6,3,2,0,2,0.68,15,11
2489_83,83,86,"if (lengthTag == null) {
throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_STRIP_BYTE_COUNTS);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,6,3,2,0,2,0.65,11,9
2489_84,84,85,"throw new IOException(""No definition for crucial exif tag: ""
+ ExifInterface.TAG_STRIP_BYTE_COUNTS);",0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,6,3,2,0,1,0.6,12,9
2489_87,87,87,long[] lengths = new long[stripCount];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,2,0,1,0.49,10,8
2489_88,88,90,"for (int i = 0; i < mExifData.getStripCount(); i++) {
lengths[i] = mExifData.getStrip(i).length;
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,2,0,2,0.68,7,6
2489_89,89,89,lengths[i] = mExifData.getStrip(i).length;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,2,0.73,8,6
2489_91,91,91,lengthTag.setValue(lengths);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,2,0.63,6,5
2489_92,92,92,ifd1.setTag(offsetTag);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,2,0,2,0.67,5,4
2489_93,93,93,ifd1.setTag(lengthTag);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,2,0,2,0.68,4,3
2489_94,94,94,ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,2,0,2,0.66,3,2
2489_95,95,96,"ifd1.removeTag(ExifInterface
.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,6,3,2,0,3,0.73,1,1
2489_97,97,97,} else if (ifd1 != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.32,0,0
2489_98,98,98,ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_OFFSETS));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,2,0,3,0.72,0,0
2489_99,99,99,ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_STRIP_BYTE_COUNTS));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,2,0,2,0.67,1,0
2489_100,100,100,ifd1.removeTag(ExifInterface.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,2,0,2,0.66,2,1
2489_101,101,102,"ifd1.removeTag(ExifInterface
.getTrueTagKey(ExifInterface.TAG_JPEG_INTERCHANGE_FORMAT_LENGTH));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,6,3,2,0,3,0.73,3,2
3221_1,1,1,private void onCreateTinyPlanet() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,3,0.47,0,0
3221_2,2,2,synchronized (mRendering) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,1,0.56,0,0
3221_3,3,3,mRenderOneMore = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,1,0.51,1,0
3221_6,6,7,"final String savingTinyPlanet = getActivity().getResources().getString(
R.string.saving_tiny_planet);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,0,9,5,2,0,2,0.32,4,2
3221_8,8,8,"(new AsyncTask<Void, Void, TinyPlanetImage>() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,2,0.42,6,3
3221_9,9,10,"@Override
protected void onPreExecute() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,5,2,0,0,0.36,7,3
3221_11,11,11,"mDialog = ProgressDialog.show(getActivity(), null, savingTinyPlanet, true, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,2,0.32,9,5
3221_14,14,15,"@Override
protected TinyPlanetImage doInBackground(Void... params) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,9,5,2,0,2,0.35,12,6
3221_16,16,16,return createTinyPlanet();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,5,2,0,3,0.49,14,7
3221_19,19,20,"@Override
protected void onPostExecute(TinyPlanetImage image) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,9,5,2,0,2,0.36,17,8
3221_21,21,21,final CameraActivity activity = (CameraActivity) getActivity();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,2,0,0,0.26,19,9
3221_22,22,22,MediaSaveService mediaSaveService = activity.getMediaSaveService();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,2,0,0,0.3,20,9
3221_23,23,31,"OnMediaSavedListener doneListener =
new OnMediaSavedListener() {
@Override
public void onMediaSaved(Uri uri) {
activity.notifyNewMedia(uri);
mDialog.dismiss();
TinyPlanetFragment.this.dismiss();
}
};",0,0,0,0,0,1,0,0,0,0,2,9,0,1,0,0,9,5,2,0,2,0.35,21,10
3221_32,32,32,String tinyPlanetTitle = FILENAME_PREFIX + mOriginalTitle;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,2,0,2,0.4,30,12
3221_33,33,35,"mediaSaveService.addImage(image.mJpegData, tinyPlanetTitle, (new Date()).getTime(),
null,
image.mSize, image.mSize, 0, null, doneListener, getActivity()",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,9,5,2,0,2,0.42,31,12
3221_36,36,36,".getContentResolver(),PhotoModule.PIXEL_FORMAT_JPEG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.37,34,14
3221_38,38,38,}).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.42,36,15
3222_1,1,1,private void onCreateTinyPlanet() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.43,25,12
3222_2,2,2,synchronized (mRendering) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.31,24,11
3222_3,3,3,mRenderOneMore = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.29,23,10
3222_6,6,7,"final String savingTinyPlanet = getActivity().getResources().getString(
R.string.saving_tiny_planet);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,0,6,4,1,0,0,0.31,19,9
3222_8,8,8,"(new AsyncTask<Void, Void, TinyPlanetImage>() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.51,18,8
3222_9,9,10,"@Override
protected void onPreExecute() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,1,0,0,0.37,16,7
3222_11,11,11,"mDialog = ProgressDialog.show(getActivity(), null, savingTinyPlanet, true, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.37,15,6
3222_14,14,15,"@Override
protected TinyPlanetImage doInBackground(Void... params) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,4,1,0,0,0.38,11,5
3222_16,16,16,return createTinyPlanet();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.31,10,4
3222_19,19,20,"@Override
protected void onPostExecute(TinyPlanetImage image) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,4,1,0,0,0.39,6,3
3222_21,21,21,final CameraActivity activity = (CameraActivity) getActivity();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.32,5,2
3222_22,22,22,MediaSaveService mediaSaveService = activity.getMediaSaveService();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.31,4,1
3222_23,23,31,"OnMediaSavedListener doneListener =
new OnMediaSavedListener() {
@Override
public void onMediaSaved(Uri uri) {
activity.notifyNewMedia(uri);
mDialog.dismiss();
TinyPlanetFragment.this.dismiss();
}
};",0,0,0,0,0,1,0,0,0,0,2,9,0,1,0,0,6,4,1,0,2,0.55,0,0
3222_32,32,32,String tinyPlanetTitle = FILENAME_PREFIX + mOriginalTitle;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.34,5,0
3222_33,33,35,"mediaSaveService.addImage(image.mJpegData, tinyPlanetTitle, (new Date()).getTime(),
null,
image.mSize, image.mSize, 0, null, doneListener, getActivity()",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,6,4,1,0,2,0.55,6,0
3222_36,36,36,".getContentResolver(),PhotoModule.PIXEL_FORMAT_JPEG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.46,9,2
3222_38,38,38,}).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.34,11,3
4888_1,1,2,"@Override
public void onLayout(boolean changed, int l, int t, int r, int b) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,9,1,0,3,0.56,4,4
4888_3,3,3,int orientation = getResources().getConfiguration().orientation;,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,10,9,1,0,0,0.35,3,3
4888_4,4,4,int size = getResources().getDimensionPixelSize(R.dimen.camera_controls_size);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,10,9,1,0,1,0.54,2,2
4888_5,5,5,int rotation = getUnifiedRotation();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,9,1,0,0,0.4,1,1
4888_6,6,6,adjustBackground();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,0,0.41,0,0
4888_7,7,7,r = r - l;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,2,0.73,0,0
4888_8,8,8,b = b - t;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,1,0.71,1,0
4888_9,9,9,l = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,1,0.53,2,1
4888_10,10,10,t = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,0,0.32,3,2
4888_11,11,14,"for (int i = 0; i < getChildCount(); i++) {
View v = getChildAt(i);
v.layout(l, t, r, b);
}",0,0,1,0,0,0,0,0,0,2,1,4,0,0,0,0,10,9,1,0,4,0.65,4,3
4888_12,12,12,View v = getChildAt(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,9,1,0,1,0.5,5,4
4888_13,13,13,"v.layout(l, t, r, b);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,9,1,0,3,0.7,6,5
4888_15,15,15,Rect shutter = new Rect();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,9,1,0,0,0.44,8,7
4888_16,16,16,"center(mShutter, l, t, r, b, orientation, rotation, shutter, SHUTTER_INDEX);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,9,1,0,3,0.68,9,7
4888_17,17,17,"mSize = (int) (Math.max(shutter.right - shutter.left, shutter.bottom - shutter.top) * 1.2f);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,9,1,0,0,0.53,10,8
4888_18,18,18,"center(mBackgroundView, l, t, r, b, orientation, rotation, new Rect(), -1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,3,0.63,11,9
4888_19,19,19,mBackgroundView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,0,0.4,12,10
4888_20,20,20,"setLocation(r - l, b - t);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,10,9,1,0,3,0.67,13,11
4888_22,22,22,View retake = findViewById(R.id.btn_retake);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,10,9,1,0,1,0.48,15,13
4888_23,23,35,"if (retake != null) {
mReviewRetakeButton = retake;
mReviewCancelButton = findViewById(R.id.btn_cancel);
mReviewDoneButton = findViewById(R.id.done_button);

center(mReviewRetakeButton, shutter, rotation);
toLeft(mReviewCancelButton, shutter, rotation);
toRight(mReviewDoneButton, shutter, rotation);
} else {
mReviewRetakeButton = null;
mReviewCancelButton = null;
mReviewDoneButton = null;
}",1,0,0,0,0,0,0,0,0,10,1,13,1,1,0,0,10,9,1,0,1,0.53,16,13
4888_24,24,24,mReviewRetakeButton = retake;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,0,0.45,17,14
4888_25,25,25,mReviewCancelButton = findViewById(R.id.btn_cancel);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,9,1,0,1,0.5,18,15
4888_26,26,26,mReviewDoneButton = findViewById(R.id.done_button);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,10,9,1,0,1,0.48,19,16
4888_28,28,28,"center(mReviewRetakeButton, shutter, rotation);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,10,9,1,0,0,0.52,21,18
4888_29,29,29,"toLeft(mReviewCancelButton, shutter, rotation);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,9,1,0,0,0.51,22,18
4888_30,30,30,"toRight(mReviewDoneButton, shutter, rotation);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,9,1,0,0,0.49,23,19
4888_31,31,31,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,0,0.31,24,20
4888_32,32,32,mReviewRetakeButton = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,0,0.4,25,21
4888_33,33,33,mReviewCancelButton = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,0,0.42,26,22
4888_34,34,34,mReviewDoneButton = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,0,0.39,27,23
4888_36,36,36,layoutRemaingPhotos();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,0,0.4,29,25
4889_1,1,2,"private void center(View v, int l, int t, int r, int b, int orientation, int rotation,
Rect result, int idx) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.46,5,5
4889_3,3,3,FrameLayout.LayoutParams lp = (FrameLayout.LayoutParams) v.getLayoutParams();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.54,4,4
4889_4,4,4,int tw = lp.leftMargin + v.getMeasuredWidth() + lp.rightMargin;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.56,3,3
4889_5,5,5,int th = lp.topMargin + v.getMeasuredHeight() + lp.bottomMargin;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.63,2,2
4889_6,6,6,switch (rotation) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.5,1,1
4889_7,7,8,"case 0:
result.left = (r + l) / 2 - tw / 2 + lp.leftMargin;",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,4,0,0,-1,0.51,0,0
4889_9,9,9,result.right = (r + l) / 2 + tw / 2 - lp.rightMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.52,1,0
4889_10,10,10,result.bottom = b - lp.bottomMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.62,2,1
4889_11,11,11,result.top = b - th + lp.topMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.57,3,2
4889_12,12,12,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,4,0,0,0,0.23,4,3
4889_13,13,14,"case 90:
result.right = r - lp.rightMargin;",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,4,0,0,0,0.53,5,4
4889_15,15,15,result.left = r - tw + lp.leftMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.55,7,6
4889_16,16,16,result.top = (b + t) / 2 - th / 2 + lp.topMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.55,8,6
4889_17,17,17,result.bottom = (b + t) / 2 + th / 2 - lp.bottomMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.61,9,7
4889_18,18,18,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,4,0,0,0,0.23,10,8
4889_19,19,20,"case 180:
result.left = (r + l) / 2 - tw / 2 + lp.leftMargin;",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,4,0,0,0,0.52,11,9
4889_21,21,21,result.right = (r + l) / 2 + tw / 2 - lp.rightMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.52,13,11
4889_22,22,22,result.top = t + lp.topMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.56,14,11
4889_23,23,23,result.bottom = t + th - lp.bottomMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.66,15,12
4889_24,24,24,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,4,0,0,0,0.23,16,13
4889_25,25,26,"case 270:
result.left = l + lp.leftMargin;",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,4,0,0,0,0.53,17,14
4889_27,27,27,result.right = l + tw - lp.rightMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.53,19,16
4889_28,28,28,result.top = (b + t) / 2 - th / 2 + lp.topMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.55,20,16
4889_29,29,29,result.bottom = (b + t) / 2 + th / 2 - lp.bottomMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.61,21,17
4889_30,30,30,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,4,0,0,0,0.23,22,18
4889_32,32,32,"v.layout(result.left, result.top, result.right, result.bottom);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.51,24,20
4889_33,33,38,"if (idx != -1) {
int idx1 = rotation / 90;
int idx2 = idx;
mLocX[idx1][idx2] = result.left;
mLocY[idx1][idx2] = result.top;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,4,4,0,0,0,0.45,25,20
4889_34,34,34,int idx1 = rotation / 90;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.44,26,21
4889_35,35,35,int idx2 = idx;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.32,27,22
4889_36,36,36,mLocX[idx1][idx2] = result.left;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.45,28,23
4889_37,37,37,mLocY[idx1][idx2] = result.top;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.39,29,24
4890_1,1,2,"private void center(View v, int l, int t, int r, int b, int orientation, int rotation,
Rect result, int idx) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.47,11,10
4890_3,3,3,FrameLayout.LayoutParams lp = (FrameLayout.LayoutParams) v.getLayoutParams();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.53,10,9
4890_4,4,4,int tw = lp.leftMargin + v.getMeasuredWidth() + lp.rightMargin;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.61,9,8
4890_5,5,5,int th = lp.topMargin + v.getMeasuredHeight() + lp.bottomMargin;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.57,8,7
4890_6,6,6,switch (rotation) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.44,7,6
4890_7,7,8,"case 0:
result.left = (r + l) / 2 - tw / 2 + lp.leftMargin;",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,4,0,0,0,0.54,5,5
4890_9,9,9,result.right = (r + l) / 2 + tw / 2 - lp.rightMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.6,4,4
4890_10,10,10,result.bottom = b - lp.bottomMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.54,3,3
4890_11,11,11,result.top = b - th + lp.topMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.54,2,2
4890_12,12,12,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,4,0,0,0,0.26,1,1
4890_13,13,14,"case 90:
result.right = r - lp.rightMargin;",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,4,0,0,-1,0.62,0,0
4890_15,15,15,result.left = r - tw + lp.leftMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.6,1,0
4890_16,16,16,result.top = (b + t) / 2 - th / 2 + lp.topMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.53,2,1
4890_17,17,17,result.bottom = (b + t) / 2 + th / 2 - lp.bottomMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.54,3,2
4890_18,18,18,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,4,0,0,0,0.26,4,3
4890_19,19,20,"case 180:
result.left = (r + l) / 2 - tw / 2 + lp.leftMargin;",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,4,0,0,0,0.54,5,4
4890_21,21,21,result.right = (r + l) / 2 + tw / 2 - lp.rightMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.6,7,6
4890_22,22,22,result.top = t + lp.topMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.52,8,6
4890_23,23,23,result.bottom = t + th - lp.bottomMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.58,9,7
4890_24,24,24,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,4,0,0,0,0.26,10,8
4890_25,25,26,"case 270:
result.left = l + lp.leftMargin;",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,4,0,0,0,0.55,11,9
4890_27,27,27,result.right = l + tw - lp.rightMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.63,13,11
4890_28,28,28,result.top = (b + t) / 2 - th / 2 + lp.topMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.53,14,11
4890_29,29,29,result.bottom = (b + t) / 2 + th / 2 - lp.bottomMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.54,15,12
4890_30,30,30,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,4,0,0,0,0.26,16,13
4890_32,32,32,"v.layout(result.left, result.top, result.right, result.bottom);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.52,18,15
4890_33,33,38,"if (idx != -1) {
int idx1 = rotation / 90;
int idx2 = idx;
mLocX[idx1][idx2] = result.left;
mLocY[idx1][idx2] = result.top;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,4,4,0,0,0,0.43,19,15
4890_34,34,34,int idx1 = rotation / 90;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.38,20,16
4890_35,35,35,int idx2 = idx;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.31,21,17
4890_36,36,36,mLocX[idx1][idx2] = result.left;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.46,22,18
4890_37,37,37,mLocY[idx1][idx2] = result.top;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.35,23,19
4891_1,1,2,"private void center(View v, int l, int t, int r, int b, int orientation, int rotation,
Rect result, int idx) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.4,17,15
4891_3,3,3,FrameLayout.LayoutParams lp = (FrameLayout.LayoutParams) v.getLayoutParams();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.42,16,14
4891_4,4,4,int tw = lp.leftMargin + v.getMeasuredWidth() + lp.rightMargin;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.43,15,13
4891_5,5,5,int th = lp.topMargin + v.getMeasuredHeight() + lp.bottomMargin;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.57,14,12
4891_6,6,6,switch (rotation) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.43,13,11
4891_7,7,8,"case 0:
result.left = (r + l) / 2 - tw / 2 + lp.leftMargin;",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,3,0,0,0,0.41,11,10
4891_9,9,9,result.right = (r + l) / 2 + tw / 2 - lp.rightMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.41,10,9
4891_10,10,10,result.bottom = b - lp.bottomMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.48,9,8
4891_11,11,11,result.top = b - th + lp.topMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.6,8,7
4891_12,12,12,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.28,7,6
4891_13,13,14,"case 90:
result.right = r - lp.rightMargin;",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,3,0,0,0,0.42,5,5
4891_15,15,15,result.left = r - tw + lp.leftMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.43,4,4
4891_16,16,16,result.top = (b + t) / 2 - th / 2 + lp.topMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.57,3,3
4891_17,17,17,result.bottom = (b + t) / 2 + th / 2 - lp.bottomMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.49,2,2
4891_18,18,18,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.28,1,1
4891_19,19,20,"case 180:
result.left = (r + l) / 2 - tw / 2 + lp.leftMargin;",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,3,0,0,-1,0.41,0,0
4891_21,21,21,result.right = (r + l) / 2 + tw / 2 - lp.rightMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.41,1,0
4891_22,22,22,result.top = t + lp.topMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.59,2,1
4891_23,23,23,result.bottom = t + th - lp.bottomMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.52,3,2
4891_24,24,24,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.28,4,3
4891_25,25,26,"case 270:
result.left = l + lp.leftMargin;",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,3,0,0,0,0.42,5,4
4891_27,27,27,result.right = l + tw - lp.rightMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.42,7,6
4891_28,28,28,result.top = (b + t) / 2 - th / 2 + lp.topMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.57,8,6
4891_29,29,29,result.bottom = (b + t) / 2 + th / 2 - lp.bottomMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.49,9,7
4891_30,30,30,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.28,10,8
4891_32,32,32,"v.layout(result.left, result.top, result.right, result.bottom);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.47,12,10
4891_33,33,38,"if (idx != -1) {
int idx1 = rotation / 90;
int idx2 = idx;
mLocX[idx1][idx2] = result.left;
mLocY[idx1][idx2] = result.top;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,4,3,0,0,1,0.47,13,10
4891_34,34,34,int idx1 = rotation / 90;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.34,14,11
4891_35,35,35,int idx2 = idx;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.32,15,12
4891_36,36,36,mLocX[idx1][idx2] = result.left;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.36,16,13
4891_37,37,37,mLocY[idx1][idx2] = result.top;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.53,17,14
4892_1,1,2,"private void center(View v, int l, int t, int r, int b, int orientation, int rotation,
Rect result, int idx) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,2,0,0,0.5,23,20
4892_3,3,3,FrameLayout.LayoutParams lp = (FrameLayout.LayoutParams) v.getLayoutParams();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,0,0.55,22,19
4892_4,4,4,int tw = lp.leftMargin + v.getMeasuredWidth() + lp.rightMargin;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.62,21,18
4892_5,5,5,int th = lp.topMargin + v.getMeasuredHeight() + lp.bottomMargin;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,0,0.59,20,17
4892_6,6,6,switch (rotation) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,0,0.4,19,16
4892_7,7,8,"case 0:
result.left = (r + l) / 2 - tw / 2 + lp.leftMargin;",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,2,2,0,1,0.6,17,15
4892_9,9,9,result.right = (r + l) / 2 + tw / 2 - lp.rightMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,0,0.58,16,14
4892_10,10,10,result.bottom = b - lp.bottomMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,0,0.58,15,13
4892_11,11,11,result.top = b - th + lp.topMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,0,0.56,14,12
4892_12,12,12,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,2,2,0,0,0.33,13,11
4892_13,13,14,"case 90:
result.right = r - lp.rightMargin;",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,2,2,0,0,0.6,11,10
4892_15,15,15,result.left = r - tw + lp.leftMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.66,10,9
4892_16,16,16,result.top = (b + t) / 2 - th / 2 + lp.topMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,0,0.55,9,8
4892_17,17,17,result.bottom = (b + t) / 2 + th / 2 - lp.bottomMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,0,0.58,8,7
4892_18,18,18,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,2,2,0,0,0.33,7,6
4892_19,19,20,"case 180:
result.left = (r + l) / 2 - tw / 2 + lp.leftMargin;",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,2,2,0,1,0.61,5,5
4892_21,21,21,result.right = (r + l) / 2 + tw / 2 - lp.rightMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,0,0.58,4,4
4892_22,22,22,result.top = t + lp.topMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,0,0.53,3,3
4892_23,23,23,result.bottom = t + th - lp.bottomMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,0,0.6,2,2
4892_24,24,24,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,2,2,0,0,0.33,1,1
4892_25,25,26,"case 270:
result.left = l + lp.leftMargin;",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,2,2,0,-1,0.62,0,0
4892_27,27,27,result.right = l + tw - lp.rightMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,0,0.59,1,0
4892_28,28,28,result.top = (b + t) / 2 - th / 2 + lp.topMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,0,0.55,2,1
4892_29,29,29,result.bottom = (b + t) / 2 + th / 2 - lp.bottomMargin;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,0,0.58,3,2
4892_30,30,30,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,2,2,0,0,0.33,4,3
4892_32,32,32,"v.layout(result.left, result.top, result.right, result.bottom);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.54,6,5
4892_33,33,38,"if (idx != -1) {
int idx1 = rotation / 90;
int idx2 = idx;
mLocX[idx1][idx2] = result.left;
mLocY[idx1][idx2] = result.top;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,4,2,2,0,1,0.51,7,5
4892_34,34,34,int idx1 = rotation / 90;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,2,0,0,0.46,8,6
4892_35,35,35,int idx2 = idx;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,0,0.36,9,7
4892_36,36,36,mLocX[idx1][idx2] = result.left;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.53,10,8
4892_37,37,37,mLocY[idx1][idx2] = result.top;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,0,0.37,11,9
4893_1,1,1,private void adjustBackground() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.43,1,1
4893_2,2,2,int rotation = getUnifiedRotation();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.49,0,0
4893_3,3,3,mBackgroundView.setBackgroundDrawable(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.48,0,0
4893_4,4,4,mBackgroundView.setRotationX(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.53,1,0
4893_5,5,5,mBackgroundView.setRotationY(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.52,2,1
4893_6,6,6,switch (rotation) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.55,3,2
4893_7,7,8,"case 180:
mBackgroundView.setRotationX(180);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,0,0,1,0.56,4,3
4893_9,9,9,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,4,0,0,0,0.19,6,5
4893_10,10,11,"case 270:
mBackgroundView.setRotationY(180);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,0,0,1,0.55,7,5
4893_12,12,12,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,4,0,0,0,0.19,9,7
4893_13,13,14,"default:
break;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,0,0,0,0.23,10,7
4893_16,16,16,mBackgroundView.setBackgroundResource(R.drawable.switcher_bg);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.48,13,9
4894_1,1,1,private void adjustBackground() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,3,0,1,0.51,4,4
4894_2,2,2,int rotation = getUnifiedRotation();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,13,6,3,0,0,0.49,3,3
4894_3,3,3,mBackgroundView.setBackgroundDrawable(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,3,0,2,0.63,2,2
4894_4,4,4,mBackgroundView.setRotationX(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,3,0,1,0.64,1,1
4894_5,5,5,mBackgroundView.setRotationY(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,3,0,1,0.61,0,0
4894_6,6,6,switch (rotation) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,3,0,0,0.48,0,0
4894_7,7,8,"case 180:
mBackgroundView.setRotationX(180);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,13,6,3,0,1,0.63,1,0
4894_9,9,9,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,13,6,3,0,0,0.24,3,2
4894_10,10,11,"case 270:
mBackgroundView.setRotationY(180);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,13,6,3,0,1,0.6,4,2
4894_12,12,12,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,13,6,3,0,0,0.24,6,4
4894_13,13,14,"default:
break;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,13,6,3,0,0,0.23,7,4
4894_16,16,16,mBackgroundView.setBackgroundResource(R.drawable.switcher_bg);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,3,0,3,0.66,10,6
238_1,1,1,"public void initialize(ListPreference timer, ListPreference beep) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.39,2,2
238_2,2,2,mTimer = timer;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.18,1,1
238_3,3,3,mBeep = beep;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.45,0,0
238_4,4,4,mTitle.setText(mTimer.getTitle());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,1,0,2,0.83,0,0
238_6,6,6,CharSequence[] entries = mTimer.getEntryValues();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,1,1,0,0,0.29,2,1
238_7,7,7,mDurations = new String[entries.length];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.29,3,1
238_8,8,8,Locale locale = getResources().getConfiguration().locale;,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,2,1,1,0,0,0.26,4,2
238_9,9,9,mDurations[0] = getResources().getString(R.string.setting_off);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,1,1,0,1,0.63,5,3
238_10,10,11,"for (int i = 1; i < entries.length; i++)
mDurations[i] =  String.format(locale, ""%d"", Integer.parseInt(entries[i].toString()));",0,0,1,0,0,0,0,0,0,1,0,2,0,0,0,0,2,1,1,0,0,0.29,6,4
238_11,11,11,"mDurations[i] =  String.format(locale, ""%d"", Integer.parseInt(entries[i].toString()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.29,7,5
238_12,12,12,int durationCount = mDurations.length;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.27,8,6
238_13,13,13,mNumberSpinner = (NumberPicker) findViewById(R.id.duration);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.45,9,7
238_14,14,14,mNumberSpinner.setMinValue(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.67,10,8
238_15,15,15,mNumberSpinner.setMaxValue(durationCount - 1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.63,11,9
238_16,16,16,mNumberSpinner.setDisplayedValues(mDurations);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.71,12,10
238_17,17,17,mNumberSpinner.setWrapSelectorWheel(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.69,13,11
238_18,18,18,mNumberSpinner.setOnValueChangedListener(new OnValueChangeListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.63,14,12
238_19,19,20,"@Override
public void onValueChange(NumberPicker picker, int oldValue, int newValue) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,1,0,0,0.34,15,13
238_21,21,21,setTimeSelectionEnabled(newValue != 0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.51,17,15
238_24,24,24,mConfirmButton = (Button) findViewById(R.id.timer_set_button);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,1,1,0,1,0.65,20,16
238_25,25,25,mPickerTitle = findViewById(R.id.set_time_interval_title);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,2,1,1,0,2,0.75,21,16
238_27,27,27,mNumberSpinner.setDescendantFocusability(NumberPicker.FOCUS_BLOCK_DESCENDANTS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,1,1,0,1,0.64,23,18
238_29,29,29,mConfirmButton.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,1,1,0,1,0.62,25,19
238_30,30,30,public void onClick(View v) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.39,26,19
238_31,31,31,updateInputState();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.31,27,20
238_34,34,34,mTimerSound = (CheckBox) findViewById(R.id.sound_check_box);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,1,1,0,0,0.38,30,22
238_35,35,35,mSoundTitle = findViewById(R.id.beep_title);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,1,1,0,1,0.62,31,22
239_1,1,1,"public void initialize(ListPreference timer, ListPreference beep) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.44,25,20
239_2,2,2,mTimer = timer;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.29,24,19
239_3,3,3,mBeep = beep;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.46,23,18
239_4,4,4,mTitle.setText(mTimer.getTitle());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,5,1,0,0,0.47,22,17
239_6,6,6,CharSequence[] entries = mTimer.getEntryValues();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,5,1,0,0,0.29,20,16
239_7,7,7,mDurations = new String[entries.length];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,1,0,0,0.29,19,15
239_8,8,8,Locale locale = getResources().getConfiguration().locale;,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,6,5,1,0,0,0.3,18,14
239_9,9,9,mDurations[0] = getResources().getString(R.string.setting_off);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,5,1,0,0,0.38,17,13
239_10,10,11,"for (int i = 1; i < entries.length; i++)
mDurations[i] =  String.format(locale, ""%d"", Integer.parseInt(entries[i].toString()));",0,0,1,0,0,0,0,0,0,1,0,2,0,0,0,0,6,5,1,0,0,0.3,15,11
239_11,11,11,"mDurations[i] =  String.format(locale, ""%d"", Integer.parseInt(entries[i].toString()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.3,15,11
239_12,12,12,int durationCount = mDurations.length;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.28,14,10
239_13,13,13,mNumberSpinner = (NumberPicker) findViewById(R.id.duration);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.51,13,9
239_14,14,14,mNumberSpinner.setMinValue(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.43,12,8
239_15,15,15,mNumberSpinner.setMaxValue(durationCount - 1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.42,11,7
239_16,16,16,mNumberSpinner.setDisplayedValues(mDurations);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.47,10,6
239_17,17,17,mNumberSpinner.setWrapSelectorWheel(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.53,9,5
239_18,18,18,mNumberSpinner.setOnValueChangedListener(new OnValueChangeListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.42,8,4
239_19,19,20,"@Override
public void onValueChange(NumberPicker picker, int oldValue, int newValue) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,0,0.38,6,3
239_21,21,21,setTimeSelectionEnabled(newValue != 0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.36,5,2
239_24,24,24,mConfirmButton = (Button) findViewById(R.id.timer_set_button);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,5,1,0,0,0.45,2,1
239_25,25,25,mPickerTitle = findViewById(R.id.set_time_interval_title);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,6,5,1,0,0,0.5,1,0
239_27,27,27,mNumberSpinner.setDescendantFocusability(NumberPicker.FOCUS_BLOCK_DESCENDANTS);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,5,1,0,2,0.6,0,0
239_29,29,29,mConfirmButton.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,5,1,0,0,0.45,2,1
239_30,30,30,public void onClick(View v) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.44,3,1
239_31,31,31,updateInputState();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.41,4,2
239_34,34,34,mTimerSound = (CheckBox) findViewById(R.id.sound_check_box);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,5,1,0,0,0.4,7,4
239_35,35,35,mSoundTitle = findViewById(R.id.beep_title);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,5,1,0,0,0.49,8,4
4895_1,1,1,"private void setDetails(Context context, MediaDetails details) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.38,78,59
4895_2,2,2,boolean resolutionIsValid = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.37,77,58
4895_3,3,3,String path = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,3,0,0,0.37,76,57
4895_4,4,97,"for (Entry<Integer, Object> detail : details) {
String value;
switch (detail.getKey()) {
case MediaDetails.INDEX_SIZE: {
value = Formatter.formatFileSize(
context, (Long) detail.getValue());
break;
}
case MediaDetails.INDEX_WHITE_BALANCE: {
value = ""1"".equals(detail.getValue())
? context.getString(R.string.manual)
: context.getString(R.string.auto);
break;
}
case MediaDetails.INDEX_FLASH: {
MediaDetails.FlashState flash =
(MediaDetails.FlashState) detail.getValue();
if (flash.isFlashFired()) {
value = context.getString(R.string.flash_on);
} else {
value = context.getString(R.string.flash_off);
}
break;
}
case MediaDetails.INDEX_EXPOSURE_TIME: {
value = (String) detail.getValue();
double time = Double.valueOf(value);
if (time < 1.0f) {
value = String.format(mDefaultLocale, ""%d/%d"", 1,
(int) (0.5f + 1 / time));
} else {
int integer = (int) time;
time -= integer;
value = String.valueOf(integer) + ""''"";
if (time > 0.0001) {
value += String.format(mDefaultLocale, "" %d/%d"", 1,
(int) (0.5f + 1 / time));
}
}
break;
}
case MediaDetails.INDEX_WIDTH:
mWidthIndex = mItems.size();
if (detail.getValue().toString().equalsIgnoreCase(""0"")) {
value = context.getString(R.string.unknown);
resolutionIsValid = false;
} else {
value = toLocalInteger(detail.getValue());
}
break;
case MediaDetails.INDEX_HEIGHT: {
mHeightIndex = mItems.size();
if (detail.getValue().toString().equalsIgnoreCase(""0"")) {
value = context.getString(R.string.unknown);
resolutionIsValid = false;
} else {
value = toLocalInteger(detail.getValue());
}
break;
}
case MediaDetails.INDEX_PATH:
value = ""\n"" + detail.getValue().toString();
path = detail.getValue().toString();
break;
case MediaDetails.INDEX_ORIENTATION:
value = toLocalInteger(detail.getValue());
break;
case MediaDetails.INDEX_ISO:
value = toLocalNumber(Integer.parseInt((String) detail.getValue()));
break;
case MediaDetails.INDEX_FOCAL_LENGTH:
double focalLength = Double.parseDouble(detail.getValue().toString());
value = toLocalNumber(focalLength);
break;
default: {
Object valueObj = detail.getValue();
if (valueObj == null) {
fail(""%s's value is Null"",
getDetailsName(context,
detail.getKey()));
}
value = valueObj.toString();
}
}
int key = detail.getKey();
if (details.hasUnit(key)) {
value = String.format(""%s: %s %s"", getDetailsName(
context, key), value, context.getString(details.getUnit(key)));
} else {
value = String.format(""%s: %s"", getDetailsName(
context, key), value);
}
mItems.add(value);
}",0,0,0,1,0,0,0,0,0,65,5,94,0,1,0,0,7,3,3,0,1,0.5,0,0
4895_5,5,5,String value;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.35,74,55
4895_6,6,6,switch (detail.getKey()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,1,0.47,73,54
4895_7,7,7,case MediaDetails.INDEX_SIZE: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.32,72,53
4895_8,8,9,"value = Formatter.formatFileSize(
context, (Long) detail.getValue());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,3,3,0,0,0.4,70,52
4895_10,10,10,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,3,3,0,0,0.27,69,51
4895_12,12,12,case MediaDetails.INDEX_WHITE_BALANCE: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.35,67,50
4895_13,13,13,"value = ""1"".equals(detail.getValue())",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.31,66,49
4895_14,14,14,? context.getString(R.string.manual),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,3,3,0,0,0.36,65,48
4895_15,15,15,: context.getString(R.string.auto);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,3,3,0,0,0.37,64,47
4895_16,16,16,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,3,3,0,0,0.27,63,46
4895_18,18,18,case MediaDetails.INDEX_FLASH: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.41,61,45
4895_19,19,20,"MediaDetails.FlashState flash =
(MediaDetails.FlashState) detail.getValue();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,7,3,3,0,0,0.43,59,44
4895_21,21,25,"if (flash.isFlashFired()) {
value = context.getString(R.string.flash_on);
} else {
value = context.getString(R.string.flash_off);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,7,3,3,0,0,0.45,54,40
4895_22,22,22,value = context.getString(R.string.flash_on);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.43,57,42
4895_23,23,23,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.27,56,41
4895_24,24,24,value = context.getString(R.string.flash_off);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.43,55,40
4895_26,26,26,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,3,3,0,0,0.27,53,39
4895_28,28,28,case MediaDetails.INDEX_EXPOSURE_TIME: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.33,51,38
4895_29,29,29,value = (String) detail.getValue();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,3,0,0,0.34,50,37
4895_30,30,30,double time = Double.valueOf(value);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,7,3,3,0,0,0.33,49,36
4895_31,31,42,"if (time < 1.0f) {
value = String.format(mDefaultLocale, ""%d/%d"", 1,
(int) (0.5f + 1 / time));
} else {
int integer = (int) time;
time -= integer;
value = String.valueOf(integer) + ""''"";
if (time > 0.0001) {
value += String.format(mDefaultLocale, "" %d/%d"", 1,
(int) (0.5f + 1 / time));
}
}",1,0,0,0,0,0,0,0,0,7,2,12,1,1,0,0,7,3,3,0,0,0.38,37,28
4895_32,32,33,"value = String.format(mDefaultLocale, ""%d/%d"", 1,
(int) (0.5f + 1 / time));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,3,3,0,0,0.38,46,34
4895_34,34,34,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.27,45,33
4895_35,35,35,int integer = (int) time;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,3,0,0,0.29,44,32
4895_36,36,36,time -= integer;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,3,0,0,0.33,43,31
4895_37,37,37,"value = String.valueOf(integer) + ""''"";",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,3,0,0,0.34,42,30
4895_38,38,41,"if (time > 0.0001) {
value += String.format(mDefaultLocale, "" %d/%d"", 1,
(int) (0.5f + 1 / time));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,0,7,3,3,0,0,0.39,38,28
4895_39,39,40,"value += String.format(mDefaultLocale, "" %d/%d"", 1,
(int) (0.5f + 1 / time));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,3,3,0,0,0.38,39,28
4895_43,43,43,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,3,3,0,0,0.27,36,27
4895_45,45,46,"case MediaDetails.INDEX_WIDTH:
mWidthIndex = mItems.size();",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,3,3,0,0,0.36,33,26
4895_47,47,52,"if (detail.getValue().toString().equalsIgnoreCase(""0"")) {
value = context.getString(R.string.unknown);
resolutionIsValid = false;
} else {
value = toLocalInteger(detail.getValue());
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,7,3,3,0,0,0.39,27,21
4895_48,48,48,value = context.getString(R.string.unknown);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.38,31,24
4895_49,49,49,resolutionIsValid = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.36,30,23
4895_50,50,50,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.27,29,22
4895_51,51,51,value = toLocalInteger(detail.getValue());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.32,28,21
4895_53,53,53,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,3,3,0,0,0.27,26,20
4895_54,54,54,case MediaDetails.INDEX_HEIGHT: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.3,25,19
4895_55,55,55,mHeightIndex = mItems.size();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.36,24,18
4895_56,56,61,"if (detail.getValue().toString().equalsIgnoreCase(""0"")) {
value = context.getString(R.string.unknown);
resolutionIsValid = false;
} else {
value = toLocalInteger(detail.getValue());
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,7,3,3,0,0,0.39,18,13
4895_57,57,57,value = context.getString(R.string.unknown);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.38,22,16
4895_58,58,58,resolutionIsValid = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.36,21,15
4895_59,59,59,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.27,20,14
4895_60,60,60,value = toLocalInteger(detail.getValue());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.32,19,13
4895_62,62,62,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,3,3,0,0,0.27,17,12
4895_64,64,65,"case MediaDetails.INDEX_PATH:
value = ""\n"" + detail.getValue().toString();",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,7,3,3,0,0,0.34,14,11
4895_66,66,66,path = detail.getValue().toString();,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,3,3,0,0,0.35,13,10
4895_67,67,67,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,3,3,0,0,0.27,12,9
4895_68,68,69,"case MediaDetails.INDEX_ORIENTATION:
value = toLocalInteger(detail.getValue());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,3,3,0,0,0.33,10,8
4895_70,70,70,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,3,3,0,0,0.27,9,7
4895_71,71,72,"case MediaDetails.INDEX_ISO:
value = toLocalNumber(Integer.parseInt((String) detail.getValue()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,3,3,0,0,0.34,7,6
4895_73,73,73,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,3,3,0,0,0.27,6,5
4895_74,74,75,"case MediaDetails.INDEX_FOCAL_LENGTH:
double focalLength = Double.parseDouble(detail.getValue().toString());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,7,3,3,0,0,0.35,4,4
4895_76,76,76,value = toLocalNumber(focalLength);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,3,0,0,0.32,3,3
4895_77,77,77,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,3,3,0,0,0.27,2,2
4895_78,78,78,default: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.26,1,1
4895_79,79,79,Object valueObj = detail.getValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,3,0,0,0.43,0,0
4895_80,80,84,"if (valueObj == null) {
fail(""%s's value is Null"",
getDetailsName(context,
detail.getKey()));
}",1,0,0,0,0,0,0,0,0,1,1,5,0,1,0,0,7,3,3,0,1,0.52,0,0
4895_81,81,83,"fail(""%s's value is Null"",
getDetailsName(context,
detail.getKey()));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,7,3,3,0,1,0.48,1,0
4895_85,85,85,value = valueObj.toString();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,3,0,0,0.45,5,2
4895_88,88,88,int key = detail.getKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,3,0,1,0.48,8,3
4895_89,89,95,"if (details.hasUnit(key)) {
value = String.format(""%s: %s %s"", getDetailsName(
context, key), value, context.getString(details.getUnit(key)));
} else {
value = String.format(""%s: %s"", getDetailsName(
context, key), value);
}",1,0,0,0,0,0,0,0,0,3,1,7,0,1,0,0,7,3,3,0,1,0.44,9,3
4895_90,90,91,"value = String.format(""%s: %s %s"", getDetailsName(
context, key), value, context.getString(details.getUnit(key)));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,3,3,0,1,0.44,10,4
4895_92,92,92,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.27,12,6
4895_93,93,94,"value = String.format(""%s: %s"", getDetailsName(
context, key), value);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,3,3,0,1,0.44,13,6
4895_96,96,96,mItems.add(value);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,3,0,0,0.35,16,8
4895_98,98,100,"if (!resolutionIsValid) {
resolveResolution(path);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,3,3,0,0,0.36,18,9
4895_99,99,99,resolveResolution(path);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,3,0,0,0.33,19,9
4896_1,1,1,"public void onResolutionAvailable(int width, int height) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,2,0,3,0.67,2,2
4896_2,2,3,"if (width == 0 || height == 0)
return;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,5,1,2,0,2,0.53,0,0
4896_3,3,3,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,1,2,0,0,0.11,0,0
4896_4,4,6,"String widthString = String.format(mDefaultLocale, ""%s: %d"",
getDetailsName(
mContext, MediaDetails.INDEX_WIDTH), width);",0,0,0,0,0,1,0,0,0,0,0,3,1,0,0,0,5,1,2,0,1,0.49,0,0
4896_7,7,9,"String heightString = String.format(mDefaultLocale, ""%s: %d"",
getDetailsName(
mContext, MediaDetails.INDEX_HEIGHT), height);",0,0,0,0,0,1,0,0,0,0,0,3,1,0,0,0,5,1,2,0,1,0.49,3,1
4896_10,10,10,"mItems.set(mWidthIndex, String.valueOf(widthString));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,1,2,0,1,0.45,6,2
4896_11,11,11,"mItems.set(mHeightIndex, String.valueOf(heightString));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,1,2,0,1,0.45,7,2
4896_12,12,12,notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,2,0,0,0.28,8,3
4901_1,1,1,public void initializeDrawables(Context context) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,0,0,0,0.33,6,3
4901_2,2,2,int numDrawIds = DRAW_IDS.length;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,2,0,0,0,0.31,5,2
4901_4,4,6,"if (!PhotoSphereHelper.hasLightCycleCapture(context)) {
--numDrawIds;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,2,0,0,0,0.36,1,0
4901_5,5,5,--numDrawIds;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,0,0,0,0.31,2,0
4901_8,8,8,--numDrawIds;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,2,0,0,0,0.31,0,0
4901_10,10,10,int[] drawids = new int[numDrawIds];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,0,0,0,0.33,2,1
4901_11,11,11,int[] moduleids = new int[numDrawIds];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,0,0,0,0.33,3,1
4901_12,12,12,int ix = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,0,0,0,0.29,4,2
4901_13,13,22,"for (int i = 0; i < DRAW_IDS.length; i++) {
if (i == LIGHTCYCLE_MODULE_INDEX && !PhotoSphereHelper.hasLightCycleCapture(context)) {
continue;
}
if (i == GCAM_MODULE_INDEX) {
continue;
}
moduleids[ix] = i;
drawids[ix++] = DRAW_IDS[i];
}",0,0,1,0,0,0,0,0,0,6,2,10,0,1,0,0,5,2,0,0,0,0.39,5,3
4901_14,14,16,"if (i == LIGHTCYCLE_MODULE_INDEX && !PhotoSphereHelper.hasLightCycleCapture(context)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,2,0,0,0,0.4,6,4
4901_15,15,15,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,0,0,0,0.24,7,5
4901_17,17,19,"if (i == GCAM_MODULE_INDEX) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,2,0,0,0,0.36,9,7
4901_18,18,18,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,0,0,0,0.24,10,7
4901_20,20,20,moduleids[ix] = i;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,0,0,0,0.0,12,9
4901_21,21,21,drawids[ix++] = DRAW_IDS[i];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,0,0,0,0.3,13,9
4901_23,23,23,"setIds(moduleids, drawids);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,0,0,0,0.34,15,11
4902_1,1,1,public void initializeDrawables(Context context) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.31,14,10
4902_2,2,2,int numDrawIds = DRAW_IDS.length;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.28,13,9
4902_4,4,6,"if (!PhotoSphereHelper.hasLightCycleCapture(context)) {
--numDrawIds;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,0,0.33,9,7
4902_5,5,5,--numDrawIds;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,10,7
4902_8,8,8,--numDrawIds;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.3,7,6
4902_10,10,10,int[] drawids = new int[numDrawIds];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.29,5,5
4902_11,11,11,int[] moduleids = new int[numDrawIds];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.29,4,4
4902_12,12,12,int ix = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.14,3,3
4902_13,13,22,"for (int i = 0; i < DRAW_IDS.length; i++) {
if (i == LIGHTCYCLE_MODULE_INDEX && !PhotoSphereHelper.hasLightCycleCapture(context)) {
continue;
}
if (i == GCAM_MODULE_INDEX) {
continue;
}
moduleids[ix] = i;
drawids[ix++] = DRAW_IDS[i];
}",0,0,1,0,0,0,0,0,0,6,2,10,0,1,0,0,3,3,0,0,0,0.33,0,0
4902_14,14,16,"if (i == LIGHTCYCLE_MODULE_INDEX && !PhotoSphereHelper.hasLightCycleCapture(context)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,0,0.32,0,0
4902_15,15,15,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.17,0,0
4902_17,17,19,"if (i == GCAM_MODULE_INDEX) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,0,0.28,1,0
4902_18,18,18,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.17,2,0
4902_20,20,20,moduleids[ix] = i;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.0,4,2
4902_21,21,21,drawids[ix++] = DRAW_IDS[i];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.27,5,2
4902_23,23,23,"setIds(moduleids, drawids);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.37,7,4
4903_1,1,1,public void initializeDrawables(Context context) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,0.3,17,12
4903_2,2,2,int numDrawIds = DRAW_IDS.length;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,0,1,0,0,0.31,16,11
4903_4,4,6,"if (!PhotoSphereHelper.hasLightCycleCapture(context)) {
--numDrawIds;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,0,1,0,0,0.33,12,9
4903_5,5,5,--numDrawIds;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,0.32,13,9
4903_8,8,8,--numDrawIds;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,0,1,0,0,0.32,10,8
4903_10,10,10,int[] drawids = new int[numDrawIds];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,0,1,0,0,0.32,8,7
4903_11,11,11,int[] moduleids = new int[numDrawIds];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,0,1,0,0,0.32,7,6
4903_12,12,12,int ix = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,0,1,0,0,0.17,6,5
4903_13,13,22,"for (int i = 0; i < DRAW_IDS.length; i++) {
if (i == LIGHTCYCLE_MODULE_INDEX && !PhotoSphereHelper.hasLightCycleCapture(context)) {
continue;
}
if (i == GCAM_MODULE_INDEX) {
continue;
}
moduleids[ix] = i;
drawids[ix++] = DRAW_IDS[i];
}",0,0,1,0,0,0,0,0,0,6,2,10,0,1,0,0,2,0,1,0,0,0.34,0,0
4903_14,14,16,"if (i == LIGHTCYCLE_MODULE_INDEX && !PhotoSphereHelper.hasLightCycleCapture(context)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,0,1,0,0,0.32,2,2
4903_15,15,15,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,0.18,3,2
4903_17,17,19,"if (i == GCAM_MODULE_INDEX) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,0,1,0,0,0.32,0,0
4903_18,18,18,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,0.18,0,0
4903_20,20,20,moduleids[ix] = i;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,0,1,0,0,0.0,1,0
4903_21,21,21,drawids[ix++] = DRAW_IDS[i];,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,0,1,0,0,0.28,2,0
4903_23,23,23,"setIds(moduleids, drawids);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,0,1,0,0,0.36,4,2
4904_1,1,1,private void initPopup() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.57,4,3
4904_2,2,3,"mParent = LayoutInflater.from(getContext()).inflate(R.layout.switcher_popup,
(ViewGroup) getParent());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,4,1,0,1,0.59,2,2
4904_4,4,4,LinearLayout content = (LinearLayout) mParent.findViewById(R.id.content);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,0,0.56,1,1
4904_5,5,5,mPopup = content;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.61,0,0
4904_6,6,6,LayoutParams lp = ((LayoutParams) mPopup.getLayoutParams());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.62,0,0
4904_7,7,7,lp.gravity = ((LayoutParams) mParent.findViewById(R.id.camera_switcher),0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.57,1,0
4904_8,8,8,.getLayoutParams()).gravity;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.58,2,1
4904_9,9,9,mPopup.setLayoutParams(lp);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,4,1,0,2,0.74,3,2
4904_11,11,11,mPopup.setVisibility(View.INVISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,4,1,0,2,0.72,5,4
4904_12,12,12,mNeedsAnimationSetup = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.43,6,4
4904_13,13,52,"for (int i = mDrawIds.length - 1; i >= 0; i--) {
RotateImageView item = new RotateImageView(getContext());
item.setImageResource(mDrawIds[i]);
item.setScaleType(ImageView.ScaleType.CENTER);
item.setBackgroundResource(R.drawable.bg_pressed);
final int index = i;
item.setOnClickListener(new OnClickListener() {
@Override
public void onClick(View v) {
if (showsPopup()) {
onModuleSelected(index);
}
}
});
switch (mDrawIds[i]) {
case R.drawable.ic_switch_camera:
item.setContentDescription(getContext().getResources().getString(
R.string.accessibility_switch_to_camera));
break;
case R.drawable.ic_switch_video:
item.setContentDescription(getContext().getResources().getString(
R.string.accessibility_switch_to_video));
break;
case R.drawable.ic_switch_pan:
item.setContentDescription(getContext().getResources().getString(
R.string.accessibility_switch_to_panorama));
break;
case R.drawable.ic_switch_photosphere:
item.setContentDescription(getContext().getResources().getString(
R.string.accessibility_switch_to_photo_sphere));
break;
case R.drawable.ic_switch_gcam:
item.setContentDescription(getContext().getResources().getString(
R.string.accessibility_switch_to_gcam));
break;
default:
break;
}
content.addView(item, new LinearLayout.LayoutParams(mItemSize, mItemSize));
}",0,0,1,0,0,0,0,0,0,22,4,40,0,0,0,0,7,4,1,0,3,0.64,7,5
4904_14,14,14,RotateImageView item = new RotateImageView(getContext());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,0,0.43,8,6
4904_15,15,15,item.setImageResource(mDrawIds[i]);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.5,9,7
4904_16,16,16,item.setScaleType(ImageView.ScaleType.CENTER);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.56,10,8
4904_17,17,17,item.setBackgroundResource(R.drawable.bg_pressed);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.55,11,9
4904_18,18,18,final int index = i;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.33,12,10
4904_19,19,19,item.setOnClickListener(new OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.52,13,11
4904_20,20,21,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,4,1,0,0,0.52,14,12
4904_22,22,24,"if (showsPopup()) {
onModuleSelected(index);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,4,1,0,2,0.64,16,14
4904_23,23,23,onModuleSelected(index);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.36,17,14
4904_27,27,27,switch (mDrawIds[i]) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.42,21,16
4904_28,28,30,"case R.drawable.ic_switch_camera:
item.setContentDescription(getContext().getResources().getString(
R.string.accessibility_switch_to_camera));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,7,4,1,0,1,0.52,22,16
4904_31,31,31,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,4,1,0,0,0.26,25,18
4904_32,32,34,"case R.drawable.ic_switch_video:
item.setContentDescription(getContext().getResources().getString(
R.string.accessibility_switch_to_video));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,7,4,1,0,1,0.53,26,18
4904_35,35,35,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,4,1,0,0,0.26,29,20
4904_36,36,38,"case R.drawable.ic_switch_pan:
item.setContentDescription(getContext().getResources().getString(
R.string.accessibility_switch_to_panorama));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,7,4,1,0,1,0.53,30,20
4904_39,39,39,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,4,1,0,0,0.26,33,22
4904_40,40,42,"case R.drawable.ic_switch_photosphere:
item.setContentDescription(getContext().getResources().getString(
R.string.accessibility_switch_to_photo_sphere));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,7,4,1,0,1,0.52,34,22
4904_43,43,43,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,4,1,0,0,0.26,37,24
4904_44,44,46,"case R.drawable.ic_switch_gcam:
item.setContentDescription(getContext().getResources().getString(
R.string.accessibility_switch_to_gcam));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,7,4,1,0,1,0.52,38,24
4904_47,47,47,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,4,1,0,0,0.26,41,26
4904_48,48,49,"default:
break;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,4,1,0,0,0.27,42,26
4904_51,51,51,"content.addView(item, new LinearLayout.LayoutParams(mItemSize, mItemSize));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.5,45,28
4904_53,53,54,"mPopup.measure(MeasureSpec.makeMeasureSpec(mParent.getWidth(), MeasureSpec.AT_MOST),
MeasureSpec.makeMeasureSpec(mParent.getHeight(), MeasureSpec.AT_MOST));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,4,1,0,1,0.54,47,29
4905_1,1,1,private boolean animateHidePopup() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,4,3
4905_2,2,13,"if (mHideAnimationListener == null) {
mHideAnimationListener = new AnimatorListenerAdapter() {
@Override
public void onAnimationEnd(Animator animation) {
if (!showsPopup() && mPopup != null) {
mPopup.setVisibility(View.INVISIBLE);
((ViewGroup) mParent).removeView(mPopup);
mPopup = null;
}
}
};
}",1,0,0,0,0,0,0,0,0,6,4,12,0,0,0,0,2,2,0,0,0,0.42,0,0
4905_3,3,3,mHideAnimationListener = new AnimatorListenerAdapter() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.37,2,1
4905_4,4,5,"@Override
public void onAnimationEnd(Animator animation) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.41,0,0
4905_6,6,10,"if (!showsPopup() && mPopup != null) {
mPopup.setVisibility(View.INVISIBLE);
((ViewGroup) mParent).removeView(mPopup);
mPopup = null;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,2,2,0,0,0,0.35,0,0
4905_7,7,7,mPopup.setVisibility(View.INVISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,1,0
4905_8,8,8,((ViewGroup) mParent).removeView(mPopup);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,2,1
4905_9,9,9,mPopup = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.36,3,2
4905_14,14,14,mPopup.animate(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.34,8,4
4905_15,15,15,.alpha(0f),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,9,4
4905_16,16,16,.scaleX(0.3f).scaleY(0.3f),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,10,5
4905_17,17,17,.translationX(mTranslationX),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.17,11,6
4905_18,18,18,.translationY(mTranslationY),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.1,12,7
4905_19,19,19,.setDuration(SWITCHER_POPUP_ANIM_DURATION),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,13,8
4905_20,20,20,.setListener(mHideAnimationListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.38,14,9
4905_21,21,21,animate().alpha(1f).setDuration(SWITCHER_POPUP_ANIM_DURATION),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,15,10
4905_22,22,22,.setListener(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.4,16,11
4905_23,23,23,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.28,17,12
4906_1,1,1,private boolean animateShowPopup() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,7,5
4906_2,2,4,"if (mNeedsAnimationSetup) {
popupAnimationSetup();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,2,0,0,0,0.32,4,3
4906_3,3,3,popupAnimationSetup();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.34,5,3
4906_5,5,15,"if (mShowAnimationListener == null) {
mShowAnimationListener = new AnimatorListenerAdapter() {
@Override
public void onAnimationEnd(Animator animation) {
if (showsPopup()) {
setVisibility(View.INVISIBLE);
mPopup.requestLayout();
}
}
};
}",1,0,0,0,0,0,0,0,0,5,4,11,0,0,0,0,2,2,0,0,0,0.43,0,0
4906_6,6,6,mShowAnimationListener = new AnimatorListenerAdapter() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.37,2,1
4906_7,7,8,"@Override
public void onAnimationEnd(Animator animation) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.41,0,0
4906_9,9,12,"if (showsPopup()) {
setVisibility(View.INVISIBLE);
mPopup.requestLayout();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,2,2,0,0,0,0.36,0,0
4906_10,10,10,setVisibility(View.INVISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.32,1,0
4906_11,11,11,mPopup.requestLayout();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.32,2,1
4906_16,16,16,mPopup.animate(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.34,7,3
4906_17,17,17,.alpha(1f),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.3,8,3
4906_18,18,18,.scaleX(1f).scaleY(1f),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.32,9,4
4906_19,19,19,.translationX(0),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.16,10,5
4906_20,20,20,.translationY(0),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.11,11,6
4906_21,21,21,.setDuration(SWITCHER_POPUP_ANIM_DURATION),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,12,7
4906_22,22,22,.setListener(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.4,13,8
4906_23,23,23,animate().alpha(0f).setDuration(SWITCHER_POPUP_ANIM_DURATION),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.32,14,9
4906_24,24,24,.setListener(mShowAnimationListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.38,15,10
4906_25,25,25,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.28,16,11
4907_1,1,1,private boolean animateShowPopup() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,1,0.5,9,7
4907_2,2,4,"if (mNeedsAnimationSetup) {
popupAnimationSetup();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,5,2,0,1,0.45,6,5
4907_3,3,3,popupAnimationSetup();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,1,0.51,7,5
4907_5,5,15,"if (mShowAnimationListener == null) {
mShowAnimationListener = new AnimatorListenerAdapter() {
@Override
public void onAnimationEnd(Animator animation) {
if (showsPopup()) {
setVisibility(View.INVISIBLE);
mPopup.requestLayout();
}
}
};
}",1,0,0,0,0,0,0,0,0,5,4,11,0,0,0,0,8,5,2,0,3,0.61,0,0
4907_6,6,6,mShowAnimationListener = new AnimatorListenerAdapter() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.4,4,3
4907_7,7,8,"@Override
public void onAnimationEnd(Animator animation) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,2,0,0,0.37,2,2
4907_9,9,12,"if (showsPopup()) {
setVisibility(View.INVISIBLE);
mPopup.requestLayout();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,8,5,2,0,3,0.72,0,0
4907_10,10,10,setVisibility(View.INVISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.49,0,0
4907_11,11,11,mPopup.requestLayout();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,3,0.8,0,0
4907_16,16,16,mPopup.animate(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,1,0.54,5,1
4907_17,17,17,.alpha(1f),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.52,6,1
4907_18,18,18,.scaleX(1f).scaleY(1f),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.53,7,2
4907_19,19,19,.translationX(0),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.37,8,3
4907_20,20,20,.translationY(0),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.33,9,4
4907_21,21,21,.setDuration(SWITCHER_POPUP_ANIM_DURATION),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,1,0.5,10,5
4907_22,22,22,.setListener(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.34,11,6
4907_23,23,23,animate().alpha(0f).setDuration(SWITCHER_POPUP_ANIM_DURATION),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,1,0.5,12,7
4907_24,24,24,.setListener(mShowAnimationListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.38,13,8
4907_25,25,25,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,5,2,0,0,0.24,14,9
4908_1,1,2,"@Override
protected void onDraw(Canvas canvas) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,1,0.71,24,19
4908_3,3,13,"if (mOrientation == 0 || mOrientation == 180) {
rectF.left = canvas.getWidth() / 2 - mPreviewThumbWidth;
rectF.right = canvas.getWidth() / 2 + mPreviewThumbWidth;
rectF.top = canvas.getHeight() / 2 - mPreviewThumbHeight;
rectF.bottom = canvas.getHeight() / 2 + mPreviewThumbHeight;
} else {
rectF.left = canvas.getWidth() / 2 - mPreviewThumbHeight;
rectF.right = canvas.getWidth() / 2 + mPreviewThumbHeight;
rectF.top = canvas.getHeight() / 2 - mPreviewThumbWidth;
rectF.bottom = canvas.getHeight() / 2 + mPreviewThumbWidth;
}",1,0,0,0,0,0,0,0,0,9,1,11,0,0,0,1,4,3,0,0,0,0.71,13,9
4908_4,4,4,rectF.left = canvas.getWidth() / 2 - mPreviewThumbWidth;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.72,22,17
4908_5,5,5,rectF.right = canvas.getWidth() / 2 + mPreviewThumbWidth;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.71,21,16
4908_6,6,6,rectF.top = canvas.getHeight() / 2 - mPreviewThumbHeight;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.71,20,15
4908_7,7,7,rectF.bottom = canvas.getHeight() / 2 + mPreviewThumbHeight;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.72,19,14
4908_8,8,8,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.23,18,13
4908_9,9,9,rectF.left = canvas.getWidth() / 2 - mPreviewThumbHeight;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.72,17,12
4908_10,10,10,rectF.right = canvas.getWidth() / 2 + mPreviewThumbHeight;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.72,16,11
4908_11,11,11,rectF.top = canvas.getHeight() / 2 - mPreviewThumbWidth;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.71,15,10
4908_12,12,12,rectF.bottom = canvas.getHeight() / 2 + mPreviewThumbWidth;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.71,14,9
4908_15,15,45,"if(mPanoStatus != PANO_STATUS.INACTIVE) {
canvas.rotate(-mOrientation, canvas.getWidth() / 2, canvas.getHeight() / 2);

if(!mProgressSentence.equals("""")) {
int textWidth = (int) mCompleteSentencePaint.measureText(mProgressSentence);
canvas.drawText(mProgressSentence, rectF.centerX() - textWidth / 2, canvas.getHeight()*4/5, mCompleteSentencePaint);
}

if(mPanoStatus == PANO_STATUS.COMPLETING) {
int textWidth = (int) mCompleteSentencePaint.measureText(mCompleteSentence);
canvas.drawText(mCompleteSentence, rectF.centerX() - textWidth / 2, rectF.centerY(), mCompleteSentencePaint);
} else {
canvas.drawRect(rectF, mCenterRectPaint);

if(mGuidePicture != null) {
canvas.save();
mGuidePicture.drawGuideInAir(canvas);
canvas.restore();
}

synchronized (mPreviewBitmapLock) {
if (mPreviewPicture != null) {
mPreviewPicture.drawMasterPanoPreview(canvas);
}
}
}
} else {
canvas.rotate(-mPendingOrientation, canvas.getWidth()/2, canvas.getHeight()/2);
int textWidth = (int) mCompleteSentencePaint.measureText(mIntroSentence);
canvas.drawText(mIntroSentence, rectF.centerX() - textWidth / 2, canvas.getHeight()*4/5, mCompleteSentencePaint);
}",1,0,0,0,0,0,0,0,0,20,4,31,0,0,1,0,4,3,0,0,2,0.76,0,0
4908_16,16,16,"canvas.rotate(-mOrientation, canvas.getWidth() / 2, canvas.getHeight() / 2);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.69,10,7
4908_18,18,21,"if(!mProgressSentence.equals("""")) {
int textWidth = (int) mCompleteSentencePaint.measureText(mProgressSentence);
canvas.drawText(mProgressSentence, rectF.centerX() - textWidth / 2, canvas.getHeight()*4/5, mCompleteSentencePaint);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,4,3,0,0,2,0.75,5,4
4908_19,19,19,int textWidth = (int) mCompleteSentencePaint.measureText(mProgressSentence);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.63,7,5
4908_20,20,20,"canvas.drawText(mProgressSentence, rectF.centerX() - textWidth / 2, canvas.getHeight()*4/5, mCompleteSentencePaint);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,2,0.78,6,4
4908_23,23,40,"if(mPanoStatus == PANO_STATUS.COMPLETING) {
int textWidth = (int) mCompleteSentencePaint.measureText(mCompleteSentence);
canvas.drawText(mCompleteSentence, rectF.centerX() - textWidth / 2, rectF.centerY(), mCompleteSentencePaint);
} else {
canvas.drawRect(rectF, mCenterRectPaint);

if(mGuidePicture != null) {
canvas.save();
mGuidePicture.drawGuideInAir(canvas);
canvas.restore();
}

synchronized (mPreviewBitmapLock) {
if (mPreviewPicture != null) {
mPreviewPicture.drawMasterPanoPreview(canvas);
}
}
}",1,0,0,0,0,0,0,0,0,11,3,18,0,0,1,0,4,3,0,0,2,0.77,0,0
4908_24,24,24,int textWidth = (int) mCompleteSentencePaint.measureText(mCompleteSentence);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.63,2,2
4908_25,25,25,"canvas.drawText(mCompleteSentence, rectF.centerX() - textWidth / 2, rectF.centerY(), mCompleteSentencePaint);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,2,0.81,1,1
4908_26,26,26,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.23,0,0
4908_27,27,27,"canvas.drawRect(rectF, mCenterRectPaint);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,2,0.92,0,0
4908_29,29,33,"if(mGuidePicture != null) {
canvas.save();
mGuidePicture.drawGuideInAir(canvas);
canvas.restore();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,3,0,0,1,0.69,2,1
4908_30,30,30,canvas.save();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.63,3,1
4908_31,31,31,mGuidePicture.drawGuideInAir(canvas);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.75,4,2
4908_32,32,32,canvas.restore();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.67,5,3
4908_35,35,35,synchronized (mPreviewBitmapLock) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.46,8,5
4908_36,36,38,"if (mPreviewPicture != null) {
mPreviewPicture.drawMasterPanoPreview(canvas);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,1,0.7,9,5
4908_37,37,37,mPreviewPicture.drawMasterPanoPreview(canvas);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.74,10,6
4908_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.23,14,8
4908_42,42,42,"canvas.rotate(-mPendingOrientation, canvas.getWidth()/2, canvas.getHeight()/2);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.68,15,8
4908_43,43,43,int textWidth = (int) mCompleteSentencePaint.measureText(mIntroSentence);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.63,16,9
4908_44,44,44,"canvas.drawText(mIntroSentence, rectF.centerX() - textWidth / 2, canvas.getHeight()*4/5, mCompleteSentencePaint);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,2,0.79,17,10
4909_1,1,2,"@Override
protected void onDraw(Canvas canvas) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,1,0.64,26,20
4909_3,3,13,"if (mOrientation == 0 || mOrientation == 180) {
rectF.left = canvas.getWidth() / 2 - mPreviewThumbWidth;
rectF.right = canvas.getWidth() / 2 + mPreviewThumbWidth;
rectF.top = canvas.getHeight() / 2 - mPreviewThumbHeight;
rectF.bottom = canvas.getHeight() / 2 + mPreviewThumbHeight;
} else {
rectF.left = canvas.getWidth() / 2 - mPreviewThumbHeight;
rectF.right = canvas.getWidth() / 2 + mPreviewThumbHeight;
rectF.top = canvas.getHeight() / 2 - mPreviewThumbWidth;
rectF.bottom = canvas.getHeight() / 2 + mPreviewThumbWidth;
}",1,0,0,0,0,0,0,0,0,9,1,11,0,0,0,1,3,3,0,0,0,0.63,15,10
4909_4,4,4,rectF.left = canvas.getWidth() / 2 - mPreviewThumbWidth;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.63,24,18
4909_5,5,5,rectF.right = canvas.getWidth() / 2 + mPreviewThumbWidth;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.63,23,17
4909_6,6,6,rectF.top = canvas.getHeight() / 2 - mPreviewThumbHeight;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.62,22,16
4909_7,7,7,rectF.bottom = canvas.getHeight() / 2 + mPreviewThumbHeight;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.64,21,15
4909_8,8,8,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.21,20,14
4909_9,9,9,rectF.left = canvas.getWidth() / 2 - mPreviewThumbHeight;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.63,19,13
4909_10,10,10,rectF.right = canvas.getWidth() / 2 + mPreviewThumbHeight;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.63,18,12
4909_11,11,11,rectF.top = canvas.getHeight() / 2 - mPreviewThumbWidth;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.62,17,11
4909_12,12,12,rectF.bottom = canvas.getHeight() / 2 + mPreviewThumbWidth;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.64,16,10
4909_15,15,45,"if(mPanoStatus != PANO_STATUS.INACTIVE) {
canvas.rotate(-mOrientation, canvas.getWidth() / 2, canvas.getHeight() / 2);

if(!mProgressSentence.equals("""")) {
int textWidth = (int) mCompleteSentencePaint.measureText(mProgressSentence);
canvas.drawText(mProgressSentence, rectF.centerX() - textWidth / 2, canvas.getHeight()*4/5, mCompleteSentencePaint);
}

if(mPanoStatus == PANO_STATUS.COMPLETING) {
int textWidth = (int) mCompleteSentencePaint.measureText(mCompleteSentence);
canvas.drawText(mCompleteSentence, rectF.centerX() - textWidth / 2, rectF.centerY(), mCompleteSentencePaint);
} else {
canvas.drawRect(rectF, mCenterRectPaint);

if(mGuidePicture != null) {
canvas.save();
mGuidePicture.drawGuideInAir(canvas);
canvas.restore();
}

synchronized (mPreviewBitmapLock) {
if (mPreviewPicture != null) {
mPreviewPicture.drawMasterPanoPreview(canvas);
}
}
}
} else {
canvas.rotate(-mPendingOrientation, canvas.getWidth()/2, canvas.getHeight()/2);
int textWidth = (int) mCompleteSentencePaint.measureText(mIntroSentence);
canvas.drawText(mIntroSentence, rectF.centerX() - textWidth / 2, canvas.getHeight()*4/5, mCompleteSentencePaint);
}",1,0,0,0,0,0,0,0,0,20,4,31,0,0,1,0,3,3,0,0,2,0.64,0,0
4909_16,16,16,"canvas.rotate(-mOrientation, canvas.getWidth() / 2, canvas.getHeight() / 2);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.6,12,8
4909_18,18,21,"if(!mProgressSentence.equals("""")) {
int textWidth = (int) mCompleteSentencePaint.measureText(mProgressSentence);
canvas.drawText(mProgressSentence, rectF.centerX() - textWidth / 2, canvas.getHeight()*4/5, mCompleteSentencePaint);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,3,0,0,1,0.63,7,5
4909_19,19,19,int textWidth = (int) mCompleteSentencePaint.measureText(mProgressSentence);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.58,9,6
4909_20,20,20,"canvas.drawText(mProgressSentence, rectF.centerX() - textWidth / 2, canvas.getHeight()*4/5, mCompleteSentencePaint);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.65,8,5
4909_23,23,40,"if(mPanoStatus == PANO_STATUS.COMPLETING) {
int textWidth = (int) mCompleteSentencePaint.measureText(mCompleteSentence);
canvas.drawText(mCompleteSentence, rectF.centerX() - textWidth / 2, rectF.centerY(), mCompleteSentencePaint);
} else {
canvas.drawRect(rectF, mCenterRectPaint);

if(mGuidePicture != null) {
canvas.save();
mGuidePicture.drawGuideInAir(canvas);
canvas.restore();
}

synchronized (mPreviewBitmapLock) {
if (mPreviewPicture != null) {
mPreviewPicture.drawMasterPanoPreview(canvas);
}
}
}",1,0,0,0,0,0,0,0,0,11,3,18,0,0,1,0,3,3,0,0,2,0.66,0,0
4909_24,24,24,int textWidth = (int) mCompleteSentencePaint.measureText(mCompleteSentence);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.59,4,3
4909_25,25,25,"canvas.drawText(mCompleteSentence, rectF.centerX() - textWidth / 2, rectF.centerY(), mCompleteSentencePaint);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.68,3,2
4909_26,26,26,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.21,2,1
4909_27,27,27,"canvas.drawRect(rectF, mCenterRectPaint);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.75,1,0
4909_29,29,33,"if(mGuidePicture != null) {
canvas.save();
mGuidePicture.drawGuideInAir(canvas);
canvas.restore();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,3,3,0,0,2,0.65,0,0
4909_30,30,30,canvas.save();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.6,1,0
4909_31,31,31,mGuidePicture.drawGuideInAir(canvas);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.67,2,1
4909_32,32,32,canvas.restore();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.66,3,2
4909_35,35,35,synchronized (mPreviewBitmapLock) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.46,6,4
4909_36,36,38,"if (mPreviewPicture != null) {
mPreviewPicture.drawMasterPanoPreview(canvas);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,1,0.62,7,4
4909_37,37,37,mPreviewPicture.drawMasterPanoPreview(canvas);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.66,8,5
4909_41,41,41,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.21,12,7
4909_42,42,42,"canvas.rotate(-mPendingOrientation, canvas.getWidth()/2, canvas.getHeight()/2);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.59,13,7
4909_43,43,43,int textWidth = (int) mCompleteSentencePaint.measureText(mIntroSentence);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.58,14,8
4909_44,44,44,"canvas.drawText(mIntroSentence, rectF.centerX() - textWidth / 2, canvas.getHeight()*4/5, mCompleteSentencePaint);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.66,15,9
104_1,1,1,private long launchVideo() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,0,0,0,0.42,15,14
104_2,2,2,long startupTime = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,0,0,0,0,0.56,14,13
104_4,4,21,"try {
Intent intent = new Intent(MediaStore.INTENT_ACTION_VIDEO_CAMERA);
intent.setClass(getInstrumentation().getTargetContext(), CameraActivity.class);
intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
long beforeStart = System.currentTimeMillis();
Instrumentation inst = getInstrumentation();
Activity recorderActivity = inst.startActivitySync(intent);
long cameraStarted = System.currentTimeMillis();
Thread.sleep(WAIT_TIME_FOR_PREVIEW);
recorderActivity.finish();
startupTime = cameraStarted - beforeStart;
Log.v(TAG, ""Video Startup Time = "" + startupTime);
Thread.sleep(2 * 1000);
Log.v(TAG, ""video startup time: "" + startupTime);
} catch (Exception e) {
Log.v(TAG, ""Got exception"", e);
fail(""Fails to launch video output file"");
}",0,0,0,0,1,0,0,0,0,16,1,18,0,1,1,0,3,0,0,0,2,0.63,0,0
104_5,5,5,Intent intent = new Intent(MediaStore.INTENT_ACTION_VIDEO_CAMERA);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,0,0,0,0,0.2,11,11
104_6,6,6,"intent.setClass(getInstrumentation().getTargetContext(), CameraActivity.class);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,0,0,0,0,0.18,10,10
104_7,7,7,intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,0,0,0,0,0.22,9,9
104_8,8,8,long beforeStart = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,0,0,0,0,0.53,8,8
104_9,9,9,Instrumentation inst = getInstrumentation();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,0,0,0,0,0.17,7,7
104_10,10,10,Activity recorderActivity = inst.startActivitySync(intent);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,0,0,0,0,0.23,6,6
104_11,11,11,long cameraStarted = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,0,0,0,0,0.51,5,5
104_12,12,12,Thread.sleep(WAIT_TIME_FOR_PREVIEW);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,0,0,1,0.67,4,4
104_13,13,13,recorderActivity.finish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,0,0,0,0.21,3,3
104_14,14,14,startupTime = cameraStarted - beforeStart;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,0,0,0,0,0.45,2,2
104_15,15,15,"Log.v(TAG, ""Video Startup Time = "" + startupTime);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,0,0,0,0,0.48,1,1
104_16,16,16,Thread.sleep(2 * 1000);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,0,0,2,0.88,0,0
104_17,17,17,"Log.v(TAG, ""video startup time: "" + startupTime);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,0,0,0,0.48,0,0
104_18,18,18,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,0,0,0,0.29,1,0
104_19,19,19,"Log.v(TAG, ""Got exception"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,0,0,0,0.33,2,1
104_20,20,20,"fail(""Fails to launch video output file"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,0,0,0,0.3,3,2
104_22,22,22,return startupTime;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,0,0,0,0,0.46,5,4
105_1,1,1,throws Exception ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,0,0,0,0.29,6,6
105_2,2,2,String individualStartupTime;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,3,0.71,5,5
105_3,3,3,"individualStartupTime = ""Individual Video Startup Time = "";",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,3,0.8,4,4
105_4,4,4,long totalStartupTime = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,0,0,2,0.65,3,3
105_5,5,5,long startupTime = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.7,2,2
105_6,6,15,"for (int i = 0; i < TOTAL_NUMBER_OF_STARTUP; i++) {
if (i == 0) {
long firstStartUpTime = launchVideo();
writeToOutputFile(firstStartUpTime, ""na"", true, ""Video"");
} else {
startupTime = launchVideo();
totalStartupTime += startupTime;
individualStartupTime += startupTime + "" ,"";
}
}",0,0,1,0,0,0,0,0,0,7,2,10,0,1,0,0,5,3,0,0,4,0.77,0,0
105_7,7,14,"if (i == 0) {
long firstStartUpTime = launchVideo();
writeToOutputFile(firstStartUpTime, ""na"", true, ""Video"");
} else {
startupTime = launchVideo();
totalStartupTime += startupTime;
individualStartupTime += startupTime + "" ,"";
}",1,0,0,0,0,0,0,0,0,6,1,8,0,0,0,0,5,3,0,0,4,0.78,0,0
105_8,8,8,long firstStartUpTime = launchVideo();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.68,0,0
105_9,9,9,"writeToOutputFile(firstStartUpTime, ""na"", true, ""Video"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.65,1,0
105_10,10,10,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.3,2,1
105_11,11,11,startupTime = launchVideo();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.7,3,2
105_12,12,12,totalStartupTime += startupTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.77,4,3
105_13,13,13,"individualStartupTime += startupTime + "" ,"";",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,3,0.83,5,4
105_16,16,16,"Log.v(TAG, ""totalStartupTime ="" + totalStartupTime);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.67,8,6
105_17,17,17,"writeToOutputFile(totalStartupTime, individualStartupTime, false, ""Video"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,3,0.67,9,6
106_1,1,1,throws Exception ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,0,0,0,0.29,6,6
106_2,2,2,String individualStartupTime;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,3,0.71,5,5
106_3,3,3,"individualStartupTime = ""Individual Camera Startup Time = "";",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,3,0.8,4,4
106_4,4,4,long totalStartupTime = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,0,0,2,0.65,3,3
106_5,5,5,long startupTime = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.7,2,2
106_6,6,15,"for (int i = 0; i < TOTAL_NUMBER_OF_STARTUP; i++) {
if (i == 0) {
long firstStartUpTime = launchCamera();
writeToOutputFile(firstStartUpTime, ""na"", true, ""Camera"");
} else {
startupTime = launchCamera();
totalStartupTime += startupTime;
individualStartupTime += startupTime + "" ,"";
}
}",0,0,1,0,0,0,0,0,0,7,2,10,0,1,0,0,5,3,0,0,4,0.77,0,0
106_7,7,14,"if (i == 0) {
long firstStartUpTime = launchCamera();
writeToOutputFile(firstStartUpTime, ""na"", true, ""Camera"");
} else {
startupTime = launchCamera();
totalStartupTime += startupTime;
individualStartupTime += startupTime + "" ,"";
}",1,0,0,0,0,0,0,0,0,6,1,8,0,0,0,0,5,3,0,0,4,0.79,0,0
106_8,8,8,long firstStartUpTime = launchCamera();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.67,0,0
106_9,9,9,"writeToOutputFile(firstStartUpTime, ""na"", true, ""Camera"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.65,1,0
106_10,10,10,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.3,2,1
106_11,11,11,startupTime = launchCamera();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.7,3,2
106_12,12,12,totalStartupTime += startupTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.77,4,3
106_13,13,13,"individualStartupTime += startupTime + "" ,"";",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,3,0.83,5,4
106_16,16,16,"Log.v(TAG, ""totalStartupTime ="" + totalStartupTime);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.67,8,6
106_17,17,18,"writeToOutputFile(totalStartupTime,
individualStartupTime, false, ""Camera"");",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,5,3,0,0,3,0.67,9,6
1141_1,1,1,throws Exception ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,0,0,1,0,0.29,12,10
1141_2,2,2,Instrumentation inst = getInstrumentation();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,0,0,1,0,0.17,11,9
1141_3,3,3,Intent intent = new Intent();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,0,0,1,0,0.14,10,8
1141_5,5,5,"intent.setClass(getInstrumentation().getTargetContext(), CameraActivity.class);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,0,0,1,0,0.18,8,7
1141_6,6,6,intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,0,0,1,0,0.26,7,6
1141_7,7,8,"intent.putExtra(EXTRAS_CAMERA_FACING,
android.hardware.Camera.CameraInfo.CAMERA_FACING_BACK);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,3,0,0,1,0,0.28,5,5
1141_9,9,9,Activity act = inst.startActivitySync(intent);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,0,0,1,0,0.28,4,4
1141_10,10,10,Thread.sleep(WAIT_FOR_SWITCH_CAMERA);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,0,1,1,0.63,3,3
1141_11,11,11,"captureImages(""Back Camera Image Capture\n"", inst);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,0,1,0,0.26,2,2
1141_12,12,12,act.finish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,0,1,0,0.33,1,1
1141_13,13,13,Thread.sleep(2 * 1000);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,0,0,1,2,0.88,0,0
1142_1,1,1,throws Exception ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,0,0,0,0,0.29,12,10
1142_2,2,2,Instrumentation inst = getInstrumentation();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,0,0,0,0,0.17,11,9
1142_3,3,3,Intent intent = new Intent();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,0,0,0,0,0.14,10,8
1142_5,5,5,"intent.setClass(getInstrumentation().getTargetContext(), CameraActivity.class);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,0,0,0,0,0.18,8,7
1142_6,6,6,intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,0,0,0,0,0.26,7,6
1142_7,7,8,"intent.putExtra(EXTRAS_CAMERA_FACING,
android.hardware.Camera.CameraInfo.CAMERA_FACING_FRONT);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,3,0,0,0,0,0.29,5,5
1142_9,9,9,Activity act = inst.startActivitySync(intent);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,0,0,0,0,0.28,4,4
1142_10,10,10,Thread.sleep(WAIT_FOR_SWITCH_CAMERA);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,0,0,1,0.63,3,3
1142_11,11,11,"captureImages(""Front Camera Image Capture\n"", inst);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,0,0,0,0.28,2,2
1142_12,12,12,act.finish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,0,0,0,0.33,1,1
1142_13,13,13,Thread.sleep(2 * 1000);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,0,0,2,0.88,0,0
2784_1,1,2,"@Override
public void onCreate(Bundle state) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,6,1,0,0,0.4,12,10
2784_3,3,3,super.onCreate(state);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.4,11,9
2784_4,4,4,mActivity = this;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.31,10,8
2784_5,5,5,Intent intent = getIntent();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,1,0,0,0.37,9,7
2784_6,6,6,String action = intent.getAction();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,1,0,0,0.34,8,6
2784_7,7,12,"if (INTENT_ACTION_STILL_IMAGE_CAMERA_SECURE.equals(action)
|| ACTION_IMAGE_CAPTURE_SECURE.equals(action)) {
mSecureCamera = true;
} else {
mSecureCamera = intent.getBooleanExtra(SECURE_CAMERA_EXTRA, false);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,1,7,6,1,0,2,0.57,2,1
2784_8,8,8,|| ACTION_IMAGE_CAPTURE_SECURE.equals(action)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,1,0.48,6,4
2784_9,9,9,mSecureCamera = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,2,0.65,5,3
2784_10,10,10,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.24,4,2
2784_11,11,11,"mSecureCamera = intent.getBooleanExtra(SECURE_CAMERA_EXTRA, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,2,0.59,3,1
2784_14,14,19,"if (mSecureCamera) {
Window win = getWindow();
WindowManager.LayoutParams params = win.getAttributes();
params.flags |= WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED;
win.setAttributes(params);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,1,0,7,6,1,0,6,0.74,0,0
2784_15,15,15,Window win = getWindow();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,1,0,1,0.53,0,0
2784_16,16,16,WindowManager.LayoutParams params = win.getAttributes();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,1,0,1,0.43,1,0
2784_17,17,17,params.flags |= WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,1,0,4,0.72,2,1
2784_18,18,18,win.setAttributes(params);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,1,0,0,0.29,3,2
2784_20,20,20,"mFilesPath = getFilesDir()+""/Bestpicture"";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.33,5,4
2784_21,21,21,setContentView(R.layout.bestpicture_editor);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.42,6,4
2784_22,22,22,Display display = getWindowManager().getDefaultDisplay();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,6,1,0,1,0.45,7,5
2784_23,23,23,Point size = new Point();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,1,0,0,0.29,8,6
2784_24,24,24,display.getSize(size);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,1,0,0,0.31,9,7
2784_25,25,25,mWidth = size.x/4;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,1,0,0,0.39,10,8
2784_26,26,26,mHeight = size.y/4;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,1,0,0,0.41,11,9
2784_27,27,27,mNamedImages = new PhotoModule.NamedImages();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,6,1,0,0,0.31,12,10
2784_29,29,29,mImageItems = new ImageItems(mActivity);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,6,1,0,0,0.34,14,12
2784_30,30,30,mDotsView = (DotsView) findViewById(R.id.dots_view);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.39,15,12
2784_31,31,31,mDotsView.setItems(mImageItems);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.33,16,13
2784_32,32,32,mPlaceHolderUri = getIntent().getData();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,6,1,0,0,0.38,17,14
2784_34,34,34,mImagePager = (ViewPager) findViewById(R.id.bestpicture_pager);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,6,1,0,0,0.33,19,16
2784_35,35,35,mImagePagerAdapter = new ImagePagerAdapter(getFragmentManager());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.36,20,16
2784_36,36,36,mImagePager.setAdapter(mImagePagerAdapter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.32,21,17
2784_37,37,37,mImagePager.setOnPageChangeListener(new ViewPager.SimpleOnPageChangeListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,1,0.43,22,18
2784_38,38,39,"@Override
public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,6,1,0,0,0.35,23,19
2784_40,40,40,"mDotsView.update(position, positionOffset);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.37,25,21
2784_43,43,44,"@Override
public void onPageSelected(int position) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,7,6,1,0,0,0.35,28,22
2784_47,47,47,findViewById(R.id.bestpicture_done).setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.4,32,23
2784_48,48,49,"@Override
public void onClick(final View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,6,1,0,0,0.37,33,23
2784_50,50,50,int choosenCount = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,1,0,0,0.19,35,25
2784_51,51,55,"for (int i = 0; i < mImageItems.mChosen.length; i++) {
if (mImageItems.mChosen[i]) {
choosenCount++;
}
}",0,0,1,0,0,0,0,0,0,2,2,5,0,1,0,0,7,6,1,0,0,0.33,36,25
2784_52,52,54,"if (mImageItems.mChosen[i]) {
choosenCount++;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,6,1,0,0,0.34,37,26
2784_53,53,53,choosenCount++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.18,38,27
2784_56,56,57,"boolean showSaveDialog = CameraUtil.loadDialogShowConfig(BestpictureActivity
.this,CameraUtil.KEY_SAVE);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,7,6,1,0,2,0.56,41,29
2784_58,58,64,"if (showSaveDialog) {
initSaveDialog(CameraUtil.MODE_TWO_BT, choosenCount);
mDialog.show();
setDialogLayoutPararms();
} else {
saveImages(choosenCount, false);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,1,0,0,7,6,1,0,2,0.54,43,30
2784_59,59,59,"initSaveDialog(CameraUtil.MODE_TWO_BT, choosenCount);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,1,0.5,44,30
2784_60,60,60,mDialog.show();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,1,0.6,45,31
2784_61,61,61,setDialogLayoutPararms();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.42,46,32
2784_62,62,62,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.24,47,33
2784_63,63,63,"saveImages(choosenCount, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.31,48,34
2784_67,67,67,findViewById(R.id.delete_best).setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.41,52,36
2784_68,68,69,"@Override
public void onClick(final View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,6,1,0,0,0.37,53,36
2784_70,70,71,"boolean showDeleteDialog = CameraUtil.loadDialogShowConfig(BestpictureActivity.this
,CameraUtil.KEY_DELETE);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,7,6,1,0,2,0.57,55,38
2784_72,72,78,"if (showDeleteDialog) {
initDeleteDialog(CameraUtil.MODE_TWO_BT);
mDialog.show();
setDialogLayoutPararms();
} else {
backToViewfinder();
}",1,0,0,0,0,0,0,0,0,5,1,7,0,1,0,0,7,6,1,0,2,0.56,57,39
2784_73,73,73,initDeleteDialog(CameraUtil.MODE_TWO_BT);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,1,0.52,58,39
2784_74,74,74,mDialog.show();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,1,0.6,59,40
2784_75,75,75,setDialogLayoutPararms();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.42,60,41
2784_76,76,76,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.24,61,42
2784_77,77,77,backToViewfinder();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.28,62,43
2784_81,81,81,RotateImageView moreView = (RotateImageView) findViewById(R.id.best_more);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.4,66,45
2784_82,82,82,"Bitmap mMoreBp = BitmapFactory.decodeResource(getResources(), R.drawable.more_options);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,1,0,0,0.38,67,45
2784_83,83,83,"mMoreBp = CameraUtil.adjustPhotoRotation(mMoreBp, 90);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,1,0,1,0.48,68,46
2784_84,84,84,moreView.setImageBitmap(mMoreBp);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,1,0,0,0.34,69,47
2784_85,85,85,moreView.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,1,0,0,0.36,70,48
2784_86,86,87,"@Override
public void onClick(final View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,6,1,0,0,0.37,71,49
2784_88,88,88,initOverFlow(v);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,1,0,0,0.37,73,51
2785_1,1,1,private void setDialogLayoutPararms() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,2,0.63,0,0
2785_2,2,2,"int width = CameraUtil.dip2px(BestpictureActivity.this, 320);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,5,4,1,0,1,0.59,0,0
2785_3,3,3,"int height = CameraUtil.dip2px(BestpictureActivity.this, 250);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,4,1,0,1,0.58,1,0
2785_4,4,4,"mDialog.getWindow().setLayout(width, height);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,4,0.83,2,1
1335_1,1,2,"@Override
public void onReceive(Context context, Intent intent) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,0,0.39,0,0
1335_3,3,5,"boolean needCameraActivity = CHECK_BACK_CAMERA_ONLY
? hasBackCamera()
: hasCamera();",0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,1,5,5,0,0,2,0.73,0,0
1335_7,7,12,"if (!needCameraActivity) {
Log.i(TAG, ""disable all camera activities"");
for (int i = 0; i < ACTIVITIES.length; i++) {
disableComponent(context, ACTIVITIES[i]);
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,1,1,5,5,0,0,3,0.74,4,1
1335_8,8,8,"Log.i(TAG, ""disable all camera activities"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,3,0.78,5,1
1335_9,9,11,"for (int i = 0; i < ACTIVITIES.length; i++) {
disableComponent(context, ACTIVITIES[i]);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,5,5,0,0,2,0.58,6,2
1335_10,10,10,"disableComponent(context, ACTIVITIES[i]);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.66,7,3
1335_14,14,14,"disableComponent(context, ""com.android.camera.DisableCameraReceiver"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,2,0.72,11,5
1336_1,1,2,"@Override
public void onReceive(Context context, Intent intent) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,1,0.59,11,5
1336_3,3,5,"boolean needCameraActivity = CHECK_BACK_CAMERA_ONLY
? hasBackCamera()
: hasCamera();",0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,1,3,2,1,0,0,0.35,8,4
1336_7,7,12,"if (!needCameraActivity) {
Log.i(TAG, ""disable all camera activities"");
for (int i = 0; i < ACTIVITIES.length; i++) {
disableComponent(context, ACTIVITIES[i]);
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,1,1,3,2,1,0,1,0.47,1,0
1336_8,8,8,"Log.i(TAG, ""disable all camera activities"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.52,5,2
1336_9,9,11,"for (int i = 0; i < ACTIVITIES.length; i++) {
disableComponent(context, ACTIVITIES[i]);
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,3,2,1,0,1,0.45,2,0
1336_10,10,10,"disableComponent(context, ACTIVITIES[i]);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.52,3,0
1336_14,14,14,"disableComponent(context, ""com.android.camera.DisableCameraReceiver"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,1,0,2,0.68,0,0
1263_1,1,3,"public void addImage(final byte[] data, String title, long date, Location loc,
int orientation, ExifInterface exif,
OnMediaSavedListener l, ContentResolver resolver) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,13,9,0,0,1,0.51,0,0
1263_4,4,5,"addImage(data, title, date, loc, 0, 0, orientation, exif, l, resolver,
PhotoModule.PIXEL_FORMAT_JPEG);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,13,9,0,0,2,0.59,0,0
1264_1,1,2,"        @Override
protected Uri doInBackground(Void... v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,1,0,0,0.39,0,0
1264_3,3,3,MpoData mpo = new MpoData();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.34,0,0
1264_4,4,5,"MpoImageData bayer = new MpoImageData(bayerImage,
ByteOrder.BIG_ENDIAN);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,5,3,1,0,1,0.64,1,0
1264_7,7,8,"MpoImageData mono = new MpoImageData(monoImage,
ByteOrder.BIG_ENDIAN);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,5,3,1,0,1,0.64,4,2
1264_10,10,20,"if (csImage == null) {
mpo.addAuxiliaryMpoImage(mono);
mpo.setPrimaryMpoImage(bayer);
} else {
MpoImageData cs = new MpoImageData(csImage,
ByteOrder.BIG_ENDIAN);

mpo.addAuxiliaryMpoImage(bayer);
mpo.addAuxiliaryMpoImage(mono);
mpo.setPrimaryMpoImage(cs);
}",1,0,0,0,0,0,0,0,0,7,1,11,0,0,1,1,5,3,1,0,2,0.73,7,3
1264_11,11,11,mpo.addAuxiliaryMpoImage(mono);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,2,0.8,8,3
1264_12,12,12,mpo.setPrimaryMpoImage(bayer);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.57,9,4
1264_13,13,13,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.3,10,5
1264_14,14,15,"MpoImageData cs = new MpoImageData(csImage,
ByteOrder.BIG_ENDIAN);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,5,3,1,0,1,0.63,11,6
1264_17,17,17,mpo.addAuxiliaryMpoImage(bayer);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,5,3,1,0,2,0.8,14,8
1264_18,18,18,mpo.addAuxiliaryMpoImage(mono);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,3,1,0,2,0.8,15,8
1264_19,19,19,mpo.setPrimaryMpoImage(cs);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.56,16,9
1264_22,22,22,"String path = Storage.generateFilepath(title, pictureFormat);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,1,0,0,0.49,19,11
1264_23,23,23,"int size = MpoInterface.writeMpo(mpo, path);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.44,20,11
1264_24,24,24,File f = new File(path);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.45,21,12
1264_25,25,27,"if (f.exists() && f.isFile()) {
size = (int) f.length();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,3,1,0,0,0.5,22,13
1264_26,26,26,size = (int) f.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.5,23,14
1264_28,28,29,"return Storage.addImage(resolver, title, date, loc, orientation,
size, path, width, height, pictureFormat);",0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,5,3,1,0,2,0.62,25,16
1265_1,1,2,"        @Override
protected Uri doInBackground(Void... v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.41,19,11
1265_3,3,3,MpoData mpo = new MpoData();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.19,18,10
1265_4,4,5,"MpoImageData bayer = new MpoImageData(bayerImage,
ByteOrder.BIG_ENDIAN);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,3,3,0,0,1,0.34,16,9
1265_7,7,8,"MpoImageData mono = new MpoImageData(monoImage,
ByteOrder.BIG_ENDIAN);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,3,3,0,0,1,0.34,13,8
1265_10,10,20,"if (csImage == null) {
mpo.addAuxiliaryMpoImage(mono);
mpo.setPrimaryMpoImage(bayer);
} else {
MpoImageData cs = new MpoImageData(csImage,
ByteOrder.BIG_ENDIAN);

mpo.addAuxiliaryMpoImage(bayer);
mpo.addAuxiliaryMpoImage(mono);
mpo.setPrimaryMpoImage(cs);
}",1,0,0,0,0,0,0,0,0,7,1,11,0,0,1,1,3,3,0,0,1,0.38,1,0
1265_11,11,11,mpo.addAuxiliaryMpoImage(mono);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.27,10,6
1265_12,12,12,mpo.setPrimaryMpoImage(bayer);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.32,9,5
1265_13,13,13,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.4,8,4
1265_14,14,15,"MpoImageData cs = new MpoImageData(csImage,
ByteOrder.BIG_ENDIAN);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,3,3,0,0,1,0.34,6,3
1265_17,17,17,mpo.addAuxiliaryMpoImage(bayer);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,3,3,0,0,1,0.27,4,2
1265_18,18,18,mpo.addAuxiliaryMpoImage(mono);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,1,0.27,3,1
1265_19,19,19,mpo.setPrimaryMpoImage(cs);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.37,2,0
1265_22,22,22,"String path = Storage.generateFilepath(title, pictureFormat);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.39,0,0
1265_23,23,23,"int size = MpoInterface.writeMpo(mpo, path);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.31,1,0
1265_24,24,24,File f = new File(path);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.33,2,1
1265_25,25,27,"if (f.exists() && f.isFile()) {
size = (int) f.length();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,0,0.39,3,2
1265_26,26,26,size = (int) f.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.4,4,3
1265_28,28,29,"return Storage.addImage(resolver, title, date, loc, orientation,
size, path, width, height, pictureFormat);",0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,3,3,0,0,0,0.44,6,5
1266_1,1,2,"        @Override
protected Uri doInBackground(Void... v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,4,1,0,0,0.37,21,13
1266_3,3,3,MpoData mpo = new MpoData();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.31,20,12
1266_4,4,5,"MpoImageData bayer = new MpoImageData(bayerImage,
ByteOrder.BIG_ENDIAN);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,7,4,1,0,1,0.54,18,11
1266_7,7,8,"MpoImageData mono = new MpoImageData(monoImage,
ByteOrder.BIG_ENDIAN);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,7,4,1,0,1,0.54,15,10
1266_10,10,20,"if (csImage == null) {
mpo.addAuxiliaryMpoImage(mono);
mpo.setPrimaryMpoImage(bayer);
} else {
MpoImageData cs = new MpoImageData(csImage,
ByteOrder.BIG_ENDIAN);

mpo.addAuxiliaryMpoImage(bayer);
mpo.addAuxiliaryMpoImage(mono);
mpo.setPrimaryMpoImage(cs);
}",1,0,0,0,0,0,0,0,0,7,1,11,0,0,1,1,7,4,1,0,2,0.62,3,2
1266_11,11,11,mpo.addAuxiliaryMpoImage(mono);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,2,0.72,12,8
1266_12,12,12,mpo.setPrimaryMpoImage(bayer);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.52,11,7
1266_13,13,13,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.23,10,6
1266_14,14,15,"MpoImageData cs = new MpoImageData(csImage,
ByteOrder.BIG_ENDIAN);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,7,4,1,0,1,0.53,8,5
1266_17,17,17,mpo.addAuxiliaryMpoImage(bayer);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,7,4,1,0,2,0.72,6,4
1266_18,18,18,mpo.addAuxiliaryMpoImage(mono);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,4,1,0,2,0.72,5,3
1266_19,19,19,mpo.setPrimaryMpoImage(cs);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.51,4,2
1266_22,22,22,"String path = Storage.generateFilepath(title, pictureFormat);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,4,1,0,0,0.45,1,1
1266_23,23,23,"int size = MpoInterface.writeMpo(mpo, path);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.49,0,0
1266_24,24,24,File f = new File(path);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,0,0.36,0,0
1266_25,25,27,"if (f.exists() && f.isFile()) {
size = (int) f.length();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,4,1,0,1,0.47,1,0
1266_26,26,26,size = (int) f.length();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.5,2,1
1266_28,28,29,"return Storage.addImage(resolver, title, date, loc, orientation,
size, path, width, height, pictureFormat);",0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,7,4,1,0,3,0.63,4,3
1267_1,1,2,"        @Override
protected Uri doInBackground(Void... v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,17,9,2,0,0,0.41,7,6
1267_3,3,3,"values.put(Video.Media.SIZE, new File(path).length());",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,17,9,2,0,3,0.56,6,5
1267_4,4,4,"values.put(Video.Media.DURATION, duration);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,17,9,2,0,2,0.54,5,4
1267_5,5,5,Uri uri = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,17,9,2,0,0,0.34,4,3
1267_6,6,22,"try {
Uri videoTable = Uri.parse(VIDEO_BASE_URI);
uri = resolver.insert(videoTable, values);

String finalName = values.getAsString(
Video.Media.DATA);
if (new File(path).renameTo(new File(finalName))) {
path = finalName;
}

resolver.update(uri, values, null, null);
} catch (Exception e) {
Log.e(TAG, ""failed to add video to media store"", e);
uri = null;
} finally {
Log.v(TAG, ""Current video URI: "" + uri);
}",0,0,0,0,1,0,0,0,0,11,2,17,0,1,0,0,17,9,2,0,8,0.63,0,0
1267_7,7,7,Uri videoTable = Uri.parse(VIDEO_BASE_URI);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,17,9,2,0,1,0.47,2,1
1267_8,8,8,"uri = resolver.insert(videoTable, values);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,17,9,2,0,2,0.53,1,0
1267_10,10,11,"String finalName = values.getAsString(
Video.Media.DATA);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,17,9,2,0,5,0.63,0,0
1267_12,12,14,"if (new File(path).renameTo(new File(finalName))) {
path = finalName;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,17,9,2,0,4,0.63,2,1
1267_13,13,13,path = finalName;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,9,2,0,2,0.62,3,1
1267_16,16,16,"resolver.update(uri, values, null, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,17,9,2,0,0,0.36,6,3
1267_17,17,17,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,9,2,0,0,0.28,7,3
1267_18,18,18,"Log.e(TAG, ""failed to add video to media store"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,9,2,0,2,0.47,8,4
1267_19,19,19,uri = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,9,2,0,0,0.33,9,5
1267_20,20,20,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,9,2,0,1,0.61,10,6
1267_21,21,21,"Log.v(TAG, ""Current video URI: "" + uri);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,17,9,2,0,1,0.44,11,7
1267_23,23,23,return uri;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,17,9,2,0,0,0.31,13,9
492_1,1,3,"    public static DatabaseDialect findBestFor(
final String jdbcUrl,
final JdbcConfig config",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,4,1,1,0,2,0.49,5,4
492_4,4,4,throws ConnectException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,1,1,0,0,0.19,4,3
492_5,5,5,final JdbcUrlInfo info = extractJdbcUrlInfo(jdbcUrl);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.23,3,2
492_6,6,6,"LOG.debug(""Finding best dialect for {}"", info);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,2,0.54,2,1
492_7,7,7,int bestScore = DatabaseDialectProvider.NO_MATCH_SCORE;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,1,1,0,2,0.67,1,0
492_9,9,9,DatabaseDialectProvider bestMatch = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,1,1,0,1,0.44,0,0
492_10,10,17,"for (final DatabaseDialectProvider provider : REGISTRY.values()) {
final int score = provider.score(info);
LOG.debug(""Dialect {} scored {} against {}"", provider, score, info);
if (score > bestScore) {
bestMatch = provider;
bestScore = score;
}
}",0,0,0,1,0,0,0,0,0,5,2,8,1,1,0,0,4,1,1,0,2,0.65,1,0
492_11,11,11,final int score = provider.score(info);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,1,0.58,2,1
492_12,12,12,"LOG.debug(""Dialect {} scored {} against {}"", provider, score, info);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,2,0.51,3,2
492_13,13,16,"if (score > bestScore) {
bestMatch = provider;
bestScore = score;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,4,1,1,0,1,0.76,4,3
492_14,14,14,bestMatch = provider;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.49,5,4
492_15,15,15,bestScore = score;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,1,0.83,6,5
492_18,18,18,"LOG.debug(""Using dialect {} with score {} against {}"", bestMatch, bestScore, info);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,1,1,0,2,0.63,9,7
492_19,19,19,return bestMatch.create(config);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.45,10,7
5723_1,1,2,"@Override
public void setup(){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,6,0,0,0,0.31,50,36
5723_3,3,3,"String dataDir = OS.env(""MINDUSTRY_DATA_DIR"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.45,49,35
5723_4,4,6,"if(dataDir != null){
Core.settings.setDataDirectory(files.absolute(dataDir));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,7,6,0,0,0,0.43,46,33
5723_5,5,5,Core.settings.setDataDirectory(files.absolute(dataDir));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.44,47,33
5723_8,8,8,checkLaunch();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,6,0,0,0,0.33,44,32
5723_9,9,9,loadLogger();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,6,0,0,1,0.61,43,31
5723_11,11,11,loader = new LoadRenderer();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,6,0,0,1,0.61,41,30
5723_12,12,12,Events.fire(new ClientCreateEvent());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,6,0,0,0,0.33,40,29
5723_14,14,14,loadFileLogger();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,6,0,0,1,0.53,38,28
5723_15,15,15,platform = this;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.32,37,27
5723_16,16,16,maxTextureSize = Gl.getInt(Gl.maxTextureSize);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,3,0.79,36,26
5723_17,17,17,beginTime = Time.millis();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,6,0,0,0,0.35,35,25
5723_19,19,19,"Log.info(""[GL] Version: @"", graphics.getGLVersion());",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,7,6,0,0,0,0.51,33,24
5723_20,20,20,"Log.info(""[GL] Max texture size: @"", maxTextureSize);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,6,0,0,3,0.76,32,23
5723_21,21,21,"Log.info(""[GL] Using @ context."", gl30 != null ? ""OpenGL 3"" : ""OpenGL 2"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,6,0,0,0,0.52,31,22
5723_22,22,22,"if(maxTextureSize < 4096) Log.warn(""[GL] Your maximum texture size is below the recommended minimum of 4096. This will cause severe performance issues."");",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,4,0.74,30,21
5723_23,23,23,"Log.info(""[JAVA] Version: @"", OS.javaVersion);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.42,29,20
5723_24,24,24,long ram = Runtime.getRuntime().maxMemory();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,0,0,1,0.51,28,19
5723_25,25,25,boolean gb = ram >= 1024 * 1024 * 1024;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.62,27,18
5723_26,26,26,"Log.info(""[RAM] Available: @ @"", Strings.fixed(gb ? ram / 1024f / 1024 / 1024f : ram / 1024f / 1024f, 1), gb ? ""GB"" : ""MB"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,7,6,0,0,0,0.51,26,17
5723_28,28,28,Time.setDeltaProvider(() -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,6,0,0,0,0.36,24,16
5723_29,29,29,float result = Core.graphics.getDeltaTime() * 60f;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.52,23,15
5723_30,30,30,"return (Float.isNaN(result) || Float.isInfinite(result)) ? 1f : Mathf.clamp(result, 0.0001f, 60f / 10f);",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.54,22,14
5723_33,33,33,batch = new SortedSpriteBatch();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,6,0,0,0,0.39,19,13
5723_34,34,34,assets = new AssetManager();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.37,18,12
5723_35,35,35,"assets.setLoader(Texture.class, ""."" + mapExtension, new MapPreviewLoader());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,6,0,0,1,0.52,17,11
5723_37,37,37,tree = new FileTree();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,6,0,0,0,0.29,15,10
5723_38,38,38,"assets.setLoader(Sound.class, new SoundLoader(tree));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,6,0,0,0,0.39,14,9
5723_39,39,39,"assets.setLoader(Music.class, new MusicLoader(tree));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,7,6,0,0,0,0.39,13,8
5723_41,41,41,"assets.load(""sprites/error.png"", Texture.class);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,6,0,0,2,0.61,11,7
5723_42,42,42,atlas = TextureAtlas.blankAtlas();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,2,0.73,10,6
5723_43,43,43,Vars.net = new Net(platform.getNet());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.48,9,5
5723_44,44,44,mods = new Mods();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.39,8,4
5723_45,45,45,schematics = new Schematics();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,6,0,0,0,0.22,7,3
5723_47,47,47,Fonts.loadSystemCursors();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,6,0,0,1,0.49,5,2
5723_49,49,49,assets.load(new Vars());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,6,0,0,1,0.57,3,1
5723_51,51,51,Fonts.loadDefaultFont();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,6,0,0,1,0.5,1,0
5723_53,53,53,"assets.load(new AssetDescriptor<>(maxTextureSize >= 4096 ? ""sprites/sprites.aatls"" : ""sprites/fallback/sprites.aatls"", TextureAtlas.class)).loaded = t -> atlas = t;",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,6,0,0,7,0.87,0,0
5723_54,54,54,"assets.loadRun(""maps"", Map.class, () -> maps.loadPreviews());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,6,0,0,1,0.55,1,0
5723_56,56,56,Musics.load();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,7,6,0,0,1,0.67,3,2
5723_57,57,57,Sounds.load();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,7,6,0,0,1,0.67,4,2
5723_59,59,59,"assets.loadRun(""contentcreate"", Content.class, () -> {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,6,0,0,1,0.44,6,4
5723_60,60,60,content.createBaseContent();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.22,7,4
5723_61,61,61,content.loadColors();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,1,0.55,8,5
5723_63,63,63,mods.loadScripts();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,1,0.56,10,7
5723_64,64,64,content.createModContent();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.34,11,7
5723_67,67,67,assets.load(mods);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,6,0,0,1,0.57,14,9
5723_68,68,68,"assets.loadRun(""mergeUI"", PixmapPacker.class, () -> {}, () -> Fonts.mergeFontAtlas(atlas));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,6,0,0,2,0.59,15,9
5723_70,70,70,add(logic = new Logic());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,7,6,0,0,0,0.36,17,11
5723_71,71,71,add(control = new Control());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,6,0,0,0,0.28,18,11
5723_72,72,72,add(renderer = new Renderer());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,6,0,0,0,0.5,19,12
5723_73,73,73,add(ui = new UI());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,6,0,0,0,0.29,20,13
5723_74,74,74,add(netServer = new NetServer());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,6,0,0,0,0.41,21,14
5723_75,75,75,add(netClient = new NetClient());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,7,6,0,0,0,0.41,22,15
5723_77,77,77,assets.load(schematics);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,6,0,0,1,0.58,24,17
5723_79,79,79,"assets.loadRun(""contentinit"", ContentLoader.class, () -> content.init(), () -> content.load());",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,7,6,0,0,1,0.5,26,18
5723_80,80,80,"assets.loadRun(""baseparts"", BaseRegistry.class, () -> {}, () -> bases.load());",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,6,0,0,1,0.45,27,18
1748_1,1,1,public void setupRequirements(ItemStack[] requirements){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.5,3,2
1748_2,2,2,this.requirements = requirements;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.65,2,1
1748_3,3,3,this.finishedRequirements = new ItemStack[requirements.length];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,4,0,0,2,0.55,1,0
1748_5,5,7,"for(int i = 0; i < requirements.length; i++){
finishedRequirements[i] = new ItemStack(requirements[i].item, Core.settings == null ? 0 : Core.settings.getInt(""req-"" + content.name + ""-"" + requirements[i].item.name));
}",0,0,1,0,0,0,0,0,0,1,1,3,0,0,1,0,5,4,0,0,3,0.62,0,0
1748_6,6,6,"finishedRequirements[i] = new ItemStack(requirements[i].item, Core.settings == null ? 0 : Core.settings.getInt(""req-"" + content.name + ""-"" + requirements[i].item.name));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,3,0.62,1,0
1749_1,1,1,        public void save(){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.53,1,0
1749_3,3,5,"for(ItemStack stack : finishedRequirements){
Core.settings.put(""req-"" + content.name + ""-"" + stack.item.name, stack.amount);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,1,0,5,3,1,0,3,0.62,0,0
1749_4,4,4,"Core.settings.put(""req-"" + content.name + ""-"" + stack.item.name, stack.amount);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.44,1,0
1290_1,1,1,    public void removeByID(int id){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.47,3,3
1290_2,2,2,"throw new RuntimeException(""Mapping is not enabled for group "" + id + ""!"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,1,0.37,2,2
1290_3,3,3,T t = map.get(id);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.47,1,1
1290_4,4,6,"if(t != null){
t.remove();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,1,0.53,0,0
1290_5,5,5,t.remove();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.73,0,0
1291_1,1,1,"    public void intersect(float x, float y, float width, float height, Cons<? super T> out){",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.25,0,0
1291_2,2,2,if(isEmpty()) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.56,0,0
1291_3,3,3,"tree.intersect(x, y, width, height, out);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.2,1,0
1292_1,1,1,"    public Seq<T> intersect(float x, float y, float width, float height){",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.29,1,1
1292_2,2,2,intersectArray.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,0,0
1292_3,3,3,if(isEmpty()) return intersectArray;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.49,0,0
1292_4,4,4,"tree.intersect(intersectRect.set(x, y, width, height), intersectArray);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,1,0
1292_5,5,5,return intersectArray;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.3,2,1
5690_1,1,1,    public void registerCore(CoreBuild core){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.61,1,1
5690_2,2,2,TeamData data = get(core.team);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.53,0,0
5690_3,3,5,"if(!data.cores.contains(core)){
data.cores.add(core);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,2,1,0,2,0.78,0,0
5690_4,4,4,data.cores.add(core);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,2,0.81,1,0
5690_7,7,10,"if(data.active() && !active.contains(data)){
active.add(data);
updateEnemies();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,3,2,1,0,1,0.5,4,2
5690_8,8,8,active.add(data);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.53,5,2
5690_9,9,9,updateEnemies();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.21,6,3
5691_1,1,1,    public boolean isActive(Team team){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,2,0.6,0,0
5691_2,2,2,return get(team).active();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,2,0,2,0.56,0,0
5692_1,1,1,    public void registerCore(CoreBuild core){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.51,5,3
5692_2,2,2,TeamData data = get(core.team);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.29,4,2
5692_3,3,5,"if(!data.cores.contains(core)){
data.cores.add(core);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,4,3,0,0,0,0.34,1,0
5692_4,4,4,data.cores.add(core);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.34,2,0
5692_7,7,10,"if(data.active() && !active.contains(data)){
active.add(data);
updateEnemies();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,4,3,0,0,1,0.47,0,0
5692_8,8,8,active.add(data);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.47,1,0
5692_9,9,9,updateEnemies();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.22,2,1
5693_1,1,1,public void updateTeamStats(){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.3,17,11
5693_2,2,2,present.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,0,0,1,0.55,16,10
5693_3,3,3,bosses.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,2,0,0,1,0.7,15,9
5693_5,5,26,"for(Team team : Team.all){
TeamData data = team.data();

data.presentFlag = false;
data.unitCount = 0;
data.units.clear();
if(data.tree != null){
data.tree.clear();
}

if(data.typeCounts != null){
Arrays.fill(data.typeCounts, 0);
}

if(data.unitsByType != null){
for(int i = 0; i < data.unitsByType.length; i++){
if(data.unitsByType[i] != null){
data.unitsByType[i].clear();
}
}
}
}",0,0,0,1,0,0,0,0,0,12,4,22,0,0,1,1,4,2,0,0,2,0.53,0,0
5693_6,6,6,TeamData data = team.data();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.16,12,7
5693_8,8,8,data.presentFlag = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,2,0,0,0,0.28,10,6
5693_9,9,9,data.unitCount = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.44,9,5
5693_10,10,10,data.units.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,0,0,2,0.68,8,4
5693_11,11,13,"if(data.tree != null){
data.tree.clear();
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,1,4,2,0,0,1,0.41,5,2
5693_12,12,12,data.tree.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.48,6,2
5693_15,15,17,"if(data.typeCounts != null){
Arrays.fill(data.typeCounts, 0);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,0,0,0,0.3,1,0
5693_16,16,16,"Arrays.fill(data.typeCounts, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.32,2,0
5693_19,19,25,"if(data.unitsByType != null){
for(int i = 0; i < data.unitsByType.length; i++){
if(data.unitsByType[i] != null){
data.unitsByType[i].clear();
}
}
}",1,0,0,0,0,0,0,0,0,3,3,7,0,0,1,0,4,2,0,0,2,0.56,0,0
5693_20,20,24,"for(int i = 0; i < data.unitsByType.length; i++){
if(data.unitsByType[i] != null){
data.unitsByType[i].clear();
}
}",0,0,1,0,0,0,0,0,0,2,2,5,0,0,0,0,4,2,0,0,2,0.56,1,0
5693_21,21,23,"if(data.unitsByType[i] != null){
data.unitsByType[i].clear();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,2,0,0,2,0.59,2,1
5693_22,22,22,data.unitsByType[i].clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.64,3,2
5693_28,28,28,Groups.build.each(b -> b.team.data().presentFlag = true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.31,9,4
5693_30,30,52,"for(Unit unit : Groups.unit){
if(unit.type == null) continue;
TeamData data = unit.team.data();
data.tree().insert(unit);
data.units.add(unit);
data.presentFlag = true;

if(unit.team == state.rules.waveTeam && unit.isBoss()){
bosses.add(unit);
}

if(data.unitsByType == null || data.unitsByType.length <= unit.type.id){
data.unitsByType = new Seq[content.units().size];
}

if(data.unitsByType[unit.type.id] == null){
data.unitsByType[unit.type.id] = new Seq<>();
}

data.unitsByType[unit.type.id].add(unit);

count(unit);
}",0,0,0,1,0,0,0,0,0,13,2,23,0,0,1,1,4,2,0,0,1,0.51,11,5
5693_31,31,31,if(unit.type == null) continue;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.42,12,5
5693_32,32,32,TeamData data = unit.team.data();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.37,13,6
5693_33,33,33,data.tree().insert(unit);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.44,14,7
5693_34,34,34,data.units.add(unit);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.51,15,8
5693_35,35,35,data.presentFlag = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,0,0.27,16,9
5693_37,37,39,"if(unit.team == state.rules.waveTeam && unit.isBoss()){
bosses.add(unit);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,0,0,1,0.57,18,11
5693_38,38,38,bosses.add(unit);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.51,19,11
5693_41,41,43,"if(data.unitsByType == null || data.unitsByType.length <= unit.type.id){
data.unitsByType = new Seq[content.units().size];
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,0,0,1,0.49,22,13
5693_42,42,42,data.unitsByType = new Seq[content.units().size];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.51,23,13
5693_45,45,47,"if(data.unitsByType[unit.type.id] == null){
data.unitsByType[unit.type.id] = new Seq<>();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,0,0,1,0.5,26,15
5693_46,46,46,data.unitsByType[unit.type.id] = new Seq<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.5,27,15
5693_49,49,49,data.unitsByType[unit.type.id].add(unit);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,1,0.47,30,17
5693_51,51,51,count(unit);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,1,0.54,32,18
5693_54,54,60,"for(Team team : Team.all){
TeamData data = team.data();

if(data.presentFlag || data.active()){
present.add(data);
}
}",0,0,0,1,0,0,0,0,0,3,2,7,0,0,1,0,4,2,0,0,0,0.26,35,19
5693_55,55,55,TeamData data = team.data();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.16,36,19
5693_57,57,59,"if(data.presentFlag || data.active()){
present.add(data);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,4,2,0,0,0,0.27,38,21
5693_58,58,58,present.add(data);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.24,39,21
5694_1,1,1,public void updateTeamStats(){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.56,26,15
5694_2,2,2,present.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,0,0.26,25,14
5694_3,3,3,bosses.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,2,0,0,0,0.23,24,13
5694_5,5,26,"for(Team team : Team.all){
TeamData data = team.data();

data.presentFlag = false;
data.unitCount = 0;
data.units.clear();
if(data.tree != null){
data.tree.clear();
}

if(data.typeCounts != null){
Arrays.fill(data.typeCounts, 0);
}

if(data.unitsByType != null){
for(int i = 0; i < data.unitsByType.length; i++){
if(data.unitsByType[i] != null){
data.unitsByType[i].clear();
}
}
}
}",0,0,0,1,0,0,0,0,0,12,4,22,0,0,1,1,3,2,0,0,1,0.42,1,0
5694_6,6,6,TeamData data = team.data();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.22,21,11
5694_8,8,8,data.presentFlag = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.53,19,10
5694_9,9,9,data.unitCount = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.27,18,9
5694_10,10,10,data.units.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.29,17,8
5694_11,11,13,"if(data.tree != null){
data.tree.clear();
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,1,3,2,0,0,0,0.22,14,6
5694_12,12,12,data.tree.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.23,15,6
5694_15,15,17,"if(data.typeCounts != null){
Arrays.fill(data.typeCounts, 0);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,0,0.22,10,4
5694_16,16,16,"Arrays.fill(data.typeCounts, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.23,11,4
5694_19,19,25,"if(data.unitsByType != null){
for(int i = 0; i < data.unitsByType.length; i++){
if(data.unitsByType[i] != null){
data.unitsByType[i].clear();
}
}
}",1,0,0,0,0,0,0,0,0,3,3,7,0,0,1,0,3,2,0,0,0,0.27,2,0
5694_20,20,24,"for(int i = 0; i < data.unitsByType.length; i++){
if(data.unitsByType[i] != null){
data.unitsByType[i].clear();
}
}",0,0,1,0,0,0,0,0,0,2,2,5,0,0,0,0,3,2,0,0,0,0.27,3,0
5694_21,21,23,"if(data.unitsByType[i] != null){
data.unitsByType[i].clear();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,0,0.27,4,0
5694_22,22,22,data.unitsByType[i].clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.28,5,0
5694_28,28,28,Groups.build.each(b -> b.team.data().presentFlag = true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,1,0.49,0,0
5694_30,30,52,"for(Unit unit : Groups.unit){
if(unit.type == null) continue;
TeamData data = unit.team.data();
data.tree().insert(unit);
data.units.add(unit);
data.presentFlag = true;

if(unit.team == state.rules.waveTeam && unit.isBoss()){
bosses.add(unit);
}

if(data.unitsByType == null || data.unitsByType.length <= unit.type.id){
data.unitsByType = new Seq[content.units().size];
}

if(data.unitsByType[unit.type.id] == null){
data.unitsByType[unit.type.id] = new Seq<>();
}

data.unitsByType[unit.type.id].add(unit);

count(unit);
}",0,0,0,1,0,0,0,0,0,13,2,23,0,0,1,1,3,2,0,0,1,0.45,2,1
5694_31,31,31,if(unit.type == null) continue;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.25,3,1
5694_32,32,32,TeamData data = unit.team.data();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.28,4,2
5694_33,33,33,data.tree().insert(unit);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.29,5,3
5694_34,34,34,data.units.add(unit);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.28,6,4
5694_35,35,35,data.presentFlag = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,0,0,1,0.53,7,5
5694_37,37,39,"if(unit.team == state.rules.waveTeam && unit.isBoss()){
bosses.add(unit);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,0,0.34,9,7
5694_38,38,38,bosses.add(unit);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,10,7
5694_41,41,43,"if(data.unitsByType == null || data.unitsByType.length <= unit.type.id){
data.unitsByType = new Seq[content.units().size];
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,0,0.29,13,9
5694_42,42,42,data.unitsByType = new Seq[content.units().size];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,14,9
5694_45,45,47,"if(data.unitsByType[unit.type.id] == null){
data.unitsByType[unit.type.id] = new Seq<>();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,0,0.3,17,11
5694_46,46,46,data.unitsByType[unit.type.id] = new Seq<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,18,11
5694_49,49,49,data.unitsByType[unit.type.id].add(unit);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.28,21,13
5694_51,51,51,count(unit);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.27,23,14
5694_54,54,60,"for(Team team : Team.all){
TeamData data = team.data();

if(data.presentFlag || data.active()){
present.add(data);
}
}",0,0,0,1,0,0,0,0,0,3,2,7,0,0,1,0,3,2,0,0,1,0.46,26,15
5694_55,55,55,TeamData data = team.data();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.22,27,15
5694_57,57,59,"if(data.presentFlag || data.active()){
present.add(data);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,2,0,0,1,0.47,29,17
5694_58,58,58,present.add(data);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.25,30,17
5695_1,1,1,public void updateTeamStats(){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.6,52,30
5695_2,2,2,present.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,0,0.27,51,29
5695_3,3,3,bosses.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,2,0,0,0,0.24,50,28
5695_5,5,26,"for(Team team : Team.all){
TeamData data = team.data();

data.presentFlag = false;
data.unitCount = 0;
data.units.clear();
if(data.tree != null){
data.tree.clear();
}

if(data.typeCounts != null){
Arrays.fill(data.typeCounts, 0);
}

if(data.unitsByType != null){
for(int i = 0; i < data.unitsByType.length; i++){
if(data.unitsByType[i] != null){
data.unitsByType[i].clear();
}
}
}
}",0,0,0,1,0,0,0,0,0,12,4,22,0,0,1,1,3,2,0,0,1,0.31,27,15
5695_6,6,6,TeamData data = team.data();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,1,0.21,47,26
5695_8,8,8,data.presentFlag = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.36,45,25
5695_9,9,9,data.unitCount = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.23,44,24
5695_10,10,10,data.units.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.25,43,23
5695_11,11,13,"if(data.tree != null){
data.tree.clear();
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,1,3,2,0,0,0,0.22,40,21
5695_12,12,12,data.tree.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.24,41,21
5695_15,15,17,"if(data.typeCounts != null){
Arrays.fill(data.typeCounts, 0);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,0,0.2,36,19
5695_16,16,16,"Arrays.fill(data.typeCounts, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.21,37,19
5695_19,19,25,"if(data.unitsByType != null){
for(int i = 0; i < data.unitsByType.length; i++){
if(data.unitsByType[i] != null){
data.unitsByType[i].clear();
}
}
}",1,0,0,0,0,0,0,0,0,3,3,7,0,0,1,0,3,2,0,0,0,0.23,28,15
5695_20,20,24,"for(int i = 0; i < data.unitsByType.length; i++){
if(data.unitsByType[i] != null){
data.unitsByType[i].clear();
}
}",0,0,1,0,0,0,0,0,0,2,2,5,0,0,0,0,3,2,0,0,0,0.23,29,15
5695_21,21,23,"if(data.unitsByType[i] != null){
data.unitsByType[i].clear();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,0,0.25,30,15
5695_22,22,22,data.unitsByType[i].clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,31,15
5695_28,28,28,Groups.build.each(b -> b.team.data().presentFlag = true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,1,0.33,25,14
5695_30,30,52,"for(Unit unit : Groups.unit){
if(unit.type == null) continue;
TeamData data = unit.team.data();
data.tree().insert(unit);
data.units.add(unit);
data.presentFlag = true;

if(unit.team == state.rules.waveTeam && unit.isBoss()){
bosses.add(unit);
}

if(data.unitsByType == null || data.unitsByType.length <= unit.type.id){
data.unitsByType = new Seq[content.units().size];
}

if(data.unitsByType[unit.type.id] == null){
data.unitsByType[unit.type.id] = new Seq<>();
}

data.unitsByType[unit.type.id].add(unit);

count(unit);
}",0,0,0,1,0,0,0,0,0,13,2,23,0,0,1,1,3,2,0,0,1,0.33,1,0
5695_31,31,31,if(unit.type == null) continue;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.22,22,12
5695_32,32,32,TeamData data = unit.team.data();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.25,21,11
5695_33,33,33,data.tree().insert(unit);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.27,20,10
5695_34,34,34,data.units.add(unit);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.24,19,9
5695_35,35,35,data.presentFlag = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.36,18,8
5695_37,37,39,"if(unit.team == state.rules.waveTeam && unit.isBoss()){
bosses.add(unit);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,1,0.33,14,6
5695_38,38,38,bosses.add(unit);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,15,6
5695_41,41,43,"if(data.unitsByType == null || data.unitsByType.length <= unit.type.id){
data.unitsByType = new Seq[content.units().size];
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,0,0.27,10,4
5695_42,42,42,data.unitsByType = new Seq[content.units().size];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.28,11,4
5695_45,45,47,"if(data.unitsByType[unit.type.id] == null){
data.unitsByType[unit.type.id] = new Seq<>();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,0,0.28,6,2
5695_46,46,46,data.unitsByType[unit.type.id] = new Seq<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.28,7,2
5695_49,49,49,data.unitsByType[unit.type.id].add(unit);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.25,4,1
5695_51,51,51,count(unit);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.22,2,0
5695_54,54,60,"for(Team team : Team.all){
TeamData data = team.data();

if(data.presentFlag || data.active()){
present.add(data);
}
}",0,0,0,1,0,0,0,0,0,3,2,7,0,0,1,0,3,2,0,0,1,0.33,0,0
5695_55,55,55,TeamData data = team.data();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,1,0.21,1,0
5695_57,57,59,"if(data.presentFlag || data.active()){
present.add(data);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,2,0,0,0,0.34,3,2
5695_58,58,58,present.add(data);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,4,2
2912_1,1,2,"@Override
public void layout(){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,0,0.38,12,8
2912_3,3,3,invalidated = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.25,11,7
2912_4,4,4,float cy = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.41,10,6
2912_5,5,5,seq.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,1,0,0,0.37,9,5
2912_7,7,7,float totalHeight = getChildren().sumf(e -> e.getHeight() + space);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,1,0,0,0.4,7,4
2912_9,9,9,height = prefHeight = totalHeight;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,1,0,0,0.38,5,3
2912_10,10,10,width = prefWidth = Scl.scl(targetWidth);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,1,0,0,0.4,4,2
2912_12,12,23,"for(int i = 0; i < getChildren().size; i++){
Element e = getChildren().get(i);

if(dragging == e) continue;

e.setSize(width, e.getPrefHeight());
e.setPosition(0, height - cy, Align.topLeft);
((StatementElem)e).updateAddress(i);

cy += e.getPrefHeight() + space;
seq.add(e);
}",0,0,1,0,0,0,0,0,0,7,1,12,0,0,1,1,3,2,1,0,2,0.57,0,0
2912_13,13,13,Element e = getChildren().get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,1,0,1,0.47,1,0
2912_15,15,15,if(dragging == e) continue;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,1,0,1,0.5,0,0
2912_17,17,17,"e.setSize(width, e.getPrefHeight());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,2,1,0,0,0.35,2,1
2912_18,18,18,"e.setPosition(0, height - cy, Align.topLeft);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.44,3,1
2912_19,19,19,((StatementElem)e).updateAddress(i);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,1,0,0,0.22,4,2
2912_21,21,21,cy += e.getPrefHeight() + space;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,2,1,0,0,0.34,6,4
2912_22,22,22,seq.add(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.36,7,4
2912_25,25,43,"if(dragging != null){
float realY = dragging.getY(Align.top) + dragging.translation.y;

insertPosition = 0;

for(int i = 0; i < seq.size; i++){
Element cur = seq.get(i);
if(realY < cur.y && (i == seq.size - 1 || realY > seq.get(i + 1).y)){
insertPosition = i + 1;
break;
}
}

float shiftAmount = dragging.getHeight() + space;

for(int i = insertPosition; i < seq.size; i++){
seq.get(i).y -= shiftAmount;
}
}",1,0,0,0,0,0,0,0,0,10,3,19,0,0,1,1,3,2,1,0,2,0.63,10,6
2912_26,26,26,float realY = dragging.getY(Align.top) + dragging.translation.y;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,1,0,1,0.6,11,6
2912_28,28,28,insertPosition = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,1,0,0,0.32,13,8
2912_30,30,36,"for(int i = 0; i < seq.size; i++){
Element cur = seq.get(i);
if(realY < cur.y && (i == seq.size - 1 || realY > seq.get(i + 1).y)){
insertPosition = i + 1;
break;
}
}",0,0,1,0,0,0,0,0,0,4,2,7,0,0,1,1,3,2,1,0,1,0.49,15,9
2912_31,31,31,Element cur = seq.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,2,1,0,1,0.57,16,9
2912_32,32,35,"if(realY < cur.y && (i == seq.size - 1 || realY > seq.get(i + 1).y)){
insertPosition = i + 1;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,3,2,1,0,0,0.36,17,10
2912_33,33,33,insertPosition = i + 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.28,18,11
2912_34,34,34,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,1,0,0,0.31,19,12
2912_38,38,38,float shiftAmount = dragging.getHeight() + space;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,1,0,1,0.54,23,14
2912_40,40,42,"for(int i = insertPosition; i < seq.size; i++){
seq.get(i).y -= shiftAmount;
}",0,0,1,0,0,0,0,0,0,1,1,3,0,0,1,0,3,2,1,0,0,0.4,25,15
2912_41,41,41,seq.get(i).y -= shiftAmount;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.42,26,15
2912_45,45,45,invalidateHierarchy();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,1,0,0,0.21,30,17
2912_47,47,49,"if(parent != null && parent instanceof Table){
setCullingArea(parent.getCullingArea());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,2,1,0,0,0.35,32,18
2912_48,48,48,setCullingArea(parent.getCullingArea());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.31,33,18
2913_1,1,2,"@Override
public void layout(){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,0,0.39,22,14
2913_3,3,3,invalidated = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.28,21,13
2913_4,4,4,float cy = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.43,20,12
2913_5,5,5,seq.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.39,19,11
2913_7,7,7,float totalHeight = getChildren().sumf(e -> e.getHeight() + space);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.42,17,10
2913_9,9,9,height = prefHeight = totalHeight;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.41,15,9
2913_10,10,10,width = prefWidth = Scl.scl(targetWidth);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.44,14,8
2913_12,12,23,"for(int i = 0; i < getChildren().size; i++){
Element e = getChildren().get(i);

if(dragging == e) continue;

e.setSize(width, e.getPrefHeight());
e.setPosition(0, height - cy, Align.topLeft);
((StatementElem)e).updateAddress(i);

cy += e.getPrefHeight() + space;
seq.add(e);
}",0,0,1,0,0,0,0,0,0,7,1,12,0,0,1,1,4,2,1,0,2,0.57,1,0
2913_13,13,13,Element e = getChildren().get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,1,0.47,11,6
2913_15,15,15,if(dragging == e) continue;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,1,0.5,9,5
2913_17,17,17,"e.setSize(width, e.getPrefHeight());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.39,7,4
2913_18,18,18,"e.setPosition(0, height - cy, Align.topLeft);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.47,6,3
2913_19,19,19,((StatementElem)e).updateAddress(i);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.3,5,2
2913_21,21,21,cy += e.getPrefHeight() + space;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.36,3,1
2913_22,22,22,seq.add(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.37,2,0
2913_25,25,43,"if(dragging != null){
float realY = dragging.getY(Align.top) + dragging.translation.y;

insertPosition = 0;

for(int i = 0; i < seq.size; i++){
Element cur = seq.get(i);
if(realY < cur.y && (i == seq.size - 1 || realY > seq.get(i + 1).y)){
insertPosition = i + 1;
break;
}
}

float shiftAmount = dragging.getHeight() + space;

for(int i = insertPosition; i < seq.size; i++){
seq.get(i).y -= shiftAmount;
}
}",1,0,0,0,0,0,0,0,0,10,3,19,0,0,1,1,4,2,1,0,3,0.69,0,0
2913_26,26,26,float realY = dragging.getY(Align.top) + dragging.translation.y;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,1,0.61,1,0
2913_28,28,28,insertPosition = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,1,0.57,3,2
2913_30,30,36,"for(int i = 0; i < seq.size; i++){
Element cur = seq.get(i);
if(realY < cur.y && (i == seq.size - 1 || realY > seq.get(i + 1).y)){
insertPosition = i + 1;
break;
}
}",0,0,1,0,0,0,0,0,0,4,2,7,0,0,1,1,4,2,1,0,2,0.57,5,3
2913_31,31,31,Element cur = seq.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,2,1,0,1,0.53,6,3
2913_32,32,35,"if(realY < cur.y && (i == seq.size - 1 || realY > seq.get(i + 1).y)){
insertPosition = i + 1;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,4,2,1,0,1,0.49,7,4
2913_33,33,33,insertPosition = i + 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.56,8,5
2913_34,34,34,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,2,1,0,0,0.17,9,6
2913_38,38,38,float shiftAmount = dragging.getHeight() + space;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,1,0,1,0.49,13,8
2913_40,40,42,"for(int i = insertPosition; i < seq.size; i++){
seq.get(i).y -= shiftAmount;
}",0,0,1,0,0,0,0,0,0,1,1,3,0,0,1,0,4,2,1,0,1,0.51,15,9
2913_41,41,41,seq.get(i).y -= shiftAmount;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.37,16,9
2913_45,45,45,invalidateHierarchy();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.23,20,11
2913_47,47,49,"if(parent != null && parent instanceof Table){
setCullingArea(parent.getCullingArea());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,4,2,1,0,0,0.36,22,12
2913_48,48,48,setCullingArea(parent.getCullingArea());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.34,23,12
2914_1,1,2,"@Override
public void layout(){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,2,2,0,0,0.38,23,15
2914_3,3,3,invalidated = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.24,22,14
2914_4,4,4,float cy = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.44,21,13
2914_5,5,5,seq.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,2,2,0,0,0.41,20,12
2914_7,7,7,float totalHeight = getChildren().sumf(e -> e.getHeight() + space);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,2,2,0,0,0.43,18,11
2914_9,9,9,height = prefHeight = totalHeight;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,2,2,0,0,0.46,16,10
2914_10,10,10,width = prefWidth = Scl.scl(targetWidth);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,2,2,0,0,0.42,15,9
2914_12,12,23,"for(int i = 0; i < getChildren().size; i++){
Element e = getChildren().get(i);

if(dragging == e) continue;

e.setSize(width, e.getPrefHeight());
e.setPosition(0, height - cy, Align.topLeft);
((StatementElem)e).updateAddress(i);

cy += e.getPrefHeight() + space;
seq.add(e);
}",0,0,1,0,0,0,0,0,0,7,1,12,0,0,1,1,6,2,2,0,4,0.62,2,1
2914_13,13,13,Element e = getChildren().get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,2,2,0,1,0.44,12,7
2914_15,15,15,if(dragging == e) continue;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,2,2,0,1,0.47,10,6
2914_17,17,17,"e.setSize(width, e.getPrefHeight());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,2,2,0,0,0.4,8,5
2914_18,18,18,"e.setPosition(0, height - cy, Align.topLeft);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,2,0,2,0.61,7,4
2914_19,19,19,((StatementElem)e).updateAddress(i);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,2,2,0,0,0.27,6,3
2914_21,21,21,cy += e.getPrefHeight() + space;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,2,2,0,0,0.4,4,2
2914_22,22,22,seq.add(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,2,0,0,0.4,3,1
2914_25,25,43,"if(dragging != null){
float realY = dragging.getY(Align.top) + dragging.translation.y;

insertPosition = 0;

for(int i = 0; i < seq.size; i++){
Element cur = seq.get(i);
if(realY < cur.y && (i == seq.size - 1 || realY > seq.get(i + 1).y)){
insertPosition = i + 1;
break;
}
}

float shiftAmount = dragging.getHeight() + space;

for(int i = insertPosition; i < seq.size; i++){
seq.get(i).y -= shiftAmount;
}
}",1,0,0,0,0,0,0,0,0,10,3,19,0,0,1,1,6,2,2,0,5,0.72,0,0
2914_26,26,26,float realY = dragging.getY(Align.top) + dragging.translation.y;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,2,2,0,3,0.76,0,0
2914_28,28,28,insertPosition = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,2,2,0,1,0.51,2,1
2914_30,30,36,"for(int i = 0; i < seq.size; i++){
Element cur = seq.get(i);
if(realY < cur.y && (i == seq.size - 1 || realY > seq.get(i + 1).y)){
insertPosition = i + 1;
break;
}
}",0,0,1,0,0,0,0,0,0,4,2,7,0,0,1,1,6,2,2,0,3,0.6,4,2
2914_31,31,31,Element cur = seq.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,2,2,0,1,0.53,5,2
2914_32,32,35,"if(realY < cur.y && (i == seq.size - 1 || realY > seq.get(i + 1).y)){
insertPosition = i + 1;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,6,2,2,0,2,0.55,6,3
2914_33,33,33,insertPosition = i + 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,1,0.47,7,4
2914_34,34,34,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,2,2,0,0,0.28,8,5
2914_38,38,38,float shiftAmount = dragging.getHeight() + space;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,2,2,0,1,0.52,12,7
2914_40,40,42,"for(int i = insertPosition; i < seq.size; i++){
seq.get(i).y -= shiftAmount;
}",0,0,1,0,0,0,0,0,0,1,1,3,0,0,1,0,6,2,2,0,1,0.49,14,8
2914_41,41,41,seq.get(i).y -= shiftAmount;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.39,15,8
2914_45,45,45,invalidateHierarchy();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,2,2,0,0,0.18,19,10
2914_47,47,49,"if(parent != null && parent instanceof Table){
setCullingArea(parent.getCullingArea());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,6,2,2,0,0,0.36,21,11
2914_48,48,48,setCullingArea(parent.getCullingArea());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.34,22,11
2915_1,1,2,"@Override
public void layout(){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,1,0,0,0.35,29,19
2915_3,3,3,invalidated = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.24,28,18
2915_4,4,4,float cy = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.61,27,17
2915_5,5,5,seq.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,1,1,0,0,0.39,26,16
2915_7,7,7,float totalHeight = getChildren().sumf(e -> e.getHeight() + space);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,1,1,0,0,0.53,24,15
2915_9,9,9,height = prefHeight = totalHeight;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,1,0,0,0.59,22,14
2915_10,10,10,width = prefWidth = Scl.scl(targetWidth);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,1,1,0,0,0.52,21,13
2915_12,12,23,"for(int i = 0; i < getChildren().size; i++){
Element e = getChildren().get(i);

if(dragging == e) continue;

e.setSize(width, e.getPrefHeight());
e.setPosition(0, height - cy, Align.topLeft);
((StatementElem)e).updateAddress(i);

cy += e.getPrefHeight() + space;
seq.add(e);
}",0,0,1,0,0,0,0,0,0,7,1,12,0,0,1,1,3,1,1,0,0,0.5,8,5
2915_13,13,13,Element e = getChildren().get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,1,1,0,0,0.3,18,11
2915_15,15,15,if(dragging == e) continue;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,1,0,0,0.39,16,10
2915_17,17,17,"e.setSize(width, e.getPrefHeight());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,1,1,0,0,0.48,14,9
2915_18,18,18,"e.setPosition(0, height - cy, Align.topLeft);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,0,0.57,13,8
2915_19,19,19,((StatementElem)e).updateAddress(i);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,1,1,0,0,0.21,12,7
2915_21,21,21,cy += e.getPrefHeight() + space;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,1,1,0,0,0.47,10,6
2915_22,22,22,seq.add(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,0,0.36,9,5
2915_25,25,43,"if(dragging != null){
float realY = dragging.getY(Align.top) + dragging.translation.y;

insertPosition = 0;

for(int i = 0; i < seq.size; i++){
Element cur = seq.get(i);
if(realY < cur.y && (i == seq.size - 1 || realY > seq.get(i + 1).y)){
insertPosition = i + 1;
break;
}
}

float shiftAmount = dragging.getHeight() + space;

for(int i = insertPosition; i < seq.size; i++){
seq.get(i).y -= shiftAmount;
}
}",1,0,0,0,0,0,0,0,0,10,3,19,0,0,1,1,3,1,1,0,0,0.54,0,0
2915_26,26,26,float realY = dragging.getY(Align.top) + dragging.translation.y;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,1,1,0,0,0.59,5,3
2915_28,28,28,insertPosition = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,1,0,0,0.43,3,2
2915_30,30,36,"for(int i = 0; i < seq.size; i++){
Element cur = seq.get(i);
if(realY < cur.y && (i == seq.size - 1 || realY > seq.get(i + 1).y)){
insertPosition = i + 1;
break;
}
}",0,0,1,0,0,0,0,0,0,4,2,7,0,0,1,1,3,1,1,0,0,0.41,0,0
2915_31,31,31,Element cur = seq.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,1,1,0,0,0.42,0,0
2915_32,32,35,"if(realY < cur.y && (i == seq.size - 1 || realY > seq.get(i + 1).y)){
insertPosition = i + 1;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,3,1,1,0,0,0.39,0,0
2915_33,33,33,insertPosition = i + 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.39,1,0
2915_34,34,34,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,1,1,0,0,0.27,2,1
2915_38,38,38,float shiftAmount = dragging.getHeight() + space;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,1,1,0,0,0.57,6,3
2915_40,40,42,"for(int i = insertPosition; i < seq.size; i++){
seq.get(i).y -= shiftAmount;
}",0,0,1,0,0,0,0,0,0,1,1,3,0,0,1,0,3,1,1,0,0,0.46,8,4
2915_41,41,41,seq.get(i).y -= shiftAmount;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.45,9,4
2915_45,45,45,invalidateHierarchy();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,1,0,0,0.21,13,6
2915_47,47,49,"if(parent != null && parent instanceof Table){
setCullingArea(parent.getCullingArea());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,1,1,0,0,0.39,15,7
2915_48,48,48,setCullingArea(parent.getCullingArea());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.4,16,7
2916_1,1,2,"@Override
public void layout(){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.34,37,23
2916_3,3,3,invalidated = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,36,22
2916_4,4,4,float cy = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.39,35,21
2916_5,5,5,seq.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.36,34,20
2916_7,7,7,float totalHeight = getChildren().sumf(e -> e.getHeight() + space);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.4,32,19
2916_9,9,9,height = prefHeight = totalHeight;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.36,30,18
2916_10,10,10,width = prefWidth = Scl.scl(targetWidth);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.37,29,17
2916_12,12,23,"for(int i = 0; i < getChildren().size; i++){
Element e = getChildren().get(i);

if(dragging == e) continue;

e.setSize(width, e.getPrefHeight());
e.setPosition(0, height - cy, Align.topLeft);
((StatementElem)e).updateAddress(i);

cy += e.getPrefHeight() + space;
seq.add(e);
}",0,0,1,0,0,0,0,0,0,7,1,12,0,0,1,1,4,3,0,0,1,0.47,16,9
2916_13,13,13,Element e = getChildren().get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.47,26,15
2916_15,15,15,if(dragging == e) continue;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.3,24,14
2916_17,17,17,"e.setSize(width, e.getPrefHeight());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.34,22,13
2916_18,18,18,"e.setPosition(0, height - cy, Align.topLeft);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.4,21,12
2916_19,19,19,((StatementElem)e).updateAddress(i);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,0,0.3,20,11
2916_21,21,21,cy += e.getPrefHeight() + space;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.35,18,10
2916_22,22,22,seq.add(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.37,17,9
2916_25,25,43,"if(dragging != null){
float realY = dragging.getY(Align.top) + dragging.translation.y;

insertPosition = 0;

for(int i = 0; i < seq.size; i++){
Element cur = seq.get(i);
if(realY < cur.y && (i == seq.size - 1 || realY > seq.get(i + 1).y)){
insertPosition = i + 1;
break;
}
}

float shiftAmount = dragging.getHeight() + space;

for(int i = insertPosition; i < seq.size; i++){
seq.get(i).y -= shiftAmount;
}
}",1,0,0,0,0,0,0,0,0,10,3,19,0,0,1,1,4,3,0,0,3,0.67,0,0
2916_26,26,26,float realY = dragging.getY(Align.top) + dragging.translation.y;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.44,13,7
2916_28,28,28,insertPosition = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.51,11,6
2916_30,30,36,"for(int i = 0; i < seq.size; i++){
Element cur = seq.get(i);
if(realY < cur.y && (i == seq.size - 1 || realY > seq.get(i + 1).y)){
insertPosition = i + 1;
break;
}
}",0,0,1,0,0,0,0,0,0,4,2,7,0,0,1,1,4,3,0,0,2,0.55,3,1
2916_31,31,31,Element cur = seq.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,3,0,0,1,0.52,8,4
2916_32,32,35,"if(realY < cur.y && (i == seq.size - 1 || realY > seq.get(i + 1).y)){
insertPosition = i + 1;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,4,3,0,0,1,0.47,4,1
2916_33,33,33,insertPosition = i + 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.51,6,2
2916_34,34,34,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.32,5,1
2916_38,38,38,float shiftAmount = dragging.getHeight() + space;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.51,1,0
2916_40,40,42,"for(int i = insertPosition; i < seq.size; i++){
seq.get(i).y -= shiftAmount;
}",0,0,1,0,0,0,0,0,0,1,1,3,0,0,1,0,4,3,0,0,2,0.6,0,0
2916_41,41,41,seq.get(i).y -= shiftAmount;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.54,1,0
2916_45,45,45,invalidateHierarchy();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.25,5,2
2916_47,47,49,"if(parent != null && parent instanceof Table){
setCullingArea(parent.getCullingArea());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,4,3,0,0,0,0.36,7,3
2916_48,48,48,setCullingArea(parent.getCullingArea());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.32,8,3
2917_1,1,2,"@Override
public void draw(){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,0,0,1,0.53,2,1
2917_3,3,3,Draw.alpha(parentAlpha);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,5,0,0,1,0.59,1,0
2917_5,5,11,"if(dragging != null && insertPosition <= seq.size){
float shiftAmount = dragging.getHeight();
float lastX = x;
float lastY = insertPosition == 0 ? height + y : seq.get(insertPosition - 1).y + y - space;

Tex.pane.draw(lastX, lastY - shiftAmount, width, dragging.getHeight());
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,1,1,6,5,0,0,2,0.61,0,0
2917_6,6,6,float shiftAmount = dragging.getHeight();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.51,1,0
2917_7,7,7,float lastX = x;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.5,2,1
2917_8,8,8,float lastY = insertPosition == 0 ? height + y : seq.get(insertPosition - 1).y + y - space;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,5,0,0,1,0.55,3,2
2917_10,10,10,"Tex.pane.draw(lastX, lastY - shiftAmount, width, dragging.getHeight());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,5,0,0,1,0.58,5,4
2917_13,13,15,"if(invalidated){
children.each(c -> c.cullable = false);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,5,0,0,0,0.32,8,5
2917_14,14,14,children.each(c -> c.cullable = false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.33,9,5
2917_17,17,17,super.draw();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,5,0,0,1,0.59,12,7
2917_19,19,22,"if(invalidated){
children.each(c -> c.cullable = true);
invalidated = false;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,6,5,0,0,0,0.32,14,8
2917_20,20,20,children.each(c -> c.cullable = true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.33,15,8
2917_21,21,21,invalidated = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.29,16,9
5724_1,1,2,"@Override
public Color getColor(Vec3 position){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,1,0.54,1,1
5724_3,3,3,Block block = getBlock(position);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.27,0,0
5724_4,4,4,if(block == Blocks.salt) return Blocks.sand.mapColor;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,3,0.47,0,0
5724_5,5,5,return Tmp.c1.set(block.mapColor).a(1f - block.albedo);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.51,1,0
5731_1,1,1,throws IOException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,0,0.4,14,11
5731_2,2,2,"String baseName = file.nameWithoutExtension().replace(':', '_').replace(' ', '_');",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.36,13,10
5731_3,3,3,String finalName = baseName;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.3,12,9
5731_4,4,4,int count = 1;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.29,11,8
5731_5,5,7,"while(modDirectory.child(finalName + "".zip"").exists()){
finalName = baseName + """" + count++;
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,3,0,0,1,0.48,8,6
5731_6,6,6,"finalName = baseName + """" + count++;",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,9,6
5731_9,9,9,"Fi dest = modDirectory.child(finalName + "".zip"");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.54,6,5
5731_11,11,11,file.copyTo(dest);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.34,4,4
5731_12,12,26,"try{
var loaded = loadMod(dest, true);
mods.add(loaded);
requiresReload = true;
Core.settings.put(""mod-"" + loaded.name + ""-enabled"", true);
sortMods();
Core.app.post(() -> loadIcon(loaded));
return loaded;
}catch(IOException e){
dest.delete();
throw e;
}catch(Throwable t){
dest.delete();
throw new IOException(t);
}",0,0,0,0,1,0,0,0,0,13,1,15,0,1,0,0,3,3,0,0,2,0.67,0,0
5731_13,13,13,"var loaded = loadMod(dest, true);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.58,2,2
5731_14,14,14,mods.add(loaded);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.57,1,1
5731_15,15,15,requiresReload = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,0,0
5731_16,16,16,"Core.settings.put(""mod-"" + loaded.name + ""-enabled"", true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.71,0,0
5731_17,17,17,sortMods();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.63,1,0
5731_18,18,18,Core.app.post(() -> loadIcon(loaded));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.49,2,1
5731_19,19,19,return loaded;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.29,3,2
5731_20,20,20,}catch(IOException e){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.41,4,3
5731_21,21,21,dest.delete();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,5,4
5731_22,22,22,throw e;,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,0,0.31,6,5
5731_23,23,23,}catch(Throwable t){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.49,7,6
5731_24,24,24,dest.delete();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,8,7
5731_25,25,25,throw new IOException(t);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,0,0.39,9,8
5732_1,1,1,throws IOException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,6,0,0,0,0.42,16,13
5732_2,2,2,"String baseName = file.nameWithoutExtension().replace(':', '_').replace(' ', '_');",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,0,0.36,15,12
5732_3,3,3,String finalName = baseName;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,0,0.31,14,11
5732_4,4,4,int count = 1;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,0,0.29,13,10
5732_5,5,7,"while(modDirectory.child(finalName + "".zip"").exists()){
finalName = baseName + """" + count++;
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,1,6,6,0,0,1,0.42,10,8
5732_6,6,6,"finalName = baseName + """" + count++;",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.31,11,8
5732_9,9,9,"Fi dest = modDirectory.child(finalName + "".zip"");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,6,0,0,1,0.5,8,7
5732_11,11,11,file.copyTo(dest);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,6,0,0,0,0.32,6,6
5732_12,12,26,"try{
var loaded = loadMod(dest, true);
mods.add(loaded);
requiresReload = true;
Core.settings.put(""mod-"" + loaded.name + ""-enabled"", true);
sortMods();
Core.app.post(() -> loadIcon(loaded));
return loaded;
}catch(IOException e){
dest.delete();
throw e;
}catch(Throwable t){
dest.delete();
throw new IOException(t);
}",0,0,0,0,1,0,0,0,0,13,1,15,0,1,0,0,6,6,0,0,4,0.72,0,0
5732_13,13,13,"var loaded = loadMod(dest, true);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,2,0.66,4,4
5732_14,14,14,mods.add(loaded);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,6,0,0,2,0.67,3,3
5732_15,15,15,requiresReload = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.27,2,2
5732_16,16,16,"Core.settings.put(""mod-"" + loaded.name + ""-enabled"", true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,2,0.6,1,1
5732_17,17,17,sortMods();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.56,0,0
5732_18,18,18,Core.app.post(() -> loadIcon(loaded));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,6,0,0,2,0.7,0,0
5732_19,19,19,return loaded;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,6,0,0,1,0.51,1,0
5732_20,20,20,}catch(IOException e){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.44,2,1
5732_21,21,21,dest.delete();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.29,3,2
5732_22,22,22,throw e;,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,6,0,0,0,0.32,4,3
5732_23,23,23,}catch(Throwable t){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.49,5,4
5732_24,24,24,dest.delete();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.29,6,5
5732_25,25,25,throw new IOException(t);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,6,0,0,0,0.39,7,6
5733_1,1,2,"    @Override
public void loadAsync(){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.4,22,16
5733_3,3,3,if(!mods.contains(LoadedMod::enabled)) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.4,21,15
5733_4,4,4,Time.mark();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.31,20,14
5733_6,6,6,packer = new MultiPacker();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.28,18,13
5733_7,7,7,var tasks = new Seq<AsyncResult<Runnable>>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.45,17,12
5733_9,9,9,eachEnabled(mod -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.4,15,11
5733_10,10,10,"Seq<Fi> sprites = mod.root.child(""sprites"").findAll(f -> f.extension().equals(""png""));",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,3,2,0,0,0,0.47,14,10
5733_11,11,11,"Seq<Fi> overrides = mod.root.child(""sprites-override"").findAll(f -> f.extension().equals(""png""));",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,3,2,0,0,0,0.47,13,9
5733_13,13,13,"packSprites(sprites, mod, true, tasks);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,3,2,0,0,1,0.55,11,8
5733_14,14,14,"packSprites(overrides, mod, false, tasks);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,3,2,0,0,1,0.54,10,7
5733_16,16,16,"Log.debug(""Packed @ images for mod '@'."", sprites.size + overrides.size, mod.meta.name);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,2,0,0,2,0.65,8,6
5733_17,17,17,totalSprites += sprites.size + overrides.size;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.39,7,5
5733_20,20,34,"for(var result : tasks){
try{
var packRun = result.get();
if(packRun != null){
try{
packRun.run();
}catch(Exception e){
Log.err(""Failed to fit image into the spritesheet, skipping."");
Log.err(e);
}
}
}catch(Exception e){
Log.err(e);
}
}",0,0,0,1,0,0,0,0,0,10,4,15,0,0,1,1,3,2,0,0,2,0.63,0,0
5733_21,21,33,"try{
var packRun = result.get();
if(packRun != null){
try{
packRun.run();
}catch(Exception e){
Log.err(""Failed to fit image into the spritesheet, skipping."");
Log.err(e);
}
}
}catch(Exception e){
Log.err(e);
}",0,0,0,0,1,0,0,0,0,9,3,13,0,0,0,0,3,2,0,0,2,0.63,0,0
5733_22,22,22,var packRun = result.get();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.56,2,2
5733_23,23,30,"if(packRun != null){
try{
packRun.run();
}catch(Exception e){
Log.err(""Failed to fit image into the spritesheet, skipping."");
Log.err(e);
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,0,3,2,0,0,2,0.62,0,0
5733_24,24,29,"try{
packRun.run();
}catch(Exception e){
Log.err(""Failed to fit image into the spritesheet, skipping."");
Log.err(e);
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,0,0,3,2,0,0,2,0.61,0,0
5733_25,25,25,packRun.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.55,0,0
5733_26,26,26,}catch(Exception e){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.23,1,0
5733_27,27,27,"Log.err(""Failed to fit image into the spritesheet, skipping."");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,1,0.6,2,1
5733_28,28,28,Log.err(e);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,0,0.41,3,2
5733_31,31,31,}catch(Exception e){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.23,6,4
5733_32,32,32,Log.err(e);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.41,7,4
5733_36,36,36,"Log.debug(""Time to pack textures: @"", Time.elapsed());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,1,0.52,11,6
5734_1,1,1,    private void loadIcon(LoadedMod mod){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,3,0.75,0,0
5734_2,2,9,"if(mod.root.child(""icon.png"").exists() && !headless){
try{
mod.iconTexture = new Texture(mod.root.child(""icon.png""));
mod.iconTexture.setFilter(TextureFilter.linear);
}catch(Throwable t){
Log.err(""Failed to load icon for mod '"" + mod.name + ""'."", t);
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,0,0,0,5,3,1,0,4,0.74,0,0
5734_3,3,8,"try{
mod.iconTexture = new Texture(mod.root.child(""icon.png""));
mod.iconTexture.setFilter(TextureFilter.linear);
}catch(Throwable t){
Log.err(""Failed to load icon for mod '"" + mod.name + ""'."", t);
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,0,0,5,3,1,0,4,0.74,1,0
5734_4,4,4,"mod.iconTexture = new Texture(mod.root.child(""icon.png""));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,2,0.6,2,1
5734_5,5,5,mod.iconTexture.setFilter(TextureFilter.linear);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,2,0.54,3,2
5734_6,6,6,}catch(Throwable t){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.47,4,3
5734_7,7,7,"Log.err(""Failed to load icon for mod '"" + mod.name + ""'."", t);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,3,0.72,5,4
5735_1,1,1,"private void packSprites(Seq<Fi> sprites, LoadedMod mod, boolean prefix, Seq<AsyncResult<Runnable>> tasks){",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,0,0.51,3,2
5735_2,2,2,"boolean linear = Core.settings.getBool(""linear"", true);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,2,0,0,0.36,2,1
5735_4,4,19,"for(Fi file : sprites){
tasks.add(async.submit(() -> {
try{
Pixmap pix = new Pixmap(file.readBytes());
if(linear){
Pixmaps.bleed(pix, 2);
}
return () -> {
packer.add(getPage(file), (prefix ? mod.name + ""-"" : """") + file.nameWithoutExtension(), new PixmapRegion(pix));
pix.dispose();
};
}catch(Exception e){
throw new Exception(""Failed to load image "" + file + "" for mod "" + mod.name, e);
}
}));
}",0,0,0,1,0,0,0,0,0,8,4,16,0,0,1,0,4,2,2,0,3,0.59,0,0
5735_5,5,5,tasks.add(async.submit(() -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,0,0.46,0,0
5735_6,6,17,"try{
Pixmap pix = new Pixmap(file.readBytes());
if(linear){
Pixmaps.bleed(pix, 2);
}
return () -> {
packer.add(getPage(file), (prefix ? mod.name + ""-"" : """") + file.nameWithoutExtension(), new PixmapRegion(pix));
pix.dispose();
};
}catch(Exception e){
throw new Exception(""Failed to load image "" + file + "" for mod "" + mod.name, e);
}",0,0,0,0,1,0,0,0,0,6,2,12,0,0,0,0,4,2,2,0,3,0.58,1,0
5735_7,7,7,Pixmap pix = new Pixmap(file.readBytes());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,2,0.61,2,1
5735_8,8,10,"if(linear){
Pixmaps.bleed(pix, 2);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,2,2,0,2,0.29,3,2
5735_9,9,9,"Pixmaps.bleed(pix, 2);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,2,0.11,4,3
5735_11,11,14,"return () -> {
packer.add(getPage(file), (prefix ? mod.name + ""-"" : """") + file.nameWithoutExtension(), new PixmapRegion(pix));
pix.dispose();
};",0,0,0,0,0,0,1,0,0,0,1,4,0,1,0,0,4,2,2,0,1,0.41,6,5
5735_15,15,15,}catch(Exception e){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,0,0.29,10,6
5735_16,16,16,"throw new Exception(""Failed to load image "" + file + "" for mod "" + mod.name, e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,2,0,0,0.43,11,6
5736_1,1,1,"private void packSprites(Seq<Fi> sprites, LoadedMod mod, boolean prefix, Seq<AsyncResult<Runnable>> tasks){",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.5,6,5
5736_2,2,2,"boolean linear = Core.settings.getBool(""linear"", true);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,1,0,1,0.65,5,4
5736_4,4,19,"for(Fi file : sprites){
tasks.add(async.submit(() -> {
try{
Pixmap pix = new Pixmap(file.readBytes());
if(linear){
Pixmaps.bleed(pix, 2);
}
return () -> {
packer.add(getPage(file), (prefix ? mod.name + ""-"" : """") + file.nameWithoutExtension(), new PixmapRegion(pix));
pix.dispose();
};
}catch(Exception e){
throw new Exception(""Failed to load image "" + file + "" for mod "" + mod.name, e);
}
}));
}",0,0,0,1,0,0,0,0,0,8,4,16,0,0,1,0,4,3,1,0,2,0.53,0,0
5736_5,5,5,tasks.add(async.submit(() -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.45,2,2
5736_6,6,17,"try{
Pixmap pix = new Pixmap(file.readBytes());
if(linear){
Pixmaps.bleed(pix, 2);
}
return () -> {
packer.add(getPage(file), (prefix ? mod.name + ""-"" : """") + file.nameWithoutExtension(), new PixmapRegion(pix));
pix.dispose();
};
}catch(Exception e){
throw new Exception(""Failed to load image "" + file + "" for mod "" + mod.name, e);
}",0,0,0,0,1,0,0,0,0,6,2,12,0,0,0,0,4,3,1,0,2,0.52,0,0
5736_7,7,7,Pixmap pix = new Pixmap(file.readBytes());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.31,0,0
5736_8,8,10,"if(linear){
Pixmaps.bleed(pix, 2);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,1,0,2,0.66,0,0
5736_9,9,9,"Pixmaps.bleed(pix, 2);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.39,1,0
5736_11,11,14,"return () -> {
packer.add(getPage(file), (prefix ? mod.name + ""-"" : """") + file.nameWithoutExtension(), new PixmapRegion(pix));
pix.dispose();
};",0,0,0,0,0,0,1,0,0,0,1,4,0,1,0,0,4,3,1,0,0,0.46,3,2
5736_15,15,15,}catch(Exception e){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.32,7,3
5736_16,16,16,"throw new Exception(""Failed to load image "" + file + "" for mod "" + mod.name, e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,1,0,0,0.39,8,3
5737_1,1,1,"private void packSprites(Seq<Fi> sprites, LoadedMod mod, boolean prefix, Seq<AsyncResult<Runnable>> tasks){",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.43,14,9
5737_2,2,2,"boolean linear = Core.settings.getBool(""linear"", true);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,0,0,0,0.32,13,8
5737_4,4,19,"for(Fi file : sprites){
tasks.add(async.submit(() -> {
try{
Pixmap pix = new Pixmap(file.readBytes());
if(linear){
Pixmaps.bleed(pix, 2);
}
return () -> {
packer.add(getPage(file), (prefix ? mod.name + ""-"" : """") + file.nameWithoutExtension(), new PixmapRegion(pix));
pix.dispose();
};
}catch(Exception e){
throw new Exception(""Failed to load image "" + file + "" for mod "" + mod.name, e);
}
}));
}",0,0,0,1,0,0,0,0,0,8,4,16,0,0,1,0,5,4,0,0,1,0.54,0,0
5737_5,5,5,tasks.add(async.submit(() -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.39,10,6
5737_6,6,17,"try{
Pixmap pix = new Pixmap(file.readBytes());
if(linear){
Pixmaps.bleed(pix, 2);
}
return () -> {
packer.add(getPage(file), (prefix ? mod.name + ""-"" : """") + file.nameWithoutExtension(), new PixmapRegion(pix));
pix.dispose();
};
}catch(Exception e){
throw new Exception(""Failed to load image "" + file + "" for mod "" + mod.name, e);
}",0,0,0,0,1,0,0,0,0,6,2,12,0,0,0,0,5,4,0,0,1,0.54,0,0
5737_7,7,7,Pixmap pix = new Pixmap(file.readBytes());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.3,8,4
5737_8,8,10,"if(linear){
Pixmaps.bleed(pix, 2);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,4,0,0,0,0.2,5,2
5737_9,9,9,"Pixmaps.bleed(pix, 2);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.16,6,2
5737_11,11,14,"return () -> {
packer.add(getPage(file), (prefix ? mod.name + ""-"" : """") + file.nameWithoutExtension(), new PixmapRegion(pix));
pix.dispose();
};",0,0,0,0,0,0,1,0,0,0,1,4,0,1,0,0,5,4,0,0,0,0.34,1,1
5737_15,15,15,}catch(Exception e){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.74,0,0
5737_16,16,16,"throw new Exception(""Failed to load image "" + file + "" for mod "" + mod.name, e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,4,0,0,1,0.57,0,0
5740_1,1,1,    private void sortMods(){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,2,0,2,0.62,0,0
5740_2,2,2,"mods.sort(Structs.comps(Structs.comparingInt(m -> m.state.ordinal()), Structs.comparing(m -> m.name)));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,2,0,2,0.52,0,0
5741_1,1,1,private void buildFiles(){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.41,4,4
5741_2,2,21,"for(LoadedMod mod : orderedMods()){
boolean zipFolder = !mod.file.isDirectory() && mod.root.parent() != null;
String parentName = zipFolder ? mod.root.name() : null;
for(Fi file : mod.root.list()){
if(file.isDirectory() && !specialFolders.contains(file.name())){
file.walk(f -> tree.addFile(mod.file.isDirectory() ? f.path().substring(1 + mod.file.path().length()) :
zipFolder ? f.path().substring(parentName.length() + 1) : f.path(), f));
}
}

Fi folder = mod.root.child(""bundles"");
if(folder.exists()){
for(Fi file : folder.list()){
if(file.name().startsWith(""bundle"") && file.extension().equals(""properties"")){
String name = file.nameWithoutExtension();
bundles.get(name, Seq::new).add(file);
}
}
}
}",0,0,0,1,0,0,0,0,0,11,4,20,0,0,0,0,6,3,0,0,3,0.65,0,0
5741_3,3,3,boolean zipFolder = !mod.file.isDirectory() && mod.root.parent() != null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.54,2,2
5741_4,4,4,String parentName = zipFolder ? mod.root.name() : null;,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,3,0,0,1,0.54,1,1
5741_5,5,10,"for(Fi file : mod.root.list()){
if(file.isDirectory() && !specialFolders.contains(file.name())){
file.walk(f -> tree.addFile(mod.file.isDirectory() ? f.path().substring(1 + mod.file.path().length()) :
zipFolder ? f.path().substring(parentName.length() + 1) : f.path(), f));
}
}",0,0,0,1,0,0,0,0,0,2,2,6,1,1,0,1,6,3,0,0,2,0.6,0,0
5741_6,6,9,"if(file.isDirectory() && !specialFolders.contains(file.name())){
file.walk(f -> tree.addFile(mod.file.isDirectory() ? f.path().substring(1 + mod.file.path().length()) :
zipFolder ? f.path().substring(parentName.length() + 1) : f.path(), f));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,6,3,0,0,2,0.6,0,0
5741_7,7,8,"file.walk(f -> tree.addFile(mod.file.isDirectory() ? f.path().substring(1 + mod.file.path().length()) :
zipFolder ? f.path().substring(parentName.length() + 1) : f.path(), f));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,0,0,1,0.54,1,0
5741_12,12,12,"Fi folder = mod.root.child(""bundles"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,0,0,2,0.67,6,2
5741_13,13,20,"if(folder.exists()){
for(Fi file : folder.list()){
if(file.name().startsWith(""bundle"") && file.extension().equals(""properties"")){
String name = file.nameWithoutExtension();
bundles.get(name, Seq::new).add(file);
}
}
}",1,0,0,0,0,0,0,0,0,4,3,8,0,1,0,0,6,3,0,0,2,0.56,7,2
5741_14,14,19,"for(Fi file : folder.list()){
if(file.name().startsWith(""bundle"") && file.extension().equals(""properties"")){
String name = file.nameWithoutExtension();
bundles.get(name, Seq::new).add(file);
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,0,0,0,6,3,0,0,2,0.55,8,3
5741_15,15,18,"if(file.name().startsWith(""bundle"") && file.extension().equals(""properties"")){
String name = file.nameWithoutExtension();
bundles.get(name, Seq::new).add(file);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,6,3,0,0,1,0.5,9,4
5741_16,16,16,String name = file.nameWithoutExtension();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.39,10,5
5741_17,17,17,"bundles.get(name, Seq::new).add(file);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.47,11,6
5741_22,22,22,Events.fire(new FileTreeInitEvent());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,0,0,0,0.4,16,8
5741_24,24,24,I18NBundle bundle = Core.bundle;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,0,0,1,0.66,18,9
5741_25,25,36,"while(bundle != null){
String str = bundle.getLocale().toString();
String locale = ""bundle"" + (str.isEmpty() ? """" : ""_"" + str);
for(Fi file : bundles.get(locale, Seq::new)){
try{
PropertiesUtils.load(bundle.getProperties(), file.reader());
}catch(Throwable e){
Log.err(""Error loading bundle: "" + file + ""/"" + locale, e);
}
}
bundle = bundle.getParent();
}",0,1,0,0,0,0,0,0,0,8,3,12,0,1,0,0,6,3,0,0,1,0.57,19,9
5741_26,26,26,String str = bundle.getLocale().toString();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.53,20,10
5741_27,27,27,"String locale = ""bundle"" + (str.isEmpty() ? """" : ""_"" + str);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.53,21,11
5741_28,28,34,"for(Fi file : bundles.get(locale, Seq::new)){
try{
PropertiesUtils.load(bundle.getProperties(), file.reader());
}catch(Throwable e){
Log.err(""Error loading bundle: "" + file + ""/"" + locale, e);
}
}",0,0,0,1,0,0,0,0,0,4,2,7,0,1,0,0,6,3,0,0,1,0.52,22,12
5741_29,29,33,"try{
PropertiesUtils.load(bundle.getProperties(), file.reader());
}catch(Throwable e){
Log.err(""Error loading bundle: "" + file + ""/"" + locale, e);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,6,3,0,0,1,0.52,23,13
5741_30,30,30,"PropertiesUtils.load(bundle.getProperties(), file.reader());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.5,24,14
5741_31,31,31,}catch(Throwable e){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.46,25,15
5741_32,32,32,"Log.err(""Error loading bundle: "" + file + ""/"" + locale, e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.48,26,16
5741_35,35,35,bundle = bundle.getParent();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.54,29,18
5742_1,1,1,private void buildFiles(){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,10,6
5742_2,2,21,"for(LoadedMod mod : orderedMods()){
boolean zipFolder = !mod.file.isDirectory() && mod.root.parent() != null;
String parentName = zipFolder ? mod.root.name() : null;
for(Fi file : mod.root.list()){
if(file.isDirectory() && !specialFolders.contains(file.name())){
file.walk(f -> tree.addFile(mod.file.isDirectory() ? f.path().substring(1 + mod.file.path().length()) :
zipFolder ? f.path().substring(parentName.length() + 1) : f.path(), f));
}
}

Fi folder = mod.root.child(""bundles"");
if(folder.exists()){
for(Fi file : folder.list()){
if(file.name().startsWith(""bundle"") && file.extension().equals(""properties"")){
String name = file.nameWithoutExtension();
bundles.get(name, Seq::new).add(file);
}
}
}
}",0,0,0,1,0,0,0,0,0,11,4,20,0,0,0,0,2,2,0,0,2,0.69,0,0
5742_3,3,3,boolean zipFolder = !mod.file.isDirectory() && mod.root.parent() != null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.38,8,4
5742_4,4,4,String parentName = zipFolder ? mod.root.name() : null;,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.36,7,3
5742_5,5,10,"for(Fi file : mod.root.list()){
if(file.isDirectory() && !specialFolders.contains(file.name())){
file.walk(f -> tree.addFile(mod.file.isDirectory() ? f.path().substring(1 + mod.file.path().length()) :
zipFolder ? f.path().substring(parentName.length() + 1) : f.path(), f));
}
}",0,0,0,1,0,0,0,0,0,2,2,6,1,1,0,1,2,2,0,0,0,0.42,1,0
5742_6,6,9,"if(file.isDirectory() && !specialFolders.contains(file.name())){
file.walk(f -> tree.addFile(mod.file.isDirectory() ? f.path().substring(1 + mod.file.path().length()) :
zipFolder ? f.path().substring(parentName.length() + 1) : f.path(), f));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,2,2,0,0,0,0.36,2,0
5742_7,7,8,"file.walk(f -> tree.addFile(mod.file.isDirectory() ? f.path().substring(1 + mod.file.path().length()) :
zipFolder ? f.path().substring(parentName.length() + 1) : f.path(), f));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.36,3,0
5742_12,12,12,"Fi folder = mod.root.child(""bundles"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,1,0.61,0,0
5742_13,13,20,"if(folder.exists()){
for(Fi file : folder.list()){
if(file.name().startsWith(""bundle"") && file.extension().equals(""properties"")){
String name = file.nameWithoutExtension();
bundles.get(name, Seq::new).add(file);
}
}
}",1,0,0,0,0,0,0,0,0,4,3,8,0,1,0,0,2,2,0,0,1,0.56,1,0
5742_14,14,19,"for(Fi file : folder.list()){
if(file.name().startsWith(""bundle"") && file.extension().equals(""properties"")){
String name = file.nameWithoutExtension();
bundles.get(name, Seq::new).add(file);
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,0,0,0,2,2,0,0,1,0.56,2,1
5742_15,15,18,"if(file.name().startsWith(""bundle"") && file.extension().equals(""properties"")){
String name = file.nameWithoutExtension();
bundles.get(name, Seq::new).add(file);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,2,2,0,0,1,0.52,3,2
5742_16,16,16,String name = file.nameWithoutExtension();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.32,4,3
5742_17,17,17,"bundles.get(name, Seq::new).add(file);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.54,5,4
5742_22,22,22,Events.fire(new FileTreeInitEvent());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.31,10,6
5742_24,24,24,I18NBundle bundle = Core.bundle;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,1,0.73,12,7
5742_25,25,36,"while(bundle != null){
String str = bundle.getLocale().toString();
String locale = ""bundle"" + (str.isEmpty() ? """" : ""_"" + str);
for(Fi file : bundles.get(locale, Seq::new)){
try{
PropertiesUtils.load(bundle.getProperties(), file.reader());
}catch(Throwable e){
Log.err(""Error loading bundle: "" + file + ""/"" + locale, e);
}
}
bundle = bundle.getParent();
}",0,1,0,0,0,0,0,0,0,8,3,12,0,1,0,0,2,2,0,0,2,0.73,13,7
5742_26,26,26,String str = bundle.getLocale().toString();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.53,14,8
5742_27,27,27,"String locale = ""bundle"" + (str.isEmpty() ? """" : ""_"" + str);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.53,15,9
5742_28,28,34,"for(Fi file : bundles.get(locale, Seq::new)){
try{
PropertiesUtils.load(bundle.getProperties(), file.reader());
}catch(Throwable e){
Log.err(""Error loading bundle: "" + file + ""/"" + locale, e);
}
}",0,0,0,1,0,0,0,0,0,4,2,7,0,1,0,0,2,2,0,0,2,0.73,16,10
5742_29,29,33,"try{
PropertiesUtils.load(bundle.getProperties(), file.reader());
}catch(Throwable e){
Log.err(""Error loading bundle: "" + file + ""/"" + locale, e);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,2,2,0,0,2,0.73,17,11
5742_30,30,30,"PropertiesUtils.load(bundle.getProperties(), file.reader());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,2,0.77,18,12
5742_31,31,31,}catch(Throwable e){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,19,13
5742_32,32,32,"Log.err(""Error loading bundle: "" + file + ""/"" + locale, e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,2,0.73,20,14
5742_35,35,35,bundle = bundle.getParent();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.67,23,16
5743_1,1,1,private void buildFiles(){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.39,22,13
5743_2,2,21,"for(LoadedMod mod : orderedMods()){
boolean zipFolder = !mod.file.isDirectory() && mod.root.parent() != null;
String parentName = zipFolder ? mod.root.name() : null;
for(Fi file : mod.root.list()){
if(file.isDirectory() && !specialFolders.contains(file.name())){
file.walk(f -> tree.addFile(mod.file.isDirectory() ? f.path().substring(1 + mod.file.path().length()) :
zipFolder ? f.path().substring(parentName.length() + 1) : f.path(), f));
}
}

Fi folder = mod.root.child(""bundles"");
if(folder.exists()){
for(Fi file : folder.list()){
if(file.name().startsWith(""bundle"") && file.extension().equals(""properties"")){
String name = file.nameWithoutExtension();
bundles.get(name, Seq::new).add(file);
}
}
}
}",0,0,0,1,0,0,0,0,0,11,4,20,0,0,0,0,4,1,1,0,3,0.63,2,1
5743_3,3,3,boolean zipFolder = !mod.file.isDirectory() && mod.root.parent() != null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.4,20,11
5743_4,4,4,String parentName = zipFolder ? mod.root.name() : null;,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,1,1,0,0,0.35,19,10
5743_5,5,10,"for(Fi file : mod.root.list()){
if(file.isDirectory() && !specialFolders.contains(file.name())){
file.walk(f -> tree.addFile(mod.file.isDirectory() ? f.path().substring(1 + mod.file.path().length()) :
zipFolder ? f.path().substring(parentName.length() + 1) : f.path(), f));
}
}",0,0,0,1,0,0,0,0,0,2,2,6,1,1,0,1,4,1,1,0,1,0.47,13,7
5743_6,6,9,"if(file.isDirectory() && !specialFolders.contains(file.name())){
file.walk(f -> tree.addFile(mod.file.isDirectory() ? f.path().substring(1 + mod.file.path().length()) :
zipFolder ? f.path().substring(parentName.length() + 1) : f.path(), f));
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,4,1,1,0,1,0.48,14,7
5743_7,7,8,"file.walk(f -> tree.addFile(mod.file.isDirectory() ? f.path().substring(1 + mod.file.path().length()) :
zipFolder ? f.path().substring(parentName.length() + 1) : f.path(), f));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,1,1,0,1,0.47,15,7
5743_12,12,12,"Fi folder = mod.root.child(""bundles"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,1,1,0,1,0.47,11,6
5743_13,13,20,"if(folder.exists()){
for(Fi file : folder.list()){
if(file.name().startsWith(""bundle"") && file.extension().equals(""properties"")){
String name = file.nameWithoutExtension();
bundles.get(name, Seq::new).add(file);
}
}
}",1,0,0,0,0,0,0,0,0,4,3,8,0,1,0,0,4,1,1,0,3,0.64,3,1
5743_14,14,19,"for(Fi file : folder.list()){
if(file.name().startsWith(""bundle"") && file.extension().equals(""properties"")){
String name = file.nameWithoutExtension();
bundles.get(name, Seq::new).add(file);
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,0,0,0,4,1,1,0,3,0.64,4,1
5743_15,15,18,"if(file.name().startsWith(""bundle"") && file.extension().equals(""properties"")){
String name = file.nameWithoutExtension();
bundles.get(name, Seq::new).add(file);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,4,1,1,0,3,0.65,5,1
5743_16,16,16,String name = file.nameWithoutExtension();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.3,7,2
5743_17,17,17,"bundles.get(name, Seq::new).add(file);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,3,0.74,6,1
5743_22,22,22,Events.fire(new FileTreeInitEvent());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,1,1,0,1,0.51,1,0
5743_24,24,24,I18NBundle bundle = Core.bundle;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,1,1,0,1,0.62,0,0
5743_25,25,36,"while(bundle != null){
String str = bundle.getLocale().toString();
String locale = ""bundle"" + (str.isEmpty() ? """" : ""_"" + str);
for(Fi file : bundles.get(locale, Seq::new)){
try{
PropertiesUtils.load(bundle.getProperties(), file.reader());
}catch(Throwable e){
Log.err(""Error loading bundle: "" + file + ""/"" + locale, e);
}
}
bundle = bundle.getParent();
}",0,1,0,0,0,0,0,0,0,8,3,12,0,1,0,0,4,1,1,0,2,0.57,1,0
5743_26,26,26,String str = bundle.getLocale().toString();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,1,0.42,2,1
5743_27,27,27,"String locale = ""bundle"" + (str.isEmpty() ? """" : ""_"" + str);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,1,0.41,3,2
5743_28,28,34,"for(Fi file : bundles.get(locale, Seq::new)){
try{
PropertiesUtils.load(bundle.getProperties(), file.reader());
}catch(Throwable e){
Log.err(""Error loading bundle: "" + file + ""/"" + locale, e);
}
}",0,0,0,1,0,0,0,0,0,4,2,7,0,1,0,0,4,1,1,0,2,0.56,4,3
5743_29,29,33,"try{
PropertiesUtils.load(bundle.getProperties(), file.reader());
}catch(Throwable e){
Log.err(""Error loading bundle: "" + file + ""/"" + locale, e);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,4,1,1,0,1,0.45,5,4
5743_30,30,30,"PropertiesUtils.load(bundle.getProperties(), file.reader());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,1,0.44,6,5
5743_31,31,31,}catch(Throwable e){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.34,7,6
5743_32,32,32,"Log.err(""Error loading bundle: "" + file + ""/"" + locale, e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,1,0.44,8,7
5743_35,35,35,bundle = bundle.getParent();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,1,0.54,11,9
5746_1,1,1,"private void selectFile(boolean open, String purpose, String ext, Cons<Fi> cons){",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,1,0.5,1,1
5746_2,2,2,"purpose = purpose.startsWith(""@"") ? Core.bundle.get(purpose.substring(1)) : purpose;",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,1,1,0,1,0.58,0,0
5746_3,3,3,"String title = Core.bundle.get(open ? ""open"" : ""save"") + "" - "" + purpose + "" (."" + ext + "")"";",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,1,1,0,1,0.53,0,0
5746_4,4,4,"Vars.platform.showFileChooser(open, title, ext, fi -> {",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.52,1,0
5746_5,5,10,"try{
cons.get(fi);
}catch(Exception e){
Log.err(""Failed to select file '@' for a mod"", fi);
Log.err(e);
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,0,0,4,1,1,0,0,0.34,2,1
5746_6,6,6,cons.get(fi);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.27,3,2
5746_7,7,7,}catch(Exception e){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.25,4,3
5746_8,8,8,"Log.err(""Failed to select file '@' for a mod"", fi);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,1,1,0,0,0.35,5,4
5746_9,9,9,Log.err(e);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,1,1,0,0,0.33,6,5
5747_1,1,1,"private boolean run(String script, String file, boolean wrap){",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.57,2,2
5747_2,2,16,"try{
if(currentMod != null){
context.evaluateString(scope, ""modName = \"""" + currentMod.name + ""\""\nscriptName = \"""" + file + ""\"""", ""initscript.js"", 1);
}
context.evaluateString(scope,
wrap ? ""(function(){'use strict';\n"" + script + ""\n})();"" : script,
file, 0);
return true;
}catch(Throwable t){
if(currentMod != null){
file = currentMod.name + ""/"" + file;
}
log(LogLevel.err, file, """" + getError(t, true));
return false;
}",0,0,0,0,1,0,0,0,0,9,2,15,0,0,0,0,4,3,0,0,2,0.56,0,0
5747_3,3,5,"if(currentMod != null){
context.evaluateString(scope, ""modName = \"""" + currentMod.name + ""\""\nscriptName = \"""" + file + ""\"""", ""initscript.js"", 1);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,4,3,0,0,1,0.46,0,0
5747_4,4,4,"context.evaluateString(scope, ""modName = \"""" + currentMod.name + ""\""\nscriptName = \"""" + file + ""\"""", ""initscript.js"", 1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.46,0,0
5747_6,6,8,"context.evaluateString(scope,
wrap ? ""(function(){'use strict';\n"" + script + ""\n})();"" : script,
file, 0);",0,0,0,0,0,0,0,0,0,0,0,3,1,0,0,0,4,3,0,0,2,0.56,2,1
5747_9,9,9,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.23,5,2
5747_10,10,10,}catch(Throwable t){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.46,6,2
5747_11,11,13,"if(currentMod != null){
file = currentMod.name + ""/"" + file;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,1,0.54,7,3
5747_12,12,12,"file = currentMod.name + ""/"" + file;",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.58,8,4
5747_14,14,14,"log(LogLevel.err, file, """" + getError(t, true));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.53,10,6
5747_15,15,15,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.22,11,6
5748_1,1,2,"@Override
public void sendStream(Streamable stream){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,5,1,0,0,0.41,18,13
5748_3,3,3,"connection.addListener(new InputStreamSender(stream.stream, 512){",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.38,17,12
5748_4,4,4,int id;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,5,1,0,0,0.37,16,11
5748_6,6,7,"@Override
protected void start(){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,7,5,1,0,0,0.31,13,10
5748_8,8,8,StreamBegin begin = new StreamBegin();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,1,0,0,0.33,12,9
5748_9,9,9,begin.total = stream.stream.available();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,0,0.4,11,8
5748_10,10,10,begin.type = Net.getPacketId(stream);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,0,0.41,10,7
5748_11,11,11,connection.sendTCP(begin);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,0,0.42,9,6
5748_12,12,12,id = begin.id;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,0,0.34,8,5
5748_15,15,16,"@Override
protected Object next(byte[] bytes){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,7,5,1,0,2,0.58,4,4
5748_17,17,17,StreamChunk chunk = new StreamChunk();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,1,0,0,0.33,3,3
5748_18,18,18,chunk.id = id;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,0,0.33,2,2
5748_19,19,19,chunk.data = bytes;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.46,1,1
5748_20,20,20,return chunk;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,7,5,1,0,0,0.28,0,0
5749_1,1,2,"@Override
public Object read(ByteBuffer byteBuffer){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,1,0.65,19,15
5749_3,3,11,"if(debug){
if(Time.timeSinceMillis(lastDownload) >= 1000){
lastDownload = Time.millis();
download.add(downloadAccum);
downloadAccum = 0;
Log.info(""Download: @ b/s"", download.mean());
}
downloadAccum += byteBuffer.remaining();
}",1,0,0,0,0,0,0,0,0,6,2,9,0,0,0,1,3,3,0,0,1,0.53,10,8
5749_4,4,9,"if(Time.timeSinceMillis(lastDownload) >= 1000){
lastDownload = Time.millis();
download.add(downloadAccum);
downloadAccum = 0;
Log.info(""Download: @ b/s"", download.mean());
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,3,3,0,0,0,0.36,12,9
5749_5,5,5,lastDownload = Time.millis();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.27,16,12
5749_6,6,6,download.add(downloadAccum);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.26,15,11
5749_7,7,7,downloadAccum = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,14,10
5749_8,8,8,"Log.info(""Download: @ b/s"", download.mean());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,13,9
5749_10,10,10,downloadAccum += byteBuffer.remaining();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.63,11,8
5749_13,13,13,byte id = byteBuffer.get();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,3,3,0,0,1,0.63,8,7
5749_14,14,38,"if(id == -2){
return readFramework(byteBuffer);
}else{
Packet packet = Net.newPacket(id);
var buffer = decompressBuffer.get();
int length = byteBuffer.getShort() & 0xffff;
byte compression = byteBuffer.get();

if(compression == 0){
buffer.position(0).limit(length);
buffer.put(byteBuffer.array(), byteBuffer.position(), length);
buffer.position(0);
packet.read(reads.get(), length);
byteBuffer.position(byteBuffer.position() + buffer.position());
}else{
int read = decompressor.decompress(byteBuffer, byteBuffer.position(), buffer, 0, length);

buffer.position(0);
buffer.limit(length);
packet.read(reads.get(), length);
byteBuffer.position(byteBuffer.position() + read);
}

return packet;
}",1,0,0,0,0,0,0,0,0,19,2,25,1,1,0,0,3,3,0,0,2,0.69,0,0
5749_15,15,15,return readFramework(byteBuffer);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.63,6,5
5749_16,16,16,}else{,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.16,5,4
5749_17,17,17,Packet packet = Net.newPacket(id);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.4,4,3
5749_18,18,18,var buffer = decompressBuffer.get();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.72,3,2
5749_19,19,19,int length = byteBuffer.getShort() & 0xffff;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.64,2,1
5749_20,20,20,byte compression = byteBuffer.get();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,2,0.74,1,0
5749_22,22,35,"if(compression == 0){
buffer.position(0).limit(length);
buffer.put(byteBuffer.array(), byteBuffer.position(), length);
buffer.position(0);
packet.read(reads.get(), length);
byteBuffer.position(byteBuffer.position() + buffer.position());
}else{
int read = decompressor.decompress(byteBuffer, byteBuffer.position(), buffer, 0, length);

buffer.position(0);
buffer.limit(length);
packet.read(reads.get(), length);
byteBuffer.position(byteBuffer.position() + read);
}",1,0,0,0,0,0,0,0,0,11,1,14,0,0,1,1,3,3,0,0,2,0.69,0,0
5749_23,23,23,buffer.position(0).limit(length);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,1,0.62,1,0
5749_24,24,24,"buffer.put(byteBuffer.array(), byteBuffer.position(), length);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,1,0.68,2,1
5749_25,25,25,buffer.position(0);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,1,0.64,3,2
5749_26,26,26,"packet.read(reads.get(), length);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.42,4,3
5749_27,27,27,byteBuffer.position(byteBuffer.position() + buffer.position());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.69,5,4
5749_28,28,28,}else{,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.16,6,5
5749_29,29,29,"int read = decompressor.decompress(byteBuffer, byteBuffer.position(), buffer, 0, length);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.68,7,6
5749_31,31,31,buffer.position(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,3,0,0,1,0.64,9,8
5749_32,32,32,buffer.limit(length);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.68,10,8
5749_33,33,33,"packet.read(reads.get(), length);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.42,11,9
5749_34,34,34,byteBuffer.position(byteBuffer.position() + read);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.67,12,10
5749_37,37,37,return packet;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.34,15,12
5750_1,1,2,"@Override
public Object read(ByteBuffer byteBuffer){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,1,0.51,24,20
5750_3,3,11,"if(debug){
if(Time.timeSinceMillis(lastDownload) >= 1000){
lastDownload = Time.millis();
download.add(downloadAccum);
downloadAccum = 0;
Log.info(""Download: @ b/s"", download.mean());
}
downloadAccum += byteBuffer.remaining();
}",1,0,0,0,0,0,0,0,0,6,2,9,0,0,0,1,4,3,0,0,0,0.39,15,13
5750_4,4,9,"if(Time.timeSinceMillis(lastDownload) >= 1000){
lastDownload = Time.millis();
download.add(downloadAccum);
downloadAccum = 0;
Log.info(""Download: @ b/s"", download.mean());
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,4,3,0,0,0,0.38,17,14
5750_5,5,5,lastDownload = Time.millis();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.29,21,17
5750_6,6,6,download.add(downloadAccum);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,20,16
5750_7,7,7,downloadAccum = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.28,19,15
5750_8,8,8,"Log.info(""Download: @ b/s"", download.mean());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,18,14
5750_10,10,10,downloadAccum += byteBuffer.remaining();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,16,13
5750_13,13,13,byte id = byteBuffer.get();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,4,3,0,0,0,0.37,13,12
5750_14,14,38,"if(id == -2){
return readFramework(byteBuffer);
}else{
Packet packet = Net.newPacket(id);
var buffer = decompressBuffer.get();
int length = byteBuffer.getShort() & 0xffff;
byte compression = byteBuffer.get();

if(compression == 0){
buffer.position(0).limit(length);
buffer.put(byteBuffer.array(), byteBuffer.position(), length);
buffer.position(0);
packet.read(reads.get(), length);
byteBuffer.position(byteBuffer.position() + buffer.position());
}else{
int read = decompressor.decompress(byteBuffer, byteBuffer.position(), buffer, 0, length);

buffer.position(0);
buffer.limit(length);
packet.read(reads.get(), length);
byteBuffer.position(byteBuffer.position() + read);
}

return packet;
}",1,0,0,0,0,0,0,0,0,19,2,25,1,1,0,0,4,3,0,0,2,0.6,0,0
5750_15,15,15,return readFramework(byteBuffer);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.56,11,10
5750_16,16,16,}else{,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.28,10,9
5750_17,17,17,Packet packet = Net.newPacket(id);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.59,9,8
5750_18,18,18,var buffer = decompressBuffer.get();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.4,8,7
5750_19,19,19,int length = byteBuffer.getShort() & 0xffff;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.37,7,6
5750_20,20,20,byte compression = byteBuffer.get();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.42,6,5
5750_22,22,35,"if(compression == 0){
buffer.position(0).limit(length);
buffer.put(byteBuffer.array(), byteBuffer.position(), length);
buffer.position(0);
packet.read(reads.get(), length);
byteBuffer.position(byteBuffer.position() + buffer.position());
}else{
int read = decompressor.decompress(byteBuffer, byteBuffer.position(), buffer, 0, length);

buffer.position(0);
buffer.limit(length);
packet.read(reads.get(), length);
byteBuffer.position(byteBuffer.position() + read);
}",1,0,0,0,0,0,0,0,0,11,1,14,0,0,1,1,4,3,0,0,2,0.59,0,0
5750_23,23,23,buffer.position(0).limit(length);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,0,0.38,3,3
5750_24,24,24,"buffer.put(byteBuffer.array(), byteBuffer.position(), length);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,0,0.38,2,2
5750_25,25,25,buffer.position(0);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,0,0.37,1,1
5750_26,26,26,"packet.read(reads.get(), length);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.66,0,0
5750_27,27,27,byteBuffer.position(byteBuffer.position() + buffer.position());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.4,0,0
5750_28,28,28,}else{,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.28,1,0
5750_29,29,29,"int read = decompressor.decompress(byteBuffer, byteBuffer.position(), buffer, 0, length);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.5,2,1
5750_31,31,31,buffer.position(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.37,4,3
5750_32,32,32,buffer.limit(length);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.39,5,3
5750_33,33,33,"packet.read(reads.get(), length);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,2,0.66,6,4
5750_34,34,34,byteBuffer.position(byteBuffer.position() + read);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.53,7,5
5750_37,37,37,return packet;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.57,10,7
5751_1,1,2,"@Override
public Object read(ByteBuffer byteBuffer){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.14,26,22
5751_3,3,11,"if(debug){
if(Time.timeSinceMillis(lastDownload) >= 1000){
lastDownload = Time.millis();
download.add(downloadAccum);
downloadAccum = 0;
Log.info(""Download: @ b/s"", download.mean());
}
downloadAccum += byteBuffer.remaining();
}",1,0,0,0,0,0,0,0,0,6,2,9,0,0,0,1,2,2,0,0,0,0.27,17,15
5751_4,4,9,"if(Time.timeSinceMillis(lastDownload) >= 1000){
lastDownload = Time.millis();
download.add(downloadAccum);
downloadAccum = 0;
Log.info(""Download: @ b/s"", download.mean());
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,2,2,0,0,0,0.28,19,16
5751_5,5,5,lastDownload = Time.millis();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,23,19
5751_6,6,6,download.add(downloadAccum);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.06,22,18
5751_7,7,7,downloadAccum = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.07,21,17
5751_8,8,8,"Log.info(""Download: @ b/s"", download.mean());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.28,20,16
5751_10,10,10,downloadAccum += byteBuffer.remaining();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.03,18,15
5751_13,13,13,byte id = byteBuffer.get();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,2,2,0,0,0,0.08,15,14
5751_14,14,38,"if(id == -2){
return readFramework(byteBuffer);
}else{
Packet packet = Net.newPacket(id);
var buffer = decompressBuffer.get();
int length = byteBuffer.getShort() & 0xffff;
byte compression = byteBuffer.get();

if(compression == 0){
buffer.position(0).limit(length);
buffer.put(byteBuffer.array(), byteBuffer.position(), length);
buffer.position(0);
packet.read(reads.get(), length);
byteBuffer.position(byteBuffer.position() + buffer.position());
}else{
int read = decompressor.decompress(byteBuffer, byteBuffer.position(), buffer, 0, length);

buffer.position(0);
buffer.limit(length);
packet.read(reads.get(), length);
byteBuffer.position(byteBuffer.position() + read);
}

return packet;
}",1,0,0,0,0,0,0,0,0,19,2,25,1,1,0,0,2,2,0,0,1,0.17,0,0
5751_15,15,15,return readFramework(byteBuffer);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.16,13,12
5751_16,16,16,}else{,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.29,12,11
5751_17,17,17,Packet packet = Net.newPacket(id);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.23,11,10
5751_18,18,18,var buffer = decompressBuffer.get();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.12,10,9
5751_19,19,19,int length = byteBuffer.getShort() & 0xffff;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.09,9,8
5751_20,20,20,byte compression = byteBuffer.get();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.08,8,7
5751_22,22,35,"if(compression == 0){
buffer.position(0).limit(length);
buffer.put(byteBuffer.array(), byteBuffer.position(), length);
buffer.position(0);
packet.read(reads.get(), length);
byteBuffer.position(byteBuffer.position() + buffer.position());
}else{
int read = decompressor.decompress(byteBuffer, byteBuffer.position(), buffer, 0, length);

buffer.position(0);
buffer.limit(length);
packet.read(reads.get(), length);
byteBuffer.position(byteBuffer.position() + read);
}",1,0,0,0,0,0,0,0,0,11,1,14,0,0,1,1,2,2,0,0,1,0.17,0,0
5751_23,23,23,buffer.position(0).limit(length);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.04,5,5
5751_24,24,24,"buffer.put(byteBuffer.array(), byteBuffer.position(), length);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.04,4,4
5751_25,25,25,buffer.position(0);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.05,3,3
5751_26,26,26,"packet.read(reads.get(), length);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.2,2,2
5751_27,27,27,byteBuffer.position(byteBuffer.position() + buffer.position());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.03,1,1
5751_28,28,28,}else{,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.29,0,0
5751_29,29,29,"int read = decompressor.decompress(byteBuffer, byteBuffer.position(), buffer, 0, length);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,1,0.13,0,0
5751_31,31,31,buffer.position(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.05,2,1
5751_32,32,32,buffer.limit(length);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,-0.0,3,1
5751_33,33,33,"packet.read(reads.get(), length);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.2,4,2
5751_34,34,34,byteBuffer.position(byteBuffer.position() + read);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.13,5,3
5751_37,37,37,return packet;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.17,8,5
5752_1,1,2,"@Override
public Object read(ByteBuffer byteBuffer){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,6,0,0,3,0.7,31,26
5752_3,3,11,"if(debug){
if(Time.timeSinceMillis(lastDownload) >= 1000){
lastDownload = Time.millis();
download.add(downloadAccum);
downloadAccum = 0;
Log.info(""Download: @ b/s"", download.mean());
}
downloadAccum += byteBuffer.remaining();
}",1,0,0,0,0,0,0,0,0,6,2,9,0,0,0,1,7,6,0,0,2,0.5,22,19
5752_4,4,9,"if(Time.timeSinceMillis(lastDownload) >= 1000){
lastDownload = Time.millis();
download.add(downloadAccum);
downloadAccum = 0;
Log.info(""Download: @ b/s"", download.mean());
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,7,6,0,0,0,0.37,24,20
5752_5,5,5,lastDownload = Time.millis();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.27,28,23
5752_6,6,6,download.add(downloadAccum);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.23,27,22
5752_7,7,7,downloadAccum = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.34,26,21
5752_8,8,8,"Log.info(""Download: @ b/s"", download.mean());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.37,25,20
5752_10,10,10,downloadAccum += byteBuffer.remaining();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,2,0.63,23,19
5752_13,13,13,byte id = byteBuffer.get();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,7,6,0,0,2,0.62,20,18
5752_14,14,38,"if(id == -2){
return readFramework(byteBuffer);
}else{
Packet packet = Net.newPacket(id);
var buffer = decompressBuffer.get();
int length = byteBuffer.getShort() & 0xffff;
byte compression = byteBuffer.get();

if(compression == 0){
buffer.position(0).limit(length);
buffer.put(byteBuffer.array(), byteBuffer.position(), length);
buffer.position(0);
packet.read(reads.get(), length);
byteBuffer.position(byteBuffer.position() + buffer.position());
}else{
int read = decompressor.decompress(byteBuffer, byteBuffer.position(), buffer, 0, length);

buffer.position(0);
buffer.limit(length);
packet.read(reads.get(), length);
byteBuffer.position(byteBuffer.position() + read);
}

return packet;
}",1,0,0,0,0,0,0,0,0,19,2,25,1,1,0,0,7,6,0,0,4,0.69,0,0
5752_15,15,15,return readFramework(byteBuffer);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,6,0,0,3,0.71,18,16
5752_16,16,16,}else{,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.27,17,15
5752_17,17,17,Packet packet = Net.newPacket(id);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.34,16,14
5752_18,18,18,var buffer = decompressBuffer.get();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,6,0,0,1,0.58,15,13
5752_19,19,19,int length = byteBuffer.getShort() & 0xffff;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,6,0,0,2,0.6,14,12
5752_20,20,20,byte compression = byteBuffer.get();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,6,0,0,2,0.69,13,11
5752_22,22,35,"if(compression == 0){
buffer.position(0).limit(length);
buffer.put(byteBuffer.array(), byteBuffer.position(), length);
buffer.position(0);
packet.read(reads.get(), length);
byteBuffer.position(byteBuffer.position() + buffer.position());
}else{
int read = decompressor.decompress(byteBuffer, byteBuffer.position(), buffer, 0, length);

buffer.position(0);
buffer.limit(length);
packet.read(reads.get(), length);
byteBuffer.position(byteBuffer.position() + read);
}",1,0,0,0,0,0,0,0,0,11,1,14,0,0,1,1,7,6,0,0,4,0.7,0,0
5752_23,23,23,buffer.position(0).limit(length);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,6,0,0,1,0.55,10,9
5752_24,24,24,"buffer.put(byteBuffer.array(), byteBuffer.position(), length);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,6,0,0,2,0.66,9,8
5752_25,25,25,buffer.position(0);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,6,0,0,1,0.55,8,7
5752_26,26,26,"packet.read(reads.get(), length);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,1,0.57,7,6
5752_27,27,27,byteBuffer.position(byteBuffer.position() + buffer.position());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,2,0.66,6,5
5752_28,28,28,}else{,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.27,5,4
5752_29,29,29,"int read = decompressor.decompress(byteBuffer, byteBuffer.position(), buffer, 0, length);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,6,0,0,4,0.74,4,3
5752_31,31,31,buffer.position(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,7,6,0,0,1,0.55,2,2
5752_32,32,32,buffer.limit(length);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,1,0.59,1,1
5752_33,33,33,"packet.read(reads.get(), length);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,1,0.57,0,0
5752_34,34,34,byteBuffer.position(byteBuffer.position() + read);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,3,0.75,0,0
5752_37,37,37,return packet;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,6,0,0,0,0.33,3,1
5758_1,1,1,protected TextureRegion[] icons(){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.46,0,0
5758_2,2,2,"TextureRegion r = variants > 0 ? Core.atlas.find(name + ""1"") : region;",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,1,0.48,0,0
5758_3,3,3,"return teamRegion.found() && minfo.mod == null ? new TextureRegion[]{r, teamRegions[Team.sharded.id]} : new TextureRegion[]{r};",0,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0,6,6,0,0,2,0.49,1,0
5759_1,1,1,    protected void initBuilding(){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.36,0,0
5759_2,2,28,"try{
Class<?> current = getClass();

if(current.isAnonymousClass()){
current = current.getSuperclass();
}

subclass = current;

while(buildType == null && Block.class.isAssignableFrom(current)){
Class<?> type = Structs.find(current.getDeclaredClasses(), t -> Building.class.isAssignableFrom(t) && !t.isInterface());
if(type != null){
Constructor<? extends Building> cons = (Constructor<? extends Building>)type.getDeclaredConstructor(type.getDeclaringClass());
buildType = () -> {
try{
return cons.newInstance(this);
}catch(Exception e){
throw new RuntimeException(e);
}
};
}

current = current.getSuperclass();
}

}catch(Throwable ignored){
}",0,0,0,0,1,0,0,0,0,15,5,27,0,0,0,1,8,4,2,0,4,0.62,0,0
5759_3,3,3,Class<?> current = getClass();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,4,2,0,1,0.51,1,0
5759_5,5,7,"if(current.isAnonymousClass()){
current = current.getSuperclass();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,8,4,2,0,1,0.48,3,2
5759_6,6,6,current = current.getSuperclass();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.4,4,2
5759_9,9,9,subclass = current;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,8,4,2,0,0,0.23,7,4
5759_11,11,25,"while(buildType == null && Block.class.isAssignableFrom(current)){
Class<?> type = Structs.find(current.getDeclaredClasses(), t -> Building.class.isAssignableFrom(t) && !t.isInterface());
if(type != null){
Constructor<? extends Building> cons = (Constructor<? extends Building>)type.getDeclaredConstructor(type.getDeclaringClass());
buildType = () -> {
try{
return cons.newInstance(this);
}catch(Exception e){
throw new RuntimeException(e);
}
};
}

current = current.getSuperclass();
}",0,1,0,0,0,0,0,0,0,9,4,15,0,0,1,1,8,4,2,0,4,0.62,9,5
5759_12,12,12,"Class<?> type = Structs.find(current.getDeclaredClasses(), t -> Building.class.isAssignableFrom(t) && !t.isInterface());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,2,0,4,0.68,10,5
5759_13,13,22,"if(type != null){
Constructor<? extends Building> cons = (Constructor<? extends Building>)type.getDeclaredConstructor(type.getDeclaringClass());
buildType = () -> {
try{
return cons.newInstance(this);
}catch(Exception e){
throw new RuntimeException(e);
}
};
}",1,0,0,0,0,0,0,0,0,6,3,10,0,1,0,1,8,4,2,0,3,0.58,11,6
5759_14,14,14,Constructor<? extends Building> cons = (Constructor<? extends Building>)type.getDeclaredConstructor(type.getDeclaringClass());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,4,2,0,3,0.63,12,7
5759_15,15,15,buildType = () -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,1,0.48,13,8
5759_16,16,20,"try{
return cons.newInstance(this);
}catch(Exception e){
throw new RuntimeException(e);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,8,4,2,0,0,0.34,14,9
5759_17,17,17,return cons.newInstance(this);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.3,15,10
5759_18,18,18,}catch(Exception e){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.31,16,11
5759_19,19,19,throw new RuntimeException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,4,2,0,0,0.32,17,12
5759_24,24,24,current = current.getSuperclass();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,4,2,0,0,0.4,22,14
5759_27,27,27,}catch(Throwable ignored){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.4,25,15
5759_30,30,32,"if(buildType == null){
buildType = Building::create;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,8,4,2,0,1,0.44,28,16
5759_31,31,31,buildType = Building::create;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,1,0.43,29,16
5760_1,1,1,    protected void initBuilding(){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.53,10,6
5760_2,2,28,"try{
Class<?> current = getClass();

if(current.isAnonymousClass()){
current = current.getSuperclass();
}

subclass = current;

while(buildType == null && Block.class.isAssignableFrom(current)){
Class<?> type = Structs.find(current.getDeclaredClasses(), t -> Building.class.isAssignableFrom(t) && !t.isInterface());
if(type != null){
Constructor<? extends Building> cons = (Constructor<? extends Building>)type.getDeclaredConstructor(type.getDeclaringClass());
buildType = () -> {
try{
return cons.newInstance(this);
}catch(Exception e){
throw new RuntimeException(e);
}
};
}

current = current.getSuperclass();
}

}catch(Throwable ignored){
}",0,0,0,0,1,0,0,0,0,15,5,27,0,0,0,1,4,3,0,0,3,0.63,0,0
5760_3,3,3,Class<?> current = getClass();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.54,8,4
5760_5,5,7,"if(current.isAnonymousClass()){
current = current.getSuperclass();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,1,0.45,4,2
5760_6,6,6,current = current.getSuperclass();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.33,5,2
5760_9,9,9,subclass = current;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.17,2,1
5760_11,11,25,"while(buildType == null && Block.class.isAssignableFrom(current)){
Class<?> type = Structs.find(current.getDeclaredClasses(), t -> Building.class.isAssignableFrom(t) && !t.isInterface());
if(type != null){
Constructor<? extends Building> cons = (Constructor<? extends Building>)type.getDeclaredConstructor(type.getDeclaringClass());
buildType = () -> {
try{
return cons.newInstance(this);
}catch(Exception e){
throw new RuntimeException(e);
}
};
}

current = current.getSuperclass();
}",0,1,0,0,0,0,0,0,0,9,4,15,0,0,1,1,4,3,0,0,2,0.62,0,0
5760_12,12,12,"Class<?> type = Structs.find(current.getDeclaredClasses(), t -> Building.class.isAssignableFrom(t) && !t.isInterface());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,2,0.67,0,0
5760_13,13,22,"if(type != null){
Constructor<? extends Building> cons = (Constructor<? extends Building>)type.getDeclaredConstructor(type.getDeclaringClass());
buildType = () -> {
try{
return cons.newInstance(this);
}catch(Exception e){
throw new RuntimeException(e);
}
};
}",1,0,0,0,0,0,0,0,0,6,3,10,0,1,0,1,4,3,0,0,2,0.6,1,0
5760_14,14,14,Constructor<? extends Building> cons = (Constructor<? extends Building>)type.getDeclaredConstructor(type.getDeclaringClass());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.64,2,1
5760_15,15,15,buildType = () -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.6,3,2
5760_16,16,20,"try{
return cons.newInstance(this);
}catch(Exception e){
throw new RuntimeException(e);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,4,3,0,0,0,0.29,4,3
5760_17,17,17,return cons.newInstance(this);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.28,5,4
5760_18,18,18,}catch(Exception e){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.28,6,5
5760_19,19,19,throw new RuntimeException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,0,0.28,7,6
5760_24,24,24,current = current.getSuperclass();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.33,12,8
5760_27,27,27,}catch(Throwable ignored){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.41,15,9
5760_30,30,32,"if(buildType == null){
buildType = Building::create;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,4,3,0,0,1,0.57,18,10
5760_31,31,31,buildType = Building::create;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.59,19,10
5761_1,1,3,"@Override
@CallSuper
public void init(){",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,5,4,0,0,0,0.36,0,0
5761_4,4,6,"if(health == -1){
health = size * size * 40;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,4,0,0,2,0.69,0,0
5761_5,5,5,health = size * size * 40;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.74,1,0
5761_8,8,8,"clipSize = Math.max(clipSize, size * tilesize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,4,0,0,1,0.57,4,2
5761_10,10,12,"if(expanded){
clipSize += tilesize * 10f;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,4,0,0,1,0.49,6,3
5761_11,11,11,clipSize += tilesize * 10f;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.52,7,3
5761_14,14,16,"if(emitLight){
clipSize = Math.max(clipSize, lightRadius * 2f);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,4,0,0,1,0.54,10,5
5761_15,15,15,"clipSize = Math.max(clipSize, lightRadius * 2f);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.56,11,5
5761_18,18,20,"if(group == BlockGroup.transportation || consumes.has(ConsumeType.item) || category == Category.distribution){
acceptsItems = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,4,0,0,0,0.38,14,7
5761_19,19,19,acceptsItems = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.32,15,7
5761_22,22,22,offset = ((size + 1) % 2) * tilesize / 2f;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,4,0,0,1,0.53,18,9
5761_24,24,29,"if(requirements.length > 0){
buildCost = 0f;
for(ItemStack stack : requirements){
buildCost += stack.amount * stack.item.cost;
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,1,1,5,4,0,0,0,0.4,20,10
5761_25,25,25,buildCost = 0f;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.36,21,10
5761_26,26,28,"for(ItemStack stack : requirements){
buildCost += stack.amount * stack.item.cost;
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,5,4,0,0,0,0.4,22,11
5761_27,27,27,buildCost += stack.amount * stack.item.cost;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.39,23,12
5761_31,31,31,buildCost *= buildCostMultiplier;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,4,0,0,0,0.35,27,14
5761_33,33,33,if(consumes.has(ConsumeType.power)) hasPower = true;,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,5,4,0,0,0,0.41,29,15
5761_34,34,34,if(consumes.has(ConsumeType.item)) hasItems = true;,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,0,0,0,0.37,30,15
5761_35,35,35,if(consumes.has(ConsumeType.liquid)) hasLiquids = true;,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,5,4,0,0,0,0.43,31,16
5761_37,37,37,setBars();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,4,0,0,0,0.36,33,18
5761_39,39,39,stats.useCategories = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,4,0,0,0,0.32,35,19
5761_41,41,41,consumes.init();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,4,0,0,0,0.45,37,20
5761_43,43,49,"if(!logicConfigurable){
configurations.each((key, val) -> {
if(UnlockableContent.class.isAssignableFrom(key)){
logicConfigurable = true;
}
});
}",1,0,0,0,0,0,0,0,0,3,3,7,0,0,1,1,5,4,0,0,0,0.39,39,21
5761_44,44,44,"configurations.each((key, val) -> {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.32,40,21
5761_45,45,47,"if(UnlockableContent.class.isAssignableFrom(key)){
logicConfigurable = true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,4,0,0,0,0.39,41,22
5761_46,46,46,logicConfigurable = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.37,42,23
5761_51,51,54,"if(!outputsPower && consumes.hasPower() && consumes.getPower().buffered){
Log.warn(""Consumer using buffered power: @. Disabling buffered power."", name);
consumes.getPower().buffered = false;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,5,4,0,0,0,0.41,47,25
5761_52,52,52,"Log.warn(""Consumer using buffered power: @. Disabling buffered power."", name);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.39,48,25
5761_53,53,53,consumes.getPower().buffered = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.4,49,26
5761_56,56,58,"if(buildVisibility == BuildVisibility.sandboxOnly){
hideDetails = false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,5,4,0,0,0,0.29,52,28
5761_57,57,57,hideDetails = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.26,53,28
5763_1,1,1,    protected void initBuilding(){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.32,22,14
5763_2,2,28,"try{
Class<?> current = getClass();

if(current.isAnonymousClass()){
current = current.getSuperclass();
}

subclass = current;

while(buildType == null && Block.class.isAssignableFrom(current)){
Class<?> type = Structs.find(current.getDeclaredClasses(), t -> Building.class.isAssignableFrom(t) && !t.isInterface());
if(type != null){
Constructor<? extends Building> cons = (Constructor<? extends Building>)type.getDeclaredConstructor(type.getDeclaringClass());
buildType = () -> {
try{
return cons.newInstance(this);
}catch(Exception e){
throw new RuntimeException(e);
}
};
}

current = current.getSuperclass();
}

}catch(Throwable ignored){
}",0,0,0,0,1,0,0,0,0,15,5,27,0,0,0,1,4,3,0,0,1,0.46,0,0
5763_3,3,3,Class<?> current = getClass();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.38,20,12
5763_5,5,7,"if(current.isAnonymousClass()){
current = current.getSuperclass();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,1,0.46,16,10
5763_6,6,6,current = current.getSuperclass();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.44,17,10
5763_9,9,9,subclass = current;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.1,14,9
5763_11,11,25,"while(buildType == null && Block.class.isAssignableFrom(current)){
Class<?> type = Structs.find(current.getDeclaredClasses(), t -> Building.class.isAssignableFrom(t) && !t.isInterface());
if(type != null){
Constructor<? extends Building> cons = (Constructor<? extends Building>)type.getDeclaredConstructor(type.getDeclaringClass());
buildType = () -> {
try{
return cons.newInstance(this);
}catch(Exception e){
throw new RuntimeException(e);
}
};
}

current = current.getSuperclass();
}",0,1,0,0,0,0,0,0,0,9,4,15,0,0,1,1,4,3,0,0,1,0.46,0,0
5763_12,12,12,"Class<?> type = Structs.find(current.getDeclaredClasses(), t -> Building.class.isAssignableFrom(t) && !t.isInterface());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.46,11,7
5763_13,13,22,"if(type != null){
Constructor<? extends Building> cons = (Constructor<? extends Building>)type.getDeclaredConstructor(type.getDeclaringClass());
buildType = () -> {
try{
return cons.newInstance(this);
}catch(Exception e){
throw new RuntimeException(e);
}
};
}",1,0,0,0,0,0,0,0,0,6,3,10,0,1,0,1,4,3,0,0,0,0.4,1,0
5763_14,14,14,Constructor<? extends Building> cons = (Constructor<? extends Building>)type.getDeclaredConstructor(type.getDeclaringClass());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.43,9,5
5763_15,15,15,buildType = () -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.26,8,4
5763_16,16,20,"try{
return cons.newInstance(this);
}catch(Exception e){
throw new RuntimeException(e);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,4,3,0,0,0,0.33,3,0
5763_17,17,17,return cons.newInstance(this);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.29,6,2
5763_18,18,18,}catch(Exception e){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,5,1
5763_19,19,19,throw new RuntimeException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,0,0.31,4,0
5763_24,24,24,current = current.getSuperclass();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.44,0,0
5763_27,27,27,}catch(Throwable ignored){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.45,3,1
5763_30,30,32,"if(buildType == null){
buildType = Building::create;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,4,3,0,0,0,0.28,6,2
5763_31,31,31,buildType = Building::create;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.26,7,2
5764_1,1,1,    protected void initBuilding(){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.2,29,17
5764_2,2,28,"try{
Class<?> current = getClass();

if(current.isAnonymousClass()){
current = current.getSuperclass();
}

subclass = current;

while(buildType == null && Block.class.isAssignableFrom(current)){
Class<?> type = Structs.find(current.getDeclaredClasses(), t -> Building.class.isAssignableFrom(t) && !t.isInterface());
if(type != null){
Constructor<? extends Building> cons = (Constructor<? extends Building>)type.getDeclaredConstructor(type.getDeclaringClass());
buildType = () -> {
try{
return cons.newInstance(this);
}catch(Exception e){
throw new RuntimeException(e);
}
};
}

current = current.getSuperclass();
}

}catch(Throwable ignored){
}",0,0,0,0,1,0,0,0,0,15,5,27,0,0,0,1,3,3,0,0,1,0.45,2,1
5764_3,3,3,Class<?> current = getClass();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.25,27,15
5764_5,5,7,"if(current.isAnonymousClass()){
current = current.getSuperclass();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,0,0.37,23,13
5764_6,6,6,current = current.getSuperclass();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.31,24,13
5764_9,9,9,subclass = current;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.22,21,12
5764_11,11,25,"while(buildType == null && Block.class.isAssignableFrom(current)){
Class<?> type = Structs.find(current.getDeclaredClasses(), t -> Building.class.isAssignableFrom(t) && !t.isInterface());
if(type != null){
Constructor<? extends Building> cons = (Constructor<? extends Building>)type.getDeclaredConstructor(type.getDeclaringClass());
buildType = () -> {
try{
return cons.newInstance(this);
}catch(Exception e){
throw new RuntimeException(e);
}
};
}

current = current.getSuperclass();
}",0,1,0,0,0,0,0,0,0,9,4,15,0,0,1,1,3,3,0,0,1,0.45,5,2
5764_12,12,12,"Class<?> type = Structs.find(current.getDeclaredClasses(), t -> Building.class.isAssignableFrom(t) && !t.isInterface());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.47,18,10
5764_13,13,22,"if(type != null){
Constructor<? extends Building> cons = (Constructor<? extends Building>)type.getDeclaredConstructor(type.getDeclaringClass());
buildType = () -> {
try{
return cons.newInstance(this);
}catch(Exception e){
throw new RuntimeException(e);
}
};
}",1,0,0,0,0,0,0,0,0,6,3,10,0,1,0,1,3,3,0,0,0,0.36,8,3
5764_14,14,14,Constructor<? extends Building> cons = (Constructor<? extends Building>)type.getDeclaredConstructor(type.getDeclaringClass());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.37,16,8
5764_15,15,15,buildType = () -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.29,15,7
5764_16,16,20,"try{
return cons.newInstance(this);
}catch(Exception e){
throw new RuntimeException(e);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,3,3,0,0,0,0.28,10,3
5764_17,17,17,return cons.newInstance(this);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.24,13,5
5764_18,18,18,}catch(Exception e){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.29,12,4
5764_19,19,19,throw new RuntimeException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,0,0.26,11,3
5764_24,24,24,current = current.getSuperclass();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.31,6,2
5764_27,27,27,}catch(Throwable ignored){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,3,1
5764_30,30,32,"if(buildType == null){
buildType = Building::create;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,3,0,0,0,0.31,0,0
5764_31,31,31,buildType = Building::create;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,0,0
1394_1,1,2,"@Override
public void updateTile(){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,6,1,0,0,0.36,2,1
1394_3,3,3,if(!state.isCampaign()) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,6,1,0,0,0.24,1,0
1394_5,5,17,"if((launchCounter += edelta()) >= launchTime && edelta() >= 0.001f && items.total() >= itemCapacity){
launchSound.at(x, y);
LaunchPayload entity = LaunchPayload.create();
items.each((item, amount) -> entity.stacks.add(new ItemStack(item, amount)));
entity.set(this);
entity.lifetime(120f);
entity.team(team);
entity.add();
Fx.launchPod.at(this);
items.clear();
Effect.shake(3f, 3f, this);
launchCounter = 0f;
}",1,0,0,0,0,0,0,0,0,11,1,13,0,0,1,0,8,6,1,0,2,0.59,0,0
1394_6,6,6,"launchSound.at(x, y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,1,0.58,1,0
1394_7,7,7,LaunchPayload entity = LaunchPayload.create();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,6,1,0,1,0.55,2,1
1394_8,8,8,"items.each((item, amount) -> entity.stacks.add(new ItemStack(item, amount)));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,1,0,0,0.36,3,2
1394_9,9,9,entity.set(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,1,0,0,0.27,4,3
1394_10,10,10,entity.lifetime(120f);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,1,0,0,0.34,5,4
1394_11,11,11,entity.team(team);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,1,0,0,0.28,6,5
1394_12,12,12,entity.add();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,1,0,0,0.32,7,6
1394_13,13,13,Fx.launchPod.at(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,1,0.67,8,7
1394_14,14,14,items.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.24,9,8
1394_15,15,15,"Effect.shake(3f, 3f, this);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.29,10,9
1394_16,16,16,launchCounter = 0f;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,2,0.7,11,10
1395_1,1,2,"        @Override
public void remove(){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,0,0,1,0.49,4,2
1395_3,3,3,if(!state.isCampaign()) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,0,0,0,0.21,3,1
1395_5,5,5,Sector destsec = state.rules.sector.info.getRealDestination();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,3,0,0,0,0.36,1,0
1395_7,7,22,"if(team() == state.rules.defaultTeam){
if(destsec != null && (destsec != state.rules.sector || net.client())){
ItemSeq dest = new ItemSeq();

for(ItemStack stack : stacks){
dest.add(stack);

state.rules.sector.info.handleItemExport(stack);
Events.fire(new LaunchItemEvent(stack));
}

if(!net.client()){
destsec.addItems(dest);
}
}
}",1,0,0,0,0,0,0,0,0,8,3,16,0,0,1,0,5,3,0,0,2,0.57,0,0
1395_8,8,21,"if(destsec != null && (destsec != state.rules.sector || net.client())){
ItemSeq dest = new ItemSeq();

for(ItemStack stack : stacks){
dest.add(stack);

state.rules.sector.info.handleItemExport(stack);
Events.fire(new LaunchItemEvent(stack));
}

if(!net.client()){
destsec.addItems(dest);
}
}",1,0,0,0,0,0,0,0,0,7,2,14,0,0,0,0,5,3,0,0,2,0.58,1,0
1395_9,9,9,ItemSeq dest = new ItemSeq();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,3,0,0,1,0.54,2,1
1395_11,11,16,"for(ItemStack stack : stacks){
dest.add(stack);

state.rules.sector.info.handleItemExport(stack);
Events.fire(new LaunchItemEvent(stack));
}",0,0,0,1,0,0,0,0,0,3,1,6,0,0,1,1,5,3,0,0,2,0.58,4,3
1395_12,12,12,dest.add(stack);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,0,0,0,0.37,5,3
1395_14,14,14,state.rules.sector.info.handleItemExport(stack);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,5,3,0,0,1,0.46,7,5
1395_15,15,15,Events.fire(new LaunchItemEvent(stack));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.56,8,5
1395_18,18,20,"if(!net.client()){
destsec.addItems(dest);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,5,3,0,0,1,0.5,11,7
1395_19,19,19,destsec.addItems(dest);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.53,12,7
1396_1,1,2,"        @Override
public void remove(){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,0,0.24,11,7
1396_3,3,3,if(!state.isCampaign()) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,0,0,0,0.23,10,6
1396_5,5,5,Sector destsec = state.rules.sector.info.getRealDestination();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,1,0,0,0,0.4,8,5
1396_7,7,22,"if(team() == state.rules.defaultTeam){
if(destsec != null && (destsec != state.rules.sector || net.client())){
ItemSeq dest = new ItemSeq();

for(ItemStack stack : stacks){
dest.add(stack);

state.rules.sector.info.handleItemExport(stack);
Events.fire(new LaunchItemEvent(stack));
}

if(!net.client()){
destsec.addItems(dest);
}
}
}",1,0,0,0,0,0,0,0,0,8,3,16,0,0,1,0,2,1,0,0,1,0.49,0,0
1396_8,8,21,"if(destsec != null && (destsec != state.rules.sector || net.client())){
ItemSeq dest = new ItemSeq();

for(ItemStack stack : stacks){
dest.add(stack);

state.rules.sector.info.handleItemExport(stack);
Events.fire(new LaunchItemEvent(stack));
}

if(!net.client()){
destsec.addItems(dest);
}
}",1,0,0,0,0,0,0,0,0,7,2,14,0,0,0,0,2,1,0,0,1,0.49,0,0
1396_9,9,9,ItemSeq dest = new ItemSeq();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,1,0,0,0,0.27,4,2
1396_11,11,16,"for(ItemStack stack : stacks){
dest.add(stack);

state.rules.sector.info.handleItemExport(stack);
Events.fire(new LaunchItemEvent(stack));
}",0,0,0,1,0,0,0,0,0,3,1,6,0,0,1,1,2,1,0,0,1,0.5,0,0
1396_12,12,12,dest.add(stack);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,0,0,0,0.32,1,0
1396_14,14,14,state.rules.sector.info.handleItemExport(stack);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,1,0,0,1,0.55,0,0
1396_15,15,15,Events.fire(new LaunchItemEvent(stack));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.28,1,0
1396_18,18,20,"if(!net.client()){
destsec.addItems(dest);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,2,1,0,0,0,0.31,4,2
1396_19,19,19,destsec.addItems(dest);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.33,5,2
5765_1,1,2,"@Override
public void init(){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,2,0,0,0.27,2,1
5765_3,3,3,super.init();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,2,0,0,0.37,1,0
5765_5,5,5,"clipSize = Math.max(clipSize, size * tilesize * 2.1f);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,2,0,2,0.78,0,0
5766_1,1,2,"@Override
public void onProximityUpdate(){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,2,1,0,0,0.26,3,2
5766_3,3,3,super.onProximityUpdate();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,1,0,0,0.3,2,1
5766_5,5,5,"Building accept = nearby(Geometry.d4(rotation).x * (size/2+1), Geometry.d4(rotation).y * (size/2+1));",0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,5,2,1,0,1,0.55,0,0
5766_6,6,17,"if(accept != null && (
(accept.block.size == size && tileX() + Geometry.d4(rotation).x * size == accept.tileX() && tileY() + Geometry.d4(rotation).y * size == accept.tileY()) ||

(accept.block.size > size &&
(rotation % 2 == 0 ?
Math.abs(accept.y - y) <= (accept.block.size * tilesize - size * tilesize)/2f :
Math.abs(accept.x - x) <= (accept.block.size * tilesize - size * tilesize)/2f
)))){
next = accept;
}else{
next = null;
}",1,0,0,0,0,0,0,0,0,5,1,12,1,1,0,1,5,2,1,0,3,0.74,0,0
5766_7,7,7,(accept.block.size == size && tileX() + Geometry.d4(rotation).x * size == accept.tileX() && tileY() + Geometry.d4(rotation).y * size == accept.tileY()) ||,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,1,0,2,0.66,1,0
5766_9,9,13,"(accept.block.size > size &&
(rotation % 2 == 0 ?
Math.abs(accept.y - y) <= (accept.block.size * tilesize - size * tilesize)/2f :
Math.abs(accept.x - x) <= (accept.block.size * tilesize - size * tilesize)/2f
)))){",0,0,0,0,0,0,0,0,0,0,0,5,0,0,1,0,5,2,1,0,2,0.7,3,2
5766_14,14,14,next = accept;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.54,8,3
5766_15,15,15,}else{,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.2,9,3
5766_16,16,16,next = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.47,10,4
5766_19,19,19,int ntrns = 1 + size/2;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,1,0.51,13,6
5766_20,20,20,"Tile next = tile.nearby(Geometry.d4(rotation).x * ntrns, Geometry.d4(rotation).y * ntrns);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,1,0.58,14,6
5766_21,21,21,blocked = (next != null && next.solid() && !(next.block().outputsPayload || next.block().acceptsPayload)) || (this.next != null && this.next.payloadCheck(rotation));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,2,0.69,15,7
5767_1,1,2,"@Override
public void updateTile(){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,1,0.51,24,17
5767_3,3,3,if(!enabled) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.24,23,16
5767_5,5,7,"if(item != null){
item.update(false);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,1,0.55,19,14
5767_6,6,6,item.update(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.56,20,14
5767_9,9,9,lastInterp = curInterp;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.36,17,13
5767_10,10,10,curInterp = fract();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.38,16,12
5767_11,11,11,if(lastInterp > curInterp) lastInterp = 0f;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.33,15,11
5767_12,12,12,progress = time() % moveTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.29,14,10
5767_14,14,14,updatePayload();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,1,0.54,12,9
5767_15,15,17,"if(item != null && next == null){
PayloadBlock.pushOutput(item, progress / moveTime);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,2,0,0,0,0.31,9,7
5767_16,16,16,"PayloadBlock.pushOutput(item, progress / moveTime);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,10,7
5767_19,19,19,int curStep = curStep();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.29,7,6
5767_20,20,45,"if(curStep > step){
boolean valid = step != -1;
step = curStep;
boolean had = item != null;

if(valid && stepAccepted != curStep && item != null){
if(next != null){
next.updateTile();

if(next.acceptPayload(this, item)){
next.handlePayload(this, item);
item = null;
moved();
}
}else if(!blocked){
if(item.dump()){
item = null;
moved();
}
}
}

if(had && item != null){
moveFailed();
}
}",1,0,0,0,0,0,0,0,0,16,4,26,0,1,0,0,3,2,0,0,1,0.47,0,0
5767_21,21,21,boolean valid = step != -1;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,5,4
5767_22,22,22,step = curStep;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.29,4,3
5767_23,23,23,boolean had = item != null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.34,3,2
5767_25,25,40,"if(valid && stepAccepted != curStep && item != null){
if(next != null){
next.updateTile();

if(next.acceptPayload(this, item)){
next.handlePayload(this, item);
item = null;
moved();
}
}else if(!blocked){
if(item.dump()){
item = null;
moved();
}
}
}",1,0,0,0,0,0,0,0,0,10,3,16,0,0,1,1,3,2,0,0,1,0.47,0,0
5767_26,26,39,"if(next != null){
next.updateTile();

if(next.acceptPayload(this, item)){
next.handlePayload(this, item);
item = null;
moved();
}
}else if(!blocked){
if(item.dump()){
item = null;
moved();
}
}",1,0,0,0,0,0,0,0,0,9,2,14,0,0,0,0,3,2,0,0,1,0.47,0,0
5767_27,27,27,next.updateTile();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,1,0.52,0,0
5767_29,29,33,"if(next.acceptPayload(this, item)){
next.handlePayload(this, item);
item = null;
moved();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,3,2,0,0,0,0.3,2,1
5767_30,30,30,"next.handlePayload(this, item);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.25,3,1
5767_31,31,31,item = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.29,4,2
5767_32,32,32,moved();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.23,5,3
5767_34,34,34,}else if(!blocked){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.24,7,5
5767_35,35,38,"if(item.dump()){
item = null;
moved();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,3,2,0,0,0,0.32,8,5
5767_36,36,36,item = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.29,9,6
5767_37,37,37,moved();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.23,10,7
5767_42,42,44,"if(had && item != null){
moveFailed();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,2,0,0,0,0.33,15,9
5767_43,43,43,moveFailed();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,16,9
5768_1,1,2,"@Override
public void updateTile(){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.31,32,23
5768_3,3,3,if(!enabled) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.33,31,22
5768_5,5,7,"if(item != null){
item.update(false);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,1,0.6,27,20
5768_6,6,6,item.update(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.52,28,20
5768_9,9,9,lastInterp = curInterp;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.49,25,19
5768_10,10,10,curInterp = fract();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.59,24,18
5768_11,11,11,if(lastInterp > curInterp) lastInterp = 0f;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.42,23,17
5768_12,12,12,progress = time() % moveTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.24,22,16
5768_14,14,14,updatePayload();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.23,20,15
5768_15,15,17,"if(item != null && next == null){
PayloadBlock.pushOutput(item, progress / moveTime);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,2,0,0,1,0.53,17,13
5768_16,16,16,"PayloadBlock.pushOutput(item, progress / moveTime);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.48,18,13
5768_19,19,19,int curStep = curStep();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.51,15,12
5768_20,20,45,"if(curStep > step){
boolean valid = step != -1;
step = curStep;
boolean had = item != null;

if(valid && stepAccepted != curStep && item != null){
if(next != null){
next.updateTile();

if(next.acceptPayload(this, item)){
next.handlePayload(this, item);
item = null;
moved();
}
}else if(!blocked){
if(item.dump()){
item = null;
moved();
}
}
}

if(had && item != null){
moveFailed();
}
}",1,0,0,0,0,0,0,0,0,16,4,26,0,1,0,0,3,2,0,0,2,0.66,0,0
5768_21,21,21,boolean valid = step != -1;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.36,13,10
5768_22,22,22,step = curStep;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.51,12,9
5768_23,23,23,boolean had = item != null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,1,0.6,11,8
5768_25,25,40,"if(valid && stepAccepted != curStep && item != null){
if(next != null){
next.updateTile();

if(next.acceptPayload(this, item)){
next.handlePayload(this, item);
item = null;
moved();
}
}else if(!blocked){
if(item.dump()){
item = null;
moved();
}
}
}",1,0,0,0,0,0,0,0,0,10,3,16,0,0,1,1,3,2,0,0,2,0.66,0,0
5768_26,26,39,"if(next != null){
next.updateTile();

if(next.acceptPayload(this, item)){
next.handlePayload(this, item);
item = null;
moved();
}
}else if(!blocked){
if(item.dump()){
item = null;
moved();
}
}",1,0,0,0,0,0,0,0,0,9,2,14,0,0,0,0,3,2,0,0,2,0.66,0,0
5768_27,27,27,next.updateTile();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.2,7,5
5768_29,29,33,"if(next.acceptPayload(this, item)){
next.handlePayload(this, item);
item = null;
moved();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,3,2,0,0,1,0.56,1,1
5768_30,30,30,"next.handlePayload(this, item);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.53,4,3
5768_31,31,31,item = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.65,3,2
5768_32,32,32,moved();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.19,2,1
5768_34,34,34,}else if(!blocked){,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,0,0
5768_35,35,38,"if(item.dump()){
item = null;
moved();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,3,2,0,0,2,0.78,0,0
5768_36,36,36,item = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.65,1,0
5768_37,37,37,moved();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.19,2,1
5768_42,42,44,"if(had && item != null){
moveFailed();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,2,0,0,1,0.6,7,3
5768_43,43,43,moveFailed();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.36,8,3
5769_1,1,2,"@Override
public void unitOn(Unit unit){",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,0,0,1,0.54,0,0
5769_3,3,3,float delta = (curInterp - lastInterp) * size * tilesize;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.6,0,0
5769_4,4,4,"Tmp.v1.trns(rotdeg(), delta * moveForce).scl(1f / Math.max(unit.mass(), 201f));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.65,1,0
5769_5,5,5,"unit.move(Tmp.v1.x, Tmp.v1.y);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,2,0.64,2,1
617_1,1,2,"@Override
protected String getSqlType(final SinkRecordField field) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,1,0.41,8,4
617_3,3,12,"if (field.schemaName() != null) {
switch (field.schemaName()) {
case Decimal.LOGICAL_NAME:
case Date.LOGICAL_NAME:
case Time.LOGICAL_NAME:
case Timestamp.LOGICAL_NAME:
return ""NUMERIC"";
default:
}
}",1,0,0,0,0,0,0,0,0,3,2,10,0,0,0,0,3,2,0,0,0,0.37,0,0
617_4,4,4,switch (field.schemaName()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.21,6,2
617_5,5,9,"case Decimal.LOGICAL_NAME:
case Date.LOGICAL_NAME:
case Time.LOGICAL_NAME:
case Timestamp.LOGICAL_NAME:
return ""NUMERIC"";",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,3,2,0,0,0,0.38,1,1
617_10,10,11,"default:
}",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,-1,0.26,0,0
617_13,13,13,switch (field.schemaType()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.44,2,0
617_14,14,19,"case BOOLEAN:
case INT8:
case INT16:
case INT32:
case INT64:
return ""INTEGER"";",0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,3,2,0,0,0,0.22,3,0
617_20,20,22,"case FLOAT32:
case FLOAT64:
return ""REAL"";",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,3,2,0,0,0,0.15,9,2
617_23,23,24,"case STRING:
return ""TEXT"";",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.17,12,3
617_25,25,26,"case BYTES:
return ""BLOB"";",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.17,14,4
617_27,27,28,"default:
return super.getSqlType(field);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,1,0.45,16,5
2484_1,1,5,"    public boolean createOrAmendIfNecessary(
final JdbcSinkConfig config,
final Connection connection,
final TableId tableId,
final FieldsMetadata fieldsMetadata",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,5,3,0,0,2,0.52,2,2
2484_6,6,6,throws SQLException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,0,0,0,0.39,1,1
2484_7,7,21,"if (tableDefns.get(connection, tableId) == null) {
try {
create(config, connection, tableId, fieldsMetadata);
} catch (final SQLException sqle) {
log.warn(""Create failed, will attempt amend if table already exists"", sqle);
try {
final TableDefinition newDefn = tableDefns.refresh(connection, tableId);
if (newDefn == null) {
throw sqle;
}
} catch (final SQLException e) {
throw sqle;
}
}
}",1,0,0,0,0,0,0,0,0,10,4,15,0,0,0,0,5,3,0,0,4,0.72,0,0
2484_8,8,20,"try {
create(config, connection, tableId, fieldsMetadata);
} catch (final SQLException sqle) {
log.warn(""Create failed, will attempt amend if table already exists"", sqle);
try {
final TableDefinition newDefn = tableDefns.refresh(connection, tableId);
if (newDefn == null) {
throw sqle;
}
} catch (final SQLException e) {
throw sqle;
}
}",0,0,0,0,1,0,0,0,0,9,3,13,0,0,0,0,5,3,0,0,4,0.71,0,0
2484_9,9,9,"create(config, connection, tableId, fieldsMetadata);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,2,0.57,1,0
2484_10,10,10,} catch (final SQLException sqle) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.37,2,1
2484_11,11,11,"log.warn(""Create failed, will attempt amend if table already exists"", sqle);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,4,0.81,3,2
2484_12,12,19,"try {
final TableDefinition newDefn = tableDefns.refresh(connection, tableId);
if (newDefn == null) {
throw sqle;
}
} catch (final SQLException e) {
throw sqle;
}",0,0,0,0,1,0,0,0,0,5,2,8,0,0,0,0,5,3,0,0,1,0.52,4,3
2484_13,13,13,"final TableDefinition newDefn = tableDefns.refresh(connection, tableId);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.56,5,4
2484_14,14,16,"if (newDefn == null) {
throw sqle;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,3,0,0,0,0.42,6,5
2484_15,15,15,throw sqle;,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,0,0,0,0.35,7,6
2484_17,17,17,} catch (final SQLException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.36,9,8
2484_18,18,18,throw sqle;,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,3,0,0,0,0.35,10,8
2484_22,22,22,"return amendIfNecessary(config, connection, tableId, fieldsMetadata, config.maxRetries);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.46,14,10
2485_1,1,3,"Set<SinkRecordField> missingFields(
final Collection<SinkRecordField> fields,
final Set<String> dbColumnNames",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,6,3,1,0,2,0.53,13,7
2485_5,5,5,final Set<SinkRecordField> missingFields = new HashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,2,0.55,11,6
2485_6,6,11,"for (final SinkRecordField field : fields) {
if (!dbColumnNames.contains(field.name())) {
log.debug(""Found missing field: {}"", field);
missingFields.add(field);
}
}",0,0,0,1,0,0,0,0,0,3,3,6,0,1,0,1,6,3,1,0,2,0.62,5,2
2485_7,7,10,"if (!dbColumnNames.contains(field.name())) {
log.debug(""Found missing field: {}"", field);
missingFields.add(field);
}",1,0,0,0,0,0,0,0,0,2,2,4,0,0,0,0,6,3,1,0,2,0.61,6,2
2485_8,8,8,"log.debug(""Found missing field: {}"", field);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,2,0.65,8,3
2485_9,9,9,missingFields.add(field);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,2,0.67,7,2
2485_13,13,15,"if (missingFields.isEmpty()) {
return missingFields;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,3,1,0,2,0.67,1,0
2485_14,14,14,return missingFields;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,1,0,2,0.67,2,0
2485_17,17,17,final Set<String> columnNamesLowerCase = new HashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,1,0,1,0.42,0,0
2485_18,18,20,"for (final String columnName : dbColumnNames) {
columnNamesLowerCase.add(columnName.toLowerCase());
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,6,3,1,0,1,0.41,1,0
2485_19,19,19,columnNamesLowerCase.add(columnName.toLowerCase());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.43,2,1
2485_22,22,27,"if (columnNamesLowerCase.size() != dbColumnNames.size()) {
log.warn(
""Table has column names that differ only by case. Original columns={}"",
dbColumnNames
);
}",1,0,0,0,0,0,0,0,0,1,2,6,0,0,1,1,6,3,1,0,1,0.44,5,3
2485_23,23,26,"log.warn(
""Table has column names that differ only by case. Original columns={}"",
dbColumnNames
);",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,6,3,1,0,1,0.44,6,3
2485_29,29,29,final Set<SinkRecordField> missingFieldsIgnoreCase = new HashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,1,0,4,0.71,12,5
2485_30,30,34,"for (final SinkRecordField missing : missingFields) {
if (!columnNamesLowerCase.contains(missing.name().toLowerCase())) {
missingFieldsIgnoreCase.add(missing);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,1,0,1,6,3,1,0,4,0.75,13,5
2485_31,31,33,"if (!columnNamesLowerCase.contains(missing.name().toLowerCase())) {
missingFieldsIgnoreCase.add(missing);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,3,1,0,4,0.73,14,6
2485_32,32,32,missingFieldsIgnoreCase.add(missing);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,4,0.83,15,7
2485_36,36,42,"if (missingFieldsIgnoreCase.size() > 0) {
log.info(
""Unable to find fields {} among column names {}"",
missingFieldsIgnoreCase,
dbColumnNames
);
}",1,0,0,0,0,0,0,0,0,1,2,7,0,0,1,1,6,3,1,0,4,0.71,19,9
2485_37,37,41,"log.info(
""Unable to find fields {} among column names {}"",
missingFieldsIgnoreCase,
dbColumnNames
);",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,6,3,1,0,4,0.69,20,9
2485_44,44,44,return missingFieldsIgnoreCase;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,1,0,4,0.83,27,11
2322_1,1,2,"@Override
protected String getSqlType(final SinkRecordField field) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,25,14,3,0,1,0.36,34,19
2322_3,3,15,"if (field.schemaName() != null) {
switch (field.schemaName()) {
case Decimal.LOGICAL_NAME:
return ""decimal(38,"" + field.schemaParameters().get(Decimal.SCALE_FIELD) + "")"";
case Date.LOGICAL_NAME:
return ""date"";
case Time.LOGICAL_NAME:
return ""time"";
case Timestamp.LOGICAL_NAME:
return ""datetime"";
default:
}
}",1,0,0,0,0,0,0,0,0,6,2,13,0,0,0,0,25,14,3,0,0,0.45,21,12
2322_4,4,4,switch (field.schemaName()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,25,14,3,0,0,0.36,32,17
2322_5,5,6,"case Decimal.LOGICAL_NAME:
return ""decimal(38,"" + field.schemaParameters().get(Decimal.SCALE_FIELD) + "")"";",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,25,14,3,0,0,0.44,30,16
2322_7,7,8,"case Date.LOGICAL_NAME:
return ""date"";",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,25,14,3,0,0,0.38,28,15
2322_9,9,10,"case Time.LOGICAL_NAME:
return ""time"";",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,25,14,3,0,0,0.37,26,14
2322_11,11,12,"case Timestamp.LOGICAL_NAME:
return ""datetime"";",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,25,14,3,0,0,0.35,24,13
2322_13,13,14,"default:
}",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,25,14,3,0,0,0.34,22,12
2322_16,16,16,switch (field.schemaType()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,25,14,3,0,1,0.45,20,11
2322_17,17,18,"case INT8:
return ""smallint"";",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,25,14,3,0,0,0.32,18,10
2322_19,19,20,"case INT16:
return ""smallint"";",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,25,14,3,0,0,0.32,16,9
2322_21,21,22,"case INT32:
return ""int"";",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,25,14,3,0,0,0.38,14,8
2322_23,23,24,"case INT64:
return ""bigint"";",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,25,14,3,0,0,0.32,12,7
2322_25,25,26,"case FLOAT32:
return ""real"";",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,25,14,3,0,0,0.32,10,6
2322_27,27,28,"case FLOAT64:
return ""float"";",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,25,14,3,0,0,0.42,8,5
2322_29,29,30,"case BOOLEAN:
if (field.isOptional()) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,25,14,3,0,0,0.34,6,4
2322_31,31,31,"return ""tinyint"";",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,25,14,3,0,0,0.36,5,3
2322_32,32,32,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,25,14,3,0,0,0.26,4,2
2322_33,33,33,"return ""bit"";",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,25,14,3,0,0,0.38,3,1
2322_35,35,36,"case STRING:
if (field.isPrimaryKey()) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,25,14,3,0,0,0.35,0,0
2322_37,37,37,"return ""varchar(512)"";",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,25,14,3,0,0,0.41,0,0
2322_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,25,14,3,0,0,0.26,1,0
2322_39,39,39,"return ""text"";",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,25,14,3,0,1,0.55,2,1
2322_41,41,42,"case BYTES:
return ""image"";",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,25,14,3,0,1,0.47,4,3
2322_43,43,44,"default:
return super.getSqlType(field);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,25,14,3,0,1,0.43,6,4
1111_1,1,2,"@Override
public List<SourceRecord> poll() throws InterruptedException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,0,0,0,0.42,6,4
1111_3,3,3,"log.trace(""Polling for new data"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,0,0,0,0.44,5,3
1111_5,5,52,"while (running.get()) {
final TableQuerier querier = tableQueue.peek();

if (!querier.querying()) {
final long nextUpdate = querier.getLastUpdate()
+ config.getInt(JdbcSourceTaskConfig.POLL_INTERVAL_MS_CONFIG);
final long untilNext = nextUpdate - time.milliseconds();
final long sleepMs = Math.min(untilNext, 100);
if (sleepMs > 0) {
log.trace(""Waiting {} ms to poll {} next ({} ms total left to wait)"",
sleepMs, querier.toString(), untilNext);
time.sleep(sleepMs);
continue;
}
}

final List<SourceRecord> results = new ArrayList<>();
try {
log.debug(""Checking for next block of results from {}"", querier.toString());
querier.maybeStartQuery(cachedConnectionProvider.getConnection());

final int batchMaxRows = config.getInt(JdbcSourceTaskConfig.BATCH_MAX_ROWS_CONFIG);
boolean hadNext = true;
while (results.size() < batchMaxRows && (hadNext = querier.next())) {
results.add(querier.extractRecord());
}

if (!hadNext) {
resetAndRequeueHead(querier);
}

if (results.isEmpty()) {
log.trace(""No updates for {}"", querier.toString());
continue;
}

log.debug(""Returning {} records for {}"", results.size(), querier.toString());
return results;
} catch (final SQLException sqle) {
log.error(""Failed to run query for table {}: {}"", querier.toString(), sqle);
resetAndRequeueHead(querier);
return null;
} catch (final Throwable t) {
resetAndRequeueHead(querier);
closeResources();
throw t;
}
}",0,1,0,0,0,0,0,0,0,32,4,48,0,0,1,1,6,3,0,0,4,0.7,0,0
1111_6,6,6,final TableQuerier querier = tableQueue.peek();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,3,0,0,0,0.41,2,1
1111_8,8,19,"if (!querier.querying()) {
final long nextUpdate = querier.getLastUpdate()
+ config.getInt(JdbcSourceTaskConfig.POLL_INTERVAL_MS_CONFIG);
final long untilNext = nextUpdate - time.milliseconds();
final long sleepMs = Math.min(untilNext, 100);
if (sleepMs > 0) {
log.trace(""Waiting {} ms to poll {} next ({} ms total left to wait)"",
sleepMs, querier.toString(), untilNext);
time.sleep(sleepMs);
continue;
}
}",1,0,0,0,0,0,0,0,0,7,3,12,0,0,1,1,6,3,0,0,4,0.77,0,0
1111_9,9,10,"final long nextUpdate = querier.getLastUpdate()
+ config.getInt(JdbcSourceTaskConfig.POLL_INTERVAL_MS_CONFIG);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,6,3,0,0,2,0.65,0,0
1111_11,11,11,final long untilNext = nextUpdate - time.milliseconds();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,3,0.8,2,1
1111_12,12,12,"final long sleepMs = Math.min(untilNext, 100);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.6,3,1
1111_13,13,18,"if (sleepMs > 0) {
log.trace(""Waiting {} ms to poll {} next ({} ms total left to wait)"",
sleepMs, querier.toString(), untilNext);
time.sleep(sleepMs);
continue;
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,0,6,3,0,0,3,0.69,4,2
1111_14,14,15,"log.trace(""Waiting {} ms to poll {} next ({} ms total left to wait)"",
sleepMs, querier.toString(), untilNext);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,6,3,0,0,2,0.67,5,3
1111_16,16,16,time.sleep(sleepMs);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.67,7,5
1111_17,17,17,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.27,8,5
1111_21,21,21,final List<SourceRecord> results = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,0,0,0,0.24,12,7
1111_22,22,51,"try {
log.debug(""Checking for next block of results from {}"", querier.toString());
querier.maybeStartQuery(cachedConnectionProvider.getConnection());

final int batchMaxRows = config.getInt(JdbcSourceTaskConfig.BATCH_MAX_ROWS_CONFIG);
boolean hadNext = true;
while (results.size() < batchMaxRows && (hadNext = querier.next())) {
results.add(querier.extractRecord());
}

if (!hadNext) {
resetAndRequeueHead(querier);
}

if (results.isEmpty()) {
log.trace(""No updates for {}"", querier.toString());
continue;
}

log.debug(""Returning {} records for {}"", results.size(), querier.toString());
return results;
} catch (final SQLException sqle) {
log.error(""Failed to run query for table {}: {}"", querier.toString(), sqle);
resetAndRequeueHead(querier);
return null;
} catch (final Throwable t) {
resetAndRequeueHead(querier);
closeResources();
throw t;
}",0,0,0,0,1,0,0,0,0,21,3,30,0,1,0,0,6,3,0,0,2,0.58,13,7
1111_23,23,23,"log.debug(""Checking for next block of results from {}"", querier.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.42,14,8
1111_24,24,24,querier.maybeStartQuery(cachedConnectionProvider.getConnection());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,3,0,0,0,0.39,15,9
1111_26,26,26,final int batchMaxRows = config.getInt(JdbcSourceTaskConfig.BATCH_MAX_ROWS_CONFIG);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,3,0,0,0,0.33,17,11
1111_27,27,27,boolean hadNext = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.56,18,11
1111_28,28,30,"while (results.size() < batchMaxRows && (hadNext = querier.next())) {
results.add(querier.extractRecord());
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,1,6,3,0,0,1,0.44,19,12
1111_29,29,29,results.add(querier.extractRecord());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.23,20,13
1111_32,32,34,"if (!hadNext) {
resetAndRequeueHead(querier);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,3,0,0,1,0.52,23,15
1111_33,33,33,resetAndRequeueHead(querier);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.39,24,15
1111_36,36,39,"if (results.isEmpty()) {
log.trace(""No updates for {}"", querier.toString());
continue;
}",1,0,0,0,0,0,0,0,0,2,2,4,0,0,1,1,6,3,0,0,1,0.53,27,17
1111_37,37,37,"log.trace(""No updates for {}"", querier.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.57,28,17
1111_38,38,38,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.27,29,18
1111_41,41,41,"log.debug(""Returning {} records for {}"", results.size(), querier.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,3,0,0,0,0.31,32,20
1111_42,42,42,return results;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.29,33,20
1111_43,43,43,} catch (final SQLException sqle) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.29,34,21
1111_44,44,44,"log.error(""Failed to run query for table {}: {}"", querier.toString(), sqle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.35,35,22
1111_45,45,45,resetAndRequeueHead(querier);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.39,36,23
1111_46,46,46,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.31,37,24
1111_47,47,47,} catch (final Throwable t) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.28,38,25
1111_48,48,48,resetAndRequeueHead(querier);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.39,39,26
1111_49,49,49,closeResources();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.26,40,27
1111_50,50,50,throw t;,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,3,0,0,0,0.23,41,28
1111_54,54,54,final TableQuerier querier = tableQueue.peek();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,0,0,0,0.41,45,30
1111_55,55,57,"if (querier != null) {
resetAndRequeueHead(querier);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,0,0,0,0.39,46,30
1111_56,56,56,resetAndRequeueHead(querier);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.39,47,31
1111_58,58,58,closeResources();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.26,49,33
1111_59,59,59,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.31,50,33
1112_1,1,2,"@Override
public List<SourceRecord> poll() throws InterruptedException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,6,1,0,0,0.42,30,20
1112_3,3,3,"log.trace(""Polling for new data"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,10,6,1,0,0,0.4,29,19
1112_5,5,52,"while (running.get()) {
final TableQuerier querier = tableQueue.peek();

if (!querier.querying()) {
final long nextUpdate = querier.getLastUpdate()
+ config.getInt(JdbcSourceTaskConfig.POLL_INTERVAL_MS_CONFIG);
final long untilNext = nextUpdate - time.milliseconds();
final long sleepMs = Math.min(untilNext, 100);
if (sleepMs > 0) {
log.trace(""Waiting {} ms to poll {} next ({} ms total left to wait)"",
sleepMs, querier.toString(), untilNext);
time.sleep(sleepMs);
continue;
}
}

final List<SourceRecord> results = new ArrayList<>();
try {
log.debug(""Checking for next block of results from {}"", querier.toString());
querier.maybeStartQuery(cachedConnectionProvider.getConnection());

final int batchMaxRows = config.getInt(JdbcSourceTaskConfig.BATCH_MAX_ROWS_CONFIG);
boolean hadNext = true;
while (results.size() < batchMaxRows && (hadNext = querier.next())) {
results.add(querier.extractRecord());
}

if (!hadNext) {
resetAndRequeueHead(querier);
}

if (results.isEmpty()) {
log.trace(""No updates for {}"", querier.toString());
continue;
}

log.debug(""Returning {} records for {}"", results.size(), querier.toString());
return results;
} catch (final SQLException sqle) {
log.error(""Failed to run query for table {}: {}"", querier.toString(), sqle);
resetAndRequeueHead(querier);
return null;
} catch (final Throwable t) {
resetAndRequeueHead(querier);
closeResources();
throw t;
}
}",0,1,0,0,0,0,0,0,0,32,4,48,0,0,1,1,10,6,1,0,5,0.59,0,0
1112_6,6,6,final TableQuerier querier = tableQueue.peek();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,10,6,1,0,2,0.51,26,17
1112_8,8,19,"if (!querier.querying()) {
final long nextUpdate = querier.getLastUpdate()
+ config.getInt(JdbcSourceTaskConfig.POLL_INTERVAL_MS_CONFIG);
final long untilNext = nextUpdate - time.milliseconds();
final long sleepMs = Math.min(untilNext, 100);
if (sleepMs > 0) {
log.trace(""Waiting {} ms to poll {} next ({} ms total left to wait)"",
sleepMs, querier.toString(), untilNext);
time.sleep(sleepMs);
continue;
}
}",1,0,0,0,0,0,0,0,0,7,3,12,0,0,1,1,10,6,1,0,2,0.49,13,9
1112_9,9,10,"final long nextUpdate = querier.getLastUpdate()
+ config.getInt(JdbcSourceTaskConfig.POLL_INTERVAL_MS_CONFIG);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,10,6,1,0,1,0.4,22,15
1112_11,11,11,final long untilNext = nextUpdate - time.milliseconds();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,6,1,0,0,0.37,21,14
1112_12,12,12,"final long sleepMs = Math.min(untilNext, 100);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,6,1,0,0,0.44,20,13
1112_13,13,18,"if (sleepMs > 0) {
log.trace(""Waiting {} ms to poll {} next ({} ms total left to wait)"",
sleepMs, querier.toString(), untilNext);
time.sleep(sleepMs);
continue;
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,0,10,6,1,0,1,0.48,14,9
1112_14,14,15,"log.trace(""Waiting {} ms to poll {} next ({} ms total left to wait)"",
sleepMs, querier.toString(), untilNext);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,10,6,1,0,1,0.47,17,11
1112_16,16,16,time.sleep(sleepMs);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,6,1,0,0,0.47,16,10
1112_17,17,17,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.24,15,9
1112_21,21,21,final List<SourceRecord> results = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,10,6,1,0,1,0.35,11,8
1112_22,22,51,"try {
log.debug(""Checking for next block of results from {}"", querier.toString());
querier.maybeStartQuery(cachedConnectionProvider.getConnection());

final int batchMaxRows = config.getInt(JdbcSourceTaskConfig.BATCH_MAX_ROWS_CONFIG);
boolean hadNext = true;
while (results.size() < batchMaxRows && (hadNext = querier.next())) {
results.add(querier.extractRecord());
}

if (!hadNext) {
resetAndRequeueHead(querier);
}

if (results.isEmpty()) {
log.trace(""No updates for {}"", querier.toString());
continue;
}

log.debug(""Returning {} records for {}"", results.size(), querier.toString());
return results;
} catch (final SQLException sqle) {
log.error(""Failed to run query for table {}: {}"", querier.toString(), sqle);
resetAndRequeueHead(querier);
return null;
} catch (final Throwable t) {
resetAndRequeueHead(querier);
closeResources();
throw t;
}",0,0,0,0,1,0,0,0,0,21,3,30,0,1,0,0,10,6,1,0,4,0.56,0,0
1112_23,23,23,"log.debug(""Checking for next block of results from {}"", querier.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,6,1,0,2,0.43,9,6
1112_24,24,24,querier.maybeStartQuery(cachedConnectionProvider.getConnection());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,10,6,1,0,2,0.44,8,5
1112_26,26,26,final int batchMaxRows = config.getInt(JdbcSourceTaskConfig.BATCH_MAX_ROWS_CONFIG);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,10,6,1,0,0,0.39,6,4
1112_27,27,27,boolean hadNext = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,6,1,0,0,0.31,5,3
1112_28,28,30,"while (results.size() < batchMaxRows && (hadNext = querier.next())) {
results.add(querier.extractRecord());
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,1,10,6,1,0,2,0.48,2,1
1112_29,29,29,results.add(querier.extractRecord());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,2,0.42,3,1
1112_32,32,34,"if (!hadNext) {
resetAndRequeueHead(querier);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,10,6,1,0,2,0.49,0,0
1112_33,33,33,resetAndRequeueHead(querier);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,2,0.53,0,0
1112_36,36,39,"if (results.isEmpty()) {
log.trace(""No updates for {}"", querier.toString());
continue;
}",1,0,0,0,0,0,0,0,0,2,2,4,0,0,1,1,10,6,1,0,2,0.43,3,1
1112_37,37,37,"log.trace(""No updates for {}"", querier.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,1,0.35,4,1
1112_38,38,38,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.24,5,2
1112_41,41,41,"log.debug(""Returning {} records for {}"", results.size(), querier.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,10,6,1,0,2,0.43,8,4
1112_42,42,42,return results;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,10,6,1,0,1,0.47,9,4
1112_43,43,43,} catch (final SQLException sqle) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.31,10,5
1112_44,44,44,"log.error(""Failed to run query for table {}: {}"", querier.toString(), sqle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,6,1,0,2,0.44,11,6
1112_45,45,45,resetAndRequeueHead(querier);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,6,1,0,2,0.53,12,7
1112_46,46,46,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.26,13,8
1112_47,47,47,} catch (final Throwable t) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.33,14,9
1112_48,48,48,resetAndRequeueHead(querier);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,2,0.53,15,10
1112_49,49,49,closeResources();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.35,16,11
1112_50,50,50,throw t;,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,10,6,1,0,0,0.27,17,12
1112_54,54,54,final TableQuerier querier = tableQueue.peek();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,10,6,1,0,2,0.51,21,14
1112_55,55,57,"if (querier != null) {
resetAndRequeueHead(querier);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,10,6,1,0,2,0.5,22,14
1112_56,56,56,resetAndRequeueHead(querier);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,2,0.53,23,15
1112_58,58,58,closeResources();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.35,25,17
1112_59,59,59,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.26,26,17
1113_1,1,2,"@Override
public List<SourceRecord> poll() throws InterruptedException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,4,2,0,1,0.52,46,32
1113_3,3,3,"log.trace(""Polling for new data"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,4,2,0,0,0.44,45,31
1113_5,5,52,"while (running.get()) {
final TableQuerier querier = tableQueue.peek();

if (!querier.querying()) {
final long nextUpdate = querier.getLastUpdate()
+ config.getInt(JdbcSourceTaskConfig.POLL_INTERVAL_MS_CONFIG);
final long untilNext = nextUpdate - time.milliseconds();
final long sleepMs = Math.min(untilNext, 100);
if (sleepMs > 0) {
log.trace(""Waiting {} ms to poll {} next ({} ms total left to wait)"",
sleepMs, querier.toString(), untilNext);
time.sleep(sleepMs);
continue;
}
}

final List<SourceRecord> results = new ArrayList<>();
try {
log.debug(""Checking for next block of results from {}"", querier.toString());
querier.maybeStartQuery(cachedConnectionProvider.getConnection());

final int batchMaxRows = config.getInt(JdbcSourceTaskConfig.BATCH_MAX_ROWS_CONFIG);
boolean hadNext = true;
while (results.size() < batchMaxRows && (hadNext = querier.next())) {
results.add(querier.extractRecord());
}

if (!hadNext) {
resetAndRequeueHead(querier);
}

if (results.isEmpty()) {
log.trace(""No updates for {}"", querier.toString());
continue;
}

log.debug(""Returning {} records for {}"", results.size(), querier.toString());
return results;
} catch (final SQLException sqle) {
log.error(""Failed to run query for table {}: {}"", querier.toString(), sqle);
resetAndRequeueHead(querier);
return null;
} catch (final Throwable t) {
resetAndRequeueHead(querier);
closeResources();
throw t;
}
}",0,1,0,0,0,0,0,0,0,32,4,48,0,0,1,1,8,4,2,0,5,0.6,0,0
1113_6,6,6,final TableQuerier querier = tableQueue.peek();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,4,2,0,0,0.37,42,29
1113_8,8,19,"if (!querier.querying()) {
final long nextUpdate = querier.getLastUpdate()
+ config.getInt(JdbcSourceTaskConfig.POLL_INTERVAL_MS_CONFIG);
final long untilNext = nextUpdate - time.milliseconds();
final long sleepMs = Math.min(untilNext, 100);
if (sleepMs > 0) {
log.trace(""Waiting {} ms to poll {} next ({} ms total left to wait)"",
sleepMs, querier.toString(), untilNext);
time.sleep(sleepMs);
continue;
}
}",1,0,0,0,0,0,0,0,0,7,3,12,0,0,1,1,8,4,2,0,1,0.45,29,21
1113_9,9,10,"final long nextUpdate = querier.getLastUpdate()
+ config.getInt(JdbcSourceTaskConfig.POLL_INTERVAL_MS_CONFIG);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,8,4,2,0,1,0.42,38,27
1113_11,11,11,final long untilNext = nextUpdate - time.milliseconds();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,2,0,0,0.31,37,26
1113_12,12,12,"final long sleepMs = Math.min(untilNext, 100);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,2,0,0,0.37,36,25
1113_13,13,18,"if (sleepMs > 0) {
log.trace(""Waiting {} ms to poll {} next ({} ms total left to wait)"",
sleepMs, querier.toString(), untilNext);
time.sleep(sleepMs);
continue;
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,0,8,4,2,0,0,0.43,30,21
1113_14,14,15,"log.trace(""Waiting {} ms to poll {} next ({} ms total left to wait)"",
sleepMs, querier.toString(), untilNext);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,8,4,2,0,0,0.44,33,23
1113_16,16,16,time.sleep(sleepMs);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,2,0,0,0.35,32,22
1113_17,17,17,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.31,31,21
1113_21,21,21,final List<SourceRecord> results = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,4,2,0,0,0.35,27,20
1113_22,22,51,"try {
log.debug(""Checking for next block of results from {}"", querier.toString());
querier.maybeStartQuery(cachedConnectionProvider.getConnection());

final int batchMaxRows = config.getInt(JdbcSourceTaskConfig.BATCH_MAX_ROWS_CONFIG);
boolean hadNext = true;
while (results.size() < batchMaxRows && (hadNext = querier.next())) {
results.add(querier.extractRecord());
}

if (!hadNext) {
resetAndRequeueHead(querier);
}

if (results.isEmpty()) {
log.trace(""No updates for {}"", querier.toString());
continue;
}

log.debug(""Returning {} records for {}"", results.size(), querier.toString());
return results;
} catch (final SQLException sqle) {
log.error(""Failed to run query for table {}: {}"", querier.toString(), sqle);
resetAndRequeueHead(querier);
return null;
} catch (final Throwable t) {
resetAndRequeueHead(querier);
closeResources();
throw t;
}",0,0,0,0,1,0,0,0,0,21,3,30,0,1,0,0,8,4,2,0,5,0.6,0,0
1113_23,23,23,"log.debug(""Checking for next block of results from {}"", querier.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,2,0,0,0.37,25,18
1113_24,24,24,querier.maybeStartQuery(cachedConnectionProvider.getConnection());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,8,4,2,0,0,0.43,24,17
1113_26,26,26,final int batchMaxRows = config.getInt(JdbcSourceTaskConfig.BATCH_MAX_ROWS_CONFIG);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,8,4,2,0,1,0.4,22,16
1113_27,27,27,boolean hadNext = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,2,0,0,0.28,21,15
1113_28,28,30,"while (results.size() < batchMaxRows && (hadNext = querier.next())) {
results.add(querier.extractRecord());
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,1,8,4,2,0,0,0.35,18,13
1113_29,29,29,results.add(querier.extractRecord());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.35,19,13
1113_32,32,34,"if (!hadNext) {
resetAndRequeueHead(querier);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,8,4,2,0,0,0.31,14,11
1113_33,33,33,resetAndRequeueHead(querier);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.32,15,11
1113_36,36,39,"if (results.isEmpty()) {
log.trace(""No updates for {}"", querier.toString());
continue;
}",1,0,0,0,0,0,0,0,0,2,2,4,0,0,1,1,8,4,2,0,0,0.4,9,8
1113_37,37,37,"log.trace(""No updates for {}"", querier.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.42,11,9
1113_38,38,38,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.31,10,8
1113_41,41,41,"log.debug(""Returning {} records for {}"", results.size(), querier.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,8,4,2,0,0,0.37,7,7
1113_42,42,42,return results;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,8,4,2,0,0,0.27,6,6
1113_43,43,43,} catch (final SQLException sqle) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.5,5,5
1113_44,44,44,"log.error(""Failed to run query for table {}: {}"", querier.toString(), sqle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,2,0,1,0.48,4,4
1113_45,45,45,resetAndRequeueHead(querier);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,2,0,0,0.32,3,3
1113_46,46,46,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.27,2,2
1113_47,47,47,} catch (final Throwable t) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.49,1,1
1113_48,48,48,resetAndRequeueHead(querier);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.32,0,0
1113_49,49,49,closeResources();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,2,0.71,0,0
1113_50,50,50,throw t;,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,4,2,0,1,0.67,1,0
1113_54,54,54,final TableQuerier querier = tableQueue.peek();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,4,2,0,0,0.37,5,2
1113_55,55,57,"if (querier != null) {
resetAndRequeueHead(querier);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,8,4,2,0,0,0.33,6,2
1113_56,56,56,resetAndRequeueHead(querier);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.32,7,3
1113_58,58,58,closeResources();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,2,0.71,9,5
1113_59,59,59,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.27,10,5
2927_1,1,2,"@Override
public int compareTo(@NonNull Card other) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.44,1,0
2927_4,4,15,"if (this.mNumber != null && other.mNumber != null && this.mNumber.length() > 0 && other.mNumber.length() > 0) {

int this_num = this.getNumberInteger();
int other_num = other.getNumberInteger();
if (this_num > other_num) {
return 1;
} else if (this_num < other_num) {
return -1;
} else {
return Character.compare(this.getNumberChar(), other.getNumberChar());
}
}",1,0,0,0,0,0,0,0,0,8,2,12,0,0,1,1,3,3,0,0,1,0.6,0,0
2927_6,6,6,int this_num = this.getNumberInteger();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,3,3,0,0,1,0.62,2,1
2927_7,7,7,int other_num = other.getNumberInteger();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,3,0,0,1,0.62,3,1
2927_8,8,14,"if (this_num > other_num) {
return 1;
} else if (this_num < other_num) {
return -1;
} else {
return Character.compare(this.getNumberChar(), other.getNumberChar());
}",1,0,0,0,0,0,0,0,0,5,1,7,0,1,0,0,3,3,0,0,1,0.56,4,2
2927_9,9,9,return 1;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.19,5,3
2927_10,10,10,} else if (this_num < other_num) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.47,6,4
2927_11,11,11,return -1;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.19,7,5
2927_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.41,8,6
2927_13,13,13,"return Character.compare(this.getNumberChar(), other.getNumberChar());",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.61,9,7
2927_17,17,25,"if (this.mExpansion.equals(""BR"")) {
if (this.mType.contains(""Basic Land"") && !other.mType.contains(""Basic Land"")) {
return 1;
}
if (!this.mType.contains(""Basic Land"") && other.mType.contains(""Basic Land"")) {
return -1;
}
return this.mName.compareTo(other.mName);
}",1,0,0,0,0,0,0,0,0,5,2,9,0,0,1,1,3,3,0,0,0,0.43,13,9
2927_18,18,20,"if (this.mType.contains(""Basic Land"") && !other.mType.contains(""Basic Land"")) {
return 1;
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,3,3,0,0,0,0.41,14,9
2927_19,19,19,return 1;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.19,15,10
2927_21,21,23,"if (!this.mType.contains(""Basic Land"") && other.mType.contains(""Basic Land"")) {
return -1;
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,3,3,0,0,0,0.41,17,12
2927_22,22,22,return -1;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.19,18,12
2927_24,24,24,return this.mName.compareTo(other.mName);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.39,20,14
2927_27,27,31,"if (this.getNumFromColor() > other.getNumFromColor()) {
return 1;
} else if (this.getNumFromColor() < other.getNumFromColor()) {
return -1;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,3,3,0,0,0,0.42,23,15
2927_28,28,28,return 1;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.19,24,15
2927_29,29,29,} else if (this.getNumFromColor() < other.getNumFromColor()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.44,25,16
2927_30,30,30,return -1;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.19,26,17
2927_33,33,33,return this.mName.compareTo(other.mName);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.39,29,19
2929_1,1,2,"@Override
public int compareTo(@NonNull Card other) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.41,30,19
2929_4,4,15,"if (this.mNumber != null && other.mNumber != null && this.mNumber.length() > 0 && other.mNumber.length() > 0) {

int this_num = this.getNumberInteger();
int other_num = other.getNumberInteger();
if (this_num > other_num) {
return 1;
} else if (this_num < other_num) {
return -1;
} else {
return Character.compare(this.getNumberChar(), other.getNumberChar());
}
}",1,0,0,0,0,0,0,0,0,8,2,12,0,0,1,1,4,4,0,0,0,0.38,17,10
2929_6,6,6,int this_num = this.getNumberInteger();,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,4,4,0,0,0,0.37,26,17
2929_7,7,7,int other_num = other.getNumberInteger();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,4,0,0,0,0.37,25,16
2929_8,8,14,"if (this_num > other_num) {
return 1;
} else if (this_num < other_num) {
return -1;
} else {
return Character.compare(this.getNumberChar(), other.getNumberChar());
}",1,0,0,0,0,0,0,0,0,5,1,7,0,1,0,0,4,4,0,0,0,0.39,18,10
2929_9,9,9,return 1;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.23,23,14
2929_10,10,10,} else if (this_num < other_num) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.38,22,13
2929_11,11,11,return -1;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.23,21,12
2929_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.3,20,11
2929_13,13,13,"return Character.compare(this.getNumberChar(), other.getNumberChar());",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.38,19,10
2929_17,17,25,"if (this.mExpansion.equals(""BR"")) {
if (this.mType.contains(""Basic Land"") && !other.mType.contains(""Basic Land"")) {
return 1;
}
if (!this.mType.contains(""Basic Land"") && other.mType.contains(""Basic Land"")) {
return -1;
}
return this.mName.compareTo(other.mName);
}",1,0,0,0,0,0,0,0,0,5,2,9,0,0,1,1,4,4,0,0,1,0.47,7,4
2929_18,18,20,"if (this.mType.contains(""Basic Land"") && !other.mType.contains(""Basic Land"")) {
return 1;
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,4,4,0,0,0,0.34,12,7
2929_19,19,19,return 1;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.23,13,7
2929_21,21,23,"if (!this.mType.contains(""Basic Land"") && other.mType.contains(""Basic Land"")) {
return -1;
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,4,4,0,0,0,0.34,9,5
2929_22,22,22,return -1;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.23,10,5
2929_24,24,24,return this.mName.compareTo(other.mName);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.59,8,4
2929_27,27,31,"if (this.getNumFromColor() > other.getNumFromColor()) {
return 1;
} else if (this.getNumFromColor() < other.getNumFromColor()) {
return -1;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,4,0,0,1,0.53,1,0
2929_28,28,28,return 1;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.23,4,2
2929_29,29,29,} else if (this.getNumFromColor() < other.getNumFromColor()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.57,3,1
2929_30,30,30,return -1;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.23,2,0
2929_33,33,33,return this.mName.compareTo(other.mName);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.59,0,0
6059_1,1,2,"    @Override
public void onPause() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,1,0,0,0.36,10,8
6059_3,3,3,super.onPause();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.37,9,7
6059_4,4,4,StringBuilder playerData = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.28,8,6
6059_5,5,8,"for (LcPlayer player : mPlayers) {
player.onPause();
playerData.append(player.toString());
}",0,0,0,1,0,0,0,0,0,2,1,4,1,1,0,0,5,4,1,0,0,0.4,4,3
6059_6,6,6,player.onPause();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.31,6,4
6059_7,7,7,playerData.append(player.toString());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.28,5,3
6059_9,9,9,"PreferenceAdapter.setPlayerData(getContext(), playerData.toString());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,4,1,0,0,0.35,3,2
6059_10,10,10,mGridLayout.removeAllViews();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.49,2,1
6059_11,11,11,mPlayers.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,4,1,0,0,0.29,1,0
6059_13,13,13,requireActivity().getWindow().clearFlags(android.view.WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,1,0,1,0.43,0,0
6059_14,14,14,onUserActive();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.31,1,0
6060_1,1,2,"@Override
public boolean onOptionsItemSelected(MenuItem item) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,5,3,0,0,0.34,1,1
6060_3,3,26,"if (item.getItemId() == R.id.add_player) {
addPlayer();
setCommanderInfo(-1);
addPlayerView(mPlayers.get(mPlayers.size() - 1));
return true;
} else if (item.getItemId() == R.id.remove_player) {
showDialog(LifeCounterDialogFragment.DIALOG_REMOVE_PLAYER);
return true;
} else if (item.getItemId() == R.id.announce_life) {
announceLifeTotals();
return true;
} else if (item.getItemId() == R.id.edit_gatherings) {
GatheringsFragment rlFrag = new GatheringsFragment();
startNewFragment(rlFrag, null);
return true;
} else if (item.getItemId() == R.id.set_gathering) {
showDialog(LifeCounterDialogFragment.DIALOG_SET_GATHERING);
return true;
} else if (item.getItemId() == R.id.display_mode) {
showDialog(LifeCounterDialogFragment.DIALOG_CHANGE_DISPLAY);
return true;
} else {
return super.onOptionsItemSelected(item);
}",1,0,0,0,0,0,0,0,0,22,1,24,0,0,0,0,10,5,3,0,7,0.66,0,0
6060_4,4,4,addPlayer();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,3,0,2,0.7,0,0
6060_5,5,5,setCommanderInfo(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,3,0,3,0.66,1,0
6060_6,6,6,addPlayerView(mPlayers.get(mPlayers.size() - 1));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,3,0,3,0.65,2,1
6060_7,7,7,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,5,3,0,0,0.19,3,2
6060_8,8,8,} else if (item.getItemId() == R.id.remove_player) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,3,0,1,0.4,4,3
6060_9,9,9,showDialog(LifeCounterDialogFragment.DIALOG_REMOVE_PLAYER);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,3,0,1,0.46,5,4
6060_10,10,10,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,5,3,0,0,0.19,6,5
6060_11,11,11,} else if (item.getItemId() == R.id.announce_life) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,3,0,0,0.39,7,6
6060_12,12,12,announceLifeTotals();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,3,0,0,0.4,8,7
6060_13,13,13,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,5,3,0,0,0.19,9,8
6060_14,14,14,} else if (item.getItemId() == R.id.edit_gatherings) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,3,0,0,0.39,10,9
6060_15,15,15,GatheringsFragment rlFrag = new GatheringsFragment();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,5,3,0,1,0.52,11,10
6060_16,16,16,"startNewFragment(rlFrag, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,5,3,0,1,0.45,12,11
6060_17,17,17,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,5,3,0,0,0.19,13,12
6060_18,18,18,} else if (item.getItemId() == R.id.set_gathering) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,3,0,1,0.46,14,13
6060_19,19,19,showDialog(LifeCounterDialogFragment.DIALOG_SET_GATHERING);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,3,0,1,0.5,15,14
6060_20,20,20,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,5,3,0,0,0.19,16,15
6060_21,21,21,} else if (item.getItemId() == R.id.display_mode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,3,0,0,0.35,17,16
6060_22,22,22,showDialog(LifeCounterDialogFragment.DIALOG_CHANGE_DISPLAY);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,3,0,0,0.41,18,17
6060_23,23,23,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,5,3,0,0,0.19,19,18
6060_24,24,24,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,5,3,0,0,0.18,20,19
6060_25,25,25,return super.onOptionsItemSelected(item);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,5,3,0,0,0.33,21,20
6061_1,1,2,"@Override
public boolean onOptionsItemSelected(MenuItem item) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.38,6,6
6061_3,3,26,"if (item.getItemId() == R.id.add_player) {
addPlayer();
setCommanderInfo(-1);
addPlayerView(mPlayers.get(mPlayers.size() - 1));
return true;
} else if (item.getItemId() == R.id.remove_player) {
showDialog(LifeCounterDialogFragment.DIALOG_REMOVE_PLAYER);
return true;
} else if (item.getItemId() == R.id.announce_life) {
announceLifeTotals();
return true;
} else if (item.getItemId() == R.id.edit_gatherings) {
GatheringsFragment rlFrag = new GatheringsFragment();
startNewFragment(rlFrag, null);
return true;
} else if (item.getItemId() == R.id.set_gathering) {
showDialog(LifeCounterDialogFragment.DIALOG_SET_GATHERING);
return true;
} else if (item.getItemId() == R.id.display_mode) {
showDialog(LifeCounterDialogFragment.DIALOG_CHANGE_DISPLAY);
return true;
} else {
return super.onOptionsItemSelected(item);
}",1,0,0,0,0,0,0,0,0,22,1,24,0,0,0,0,4,4,0,0,4,0.72,0,0
6061_4,4,4,addPlayer();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.53,4,4
6061_5,5,5,setCommanderInfo(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.31,3,3
6061_6,6,6,addPlayerView(mPlayers.get(mPlayers.size() - 1));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.48,2,2
6061_7,7,7,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.24,1,1
6061_8,8,8,} else if (item.getItemId() == R.id.remove_player) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.61,0,0
6061_9,9,9,showDialog(LifeCounterDialogFragment.DIALOG_REMOVE_PLAYER);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,4,0.9,0,0
6061_10,10,10,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.24,1,0
6061_11,11,11,} else if (item.getItemId() == R.id.announce_life) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.37,2,1
6061_12,12,12,announceLifeTotals();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.34,3,2
6061_13,13,13,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.24,4,3
6061_14,14,14,} else if (item.getItemId() == R.id.edit_gatherings) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.37,5,4
6061_15,15,15,GatheringsFragment rlFrag = new GatheringsFragment();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.4,6,5
6061_16,16,16,"startNewFragment(rlFrag, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.38,7,6
6061_17,17,17,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.24,8,7
6061_18,18,18,} else if (item.getItemId() == R.id.set_gathering) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.36,9,8
6061_19,19,19,showDialog(LifeCounterDialogFragment.DIALOG_SET_GATHERING);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.66,10,9
6061_20,20,20,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.24,11,10
6061_21,21,21,} else if (item.getItemId() == R.id.display_mode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.38,12,11
6061_22,22,22,showDialog(LifeCounterDialogFragment.DIALOG_CHANGE_DISPLAY);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.67,13,12
6061_23,23,23,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.24,14,13
6061_24,24,24,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.25,15,14
6061_25,25,25,return super.onOptionsItemSelected(item);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.36,16,15
6062_1,1,2,"@Override
public boolean onOptionsItemSelected(MenuItem item) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,0,0,0,0.37,9,9
6062_3,3,26,"if (item.getItemId() == R.id.add_player) {
addPlayer();
setCommanderInfo(-1);
addPlayerView(mPlayers.get(mPlayers.size() - 1));
return true;
} else if (item.getItemId() == R.id.remove_player) {
showDialog(LifeCounterDialogFragment.DIALOG_REMOVE_PLAYER);
return true;
} else if (item.getItemId() == R.id.announce_life) {
announceLifeTotals();
return true;
} else if (item.getItemId() == R.id.edit_gatherings) {
GatheringsFragment rlFrag = new GatheringsFragment();
startNewFragment(rlFrag, null);
return true;
} else if (item.getItemId() == R.id.set_gathering) {
showDialog(LifeCounterDialogFragment.DIALOG_SET_GATHERING);
return true;
} else if (item.getItemId() == R.id.display_mode) {
showDialog(LifeCounterDialogFragment.DIALOG_CHANGE_DISPLAY);
return true;
} else {
return super.onOptionsItemSelected(item);
}",1,0,0,0,0,0,0,0,0,22,1,24,0,0,0,0,4,2,0,0,2,0.58,0,0
6062_4,4,4,addPlayer();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.28,7,7
6062_5,5,5,setCommanderInfo(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.35,6,6
6062_6,6,6,addPlayerView(mPlayers.get(mPlayers.size() - 1));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.38,5,5
6062_7,7,7,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.27,4,4
6062_8,8,8,} else if (item.getItemId() == R.id.remove_player) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.34,3,3
6062_9,9,9,showDialog(LifeCounterDialogFragment.DIALOG_REMOVE_PLAYER);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.53,2,2
6062_10,10,10,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.27,1,1
6062_11,11,11,} else if (item.getItemId() == R.id.announce_life) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.48,0,0
6062_12,12,12,announceLifeTotals();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.78,0,0
6062_13,13,13,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.27,1,0
6062_14,14,14,} else if (item.getItemId() == R.id.edit_gatherings) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.39,2,1
6062_15,15,15,GatheringsFragment rlFrag = new GatheringsFragment();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.42,3,2
6062_16,16,16,"startNewFragment(rlFrag, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.36,4,3
6062_17,17,17,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.27,5,4
6062_18,18,18,} else if (item.getItemId() == R.id.set_gathering) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.38,6,5
6062_19,19,19,showDialog(LifeCounterDialogFragment.DIALOG_SET_GATHERING);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.54,7,6
6062_20,20,20,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.27,8,7
6062_21,21,21,} else if (item.getItemId() == R.id.display_mode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.35,9,8
6062_22,22,22,showDialog(LifeCounterDialogFragment.DIALOG_CHANGE_DISPLAY);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.53,10,9
6062_23,23,23,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.27,11,10
6062_24,24,24,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.3,12,11
6062_25,25,25,return super.onOptionsItemSelected(item);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.34,13,12
6063_1,1,2,"@Override
public boolean onOptionsItemSelected(MenuItem item) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,1,0,0,0.36,12,12
6063_3,3,26,"if (item.getItemId() == R.id.add_player) {
addPlayer();
setCommanderInfo(-1);
addPlayerView(mPlayers.get(mPlayers.size() - 1));
return true;
} else if (item.getItemId() == R.id.remove_player) {
showDialog(LifeCounterDialogFragment.DIALOG_REMOVE_PLAYER);
return true;
} else if (item.getItemId() == R.id.announce_life) {
announceLifeTotals();
return true;
} else if (item.getItemId() == R.id.edit_gatherings) {
GatheringsFragment rlFrag = new GatheringsFragment();
startNewFragment(rlFrag, null);
return true;
} else if (item.getItemId() == R.id.set_gathering) {
showDialog(LifeCounterDialogFragment.DIALOG_SET_GATHERING);
return true;
} else if (item.getItemId() == R.id.display_mode) {
showDialog(LifeCounterDialogFragment.DIALOG_CHANGE_DISPLAY);
return true;
} else {
return super.onOptionsItemSelected(item);
}",1,0,0,0,0,0,0,0,0,22,1,24,0,0,0,0,5,4,1,0,4,0.71,0,0
6063_4,4,4,addPlayer();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.29,10,10
6063_5,5,5,setCommanderInfo(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.32,9,9
6063_6,6,6,addPlayerView(mPlayers.get(mPlayers.size() - 1));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.32,8,8
6063_7,7,7,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.2,7,7
6063_8,8,8,} else if (item.getItemId() == R.id.remove_player) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.34,6,6
6063_9,9,9,showDialog(LifeCounterDialogFragment.DIALOG_REMOVE_PLAYER);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.57,5,5
6063_10,10,10,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.2,4,4
6063_11,11,11,} else if (item.getItemId() == R.id.announce_life) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.44,3,3
6063_12,12,12,announceLifeTotals();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.46,2,2
6063_13,13,13,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.2,1,1
6063_14,14,14,} else if (item.getItemId() == R.id.edit_gatherings) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,2,0.61,0,0
6063_15,15,15,GatheringsFragment rlFrag = new GatheringsFragment();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,2,0.8,0,0
6063_16,16,16,"startNewFragment(rlFrag, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,2,0.65,1,0
6063_17,17,17,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.2,2,1
6063_18,18,18,} else if (item.getItemId() == R.id.set_gathering) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.52,3,2
6063_19,19,19,showDialog(LifeCounterDialogFragment.DIALOG_SET_GATHERING);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,2,0.7,4,3
6063_20,20,20,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.2,5,4
6063_21,21,21,} else if (item.getItemId() == R.id.display_mode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.38,6,5
6063_22,22,22,showDialog(LifeCounterDialogFragment.DIALOG_CHANGE_DISPLAY);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.58,7,6
6063_23,23,23,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.2,8,7
6063_24,24,24,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.24,9,8
6063_25,25,25,return super.onOptionsItemSelected(item);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.31,10,9
6064_1,1,2,"@Override
public boolean onOptionsItemSelected(MenuItem item) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,2,1,0,0,0.38,16,16
6064_3,3,26,"if (item.getItemId() == R.id.add_player) {
addPlayer();
setCommanderInfo(-1);
addPlayerView(mPlayers.get(mPlayers.size() - 1));
return true;
} else if (item.getItemId() == R.id.remove_player) {
showDialog(LifeCounterDialogFragment.DIALOG_REMOVE_PLAYER);
return true;
} else if (item.getItemId() == R.id.announce_life) {
announceLifeTotals();
return true;
} else if (item.getItemId() == R.id.edit_gatherings) {
GatheringsFragment rlFrag = new GatheringsFragment();
startNewFragment(rlFrag, null);
return true;
} else if (item.getItemId() == R.id.set_gathering) {
showDialog(LifeCounterDialogFragment.DIALOG_SET_GATHERING);
return true;
} else if (item.getItemId() == R.id.display_mode) {
showDialog(LifeCounterDialogFragment.DIALOG_CHANGE_DISPLAY);
return true;
} else {
return super.onOptionsItemSelected(item);
}",1,0,0,0,0,0,0,0,0,22,1,24,0,0,0,0,5,2,1,0,4,0.67,0,0
6064_4,4,4,addPlayer();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.29,14,14
6064_5,5,5,setCommanderInfo(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.47,13,13
6064_6,6,6,addPlayerView(mPlayers.get(mPlayers.size() - 1));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.28,12,12
6064_7,7,7,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.24,11,11
6064_8,8,8,} else if (item.getItemId() == R.id.remove_player) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.37,10,10
6064_9,9,9,showDialog(LifeCounterDialogFragment.DIALOG_REMOVE_PLAYER);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,2,0.65,9,9
6064_10,10,10,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.24,8,8
6064_11,11,11,} else if (item.getItemId() == R.id.announce_life) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.42,7,7
6064_12,12,12,announceLifeTotals();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.41,6,6
6064_13,13,13,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.24,5,5
6064_14,14,14,} else if (item.getItemId() == R.id.edit_gatherings) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.5,4,4
6064_15,15,15,GatheringsFragment rlFrag = new GatheringsFragment();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,1,0.61,3,3
6064_16,16,16,"startNewFragment(rlFrag, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.36,2,2
6064_17,17,17,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.24,1,1
6064_18,18,18,} else if (item.getItemId() == R.id.set_gathering) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,2,0.59,0,0
6064_19,19,19,showDialog(LifeCounterDialogFragment.DIALOG_SET_GATHERING);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,4,0.85,0,0
6064_20,20,20,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.24,1,0
6064_21,21,21,} else if (item.getItemId() == R.id.display_mode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.41,2,1
6064_22,22,22,showDialog(LifeCounterDialogFragment.DIALOG_CHANGE_DISPLAY);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,2,0.68,3,2
6064_23,23,23,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.24,4,3
6064_24,24,24,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.25,5,4
6064_25,25,25,return super.onOptionsItemSelected(item);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.32,6,5
6065_1,1,2,"@Override
public boolean onOptionsItemSelected(MenuItem item) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,6,0,0,0,0.36,19,19
6065_3,3,26,"if (item.getItemId() == R.id.add_player) {
addPlayer();
setCommanderInfo(-1);
addPlayerView(mPlayers.get(mPlayers.size() - 1));
return true;
} else if (item.getItemId() == R.id.remove_player) {
showDialog(LifeCounterDialogFragment.DIALOG_REMOVE_PLAYER);
return true;
} else if (item.getItemId() == R.id.announce_life) {
announceLifeTotals();
return true;
} else if (item.getItemId() == R.id.edit_gatherings) {
GatheringsFragment rlFrag = new GatheringsFragment();
startNewFragment(rlFrag, null);
return true;
} else if (item.getItemId() == R.id.set_gathering) {
showDialog(LifeCounterDialogFragment.DIALOG_SET_GATHERING);
return true;
} else if (item.getItemId() == R.id.display_mode) {
showDialog(LifeCounterDialogFragment.DIALOG_CHANGE_DISPLAY);
return true;
} else {
return super.onOptionsItemSelected(item);
}",1,0,0,0,0,0,0,0,0,22,1,24,0,0,0,0,8,6,0,0,6,0.65,0,0
6065_4,4,4,addPlayer();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.2,17,17
6065_5,5,5,setCommanderInfo(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,1,0.47,16,16
6065_6,6,6,addPlayerView(mPlayers.get(mPlayers.size() - 1));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.27,15,15
6065_7,7,7,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.25,14,14
6065_8,8,8,} else if (item.getItemId() == R.id.remove_player) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.33,13,13
6065_9,9,9,showDialog(LifeCounterDialogFragment.DIALOG_REMOVE_PLAYER);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,2,0.62,12,12
6065_10,10,10,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.25,11,11
6065_11,11,11,} else if (item.getItemId() == R.id.announce_life) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.4,10,10
6065_12,12,12,announceLifeTotals();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.4,9,9
6065_13,13,13,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.25,8,8
6065_14,14,14,} else if (item.getItemId() == R.id.edit_gatherings) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.39,7,7
6065_15,15,15,GatheringsFragment rlFrag = new GatheringsFragment();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,6,0,0,0,0.42,6,6
6065_16,16,16,"startNewFragment(rlFrag, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,0,0,0,0.37,5,5
6065_17,17,17,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.25,4,4
6065_18,18,18,} else if (item.getItemId() == R.id.set_gathering) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.36,3,3
6065_19,19,19,showDialog(LifeCounterDialogFragment.DIALOG_SET_GATHERING);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,2,0.64,2,2
6065_20,20,20,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.25,1,1
6065_21,21,21,} else if (item.getItemId() == R.id.display_mode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,2,0.51,0,0
6065_22,22,22,showDialog(LifeCounterDialogFragment.DIALOG_CHANGE_DISPLAY);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,4,0.78,0,0
6065_23,23,23,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.25,1,0
6065_24,24,24,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.28,2,1
6065_25,25,25,return super.onOptionsItemSelected(item);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.29,3,2
6066_1,1,1,throws IllegalStateException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,7,7,0,0,0,0.34,1,0
6066_3,3,5,"if (!this.isVisible()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,7,0,0,1,0.51,0,0
6066_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.22,1,0
6066_7,7,7,removeDialog(getParentFragmentManager());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,7,0,0,2,0.56,4,2
6066_9,9,9,LifeCounterDialogFragment newFragment = new LifeCounterDialogFragment();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,7,0,0,2,0.65,6,3
6066_10,10,10,Bundle arguments = new Bundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,7,0,0,0,0.32,7,3
6066_11,11,11,"arguments.putInt(FamiliarDialogFragment.ID_KEY, id);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,2,0.52,8,4
6066_12,12,12,newFragment.setArguments(arguments);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,1,0.48,9,5
6066_13,13,13,"newFragment.show(getParentFragmentManager(), FamiliarActivity.DIALOG_TAG);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,3,0.63,10,6
6067_1,1,1,throws IllegalStateException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,3,3,0,0,0,0.3,7,3
6067_3,3,5,"if (!this.isVisible()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,0,0.31,3,1
6067_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.21,4,1
6067_7,7,7,removeDialog(getParentFragmentManager());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.53,1,0
6067_9,9,9,LifeCounterDialogFragment newFragment = new LifeCounterDialogFragment();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.63,0,0
6067_10,10,10,Bundle arguments = new Bundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.35,1,0
6067_11,11,11,"arguments.putInt(FamiliarDialogFragment.ID_KEY, id);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.49,2,1
6067_12,12,12,newFragment.setArguments(arguments);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.44,3,2
6067_13,13,13,"newFragment.show(getParentFragmentManager(), FamiliarActivity.DIALOG_TAG);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,2,0.68,4,3
6068_1,1,1,public void setCommanderInfo(int toBeRemoved) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,2,0,1,0.38,5,5
6068_2,2,21,"for (LcPlayer player1 : mPlayers) {
if (toBeRemoved != -1) {
player1.mCommanderDamage.remove(toBeRemoved);
} else {
for (int i = 0; i < mPlayers.size(); i++) {
if (player1.mCommanderDamage.size() > i) {
player1.mCommanderDamage.get(i).mName = mPlayers.get(i).mName;
}
else {
CommanderEntry ce = new CommanderEntry();
ce.mName = mPlayers.get(i).mName;
ce.mLife = 0;
player1.mCommanderDamage.add(ce);
}
}
}
if (player1.mCommanderDamageAdapter != null) {
player1.mCommanderDamageAdapter.notifyDataSetChanged();
}
}",0,0,0,1,0,0,0,0,0,13,4,20,0,0,0,0,5,3,2,0,4,0.66,0,0
6068_3,3,17,"if (toBeRemoved != -1) {
player1.mCommanderDamage.remove(toBeRemoved);
} else {
for (int i = 0; i < mPlayers.size(); i++) {
if (player1.mCommanderDamage.size() > i) {
player1.mCommanderDamage.get(i).mName = mPlayers.get(i).mName;
}
else {
CommanderEntry ce = new CommanderEntry();
ce.mName = mPlayers.get(i).mName;
ce.mLife = 0;
player1.mCommanderDamage.add(ce);
}
}
}",1,0,0,0,0,0,0,0,0,10,3,15,0,1,0,0,5,3,2,0,3,0.59,0,0
6068_4,4,4,player1.mCommanderDamage.remove(toBeRemoved);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,2,0,0,0.28,2,2
6068_5,5,5,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,2,0,0,0.16,1,1
6068_6,6,16,"for (int i = 0; i < mPlayers.size(); i++) {
if (player1.mCommanderDamage.size() > i) {
player1.mCommanderDamage.get(i).mName = mPlayers.get(i).mName;
}
else {
CommanderEntry ce = new CommanderEntry();
ce.mName = mPlayers.get(i).mName;
ce.mLife = 0;
player1.mCommanderDamage.add(ce);
}
}",0,0,1,0,0,0,0,0,0,7,2,11,0,0,0,0,5,3,2,0,3,0.61,0,0
6068_7,7,15,"if (player1.mCommanderDamage.size() > i) {
player1.mCommanderDamage.get(i).mName = mPlayers.get(i).mName;
}
else {
CommanderEntry ce = new CommanderEntry();
ce.mName = mPlayers.get(i).mName;
ce.mLife = 0;
player1.mCommanderDamage.add(ce);
}",1,0,0,0,0,0,0,0,0,6,1,9,0,0,0,0,5,3,2,0,3,0.61,0,0
6068_8,8,8,player1.mCommanderDamage.get(i).mName = mPlayers.get(i).mName;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,2,0,2,0.59,1,0
6068_10,10,10,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,2,0,0,0.16,3,2
6068_11,11,11,CommanderEntry ce = new CommanderEntry();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,2,0,1,0.46,4,2
6068_12,12,12,ce.mName = mPlayers.get(i).mName;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,2,0,2,0.67,5,3
6068_13,13,13,ce.mLife = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,2,0,0,0.33,6,4
6068_14,14,14,player1.mCommanderDamage.add(ce);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,2,0,0,0.33,7,5
6068_18,18,20,"if (player1.mCommanderDamageAdapter != null) {
player1.mCommanderDamageAdapter.notifyDataSetChanged();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,3,2,0,1,0.42,11,7
6068_19,19,19,player1.mCommanderDamageAdapter.notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,2,0,1,0.42,12,7
6069_1,1,1,public void setCommanderInfo(int toBeRemoved) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.27,8,7
6069_2,2,21,"for (LcPlayer player1 : mPlayers) {
if (toBeRemoved != -1) {
player1.mCommanderDamage.remove(toBeRemoved);
} else {
for (int i = 0; i < mPlayers.size(); i++) {
if (player1.mCommanderDamage.size() > i) {
player1.mCommanderDamage.get(i).mName = mPlayers.get(i).mName;
}
else {
CommanderEntry ce = new CommanderEntry();
ce.mName = mPlayers.get(i).mName;
ce.mLife = 0;
player1.mCommanderDamage.add(ce);
}
}
}
if (player1.mCommanderDamageAdapter != null) {
player1.mCommanderDamageAdapter.notifyDataSetChanged();
}
}",0,0,0,1,0,0,0,0,0,13,4,20,0,0,0,0,6,4,1,0,3,0.56,0,0
6069_3,3,17,"if (toBeRemoved != -1) {
player1.mCommanderDamage.remove(toBeRemoved);
} else {
for (int i = 0; i < mPlayers.size(); i++) {
if (player1.mCommanderDamage.size() > i) {
player1.mCommanderDamage.get(i).mName = mPlayers.get(i).mName;
}
else {
CommanderEntry ce = new CommanderEntry();
ce.mName = mPlayers.get(i).mName;
ce.mLife = 0;
player1.mCommanderDamage.add(ce);
}
}
}",1,0,0,0,0,0,0,0,0,10,3,15,0,1,0,0,6,4,1,0,3,0.56,0,0
6069_4,4,4,player1.mCommanderDamage.remove(toBeRemoved);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.3,5,4
6069_5,5,5,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.17,4,3
6069_6,6,16,"for (int i = 0; i < mPlayers.size(); i++) {
if (player1.mCommanderDamage.size() > i) {
player1.mCommanderDamage.get(i).mName = mPlayers.get(i).mName;
}
else {
CommanderEntry ce = new CommanderEntry();
ce.mName = mPlayers.get(i).mName;
ce.mLife = 0;
player1.mCommanderDamage.add(ce);
}
}",0,0,1,0,0,0,0,0,0,7,2,11,0,0,0,0,6,4,1,0,3,0.57,0,0
6069_7,7,15,"if (player1.mCommanderDamage.size() > i) {
player1.mCommanderDamage.get(i).mName = mPlayers.get(i).mName;
}
else {
CommanderEntry ce = new CommanderEntry();
ce.mName = mPlayers.get(i).mName;
ce.mLife = 0;
player1.mCommanderDamage.add(ce);
}",1,0,0,0,0,0,0,0,0,6,1,9,0,0,0,0,6,4,1,0,3,0.57,0,0
6069_8,8,8,player1.mCommanderDamage.get(i).mName = mPlayers.get(i).mName;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.38,1,0
6069_10,10,10,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.17,0,0
6069_11,11,11,CommanderEntry ce = new CommanderEntry();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.53,1,0
6069_12,12,12,ce.mName = mPlayers.get(i).mName;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.42,2,1
6069_13,13,13,ce.mLife = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.35,3,2
6069_14,14,14,player1.mCommanderDamage.add(ce);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.47,4,3
6069_18,18,20,"if (player1.mCommanderDamageAdapter != null) {
player1.mCommanderDamageAdapter.notifyDataSetChanged();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,1,0,0,0.32,8,5
6069_19,19,19,player1.mCommanderDamageAdapter.notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.29,9,5
6070_1,1,1,public void changeDisplayMode(boolean shouldDefaultLives) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.38,0,0
6070_2,2,2,"PreferenceAdapter.setDisplayMode(getContext(), String.valueOf(mDisplayMode));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,0,0,1,0.53,0,0
6070_4,4,4,mGridLayout.removeAllViews();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,1,0,0,0,0.33,2,1
6070_6,6,48,"if (requireActivity().getResources().getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT) {
switch (mDisplayMode) {
case DISPLAY_NORMAL:
mGridLayout.setOrientation(GridLayout.HORIZONTAL);
mGridLayout.setColumnCount(1);
mGridLayout.setRowCount(GridLayout.UNDEFINED);
break;
case DISPLAY_COMPACT:
mGridLayout.setOrientation(GridLayout.HORIZONTAL);
mGridLayout.setColumnCount(mNumCols);
mGridLayout.setRowCount(GridLayout.UNDEFINED);
break;
case DISPLAY_COMMANDER:
mGridLayout.setOrientation(GridLayout.HORIZONTAL);
mGridLayout.setColumnCount(2);
mGridLayout.setRowCount(GridLayout.UNDEFINED);
break;
}
} else {
switch (mDisplayMode) {
case DISPLAY_NORMAL:
mGridLayout.setOrientation(GridLayout.VERTICAL);
mGridLayout.setColumnCount(GridLayout.UNDEFINED);
mGridLayout.setRowCount(1);
break;
case DISPLAY_COMPACT:
mGridLayout.setOrientation(GridLayout.VERTICAL);
mGridLayout.setColumnCount(GridLayout.UNDEFINED);
mGridLayout.setRowCount(mNumRows);
break;
case DISPLAY_COMMANDER:
mGridLayout.setOrientation(GridLayout.VERTICAL);
mGridLayout.setColumnCount(GridLayout.UNDEFINED);
if (mListSizeHeight != -1) {
float height = TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 48,
getActivity().getResources().getDisplayMetrics());
mGridLayout.setRowCount((int) (mListSizeHeight / height));
} else {
mGridLayout.setRowCount(GridLayout.UNDEFINED);
}
break;
}
}",1,0,0,0,0,0,0,0,0,31,3,43,0,0,1,1,2,1,0,0,0,0.37,4,2
6070_7,7,7,switch (mDisplayMode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.39,5,2
6070_8,8,9,"case DISPLAY_NORMAL:
mGridLayout.setOrientation(GridLayout.HORIZONTAL);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,0,0.34,6,3
6070_10,10,10,mGridLayout.setColumnCount(1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.34,8,5
6070_11,11,11,mGridLayout.setRowCount(GridLayout.UNDEFINED);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.33,9,5
6070_12,12,12,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,1,0,0,0,0.15,10,6
6070_13,13,14,"case DISPLAY_COMPACT:
mGridLayout.setOrientation(GridLayout.HORIZONTAL);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,0,0.35,11,7
6070_15,15,15,mGridLayout.setColumnCount(mNumCols);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.36,13,9
6070_16,16,16,mGridLayout.setRowCount(GridLayout.UNDEFINED);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.33,14,9
6070_17,17,17,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,1,0,0,0,0.15,15,10
6070_18,18,19,"case DISPLAY_COMMANDER:
mGridLayout.setOrientation(GridLayout.HORIZONTAL);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,0,0.34,16,11
6070_20,20,20,mGridLayout.setColumnCount(2);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.33,18,13
6070_21,21,21,mGridLayout.setRowCount(GridLayout.UNDEFINED);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.33,19,13
6070_22,22,22,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,1,0,0,0,0.15,20,14
6070_24,24,24,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.42,22,16
6070_25,25,25,switch (mDisplayMode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.39,23,16
6070_26,26,27,"case DISPLAY_NORMAL:
mGridLayout.setOrientation(GridLayout.VERTICAL);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,0,0.34,24,17
6070_28,28,28,mGridLayout.setColumnCount(GridLayout.UNDEFINED);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.35,26,19
6070_29,29,29,mGridLayout.setRowCount(1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.31,27,19
6070_30,30,30,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,1,0,0,0,0.15,28,20
6070_31,31,32,"case DISPLAY_COMPACT:
mGridLayout.setOrientation(GridLayout.VERTICAL);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,0,0.34,29,21
6070_33,33,33,mGridLayout.setColumnCount(GridLayout.UNDEFINED);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.35,31,23
6070_34,34,34,mGridLayout.setRowCount(mNumRows);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.32,32,23
6070_35,35,35,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,1,0,0,0,0.15,33,24
6070_36,36,37,"case DISPLAY_COMMANDER:
mGridLayout.setOrientation(GridLayout.VERTICAL);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,0,0.34,34,25
6070_38,38,38,mGridLayout.setColumnCount(GridLayout.UNDEFINED);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.35,36,27
6070_39,39,45,"if (mListSizeHeight != -1) {
float height = TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 48,
getActivity().getResources().getDisplayMetrics());
mGridLayout.setRowCount((int) (mListSizeHeight / height));
} else {
mGridLayout.setRowCount(GridLayout.UNDEFINED);
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,0,0,2,1,0,0,0,0.35,37,27
6070_40,40,41,"float height = TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 48,
getActivity().getResources().getDisplayMetrics());",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,2,1,0,0,0,0.34,38,28
6070_42,42,42,mGridLayout.setRowCount((int) (mListSizeHeight / height));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.31,40,30
6070_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.42,41,30
6070_44,44,44,mGridLayout.setRowCount(GridLayout.UNDEFINED);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.33,42,31
6070_46,46,46,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,1,0,0,0,0.15,44,33
6070_50,50,50,boolean areLivesDefault = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,1,0,0,0,0.38,48,34
6070_51,51,58,"for (LcPlayer player : mPlayers) {
if (!(player.mLifeHistory.size() == 0
&& player.mPoisonHistory.size() == 0
&& player.mLife == player.mDefaultLifeTotal
&& (player.mDefaultLifeTotal == DEFAULT_LIFE || player.mDefaultLifeTotal == DEFAULT_LIFE_COMMANDER))) {
areLivesDefault = false;
}
}",0,0,0,1,0,0,0,0,0,3,2,8,0,1,0,1,2,1,0,0,0,0.32,49,34
6070_52,52,57,"if (!(player.mLifeHistory.size() == 0
&& player.mPoisonHistory.size() == 0
&& player.mLife == player.mDefaultLifeTotal
&& (player.mDefaultLifeTotal == DEFAULT_LIFE || player.mDefaultLifeTotal == DEFAULT_LIFE_COMMANDER))) {
areLivesDefault = false;
}",1,0,0,0,0,0,0,0,0,2,1,6,0,0,0,0,2,1,0,0,0,0.32,50,35
6070_53,53,55,"&& player.mPoisonHistory.size() == 0
&& player.mLife == player.mDefaultLifeTotal
&& (player.mDefaultLifeTotal == DEFAULT_LIFE || player.mDefaultLifeTotal == DEFAULT_LIFE_COMMANDER))) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,2,1,0,0,0,0.29,51,36
6070_56,56,56,areLivesDefault = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.35,54,38
6070_60,60,65,"if (areLivesDefault && shouldDefaultLives) {
for (LcPlayer player : mPlayers) {
player.mDefaultLifeTotal = getDefaultLife();
player.mLife = player.mDefaultLifeTotal;
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,1,1,2,1,0,0,0,0.33,58,39
6070_61,61,64,"for (LcPlayer player : mPlayers) {
player.mDefaultLifeTotal = getDefaultLife();
player.mLife = player.mDefaultLifeTotal;
}",0,0,0,1,0,0,0,0,0,2,1,4,0,0,0,0,2,1,0,0,0,0.31,59,39
6070_62,62,62,player.mDefaultLifeTotal = getDefaultLife();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.31,60,40
6070_63,63,63,player.mLife = player.mDefaultLifeTotal;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.29,61,41
6070_67,67,69,"for (LcPlayer player : mPlayers) {
addPlayerView(player);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,1,1,2,1,0,0,0,0.27,65,43
6070_68,68,68,addPlayerView(player);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.17,66,43
6070_71,71,87,"if (mDisplayMode == DISPLAY_COMMANDER) {
mCommanderButton.setVisibility(View.VISIBLE);
mCommanderPlayerView.setVisibility(View.VISIBLE);
mCommanderPlayerView.removeAllViews();
if (mPlayers.size() > 0 && null != mPlayers.get(0).mView) {
mCommanderPlayerView.addView(mPlayers.get(0).mView);
mPlayers.get(0).setSize(mListSizeWidth, mListSizeHeight, mNumRows, mNumCols, mDisplayMode, getActivity().getResources()
.getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT,
mPlayers.size() == 1);
}
} else {
mCommanderPlayerView.setVisibility(View.GONE);
mCommanderButton.setVisibility(View.GONE);
if (mStatDisplaying == STAT_COMMANDER) {
setStatDisplaying(STAT_LIFE);
}
}",1,0,0,0,0,0,0,0,0,12,2,17,0,0,1,0,2,1,0,0,0,0.36,69,45
6070_72,72,72,mCommanderButton.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,1,0,0,0,0.3,70,45
6070_73,73,73,mCommanderPlayerView.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,1,0,0,0,0.24,71,46
6070_74,74,74,mCommanderPlayerView.removeAllViews();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.21,72,47
6070_75,75,80,"if (mPlayers.size() > 0 && null != mPlayers.get(0).mView) {
mCommanderPlayerView.addView(mPlayers.get(0).mView);
mPlayers.get(0).setSize(mListSizeWidth, mListSizeHeight, mNumRows, mNumCols, mDisplayMode, getActivity().getResources()
.getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT,
mPlayers.size() == 1);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,0,0,0,2,1,0,0,0,0.34,73,48
6070_76,76,76,mCommanderPlayerView.addView(mPlayers.get(0).mView);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,1,0,0,0,0.21,74,49
6070_77,77,77,"mPlayers.get(0).setSize(mListSizeWidth, mListSizeHeight, mNumRows, mNumCols, mDisplayMode, getActivity().getResources()",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,1,0,0,0,0.34,75,50
6070_78,78,79,".getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT,
mPlayers.size() == 1);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,0,0.37,76,51
6070_81,81,81,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.42,79,53
6070_82,82,82,mCommanderPlayerView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,1,0,0,0,0.27,80,53
6070_83,83,83,mCommanderButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,1,0,0,0,0.33,81,54
6070_84,84,86,"if (mStatDisplaying == STAT_COMMANDER) {
setStatDisplaying(STAT_LIFE);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,1,0,0,0,0.29,82,55
6070_85,85,85,setStatDisplaying(STAT_LIFE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.3,83,56
6071_1,1,1,private void addPlayerView(final LcPlayer player) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,2,0.68,7,6
6071_2,2,6,"try {
mGridLayout.addView(player.newView(mDisplayMode, mStatDisplaying, mGridLayout, mCommanderPlayerView));
} catch (IllegalArgumentException e) {
return;
}",0,0,0,0,1,0,0,0,0,3,1,5,1,0,0,0,6,6,0,0,3,0.69,2,2
6071_3,3,3,"mGridLayout.addView(player.newView(mDisplayMode, mStatDisplaying, mGridLayout, mCommanderPlayerView));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,3,0.73,5,4
6071_4,4,4,} catch (IllegalArgumentException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.39,4,3
6071_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.21,3,2
6071_7,7,20,"if (mDisplayMode == DISPLAY_COMMANDER) {
player.mCommanderRowView.setOnClickListener(view -> {
mCommanderPlayerView.removeAllViews();
mCommanderPlayerView.addView(player.mView);
player.setSize(mListSizeWidth, mListSizeHeight, mNumRows, mNumCols, mDisplayMode,
requireActivity().getResources().getConfiguration().orientation
== Configuration.ORIENTATION_PORTRAIT, mPlayers.size() == 1
);
});

if (mPlayers.size() == 1) {
mCommanderPlayerView.addView(mPlayers.get(0).mView);
}
}",1,0,0,0,0,0,0,0,0,6,2,14,1,0,0,1,6,6,0,0,3,0.7,0,0
6071_8,8,8,player.mCommanderRowView.setOnClickListener(view -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,3,0.72,0,0
6071_9,9,9,mCommanderPlayerView.removeAllViews();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,3,0.8,0,0
6071_10,10,10,mCommanderPlayerView.addView(player.mView);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,3,0.82,1,0
6071_11,11,14,"player.setSize(mListSizeWidth, mListSizeHeight, mNumRows, mNumCols, mDisplayMode,
requireActivity().getResources().getConfiguration().orientation
== Configuration.ORIENTATION_PORTRAIT, mPlayers.size() == 1
);",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,6,6,0,0,1,0.5,2,1
6071_17,17,19,"if (mPlayers.size() == 1) {
mCommanderPlayerView.addView(mPlayers.get(0).mView);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,6,6,0,0,3,0.72,8,3
6071_18,18,18,mCommanderPlayerView.addView(mPlayers.get(0).mView);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,3,0.75,9,3
6071_22,22,22,resizeAllPlayers();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,6,0,0,1,0.65,13,5
6072_1,1,1,    public void addPlayer() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.47,2,1
6072_2,2,2,final LcPlayer player = new LcPlayer(this);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.7,1,0
6072_4,4,4,mLargestPlayerNumber++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,3,0.92,0,0
6072_5,5,5,"player.mName = getString(R.string.life_counter_default_name) + "" "" + mLargestPlayerNumber;",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,3,0.72,1,0
6072_6,6,6,player.mDefaultLifeTotal = getDefaultLife();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.6,2,1
6072_7,7,7,player.mLife = player.mDefaultLifeTotal;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,1,0.68,3,2
6072_9,9,9,resizeAllPlayers();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.63,5,4
6072_11,11,11,mPlayers.add(player);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.62,7,5
6073_1,1,1,"public void addPlayer(String name, int startingLife) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,2,0.57,5,4
6073_2,2,2,LcPlayer player = new LcPlayer(this);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,9,1,0,1,0.66,4,3
6073_3,3,3,player.mName = name;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,9,1,0,2,0.73,3,2
6073_4,4,4,player.mDefaultLifeTotal = startingLife;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,9,1,0,1,0.57,2,1
6073_5,5,5,player.mLife = startingLife;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,11,9,1,0,1,0.59,1,0
6073_7,7,14,"try {
String[] nameParts = player.mName.split("" "");
int number = Integer.parseInt(nameParts[nameParts.length - 1]);
if (number > mLargestPlayerNumber) {
mLargestPlayerNumber = number;
}
} catch (NumberFormatException e) {
}",0,0,0,0,1,0,0,0,0,5,2,8,0,0,1,1,11,9,1,0,3,0.76,0,0
6073_8,8,8,"String[] nameParts = player.mName.split("" "");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,9,1,0,2,0.64,1,0
6073_9,9,9,int number = Integer.parseInt(nameParts[nameParts.length - 1]);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,9,1,0,2,0.58,2,1
6073_10,10,12,"if (number > mLargestPlayerNumber) {
mLargestPlayerNumber = number;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,11,9,1,0,2,0.88,3,2
6073_11,11,11,mLargestPlayerNumber = number;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,2,0.88,4,3
6073_13,13,13,} catch (NumberFormatException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.47,6,5
6073_16,16,16,mPlayers.add(player);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,11,9,1,0,1,0.56,9,6
6074_1,1,1,private void addPlayer(String line) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.48,11,7
6074_2,2,104,"try {
LcPlayer player = new LcPlayer(this);

String[] data = line.split("";"");

try {
player.mName = data[0];
} catch (Exception e) {
player.mName = getResources().getString(R.string.life_counter_default_name);
}

try {
String[] nameParts = player.mName.split("" "");
int number = Integer.parseInt(nameParts[nameParts.length - 1]);
if (number > mLargestPlayerNumber) {
mLargestPlayerNumber = number;
}
} catch (NumberFormatException e) {
}

try {
player.mLife = Integer.parseInt(data[1]);
} catch (Exception e) {
player.mLife = getDefaultLife();
}

try {
player.mDefaultLifeTotal = Integer.parseInt(data[5]);
} catch (Exception e) {
player.mDefaultLifeTotal = getDefaultLife();
}

try {
String[] lifeHistory = data[2].split("","");
player.mLifeHistory = new ArrayList<>(lifeHistory.length);
HistoryEntry entry;
for (int i = lifeHistory.length - 1; i >= 0; i--) {
entry = new HistoryEntry();
entry.mAbsolute = Integer.parseInt(lifeHistory[i]);
if (i != lifeHistory.length - 1) {
entry.mDelta = entry.mAbsolute - player.mLifeHistory.get(0).mAbsolute;
} else {
entry.mDelta = entry.mAbsolute - player.mDefaultLifeTotal;
}
player.mLifeHistory.add(0, entry);
}
} catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {
player.mLifeHistory = new ArrayList<>();
}

try {
player.mPoison = Integer.parseInt(data[3]);
} catch (Exception e) {
player.mPoison = getDefaultLife();
}

try {
String[] poisonHistory = data[4].split("","");
player.mPoisonHistory = new ArrayList<>(poisonHistory.length);
HistoryEntry entry;
for (int i = poisonHistory.length - 1; i >= 0; i--) {
entry = new HistoryEntry();
entry.mAbsolute = Integer.parseInt(poisonHistory[i]);
if (i != poisonHistory.length - 1) {
entry.mDelta = entry.mAbsolute - player.mPoisonHistory.get(0).mAbsolute;
} else {
entry.mDelta = entry.mAbsolute;
}
player.mPoisonHistory.add(0, entry);
}

} catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {
player.mPoisonHistory = new ArrayList<>();
}

try {
String[] commanderLifeString = data[6].split("","");
player.mCommanderDamage = new ArrayList<>(commanderLifeString.length);
CommanderEntry entry;
for (String aCommanderLifeString : commanderLifeString) {
entry = new CommanderEntry();
entry.mLife = Integer.parseInt(aCommanderLifeString);
player.mCommanderDamage.add(entry);
}
} catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {
player.mCommanderDamage = new ArrayList<>();
}

try {
player.mCommanderCasting = Integer.parseInt(data[7]);
} catch (Exception e) {
player.mCommanderCasting = 0;
}

try {
player.mCommanderExperienceCounter = Integer.parseInt(data[8]);
} catch (Exception e) {
player.mCommanderExperienceCounter = 0;
}

mPlayers.add(player);
} catch (ArrayIndexOutOfBoundsException e) {
}",0,0,0,0,1,0,0,0,0,72,4,103,0,0,0,0,11,9,1,0,3,0.67,0,0
6074_3,3,3,LcPlayer player = new LcPlayer(this);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,11,9,1,0,1,0.66,9,5
6074_5,5,5,"String[] data = line.split("";"");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,11,9,1,0,0,0.35,7,4
6074_7,7,11,"try {
player.mName = data[0];
} catch (Exception e) {
player.mName = getResources().getString(R.string.life_counter_default_name);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,1,1,11,9,1,0,2,0.57,1,0
6074_8,8,8,player.mName = data[0];,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,2,0.62,4,2
6074_9,9,9,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,0,0.22,3,1
6074_10,10,10,player.mName = getResources().getString(R.string.life_counter_default_name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,2,0.59,2,0
6074_13,13,20,"try {
String[] nameParts = player.mName.split("" "");
int number = Integer.parseInt(nameParts[nameParts.length - 1]);
if (number > mLargestPlayerNumber) {
mLargestPlayerNumber = number;
}
} catch (NumberFormatException e) {
}",0,0,0,0,1,0,0,0,0,5,2,8,0,0,1,1,11,9,1,0,3,0.76,0,0
6074_14,14,14,"String[] nameParts = player.mName.split("" "");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,9,1,0,2,0.64,1,0
6074_15,15,15,int number = Integer.parseInt(nameParts[nameParts.length - 1]);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,9,1,0,2,0.58,2,1
6074_16,16,18,"if (number > mLargestPlayerNumber) {
mLargestPlayerNumber = number;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,11,9,1,0,2,0.88,3,2
6074_17,17,17,mLargestPlayerNumber = number;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,2,0.88,4,3
6074_19,19,19,} catch (NumberFormatException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.47,6,5
6074_22,22,26,"try {
player.mLife = Integer.parseInt(data[1]);
} catch (Exception e) {
player.mLife = getDefaultLife();
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,1,1,11,9,1,0,1,0.53,9,6
6074_23,23,23,player.mLife = Integer.parseInt(data[1]);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.55,10,6
6074_24,24,24,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,0,0.22,11,7
6074_25,25,25,player.mLife = getDefaultLife();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.54,12,8
6074_28,28,32,"try {
player.mDefaultLifeTotal = Integer.parseInt(data[5]);
} catch (Exception e) {
player.mDefaultLifeTotal = getDefaultLife();
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,1,1,11,9,1,0,1,0.52,15,10
6074_29,29,29,player.mDefaultLifeTotal = Integer.parseInt(data[5]);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.54,16,10
6074_30,30,30,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,0,0.22,17,11
6074_31,31,31,player.mDefaultLifeTotal = getDefaultLife();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.55,18,12
6074_34,34,50,"try {
String[] lifeHistory = data[2].split("","");
player.mLifeHistory = new ArrayList<>(lifeHistory.length);
HistoryEntry entry;
for (int i = lifeHistory.length - 1; i >= 0; i--) {
entry = new HistoryEntry();
entry.mAbsolute = Integer.parseInt(lifeHistory[i]);
if (i != lifeHistory.length - 1) {
entry.mDelta = entry.mAbsolute - player.mLifeHistory.get(0).mAbsolute;
} else {
entry.mDelta = entry.mAbsolute - player.mDefaultLifeTotal;
}
player.mLifeHistory.add(0, entry);
}
} catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {
player.mLifeHistory = new ArrayList<>();
}",0,0,0,0,1,0,0,0,0,13,3,17,0,0,1,1,11,9,1,0,2,0.63,21,14
6074_35,35,35,"String[] lifeHistory = data[2].split("","");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,9,1,0,0,0.41,22,14
6074_36,36,36,player.mLifeHistory = new ArrayList<>(lifeHistory.length);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,9,1,0,1,0.52,23,15
6074_37,37,37,HistoryEntry entry;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,9,1,0,0,0.34,24,16
6074_38,38,47,"for (int i = lifeHistory.length - 1; i >= 0; i--) {
entry = new HistoryEntry();
entry.mAbsolute = Integer.parseInt(lifeHistory[i]);
if (i != lifeHistory.length - 1) {
entry.mDelta = entry.mAbsolute - player.mLifeHistory.get(0).mAbsolute;
} else {
entry.mDelta = entry.mAbsolute - player.mDefaultLifeTotal;
}
player.mLifeHistory.add(0, entry);
}",0,0,1,0,0,0,0,0,0,7,2,10,0,1,0,0,11,9,1,0,1,0.54,25,17
6074_39,39,39,entry = new HistoryEntry();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,9,1,0,0,0.34,26,18
6074_40,40,40,entry.mAbsolute = Integer.parseInt(lifeHistory[i]);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,9,1,0,0,0.45,27,19
6074_41,41,45,"if (i != lifeHistory.length - 1) {
entry.mDelta = entry.mAbsolute - player.mLifeHistory.get(0).mAbsolute;
} else {
entry.mDelta = entry.mAbsolute - player.mDefaultLifeTotal;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,11,9,1,0,1,0.55,28,20
6074_42,42,42,entry.mDelta = entry.mAbsolute - player.mLifeHistory.get(0).mAbsolute;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.53,29,21
6074_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,0,0.36,30,22
6074_44,44,44,entry.mDelta = entry.mAbsolute - player.mDefaultLifeTotal;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.54,31,23
6074_46,46,46,"player.mLifeHistory.add(0, entry);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,9,1,0,1,0.54,33,25
6074_48,48,48,} catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.49,35,26
6074_49,49,49,player.mLifeHistory = new ArrayList<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.53,36,26
6074_52,52,56,"try {
player.mPoison = Integer.parseInt(data[3]);
} catch (Exception e) {
player.mPoison = getDefaultLife();
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,1,1,11,9,1,0,1,0.52,39,28
6074_53,53,53,player.mPoison = Integer.parseInt(data[3]);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.53,40,28
6074_54,54,54,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,0,0.22,41,29
6074_55,55,55,player.mPoison = getDefaultLife();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.53,42,30
6074_58,58,75,"try {
String[] poisonHistory = data[4].split("","");
player.mPoisonHistory = new ArrayList<>(poisonHistory.length);
HistoryEntry entry;
for (int i = poisonHistory.length - 1; i >= 0; i--) {
entry = new HistoryEntry();
entry.mAbsolute = Integer.parseInt(poisonHistory[i]);
if (i != poisonHistory.length - 1) {
entry.mDelta = entry.mAbsolute - player.mPoisonHistory.get(0).mAbsolute;
} else {
entry.mDelta = entry.mAbsolute;
}
player.mPoisonHistory.add(0, entry);
}

} catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {
player.mPoisonHistory = new ArrayList<>();
}",0,0,0,0,1,0,0,0,0,13,3,18,0,0,1,1,11,9,1,0,2,0.62,45,32
6074_59,59,59,"String[] poisonHistory = data[4].split("","");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,9,1,0,0,0.35,46,32
6074_60,60,60,player.mPoisonHistory = new ArrayList<>(poisonHistory.length);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,9,1,0,1,0.48,47,33
6074_61,61,61,HistoryEntry entry;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,9,1,0,0,0.34,48,34
6074_62,62,71,"for (int i = poisonHistory.length - 1; i >= 0; i--) {
entry = new HistoryEntry();
entry.mAbsolute = Integer.parseInt(poisonHistory[i]);
if (i != poisonHistory.length - 1) {
entry.mDelta = entry.mAbsolute - player.mPoisonHistory.get(0).mAbsolute;
} else {
entry.mDelta = entry.mAbsolute;
}
player.mPoisonHistory.add(0, entry);
}",0,0,1,0,0,0,0,0,0,7,2,10,0,1,0,1,11,9,1,0,1,0.52,49,35
6074_63,63,63,entry = new HistoryEntry();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,9,1,0,0,0.34,50,36
6074_64,64,64,entry.mAbsolute = Integer.parseInt(poisonHistory[i]);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,9,1,0,0,0.42,51,37
6074_65,65,69,"if (i != poisonHistory.length - 1) {
entry.mDelta = entry.mAbsolute - player.mPoisonHistory.get(0).mAbsolute;
} else {
entry.mDelta = entry.mAbsolute;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,11,9,1,0,1,0.52,52,38
6074_66,66,66,entry.mDelta = entry.mAbsolute - player.mPoisonHistory.get(0).mAbsolute;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.52,53,39
6074_67,67,67,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,0,0.36,54,40
6074_68,68,68,entry.mDelta = entry.mAbsolute;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,0,0.4,55,41
6074_70,70,70,"player.mPoisonHistory.add(0, entry);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,9,1,0,1,0.51,57,43
6074_73,73,73,} catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.49,60,44
6074_74,74,74,player.mPoisonHistory = new ArrayList<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.49,61,44
6074_77,77,88,"try {
String[] commanderLifeString = data[6].split("","");
player.mCommanderDamage = new ArrayList<>(commanderLifeString.length);
CommanderEntry entry;
for (String aCommanderLifeString : commanderLifeString) {
entry = new CommanderEntry();
entry.mLife = Integer.parseInt(aCommanderLifeString);
player.mCommanderDamage.add(entry);
}
} catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {
player.mCommanderDamage = new ArrayList<>();
}",0,0,0,0,1,0,0,0,0,9,2,12,0,0,1,1,11,9,1,0,2,0.62,64,46
6074_78,78,78,"String[] commanderLifeString = data[6].split("","");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,9,1,0,0,0.4,65,46
6074_79,79,79,player.mCommanderDamage = new ArrayList<>(commanderLifeString.length);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,9,1,0,1,0.51,66,47
6074_80,80,80,CommanderEntry entry;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,9,1,0,0,0.33,67,48
6074_81,81,85,"for (String aCommanderLifeString : commanderLifeString) {
entry = new CommanderEntry();
entry.mLife = Integer.parseInt(aCommanderLifeString);
player.mCommanderDamage.add(entry);
}",0,0,0,1,0,0,0,0,0,3,1,5,0,1,0,0,11,9,1,0,1,0.53,68,49
6074_82,82,82,entry = new CommanderEntry();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,9,1,0,0,0.33,69,50
6074_83,83,83,entry.mLife = Integer.parseInt(aCommanderLifeString);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,9,1,0,0,0.44,70,51
6074_84,84,84,player.mCommanderDamage.add(entry);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,9,1,0,1,0.54,71,52
6074_86,86,86,} catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.49,73,54
6074_87,87,87,player.mCommanderDamage = new ArrayList<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.51,74,54
6074_90,90,94,"try {
player.mCommanderCasting = Integer.parseInt(data[7]);
} catch (Exception e) {
player.mCommanderCasting = 0;
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,1,1,11,9,1,0,1,0.5,77,56
6074_91,91,91,player.mCommanderCasting = Integer.parseInt(data[7]);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.52,78,56
6074_92,92,92,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,0,0.22,79,57
6074_93,93,93,player.mCommanderCasting = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.51,80,58
6074_96,96,100,"try {
player.mCommanderExperienceCounter = Integer.parseInt(data[8]);
} catch (Exception e) {
player.mCommanderExperienceCounter = 0;
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,1,1,11,9,1,0,1,0.51,83,60
6074_97,97,97,player.mCommanderExperienceCounter = Integer.parseInt(data[8]);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.52,84,60
6074_98,98,98,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,0,0.22,85,61
6074_99,99,99,player.mCommanderExperienceCounter = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,1,0.53,86,62
6074_102,102,102,mPlayers.add(player);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,11,9,1,0,1,0.56,89,64
6074_103,103,103,} catch (ArrayIndexOutOfBoundsException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,1,0,0,0.32,90,64
120_1,1,1,    public static void checkOverrideSystemLanguage(Context context) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,3,0.64,1,0
120_3,3,3,String defaultLocale = context.getResources().getConfiguration().locale.getLanguage();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,6,3,2,0,1,0.46,0,0
120_4,4,4,boolean overrideSystemLanguage = !defaultLocale.equals(PreferenceAdapter.getLanguage(context));,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,6,3,2,0,2,0.59,1,0
120_6,6,15,"if (overrideSystemLanguage) {
String localeString = PreferenceAdapter.getLanguage(context);

Locale locale = new Locale(localeString);
Locale.setDefault(locale);
Configuration config = new Configuration();
config.locale = locale;
context.getResources().updateConfiguration(config,
context.getResources().getDisplayMetrics());
}",1,0,0,0,0,0,0,0,0,6,1,10,0,0,1,0,6,3,2,0,3,0.6,3,2
120_7,7,7,String localeString = PreferenceAdapter.getLanguage(context);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,3,2,0,1,0.5,4,2
120_9,9,9,Locale locale = new Locale(localeString);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,2,0,0,0.33,6,4
120_10,10,10,Locale.setDefault(locale);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,1,0.45,7,4
120_11,11,11,Configuration config = new Configuration();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.37,8,5
120_12,12,12,config.locale = locale;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.36,9,6
120_13,13,14,"context.getResources().updateConfiguration(config,
context.getResources().getDisplayMetrics());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,6,3,2,0,0,0.41,10,7
121_1,1,1,    public static void checkOverrideSystemLanguage(Context context) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.41,7,4
121_3,3,3,String defaultLocale = context.getResources().getConfiguration().locale.getLanguage();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,4,3,1,0,2,0.58,5,3
121_4,4,4,boolean overrideSystemLanguage = !defaultLocale.equals(PreferenceAdapter.getLanguage(context));,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,4,3,1,0,1,0.51,4,2
121_6,6,15,"if (overrideSystemLanguage) {
String localeString = PreferenceAdapter.getLanguage(context);

Locale locale = new Locale(localeString);
Locale.setDefault(locale);
Configuration config = new Configuration();
config.locale = locale;
context.getResources().updateConfiguration(config,
context.getResources().getDisplayMetrics());
}",1,0,0,0,0,0,0,0,0,6,1,10,0,0,1,0,4,3,1,0,3,0.65,0,0
121_7,7,7,String localeString = PreferenceAdapter.getLanguage(context);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,1,0,1,0.5,1,0
121_9,9,9,Locale locale = new Locale(localeString);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,1,0,0,0.31,0,0
121_10,10,10,Locale.setDefault(locale);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.52,1,0
121_11,11,11,Configuration config = new Configuration();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.56,2,1
121_12,12,12,config.locale = locale;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.33,3,2
121_13,13,14,"context.getResources().updateConfiguration(config,
context.getResources().getDisplayMetrics());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,4,3,1,0,1,0.47,4,3
122_1,1,2,"    @Override
public void onCreate(Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,0,0.33,3,2
122_3,3,3,super.onCreate(savedInstanceState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.24,2,1
122_5,5,5,mOldCacheVal = PreferenceAdapter.getImageCacheSize(getContext());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,1,0.48,0,0
122_6,6,6,addPreferencesFromResource(R.xml.preferences);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,3,0.84,0,0
123_1,1,2,"    @Override
public void onDestroy() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,7,1,0,0,0.38,2,1
123_3,3,3,super.onDestroy();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,7,1,0,0,0.32,1,0
123_5,5,8,"if (PreferenceAdapter.getImageCacheSize(getContext()) != mOldCacheVal && null != getActivity()) {
getActivity().finish();
startActivity(new Intent(getContext(), FamiliarActivity.class).setAction(Intent.ACTION_MAIN));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,8,7,1,0,4,0.61,0,0
123_6,6,6,getActivity().finish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,1,0,0,0.29,1,0
123_7,7,7,"startActivity(new Intent(getContext(), FamiliarActivity.class).setAction(Intent.ACTION_MAIN));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,1,0,1,0.4,2,1
2719_1,1,3,"    @NonNull
@Override
public Dialog onCreateDialog(Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,10,9,1,0,2,0.52,11,6
2719_4,4,6,"if (!canCreateDialog()) {
return DontShowDialog();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,10,9,1,0,2,0.58,8,4
2719_5,5,5,return DontShowDialog();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,9,1,0,1,0.46,9,4
2719_8,8,8,mDialogId = requireArguments().getInt(ID_KEY);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,10,9,1,0,1,0.44,6,3
2719_10,10,12,"if (null == getParentSearchViewFragment()) {
return DontShowDialog();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,10,9,1,0,1,0.43,2,1
2719_11,11,11,return DontShowDialog();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,9,1,0,1,0.46,3,1
2719_14,14,57,"try {
switch (mDialogId) {
case FORMAT_LIST: {
getParentSearchViewFragment().mFormatDialog = new MaterialDialog.Builder(this.requireActivity())
.title(R.string.search_formats)
.items((CharSequence[]) getParentSearchViewFragment().mFormatNames)
.itemsCallbackSingleChoice(getParentSearchViewFragment().mSelectedFormat, (dialog, itemView, which, text) -> {
getParentSearchViewFragment().mSelectedFormat = which;
return true;
})
.positiveText(R.string.dialog_ok)
.build();
if (null != getParentSearchViewFragment()) {
return getParentSearchViewFragment().mFormatDialog;
}
return DontShowDialog();
}
case RARITY_LIST: {
getParentSearchViewFragment().mRarityDialog = new MaterialDialog.Builder(this.requireActivity())
.title(R.string.search_rarities)
.positiveText(R.string.dialog_ok)
.items((CharSequence[]) getParentSearchViewFragment().mRarityNames)
.alwaysCallMultiChoiceCallback()
.itemsCallbackMultiChoice(toIntegerArray(getParentSearchViewFragment().mRarityCheckedIndices), (dialog, which, text) -> {
getParentSearchViewFragment().mRarityCheckedIndices = toIntArray(which);
return true;
})
.build();
if (null != getParentSearchViewFragment()) {
return getParentSearchViewFragment().mRarityDialog;
}
return DontShowDialog();
}
default: {
savedInstanceState.putInt(""id"", mDialogId);
return super.onCreateDialog(savedInstanceState);
}
}
} catch (NullPointerException e) {
if (null != getParentSearchViewFragment()) {
getParentSearchViewFragment().handleFamiliarDbException(false);
}
return DontShowDialog();
}",0,0,0,0,1,0,0,0,0,33,4,44,0,0,1,0,10,9,1,0,7,0.65,0,0
2719_15,15,15,switch (mDialogId) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,1,0.51,0,0
2719_16,16,16,case FORMAT_LIST: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,1,0.51,1,0
2719_17,17,17,getParentSearchViewFragment().mFormatDialog = new MaterialDialog.Builder(this.requireActivity()),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,2,0.55,2,1
2719_18,18,18,.title(R.string.search_formats),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,1,0.52,3,2
2719_19,19,19,.items((CharSequence[]) getParentSearchViewFragment().mFormatNames),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,9,1,0,1,0.45,4,3
2719_20,20,20,".itemsCallbackSingleChoice(getParentSearchViewFragment().mSelectedFormat, (dialog, itemView, which, text) -> {",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,9,1,0,3,0.54,5,4
2719_21,21,21,getParentSearchViewFragment().mSelectedFormat = which;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,1,0.44,6,5
2719_22,22,22,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,9,1,0,0,0.24,7,6
2719_24,24,24,.positiveText(R.string.dialog_ok),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,1,0.48,9,8
2719_25,25,25,.build();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,1,0.66,10,8
2719_26,26,28,"if (null != getParentSearchViewFragment()) {
return getParentSearchViewFragment().mFormatDialog;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,9,1,0,2,0.48,11,9
2719_27,27,27,return getParentSearchViewFragment().mFormatDialog;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,9,1,0,2,0.51,12,10
2719_29,29,29,return DontShowDialog();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,9,1,0,1,0.46,14,12
2719_31,31,31,case RARITY_LIST: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,1,0.38,16,13
2719_32,32,32,getParentSearchViewFragment().mRarityDialog = new MaterialDialog.Builder(this.requireActivity()),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,2,0.49,17,13
2719_33,33,33,.title(R.string.search_rarities),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,1,0.44,18,14
2719_34,34,34,.positiveText(R.string.dialog_ok),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,1,0.48,19,15
2719_35,35,35,.items((CharSequence[]) getParentSearchViewFragment().mRarityNames),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,1,0.38,20,16
2719_36,36,36,.alwaysCallMultiChoiceCallback(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,1,0.46,21,17
2719_37,37,37,".itemsCallbackMultiChoice(toIntegerArray(getParentSearchViewFragment().mRarityCheckedIndices), (dialog, which, text) -> {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,4,0.57,22,18
2719_38,38,38,getParentSearchViewFragment().mRarityCheckedIndices = toIntArray(which);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,2,0.47,23,19
2719_39,39,39,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,9,1,0,0,0.24,24,20
2719_41,41,41,.build();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,1,0.66,26,22
2719_42,42,44,"if (null != getParentSearchViewFragment()) {
return getParentSearchViewFragment().mRarityDialog;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,9,1,0,2,0.42,27,22
2719_43,43,43,return getParentSearchViewFragment().mRarityDialog;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,9,1,0,2,0.44,28,23
2719_45,45,45,return DontShowDialog();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,9,1,0,1,0.46,30,25
2719_47,47,47,default: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,0,0.23,32,26
2719_48,48,48,"savedInstanceState.putInt(""id"", mDialogId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,1,0.43,33,26
2719_49,49,49,return super.onCreateDialog(savedInstanceState);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,9,1,0,2,0.51,34,27
2719_52,52,52,} catch (NullPointerException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,0,0.35,37,29
2719_53,53,55,"if (null != getParentSearchViewFragment()) {
getParentSearchViewFragment().handleFamiliarDbException(false);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,9,1,0,0,0.38,38,29
2719_54,54,54,getParentSearchViewFragment().handleFamiliarDbException(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,1,0,0,0.38,39,30
2719_56,56,56,return DontShowDialog();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,9,1,0,1,0.46,41,32
768_1,1,3,"    @NonNull
@Override
public Loader<Cursor> onCreateLoader(int id, Bundle args) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,10,9,1,0,3,0.65,0,0
768_4,4,4,"String select = ""("" + CardDbAdapter.KEY_NAME + "")"";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,9,1,0,0,0.38,0,0
768_5,5,6,"return new CursorLoader(mFragment.requireActivity(), SEARCH_URI, CARD_NAME_PROJECTION, select, mAutocompleteFilter,
CardDbAdapter.KEY_NAME + "" COLLATE LOCALIZED ASC"");",0,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,10,9,1,0,3,0.57,1,0
769_1,1,2,"    @Override
public CharSequence convertToString(@NonNull Cursor cursor) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,1,0.55,3,3
769_3,3,7,"try {
return CardDbAdapter.getStringFromCursor(cursor, CardDbAdapter.KEY_NAME);
} catch (Exception e) {
return """";
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,4,4,0,0,2,0.64,0,0
769_4,4,4,"return CardDbAdapter.getStringFromCursor(cursor, CardDbAdapter.KEY_NAME);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.56,1,1
769_5,5,5,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.53,0,0
769_6,6,6,"return """";",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.74,0,0
2828_1,1,4,"    public static void WriteDecklist(
Activity activity,
ArrayList<MtgCard> lDecklist,
String fileName) {",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,5,3,0,0,1,0.51,6,5
2828_6,6,19,"try {
fileName = sanitizeFilename(fileName);
FileOutputStream fos = activity.openFileOutput(fileName, Context.MODE_PRIVATE);
for (MtgCard m : lDecklist) {
String cardString = m.toWishlistString();
if (m.isSideboard()) {
cardString = ""SB:"" + cardString;
}
fos.write(cardString.getBytes());
}
fos.close();
} catch (IOException | IllegalArgumentException ioe) {
SnackbarWrapper.makeAndShowText(activity, ioe.getLocalizedMessage(), SnackbarWrapper.LENGTH_LONG);
}",0,0,0,0,1,0,0,0,0,10,3,14,0,0,1,1,5,3,0,0,2,0.52,0,0
2828_7,7,7,fileName = sanitizeFilename(fileName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.25,3,3
2828_8,8,8,"FileOutputStream fos = activity.openFileOutput(fileName, Context.MODE_PRIVATE);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.34,2,2
2828_9,9,15,"for (MtgCard m : lDecklist) {
String cardString = m.toWishlistString();
if (m.isSideboard()) {
cardString = ""SB:"" + cardString;
}
fos.write(cardString.getBytes());
}",0,0,0,1,0,0,0,0,0,4,2,7,0,1,0,0,5,3,0,0,2,0.58,0,0
2828_10,10,10,String cardString = m.toWishlistString();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.52,0,0
2828_11,11,13,"if (m.isSideboard()) {
cardString = ""SB:"" + cardString;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,3,0,0,2,0.61,0,0
2828_12,12,12,"cardString = ""SB:"" + cardString;",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.61,1,0
2828_14,14,14,fos.write(cardString.getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.52,3,2
2828_16,16,16,fos.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.31,5,3
2828_17,17,17,} catch (IOException | IllegalArgumentException ioe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.21,6,3
2828_18,18,18,"SnackbarWrapper.makeAndShowText(activity, ioe.getLocalizedMessage(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.37,7,4
2829_1,1,4,"    public static void WriteCompressedDecklist(
Activity activity,
List<CompressedDecklistInfo> compressedDecklist,
String fileName) {",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,8,6,1,0,3,0.56,9,5
2829_6,6,8,"if (null == activity) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,8,6,1,0,0,0.31,5,3
2829_7,7,7,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.21,6,3
2829_9,9,29,"try {

final String newFileName = sanitizeFilename(fileName);
FileOutputStream fos = activity.openFileOutput(newFileName, Context.MODE_PRIVATE);

for (CompressedDecklistInfo cdi : compressedDecklist) {
if (cdi.getName() != null && !cdi.getName().isEmpty()) {
for (CardHelpers.IndividualSetInfo isi : cdi.mInfo) {
cdi.applyIndividualInfo(isi);
String cardString = cdi.toWishlistString();
if (cdi.isSideboard()) {
cardString = ""SB:"" + cardString;
}
fos.write(cardString.getBytes());
}
}
}
fos.close();
} catch (IOException ioe) {
SnackbarWrapper.makeAndShowText(activity, ioe.getLocalizedMessage(), SnackbarWrapper.LENGTH_LONG);
}",0,0,0,0,1,0,0,0,0,13,5,21,0,0,0,1,8,6,1,0,5,0.69,0,0
2829_11,11,11,final String newFileName = sanitizeFilename(fileName);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,6,1,0,0,0.38,2,1
2829_12,12,12,"FileOutputStream fos = activity.openFileOutput(newFileName, Context.MODE_PRIVATE);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,8,6,1,0,0,0.48,1,0
2829_14,14,25,"for (CompressedDecklistInfo cdi : compressedDecklist) {
if (cdi.getName() != null && !cdi.getName().isEmpty()) {
for (CardHelpers.IndividualSetInfo isi : cdi.mInfo) {
cdi.applyIndividualInfo(isi);
String cardString = cdi.toWishlistString();
if (cdi.isSideboard()) {
cardString = ""SB:"" + cardString;
}
fos.write(cardString.getBytes());
}
}
}",0,0,0,1,0,0,0,0,0,7,4,12,0,1,1,0,8,6,1,0,4,0.65,0,0
2829_15,15,24,"if (cdi.getName() != null && !cdi.getName().isEmpty()) {
for (CardHelpers.IndividualSetInfo isi : cdi.mInfo) {
cdi.applyIndividualInfo(isi);
String cardString = cdi.toWishlistString();
if (cdi.isSideboard()) {
cardString = ""SB:"" + cardString;
}
fos.write(cardString.getBytes());
}
}",1,0,0,0,0,0,0,0,0,6,3,10,0,0,0,0,8,6,1,0,2,0.62,1,0
2829_16,16,23,"for (CardHelpers.IndividualSetInfo isi : cdi.mInfo) {
cdi.applyIndividualInfo(isi);
String cardString = cdi.toWishlistString();
if (cdi.isSideboard()) {
cardString = ""SB:"" + cardString;
}
fos.write(cardString.getBytes());
}",0,0,0,1,0,0,0,0,0,5,2,8,0,0,0,0,8,6,1,0,2,0.64,2,1
2829_17,17,17,cdi.applyIndividualInfo(isi);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,1,0,0,0.33,3,2
2829_18,18,18,String cardString = cdi.toWishlistString();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,6,1,0,1,0.47,4,3
2829_19,19,21,"if (cdi.isSideboard()) {
cardString = ""SB:"" + cardString;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,8,6,1,0,1,0.57,5,4
2829_20,20,20,"cardString = ""SB:"" + cardString;",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,1,0.57,6,5
2829_22,22,22,fos.write(cardString.getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,1,0,2,0.7,8,7
2829_26,26,26,fos.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,1,0,0,0.52,12,8
2829_27,27,27,} catch (IOException ioe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,0,0.35,13,8
2829_28,28,28,"SnackbarWrapper.makeAndShowText(activity, ioe.getLocalizedMessage(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,1,0,1,0.49,14,9
2830_1,1,4,"    public static void WriteCompressedDecklist(
Activity activity,
List<CompressedDecklistInfo> compressedDecklist,
String fileName) {",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,6,2,1,0,0,0.33,14,10
2830_6,6,8,"if (null == activity) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,6,2,1,0,0,0.27,10,8
2830_7,7,7,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.09,11,8
2830_9,9,29,"try {

final String newFileName = sanitizeFilename(fileName);
FileOutputStream fos = activity.openFileOutput(newFileName, Context.MODE_PRIVATE);

for (CompressedDecklistInfo cdi : compressedDecklist) {
if (cdi.getName() != null && !cdi.getName().isEmpty()) {
for (CardHelpers.IndividualSetInfo isi : cdi.mInfo) {
cdi.applyIndividualInfo(isi);
String cardString = cdi.toWishlistString();
if (cdi.isSideboard()) {
cardString = ""SB:"" + cardString;
}
fos.write(cardString.getBytes());
}
}
}
fos.close();
} catch (IOException ioe) {
SnackbarWrapper.makeAndShowText(activity, ioe.getLocalizedMessage(), SnackbarWrapper.LENGTH_LONG);
}",0,0,0,0,1,0,0,0,0,13,5,21,0,0,0,1,6,2,1,0,2,0.52,0,0
2830_11,11,11,final String newFileName = sanitizeFilename(fileName);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,2,1,0,0,0.25,7,6
2830_12,12,12,"FileOutputStream fos = activity.openFileOutput(newFileName, Context.MODE_PRIVATE);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,6,2,1,0,0,0.34,6,5
2830_14,14,25,"for (CompressedDecklistInfo cdi : compressedDecklist) {
if (cdi.getName() != null && !cdi.getName().isEmpty()) {
for (CardHelpers.IndividualSetInfo isi : cdi.mInfo) {
cdi.applyIndividualInfo(isi);
String cardString = cdi.toWishlistString();
if (cdi.isSideboard()) {
cardString = ""SB:"" + cardString;
}
fos.write(cardString.getBytes());
}
}
}",0,0,0,1,0,0,0,0,0,7,4,12,0,1,1,0,6,2,1,0,2,0.54,0,0
2830_15,15,24,"if (cdi.getName() != null && !cdi.getName().isEmpty()) {
for (CardHelpers.IndividualSetInfo isi : cdi.mInfo) {
cdi.applyIndividualInfo(isi);
String cardString = cdi.toWishlistString();
if (cdi.isSideboard()) {
cardString = ""SB:"" + cardString;
}
fos.write(cardString.getBytes());
}
}",1,0,0,0,0,0,0,0,0,6,3,10,0,0,0,0,6,2,1,0,2,0.54,0,0
2830_16,16,23,"for (CardHelpers.IndividualSetInfo isi : cdi.mInfo) {
cdi.applyIndividualInfo(isi);
String cardString = cdi.toWishlistString();
if (cdi.isSideboard()) {
cardString = ""SB:"" + cardString;
}
fos.write(cardString.getBytes());
}",0,0,0,1,0,0,0,0,0,5,2,8,0,0,0,0,6,2,1,0,2,0.57,0,0
2830_17,17,17,cdi.applyIndividualInfo(isi);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,1,0,0,0.36,1,1
2830_18,18,18,String cardString = cdi.toWishlistString();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,1,0,1,0.52,0,0
2830_19,19,21,"if (cdi.isSideboard()) {
cardString = ""SB:"" + cardString;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,2,1,0,2,0.61,0,0
2830_20,20,20,"cardString = ""SB:"" + cardString;",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.61,1,0
2830_22,22,22,fos.write(cardString.getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,1,0,1,0.52,3,2
2830_26,26,26,fos.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,1,0,0,0.31,7,3
2830_27,27,27,} catch (IOException ioe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.19,8,3
2830_28,28,28,"SnackbarWrapper.makeAndShowText(activity, ioe.getLocalizedMessage(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.37,9,4
2831_1,1,1,throws FamiliarDbException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,9,3,3,0,1,0.37,5,3
2831_3,3,3,ArrayList<MtgCard> lDecklist = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,9,3,3,0,0,0.34,3,2
2831_5,5,26,"try {
String line;
deckName = sanitizeFilename(deckName);
try (BufferedReader br = new BufferedReader(new InputStreamReader(activity.openFileInput(deckName)))) {
boolean isSideboard;
while ((line = br.readLine()) != null) {
isSideboard = false;
String sideboard = line.substring(0, 3);
if (sideboard.equals(""SB:"")) {
isSideboard = true;
line = line.substring(3);
}
MtgCard card = MtgCard.fromWishlistString(line, isSideboard, activity);
if (null != card) {
lDecklist.add(card);
}
}
}
} catch (NumberFormatException nfe) {
SnackbarWrapper.makeAndShowText(activity, nfe.getLocalizedMessage(), SnackbarWrapper.LENGTH_LONG);
} catch (IOException ioe) {
}",0,0,0,0,1,0,0,0,0,16,4,22,0,0,1,1,9,3,3,0,1,0.42,0,0
2831_6,6,6,String line;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,9,3,3,0,0,0.31,0,0
2831_7,7,7,deckName = sanitizeFilename(deckName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,3,0,1,0.42,0,0
2831_8,8,22,"try (BufferedReader br = new BufferedReader(new InputStreamReader(activity.openFileInput(deckName)))) {
boolean isSideboard;
while ((line = br.readLine()) != null) {
isSideboard = false;
String sideboard = line.substring(0, 3);
if (sideboard.equals(""SB:"")) {
isSideboard = true;
line = line.substring(3);
}
MtgCard card = MtgCard.fromWishlistString(line, isSideboard, activity);
if (null != card) {
lDecklist.add(card);
}
}
}",0,0,0,0,1,0,0,0,0,10,3,15,0,0,0,0,9,3,3,0,0,0.36,1,0
2831_9,9,9,boolean isSideboard;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,3,3,0,0,0.26,2,1
2831_10,10,21,"while ((line = br.readLine()) != null) {
isSideboard = false;
String sideboard = line.substring(0, 3);
if (sideboard.equals(""SB:"")) {
isSideboard = true;
line = line.substring(3);
}
MtgCard card = MtgCard.fromWishlistString(line, isSideboard, activity);
if (null != card) {
lDecklist.add(card);
}
}",0,1,0,0,0,0,0,0,0,8,2,12,0,1,0,0,9,3,3,0,0,0.34,3,2
2831_11,11,11,isSideboard = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,3,0,0,0.19,4,3
2831_12,12,12,"String sideboard = line.substring(0, 3);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,9,3,3,0,0,0.28,5,4
2831_13,13,16,"if (sideboard.equals(""SB:"")) {
isSideboard = true;
line = line.substring(3);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,9,3,3,0,0,0.31,6,5
2831_14,14,14,isSideboard = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,3,0,0,0.19,7,6
2831_15,15,15,line = line.substring(3);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,3,0,0,0.29,8,7
2831_17,17,17,"MtgCard card = MtgCard.fromWishlistString(line, isSideboard, activity);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,3,3,0,0,0.34,10,9
2831_18,18,20,"if (null != card) {
lDecklist.add(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,9,3,3,0,0,0.33,11,9
2831_19,19,19,lDecklist.add(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,3,0,0,0.33,12,10
2831_23,23,23,} catch (NumberFormatException nfe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,3,0,0,0.41,16,12
2831_24,24,24,"SnackbarWrapper.makeAndShowText(activity, nfe.getLocalizedMessage(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,3,0,0,0.31,17,12
2831_25,25,25,} catch (IOException ioe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,3,0,0,0.47,18,13
2831_28,28,30,"if (loadFullData && !lDecklist.isEmpty()) {
MtgCard.initCardListFromDb(activity, lDecklist);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,9,3,3,0,1,0.41,21,15
2831_29,29,29,"MtgCard.initCardListFromDb(activity, lDecklist);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,3,0,0,0.34,22,15
2831_31,31,31,return lDecklist;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,9,3,3,0,0,0.31,24,17
2832_1,1,1,throws FamiliarDbException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,6,3,1,0,0,0.24,8,6
2832_3,3,3,ArrayList<MtgCard> lDecklist = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,3,1,0,3,0.73,6,5
2832_5,5,26,"try {
String line;
deckName = sanitizeFilename(deckName);
try (BufferedReader br = new BufferedReader(new InputStreamReader(activity.openFileInput(deckName)))) {
boolean isSideboard;
while ((line = br.readLine()) != null) {
isSideboard = false;
String sideboard = line.substring(0, 3);
if (sideboard.equals(""SB:"")) {
isSideboard = true;
line = line.substring(3);
}
MtgCard card = MtgCard.fromWishlistString(line, isSideboard, activity);
if (null != card) {
lDecklist.add(card);
}
}
}
} catch (NumberFormatException nfe) {
SnackbarWrapper.makeAndShowText(activity, nfe.getLocalizedMessage(), SnackbarWrapper.LENGTH_LONG);
} catch (IOException ioe) {
}",0,0,0,0,1,0,0,0,0,16,4,22,0,0,1,1,6,3,1,0,4,0.65,0,0
2832_6,6,6,String line;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.54,3,3
2832_7,7,7,deckName = sanitizeFilename(deckName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.39,2,2
2832_8,8,22,"try (BufferedReader br = new BufferedReader(new InputStreamReader(activity.openFileInput(deckName)))) {
boolean isSideboard;
while ((line = br.readLine()) != null) {
isSideboard = false;
String sideboard = line.substring(0, 3);
if (sideboard.equals(""SB:"")) {
isSideboard = true;
line = line.substring(3);
}
MtgCard card = MtgCard.fromWishlistString(line, isSideboard, activity);
if (null != card) {
lDecklist.add(card);
}
}
}",0,0,0,0,1,0,0,0,0,10,3,15,0,0,0,0,6,3,1,0,4,0.69,0,0
2832_9,9,9,boolean isSideboard;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.24,0,0
2832_10,10,21,"while ((line = br.readLine()) != null) {
isSideboard = false;
String sideboard = line.substring(0, 3);
if (sideboard.equals(""SB:"")) {
isSideboard = true;
line = line.substring(3);
}
MtgCard card = MtgCard.fromWishlistString(line, isSideboard, activity);
if (null != card) {
lDecklist.add(card);
}
}",0,1,0,0,0,0,0,0,0,8,2,12,0,1,0,0,6,3,1,0,4,0.73,0,0
2832_11,11,11,isSideboard = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.16,1,0
2832_12,12,12,"String sideboard = line.substring(0, 3);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,3,1,0,1,0.48,2,1
2832_13,13,16,"if (sideboard.equals(""SB:"")) {
isSideboard = true;
line = line.substring(3);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,6,3,1,0,1,0.51,3,2
2832_14,14,14,isSideboard = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.2,4,3
2832_15,15,15,line = line.substring(3);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.58,5,4
2832_17,17,17,"MtgCard card = MtgCard.fromWishlistString(line, isSideboard, activity);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,2,0.66,7,6
2832_18,18,20,"if (null != card) {
lDecklist.add(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,1,0,2,0.61,8,6
2832_19,19,19,lDecklist.add(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,2,0.64,9,7
2832_23,23,23,} catch (NumberFormatException nfe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.29,13,9
2832_24,24,24,"SnackbarWrapper.makeAndShowText(activity, nfe.getLocalizedMessage(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.36,14,9
2832_25,25,25,} catch (IOException ioe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.21,15,10
2832_28,28,30,"if (loadFullData && !lDecklist.isEmpty()) {
MtgCard.initCardListFromDb(activity, lDecklist);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,6,3,1,0,2,0.57,18,12
2832_29,29,29,"MtgCard.initCardListFromDb(activity, lDecklist);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,2,0.61,19,12
2832_31,31,31,return lDecklist;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,6,3,1,0,0,0.25,21,14
2833_1,1,1,throws FamiliarDbException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,7,5,1,0,0,0.31,11,9
2833_3,3,3,ArrayList<MtgCard> lDecklist = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,5,1,0,1,0.49,9,8
2833_5,5,26,"try {
String line;
deckName = sanitizeFilename(deckName);
try (BufferedReader br = new BufferedReader(new InputStreamReader(activity.openFileInput(deckName)))) {
boolean isSideboard;
while ((line = br.readLine()) != null) {
isSideboard = false;
String sideboard = line.substring(0, 3);
if (sideboard.equals(""SB:"")) {
isSideboard = true;
line = line.substring(3);
}
MtgCard card = MtgCard.fromWishlistString(line, isSideboard, activity);
if (null != card) {
lDecklist.add(card);
}
}
}
} catch (NumberFormatException nfe) {
SnackbarWrapper.makeAndShowText(activity, nfe.getLocalizedMessage(), SnackbarWrapper.LENGTH_LONG);
} catch (IOException ioe) {
}",0,0,0,0,1,0,0,0,0,16,4,22,0,0,1,1,7,5,1,0,2,0.49,0,0
2833_6,6,6,String line;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.21,6,6
2833_7,7,7,deckName = sanitizeFilename(deckName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.31,5,5
2833_8,8,22,"try (BufferedReader br = new BufferedReader(new InputStreamReader(activity.openFileInput(deckName)))) {
boolean isSideboard;
while ((line = br.readLine()) != null) {
isSideboard = false;
String sideboard = line.substring(0, 3);
if (sideboard.equals(""SB:"")) {
isSideboard = true;
line = line.substring(3);
}
MtgCard card = MtgCard.fromWishlistString(line, isSideboard, activity);
if (null != card) {
lDecklist.add(card);
}
}
}",0,0,0,0,1,0,0,0,0,10,3,15,0,0,0,0,7,5,1,0,2,0.51,0,0
2833_9,9,9,boolean isSideboard;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.36,3,3
2833_10,10,21,"while ((line = br.readLine()) != null) {
isSideboard = false;
String sideboard = line.substring(0, 3);
if (sideboard.equals(""SB:"")) {
isSideboard = true;
line = line.substring(3);
}
MtgCard card = MtgCard.fromWishlistString(line, isSideboard, activity);
if (null != card) {
lDecklist.add(card);
}
}",0,1,0,0,0,0,0,0,0,8,2,12,0,1,0,0,7,5,1,0,2,0.53,0,0
2833_11,11,11,isSideboard = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.28,1,1
2833_12,12,12,"String sideboard = line.substring(0, 3);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,7,5,1,0,1,0.28,0,0
2833_13,13,16,"if (sideboard.equals(""SB:"")) {
isSideboard = true;
line = line.substring(3);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,7,5,1,0,1,0.32,0,0
2833_14,14,14,isSideboard = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.31,1,0
2833_15,15,15,line = line.substring(3);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.28,2,1
2833_17,17,17,"MtgCard card = MtgCard.fromWishlistString(line, isSideboard, activity);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,1,0,2,0.58,4,3
2833_18,18,20,"if (null != card) {
lDecklist.add(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,5,1,0,1,0.57,5,3
2833_19,19,19,lDecklist.add(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.57,6,4
2833_23,23,23,} catch (NumberFormatException nfe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.2,10,6
2833_24,24,24,"SnackbarWrapper.makeAndShowText(activity, nfe.getLocalizedMessage(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.37,11,6
2833_25,25,25,} catch (IOException ioe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.19,12,7
2833_28,28,30,"if (loadFullData && !lDecklist.isEmpty()) {
MtgCard.initCardListFromDb(activity, lDecklist);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,7,5,1,0,1,0.54,15,9
2833_29,29,29,"MtgCard.initCardListFromDb(activity, lDecklist);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.59,16,9
2833_31,31,31,return lDecklist;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,7,5,1,0,0,0.29,18,11
6224_1,1,1,"    public static void appendToLogFile(StringBuilder sb, String methodName) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.44,0,0
6224_2,2,21,"if (mLoggingEnabled && null != mExternalFileDirPath &&
Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {

File logFile = new File(mExternalFileDirPath, DB_LOG_FILE_NAME);
if (!logFile.exists()) {
try {
logFile.createNewFile();
logDeviceInfo();
} catch (IOException e) {
e.printStackTrace();
}
}

try (FileWriter logWriter = new FileWriter(logFile, true)) {
logWriter.write(""Date : "" + (new Date()).toString() + '\n');
logWriter.write(""From : "" + methodName + '\n');
logWriter.write(sb.toString() + ""\n\n"");
} catch (IOException e) {
}
}",1,0,0,0,0,0,0,0,0,13,3,20,0,0,0,0,3,2,0,0,2,0.63,0,0
6224_3,3,3,Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.36,1,0
6224_5,5,5,"File logFile = new File(mExternalFileDirPath, DB_LOG_FILE_NAME);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.52,3,2
6224_6,6,13,"if (!logFile.exists()) {
try {
logFile.createNewFile();
logDeviceInfo();
} catch (IOException e) {
e.printStackTrace();
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,1,3,2,0,0,2,0.66,4,2
6224_7,7,12,"try {
logFile.createNewFile();
logDeviceInfo();
} catch (IOException e) {
e.printStackTrace();
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,0,0,3,2,0,0,2,0.66,5,3
6224_8,8,8,logFile.createNewFile();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.52,6,4
6224_9,9,9,logDeviceInfo();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.58,7,5
6224_10,10,10,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.52,8,6
6224_11,11,11,e.printStackTrace();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.41,9,7
6224_15,15,20,"try (FileWriter logWriter = new FileWriter(logFile, true)) {
logWriter.write(""Date : "" + (new Date()).toString() + '\n');
logWriter.write(""From : "" + methodName + '\n');
logWriter.write(sb.toString() + ""\n\n"");
} catch (IOException e) {
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,1,0,3,2,0,0,2,0.61,13,9
6224_16,16,16,"logWriter.write(""Date : "" + (new Date()).toString() + '\n');",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,1,0.45,14,9
6224_17,17,17,"logWriter.write(""From : "" + methodName + '\n');",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,1,0.46,15,10
6224_18,18,18,"logWriter.write(sb.toString() + ""\n\n"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,1,0.44,16,11
6224_19,19,19,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.52,17,12
6225_1,1,1,"    public static void appendToLogFile(StringBuilder sb, String methodName) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.41,3,2
6225_2,2,21,"if (mLoggingEnabled && null != mExternalFileDirPath &&
Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {

File logFile = new File(mExternalFileDirPath, DB_LOG_FILE_NAME);
if (!logFile.exists()) {
try {
logFile.createNewFile();
logDeviceInfo();
} catch (IOException e) {
e.printStackTrace();
}
}

try (FileWriter logWriter = new FileWriter(logFile, true)) {
logWriter.write(""Date : "" + (new Date()).toString() + '\n');
logWriter.write(""From : "" + methodName + '\n');
logWriter.write(sb.toString() + ""\n\n"");
} catch (IOException e) {
}
}",1,0,0,0,0,0,0,0,0,13,3,20,0,0,0,0,5,4,1,0,3,0.59,0,0
6225_3,3,3,Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.38,1,0
6225_5,5,5,"File logFile = new File(mExternalFileDirPath, DB_LOG_FILE_NAME);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,1,0,1,0.44,0,0
6225_6,6,13,"if (!logFile.exists()) {
try {
logFile.createNewFile();
logDeviceInfo();
} catch (IOException e) {
e.printStackTrace();
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,1,5,4,1,0,3,0.63,1,0
6225_7,7,12,"try {
logFile.createNewFile();
logDeviceInfo();
} catch (IOException e) {
e.printStackTrace();
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,0,0,5,4,1,0,2,0.54,2,1
6225_8,8,8,logFile.createNewFile();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.42,3,2
6225_9,9,9,logDeviceInfo();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,2,0.67,4,3
6225_10,10,10,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.41,5,4
6225_11,11,11,e.printStackTrace();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.39,6,5
6225_15,15,20,"try (FileWriter logWriter = new FileWriter(logFile, true)) {
logWriter.write(""Date : "" + (new Date()).toString() + '\n');
logWriter.write(""From : "" + methodName + '\n');
logWriter.write(sb.toString() + ""\n\n"");
} catch (IOException e) {
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,1,0,5,4,1,0,1,0.42,10,7
6225_16,16,16,"logWriter.write(""Date : "" + (new Date()).toString() + '\n');",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,1,0,1,0.37,11,7
6225_17,17,17,"logWriter.write(""From : "" + methodName + '\n');",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,1,0,1,0.35,12,8
6225_18,18,18,"logWriter.write(sb.toString() + ""\n\n"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,1,0,1,0.36,13,9
6225_19,19,19,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.41,14,10
6226_1,1,1,"    public static void appendToLogFile(StringBuilder sb, String methodName) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.67,13,9
6226_2,2,21,"if (mLoggingEnabled && null != mExternalFileDirPath &&
Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {

File logFile = new File(mExternalFileDirPath, DB_LOG_FILE_NAME);
if (!logFile.exists()) {
try {
logFile.createNewFile();
logDeviceInfo();
} catch (IOException e) {
e.printStackTrace();
}
}

try (FileWriter logWriter = new FileWriter(logFile, true)) {
logWriter.write(""Date : "" + (new Date()).toString() + '\n');
logWriter.write(""From : "" + methodName + '\n');
logWriter.write(sb.toString() + ""\n\n"");
} catch (IOException e) {
}
}",1,0,0,0,0,0,0,0,0,13,3,20,0,0,0,0,3,2,0,0,1,0.6,0,0
6226_3,3,3,Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.37,11,7
6226_5,5,5,"File logFile = new File(mExternalFileDirPath, DB_LOG_FILE_NAME);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.55,9,6
6226_6,6,13,"if (!logFile.exists()) {
try {
logFile.createNewFile();
logDeviceInfo();
} catch (IOException e) {
e.printStackTrace();
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,1,3,2,0,0,1,0.54,1,0
6226_7,7,12,"try {
logFile.createNewFile();
logDeviceInfo();
} catch (IOException e) {
e.printStackTrace();
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,0,0,3,2,0,0,1,0.53,2,0
6226_8,8,8,logFile.createNewFile();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.54,6,3
6226_9,9,9,logDeviceInfo();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.55,5,2
6226_10,10,10,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.45,4,1
6226_11,11,11,e.printStackTrace();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.4,3,0
6226_15,15,20,"try (FileWriter logWriter = new FileWriter(logFile, true)) {
logWriter.write(""Date : "" + (new Date()).toString() + '\n');
logWriter.write(""From : "" + methodName + '\n');
logWriter.write(sb.toString() + ""\n\n"");
} catch (IOException e) {
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,1,0,3,2,0,0,1,0.6,0,0
6226_16,16,16,"logWriter.write(""Date : "" + (new Date()).toString() + '\n');",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,1,0.58,1,0
6226_17,17,17,"logWriter.write(""From : "" + methodName + '\n');",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,1,0.52,2,1
6226_18,18,18,"logWriter.write(sb.toString() + ""\n\n"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,1,0.61,3,2
6226_19,19,19,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.45,4,3
6227_1,1,1,"    public static void appendToLogFile(StringBuilder sb, String methodName) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.0,14,10
6227_2,2,21,"if (mLoggingEnabled && null != mExternalFileDirPath &&
Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {

File logFile = new File(mExternalFileDirPath, DB_LOG_FILE_NAME);
if (!logFile.exists()) {
try {
logFile.createNewFile();
logDeviceInfo();
} catch (IOException e) {
e.printStackTrace();
}
}

try (FileWriter logWriter = new FileWriter(logFile, true)) {
logWriter.write(""Date : "" + (new Date()).toString() + '\n');
logWriter.write(""From : "" + methodName + '\n');
logWriter.write(sb.toString() + ""\n\n"");
} catch (IOException e) {
}
}",1,0,0,0,0,0,0,0,0,13,3,20,0,0,0,0,1,1,0,0,0,0.0,0,0
6227_3,3,3,Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.0,12,8
6227_5,5,5,"File logFile = new File(mExternalFileDirPath, DB_LOG_FILE_NAME);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,1,1,0,0,0,0.0,10,7
6227_6,6,13,"if (!logFile.exists()) {
try {
logFile.createNewFile();
logDeviceInfo();
} catch (IOException e) {
e.printStackTrace();
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,1,1,1,0,0,0,0.0,2,1
6227_7,7,12,"try {
logFile.createNewFile();
logDeviceInfo();
} catch (IOException e) {
e.printStackTrace();
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,0,0,1,1,0,0,0,0.0,3,1
6227_8,8,8,logFile.createNewFile();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.0,7,4
6227_9,9,9,logDeviceInfo();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.0,6,3
6227_10,10,10,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.0,5,2
6227_11,11,11,e.printStackTrace();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.0,4,1
6227_15,15,20,"try (FileWriter logWriter = new FileWriter(logFile, true)) {
logWriter.write(""Date : "" + (new Date()).toString() + '\n');
logWriter.write(""From : "" + methodName + '\n');
logWriter.write(sb.toString() + ""\n\n"");
} catch (IOException e) {
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,1,0,1,1,0,0,0,0.0,0,0
6227_16,16,16,"logWriter.write(""Date : "" + (new Date()).toString() + '\n');",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0.0,0,0
6227_17,17,17,"logWriter.write(""From : "" + methodName + '\n');",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0.0,1,0
6227_18,18,18,"logWriter.write(sb.toString() + ""\n\n"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0.0,2,1
6227_19,19,19,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.0,3,2
6228_1,1,1,    private static void logDeviceInfo() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.5,0,0
6228_2,2,2,"appendToLogFile(new StringBuilder(""Android SDK: "").append(Build.VERSION.SDK_INT)",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,2,0.6,0,0
6228_3,3,3,".append("", Manufacturer: "").append(Build.MANUFACTURER)",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,1,0.53,1,0
6228_4,4,4,".append("", Model: "").append(Build.MODEL), ""SYS Info"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,4,0,0,1,0.52,2,1
6228_6,6,15,"try (BufferedReader br = new BufferedReader(new InputStreamReader(
new ProcessBuilder(""/system/bin/cat"", ""/proc/cpuinfo"").start().getInputStream()))) {
String line;
StringBuilder sb = new StringBuilder(""/proc/cpuinfo\n"");
while (null != (line = br.readLine())) {
sb.append(line).append('\n');
}
appendToLogFile(sb, ""CPU Info"");
} catch (IOException e) {
}",0,0,0,0,1,0,0,0,0,7,2,10,0,0,1,1,4,4,0,0,1,0.43,4,3
6228_7,7,7,"new ProcessBuilder(""/system/bin/cat"", ""/proc/cpuinfo"").start().getInputStream()))) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.35,5,3
6228_8,8,8,String line;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.19,6,4
6228_9,9,9,"StringBuilder sb = new StringBuilder(""/proc/cpuinfo\n"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.23,7,5
6228_10,10,12,"while (null != (line = br.readLine())) {
sb.append(line).append('\n');
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,4,0,0,0,0.22,8,6
6228_11,11,11,sb.append(line).append('\n');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.22,9,7
6228_13,13,13,"appendToLogFile(sb, ""CPU Info"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.46,11,9
6228_14,14,14,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.4,12,9
6228_17,17,26,"try (BufferedReader br = new BufferedReader(new InputStreamReader(
new ProcessBuilder(""/system/bin/cat"", ""/proc/meminfo"").start().getInputStream()))) {
String line;
StringBuilder sb = new StringBuilder(""/proc/meminfo\n"");
while (null != (line = br.readLine())) {
sb.append(line).append('\n');
}
appendToLogFile(sb, ""MEM Info"");
} catch (IOException e) {
}",0,0,0,0,1,0,0,0,0,7,2,10,0,0,1,0,4,4,0,0,1,0.45,15,11
6228_18,18,18,"new ProcessBuilder(""/system/bin/cat"", ""/proc/meminfo"").start().getInputStream()))) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.35,16,11
6228_19,19,19,String line;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.19,17,12
6228_20,20,20,"StringBuilder sb = new StringBuilder(""/proc/meminfo\n"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.23,18,13
6228_21,21,23,"while (null != (line = br.readLine())) {
sb.append(line).append('\n');
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,4,0,0,0,0.22,19,14
6228_22,22,22,sb.append(line).append('\n');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.22,20,15
6228_24,24,24,"appendToLogFile(sb, ""MEM Info"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.51,22,17
6228_25,25,25,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.4,23,17
6229_1,1,1,    private static void logDeviceInfo() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.69,4,3
6229_2,2,2,"appendToLogFile(new StringBuilder(""Android SDK: "").append(Build.VERSION.SDK_INT)",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.5,3,2
6229_3,3,3,".append("", Manufacturer: "").append(Build.MANUFACTURER)",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.23,2,1
6229_4,4,4,".append("", Model: "").append(Build.MODEL), ""SYS Info"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,3,0,0,1,0.49,1,0
6229_6,6,15,"try (BufferedReader br = new BufferedReader(new InputStreamReader(
new ProcessBuilder(""/system/bin/cat"", ""/proc/cpuinfo"").start().getInputStream()))) {
String line;
StringBuilder sb = new StringBuilder(""/proc/cpuinfo\n"");
while (null != (line = br.readLine())) {
sb.append(line).append('\n');
}
appendToLogFile(sb, ""CPU Info"");
} catch (IOException e) {
}",0,0,0,0,1,0,0,0,0,7,2,10,0,0,1,1,3,3,0,0,3,0.7,0,0
6229_7,7,7,"new ProcessBuilder(""/system/bin/cat"", ""/proc/cpuinfo"").start().getInputStream()))) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.4,1,0
6229_8,8,8,String line;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.26,2,1
6229_9,9,9,"StringBuilder sb = new StringBuilder(""/proc/cpuinfo\n"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.29,3,2
6229_10,10,12,"while (null != (line = br.readLine())) {
sb.append(line).append('\n');
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,0,0.33,4,3
6229_11,11,11,sb.append(line).append('\n');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,5,4
6229_13,13,13,"appendToLogFile(sb, ""CPU Info"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,3,0.84,7,6
6229_14,14,14,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.45,8,6
6229_17,17,26,"try (BufferedReader br = new BufferedReader(new InputStreamReader(
new ProcessBuilder(""/system/bin/cat"", ""/proc/meminfo"").start().getInputStream()))) {
String line;
StringBuilder sb = new StringBuilder(""/proc/meminfo\n"");
while (null != (line = br.readLine())) {
sb.append(line).append('\n');
}
appendToLogFile(sb, ""MEM Info"");
} catch (IOException e) {
}",0,0,0,0,1,0,0,0,0,7,2,10,0,0,1,0,3,3,0,0,2,0.66,11,8
6229_18,18,18,"new ProcessBuilder(""/system/bin/cat"", ""/proc/meminfo"").start().getInputStream()))) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.4,12,8
6229_19,19,19,String line;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.26,13,9
6229_20,20,20,"StringBuilder sb = new StringBuilder(""/proc/meminfo\n"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.29,14,10
6229_21,21,23,"while (null != (line = br.readLine())) {
sb.append(line).append('\n');
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,0,0.33,15,11
6229_22,22,22,sb.append(line).append('\n');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,16,12
6229_24,24,24,"appendToLogFile(sb, ""MEM Info"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,2,0.78,18,14
6229_25,25,25,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.45,19,14
6230_1,1,1,    private static void logDeviceInfo() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,2,0.68,15,11
6230_2,2,2,"appendToLogFile(new StringBuilder(""Android SDK: "").append(Build.VERSION.SDK_INT)",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,1,0,1,0.49,14,10
6230_3,3,3,".append("", Manufacturer: "").append(Build.MANUFACTURER)",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,1,0,0,0.17,13,9
6230_4,4,4,".append("", Model: "").append(Build.MODEL), ""SYS Info"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,2,1,0,1,0.44,12,8
6230_6,6,15,"try (BufferedReader br = new BufferedReader(new InputStreamReader(
new ProcessBuilder(""/system/bin/cat"", ""/proc/cpuinfo"").start().getInputStream()))) {
String line;
StringBuilder sb = new StringBuilder(""/proc/cpuinfo\n"");
while (null != (line = br.readLine())) {
sb.append(line).append('\n');
}
appendToLogFile(sb, ""CPU Info"");
} catch (IOException e) {
}",0,0,0,0,1,0,0,0,0,7,2,10,0,0,1,1,3,2,1,0,2,0.57,1,0
6230_7,7,7,"new ProcessBuilder(""/system/bin/cat"", ""/proc/cpuinfo"").start().getInputStream()))) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.32,9,6
6230_8,8,8,String line;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.14,8,5
6230_9,9,9,"StringBuilder sb = new StringBuilder(""/proc/cpuinfo\n"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.24,7,4
6230_10,10,12,"while (null != (line = br.readLine())) {
sb.append(line).append('\n');
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,2,1,0,0,0.24,4,2
6230_11,11,11,sb.append(line).append('\n');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.22,5,2
6230_13,13,13,"appendToLogFile(sb, ""CPU Info"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,2,0.71,3,1
6230_14,14,14,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.44,2,0
6230_17,17,26,"try (BufferedReader br = new BufferedReader(new InputStreamReader(
new ProcessBuilder(""/system/bin/cat"", ""/proc/meminfo"").start().getInputStream()))) {
String line;
StringBuilder sb = new StringBuilder(""/proc/meminfo\n"");
while (null != (line = br.readLine())) {
sb.append(line).append('\n');
}
appendToLogFile(sb, ""MEM Info"");
} catch (IOException e) {
}",0,0,0,0,1,0,0,0,0,7,2,10,0,0,1,0,3,2,1,0,2,0.58,0,0
6230_18,18,18,"new ProcessBuilder(""/system/bin/cat"", ""/proc/meminfo"").start().getInputStream()))) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.32,1,0
6230_19,19,19,String line;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.14,2,1
6230_20,20,20,"StringBuilder sb = new StringBuilder(""/proc/meminfo\n"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.24,3,2
6230_21,21,23,"while (null != (line = br.readLine())) {
sb.append(line).append('\n');
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,2,1,0,0,0.24,4,3
6230_22,22,22,sb.append(line).append('\n');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.22,5,4
6230_24,24,24,"appendToLogFile(sb, ""MEM Info"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,2,0.72,7,6
6230_25,25,25,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.44,8,6
6231_1,1,1,private static void shareLog(FamiliarActivity activity) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.47,2,2
6231_2,2,18,"try (BufferedReader br = new BufferedReader(new FileReader(
new File(activity.getExternalFilesDir(null), DB_LOG_FILE_NAME)))) {
StringBuilder sb = new StringBuilder();
String line;
while (null != (line = br.readLine())) {
sb.append(line).append('\n');
}

ShareCompat.IntentBuilder.from(activity)
.setType(""message/rfc822"")
.addEmailTo(""mtg.familiar@gmail.com"")
.setSubject(activity.getString(R.string.logging_database_log))
.setText(sb.toString())
.setChooserTitle(activity.getString(R.string.logging_send_database_log))
.startChooser();
} catch (IOException e) {
}",0,0,0,0,1,0,0,0,0,13,2,17,0,0,0,0,5,5,0,0,4,0.69,0,0
6231_3,3,3,"new File(activity.getExternalFilesDir(null), DB_LOG_FILE_NAME)))) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.62,0,0
6231_4,4,4,StringBuilder sb = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.51,0,0
6231_5,5,5,String line;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.51,1,0
6231_6,6,8,"while (null != (line = br.readLine())) {
sb.append(line).append('\n');
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,1,5,5,0,0,1,0.46,2,1
6231_7,7,7,sb.append(line).append('\n');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.38,3,2
6231_10,10,10,ShareCompat.IntentBuilder.from(activity),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,0,0.28,6,4
6231_11,11,11,".setType(""message/rfc822"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.23,7,4
6231_12,12,12,".addEmailTo(""mtg.familiar@gmail.com"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.38,8,5
6231_13,13,13,.setSubject(activity.getString(R.string.logging_database_log)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.59,9,6
6231_14,14,14,.setText(sb.toString()),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.46,10,7
6231_15,15,15,.setChooserTitle(activity.getString(R.string.logging_send_database_log)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.58,11,8
6231_16,16,16,.startChooser();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.23,12,9
6231_17,17,17,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.39,13,10
6232_1,1,1,private static void shareLog(FamiliarActivity activity) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.5,8,6
6232_2,2,18,"try (BufferedReader br = new BufferedReader(new FileReader(
new File(activity.getExternalFilesDir(null), DB_LOG_FILE_NAME)))) {
StringBuilder sb = new StringBuilder();
String line;
while (null != (line = br.readLine())) {
sb.append(line).append('\n');
}

ShareCompat.IntentBuilder.from(activity)
.setType(""message/rfc822"")
.addEmailTo(""mtg.familiar@gmail.com"")
.setSubject(activity.getString(R.string.logging_database_log))
.setText(sb.toString())
.setChooserTitle(activity.getString(R.string.logging_send_database_log))
.startChooser();
} catch (IOException e) {
}",0,0,0,0,1,0,0,0,0,13,2,17,0,0,0,0,5,5,0,0,4,0.63,0,0
6232_3,3,3,"new File(activity.getExternalFilesDir(null), DB_LOG_FILE_NAME)))) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.43,6,4
6232_4,4,4,StringBuilder sb = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.29,5,3
6232_5,5,5,String line;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.3,4,2
6232_6,6,8,"while (null != (line = br.readLine())) {
sb.append(line).append('\n');
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,1,5,5,0,0,0,0.26,1,0
6232_7,7,7,sb.append(line).append('\n');,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.24,2,0
6232_10,10,10,ShareCompat.IntentBuilder.from(activity),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,1,0.44,0,0
6232_11,11,11,".setType(""message/rfc822"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.36,1,0
6232_12,12,12,".addEmailTo(""mtg.familiar@gmail.com"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.54,2,1
6232_13,13,13,.setSubject(activity.getString(R.string.logging_database_log)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.51,3,2
6232_14,14,14,.setText(sb.toString()),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.27,4,3
6232_15,15,15,.setChooserTitle(activity.getString(R.string.logging_send_database_log)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.58,5,4
6232_16,16,16,.startChooser();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.24,6,5
6232_17,17,17,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.39,7,6
6233_1,1,1,"    public static Dialog createDialog(FamiliarActivity familiarActivity, MaterialDialog.Builder builder) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.3,8,7
6233_2,2,2,builder.title(R.string.logging_title);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.47,7,6
6233_3,3,3,builder.positiveText(R.string.dialog_ok);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.28,6,5
6233_5,5,5,LayoutInflater inflater = familiarActivity.getLayoutInflater();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.3,4,4
6233_6,6,6,"@SuppressLint(""InflateParams"") View dialogLayout = inflater.inflate(R.layout.activity_dialog_logging, null, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.55,3,3
6233_7,7,7,assert dialogLayout != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.35,2,2
6233_8,8,8,((SwitchCompat) dialogLayout.findViewById(R.id.logging_switch)).setChecked(PreferenceAdapter.getLoggingPref(familiarActivity));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,1,0.55,1,1
6233_9,9,9,"((SwitchCompat) dialogLayout.findViewById(R.id.logging_switch)).setOnCheckedChangeListener((buttonView, isChecked) -> {",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,1,0.53,0,0
6233_10,10,12,"if (!isChecked) {
new File(mExternalFileDirPath, DB_LOG_FILE_NAME).delete();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,4,0,0,2,0.62,0,0
6233_11,11,11,"new File(mExternalFileDirPath, DB_LOG_FILE_NAME).delete();",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.64,1,0
6233_13,13,13,"PreferenceAdapter.setLoggingPref(familiarActivity, isChecked);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.57,3,2
6233_14,14,14,mLoggingEnabled = isChecked;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.64,4,2
6233_16,16,16,dialogLayout.findViewById(R.id.export_db).setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.36,6,4
6233_17,17,17,familiarActivity.removeDialogFragment(familiarActivity.getSupportFragmentManager());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.36,7,4
6233_18,18,18,FamiliarLogger.exportDatabase(familiarActivity);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.41,8,5
6233_20,20,20,dialogLayout.findViewById(R.id.share_log).setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.5,10,7
6233_21,21,21,familiarActivity.removeDialogFragment(familiarActivity.getSupportFragmentManager());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.36,11,7
6233_22,22,22,FamiliarLogger.shareLog(familiarActivity);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.59,12,8
6233_24,24,24,"builder.customView(dialogLayout, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.36,14,10
6233_25,25,25,return builder.build();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.18,15,10
6234_1,1,1,"    public static Dialog createDialog(FamiliarActivity familiarActivity, MaterialDialog.Builder builder) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.31,11,9
6234_2,2,2,builder.title(R.string.logging_title);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.4,10,8
6234_3,3,3,builder.positiveText(R.string.dialog_ok);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.33,9,7
6234_5,5,5,LayoutInflater inflater = familiarActivity.getLayoutInflater();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.45,7,6
6234_6,6,6,"@SuppressLint(""InflateParams"") View dialogLayout = inflater.inflate(R.layout.activity_dialog_logging, null, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.44,6,5
6234_7,7,7,assert dialogLayout != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.33,5,4
6234_8,8,8,((SwitchCompat) dialogLayout.findViewById(R.id.logging_switch)).setChecked(PreferenceAdapter.getLoggingPref(familiarActivity));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,1,0.55,4,3
6234_9,9,9,"((SwitchCompat) dialogLayout.findViewById(R.id.logging_switch)).setOnCheckedChangeListener((buttonView, isChecked) -> {",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.4,3,2
6234_10,10,12,"if (!isChecked) {
new File(mExternalFileDirPath, DB_LOG_FILE_NAME).delete();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,2,0,0,0,0.24,0,0
6234_11,11,11,"new File(mExternalFileDirPath, DB_LOG_FILE_NAME).delete();",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.24,1,0
6234_13,13,13,"PreferenceAdapter.setLoggingPref(familiarActivity, isChecked);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.59,0,0
6234_14,14,14,mLoggingEnabled = isChecked;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.32,1,0
6234_16,16,16,dialogLayout.findViewById(R.id.export_db).setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.37,3,2
6234_17,17,17,familiarActivity.removeDialogFragment(familiarActivity.getSupportFragmentManager());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.38,4,2
6234_18,18,18,FamiliarLogger.exportDatabase(familiarActivity);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,5,3
6234_20,20,20,dialogLayout.findViewById(R.id.share_log).setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.44,7,5
6234_21,21,21,familiarActivity.removeDialogFragment(familiarActivity.getSupportFragmentManager());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.38,8,5
6234_22,22,22,FamiliarLogger.shareLog(familiarActivity);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.48,9,6
6234_24,24,24,"builder.customView(dialogLayout, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.31,11,8
6234_25,25,25,return builder.build();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.17,12,8
10_1,1,1,"    public static Spanned formatStringWithGlyphs(String source, ImageGetter imageGetter) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,2,0.53,0,0
10_2,2,4,"if (source == null) {
return new SpannedString("""");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,2,1,0,2,0.61,0,0
10_3,3,3,"return new SpannedString("""");",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.55,1,0
10_5,5,5,"source = source.replace(""{"", ""<img src=\"""").replace(""}"", ""\""/>"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.35,3,2
10_6,6,6,"return Html.fromHtml(source, imageGetter, null);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.43,4,2
11_1,1,1,    public static Spanned formatHtmlString(String source) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,2,0.6,0,0
11_2,2,4,"if (source == null) {
return new SpannedString("""");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,2,1,0,2,0.61,0,0
11_3,3,3,"return new SpannedString("""");",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.55,1,0
11_5,5,5,return Html.fromHtml(source);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.37,3,2
1972_1,1,1,"public AccessToken getAccessToken(String publicKey, String privateKey, String accessToken)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,2,0.56,2,1
1972_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,5,3,0,0,0,0.26,1,0
1972_4,4,38,"if (null == mAccessToken) {
HttpURLConnection conn = (HttpURLConnection)
new URL(""https://api.tcgplayer.com/token"").openConnection();
setDefaultOptions(conn, HttpMethod.POST);

conn.setRequestProperty(""Content-Type"", ""application/json"");
conn.setRequestProperty(""Accept"", ""application/json"");
conn.setRequestProperty(""X-Tcg-Access-Token"", accessToken);

String payload = ""grant_type=client_credentials&client_id="" + publicKey +
""&client_secret="" + privateKey;
conn.getOutputStream().write(payload.getBytes(StandardCharsets.UTF_8));

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new AccessToken();
}
}

GsonBuilder builder = new GsonBuilder();
AccessToken.setDateFormat(builder);
AccessToken token = builder.create()
.fromJson(new InputStreamReader(inStream), AccessToken.class);
this.mAccessToken = token.access_token;

inStream.close();
conn.disconnect();

return token;
}",1,0,0,0,0,0,0,0,0,22,3,35,0,0,1,1,5,3,0,0,3,0.59,0,0
1972_5,5,6,"HttpURLConnection conn = (HttpURLConnection)
new URL(""https://api.tcgplayer.com/token"").openConnection();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,3,0,0,1,0.45,1,0
1972_7,7,7,"setDefaultOptions(conn, HttpMethod.POST);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,0,0,0,0.33,3,2
1972_9,9,9,"conn.setRequestProperty(""Content-Type"", ""application/json"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,5,3,0,0,1,0.4,5,3
1972_10,10,10,"conn.setRequestProperty(""Accept"", ""application/json"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,3,0,0,1,0.41,6,3
1972_11,11,11,"conn.setRequestProperty(""X-Tcg-Access-Token"", accessToken);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,5,3,0,0,3,0.68,7,4
1972_13,13,14,"String payload = ""grant_type=client_credentials&client_id="" + publicKey +
""&client_secret="" + privateKey;",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,5,3,0,0,0,0.34,9,6
1972_15,15,15,conn.getOutputStream().write(payload.getBytes(StandardCharsets.UTF_8));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,0,0,0,0.34,11,7
1972_17,17,17,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,0,0,0,0.23,13,8
1972_18,18,26,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new AccessToken();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,5,3,0,0,2,0.5,14,8
1972_19,19,19,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.31,15,9
1972_20,20,20,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.3,16,10
1972_21,21,21,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.29,17,11
1972_22,22,25,"if (null == inStream) {
conn.disconnect();
return new AccessToken();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,3,0,0,2,0.54,18,12
1972_23,23,23,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.3,19,13
1972_24,24,24,return new AccessToken();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,2,0.62,20,14
1972_28,28,28,GsonBuilder builder = new GsonBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,0,0,0,0.27,24,16
1972_29,29,29,AccessToken.setDateFormat(builder);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.54,25,16
1972_30,30,31,"AccessToken token = builder.create()
.fromJson(new InputStreamReader(inStream), AccessToken.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,3,0,0,2,0.58,26,17
1972_32,32,32,this.mAccessToken = token.access_token;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,0,0,2,0.74,28,19
1972_34,34,34,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,0,0,0,0.15,30,20
1972_35,35,35,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,0,0,0,0.3,31,20
1972_37,37,37,return token;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,3,0,0,1,0.53,33,22
1972_40,40,40,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,3,0,0,0,0.27,36,23
1973_1,1,1,"public AccessToken getAccessToken(String publicKey, String privateKey, String accessToken)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.34,3,2
1973_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,4,4,0,0,0,0.29,2,1
1973_4,4,38,"if (null == mAccessToken) {
HttpURLConnection conn = (HttpURLConnection)
new URL(""https://api.tcgplayer.com/token"").openConnection();
setDefaultOptions(conn, HttpMethod.POST);

conn.setRequestProperty(""Content-Type"", ""application/json"");
conn.setRequestProperty(""Accept"", ""application/json"");
conn.setRequestProperty(""X-Tcg-Access-Token"", accessToken);

String payload = ""grant_type=client_credentials&client_id="" + publicKey +
""&client_secret="" + privateKey;
conn.getOutputStream().write(payload.getBytes(StandardCharsets.UTF_8));

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new AccessToken();
}
}

GsonBuilder builder = new GsonBuilder();
AccessToken.setDateFormat(builder);
AccessToken token = builder.create()
.fromJson(new InputStreamReader(inStream), AccessToken.class);
this.mAccessToken = token.access_token;

inStream.close();
conn.disconnect();

return token;
}",1,0,0,0,0,0,0,0,0,22,3,35,0,0,1,1,4,4,0,0,4,0.69,0,0
1973_5,5,6,"HttpURLConnection conn = (HttpURLConnection)
new URL(""https://api.tcgplayer.com/token"").openConnection();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,4,0,0,1,0.55,0,0
1973_7,7,7,"setDefaultOptions(conn, HttpMethod.POST);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,4,0,0,2,0.65,2,1
1973_9,9,9,"conn.setRequestProperty(""Content-Type"", ""application/json"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,4,4,0,0,0,0.34,4,2
1973_10,10,10,"conn.setRequestProperty(""Accept"", ""application/json"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,0,0.34,5,2
1973_11,11,11,"conn.setRequestProperty(""X-Tcg-Access-Token"", accessToken);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,4,0,0,0,0.36,6,3
1973_13,13,14,"String payload = ""grant_type=client_credentials&client_id="" + publicKey +
""&client_secret="" + privateKey;",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,4,4,0,0,0,0.35,8,5
1973_15,15,15,conn.getOutputStream().write(payload.getBytes(StandardCharsets.UTF_8));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,4,0,0,0,0.44,10,6
1973_17,17,17,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.32,12,7
1973_18,18,26,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new AccessToken();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,4,4,0,0,0,0.45,13,7
1973_19,19,19,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.41,14,8
1973_20,20,20,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.26,15,9
1973_21,21,21,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.39,16,10
1973_22,22,25,"if (null == inStream) {
conn.disconnect();
return new AccessToken();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,4,4,0,0,0,0.44,17,11
1973_23,23,23,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.45,18,12
1973_24,24,24,return new AccessToken();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.35,19,13
1973_28,28,28,GsonBuilder builder = new GsonBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.38,23,15
1973_29,29,29,AccessToken.setDateFormat(builder);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.33,24,15
1973_30,30,31,"AccessToken token = builder.create()
.fromJson(new InputStreamReader(inStream), AccessToken.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,4,0,0,1,0.45,25,16
1973_32,32,32,this.mAccessToken = token.access_token;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,4,0,0,0,0.29,27,18
1973_34,34,34,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.4,29,19
1973_35,35,35,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.45,30,19
1973_37,37,37,return token;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.27,32,21
1973_40,40,40,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.25,35,22
1974_1,1,1,"public AccessToken getAccessToken(String publicKey, String privateKey, String accessToken)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.48,7,4
1974_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,5,2,1,0,0,0.33,6,3
1974_4,4,38,"if (null == mAccessToken) {
HttpURLConnection conn = (HttpURLConnection)
new URL(""https://api.tcgplayer.com/token"").openConnection();
setDefaultOptions(conn, HttpMethod.POST);

conn.setRequestProperty(""Content-Type"", ""application/json"");
conn.setRequestProperty(""Accept"", ""application/json"");
conn.setRequestProperty(""X-Tcg-Access-Token"", accessToken);

String payload = ""grant_type=client_credentials&client_id="" + publicKey +
""&client_secret="" + privateKey;
conn.getOutputStream().write(payload.getBytes(StandardCharsets.UTF_8));

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new AccessToken();
}
}

GsonBuilder builder = new GsonBuilder();
AccessToken.setDateFormat(builder);
AccessToken token = builder.create()
.fromJson(new InputStreamReader(inStream), AccessToken.class);
this.mAccessToken = token.access_token;

inStream.close();
conn.disconnect();

return token;
}",1,0,0,0,0,0,0,0,0,22,3,35,0,0,1,1,5,2,1,0,3,0.63,0,0
1974_5,5,6,"HttpURLConnection conn = (HttpURLConnection)
new URL(""https://api.tcgplayer.com/token"").openConnection();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,2,1,0,1,0.47,2,1
1974_7,7,7,"setDefaultOptions(conn, HttpMethod.POST);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,2,1,0,1,0.5,1,0
1974_9,9,9,"conn.setRequestProperty(""Content-Type"", ""application/json"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,5,2,1,0,2,0.57,0,0
1974_10,10,10,"conn.setRequestProperty(""Accept"", ""application/json"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,1,0,2,0.59,1,0
1974_11,11,11,"conn.setRequestProperty(""X-Tcg-Access-Token"", accessToken);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,5,2,1,0,3,0.71,2,1
1974_13,13,14,"String payload = ""grant_type=client_credentials&client_id="" + publicKey +
""&client_secret="" + privateKey;",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,5,2,1,0,0,0.33,4,3
1974_15,15,15,conn.getOutputStream().write(payload.getBytes(StandardCharsets.UTF_8));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,2,1,0,0,0.39,6,4
1974_17,17,17,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,0,0.31,8,5
1974_18,18,26,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new AccessToken();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,5,2,1,0,1,0.45,9,5
1974_19,19,19,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.36,10,6
1974_20,20,20,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.33,11,7
1974_21,21,21,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.34,12,8
1974_22,22,25,"if (null == inStream) {
conn.disconnect();
return new AccessToken();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,2,1,0,1,0.44,13,9
1974_23,23,23,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.34,14,10
1974_24,24,24,return new AccessToken();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.45,15,11
1974_28,28,28,GsonBuilder builder = new GsonBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,0,0.27,19,13
1974_29,29,29,AccessToken.setDateFormat(builder);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,2,0.64,20,13
1974_30,30,31,"AccessToken token = builder.create()
.fromJson(new InputStreamReader(inStream), AccessToken.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,2,1,0,1,0.49,21,14
1974_32,32,32,this.mAccessToken = token.access_token;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,2,1,0,1,0.6,23,16
1974_34,34,34,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,0,0.24,25,17
1974_35,35,35,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,1,0,0,0.34,26,17
1974_37,37,37,return token;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,2,1,0,1,0.48,28,19
1974_40,40,40,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,2,1,0,0,0.21,31,20
1975_1,1,1,"public AccessToken getAccessToken(String publicKey, String privateKey, String accessToken)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.27,11,7
1975_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,4,2,1,0,0,0.29,10,6
1975_4,4,38,"if (null == mAccessToken) {
HttpURLConnection conn = (HttpURLConnection)
new URL(""https://api.tcgplayer.com/token"").openConnection();
setDefaultOptions(conn, HttpMethod.POST);

conn.setRequestProperty(""Content-Type"", ""application/json"");
conn.setRequestProperty(""Accept"", ""application/json"");
conn.setRequestProperty(""X-Tcg-Access-Token"", accessToken);

String payload = ""grant_type=client_credentials&client_id="" + publicKey +
""&client_secret="" + privateKey;
conn.getOutputStream().write(payload.getBytes(StandardCharsets.UTF_8));

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new AccessToken();
}
}

GsonBuilder builder = new GsonBuilder();
AccessToken.setDateFormat(builder);
AccessToken token = builder.create()
.fromJson(new InputStreamReader(inStream), AccessToken.class);
this.mAccessToken = token.access_token;

inStream.close();
conn.disconnect();

return token;
}",1,0,0,0,0,0,0,0,0,22,3,35,0,0,1,1,4,2,1,0,2,0.53,0,0
1975_5,5,6,"HttpURLConnection conn = (HttpURLConnection)
new URL(""https://api.tcgplayer.com/token"").openConnection();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,2,1,0,0,0.39,6,4
1975_7,7,7,"setDefaultOptions(conn, HttpMethod.POST);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,2,0.62,5,3
1975_9,9,9,"conn.setRequestProperty(""Content-Type"", ""application/json"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,4,2,1,0,1,0.5,3,2
1975_10,10,10,"conn.setRequestProperty(""Accept"", ""application/json"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,1,0.5,2,1
1975_11,11,11,"conn.setRequestProperty(""X-Tcg-Access-Token"", accessToken);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,2,1,0,1,0.49,1,0
1975_13,13,14,"String payload = ""grant_type=client_credentials&client_id="" + publicKey +
""&client_secret="" + privateKey;",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,4,2,1,0,0,0.32,0,0
1975_15,15,15,conn.getOutputStream().write(payload.getBytes(StandardCharsets.UTF_8));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.35,2,1
1975_17,17,17,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.22,4,2
1975_18,18,26,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new AccessToken();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,4,2,1,0,0,0.33,5,2
1975_19,19,19,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.33,6,3
1975_20,20,20,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.23,7,4
1975_21,21,21,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.32,8,5
1975_22,22,25,"if (null == inStream) {
conn.disconnect();
return new AccessToken();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,4,2,1,0,0,0.33,9,6
1975_23,23,23,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.4,10,7
1975_24,24,24,return new AccessToken();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.25,11,8
1975_28,28,28,GsonBuilder builder = new GsonBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.26,15,10
1975_29,29,29,AccessToken.setDateFormat(builder);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.48,16,10
1975_30,30,31,"AccessToken token = builder.create()
.fromJson(new InputStreamReader(inStream), AccessToken.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,2,1,0,0,0.3,17,11
1975_32,32,32,this.mAccessToken = token.access_token;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.25,19,13
1975_34,34,34,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.25,21,14
1975_35,35,35,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.4,22,14
1975_37,37,37,return token;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.15,24,16
1975_40,40,40,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.13,27,17
1976_1,1,1,"public AccessToken getAccessToken(String publicKey, String privateKey, String accessToken)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,1,0.46,15,9
1976_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,3,1,2,0,0,0.45,14,8
1976_4,4,38,"if (null == mAccessToken) {
HttpURLConnection conn = (HttpURLConnection)
new URL(""https://api.tcgplayer.com/token"").openConnection();
setDefaultOptions(conn, HttpMethod.POST);

conn.setRequestProperty(""Content-Type"", ""application/json"");
conn.setRequestProperty(""Accept"", ""application/json"");
conn.setRequestProperty(""X-Tcg-Access-Token"", accessToken);

String payload = ""grant_type=client_credentials&client_id="" + publicKey +
""&client_secret="" + privateKey;
conn.getOutputStream().write(payload.getBytes(StandardCharsets.UTF_8));

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new AccessToken();
}
}

GsonBuilder builder = new GsonBuilder();
AccessToken.setDateFormat(builder);
AccessToken token = builder.create()
.fromJson(new InputStreamReader(inStream), AccessToken.class);
this.mAccessToken = token.access_token;

inStream.close();
conn.disconnect();

return token;
}",1,0,0,0,0,0,0,0,0,22,3,35,0,0,1,1,3,1,2,0,2,0.66,0,0
1976_5,5,6,"HttpURLConnection conn = (HttpURLConnection)
new URL(""https://api.tcgplayer.com/token"").openConnection();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,3,1,2,0,0,0.47,10,6
1976_7,7,7,"setDefaultOptions(conn, HttpMethod.POST);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,1,2,0,0,0.44,9,5
1976_9,9,9,"conn.setRequestProperty(""Content-Type"", ""application/json"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,3,1,2,0,0,0.41,7,4
1976_10,10,10,"conn.setRequestProperty(""Accept"", ""application/json"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,2,0,0,0.42,6,3
1976_11,11,11,"conn.setRequestProperty(""X-Tcg-Access-Token"", accessToken);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,3,1,2,0,0,0.41,5,2
1976_13,13,14,"String payload = ""grant_type=client_credentials&client_id="" + publicKey +
""&client_secret="" + privateKey;",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,3,1,2,0,0,0.36,2,1
1976_15,15,15,conn.getOutputStream().write(payload.getBytes(StandardCharsets.UTF_8));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,1,2,0,2,0.75,1,0
1976_17,17,17,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,1,2,0,1,0.64,0,0
1976_18,18,26,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new AccessToken();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,3,1,2,0,2,0.73,1,0
1976_19,19,19,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,2,0.86,2,1
1976_20,20,20,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.36,3,2
1976_21,21,21,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,2,0,2,0.86,4,3
1976_22,22,25,"if (null == inStream) {
conn.disconnect();
return new AccessToken();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,3,1,2,0,1,0.56,5,4
1976_23,23,23,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.51,6,5
1976_24,24,24,return new AccessToken();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.29,7,6
1976_28,28,28,GsonBuilder builder = new GsonBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,1,2,0,0,0.19,11,8
1976_29,29,29,AccessToken.setDateFormat(builder);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,2,0,0,0.3,12,8
1976_30,30,31,"AccessToken token = builder.create()
.fromJson(new InputStreamReader(inStream), AccessToken.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,3,1,2,0,1,0.48,13,9
1976_32,32,32,this.mAccessToken = token.access_token;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,1,2,0,0,0.27,15,11
1976_34,34,34,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,2,0,1,0.64,17,12
1976_35,35,35,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,1,2,0,0,0.51,18,12
1976_37,37,37,return token;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,1,2,0,0,0.21,20,14
1976_40,40,40,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,1,2,0,0,0.23,23,15
1977_1,1,1,"public AccessToken getAccessToken(String publicKey, String privateKey, String accessToken)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.35,22,16
1977_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,4,2,0,0,0,0.34,21,15
1977_4,4,38,"if (null == mAccessToken) {
HttpURLConnection conn = (HttpURLConnection)
new URL(""https://api.tcgplayer.com/token"").openConnection();
setDefaultOptions(conn, HttpMethod.POST);

conn.setRequestProperty(""Content-Type"", ""application/json"");
conn.setRequestProperty(""Accept"", ""application/json"");
conn.setRequestProperty(""X-Tcg-Access-Token"", accessToken);

String payload = ""grant_type=client_credentials&client_id="" + publicKey +
""&client_secret="" + privateKey;
conn.getOutputStream().write(payload.getBytes(StandardCharsets.UTF_8));

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new AccessToken();
}
}

GsonBuilder builder = new GsonBuilder();
AccessToken.setDateFormat(builder);
AccessToken token = builder.create()
.fromJson(new InputStreamReader(inStream), AccessToken.class);
this.mAccessToken = token.access_token;

inStream.close();
conn.disconnect();

return token;
}",1,0,0,0,0,0,0,0,0,22,3,35,0,0,1,1,4,2,0,0,2,0.52,0,0
1977_5,5,6,"HttpURLConnection conn = (HttpURLConnection)
new URL(""https://api.tcgplayer.com/token"").openConnection();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,2,0,0,0,0.29,17,13
1977_7,7,7,"setDefaultOptions(conn, HttpMethod.POST);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,0,0.28,16,12
1977_9,9,9,"conn.setRequestProperty(""Content-Type"", ""application/json"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,4,2,0,0,0,0.29,14,11
1977_10,10,10,"conn.setRequestProperty(""Accept"", ""application/json"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,0,0,0,0.3,13,10
1977_11,11,11,"conn.setRequestProperty(""X-Tcg-Access-Token"", accessToken);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,2,0,0,0,0.29,12,9
1977_13,13,14,"String payload = ""grant_type=client_credentials&client_id="" + publicKey +
""&client_secret="" + privateKey;",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,4,2,0,0,0,0.35,9,8
1977_15,15,15,conn.getOutputStream().write(payload.getBytes(StandardCharsets.UTF_8));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,0,0.31,8,7
1977_17,17,17,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,0,0,0,0.17,6,6
1977_18,18,26,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new AccessToken();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,4,2,0,0,2,0.52,0,0
1977_19,19,19,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.24,4,4
1977_20,20,20,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.31,3,3
1977_21,21,21,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.27,2,2
1977_22,22,25,"if (null == inStream) {
conn.disconnect();
return new AccessToken();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,4,2,0,0,2,0.58,0,0
1977_23,23,23,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.25,0,0
1977_24,24,24,return new AccessToken();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.52,0,0
1977_28,28,28,GsonBuilder builder = new GsonBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,0,0,0,0.11,4,1
1977_29,29,29,AccessToken.setDateFormat(builder);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.3,5,1
1977_30,30,31,"AccessToken token = builder.create()
.fromJson(new InputStreamReader(inStream), AccessToken.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,2,0,0,0,0.3,6,2
1977_32,32,32,this.mAccessToken = token.access_token;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,0,0.28,8,4
1977_34,34,34,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.23,10,5
1977_35,35,35,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.25,11,5
1977_37,37,37,return token;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,0,0,1,0.58,13,7
1977_40,40,40,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,0,0,2,0.83,16,8
1978_1,1,1,"public AccessToken getAccessToken(String publicKey, String privateKey, String accessToken)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.39,26,17
1978_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,4,2,1,0,0,0.38,25,16
1978_4,4,38,"if (null == mAccessToken) {
HttpURLConnection conn = (HttpURLConnection)
new URL(""https://api.tcgplayer.com/token"").openConnection();
setDefaultOptions(conn, HttpMethod.POST);

conn.setRequestProperty(""Content-Type"", ""application/json"");
conn.setRequestProperty(""Accept"", ""application/json"");
conn.setRequestProperty(""X-Tcg-Access-Token"", accessToken);

String payload = ""grant_type=client_credentials&client_id="" + publicKey +
""&client_secret="" + privateKey;
conn.getOutputStream().write(payload.getBytes(StandardCharsets.UTF_8));

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new AccessToken();
}
}

GsonBuilder builder = new GsonBuilder();
AccessToken.setDateFormat(builder);
AccessToken token = builder.create()
.fromJson(new InputStreamReader(inStream), AccessToken.class);
this.mAccessToken = token.access_token;

inStream.close();
conn.disconnect();

return token;
}",1,0,0,0,0,0,0,0,0,22,3,35,0,0,1,1,4,2,1,0,1,0.52,0,0
1978_5,5,6,"HttpURLConnection conn = (HttpURLConnection)
new URL(""https://api.tcgplayer.com/token"").openConnection();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,2,1,0,0,0.43,21,14
1978_7,7,7,"setDefaultOptions(conn, HttpMethod.POST);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.4,20,13
1978_9,9,9,"conn.setRequestProperty(""Content-Type"", ""application/json"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,4,2,1,0,1,0.51,18,12
1978_10,10,10,"conn.setRequestProperty(""Accept"", ""application/json"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,1,0.54,17,11
1978_11,11,11,"conn.setRequestProperty(""X-Tcg-Access-Token"", accessToken);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,2,1,0,0,0.39,16,10
1978_13,13,14,"String payload = ""grant_type=client_credentials&client_id="" + publicKey +
""&client_secret="" + privateKey;",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,4,2,1,0,0,0.4,13,9
1978_15,15,15,conn.getOutputStream().write(payload.getBytes(StandardCharsets.UTF_8));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.46,12,8
1978_17,17,17,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.27,10,7
1978_18,18,26,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new AccessToken();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,4,2,1,0,0,0.41,1,0
1978_19,19,19,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.38,8,5
1978_20,20,20,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.32,7,4
1978_21,21,21,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.4,6,3
1978_22,22,25,"if (null == inStream) {
conn.disconnect();
return new AccessToken();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,4,2,1,0,0,0.39,2,0
1978_23,23,23,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.45,4,1
1978_24,24,24,return new AccessToken();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.27,3,0
1978_28,28,28,GsonBuilder builder = new GsonBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.33,0,0
1978_29,29,29,AccessToken.setDateFormat(builder);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.39,1,0
1978_30,30,31,"AccessToken token = builder.create()
.fromJson(new InputStreamReader(inStream), AccessToken.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,2,1,0,1,0.43,2,1
1978_32,32,32,this.mAccessToken = token.access_token;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.26,4,3
1978_34,34,34,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.35,6,4
1978_35,35,35,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.45,7,4
1978_37,37,37,return token;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.24,9,6
1978_40,40,40,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.26,12,7
1979_1,1,1,"public AccessToken getAccessToken(String publicKey, String privateKey, String accessToken)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.23,32,21
1979_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,1,1,0,0,0,0.3,31,20
1979_4,4,38,"if (null == mAccessToken) {
HttpURLConnection conn = (HttpURLConnection)
new URL(""https://api.tcgplayer.com/token"").openConnection();
setDefaultOptions(conn, HttpMethod.POST);

conn.setRequestProperty(""Content-Type"", ""application/json"");
conn.setRequestProperty(""Accept"", ""application/json"");
conn.setRequestProperty(""X-Tcg-Access-Token"", accessToken);

String payload = ""grant_type=client_credentials&client_id="" + publicKey +
""&client_secret="" + privateKey;
conn.getOutputStream().write(payload.getBytes(StandardCharsets.UTF_8));

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new AccessToken();
}
}

GsonBuilder builder = new GsonBuilder();
AccessToken.setDateFormat(builder);
AccessToken token = builder.create()
.fromJson(new InputStreamReader(inStream), AccessToken.class);
this.mAccessToken = token.access_token;

inStream.close();
conn.disconnect();

return token;
}",1,0,0,0,0,0,0,0,0,22,3,35,0,0,1,1,1,1,0,0,0,0.31,0,0
1979_5,5,6,"HttpURLConnection conn = (HttpURLConnection)
new URL(""https://api.tcgplayer.com/token"").openConnection();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,1,1,0,0,0,0.31,27,18
1979_7,7,7,"setDefaultOptions(conn, HttpMethod.POST);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,0,0,0,0.26,26,17
1979_9,9,9,"conn.setRequestProperty(""Content-Type"", ""application/json"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,0,0,0,0.24,24,16
1979_10,10,10,"conn.setRequestProperty(""Accept"", ""application/json"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,0,0,0,0.24,23,15
1979_11,11,11,"conn.setRequestProperty(""X-Tcg-Access-Token"", accessToken);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,0,0,0,0.23,22,14
1979_13,13,14,"String payload = ""grant_type=client_credentials&client_id="" + publicKey +
""&client_secret="" + privateKey;",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,1,1,0,0,0,0.23,19,13
1979_15,15,15,conn.getOutputStream().write(payload.getBytes(StandardCharsets.UTF_8));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,0,0,0,0.35,18,12
1979_17,17,17,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,1,1,0,0,0,0.24,16,11
1979_18,18,26,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new AccessToken();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,1,1,0,0,0,0.32,7,4
1979_19,19,19,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.24,14,9
1979_20,20,20,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.35,13,8
1979_21,21,21,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.23,12,7
1979_22,22,25,"if (null == inStream) {
conn.disconnect();
return new AccessToken();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,1,1,0,0,0,0.22,8,4
1979_23,23,23,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.19,10,5
1979_24,24,24,return new AccessToken();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.17,9,4
1979_28,28,28,GsonBuilder builder = new GsonBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,1,1,0,0,0,0.14,5,3
1979_29,29,29,AccessToken.setDateFormat(builder);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.15,4,2
1979_30,30,31,"AccessToken token = builder.create()
.fromJson(new InputStreamReader(inStream), AccessToken.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,1,1,0,0,0,0.22,2,1
1979_32,32,32,this.mAccessToken = token.access_token;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,0,0,0,0.17,1,0
1979_34,34,34,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0.25,0,0
1979_35,35,35,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,0,0.19,1,0
1979_37,37,37,return token;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0.1,3,2
1979_40,40,40,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0.14,6,3
1980_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,1,0,0,0.29,0,0
1980_2,2,35,"if (null != mAccessToken) {

StringBuilder stringIds = new StringBuilder();
for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}

HttpURLConnection conn = (HttpURLConnection) new URL(
""https://api.tcgplayer.com/"" + TCGP_VERSION + ""/pricing/product/"" +
stringIds.toString()).openConnection();
setDefaultOptions(conn, HttpMethod.GET);
addHeaders(conn);

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductMarketPrice();
}
}

ProductMarketPrice price = new Gson()
.fromJson(new InputStreamReader(inStream), ProductMarketPrice.class);

inStream.close();
conn.disconnect();
return price;
}",1,0,0,0,0,0,0,0,0,20,3,34,0,0,0,0,5,2,1,0,2,0.47,0,0
1980_4,4,4,StringBuilder stringIds = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,0,0.29,2,1
1980_5,5,10,"for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,1,5,2,1,0,0,0.28,3,1
1980_6,6,8,"if (stringIds.length() > 0) {
stringIds.append(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,2,1,0,0,0.27,4,2
1980_7,7,7,"stringIds.append(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.25,5,3
1980_9,9,9,stringIds.append(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,1,0,0,0.24,7,5
1980_12,12,14,"HttpURLConnection conn = (HttpURLConnection) new URL(
""https://api.tcgplayer.com/"" + TCGP_VERSION + ""/pricing/product/"" +
stringIds.toString()).openConnection();",0,0,0,0,0,1,0,0,0,0,0,3,0,1,1,0,5,2,1,0,0,0.35,10,6
1980_15,15,15,"setDefaultOptions(conn, HttpMethod.GET);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.32,13,7
1980_16,16,16,addHeaders(conn);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,2,1,0,0,0.26,14,7
1980_18,18,18,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,0,0.3,16,9
1980_19,19,27,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductMarketPrice();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,5,2,1,0,0,0.33,17,9
1980_20,20,20,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.32,18,10
1980_21,21,21,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.32,19,11
1980_22,22,22,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.28,20,12
1980_23,23,26,"if (null == inStream) {
conn.disconnect();
return new ProductMarketPrice();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,2,1,0,0,0.33,21,13
1980_24,24,24,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.25,22,14
1980_25,25,25,return new ProductMarketPrice();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.32,23,15
1980_29,29,30,"ProductMarketPrice price = new Gson()
.fromJson(new InputStreamReader(inStream), ProductMarketPrice.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,5,2,1,0,0,0.35,27,17
1980_32,32,32,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,0,0.21,30,18
1980_33,33,33,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.25,31,18
1980_34,34,34,return price;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.26,32,19
1980_36,36,36,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.23,34,21
1981_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,1,0,0,0.36,2,1
1981_2,2,35,"if (null != mAccessToken) {

StringBuilder stringIds = new StringBuilder();
for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}

HttpURLConnection conn = (HttpURLConnection) new URL(
""https://api.tcgplayer.com/"" + TCGP_VERSION + ""/pricing/product/"" +
stringIds.toString()).openConnection();
setDefaultOptions(conn, HttpMethod.GET);
addHeaders(conn);

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductMarketPrice();
}
}

ProductMarketPrice price = new Gson()
.fromJson(new InputStreamReader(inStream), ProductMarketPrice.class);

inStream.close();
conn.disconnect();
return price;
}",1,0,0,0,0,0,0,0,0,20,3,34,0,0,0,0,5,2,1,0,2,0.6,0,0
1981_4,4,4,StringBuilder stringIds = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,1,0.6,0,0
1981_5,5,10,"for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,1,5,2,1,0,2,0.61,1,0
1981_6,6,8,"if (stringIds.length() > 0) {
stringIds.append(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,2,1,0,1,0.55,2,1
1981_7,7,7,"stringIds.append(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.56,3,2
1981_9,9,9,stringIds.append(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,1,0,1,0.53,5,4
1981_12,12,14,"HttpURLConnection conn = (HttpURLConnection) new URL(
""https://api.tcgplayer.com/"" + TCGP_VERSION + ""/pricing/product/"" +
stringIds.toString()).openConnection();",0,0,0,0,0,1,0,0,0,0,0,3,0,1,1,0,5,2,1,0,2,0.6,8,5
1981_15,15,15,"setDefaultOptions(conn, HttpMethod.GET);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.38,11,6
1981_16,16,16,addHeaders(conn);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,2,1,0,0,0.33,12,6
1981_18,18,18,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,0,0.34,14,8
1981_19,19,27,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductMarketPrice();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,5,2,1,0,1,0.49,15,8
1981_20,20,20,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.39,16,9
1981_21,21,21,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.35,17,10
1981_22,22,22,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.39,18,11
1981_23,23,26,"if (null == inStream) {
conn.disconnect();
return new ProductMarketPrice();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,2,1,0,1,0.5,19,12
1981_24,24,24,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.3,20,13
1981_25,25,25,return new ProductMarketPrice();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.54,21,14
1981_29,29,30,"ProductMarketPrice price = new Gson()
.fromJson(new InputStreamReader(inStream), ProductMarketPrice.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,5,2,1,0,1,0.57,25,16
1981_32,32,32,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,0,0.33,28,17
1981_33,33,33,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.3,29,17
1981_34,34,34,return price;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.5,30,18
1981_36,36,36,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.29,32,20
1982_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,5,0,0,0,0.29,10,6
1982_2,2,35,"if (null != mAccessToken) {

StringBuilder stringIds = new StringBuilder();
for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}

HttpURLConnection conn = (HttpURLConnection) new URL(
""https://api.tcgplayer.com/"" + TCGP_VERSION + ""/pricing/product/"" +
stringIds.toString()).openConnection();
setDefaultOptions(conn, HttpMethod.GET);
addHeaders(conn);

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductMarketPrice();
}
}

ProductMarketPrice price = new Gson()
.fromJson(new InputStreamReader(inStream), ProductMarketPrice.class);

inStream.close();
conn.disconnect();
return price;
}",1,0,0,0,0,0,0,0,0,20,3,34,0,0,0,0,5,5,0,0,4,0.66,0,0
1982_4,4,4,StringBuilder stringIds = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,0,0.36,7,4
1982_5,5,10,"for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,1,5,5,0,0,0,0.32,1,0
1982_6,6,8,"if (stringIds.length() > 0) {
stringIds.append(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,5,0,0,0,0.3,3,1
1982_7,7,7,"stringIds.append(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.32,4,1
1982_9,9,9,stringIds.append(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,5,0,0,0,0.3,2,0
1982_12,12,14,"HttpURLConnection conn = (HttpURLConnection) new URL(
""https://api.tcgplayer.com/"" + TCGP_VERSION + ""/pricing/product/"" +
stringIds.toString()).openConnection();",0,0,0,0,0,1,0,0,0,0,0,3,0,1,1,0,5,5,0,0,1,0.53,0,0
1982_15,15,15,"setDefaultOptions(conn, HttpMethod.GET);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.65,3,1
1982_16,16,16,addHeaders(conn);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,1,0.58,4,1
1982_18,18,18,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,0,0.32,6,3
1982_19,19,27,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductMarketPrice();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,5,5,0,0,0,0.44,7,3
1982_20,20,20,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.41,8,4
1982_21,21,21,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.26,9,5
1982_22,22,22,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.4,10,6
1982_23,23,26,"if (null == inStream) {
conn.disconnect();
return new ProductMarketPrice();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,5,0,0,0,0.45,11,7
1982_24,24,24,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.46,12,8
1982_25,25,25,return new ProductMarketPrice();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.38,13,9
1982_29,29,30,"ProductMarketPrice price = new Gson()
.fromJson(new InputStreamReader(inStream), ProductMarketPrice.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,5,5,0,0,0,0.38,17,11
1982_32,32,32,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,0,0.4,20,12
1982_33,33,33,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.46,21,12
1982_34,34,34,return price;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.33,22,13
1982_36,36,36,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.24,24,15
1983_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,2,0,0,0.44,16,9
1983_2,2,35,"if (null != mAccessToken) {

StringBuilder stringIds = new StringBuilder();
for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}

HttpURLConnection conn = (HttpURLConnection) new URL(
""https://api.tcgplayer.com/"" + TCGP_VERSION + ""/pricing/product/"" +
stringIds.toString()).openConnection();
setDefaultOptions(conn, HttpMethod.GET);
addHeaders(conn);

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductMarketPrice();
}
}

ProductMarketPrice price = new Gson()
.fromJson(new InputStreamReader(inStream), ProductMarketPrice.class);

inStream.close();
conn.disconnect();
return price;
}",1,0,0,0,0,0,0,0,0,20,3,34,0,0,0,0,5,2,2,0,4,0.72,0,0
1983_4,4,4,StringBuilder stringIds = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,2,0,0,0.28,13,7
1983_5,5,10,"for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,1,5,2,2,0,0,0.34,7,3
1983_6,6,8,"if (stringIds.length() > 0) {
stringIds.append(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,2,2,0,0,0.32,9,4
1983_7,7,7,"stringIds.append(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.29,10,4
1983_9,9,9,stringIds.append(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,2,0,0,0.3,8,3
1983_12,12,14,"HttpURLConnection conn = (HttpURLConnection) new URL(
""https://api.tcgplayer.com/"" + TCGP_VERSION + ""/pricing/product/"" +
stringIds.toString()).openConnection();",0,0,0,0,0,1,0,0,0,0,0,3,0,1,1,0,5,2,2,0,2,0.65,3,2
1983_15,15,15,"setDefaultOptions(conn, HttpMethod.GET);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,2,0,1,0.61,2,1
1983_16,16,16,addHeaders(conn);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,2,2,0,0,0.51,1,0
1983_18,18,18,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,2,0,1,0.62,0,0
1983_19,19,27,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductMarketPrice();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,5,2,2,0,2,0.7,1,0
1983_20,20,20,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,2,0.82,2,1
1983_21,21,21,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.36,3,2
1983_22,22,22,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,2,0,2,0.82,4,3
1983_23,23,26,"if (null == inStream) {
conn.disconnect();
return new ProductMarketPrice();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,2,2,0,1,0.6,5,4
1983_24,24,24,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.59,6,5
1983_25,25,25,return new ProductMarketPrice();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.37,7,6
1983_29,29,30,"ProductMarketPrice price = new Gson()
.fromJson(new InputStreamReader(inStream), ProductMarketPrice.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,5,2,2,0,1,0.5,11,8
1983_32,32,32,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,2,0,1,0.68,14,9
1983_33,33,33,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.59,15,9
1983_34,34,34,return price;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.34,16,10
1983_36,36,36,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.24,18,12
1984_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,0,0,0,0.34,23,16
1984_2,2,35,"if (null != mAccessToken) {

StringBuilder stringIds = new StringBuilder();
for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}

HttpURLConnection conn = (HttpURLConnection) new URL(
""https://api.tcgplayer.com/"" + TCGP_VERSION + ""/pricing/product/"" +
stringIds.toString()).openConnection();
setDefaultOptions(conn, HttpMethod.GET);
addHeaders(conn);

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductMarketPrice();
}
}

ProductMarketPrice price = new Gson()
.fromJson(new InputStreamReader(inStream), ProductMarketPrice.class);

inStream.close();
conn.disconnect();
return price;
}",1,0,0,0,0,0,0,0,0,20,3,34,0,0,0,0,4,2,0,0,2,0.53,0,0
1984_4,4,4,StringBuilder stringIds = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,0,0,0,0.28,20,14
1984_5,5,10,"for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,1,4,2,0,0,0,0.33,14,10
1984_6,6,8,"if (stringIds.length() > 0) {
stringIds.append(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,2,0,0,0,0.33,16,11
1984_7,7,7,"stringIds.append(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.32,17,11
1984_9,9,9,stringIds.append(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,0,0,0,0.33,15,10
1984_12,12,14,"HttpURLConnection conn = (HttpURLConnection) new URL(
""https://api.tcgplayer.com/"" + TCGP_VERSION + ""/pricing/product/"" +
stringIds.toString()).openConnection();",0,0,0,0,0,1,0,0,0,0,0,3,0,1,1,0,4,2,0,0,0,0.31,10,9
1984_15,15,15,"setDefaultOptions(conn, HttpMethod.GET);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.29,9,8
1984_16,16,16,addHeaders(conn);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,0,0.26,8,7
1984_18,18,18,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,0,0,0,0.17,6,6
1984_19,19,27,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductMarketPrice();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,4,2,0,0,2,0.51,0,0
1984_20,20,20,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.24,4,4
1984_21,21,21,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.31,3,3
1984_22,22,22,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.27,2,2
1984_23,23,26,"if (null == inStream) {
conn.disconnect();
return new ProductMarketPrice();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,4,2,0,0,2,0.56,0,0
1984_24,24,24,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.25,0,0
1984_25,25,25,return new ProductMarketPrice();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.48,0,0
1984_29,29,30,"ProductMarketPrice price = new Gson()
.fromJson(new InputStreamReader(inStream), ProductMarketPrice.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,4,2,0,0,0,0.3,4,1
1984_32,32,32,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.23,7,2
1984_33,33,33,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.25,8,2
1984_34,34,34,return price;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.6,9,3
1984_36,36,36,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.83,11,5
1985_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,1,0,0,0.38,27,17
1985_2,2,35,"if (null != mAccessToken) {

StringBuilder stringIds = new StringBuilder();
for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}

HttpURLConnection conn = (HttpURLConnection) new URL(
""https://api.tcgplayer.com/"" + TCGP_VERSION + ""/pricing/product/"" +
stringIds.toString()).openConnection();
setDefaultOptions(conn, HttpMethod.GET);
addHeaders(conn);

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductMarketPrice();
}
}

ProductMarketPrice price = new Gson()
.fromJson(new InputStreamReader(inStream), ProductMarketPrice.class);

inStream.close();
conn.disconnect();
return price;
}",1,0,0,0,0,0,0,0,0,20,3,34,0,0,0,0,4,2,1,0,1,0.51,0,0
1985_4,4,4,StringBuilder stringIds = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.42,24,15
1985_5,5,10,"for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,1,4,2,1,0,0,0.39,18,11
1985_6,6,8,"if (stringIds.length() > 0) {
stringIds.append(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,2,1,0,0,0.39,20,12
1985_7,7,7,"stringIds.append(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.42,21,12
1985_9,9,9,stringIds.append(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.41,19,11
1985_12,12,14,"HttpURLConnection conn = (HttpURLConnection) new URL(
""https://api.tcgplayer.com/"" + TCGP_VERSION + ""/pricing/product/"" +
stringIds.toString()).openConnection();",0,0,0,0,0,1,0,0,0,0,0,3,0,1,1,0,4,2,1,0,0,0.46,14,10
1985_15,15,15,"setDefaultOptions(conn, HttpMethod.GET);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.41,13,9
1985_16,16,16,addHeaders(conn);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.43,12,8
1985_18,18,18,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.27,10,7
1985_19,19,27,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductMarketPrice();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,4,2,1,0,0,0.4,1,0
1985_20,20,20,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.38,8,5
1985_21,21,21,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.32,7,4
1985_22,22,22,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.4,6,3
1985_23,23,26,"if (null == inStream) {
conn.disconnect();
return new ProductMarketPrice();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,4,2,1,0,0,0.39,2,0
1985_24,24,24,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.45,4,1
1985_25,25,25,return new ProductMarketPrice();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.29,3,0
1985_29,29,30,"ProductMarketPrice price = new Gson()
.fromJson(new InputStreamReader(inStream), ProductMarketPrice.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,4,2,1,0,1,0.41,0,0
1985_32,32,32,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.35,3,1
1985_33,33,33,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.45,4,1
1985_34,34,34,return price;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.25,5,2
1985_36,36,36,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.26,7,4
1986_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0,0,0,0.3,30,18
1986_2,2,35,"if (null != mAccessToken) {

StringBuilder stringIds = new StringBuilder();
for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}

HttpURLConnection conn = (HttpURLConnection) new URL(
""https://api.tcgplayer.com/"" + TCGP_VERSION + ""/pricing/product/"" +
stringIds.toString()).openConnection();
setDefaultOptions(conn, HttpMethod.GET);
addHeaders(conn);

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductMarketPrice();
}
}

ProductMarketPrice price = new Gson()
.fromJson(new InputStreamReader(inStream), ProductMarketPrice.class);

inStream.close();
conn.disconnect();
return price;
}",1,0,0,0,0,0,0,0,0,20,3,34,0,0,0,0,1,1,0,0,0,0.32,0,0
1986_4,4,4,StringBuilder stringIds = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,1,1,0,0,0,0.16,27,16
1986_5,5,10,"for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,1,1,1,0,0,0,0.18,21,12
1986_6,6,8,"if (stringIds.length() > 0) {
stringIds.append(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,1,1,0,0,0,0.15,23,13
1986_7,7,7,"stringIds.append(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.16,24,13
1986_9,9,9,stringIds.append(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,0,0,0,0.16,22,12
1986_12,12,14,"HttpURLConnection conn = (HttpURLConnection) new URL(
""https://api.tcgplayer.com/"" + TCGP_VERSION + ""/pricing/product/"" +
stringIds.toString()).openConnection();",0,0,0,0,0,1,0,0,0,0,0,3,0,1,1,0,1,1,0,0,0,0.31,17,11
1986_15,15,15,"setDefaultOptions(conn, HttpMethod.GET);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.13,16,10
1986_16,16,16,addHeaders(conn);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,0,0,0,0.25,15,9
1986_18,18,18,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,1,1,0,0,0,0.24,13,8
1986_19,19,27,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductMarketPrice();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,1,1,0,0,0,0.32,4,1
1986_20,20,20,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.24,11,6
1986_21,21,21,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.35,10,5
1986_22,22,22,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.23,9,4
1986_23,23,26,"if (null == inStream) {
conn.disconnect();
return new ProductMarketPrice();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,1,1,0,0,0,0.27,5,1
1986_24,24,24,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.19,7,2
1986_25,25,25,return new ProductMarketPrice();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.27,6,1
1986_29,29,30,"ProductMarketPrice price = new Gson()
.fromJson(new InputStreamReader(inStream), ProductMarketPrice.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,1,1,0,0,0,0.27,1,0
1986_32,32,32,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0.25,0,0
1986_33,33,33,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.19,1,0
1986_34,34,34,return price;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.28,2,1
1986_36,36,36,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.14,4,3
1987_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,1,0,0,0.29,0,0
1987_2,2,36,"if (null != mAccessToken) {

StringBuilder stringIds = new StringBuilder();
for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}

HttpURLConnection conn = (HttpURLConnection) new URL(""https://api.tcgplayer.com/"" +
TCGP_VERSION + ""/catalog/products/"" + stringIds.toString()).openConnection();
setDefaultOptions(conn, HttpMethod.GET);
addHeaders(conn);

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductDetails();
}
}

GsonBuilder builder = new GsonBuilder();
CatalogData.CatalogDataItem.setDateFormat(builder);
ProductDetails details = builder.create()
.fromJson(new InputStreamReader(inStream), ProductDetails.class);

inStream.close();
conn.disconnect();
return details;
}",1,0,0,0,0,0,0,0,0,22,3,35,0,0,0,0,5,2,1,0,2,0.47,0,0
1987_4,4,4,StringBuilder stringIds = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,0,0.29,2,1
1987_5,5,10,"for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,1,5,2,1,0,0,0.28,3,1
1987_6,6,8,"if (stringIds.length() > 0) {
stringIds.append(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,2,1,0,0,0.27,4,2
1987_7,7,7,"stringIds.append(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.25,5,3
1987_9,9,9,stringIds.append(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,1,0,0,0.24,7,5
1987_12,12,13,"HttpURLConnection conn = (HttpURLConnection) new URL(""https://api.tcgplayer.com/"" +
TCGP_VERSION + ""/catalog/products/"" + stringIds.toString()).openConnection();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,5,2,1,0,0,0.35,10,6
1987_14,14,14,"setDefaultOptions(conn, HttpMethod.GET);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.32,12,7
1987_15,15,15,addHeaders(conn);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,2,1,0,0,0.26,13,7
1987_17,17,17,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,0,0.3,15,9
1987_18,18,26,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductDetails();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,5,2,1,0,0,0.33,16,9
1987_19,19,19,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.32,17,10
1987_20,20,20,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.32,18,11
1987_21,21,21,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.28,19,12
1987_22,22,25,"if (null == inStream) {
conn.disconnect();
return new ProductDetails();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,2,1,0,0,0.32,20,13
1987_23,23,23,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.25,21,14
1987_24,24,24,return new ProductDetails();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.31,22,15
1987_28,28,28,GsonBuilder builder = new GsonBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,0,0.31,26,17
1987_29,29,29,CatalogData.CatalogDataItem.setDateFormat(builder);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.34,27,17
1987_30,30,31,"ProductDetails details = builder.create()
.fromJson(new InputStreamReader(inStream), ProductDetails.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,1,5,2,1,0,0,0.34,28,18
1987_33,33,33,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,0,0.21,31,20
1987_34,34,34,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.25,32,20
1987_35,35,35,return details;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.17,33,21
1987_37,37,37,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.23,35,23
1988_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,1,0,0,0.36,2,1
1988_2,2,36,"if (null != mAccessToken) {

StringBuilder stringIds = new StringBuilder();
for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}

HttpURLConnection conn = (HttpURLConnection) new URL(""https://api.tcgplayer.com/"" +
TCGP_VERSION + ""/catalog/products/"" + stringIds.toString()).openConnection();
setDefaultOptions(conn, HttpMethod.GET);
addHeaders(conn);

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductDetails();
}
}

GsonBuilder builder = new GsonBuilder();
CatalogData.CatalogDataItem.setDateFormat(builder);
ProductDetails details = builder.create()
.fromJson(new InputStreamReader(inStream), ProductDetails.class);

inStream.close();
conn.disconnect();
return details;
}",1,0,0,0,0,0,0,0,0,22,3,35,0,0,0,0,5,2,1,0,2,0.6,0,0
1988_4,4,4,StringBuilder stringIds = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,1,0.6,0,0
1988_5,5,10,"for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,1,5,2,1,0,2,0.61,1,0
1988_6,6,8,"if (stringIds.length() > 0) {
stringIds.append(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,2,1,0,1,0.55,2,1
1988_7,7,7,"stringIds.append(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.56,3,2
1988_9,9,9,stringIds.append(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,1,0,1,0.53,5,4
1988_12,12,13,"HttpURLConnection conn = (HttpURLConnection) new URL(""https://api.tcgplayer.com/"" +
TCGP_VERSION + ""/catalog/products/"" + stringIds.toString()).openConnection();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,5,2,1,0,2,0.59,8,5
1988_14,14,14,"setDefaultOptions(conn, HttpMethod.GET);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.38,10,6
1988_15,15,15,addHeaders(conn);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,2,1,0,0,0.33,11,6
1988_17,17,17,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,0,0.34,13,8
1988_18,18,26,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductDetails();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,5,2,1,0,1,0.48,14,8
1988_19,19,19,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.39,15,9
1988_20,20,20,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.35,16,10
1988_21,21,21,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.39,17,11
1988_22,22,25,"if (null == inStream) {
conn.disconnect();
return new ProductDetails();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,2,1,0,1,0.49,18,12
1988_23,23,23,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.3,19,13
1988_24,24,24,return new ProductDetails();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.53,20,14
1988_28,28,28,GsonBuilder builder = new GsonBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,0,0.45,24,16
1988_29,29,29,CatalogData.CatalogDataItem.setDateFormat(builder);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.45,25,16
1988_30,30,31,"ProductDetails details = builder.create()
.fromJson(new InputStreamReader(inStream), ProductDetails.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,1,5,2,1,0,1,0.56,26,17
1988_33,33,33,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,0,0.33,29,19
1988_34,34,34,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.3,30,19
1988_35,35,35,return details;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.37,31,20
1988_37,37,37,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.29,33,22
1989_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,5,0,0,0,0.29,10,6
1989_2,2,36,"if (null != mAccessToken) {

StringBuilder stringIds = new StringBuilder();
for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}

HttpURLConnection conn = (HttpURLConnection) new URL(""https://api.tcgplayer.com/"" +
TCGP_VERSION + ""/catalog/products/"" + stringIds.toString()).openConnection();
setDefaultOptions(conn, HttpMethod.GET);
addHeaders(conn);

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductDetails();
}
}

GsonBuilder builder = new GsonBuilder();
CatalogData.CatalogDataItem.setDateFormat(builder);
ProductDetails details = builder.create()
.fromJson(new InputStreamReader(inStream), ProductDetails.class);

inStream.close();
conn.disconnect();
return details;
}",1,0,0,0,0,0,0,0,0,22,3,35,0,0,0,0,5,5,0,0,5,0.71,0,0
1989_4,4,4,StringBuilder stringIds = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,0,0.36,7,4
1989_5,5,10,"for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,1,5,5,0,0,0,0.32,1,0
1989_6,6,8,"if (stringIds.length() > 0) {
stringIds.append(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,5,0,0,0,0.3,3,1
1989_7,7,7,"stringIds.append(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.32,4,1
1989_9,9,9,stringIds.append(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,5,0,0,0,0.3,2,0
1989_12,12,13,"HttpURLConnection conn = (HttpURLConnection) new URL(""https://api.tcgplayer.com/"" +
TCGP_VERSION + ""/catalog/products/"" + stringIds.toString()).openConnection();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,5,5,0,0,1,0.53,0,0
1989_14,14,14,"setDefaultOptions(conn, HttpMethod.GET);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.65,2,1
1989_15,15,15,addHeaders(conn);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,1,0.58,3,1
1989_17,17,17,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,0,0.32,5,3
1989_18,18,26,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductDetails();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,5,5,0,0,0,0.44,6,3
1989_19,19,19,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.41,7,4
1989_20,20,20,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.26,8,5
1989_21,21,21,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.4,9,6
1989_22,22,25,"if (null == inStream) {
conn.disconnect();
return new ProductDetails();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,5,0,0,0,0.46,10,7
1989_23,23,23,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.46,11,8
1989_24,24,24,return new ProductDetails();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.4,12,9
1989_28,28,28,GsonBuilder builder = new GsonBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,0,0.37,16,11
1989_29,29,29,CatalogData.CatalogDataItem.setDateFormat(builder);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.33,17,11
1989_30,30,31,"ProductDetails details = builder.create()
.fromJson(new InputStreamReader(inStream), ProductDetails.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,1,5,5,0,0,1,0.45,18,12
1989_33,33,33,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,0,0.4,21,14
1989_34,34,34,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.46,22,14
1989_35,35,35,return details;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.3,23,15
1989_37,37,37,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.24,25,17
1990_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,2,0,0,0.44,15,9
1990_2,2,36,"if (null != mAccessToken) {

StringBuilder stringIds = new StringBuilder();
for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}

HttpURLConnection conn = (HttpURLConnection) new URL(""https://api.tcgplayer.com/"" +
TCGP_VERSION + ""/catalog/products/"" + stringIds.toString()).openConnection();
setDefaultOptions(conn, HttpMethod.GET);
addHeaders(conn);

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductDetails();
}
}

GsonBuilder builder = new GsonBuilder();
CatalogData.CatalogDataItem.setDateFormat(builder);
ProductDetails details = builder.create()
.fromJson(new InputStreamReader(inStream), ProductDetails.class);

inStream.close();
conn.disconnect();
return details;
}",1,0,0,0,0,0,0,0,0,22,3,35,0,0,0,0,5,2,2,0,4,0.7,0,0
1990_4,4,4,StringBuilder stringIds = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,2,0,0,0.28,12,7
1990_5,5,10,"for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,1,5,2,2,0,0,0.34,6,3
1990_6,6,8,"if (stringIds.length() > 0) {
stringIds.append(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,2,2,0,0,0.32,8,4
1990_7,7,7,"stringIds.append(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.29,9,4
1990_9,9,9,stringIds.append(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,2,0,0,0.3,7,3
1990_12,12,13,"HttpURLConnection conn = (HttpURLConnection) new URL(""https://api.tcgplayer.com/"" +
TCGP_VERSION + ""/catalog/products/"" + stringIds.toString()).openConnection();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,5,2,2,0,2,0.65,3,2
1990_14,14,14,"setDefaultOptions(conn, HttpMethod.GET);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,2,0,1,0.61,2,1
1990_15,15,15,addHeaders(conn);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,2,2,0,0,0.51,1,0
1990_17,17,17,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,2,0,1,0.62,0,0
1990_18,18,26,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductDetails();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,5,2,2,0,2,0.7,1,0
1990_19,19,19,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,2,0.82,2,1
1990_20,20,20,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.36,3,2
1990_21,21,21,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,2,0,2,0.82,4,3
1990_22,22,25,"if (null == inStream) {
conn.disconnect();
return new ProductDetails();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,2,2,0,1,0.58,5,4
1990_23,23,23,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.59,6,5
1990_24,24,24,return new ProductDetails();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.3,7,6
1990_28,28,28,GsonBuilder builder = new GsonBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,2,0,0,0.2,11,8
1990_29,29,29,CatalogData.CatalogDataItem.setDateFormat(builder);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,2,0,0,0.32,12,8
1990_30,30,31,"ProductDetails details = builder.create()
.fromJson(new InputStreamReader(inStream), ProductDetails.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,1,5,2,2,0,1,0.46,13,9
1990_33,33,33,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,2,0,1,0.68,16,11
1990_34,34,34,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.59,17,11
1990_35,35,35,return details;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.25,18,12
1990_37,37,37,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,2,0,0,0.24,20,14
1991_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,0,0,0,0.34,22,16
1991_2,2,36,"if (null != mAccessToken) {

StringBuilder stringIds = new StringBuilder();
for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}

HttpURLConnection conn = (HttpURLConnection) new URL(""https://api.tcgplayer.com/"" +
TCGP_VERSION + ""/catalog/products/"" + stringIds.toString()).openConnection();
setDefaultOptions(conn, HttpMethod.GET);
addHeaders(conn);

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductDetails();
}
}

GsonBuilder builder = new GsonBuilder();
CatalogData.CatalogDataItem.setDateFormat(builder);
ProductDetails details = builder.create()
.fromJson(new InputStreamReader(inStream), ProductDetails.class);

inStream.close();
conn.disconnect();
return details;
}",1,0,0,0,0,0,0,0,0,22,3,35,0,0,0,0,4,2,0,0,2,0.52,0,0
1991_4,4,4,StringBuilder stringIds = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,0,0,0,0.28,19,14
1991_5,5,10,"for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,1,4,2,0,0,0,0.33,13,10
1991_6,6,8,"if (stringIds.length() > 0) {
stringIds.append(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,2,0,0,0,0.33,15,11
1991_7,7,7,"stringIds.append(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.32,16,11
1991_9,9,9,stringIds.append(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,0,0,0,0.33,14,10
1991_12,12,13,"HttpURLConnection conn = (HttpURLConnection) new URL(""https://api.tcgplayer.com/"" +
TCGP_VERSION + ""/catalog/products/"" + stringIds.toString()).openConnection();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,4,2,0,0,0,0.35,10,9
1991_14,14,14,"setDefaultOptions(conn, HttpMethod.GET);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.29,9,8
1991_15,15,15,addHeaders(conn);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,0,0.26,8,7
1991_17,17,17,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,0,0,0,0.17,6,6
1991_18,18,26,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductDetails();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,4,2,0,0,2,0.52,0,0
1991_19,19,19,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.24,4,4
1991_20,20,20,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.31,3,3
1991_21,21,21,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.27,2,2
1991_22,22,25,"if (null == inStream) {
conn.disconnect();
return new ProductDetails();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,4,2,0,0,2,0.58,0,0
1991_23,23,23,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.25,0,0
1991_24,24,24,return new ProductDetails();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.52,0,0
1991_28,28,28,GsonBuilder builder = new GsonBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,0,0,0,0.11,4,1
1991_29,29,29,CatalogData.CatalogDataItem.setDateFormat(builder);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.35,5,1
1991_30,30,31,"ProductDetails details = builder.create()
.fromJson(new InputStreamReader(inStream), ProductDetails.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,1,4,2,0,0,0,0.3,6,2
1991_33,33,33,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.23,9,4
1991_34,34,34,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.25,10,4
1991_35,35,35,return details;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.57,11,5
1991_37,37,37,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.83,13,7
1992_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,1,0,0,0.38,26,17
1992_2,2,36,"if (null != mAccessToken) {

StringBuilder stringIds = new StringBuilder();
for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}

HttpURLConnection conn = (HttpURLConnection) new URL(""https://api.tcgplayer.com/"" +
TCGP_VERSION + ""/catalog/products/"" + stringIds.toString()).openConnection();
setDefaultOptions(conn, HttpMethod.GET);
addHeaders(conn);

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductDetails();
}
}

GsonBuilder builder = new GsonBuilder();
CatalogData.CatalogDataItem.setDateFormat(builder);
ProductDetails details = builder.create()
.fromJson(new InputStreamReader(inStream), ProductDetails.class);

inStream.close();
conn.disconnect();
return details;
}",1,0,0,0,0,0,0,0,0,22,3,35,0,0,0,0,4,2,1,0,1,0.51,0,0
1992_4,4,4,StringBuilder stringIds = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.42,23,15
1992_5,5,10,"for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,1,4,2,1,0,0,0.39,17,11
1992_6,6,8,"if (stringIds.length() > 0) {
stringIds.append(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,2,1,0,0,0.39,19,12
1992_7,7,7,"stringIds.append(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.42,20,12
1992_9,9,9,stringIds.append(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.41,18,11
1992_12,12,13,"HttpURLConnection conn = (HttpURLConnection) new URL(""https://api.tcgplayer.com/"" +
TCGP_VERSION + ""/catalog/products/"" + stringIds.toString()).openConnection();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,4,2,1,0,0,0.46,14,10
1992_14,14,14,"setDefaultOptions(conn, HttpMethod.GET);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.41,13,9
1992_15,15,15,addHeaders(conn);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.43,12,8
1992_17,17,17,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.27,10,7
1992_18,18,26,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductDetails();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,4,2,1,0,0,0.41,1,0
1992_19,19,19,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.38,8,5
1992_20,20,20,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.32,7,4
1992_21,21,21,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.4,6,3
1992_22,22,25,"if (null == inStream) {
conn.disconnect();
return new ProductDetails();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,4,2,1,0,0,0.41,2,0
1992_23,23,23,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.45,4,1
1992_24,24,24,return new ProductDetails();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.32,3,0
1992_28,28,28,GsonBuilder builder = new GsonBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.33,0,0
1992_29,29,29,CatalogData.CatalogDataItem.setDateFormat(builder);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.38,1,0
1992_30,30,31,"ProductDetails details = builder.create()
.fromJson(new InputStreamReader(inStream), ProductDetails.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,1,4,2,1,0,1,0.43,2,1
1992_33,33,33,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.35,5,3
1992_34,34,34,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.45,6,3
1992_35,35,35,return details;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.29,7,4
1992_37,37,37,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.26,9,6
1993_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0,0,0,0.3,31,20
1993_2,2,36,"if (null != mAccessToken) {

StringBuilder stringIds = new StringBuilder();
for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}

HttpURLConnection conn = (HttpURLConnection) new URL(""https://api.tcgplayer.com/"" +
TCGP_VERSION + ""/catalog/products/"" + stringIds.toString()).openConnection();
setDefaultOptions(conn, HttpMethod.GET);
addHeaders(conn);

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductDetails();
}
}

GsonBuilder builder = new GsonBuilder();
CatalogData.CatalogDataItem.setDateFormat(builder);
ProductDetails details = builder.create()
.fromJson(new InputStreamReader(inStream), ProductDetails.class);

inStream.close();
conn.disconnect();
return details;
}",1,0,0,0,0,0,0,0,0,22,3,35,0,0,0,0,1,1,0,0,0,0.36,0,0
1993_4,4,4,StringBuilder stringIds = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,1,1,0,0,0,0.16,28,18
1993_5,5,10,"for (long id : productIds) {
if (stringIds.length() > 0) {
stringIds.append(',');
}
stringIds.append(id);
}",0,0,0,1,0,0,0,0,0,3,2,6,0,1,0,1,1,1,0,0,0,0.18,22,14
1993_6,6,8,"if (stringIds.length() > 0) {
stringIds.append(',');
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,1,1,0,0,0,0.15,24,15
1993_7,7,7,"stringIds.append(',');",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.16,25,15
1993_9,9,9,stringIds.append(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,0,0,0,0.16,23,14
1993_12,12,13,"HttpURLConnection conn = (HttpURLConnection) new URL(""https://api.tcgplayer.com/"" +
TCGP_VERSION + ""/catalog/products/"" + stringIds.toString()).openConnection();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,1,1,0,0,0,0.3,19,13
1993_14,14,14,"setDefaultOptions(conn, HttpMethod.GET);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.13,18,12
1993_15,15,15,addHeaders(conn);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,0,0,0,0.25,17,11
1993_17,17,17,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,1,1,0,0,0,0.24,15,10
1993_18,18,26,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new ProductDetails();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,1,1,0,0,0,0.32,6,3
1993_19,19,19,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.24,13,8
1993_20,20,20,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.35,12,7
1993_21,21,21,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.23,11,6
1993_22,22,25,"if (null == inStream) {
conn.disconnect();
return new ProductDetails();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,1,1,0,0,0,0.23,7,3
1993_23,23,23,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.19,9,4
1993_24,24,24,return new ProductDetails();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.19,8,3
1993_28,28,28,GsonBuilder builder = new GsonBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,1,1,0,0,0,0.14,4,2
1993_29,29,29,CatalogData.CatalogDataItem.setDateFormat(builder);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.37,3,1
1993_30,30,31,"ProductDetails details = builder.create()
.fromJson(new InputStreamReader(inStream), ProductDetails.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,1,1,1,0,0,0,0.23,1,0
1993_33,33,33,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0.25,0,0
1993_34,34,34,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.19,1,0
1993_35,35,35,return details;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.14,2,1
1993_37,37,37,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.14,4,3
1321_1,1,2,"    @Override
public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,0,0,1,0.47,1,0
1321_4,4,4,"View v = inflater.inflate(R.layout.card_view_pager, container, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,2,0.71,0,0
1321_5,5,5,assert v != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.3,1,0
1321_6,6,6,mViewPager = v.findViewById(R.id.pager);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,0,0,2,0.68,2,1
1321_8,8,10,"if (getParentFragment() == null) {
this.setRetainInstance(true);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,4,0,0,0,0.37,4,3
1321_9,9,9,this.setRetainInstance(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.3,5,3
1321_12,12,12,Bundle args = getArguments();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,0,0.31,8,5
1321_13,13,13,long[] cardIds = Objects.requireNonNull(args).getLongArray(CARD_ID_ARRAY);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,0,0.3,9,5
1321_14,14,14,int currentPosition = args.getInt(STARTING_CARD_POSITION);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,5,4,0,0,0,0.33,10,6
1321_16,16,16,"CardViewPagerAdapter pagerAdapter = new CardViewPagerAdapter(getChildFragmentManager(), cardIds);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,0,0,3,0.78,12,8
1321_17,17,17,mViewPager.setAdapter(pagerAdapter);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,3,0.89,13,8
1321_18,18,18,mViewPager.setCurrentItem(currentPosition);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.68,14,9
1321_19,19,19,"mViewPager.setPageTransformer(true, new DepthPageTransformer());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,4,0,0,2,0.63,15,10
1321_21,21,21,return v;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,4,0,0,0,0.23,17,12
1322_1,1,2,"    @Override
public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,1,0.51,5,3
1322_4,4,4,"View v = inflater.inflate(R.layout.card_view_pager, container, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.35,3,2
1322_5,5,5,assert v != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.36,2,1
1322_6,6,6,mViewPager = v.findViewById(R.id.pager);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.27,1,0
1322_8,8,10,"if (getParentFragment() == null) {
this.setRetainInstance(true);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,2,0.74,0,0
1322_9,9,9,this.setRetainInstance(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,2,0.84,1,0
1322_12,12,12,Bundle args = getArguments();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.31,4,2
1322_13,13,13,long[] cardIds = Objects.requireNonNull(args).getLongArray(CARD_ID_ARRAY);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.37,5,2
1322_14,14,14,int currentPosition = args.getInt(STARTING_CARD_POSITION);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.39,6,3
1322_16,16,16,"CardViewPagerAdapter pagerAdapter = new CardViewPagerAdapter(getChildFragmentManager(), cardIds);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.32,8,5
1322_17,17,17,mViewPager.setAdapter(pagerAdapter);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.18,9,5
1322_18,18,18,mViewPager.setCurrentItem(currentPosition);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.23,10,6
1322_19,19,19,"mViewPager.setPageTransformer(true, new DepthPageTransformer());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.31,11,7
1322_21,21,21,return v;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.37,13,9
1323_1,1,1,"public void transformPage(@NonNull View view, float position) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,1,0,1,0.58,14,11
1323_2,2,2,int pageWidth = view.getWidth();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,1,1,0,1,0.64,13,10
1323_4,4,23,"if (position < -1) {
view.setAlpha(0);
} else if (position <= 0) {
view.setTranslationX(0);
view.setScaleX(1);
view.setScaleY(1);
view.setAlpha(1);
} else if (position <= 1) {
view.setAlpha(1 - position);

view.setTranslationX(pageWidth * -position);

float MIN_SCALE = 0.75f;
float scaleFactor = MIN_SCALE + (1 - MIN_SCALE) * (1 - Math.abs(position));
view.setScaleX(scaleFactor);
view.setScaleY(scaleFactor);

} else {
view.setAlpha(0);
}",1,0,0,0,0,0,0,0,0,15,1,20,0,0,1,0,5,1,1,0,4,0.82,0,0
1323_5,5,5,view.setAlpha(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,1,0,0,0.51,10,8
1323_6,6,6,} else if (position <= 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,1,0,0,0.42,9,7
1323_7,7,7,view.setTranslationX(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,1,0,0,0.5,8,6
1323_8,8,8,view.setScaleX(1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,1,0,2,0.73,7,5
1323_9,9,9,view.setScaleY(1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,1,0,2,0.72,6,4
1323_10,10,10,view.setAlpha(1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,1,0,1,0.64,5,3
1323_11,11,11,} else if (position <= 1) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,1,0,1,0.55,4,2
1323_12,12,12,view.setAlpha(1 - position);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,1,1,0,1,0.63,3,1
1323_14,14,14,view.setTranslationX(pageWidth * -position);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,1,1,0,1,0.63,1,0
1323_16,16,16,float MIN_SCALE = 0.75f;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,1,1,0,2,0.78,0,0
1323_17,17,17,float scaleFactor = MIN_SCALE + (1 - MIN_SCALE) * (1 - Math.abs(position));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,1,1,0,3,0.88,1,0
1323_18,18,18,view.setScaleX(scaleFactor);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,1,1,0,1,0.67,2,1
1323_19,19,19,view.setScaleY(scaleFactor);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,1,1,0,1,0.67,3,2
1323_21,21,21,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,1,0,0,0.23,5,4
1323_22,22,22,view.setAlpha(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,1,0,0,0.51,6,4
2538_1,1,4,"    @Override
public View onCreateView(@NonNull LayoutInflater inflater,
ViewGroup container,
Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,5,3,1,0,0,0.41,16,6
2538_6,6,7,"final View myFragmentView =
inflater.inflate(R.layout.decklist_frag, container, false);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,5,3,1,0,0,0.39,13,5
2538_8,8,8,assert myFragmentView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,1,0,0,0.31,12,4
2538_10,10,19,"final TextView.OnEditorActionListener addCardListener =
(textView, actionId, event) -> {

if (actionId == EditorInfo.IME_ACTION_SEARCH) {
addCardToDeck(false);
return true;
}
return false;

};",0,0,0,0,0,1,0,0,0,3,2,10,0,0,1,1,5,3,1,0,0,0.36,1,0
2538_13,13,16,"if (actionId == EditorInfo.IME_ACTION_SEARCH) {
addCardToDeck(false);
return true;
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,1,0,5,3,1,0,0,0.37,4,1
2538_15,15,15,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.2,5,1
2538_17,17,17,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,5,3,1,0,0,0.21,3,0
2538_21,21,21,synchronized (mCompressedDecklist) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,0,0.23,0,0
2538_22,22,27,"initializeMembers(
myFragmentView,
new int[]{R.id.cardlist},
new CardDataAdapter[]{new DecklistDataAdapter(mCompressedDecklist)},
new int[]{R.id.decklistPrice}, null, R.menu.decklist_select_menu,
addCardListener);",0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,5,3,1,0,0,0.38,1,0
2538_29,29,29,myFragmentView.findViewById(R.id.add_card).setOnClickListener(view -> addCardToDeck(false));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,3,1,0,1,0.46,8,2
2538_30,30,31,"myFragmentView.findViewById(R.id.add_card_sideboard).setOnClickListener(
v -> addCardToDeck(true));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,1,5,3,1,0,1,0.45,9,2
2538_33,33,33,mDeckName = myFragmentView.findViewById(R.id.decklistName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,0,0.37,12,4
2538_34,34,34,mDeckName.setText(R.string.decklist_unnamed_deck);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.47,13,4
2538_35,35,35,mDeckCards = myFragmentView.findViewById(R.id.decklistCards);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.4,14,5
2538_36,36,36,updateDeckCounts(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,1,0,0,0.34,15,6
2538_38,38,38,mDecklistChain = new ComparatorChain<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,0,0.19,17,8
2538_39,39,39,mDecklistChain.addComparator(new CardHelpers.CardComparatorSideboard());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,3,1,0,0,0.32,18,8
2538_40,40,41,"mDecklistChain.addComparator(new CardHelpers.CardComparatorSupertype(
getResources().getStringArray(R.array.card_types_extra)",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,5,3,1,0,0,0.38,19,9
2538_43,43,43,mDecklistChain.addComparator(new CardHelpers.CardComparatorCMC());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,3,1,0,0,0.32,22,11
2538_44,44,44,mDecklistChain.addComparator(new CardHelpers.CardComparatorColor());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,3,1,0,0,0.33,23,11
2538_45,45,45,mDecklistChain.addComparator(new CardHelpers.CardComparatorName());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,5,3,1,0,0,0.32,24,12
2538_48,48,51,"if (savedInstanceState != null) {
mCurrentDeck = Objects.requireNonNull(savedInstanceState.getBundle(FRAGMENT_TAG)).getString(CURRENT_DECKLIST_TAG);
readAndCompressDecklist(null, mCurrentDeck);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,5,3,1,0,0,0.36,27,14
2538_49,49,49,mCurrentDeck = Objects.requireNonNull(savedInstanceState.getBundle(FRAGMENT_TAG)).getString(CURRENT_DECKLIST_TAG);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.36,28,14
2538_50,50,50,"readAndCompressDecklist(null, mCurrentDeck);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.28,29,15
2538_53,53,53,return myFragmentView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,3,1,0,0,0.3,32,17
2539_1,1,1,private void addCardToDeck(final boolean isSideboard) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.27,1,0
2539_3,3,6,"if (getCardNameInput() == null || getCardNameInput().length() == 0 ||
getCardNumberInput() == null || getCardNumberInput().length() == 0) {
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,2,0,0,0,0.3,0,0
2539_4,4,4,getCardNumberInput() == null || getCardNumberInput().length() == 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.29,1,0
2539_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,2,1
2539_8,8,8,ArrayList<String> nonFoilSets;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.32,5,3
2539_9,9,9,FamiliarDbHandle handle = new FamiliarDbHandle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.3,6,3
2539_10,10,17,"try {
SQLiteDatabase database = DatabaseManager.openDatabase(getContext(), false, handle);
nonFoilSets = CardDbAdapter.getNonFoilSets(database);
} catch (SQLiteException | FamiliarDbException | IllegalStateException ignored) {
nonFoilSets = new ArrayList<>();
} finally {
DatabaseManager.closeDatabase(getContext(), handle);
}",0,0,0,0,1,0,0,0,0,6,1,8,0,1,0,1,3,2,0,0,0,0.33,7,4
2539_11,11,11,"SQLiteDatabase database = DatabaseManager.openDatabase(getContext(), false, handle);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.33,8,5
2539_12,12,12,nonFoilSets = CardDbAdapter.getNonFoilSets(database);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.33,9,6
2539_13,13,13,} catch (SQLiteException | FamiliarDbException | IllegalStateException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.33,10,7
2539_14,14,14,nonFoilSets = new ArrayList<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.29,11,8
2539_15,15,15,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.15,12,9
2539_16,16,16,"DatabaseManager.closeDatabase(getContext(), handle);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.28,13,10
2539_19,19,19,final String name = String.valueOf(getCardNameInput());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,3,2,0,0,0,0.33,16,12
2539_20,20,20,final String numberOf = String.valueOf(getCardNumberInput());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.33,17,12
2539_21,21,73,"try {
final MtgCard card = new MtgCard(getActivity(), name, null, null,
checkboxFoilIsChecked(), Integer.parseInt(numberOf), isSideboard);

final CompressedDecklistInfo decklistInfo =
new CompressedDecklistInfo(card);

synchronized (mCompressedDecklist) {
if (mCompressedDecklist.contains(decklistInfo)) {
boolean added = false;
final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);
final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);
for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}
if (!added) {
firstCard.add(card);
}
} else {
mCompressedDecklist.add(new CompressedDecklistInfo(card));
}

clearHeaders();

if (shouldShowPrice()) {
loadPrice(card);
}

Collections.sort(mCompressedDecklist, mDecklistChain);

if (!mDecklistReadError) {
DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());
}
}

clearCardNameInput();


uncheckFoilCheckbox();

updateDeckCounts(false);

setHeaderValues();
getCardDataAdapter(0).notifyDataSetChanged();
} catch (java.lang.InstantiationException e) {
}",0,0,0,0,1,0,0,0,0,30,5,53,0,1,0,1,3,2,0,0,0,0.35,18,13
2539_22,22,23,"final MtgCard card = new MtgCard(getActivity(), name, null, null,
checkboxFoilIsChecked(), Integer.parseInt(numberOf), isSideboard);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,3,2,0,0,0,0.31,19,14
2539_25,25,26,"final CompressedDecklistInfo decklistInfo =
new CompressedDecklistInfo(card);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,3,2,0,0,0,0.25,22,16
2539_28,28,28,synchronized (mCompressedDecklist) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.28,25,17
2539_29,29,48,"if (mCompressedDecklist.contains(decklistInfo)) {
boolean added = false;
final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);
final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);
for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}
if (!added) {
firstCard.add(card);
}
} else {
mCompressedDecklist.add(new CompressedDecklistInfo(card));
}",1,0,0,0,0,0,0,0,0,14,3,20,0,0,0,1,3,2,0,0,0,0.31,26,17
2539_30,30,30,boolean added = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,27,18
2539_31,31,31,final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.28,28,19
2539_32,32,33,"final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);",0,0,0,0,0,1,0,0,0,0,0,2,1,1,0,0,3,2,0,0,0,0.29,29,20
2539_34,34,42,"for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}",0,0,1,0,0,0,0,0,0,6,2,9,1,1,0,0,3,2,0,0,0,0.31,31,22
2539_35,35,35,CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.26,32,22
2539_36,36,41,"if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,3,2,0,0,0,0.32,33,23
2539_37,37,37,(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,34,24
2539_38,38,38,firstIsi.mNumberOf++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,35,25
2539_39,39,39,added = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,36,26
2539_40,40,40,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,0,0,0,0.12,37,27
2539_43,43,45,"if (!added) {
firstCard.add(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,2,0,0,0,0.25,40,29
2539_44,44,44,firstCard.add(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,41,29
2539_46,46,46,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.23,43,31
2539_47,47,47,mCompressedDecklist.add(new CompressedDecklistInfo(card));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,44,31
2539_50,50,50,clearHeaders();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.2,47,33
2539_52,52,54,"if (shouldShowPrice()) {
loadPrice(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,0,0.3,49,34
2539_53,53,53,loadPrice(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.28,50,34
2539_56,56,56,"Collections.sort(mCompressedDecklist, mDecklistChain);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.32,53,36
2539_58,58,60,"if (!mDecklistReadError) {
DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,2,0,0,0,0.3,55,37
2539_59,59,59,"DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,56,37
2539_63,63,63,clearCardNameInput();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.24,60,39
2539_66,66,66,uncheckFoilCheckbox();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.28,63,40
2539_68,68,68,updateDeckCounts(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.24,65,41
2539_70,70,70,setHeaderValues();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.32,67,42
2539_71,71,71,getCardDataAdapter(0).notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.29,68,42
2539_72,72,72,} catch (java.lang.InstantiationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.36,69,43
2540_1,1,1,private void addCardToDeck(final boolean isSideboard) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,1,0,1,0.42,27,18
2540_3,3,6,"if (getCardNameInput() == null || getCardNameInput().length() == 0 ||
getCardNumberInput() == null || getCardNumberInput().length() == 0) {
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,9,3,1,0,0,0.34,22,15
2540_4,4,4,getCardNumberInput() == null || getCardNumberInput().length() == 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,1,0,0,0.34,24,16
2540_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,3,1,0,0,0.18,23,15
2540_8,8,8,ArrayList<String> nonFoilSets;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,9,3,1,0,0,0.33,20,14
2540_9,9,9,FamiliarDbHandle handle = new FamiliarDbHandle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,3,1,0,1,0.43,19,13
2540_10,10,17,"try {
SQLiteDatabase database = DatabaseManager.openDatabase(getContext(), false, handle);
nonFoilSets = CardDbAdapter.getNonFoilSets(database);
} catch (SQLiteException | FamiliarDbException | IllegalStateException ignored) {
nonFoilSets = new ArrayList<>();
} finally {
DatabaseManager.closeDatabase(getContext(), handle);
}",0,0,0,0,1,0,0,0,0,6,1,8,0,1,0,1,9,3,1,0,1,0.43,11,6
2540_11,11,11,"SQLiteDatabase database = DatabaseManager.openDatabase(getContext(), false, handle);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,3,1,0,0,0.35,17,11
2540_12,12,12,nonFoilSets = CardDbAdapter.getNonFoilSets(database);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,3,1,0,0,0.33,16,10
2540_13,13,13,} catch (SQLiteException | FamiliarDbException | IllegalStateException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,1,0,0,0.37,15,9
2540_14,14,14,nonFoilSets = new ArrayList<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,1,0,1,0.45,14,8
2540_15,15,15,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,1,0,0,0.28,13,7
2540_16,16,16,"DatabaseManager.closeDatabase(getContext(), handle);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,1,0,0,0.29,12,6
2540_19,19,19,final String name = String.valueOf(getCardNameInput());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,9,3,1,0,0,0.29,9,5
2540_20,20,20,final String numberOf = String.valueOf(getCardNumberInput());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,9,3,1,0,0,0.3,8,4
2540_21,21,73,"try {
final MtgCard card = new MtgCard(getActivity(), name, null, null,
checkboxFoilIsChecked(), Integer.parseInt(numberOf), isSideboard);

final CompressedDecklistInfo decklistInfo =
new CompressedDecklistInfo(card);

synchronized (mCompressedDecklist) {
if (mCompressedDecklist.contains(decklistInfo)) {
boolean added = false;
final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);
final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);
for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}
if (!added) {
firstCard.add(card);
}
} else {
mCompressedDecklist.add(new CompressedDecklistInfo(card));
}

clearHeaders();

if (shouldShowPrice()) {
loadPrice(card);
}

Collections.sort(mCompressedDecklist, mDecklistChain);

if (!mDecklistReadError) {
DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());
}
}

clearCardNameInput();


uncheckFoilCheckbox();

updateDeckCounts(false);

setHeaderValues();
getCardDataAdapter(0).notifyDataSetChanged();
} catch (java.lang.InstantiationException e) {
}",0,0,0,0,1,0,0,0,0,30,5,53,0,1,0,1,9,3,1,0,5,0.6,0,0
2540_22,22,23,"final MtgCard card = new MtgCard(getActivity(), name, null, null,
checkboxFoilIsChecked(), Integer.parseInt(numberOf), isSideboard);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,9,3,1,0,1,0.42,5,2
2540_25,25,26,"final CompressedDecklistInfo decklistInfo =
new CompressedDecklistInfo(card);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,9,3,1,0,4,0.73,2,1
2540_28,28,28,synchronized (mCompressedDecklist) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,3,1,0,2,0.52,0,0
2540_29,29,48,"if (mCompressedDecklist.contains(decklistInfo)) {
boolean added = false;
final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);
final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);
for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}
if (!added) {
firstCard.add(card);
}
} else {
mCompressedDecklist.add(new CompressedDecklistInfo(card));
}",1,0,0,0,0,0,0,0,0,14,3,20,0,0,0,1,9,3,1,0,5,0.61,0,0
2540_30,30,30,boolean added = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,9,3,1,0,0,0.28,1,0
2540_31,31,31,final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,3,1,0,3,0.54,2,1
2540_32,32,33,"final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);",0,0,0,0,0,1,0,0,0,0,0,2,1,1,0,0,9,3,1,0,3,0.53,3,2
2540_34,34,42,"for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}",0,0,1,0,0,0,0,0,0,6,2,9,1,1,0,0,9,3,1,0,1,0.41,5,4
2540_35,35,35,CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,3,1,0,1,0.4,6,4
2540_36,36,41,"if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,9,3,1,0,0,0.32,7,5
2540_37,37,37,(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,1,0,0,0.28,8,6
2540_38,38,38,firstIsi.mNumberOf++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,1,0,0,0.26,9,7
2540_39,39,39,added = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,1,0,0,0.28,10,8
2540_40,40,40,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,9,3,1,0,0,0.26,11,9
2540_43,43,45,"if (!added) {
firstCard.add(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,9,3,1,0,1,0.44,14,11
2540_44,44,44,firstCard.add(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,1,0,1,0.45,15,11
2540_46,46,46,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,1,0,0,0.18,17,13
2540_47,47,47,mCompressedDecklist.add(new CompressedDecklistInfo(card));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,1,0,5,0.8,18,13
2540_50,50,50,clearHeaders();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,3,1,0,0,0.34,21,15
2540_52,52,54,"if (shouldShowPrice()) {
loadPrice(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,9,3,1,0,0,0.37,23,16
2540_53,53,53,loadPrice(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,1,0,0,0.36,24,16
2540_56,56,56,"Collections.sort(mCompressedDecklist, mDecklistChain);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,3,1,0,2,0.45,27,18
2540_58,58,60,"if (!mDecklistReadError) {
DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,9,3,1,0,2,0.43,29,19
2540_59,59,59,"DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,1,0,2,0.44,30,19
2540_63,63,63,clearCardNameInput();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,3,1,0,0,0.33,34,21
2540_66,66,66,uncheckFoilCheckbox();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,3,1,0,0,0.38,37,22
2540_68,68,68,updateDeckCounts(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,3,1,0,0,0.27,39,23
2540_70,70,70,setHeaderValues();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,3,1,0,0,0.24,41,24
2540_71,71,71,getCardDataAdapter(0).notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,1,0,0,0.29,42,24
2540_72,72,72,} catch (java.lang.InstantiationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,3,1,0,0,0.46,43,25
2541_1,1,1,private void addCardToDeck(final boolean isSideboard) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.49,50,34
2541_3,3,6,"if (getCardNameInput() == null || getCardNameInput().length() == 0 ||
getCardNumberInput() == null || getCardNumberInput().length() == 0) {
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,2,0,0,1,0.52,45,31
2541_4,4,4,getCardNumberInput() == null || getCardNumberInput().length() == 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.53,47,32
2541_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.09,46,31
2541_8,8,8,ArrayList<String> nonFoilSets;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.31,43,30
2541_9,9,9,FamiliarDbHandle handle = new FamiliarDbHandle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.28,42,29
2541_10,10,17,"try {
SQLiteDatabase database = DatabaseManager.openDatabase(getContext(), false, handle);
nonFoilSets = CardDbAdapter.getNonFoilSets(database);
} catch (SQLiteException | FamiliarDbException | IllegalStateException ignored) {
nonFoilSets = new ArrayList<>();
} finally {
DatabaseManager.closeDatabase(getContext(), handle);
}",0,0,0,0,1,0,0,0,0,6,1,8,0,1,0,1,3,2,0,0,1,0.54,34,22
2541_11,11,11,"SQLiteDatabase database = DatabaseManager.openDatabase(getContext(), false, handle);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.43,40,27
2541_12,12,12,nonFoilSets = CardDbAdapter.getNonFoilSets(database);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.55,39,26
2541_13,13,13,} catch (SQLiteException | FamiliarDbException | IllegalStateException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.41,38,25
2541_14,14,14,nonFoilSets = new ArrayList<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.32,37,24
2541_15,15,15,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.21,36,23
2541_16,16,16,"DatabaseManager.closeDatabase(getContext(), handle);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,35,22
2541_19,19,19,final String name = String.valueOf(getCardNameInput());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,3,2,0,0,1,0.49,32,21
2541_20,20,20,final String numberOf = String.valueOf(getCardNumberInput());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,2,0,0,1,0.5,31,20
2541_21,21,73,"try {
final MtgCard card = new MtgCard(getActivity(), name, null, null,
checkboxFoilIsChecked(), Integer.parseInt(numberOf), isSideboard);

final CompressedDecklistInfo decklistInfo =
new CompressedDecklistInfo(card);

synchronized (mCompressedDecklist) {
if (mCompressedDecklist.contains(decklistInfo)) {
boolean added = false;
final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);
final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);
for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}
if (!added) {
firstCard.add(card);
}
} else {
mCompressedDecklist.add(new CompressedDecklistInfo(card));
}

clearHeaders();

if (shouldShowPrice()) {
loadPrice(card);
}

Collections.sort(mCompressedDecklist, mDecklistChain);

if (!mDecklistReadError) {
DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());
}
}

clearCardNameInput();


uncheckFoilCheckbox();

updateDeckCounts(false);

setHeaderValues();
getCardDataAdapter(0).notifyDataSetChanged();
} catch (java.lang.InstantiationException e) {
}",0,0,0,0,1,0,0,0,0,30,5,53,0,1,0,1,3,2,0,0,3,0.72,0,0
2541_22,22,23,"final MtgCard card = new MtgCard(getActivity(), name, null, null,
checkboxFoilIsChecked(), Integer.parseInt(numberOf), isSideboard);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,3,2,0,0,1,0.52,28,18
2541_25,25,26,"final CompressedDecklistInfo decklistInfo =
new CompressedDecklistInfo(card);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,3,2,0,0,1,0.58,25,17
2541_28,28,28,synchronized (mCompressedDecklist) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.42,23,16
2541_29,29,48,"if (mCompressedDecklist.contains(decklistInfo)) {
boolean added = false;
final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);
final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);
for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}
if (!added) {
firstCard.add(card);
}
} else {
mCompressedDecklist.add(new CompressedDecklistInfo(card));
}",1,0,0,0,0,0,0,0,0,14,3,20,0,0,0,1,3,2,0,0,1,0.56,3,1
2541_30,30,30,boolean added = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.32,21,14
2541_31,31,31,final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.38,20,13
2541_32,32,33,"final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);",0,0,0,0,0,1,0,0,0,0,0,2,1,1,0,0,3,2,0,0,1,0.57,18,12
2541_34,34,42,"for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}",0,0,1,0,0,0,0,0,0,6,2,9,1,1,0,0,3,2,0,0,1,0.54,9,5
2541_35,35,35,CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.56,16,10
2541_36,36,41,"if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,3,2,0,0,1,0.52,10,5
2541_37,37,37,(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.51,14,8
2541_38,38,38,firstIsi.mNumberOf++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.28,13,7
2541_39,39,39,added = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.29,12,6
2541_40,40,40,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,0,0,0,0.29,11,5
2541_43,43,45,"if (!added) {
firstCard.add(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,2,0,0,1,0.58,6,3
2541_44,44,44,firstCard.add(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.61,7,3
2541_46,46,46,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.19,5,2
2541_47,47,47,mCompressedDecklist.add(new CompressedDecklistInfo(card));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.6,4,1
2541_50,50,50,clearHeaders();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.28,1,0
2541_52,52,54,"if (shouldShowPrice()) {
loadPrice(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,3,0.93,0,0
2541_53,53,53,loadPrice(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,3,1.0,1,0
2541_56,56,56,"Collections.sort(mCompressedDecklist, mDecklistChain);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.47,4,2
2541_58,58,60,"if (!mDecklistReadError) {
DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,2,0,0,0,0.44,6,3
2541_59,59,59,"DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.45,7,3
2541_63,63,63,clearCardNameInput();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,1,0.51,11,5
2541_66,66,66,uncheckFoilCheckbox();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.44,14,6
2541_68,68,68,updateDeckCounts(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.36,16,7
2541_70,70,70,setHeaderValues();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.34,18,8
2541_71,71,71,getCardDataAdapter(0).notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.56,19,8
2541_72,72,72,} catch (java.lang.InstantiationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.43,20,9
2542_1,1,1,private void addCardToDeck(final boolean isSideboard) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.42,54,36
2542_3,3,6,"if (getCardNameInput() == null || getCardNameInput().length() == 0 ||
getCardNumberInput() == null || getCardNumberInput().length() == 0) {
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,2,2,0,0,0,0.41,49,33
2542_4,4,4,getCardNumberInput() == null || getCardNumberInput().length() == 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.41,51,34
2542_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.15,50,33
2542_8,8,8,ArrayList<String> nonFoilSets;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.3,47,32
2542_9,9,9,FamiliarDbHandle handle = new FamiliarDbHandle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.23,46,31
2542_10,10,17,"try {
SQLiteDatabase database = DatabaseManager.openDatabase(getContext(), false, handle);
nonFoilSets = CardDbAdapter.getNonFoilSets(database);
} catch (SQLiteException | FamiliarDbException | IllegalStateException ignored) {
nonFoilSets = new ArrayList<>();
} finally {
DatabaseManager.closeDatabase(getContext(), handle);
}",0,0,0,0,1,0,0,0,0,6,1,8,0,1,0,1,2,2,0,0,0,0.37,38,24
2542_11,11,11,"SQLiteDatabase database = DatabaseManager.openDatabase(getContext(), false, handle);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.29,44,29
2542_12,12,12,nonFoilSets = CardDbAdapter.getNonFoilSets(database);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.43,43,28
2542_13,13,13,} catch (SQLiteException | FamiliarDbException | IllegalStateException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.24,42,27
2542_14,14,14,nonFoilSets = new ArrayList<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.28,41,26
2542_15,15,15,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.13,40,25
2542_16,16,16,"DatabaseManager.closeDatabase(getContext(), handle);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.15,39,24
2542_19,19,19,final String name = String.valueOf(getCardNameInput());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,2,2,0,0,0,0.41,36,23
2542_20,20,20,final String numberOf = String.valueOf(getCardNumberInput());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.4,35,22
2542_21,21,73,"try {
final MtgCard card = new MtgCard(getActivity(), name, null, null,
checkboxFoilIsChecked(), Integer.parseInt(numberOf), isSideboard);

final CompressedDecklistInfo decklistInfo =
new CompressedDecklistInfo(card);

synchronized (mCompressedDecklist) {
if (mCompressedDecklist.contains(decklistInfo)) {
boolean added = false;
final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);
final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);
for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}
if (!added) {
firstCard.add(card);
}
} else {
mCompressedDecklist.add(new CompressedDecklistInfo(card));
}

clearHeaders();

if (shouldShowPrice()) {
loadPrice(card);
}

Collections.sort(mCompressedDecklist, mDecklistChain);

if (!mDecklistReadError) {
DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());
}
}

clearCardNameInput();


uncheckFoilCheckbox();

updateDeckCounts(false);

setHeaderValues();
getCardDataAdapter(0).notifyDataSetChanged();
} catch (java.lang.InstantiationException e) {
}",0,0,0,0,1,0,0,0,0,30,5,53,0,1,0,1,2,2,0,0,2,0.63,0,0
2542_22,22,23,"final MtgCard card = new MtgCard(getActivity(), name, null, null,
checkboxFoilIsChecked(), Integer.parseInt(numberOf), isSideboard);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,2,2,0,0,0,0.42,32,20
2542_25,25,26,"final CompressedDecklistInfo decklistInfo =
new CompressedDecklistInfo(card);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,2,2,0,0,1,0.42,29,19
2542_28,28,28,synchronized (mCompressedDecklist) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,1,0.23,27,18
2542_29,29,48,"if (mCompressedDecklist.contains(decklistInfo)) {
boolean added = false;
final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);
final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);
for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}
if (!added) {
firstCard.add(card);
}
} else {
mCompressedDecklist.add(new CompressedDecklistInfo(card));
}",1,0,0,0,0,0,0,0,0,14,3,20,0,0,0,1,2,2,0,0,1,0.44,7,3
2542_30,30,30,boolean added = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.31,25,16
2542_31,31,31,final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.29,24,15
2542_32,32,33,"final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);",0,0,0,0,0,1,0,0,0,0,0,2,1,1,0,0,2,2,0,0,1,0.44,22,14
2542_34,34,42,"for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}",0,0,1,0,0,0,0,0,0,6,2,9,1,1,0,0,2,2,0,0,0,0.44,13,7
2542_35,35,35,CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.46,20,12
2542_36,36,41,"if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,2,2,0,0,0,0.42,14,7
2542_37,37,37,(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.43,18,10
2542_38,38,38,firstIsi.mNumberOf++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.3,17,9
2542_39,39,39,added = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.27,16,8
2542_40,40,40,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,2,0,0,0,0.38,15,7
2542_43,43,45,"if (!added) {
firstCard.add(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,2,0,0,0,0.5,10,5
2542_44,44,44,firstCard.add(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.52,11,5
2542_46,46,46,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,9,4
2542_47,47,47,mCompressedDecklist.add(new CompressedDecklistInfo(card));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.43,8,3
2542_50,50,50,clearHeaders();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.2,5,2
2542_52,52,54,"if (shouldShowPrice()) {
loadPrice(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,0,0.5,1,0
2542_53,53,53,loadPrice(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.51,2,0
2542_56,56,56,"Collections.sort(mCompressedDecklist, mDecklistChain);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,2,0.74,0,0
2542_58,58,60,"if (!mDecklistReadError) {
DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,2,2,0,0,1,0.33,2,1
2542_59,59,59,"DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.34,3,1
2542_63,63,63,clearCardNameInput();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.42,7,3
2542_66,66,66,uncheckFoilCheckbox();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.34,10,4
2542_68,68,68,updateDeckCounts(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.37,12,5
2542_70,70,70,setHeaderValues();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.22,14,6
2542_71,71,71,getCardDataAdapter(0).notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.42,15,6
2542_72,72,72,} catch (java.lang.InstantiationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.19,16,7
2543_1,1,1,private void addCardToDeck(final boolean isSideboard) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.19,57,38
2543_3,3,6,"if (getCardNameInput() == null || getCardNameInput().length() == 0 ||
getCardNumberInput() == null || getCardNumberInput().length() == 0) {
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,2,1,0,0,0,0.18,52,35
2543_4,4,4,getCardNumberInput() == null || getCardNumberInput().length() == 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.19,54,36
2543_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.15,53,35
2543_8,8,8,ArrayList<String> nonFoilSets;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,2,1,0,0,0,0.1,50,34
2543_9,9,9,FamiliarDbHandle handle = new FamiliarDbHandle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.19,49,33
2543_10,10,17,"try {
SQLiteDatabase database = DatabaseManager.openDatabase(getContext(), false, handle);
nonFoilSets = CardDbAdapter.getNonFoilSets(database);
} catch (SQLiteException | FamiliarDbException | IllegalStateException ignored) {
nonFoilSets = new ArrayList<>();
} finally {
DatabaseManager.closeDatabase(getContext(), handle);
}",0,0,0,0,1,0,0,0,0,6,1,8,0,1,0,1,2,1,0,0,0,0.26,41,26
2543_11,11,11,"SQLiteDatabase database = DatabaseManager.openDatabase(getContext(), false, handle);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.26,47,31
2543_12,12,12,nonFoilSets = CardDbAdapter.getNonFoilSets(database);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.22,46,30
2543_13,13,13,} catch (SQLiteException | FamiliarDbException | IllegalStateException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.28,45,29
2543_14,14,14,nonFoilSets = new ArrayList<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.07,44,28
2543_15,15,15,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.07,43,27
2543_16,16,16,"DatabaseManager.closeDatabase(getContext(), handle);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.25,42,26
2543_19,19,19,final String name = String.valueOf(getCardNameInput());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,2,1,0,0,0,0.19,39,25
2543_20,20,20,final String numberOf = String.valueOf(getCardNumberInput());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,1,0,0,0,0.21,38,24
2543_21,21,73,"try {
final MtgCard card = new MtgCard(getActivity(), name, null, null,
checkboxFoilIsChecked(), Integer.parseInt(numberOf), isSideboard);

final CompressedDecklistInfo decklistInfo =
new CompressedDecklistInfo(card);

synchronized (mCompressedDecklist) {
if (mCompressedDecklist.contains(decklistInfo)) {
boolean added = false;
final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);
final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);
for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}
if (!added) {
firstCard.add(card);
}
} else {
mCompressedDecklist.add(new CompressedDecklistInfo(card));
}

clearHeaders();

if (shouldShowPrice()) {
loadPrice(card);
}

Collections.sort(mCompressedDecklist, mDecklistChain);

if (!mDecklistReadError) {
DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());
}
}

clearCardNameInput();


uncheckFoilCheckbox();

updateDeckCounts(false);

setHeaderValues();
getCardDataAdapter(0).notifyDataSetChanged();
} catch (java.lang.InstantiationException e) {
}",0,0,0,0,1,0,0,0,0,30,5,53,0,1,0,1,2,1,0,0,1,0.23,0,0
2543_22,22,23,"final MtgCard card = new MtgCard(getActivity(), name, null, null,
checkboxFoilIsChecked(), Integer.parseInt(numberOf), isSideboard);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,2,1,0,0,0,0.2,35,22
2543_25,25,26,"final CompressedDecklistInfo decklistInfo =
new CompressedDecklistInfo(card);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,2,1,0,0,1,0.19,32,21
2543_28,28,28,synchronized (mCompressedDecklist) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,1,0,0,1,0.18,30,20
2543_29,29,48,"if (mCompressedDecklist.contains(decklistInfo)) {
boolean added = false;
final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);
final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);
for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}
if (!added) {
firstCard.add(card);
}
} else {
mCompressedDecklist.add(new CompressedDecklistInfo(card));
}",1,0,0,0,0,0,0,0,0,14,3,20,0,0,0,1,2,1,0,0,1,0.21,10,5
2543_30,30,30,boolean added = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.19,28,18
2543_31,31,31,final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,1,0.16,27,17
2543_32,32,33,"final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);",0,0,0,0,0,1,0,0,0,0,0,2,1,1,0,0,2,1,0,0,1,0.19,25,16
2543_34,34,42,"for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}",0,0,1,0,0,0,0,0,0,6,2,9,1,1,0,0,2,1,0,0,0,0.21,16,9
2543_35,35,35,CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.19,23,14
2543_36,36,41,"if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,2,1,0,0,0,0.21,17,9
2543_37,37,37,(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.2,21,12
2543_38,38,38,firstIsi.mNumberOf++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.22,20,11
2543_39,39,39,added = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.2,19,10
2543_40,40,40,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,1,0,0,0,-0.01,18,9
2543_43,43,45,"if (!added) {
firstCard.add(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,1,0,0,0,0.17,13,7
2543_44,44,44,firstCard.add(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.12,14,7
2543_46,46,46,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.24,12,6
2543_47,47,47,mCompressedDecklist.add(new CompressedDecklistInfo(card));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.19,11,5
2543_50,50,50,clearHeaders();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,1,0,0,0,0.08,8,4
2543_52,52,54,"if (shouldShowPrice()) {
loadPrice(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,1,0,0,0,0.23,4,2
2543_53,53,53,loadPrice(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.24,5,2
2543_56,56,56,"Collections.sort(mCompressedDecklist, mDecklistChain);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,1,0,0,1,0.09,2,1
2543_58,58,60,"if (!mDecklistReadError) {
DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,2,1,0,0,1,0.22,0,0
2543_59,59,59,"DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.22,0,0
2543_63,63,63,clearCardNameInput();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,1,0,0,0,0.07,4,1
2543_66,66,66,uncheckFoilCheckbox();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,1,0,0,0,0.12,7,2
2543_68,68,68,updateDeckCounts(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,1,0,0,0,0.12,9,3
2543_70,70,70,setHeaderValues();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,1,0,0,0,0.19,11,4
2543_71,71,71,getCardDataAdapter(0).notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.23,12,4
2543_72,72,72,} catch (java.lang.InstantiationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.26,13,5
2544_1,1,1,private void addCardToDeck(final boolean isSideboard) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.42,61,39
2544_3,3,6,"if (getCardNameInput() == null || getCardNameInput().length() == 0 ||
getCardNumberInput() == null || getCardNumberInput().length() == 0) {
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,1,0,0,0,0.2,56,36
2544_4,4,4,getCardNumberInput() == null || getCardNumberInput().length() == 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.2,58,37
2544_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.07,57,36
2544_8,8,8,ArrayList<String> nonFoilSets;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,1,0,0,0,0.27,54,35
2544_9,9,9,FamiliarDbHandle handle = new FamiliarDbHandle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.24,53,34
2544_10,10,17,"try {
SQLiteDatabase database = DatabaseManager.openDatabase(getContext(), false, handle);
nonFoilSets = CardDbAdapter.getNonFoilSets(database);
} catch (SQLiteException | FamiliarDbException | IllegalStateException ignored) {
nonFoilSets = new ArrayList<>();
} finally {
DatabaseManager.closeDatabase(getContext(), handle);
}",0,0,0,0,1,0,0,0,0,6,1,8,0,1,0,1,3,1,0,0,0,0.31,45,27
2544_11,11,11,"SQLiteDatabase database = DatabaseManager.openDatabase(getContext(), false, handle);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.32,51,32
2544_12,12,12,nonFoilSets = CardDbAdapter.getNonFoilSets(database);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.27,50,31
2544_13,13,13,} catch (SQLiteException | FamiliarDbException | IllegalStateException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.3,49,30
2544_14,14,14,nonFoilSets = new ArrayList<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.28,48,29
2544_15,15,15,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.13,47,28
2544_16,16,16,"DatabaseManager.closeDatabase(getContext(), handle);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.21,46,27
2544_19,19,19,final String name = String.valueOf(getCardNameInput());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,3,1,0,0,0,0.19,43,26
2544_20,20,20,final String numberOf = String.valueOf(getCardNumberInput());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,1,0,0,0,0.19,42,25
2544_21,21,73,"try {
final MtgCard card = new MtgCard(getActivity(), name, null, null,
checkboxFoilIsChecked(), Integer.parseInt(numberOf), isSideboard);

final CompressedDecklistInfo decklistInfo =
new CompressedDecklistInfo(card);

synchronized (mCompressedDecklist) {
if (mCompressedDecklist.contains(decklistInfo)) {
boolean added = false;
final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);
final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);
for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}
if (!added) {
firstCard.add(card);
}
} else {
mCompressedDecklist.add(new CompressedDecklistInfo(card));
}

clearHeaders();

if (shouldShowPrice()) {
loadPrice(card);
}

Collections.sort(mCompressedDecklist, mDecklistChain);

if (!mDecklistReadError) {
DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());
}
}

clearCardNameInput();


uncheckFoilCheckbox();

updateDeckCounts(false);

setHeaderValues();
getCardDataAdapter(0).notifyDataSetChanged();
} catch (java.lang.InstantiationException e) {
}",0,0,0,0,1,0,0,0,0,30,5,53,0,1,0,1,3,1,0,0,1,0.46,0,0
2544_22,22,23,"final MtgCard card = new MtgCard(getActivity(), name, null, null,
checkboxFoilIsChecked(), Integer.parseInt(numberOf), isSideboard);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,3,1,0,0,0,0.23,39,23
2544_25,25,26,"final CompressedDecklistInfo decklistInfo =
new CompressedDecklistInfo(card);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,3,1,0,0,0,0.27,36,22
2544_28,28,28,synchronized (mCompressedDecklist) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,0,0,0,0.31,34,21
2544_29,29,48,"if (mCompressedDecklist.contains(decklistInfo)) {
boolean added = false;
final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);
final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);
for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}
if (!added) {
firstCard.add(card);
}
} else {
mCompressedDecklist.add(new CompressedDecklistInfo(card));
}",1,0,0,0,0,0,0,0,0,14,3,20,0,0,0,1,3,1,0,0,1,0.44,14,6
2544_30,30,30,boolean added = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.23,32,19
2544_31,31,31,final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.33,31,18
2544_32,32,33,"final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);",0,0,0,0,0,1,0,0,0,0,0,2,1,1,0,0,3,1,0,0,0,0.31,29,17
2544_34,34,42,"for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}",0,0,1,0,0,0,0,0,0,6,2,9,1,1,0,0,3,1,0,0,0,0.28,20,10
2544_35,35,35,CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.24,27,15
2544_36,36,41,"if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,3,1,0,0,0,0.27,21,10
2544_37,37,37,(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.24,25,13
2544_38,38,38,firstIsi.mNumberOf++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.19,24,12
2544_39,39,39,added = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.25,23,11
2544_40,40,40,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,1,0,0,0,0.24,22,10
2544_43,43,45,"if (!added) {
firstCard.add(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,1,0,0,1,0.46,17,8
2544_44,44,44,firstCard.add(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.46,18,8
2544_46,46,46,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.11,16,7
2544_47,47,47,mCompressedDecklist.add(new CompressedDecklistInfo(card));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.46,15,6
2544_50,50,50,clearHeaders();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,0,0,0,0.31,12,5
2544_52,52,54,"if (shouldShowPrice()) {
loadPrice(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,1,0,0,0,0.29,8,3
2544_53,53,53,loadPrice(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.28,9,3
2544_56,56,56,"Collections.sort(mCompressedDecklist, mDecklistChain);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,0,0,0,0.32,6,2
2544_58,58,60,"if (!mDecklistReadError) {
DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,1,0,0,0,0.28,2,0
2544_59,59,59,"DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.27,3,0
2544_63,63,63,clearCardNameInput();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,0,0,0,0.23,0,0
2544_66,66,66,uncheckFoilCheckbox();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,0,0,0,0.27,3,1
2544_68,68,68,updateDeckCounts(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,0,0,0,0.27,5,2
2544_70,70,70,setHeaderValues();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,0,0,0,0.24,7,3
2544_71,71,71,getCardDataAdapter(0).notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.34,8,3
2544_72,72,72,} catch (java.lang.InstantiationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.3,9,4
2545_1,1,1,private void addCardToDeck(final boolean isSideboard) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.37,64,40
2545_3,3,6,"if (getCardNameInput() == null || getCardNameInput().length() == 0 ||
getCardNumberInput() == null || getCardNumberInput().length() == 0) {
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,4,3,0,0,0,0.33,59,37
2545_4,4,4,getCardNumberInput() == null || getCardNumberInput().length() == 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.33,61,38
2545_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.21,60,37
2545_8,8,8,ArrayList<String> nonFoilSets;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.31,57,36
2545_9,9,9,FamiliarDbHandle handle = new FamiliarDbHandle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.39,56,35
2545_10,10,17,"try {
SQLiteDatabase database = DatabaseManager.openDatabase(getContext(), false, handle);
nonFoilSets = CardDbAdapter.getNonFoilSets(database);
} catch (SQLiteException | FamiliarDbException | IllegalStateException ignored) {
nonFoilSets = new ArrayList<>();
} finally {
DatabaseManager.closeDatabase(getContext(), handle);
}",0,0,0,0,1,0,0,0,0,6,1,8,0,1,0,1,4,3,0,0,1,0.41,48,28
2545_11,11,11,"SQLiteDatabase database = DatabaseManager.openDatabase(getContext(), false, handle);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.42,54,33
2545_12,12,12,nonFoilSets = CardDbAdapter.getNonFoilSets(database);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.36,53,32
2545_13,13,13,} catch (SQLiteException | FamiliarDbException | IllegalStateException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.42,52,31
2545_14,14,14,nonFoilSets = new ArrayList<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.35,51,30
2545_15,15,15,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.25,50,29
2545_16,16,16,"DatabaseManager.closeDatabase(getContext(), handle);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.34,49,28
2545_19,19,19,final String name = String.valueOf(getCardNameInput());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,4,3,0,0,0,0.32,46,27
2545_20,20,20,final String numberOf = String.valueOf(getCardNumberInput());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,3,0,0,0,0.31,45,26
2545_21,21,73,"try {
final MtgCard card = new MtgCard(getActivity(), name, null, null,
checkboxFoilIsChecked(), Integer.parseInt(numberOf), isSideboard);

final CompressedDecklistInfo decklistInfo =
new CompressedDecklistInfo(card);

synchronized (mCompressedDecklist) {
if (mCompressedDecklist.contains(decklistInfo)) {
boolean added = false;
final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);
final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);
for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}
if (!added) {
firstCard.add(card);
}
} else {
mCompressedDecklist.add(new CompressedDecklistInfo(card));
}

clearHeaders();

if (shouldShowPrice()) {
loadPrice(card);
}

Collections.sort(mCompressedDecklist, mDecklistChain);

if (!mDecklistReadError) {
DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());
}
}

clearCardNameInput();


uncheckFoilCheckbox();

updateDeckCounts(false);

setHeaderValues();
getCardDataAdapter(0).notifyDataSetChanged();
} catch (java.lang.InstantiationException e) {
}",0,0,0,0,1,0,0,0,0,30,5,53,0,1,0,1,4,3,0,0,2,0.54,0,0
2545_22,22,23,"final MtgCard card = new MtgCard(getActivity(), name, null, null,
checkboxFoilIsChecked(), Integer.parseInt(numberOf), isSideboard);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,4,3,0,0,1,0.37,42,24
2545_25,25,26,"final CompressedDecklistInfo decklistInfo =
new CompressedDecklistInfo(card);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,4,3,0,0,0,0.45,39,23
2545_28,28,28,synchronized (mCompressedDecklist) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.57,37,22
2545_29,29,48,"if (mCompressedDecklist.contains(decklistInfo)) {
boolean added = false;
final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);
final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);
for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}
if (!added) {
firstCard.add(card);
}
} else {
mCompressedDecklist.add(new CompressedDecklistInfo(card));
}",1,0,0,0,0,0,0,0,0,14,3,20,0,0,0,1,4,3,0,0,1,0.42,17,7
2545_30,30,30,boolean added = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.32,35,20
2545_31,31,31,final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.42,34,19
2545_32,32,33,"final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);",0,0,0,0,0,1,0,0,0,0,0,2,1,1,0,0,4,3,0,0,0,0.43,32,18
2545_34,34,42,"for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}",0,0,1,0,0,0,0,0,0,6,2,9,1,1,0,0,4,3,0,0,1,0.35,23,11
2545_35,35,35,CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.33,30,16
2545_36,36,41,"if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,4,3,0,0,1,0.33,24,11
2545_37,37,37,(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.32,28,14
2545_38,38,38,firstIsi.mNumberOf++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.2,27,13
2545_39,39,39,added = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,26,12
2545_40,40,40,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.36,25,11
2545_43,43,45,"if (!added) {
firstCard.add(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,0,0.32,20,9
2545_44,44,44,firstCard.add(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,21,9
2545_46,46,46,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.25,19,8
2545_47,47,47,mCompressedDecklist.add(new CompressedDecklistInfo(card));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.46,18,7
2545_50,50,50,clearHeaders();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.28,15,6
2545_52,52,54,"if (shouldShowPrice()) {
loadPrice(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,0,0.5,11,4
2545_53,53,53,loadPrice(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.45,12,4
2545_56,56,56,"Collections.sort(mCompressedDecklist, mDecklistChain);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.46,9,3
2545_58,58,60,"if (!mDecklistReadError) {
DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,4,3,0,0,0,0.44,5,1
2545_59,59,59,"DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.44,6,1
2545_63,63,63,clearCardNameInput();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.34,2,0
2545_66,66,66,uncheckFoilCheckbox();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,2,0.53,0,0
2545_68,68,68,updateDeckCounts(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.3,2,1
2545_70,70,70,setHeaderValues();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.22,4,2
2545_71,71,71,getCardDataAdapter(0).notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,5,2
2545_72,72,72,} catch (java.lang.InstantiationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.45,6,3
2546_1,1,1,private void addCardToDeck(final boolean isSideboard) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.48,66,41
2546_3,3,6,"if (getCardNameInput() == null || getCardNameInput().length() == 0 ||
getCardNumberInput() == null || getCardNumberInput().length() == 0) {
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,4,3,0,0,2,0.57,61,38
2546_4,4,4,getCardNumberInput() == null || getCardNumberInput().length() == 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.61,63,39
2546_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.15,62,38
2546_8,8,8,ArrayList<String> nonFoilSets;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.49,59,37
2546_9,9,9,FamiliarDbHandle handle = new FamiliarDbHandle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.33,58,36
2546_10,10,17,"try {
SQLiteDatabase database = DatabaseManager.openDatabase(getContext(), false, handle);
nonFoilSets = CardDbAdapter.getNonFoilSets(database);
} catch (SQLiteException | FamiliarDbException | IllegalStateException ignored) {
nonFoilSets = new ArrayList<>();
} finally {
DatabaseManager.closeDatabase(getContext(), handle);
}",0,0,0,0,1,0,0,0,0,6,1,8,0,1,0,1,4,3,0,0,2,0.55,50,29
2546_11,11,11,"SQLiteDatabase database = DatabaseManager.openDatabase(getContext(), false, handle);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.38,56,34
2546_12,12,12,nonFoilSets = CardDbAdapter.getNonFoilSets(database);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.54,55,33
2546_13,13,13,} catch (SQLiteException | FamiliarDbException | IllegalStateException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.34,54,32
2546_14,14,14,nonFoilSets = new ArrayList<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.48,53,31
2546_15,15,15,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.21,52,30
2546_16,16,16,"DatabaseManager.closeDatabase(getContext(), handle);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.33,51,29
2546_19,19,19,final String name = String.valueOf(getCardNameInput());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,4,3,0,0,1,0.46,48,28
2546_20,20,20,final String numberOf = String.valueOf(getCardNumberInput());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,3,0,0,2,0.61,47,27
2546_21,21,73,"try {
final MtgCard card = new MtgCard(getActivity(), name, null, null,
checkboxFoilIsChecked(), Integer.parseInt(numberOf), isSideboard);

final CompressedDecklistInfo decklistInfo =
new CompressedDecklistInfo(card);

synchronized (mCompressedDecklist) {
if (mCompressedDecklist.contains(decklistInfo)) {
boolean added = false;
final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);
final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);
for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}
if (!added) {
firstCard.add(card);
}
} else {
mCompressedDecklist.add(new CompressedDecklistInfo(card));
}

clearHeaders();

if (shouldShowPrice()) {
loadPrice(card);
}

Collections.sort(mCompressedDecklist, mDecklistChain);

if (!mDecklistReadError) {
DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());
}
}

clearCardNameInput();


uncheckFoilCheckbox();

updateDeckCounts(false);

setHeaderValues();
getCardDataAdapter(0).notifyDataSetChanged();
} catch (java.lang.InstantiationException e) {
}",0,0,0,0,1,0,0,0,0,30,5,53,0,1,0,1,4,3,0,0,3,0.65,0,0
2546_22,22,23,"final MtgCard card = new MtgCard(getActivity(), name, null, null,
checkboxFoilIsChecked(), Integer.parseInt(numberOf), isSideboard);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,4,3,0,0,2,0.57,44,25
2546_25,25,26,"final CompressedDecklistInfo decklistInfo =
new CompressedDecklistInfo(card);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,4,3,0,0,1,0.45,41,24
2546_28,28,28,synchronized (mCompressedDecklist) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.25,39,23
2546_29,29,48,"if (mCompressedDecklist.contains(decklistInfo)) {
boolean added = false;
final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);
final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);
for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}
if (!added) {
firstCard.add(card);
}
} else {
mCompressedDecklist.add(new CompressedDecklistInfo(card));
}",1,0,0,0,0,0,0,0,0,14,3,20,0,0,0,1,4,3,0,0,2,0.54,19,8
2546_30,30,30,boolean added = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.3,37,21
2546_31,31,31,final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.29,36,20
2546_32,32,33,"final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);",0,0,0,0,0,1,0,0,0,0,0,2,1,1,0,0,4,3,0,0,1,0.43,34,19
2546_34,34,42,"for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}",0,0,1,0,0,0,0,0,0,6,2,9,1,1,0,0,4,3,0,0,2,0.54,25,12
2546_35,35,35,CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.49,32,17
2546_36,36,41,"if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,4,3,0,0,2,0.53,26,12
2546_37,37,37,(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.42,30,15
2546_38,38,38,firstIsi.mNumberOf++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.53,29,14
2546_39,39,39,added = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.28,28,13
2546_40,40,40,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.16,27,12
2546_43,43,45,"if (!added) {
firstCard.add(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,1,0.53,22,10
2546_44,44,44,firstCard.add(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.57,23,10
2546_46,46,46,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.37,21,9
2546_47,47,47,mCompressedDecklist.add(new CompressedDecklistInfo(card));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.45,20,8
2546_50,50,50,clearHeaders();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.32,17,7
2546_52,52,54,"if (shouldShowPrice()) {
loadPrice(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,1,0.51,13,5
2546_53,53,53,loadPrice(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.55,14,5
2546_56,56,56,"Collections.sort(mCompressedDecklist, mDecklistChain);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.35,11,4
2546_58,58,60,"if (!mDecklistReadError) {
DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,4,3,0,0,0,0.34,7,2
2546_59,59,59,"DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.33,8,2
2546_63,63,63,clearCardNameInput();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.48,4,1
2546_66,66,66,uncheckFoilCheckbox();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.34,1,0
2546_68,68,68,updateDeckCounts(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.55,0,0
2546_70,70,70,setHeaderValues();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.4,2,1
2546_71,71,71,getCardDataAdapter(0).notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.51,3,1
2546_72,72,72,} catch (java.lang.InstantiationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.29,4,2
2547_1,1,1,private void addCardToDeck(final boolean isSideboard) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,0,1,0.47,68,42
2547_3,3,6,"if (getCardNameInput() == null || getCardNameInput().length() == 0 ||
getCardNumberInput() == null || getCardNumberInput().length() == 0) {
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,5,1,0,0,1,0.44,63,39
2547_4,4,4,getCardNumberInput() == null || getCardNumberInput().length() == 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,0,1,0.45,65,40
2547_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,1,0,0,0,0.08,64,39
2547_8,8,8,ArrayList<String> nonFoilSets;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,1,0,0,0,0.37,61,38
2547_9,9,9,FamiliarDbHandle handle = new FamiliarDbHandle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,1,0,0,1,0.56,60,37
2547_10,10,17,"try {
SQLiteDatabase database = DatabaseManager.openDatabase(getContext(), false, handle);
nonFoilSets = CardDbAdapter.getNonFoilSets(database);
} catch (SQLiteException | FamiliarDbException | IllegalStateException ignored) {
nonFoilSets = new ArrayList<>();
} finally {
DatabaseManager.closeDatabase(getContext(), handle);
}",0,0,0,0,1,0,0,0,0,6,1,8,0,1,0,1,5,1,0,0,2,0.6,52,30
2547_11,11,11,"SQLiteDatabase database = DatabaseManager.openDatabase(getContext(), false, handle);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,1,0,0,0,0.34,58,35
2547_12,12,12,nonFoilSets = CardDbAdapter.getNonFoilSets(database);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,1,0,0,1,0.45,57,34
2547_13,13,13,} catch (SQLiteException | FamiliarDbException | IllegalStateException ignored) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,0,0,0.38,56,33
2547_14,14,14,nonFoilSets = new ArrayList<>();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,0,1,0.59,55,32
2547_15,15,15,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,0,0,0.24,54,31
2547_16,16,16,"DatabaseManager.closeDatabase(getContext(), handle);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,0,0,0.31,53,30
2547_19,19,19,final String name = String.valueOf(getCardNameInput());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,5,1,0,0,1,0.41,50,29
2547_20,20,20,final String numberOf = String.valueOf(getCardNumberInput());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,1,0,0,1,0.41,49,28
2547_21,21,73,"try {
final MtgCard card = new MtgCard(getActivity(), name, null, null,
checkboxFoilIsChecked(), Integer.parseInt(numberOf), isSideboard);

final CompressedDecklistInfo decklistInfo =
new CompressedDecklistInfo(card);

synchronized (mCompressedDecklist) {
if (mCompressedDecklist.contains(decklistInfo)) {
boolean added = false;
final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);
final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);
for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}
if (!added) {
firstCard.add(card);
}
} else {
mCompressedDecklist.add(new CompressedDecklistInfo(card));
}

clearHeaders();

if (shouldShowPrice()) {
loadPrice(card);
}

Collections.sort(mCompressedDecklist, mDecklistChain);

if (!mDecklistReadError) {
DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());
}
}

clearCardNameInput();


uncheckFoilCheckbox();

updateDeckCounts(false);

setHeaderValues();
getCardDataAdapter(0).notifyDataSetChanged();
} catch (java.lang.InstantiationException e) {
}",0,0,0,0,1,0,0,0,0,30,5,53,0,1,0,1,5,1,0,0,3,0.66,0,0
2547_22,22,23,"final MtgCard card = new MtgCard(getActivity(), name, null, null,
checkboxFoilIsChecked(), Integer.parseInt(numberOf), isSideboard);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,5,1,0,0,2,0.64,46,26
2547_25,25,26,"final CompressedDecklistInfo decklistInfo =
new CompressedDecklistInfo(card);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,5,1,0,0,3,0.71,43,25
2547_28,28,28,synchronized (mCompressedDecklist) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,1,0,0,1,0.32,41,24
2547_29,29,48,"if (mCompressedDecklist.contains(decklistInfo)) {
boolean added = false;
final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);
final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);
for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}
if (!added) {
firstCard.add(card);
}
} else {
mCompressedDecklist.add(new CompressedDecklistInfo(card));
}",1,0,0,0,0,0,0,0,0,14,3,20,0,0,0,1,5,1,0,0,3,0.65,21,9
2547_30,30,30,boolean added = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,1,0,0,0,0.33,39,22
2547_31,31,31,final int firstIndex = mCompressedDecklist.indexOf(decklistInfo);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,1,0,0,1,0.36,38,21
2547_32,32,33,"final CompressedDecklistInfo firstCard =
mCompressedDecklist.get(firstIndex);",0,0,0,0,0,1,0,0,0,0,0,2,1,1,0,0,5,1,0,0,2,0.47,36,20
2547_34,34,42,"for (int i = 0; i < firstCard.mInfo.size(); i++) {
CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);
if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}
}",0,0,1,0,0,0,0,0,0,6,2,9,1,1,0,0,5,1,0,0,1,0.46,27,13
2547_35,35,35,CardHelpers.IndividualSetInfo firstIsi = firstCard.mInfo.get(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,1,0,0,1,0.45,34,18
2547_36,36,41,"if (firstIsi.mSetCode.equals(card.getExpansion()) &&
(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {
firstIsi.mNumberOf++;
added = true;
break;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,5,1,0,0,1,0.43,28,13
2547_37,37,37,(firstIsi.mIsFoil.equals(card.mIsFoil) || nonFoilSets.contains(firstIsi.mSetCode))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,0,1,0.39,32,16
2547_38,38,38,firstIsi.mNumberOf++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,0,0,0.26,31,15
2547_39,39,39,added = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,0,0,0.29,30,14
2547_40,40,40,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,1,0,0,0,0.22,29,13
2547_43,43,45,"if (!added) {
firstCard.add(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,1,0,0,1,0.55,24,11
2547_44,44,44,firstCard.add(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,0,1,0.57,25,11
2547_46,46,46,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,0,0,0.24,23,10
2547_47,47,47,mCompressedDecklist.add(new CompressedDecklistInfo(card));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,0,3,0.74,22,9
2547_50,50,50,clearHeaders();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,1,0,0,0,0.4,19,8
2547_52,52,54,"if (shouldShowPrice()) {
loadPrice(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,1,0,0,1,0.47,15,6
2547_53,53,53,loadPrice(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,0,1,0.52,16,6
2547_56,56,56,"Collections.sort(mCompressedDecklist, mDecklistChain);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,1,0,0,1,0.4,13,5
2547_58,58,60,"if (!mDecklistReadError) {
DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,5,1,0,0,1,0.34,9,3
2547_59,59,59,"DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist, getCurrentDeckName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,0,1,0.35,10,3
2547_63,63,63,clearCardNameInput();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,1,0,0,1,0.52,6,2
2547_66,66,66,uncheckFoilCheckbox();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,1,0,0,0,0.33,3,1
2547_68,68,68,updateDeckCounts(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,1,0,0,0,0.35,1,0
2547_70,70,70,setHeaderValues();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,1,0,0,0,0.31,0,0
2547_71,71,71,getCardDataAdapter(0).notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,0,1,0.45,1,0
2547_72,72,72,} catch (java.lang.InstantiationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,0,0,0.36,2,1
2548_1,1,1,"public void readAndCompressDecklist(final String changedCardName, final String deckName) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,2,0.62,4,3
2548_2,2,2,synchronized (mCompressedDecklist) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.4,3,2
2548_3,3,44,"try {
final String lDeckName = getAndSetDeckName(deckName);

final ArrayList<MtgCard> decklist =
DecklistHelpers.ReadDecklist(getActivity(), lDeckName, true);

clearCompressedInfo(changedCardName);

for (MtgCard card : decklist) {
if (!card.getName().isEmpty()) {
if (changedCardName == null || changedCardName.equals(card.getName())) {
CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);
if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}
if (shouldShowPrice()) {
loadPrice(card);
}
}
}
}

if (changedCardName != null) {
for (int i = 0; i < mCompressedDecklist.size(); i++) {
if (mCompressedDecklist.get(i).mInfo.size() == 0) {
mCompressedDecklist.remove(i);
i--;
}
}
}
Collections.sort(mCompressedDecklist, mDecklistChain);
setHeaderValues();
updateDeckCounts(false);
} catch (FamiliarDbException e) {
handleFamiliarDbException(true);
mDecklistReadError = true;
return;
}",0,0,0,0,1,0,0,0,0,26,5,42,0,0,0,0,2,1,0,0,2,0.61,0,0
2548_4,4,4,final String lDeckName = getAndSetDeckName(deckName);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,1,0,0,0,0.19,1,0
2548_6,6,7,"final ArrayList<MtgCard> decklist =
DecklistHelpers.ReadDecklist(getActivity(), lDeckName, true);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,2,1,0,0,2,0.62,0,0
2548_9,9,9,clearCompressedInfo(changedCardName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,1,0,0,0,0.32,3,1
2548_11,11,27,"for (MtgCard card : decklist) {
if (!card.getName().isEmpty()) {
if (changedCardName == null || changedCardName.equals(card.getName())) {
CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);
if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}
if (shouldShowPrice()) {
loadPrice(card);
}
}
}
}",0,0,0,1,0,0,0,0,0,10,4,17,0,0,1,1,2,1,0,0,1,0.33,5,2
2548_12,12,26,"if (!card.getName().isEmpty()) {
if (changedCardName == null || changedCardName.equals(card.getName())) {
CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);
if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}
if (shouldShowPrice()) {
loadPrice(card);
}
}
}",1,0,0,0,0,0,0,0,0,9,3,15,0,0,0,0,2,1,0,0,1,0.33,6,2
2548_13,13,25,"if (changedCardName == null || changedCardName.equals(card.getName())) {
CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);
if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}
if (shouldShowPrice()) {
loadPrice(card);
}
}",1,0,0,0,0,0,0,0,0,8,2,13,0,0,0,0,2,1,0,0,1,0.34,7,3
2548_14,14,15,"CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,2,1,0,0,1,0.36,8,4
2548_16,16,21,"if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,2,1,0,0,1,0.35,10,6
2548_17,17,17,mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.37,11,6
2548_18,18,18,.add(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.18,12,7
2548_19,19,19,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.26,13,8
2548_20,20,20,mCompressedDecklist.add(wrapped);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.35,14,9
2548_22,22,24,"if (shouldShowPrice()) {
loadPrice(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,1,0,0,0,0.25,16,11
2548_23,23,23,loadPrice(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.26,17,11
2548_29,29,36,"if (changedCardName != null) {
for (int i = 0; i < mCompressedDecklist.size(); i++) {
if (mCompressedDecklist.get(i).mInfo.size() == 0) {
mCompressedDecklist.remove(i);
i--;
}
}
}",1,0,0,0,0,0,0,0,0,4,3,8,0,0,1,0,2,1,0,0,1,0.34,23,13
2548_30,30,35,"for (int i = 0; i < mCompressedDecklist.size(); i++) {
if (mCompressedDecklist.get(i).mInfo.size() == 0) {
mCompressedDecklist.remove(i);
i--;
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,0,0,0,2,1,0,0,1,0.36,24,13
2548_31,31,34,"if (mCompressedDecklist.get(i).mInfo.size() == 0) {
mCompressedDecklist.remove(i);
i--;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,2,1,0,0,1,0.35,25,14
2548_32,32,32,mCompressedDecklist.remove(i);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,1,0.37,26,15
2548_33,33,33,i--;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.0,27,16
2548_37,37,37,"Collections.sort(mCompressedDecklist, mDecklistChain);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.37,31,18
2548_38,38,38,setHeaderValues();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.26,32,18
2548_39,39,39,updateDeckCounts(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.2,33,19
2548_40,40,40,} catch (FamiliarDbException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.3,34,20
2548_41,41,41,handleFamiliarDbException(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.34,35,21
2548_42,42,42,mDecklistReadError = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,2,0.74,36,22
2548_43,43,43,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.13,37,23
2548_45,45,45,mDecklistReadError = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,2,0.72,39,25
2549_1,1,1,"public void readAndCompressDecklist(final String changedCardName, final String deckName) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.55,7,4
2549_2,2,2,synchronized (mCompressedDecklist) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.28,6,3
2549_3,3,44,"try {
final String lDeckName = getAndSetDeckName(deckName);

final ArrayList<MtgCard> decklist =
DecklistHelpers.ReadDecklist(getActivity(), lDeckName, true);

clearCompressedInfo(changedCardName);

for (MtgCard card : decklist) {
if (!card.getName().isEmpty()) {
if (changedCardName == null || changedCardName.equals(card.getName())) {
CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);
if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}
if (shouldShowPrice()) {
loadPrice(card);
}
}
}
}

if (changedCardName != null) {
for (int i = 0; i < mCompressedDecklist.size(); i++) {
if (mCompressedDecklist.get(i).mInfo.size() == 0) {
mCompressedDecklist.remove(i);
i--;
}
}
}
Collections.sort(mCompressedDecklist, mDecklistChain);
setHeaderValues();
updateDeckCounts(false);
} catch (FamiliarDbException e) {
handleFamiliarDbException(true);
mDecklistReadError = true;
return;
}",0,0,0,0,1,0,0,0,0,26,5,42,0,0,0,0,4,3,0,0,4,0.7,0,0
2549_4,4,4,final String lDeckName = getAndSetDeckName(deckName);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.35,4,1
2549_6,6,7,"final ArrayList<MtgCard> decklist =
DecklistHelpers.ReadDecklist(getActivity(), lDeckName, true);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,4,3,0,0,2,0.49,1,0
2549_9,9,9,clearCompressedInfo(changedCardName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,3,0.82,0,0
2549_11,11,27,"for (MtgCard card : decklist) {
if (!card.getName().isEmpty()) {
if (changedCardName == null || changedCardName.equals(card.getName())) {
CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);
if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}
if (shouldShowPrice()) {
loadPrice(card);
}
}
}
}",0,0,0,1,0,0,0,0,0,10,4,17,0,0,1,1,4,3,0,0,3,0.61,2,1
2549_12,12,26,"if (!card.getName().isEmpty()) {
if (changedCardName == null || changedCardName.equals(card.getName())) {
CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);
if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}
if (shouldShowPrice()) {
loadPrice(card);
}
}
}",1,0,0,0,0,0,0,0,0,9,3,15,0,0,0,0,4,3,0,0,3,0.6,3,1
2549_13,13,25,"if (changedCardName == null || changedCardName.equals(card.getName())) {
CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);
if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}
if (shouldShowPrice()) {
loadPrice(card);
}
}",1,0,0,0,0,0,0,0,0,8,2,13,0,0,0,0,4,3,0,0,3,0.6,4,2
2549_14,14,15,"CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,3,0,0,2,0.49,5,3
2549_16,16,21,"if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,4,3,0,0,2,0.44,7,5
2549_17,17,17,mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.26,8,5
2549_18,18,18,.add(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.58,9,6
2549_19,19,19,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.22,10,7
2549_20,20,20,mCompressedDecklist.add(wrapped);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.26,11,8
2549_22,22,24,"if (shouldShowPrice()) {
loadPrice(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,1,0.52,13,10
2549_23,23,23,loadPrice(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.57,14,10
2549_29,29,36,"if (changedCardName != null) {
for (int i = 0; i < mCompressedDecklist.size(); i++) {
if (mCompressedDecklist.get(i).mInfo.size() == 0) {
mCompressedDecklist.remove(i);
i--;
}
}
}",1,0,0,0,0,0,0,0,0,4,3,8,0,0,1,0,4,3,0,0,3,0.56,20,12
2549_30,30,35,"for (int i = 0; i < mCompressedDecklist.size(); i++) {
if (mCompressedDecklist.get(i).mInfo.size() == 0) {
mCompressedDecklist.remove(i);
i--;
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,0,0,0,4,3,0,0,1,0.27,21,12
2549_31,31,34,"if (mCompressedDecklist.get(i).mInfo.size() == 0) {
mCompressedDecklist.remove(i);
i--;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,4,3,0,0,1,0.28,22,13
2549_32,32,32,mCompressedDecklist.remove(i);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.26,23,14
2549_33,33,33,i--;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.0,24,15
2549_37,37,37,"Collections.sort(mCompressedDecklist, mDecklistChain);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.36,28,17
2549_38,38,38,setHeaderValues();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.3,29,17
2549_39,39,39,updateDeckCounts(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,30,18
2549_40,40,40,} catch (FamiliarDbException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.32,31,19
2549_41,41,41,handleFamiliarDbException(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.33,32,20
2549_42,42,42,mDecklistReadError = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.23,33,21
2549_43,43,43,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.09,34,22
2549_45,45,45,mDecklistReadError = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.22,36,24
2550_1,1,1,"public void readAndCompressDecklist(final String changedCardName, final String deckName) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,4,0.69,9,5
2550_2,2,2,synchronized (mCompressedDecklist) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,2,0.59,8,4
2550_3,3,44,"try {
final String lDeckName = getAndSetDeckName(deckName);

final ArrayList<MtgCard> decklist =
DecklistHelpers.ReadDecklist(getActivity(), lDeckName, true);

clearCompressedInfo(changedCardName);

for (MtgCard card : decklist) {
if (!card.getName().isEmpty()) {
if (changedCardName == null || changedCardName.equals(card.getName())) {
CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);
if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}
if (shouldShowPrice()) {
loadPrice(card);
}
}
}
}

if (changedCardName != null) {
for (int i = 0; i < mCompressedDecklist.size(); i++) {
if (mCompressedDecklist.get(i).mInfo.size() == 0) {
mCompressedDecklist.remove(i);
i--;
}
}
}
Collections.sort(mCompressedDecklist, mDecklistChain);
setHeaderValues();
updateDeckCounts(false);
} catch (FamiliarDbException e) {
handleFamiliarDbException(true);
mDecklistReadError = true;
return;
}",0,0,0,0,1,0,0,0,0,26,5,42,0,0,0,0,5,3,0,0,4,0.7,0,0
2550_4,4,4,final String lDeckName = getAndSetDeckName(deckName);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,3,0,0,0,0.37,6,2
2550_6,6,7,"final ArrayList<MtgCard> decklist =
DecklistHelpers.ReadDecklist(getActivity(), lDeckName, true);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,5,3,0,0,2,0.49,3,1
2550_9,9,9,clearCompressedInfo(changedCardName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,3,0,0,3,0.77,1,0
2550_11,11,27,"for (MtgCard card : decklist) {
if (!card.getName().isEmpty()) {
if (changedCardName == null || changedCardName.equals(card.getName())) {
CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);
if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}
if (shouldShowPrice()) {
loadPrice(card);
}
}
}
}",0,0,0,1,0,0,0,0,0,10,4,17,0,0,1,1,5,3,0,0,4,0.75,0,0
2550_12,12,26,"if (!card.getName().isEmpty()) {
if (changedCardName == null || changedCardName.equals(card.getName())) {
CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);
if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}
if (shouldShowPrice()) {
loadPrice(card);
}
}
}",1,0,0,0,0,0,0,0,0,9,3,15,0,0,0,0,5,3,0,0,4,0.74,1,0
2550_13,13,25,"if (changedCardName == null || changedCardName.equals(card.getName())) {
CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);
if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}
if (shouldShowPrice()) {
loadPrice(card);
}
}",1,0,0,0,0,0,0,0,0,8,2,13,0,0,0,0,5,3,0,0,4,0.74,2,1
2550_14,14,15,"CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,3,0,0,3,0.68,3,2
2550_16,16,21,"if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,5,3,0,0,3,0.64,5,4
2550_17,17,17,mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,2,0.55,6,4
2550_18,18,18,.add(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.55,7,5
2550_19,19,19,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.2,8,6
2550_20,20,20,mCompressedDecklist.add(wrapped);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,2,0.51,9,7
2550_22,22,24,"if (shouldShowPrice()) {
loadPrice(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,3,0,0,1,0.62,11,9
2550_23,23,23,loadPrice(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.66,12,9
2550_29,29,36,"if (changedCardName != null) {
for (int i = 0; i < mCompressedDecklist.size(); i++) {
if (mCompressedDecklist.get(i).mInfo.size() == 0) {
mCompressedDecklist.remove(i);
i--;
}
}
}",1,0,0,0,0,0,0,0,0,4,3,8,0,0,1,0,5,3,0,0,4,0.73,18,11
2550_30,30,35,"for (int i = 0; i < mCompressedDecklist.size(); i++) {
if (mCompressedDecklist.get(i).mInfo.size() == 0) {
mCompressedDecklist.remove(i);
i--;
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,0,0,0,5,3,0,0,2,0.53,19,11
2550_31,31,34,"if (mCompressedDecklist.get(i).mInfo.size() == 0) {
mCompressedDecklist.remove(i);
i--;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,5,3,0,0,2,0.53,20,12
2550_32,32,32,mCompressedDecklist.remove(i);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.52,21,13
2550_33,33,33,i--;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.0,22,14
2550_37,37,37,"Collections.sort(mCompressedDecklist, mDecklistChain);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,2,0.58,26,16
2550_38,38,38,setHeaderValues();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.32,27,16
2550_39,39,39,updateDeckCounts(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.38,28,17
2550_40,40,40,} catch (FamiliarDbException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.34,29,18
2550_41,41,41,handleFamiliarDbException(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.32,30,19
2550_42,42,42,mDecklistReadError = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.34,31,20
2550_43,43,43,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.18,32,21
2550_45,45,45,mDecklistReadError = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.32,34,23
2551_1,1,1,"public void readAndCompressDecklist(final String changedCardName, final String deckName) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.47,27,16
2551_2,2,2,synchronized (mCompressedDecklist) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.31,26,15
2551_3,3,44,"try {
final String lDeckName = getAndSetDeckName(deckName);

final ArrayList<MtgCard> decklist =
DecklistHelpers.ReadDecklist(getActivity(), lDeckName, true);

clearCompressedInfo(changedCardName);

for (MtgCard card : decklist) {
if (!card.getName().isEmpty()) {
if (changedCardName == null || changedCardName.equals(card.getName())) {
CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);
if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}
if (shouldShowPrice()) {
loadPrice(card);
}
}
}
}

if (changedCardName != null) {
for (int i = 0; i < mCompressedDecklist.size(); i++) {
if (mCompressedDecklist.get(i).mInfo.size() == 0) {
mCompressedDecklist.remove(i);
i--;
}
}
}
Collections.sort(mCompressedDecklist, mDecklistChain);
setHeaderValues();
updateDeckCounts(false);
} catch (FamiliarDbException e) {
handleFamiliarDbException(true);
mDecklistReadError = true;
return;
}",0,0,0,0,1,0,0,0,0,26,5,42,0,0,0,0,7,4,1,0,2,0.56,0,0
2551_4,4,4,final String lDeckName = getAndSetDeckName(deckName);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,4,1,0,0,0.39,24,13
2551_6,6,7,"final ArrayList<MtgCard> decklist =
DecklistHelpers.ReadDecklist(getActivity(), lDeckName, true);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,7,4,1,0,1,0.49,21,12
2551_9,9,9,clearCompressedInfo(changedCardName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,4,1,0,1,0.51,19,11
2551_11,11,27,"for (MtgCard card : decklist) {
if (!card.getName().isEmpty()) {
if (changedCardName == null || changedCardName.equals(card.getName())) {
CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);
if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}
if (shouldShowPrice()) {
loadPrice(card);
}
}
}
}",0,0,0,1,0,0,0,0,0,10,4,17,0,0,1,1,7,4,1,0,1,0.52,1,0
2551_12,12,26,"if (!card.getName().isEmpty()) {
if (changedCardName == null || changedCardName.equals(card.getName())) {
CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);
if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}
if (shouldShowPrice()) {
loadPrice(card);
}
}
}",1,0,0,0,0,0,0,0,0,9,3,15,0,0,0,0,7,4,1,0,1,0.5,2,0
2551_13,13,25,"if (changedCardName == null || changedCardName.equals(card.getName())) {
CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);
if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}
if (shouldShowPrice()) {
loadPrice(card);
}
}",1,0,0,0,0,0,0,0,0,8,2,13,0,0,0,0,7,4,1,0,1,0.5,3,0
2551_14,14,15,"CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,7,4,1,0,1,0.48,13,7
2551_16,16,21,"if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,7,4,1,0,1,0.44,7,2
2551_17,17,17,mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.28,11,5
2551_18,18,18,.add(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.58,10,4
2551_19,19,19,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.22,9,3
2551_20,20,20,mCompressedDecklist.add(wrapped);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.31,8,2
2551_22,22,24,"if (shouldShowPrice()) {
loadPrice(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,4,1,0,1,0.49,4,0
2551_23,23,23,loadPrice(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.54,5,0
2551_29,29,36,"if (changedCardName != null) {
for (int i = 0; i < mCompressedDecklist.size(); i++) {
if (mCompressedDecklist.get(i).mInfo.size() == 0) {
mCompressedDecklist.remove(i);
i--;
}
}
}",1,0,0,0,0,0,0,0,0,4,3,8,0,0,1,0,7,4,1,0,2,0.54,0,0
2551_30,30,35,"for (int i = 0; i < mCompressedDecklist.size(); i++) {
if (mCompressedDecklist.get(i).mInfo.size() == 0) {
mCompressedDecklist.remove(i);
i--;
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,0,0,0,7,4,1,0,1,0.41,1,0
2551_31,31,34,"if (mCompressedDecklist.get(i).mInfo.size() == 0) {
mCompressedDecklist.remove(i);
i--;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,7,4,1,0,1,0.43,2,1
2551_32,32,32,mCompressedDecklist.remove(i);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,1,0.51,3,2
2551_33,33,33,i--;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,1,0,0,0.0,4,3
2551_37,37,37,"Collections.sort(mCompressedDecklist, mDecklistChain);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.39,8,5
2551_38,38,38,setHeaderValues();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.29,9,5
2551_39,39,39,updateDeckCounts(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.33,10,6
2551_40,40,40,} catch (FamiliarDbException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.33,11,7
2551_41,41,41,handleFamiliarDbException(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.27,12,8
2551_42,42,42,mDecklistReadError = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.2,13,9
2551_43,43,43,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.21,14,10
2551_45,45,45,mDecklistReadError = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.19,16,12
2552_1,1,1,"public void readAndCompressDecklist(final String changedCardName, final String deckName) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,1,0.47,35,21
2552_2,2,2,synchronized (mCompressedDecklist) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.33,34,20
2552_3,3,44,"try {
final String lDeckName = getAndSetDeckName(deckName);

final ArrayList<MtgCard> decklist =
DecklistHelpers.ReadDecklist(getActivity(), lDeckName, true);

clearCompressedInfo(changedCardName);

for (MtgCard card : decklist) {
if (!card.getName().isEmpty()) {
if (changedCardName == null || changedCardName.equals(card.getName())) {
CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);
if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}
if (shouldShowPrice()) {
loadPrice(card);
}
}
}
}

if (changedCardName != null) {
for (int i = 0; i < mCompressedDecklist.size(); i++) {
if (mCompressedDecklist.get(i).mInfo.size() == 0) {
mCompressedDecklist.remove(i);
i--;
}
}
}
Collections.sort(mCompressedDecklist, mDecklistChain);
setHeaderValues();
updateDeckCounts(false);
} catch (FamiliarDbException e) {
handleFamiliarDbException(true);
mDecklistReadError = true;
return;
}",0,0,0,0,1,0,0,0,0,26,5,42,0,0,0,0,9,6,1,0,2,0.57,0,0
2552_4,4,4,final String lDeckName = getAndSetDeckName(deckName);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,6,1,0,0,0.37,32,18
2552_6,6,7,"final ArrayList<MtgCard> decklist =
DecklistHelpers.ReadDecklist(getActivity(), lDeckName, true);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,9,6,1,0,1,0.49,29,17
2552_9,9,9,clearCompressedInfo(changedCardName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,6,1,0,2,0.6,27,16
2552_11,11,27,"for (MtgCard card : decklist) {
if (!card.getName().isEmpty()) {
if (changedCardName == null || changedCardName.equals(card.getName())) {
CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);
if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}
if (shouldShowPrice()) {
loadPrice(card);
}
}
}
}",0,0,0,1,0,0,0,0,0,10,4,17,0,0,1,1,9,6,1,0,2,0.58,9,5
2552_12,12,26,"if (!card.getName().isEmpty()) {
if (changedCardName == null || changedCardName.equals(card.getName())) {
CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);
if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}
if (shouldShowPrice()) {
loadPrice(card);
}
}
}",1,0,0,0,0,0,0,0,0,9,3,15,0,0,0,0,9,6,1,0,2,0.57,10,5
2552_13,13,25,"if (changedCardName == null || changedCardName.equals(card.getName())) {
CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);
if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}
if (shouldShowPrice()) {
loadPrice(card);
}
}",1,0,0,0,0,0,0,0,0,8,2,13,0,0,0,0,9,6,1,0,2,0.57,11,5
2552_14,14,15,"CompressedDecklistInfo wrapped =
new CompressedDecklistInfo(card);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,9,6,1,0,2,0.64,21,12
2552_16,16,21,"if (mCompressedDecklist.contains(wrapped)) {
mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped))
.add(card);
} else {
mCompressedDecklist.add(wrapped);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,9,6,1,0,1,0.49,15,7
2552_17,17,17,mCompressedDecklist.get(mCompressedDecklist.indexOf(wrapped)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.39,19,10
2552_18,18,18,.add(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,1,0.57,18,9
2552_19,19,19,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.22,17,8
2552_20,20,20,mCompressedDecklist.add(wrapped);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.38,16,7
2552_22,22,24,"if (shouldShowPrice()) {
loadPrice(card);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,9,6,1,0,1,0.52,12,5
2552_23,23,23,loadPrice(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,1,0.56,13,5
2552_29,29,36,"if (changedCardName != null) {
for (int i = 0; i < mCompressedDecklist.size(); i++) {
if (mCompressedDecklist.get(i).mInfo.size() == 0) {
mCompressedDecklist.remove(i);
i--;
}
}
}",1,0,0,0,0,0,0,0,0,4,3,8,0,0,1,0,9,6,1,0,2,0.53,0,0
2552_30,30,35,"for (int i = 0; i < mCompressedDecklist.size(); i++) {
if (mCompressedDecklist.get(i).mInfo.size() == 0) {
mCompressedDecklist.remove(i);
i--;
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,0,0,0,9,6,1,0,1,0.44,1,0
2552_31,31,34,"if (mCompressedDecklist.get(i).mInfo.size() == 0) {
mCompressedDecklist.remove(i);
i--;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,9,6,1,0,1,0.46,2,0
2552_32,32,32,mCompressedDecklist.remove(i);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,6,1,0,0,0.35,4,1
2552_33,33,33,i--;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,6,1,0,0,0.0,3,0
2552_37,37,37,"Collections.sort(mCompressedDecklist, mDecklistChain);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.39,0,0
2552_38,38,38,setHeaderValues();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.34,1,0
2552_39,39,39,updateDeckCounts(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.37,2,1
2552_40,40,40,} catch (FamiliarDbException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.36,3,2
2552_41,41,41,handleFamiliarDbException(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.34,4,3
2552_42,42,42,mDecklistReadError = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.29,5,4
2552_43,43,43,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.16,6,5
2552_45,45,45,mDecklistReadError = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.29,8,7
2553_1,1,2,"    @Override
public boolean onOptionsItemSelected(MenuItem item) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,2,0.72,1,0
2553_4,4,64,"if (item.getItemId() == R.id.deck_menu_new) {
showDialog(DecklistDialogFragment.DIALOG_NEW_DECK, null, false);
return true;
} else if (item.getItemId() == R.id.deck_menu_save_as) {
showDialog(DecklistDialogFragment.DIALOG_SAVE_DECK_AS, null, false);
return true;
} else if (item.getItemId() == R.id.deck_menu_load) {
showDialog(DecklistDialogFragment.DIALOG_LOAD_DECK, null, false);
return true;
} else if (item.getItemId() == R.id.deck_menu_delete) {
showDialog(DecklistDialogFragment.DIALOG_DELETE_DECK, null, false);
return true;
} else if (item.getItemId() == R.id.deck_menu_clear) {
showDialog(DecklistDialogFragment.DIALOG_CONFIRMATION, null, false);
return true;
} else if (item.getItemId() == R.id.deck_menu_import) {
startNewFragment(new ImportFragment(), null);
return true;
} else if (item.getItemId() == R.id.deck_menu_share) {
Intent sendIntent = new Intent();
sendIntent.setAction(Intent.ACTION_SEND);
sendIntent.putExtra(Intent.EXTRA_SUBJECT, R.string.decklist_share_title);
synchronized (mCompressedDecklist) {
sendIntent.putExtra(Intent.EXTRA_TEXT, DecklistHelpers
.getSharableDecklist(mCompressedDecklist, getActivity()));
}
sendIntent.setType(""text/plain"");
try {
startActivity(Intent.createChooser(sendIntent,
getString(R.string.decklist_share)));
} catch (ActivityNotFoundException anfe) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.error_no_email_client,
SnackbarWrapper.LENGTH_LONG);
}
return true;
} else if (item.getItemId() == R.id.deck_menu_stats) {
try {
if (null == mCurrentDeck || mCurrentDeck.isEmpty()) {
mCurrentDeck = AUTOSAVE_NAME;
saveCurrentDeck(false);
}
startNewFragment(new DeckStatsFragment(DecklistHelpers.ReadDecklist(getActivity(), mCurrentDeck + "".deck"", true)), null);
} catch (FamiliarDbException e) {
handleFamiliarDbException(false);
}
return true;
} else if (item.getItemId() == R.id.deck_menu_legality) {
getFamiliarActivity().setLoading();

if (null != mLegalityCheckerTask) {
mLegalityCheckerTask.cancel(true);
}
mLegalityCheckerTask = new LegalityCheckerTask();
mLegalityCheckerTask.execute(this);
return true;
} else if (item.getItemId() == R.id.deck_menu_settings) {
showDialog(DecklistDialogFragment.DIALOG_PRICE_SETTING, null, false);
return true;
} else {
return super.onOptionsItemSelected(item);
}",1,0,0,0,0,0,0,0,0,50,3,61,0,0,1,0,3,2,0,0,3,0.67,0,0
2553_5,5,5,"showDialog(DecklistDialogFragment.DIALOG_NEW_DECK, null, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,1,0
2553_6,6,6,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.2,2,1
2553_7,7,7,} else if (item.getItemId() == R.id.deck_menu_save_as) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.53,3,2
2553_8,8,8,"showDialog(DecklistDialogFragment.DIALOG_SAVE_DECK_AS, null, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,4,3
2553_9,9,9,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.2,5,4
2553_10,10,10,} else if (item.getItemId() == R.id.deck_menu_load) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.53,6,5
2553_11,11,11,"showDialog(DecklistDialogFragment.DIALOG_LOAD_DECK, null, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,7,6
2553_12,12,12,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.2,8,7
2553_13,13,13,} else if (item.getItemId() == R.id.deck_menu_delete) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.53,9,8
2553_14,14,14,"showDialog(DecklistDialogFragment.DIALOG_DELETE_DECK, null, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,10,9
2553_15,15,15,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.2,11,10
2553_16,16,16,} else if (item.getItemId() == R.id.deck_menu_clear) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.53,12,11
2553_17,17,17,"showDialog(DecklistDialogFragment.DIALOG_CONFIRMATION, null, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,13,12
2553_18,18,18,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.2,14,13
2553_19,19,19,} else if (item.getItemId() == R.id.deck_menu_import) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.53,15,14
2553_20,20,20,"startNewFragment(new ImportFragment(), null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,16,15
2553_21,21,21,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.2,17,16
2553_22,22,22,} else if (item.getItemId() == R.id.deck_menu_share) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.52,18,17
2553_23,23,23,Intent sendIntent = new Intent();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.25,19,18
2553_24,24,24,sendIntent.setAction(Intent.ACTION_SEND);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.3,20,19
2553_25,25,25,"sendIntent.putExtra(Intent.EXTRA_SUBJECT, R.string.decklist_share_title);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.32,21,20
2553_26,26,26,synchronized (mCompressedDecklist) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.37,22,21
2553_27,27,28,"sendIntent.putExtra(Intent.EXTRA_TEXT, DecklistHelpers
.getSharableDecklist(mCompressedDecklist, getActivity()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.33,23,22
2553_30,30,30,"sendIntent.setType(""text/plain"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.3,26,24
2553_31,31,37,"try {
startActivity(Intent.createChooser(sendIntent,
getString(R.string.decklist_share)));
} catch (ActivityNotFoundException anfe) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.error_no_email_client,
SnackbarWrapper.LENGTH_LONG);
}",0,0,0,0,1,0,0,0,0,3,1,7,0,1,0,0,3,2,0,0,0,0.33,27,24
2553_32,32,33,"startActivity(Intent.createChooser(sendIntent,
getString(R.string.decklist_share)));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.31,28,25
2553_34,34,34,} catch (ActivityNotFoundException anfe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,30,27
2553_35,35,36,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.error_no_email_client,
SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.33,31,27
2553_38,38,38,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.2,34,29
2553_39,39,39,} else if (item.getItemId() == R.id.deck_menu_stats) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.53,35,29
2553_40,40,48,"try {
if (null == mCurrentDeck || mCurrentDeck.isEmpty()) {
mCurrentDeck = AUTOSAVE_NAME;
saveCurrentDeck(false);
}
startNewFragment(new DeckStatsFragment(DecklistHelpers.ReadDecklist(getActivity(), mCurrentDeck + "".deck"", true)), null);
} catch (FamiliarDbException e) {
handleFamiliarDbException(false);
}",0,0,0,0,1,0,0,0,0,6,2,9,0,0,0,0,3,2,0,0,1,0.42,36,30
2553_41,41,44,"if (null == mCurrentDeck || mCurrentDeck.isEmpty()) {
mCurrentDeck = AUTOSAVE_NAME;
saveCurrentDeck(false);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,3,2,0,0,0,0.26,37,31
2553_42,42,42,mCurrentDeck = AUTOSAVE_NAME;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,38,32
2553_43,43,43,saveCurrentDeck(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,39,33
2553_45,45,45,"startNewFragment(new DeckStatsFragment(DecklistHelpers.ReadDecklist(getActivity(), mCurrentDeck + "".deck"", true)), null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.27,41,35
2553_46,46,46,} catch (FamiliarDbException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,42,35
2553_47,47,47,handleFamiliarDbException(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.49,43,36
2553_49,49,49,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.2,45,38
2553_50,50,50,} else if (item.getItemId() == R.id.deck_menu_legality) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.54,46,38
2553_51,51,51,getFamiliarActivity().setLoading();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.28,47,39
2553_53,53,55,"if (null != mLegalityCheckerTask) {
mLegalityCheckerTask.cancel(true);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,2,0,0,0,0.28,49,41
2553_54,54,54,mLegalityCheckerTask.cancel(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.28,50,41
2553_56,56,56,mLegalityCheckerTask = new LegalityCheckerTask();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,52,43
2553_57,57,57,mLegalityCheckerTask.execute(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,53,43
2553_58,58,58,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.2,54,44
2553_59,59,59,} else if (item.getItemId() == R.id.deck_menu_settings) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.53,55,45
2553_60,60,60,"showDialog(DecklistDialogFragment.DIALOG_PRICE_SETTING, null, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,56,46
2553_61,61,61,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.2,57,47
2553_62,62,62,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.28,58,48
2553_63,63,63,return super.onOptionsItemSelected(item);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.73,59,49
2554_1,1,2,"    @Override
public boolean onOptionsItemSelected(MenuItem item) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.39,20,19
2554_4,4,64,"if (item.getItemId() == R.id.deck_menu_new) {
showDialog(DecklistDialogFragment.DIALOG_NEW_DECK, null, false);
return true;
} else if (item.getItemId() == R.id.deck_menu_save_as) {
showDialog(DecklistDialogFragment.DIALOG_SAVE_DECK_AS, null, false);
return true;
} else if (item.getItemId() == R.id.deck_menu_load) {
showDialog(DecklistDialogFragment.DIALOG_LOAD_DECK, null, false);
return true;
} else if (item.getItemId() == R.id.deck_menu_delete) {
showDialog(DecklistDialogFragment.DIALOG_DELETE_DECK, null, false);
return true;
} else if (item.getItemId() == R.id.deck_menu_clear) {
showDialog(DecklistDialogFragment.DIALOG_CONFIRMATION, null, false);
return true;
} else if (item.getItemId() == R.id.deck_menu_import) {
startNewFragment(new ImportFragment(), null);
return true;
} else if (item.getItemId() == R.id.deck_menu_share) {
Intent sendIntent = new Intent();
sendIntent.setAction(Intent.ACTION_SEND);
sendIntent.putExtra(Intent.EXTRA_SUBJECT, R.string.decklist_share_title);
synchronized (mCompressedDecklist) {
sendIntent.putExtra(Intent.EXTRA_TEXT, DecklistHelpers
.getSharableDecklist(mCompressedDecklist, getActivity()));
}
sendIntent.setType(""text/plain"");
try {
startActivity(Intent.createChooser(sendIntent,
getString(R.string.decklist_share)));
} catch (ActivityNotFoundException anfe) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.error_no_email_client,
SnackbarWrapper.LENGTH_LONG);
}
return true;
} else if (item.getItemId() == R.id.deck_menu_stats) {
try {
if (null == mCurrentDeck || mCurrentDeck.isEmpty()) {
mCurrentDeck = AUTOSAVE_NAME;
saveCurrentDeck(false);
}
startNewFragment(new DeckStatsFragment(DecklistHelpers.ReadDecklist(getActivity(), mCurrentDeck + "".deck"", true)), null);
} catch (FamiliarDbException e) {
handleFamiliarDbException(false);
}
return true;
} else if (item.getItemId() == R.id.deck_menu_legality) {
getFamiliarActivity().setLoading();

if (null != mLegalityCheckerTask) {
mLegalityCheckerTask.cancel(true);
}
mLegalityCheckerTask = new LegalityCheckerTask();
mLegalityCheckerTask.execute(this);
return true;
} else if (item.getItemId() == R.id.deck_menu_settings) {
showDialog(DecklistDialogFragment.DIALOG_PRICE_SETTING, null, false);
return true;
} else {
return super.onOptionsItemSelected(item);
}",1,0,0,0,0,0,0,0,0,50,3,61,0,0,1,0,3,2,0,0,2,0.59,0,0
2554_5,5,5,"showDialog(DecklistDialogFragment.DIALOG_NEW_DECK, null, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.31,17,17
2554_6,6,6,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,16,16
2554_7,7,7,} else if (item.getItemId() == R.id.deck_menu_save_as) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.4,15,15
2554_8,8,8,"showDialog(DecklistDialogFragment.DIALOG_SAVE_DECK_AS, null, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.38,14,14
2554_9,9,9,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,13,13
2554_10,10,10,} else if (item.getItemId() == R.id.deck_menu_load) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.37,12,12
2554_11,11,11,"showDialog(DecklistDialogFragment.DIALOG_LOAD_DECK, null, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.36,11,11
2554_12,12,12,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,10,10
2554_13,13,13,} else if (item.getItemId() == R.id.deck_menu_delete) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.36,9,9
2554_14,14,14,"showDialog(DecklistDialogFragment.DIALOG_DELETE_DECK, null, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.32,8,8
2554_15,15,15,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,7,7
2554_16,16,16,} else if (item.getItemId() == R.id.deck_menu_clear) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.36,6,6
2554_17,17,17,"showDialog(DecklistDialogFragment.DIALOG_CONFIRMATION, null, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.31,5,5
2554_18,18,18,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,4,4
2554_19,19,19,} else if (item.getItemId() == R.id.deck_menu_import) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.41,3,3
2554_20,20,20,"startNewFragment(new ImportFragment(), null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.38,2,2
2554_21,21,21,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,1,1
2554_22,22,22,} else if (item.getItemId() == R.id.deck_menu_share) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.56,0,0
2554_23,23,23,Intent sendIntent = new Intent();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.29,0,0
2554_24,24,24,sendIntent.setAction(Intent.ACTION_SEND);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.3,1,0
2554_25,25,25,"sendIntent.putExtra(Intent.EXTRA_SUBJECT, R.string.decklist_share_title);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,2,0.6,2,1
2554_26,26,26,synchronized (mCompressedDecklist) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.43,3,2
2554_27,27,28,"sendIntent.putExtra(Intent.EXTRA_TEXT, DecklistHelpers
.getSharableDecklist(mCompressedDecklist, getActivity()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,1,0.4,4,3
2554_30,30,30,"sendIntent.setType(""text/plain"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.34,7,5
2554_31,31,37,"try {
startActivity(Intent.createChooser(sendIntent,
getString(R.string.decklist_share)));
} catch (ActivityNotFoundException anfe) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.error_no_email_client,
SnackbarWrapper.LENGTH_LONG);
}",0,0,0,0,1,0,0,0,0,3,1,7,0,1,0,0,3,2,0,0,2,0.59,8,5
2554_32,32,33,"startActivity(Intent.createChooser(sendIntent,
getString(R.string.decklist_share)));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,2,0.56,9,6
2554_34,34,34,} catch (ActivityNotFoundException anfe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.25,11,8
2554_35,35,36,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.error_no_email_client,
SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.43,12,8
2554_38,38,38,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,15,10
2554_39,39,39,} else if (item.getItemId() == R.id.deck_menu_stats) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.37,16,10
2554_40,40,48,"try {
if (null == mCurrentDeck || mCurrentDeck.isEmpty()) {
mCurrentDeck = AUTOSAVE_NAME;
saveCurrentDeck(false);
}
startNewFragment(new DeckStatsFragment(DecklistHelpers.ReadDecklist(getActivity(), mCurrentDeck + "".deck"", true)), null);
} catch (FamiliarDbException e) {
handleFamiliarDbException(false);
}",0,0,0,0,1,0,0,0,0,6,2,9,0,0,0,0,3,2,0,0,1,0.37,17,11
2554_41,41,44,"if (null == mCurrentDeck || mCurrentDeck.isEmpty()) {
mCurrentDeck = AUTOSAVE_NAME;
saveCurrentDeck(false);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,3,2,0,0,0,0.39,18,12
2554_42,42,42,mCurrentDeck = AUTOSAVE_NAME;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.32,19,13
2554_43,43,43,saveCurrentDeck(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.39,20,14
2554_45,45,45,"startNewFragment(new DeckStatsFragment(DecklistHelpers.ReadDecklist(getActivity(), mCurrentDeck + "".deck"", true)), null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.34,22,16
2554_46,46,46,} catch (FamiliarDbException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,23,16
2554_47,47,47,handleFamiliarDbException(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,24,17
2554_49,49,49,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,26,19
2554_50,50,50,} else if (item.getItemId() == R.id.deck_menu_legality) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.36,27,19
2554_51,51,51,getFamiliarActivity().setLoading();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.36,28,20
2554_53,53,55,"if (null != mLegalityCheckerTask) {
mLegalityCheckerTask.cancel(true);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,2,0,0,0,0.46,30,22
2554_54,54,54,mLegalityCheckerTask.cancel(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.45,31,22
2554_56,56,56,mLegalityCheckerTask = new LegalityCheckerTask();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.49,33,24
2554_57,57,57,mLegalityCheckerTask.execute(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.48,34,24
2554_58,58,58,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,35,25
2554_59,59,59,} else if (item.getItemId() == R.id.deck_menu_settings) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.36,36,26
2554_60,60,60,"showDialog(DecklistDialogFragment.DIALOG_PRICE_SETTING, null, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.4,37,27
2554_61,61,61,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,38,28
2554_62,62,62,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,39,29
2554_63,63,63,return super.onOptionsItemSelected(item);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.33,40,30
2555_1,1,2,"    @Override
public boolean onOptionsItemSelected(MenuItem item) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,2,0,0,0.3,38,32
2555_4,4,64,"if (item.getItemId() == R.id.deck_menu_new) {
showDialog(DecklistDialogFragment.DIALOG_NEW_DECK, null, false);
return true;
} else if (item.getItemId() == R.id.deck_menu_save_as) {
showDialog(DecklistDialogFragment.DIALOG_SAVE_DECK_AS, null, false);
return true;
} else if (item.getItemId() == R.id.deck_menu_load) {
showDialog(DecklistDialogFragment.DIALOG_LOAD_DECK, null, false);
return true;
} else if (item.getItemId() == R.id.deck_menu_delete) {
showDialog(DecklistDialogFragment.DIALOG_DELETE_DECK, null, false);
return true;
} else if (item.getItemId() == R.id.deck_menu_clear) {
showDialog(DecklistDialogFragment.DIALOG_CONFIRMATION, null, false);
return true;
} else if (item.getItemId() == R.id.deck_menu_import) {
startNewFragment(new ImportFragment(), null);
return true;
} else if (item.getItemId() == R.id.deck_menu_share) {
Intent sendIntent = new Intent();
sendIntent.setAction(Intent.ACTION_SEND);
sendIntent.putExtra(Intent.EXTRA_SUBJECT, R.string.decklist_share_title);
synchronized (mCompressedDecklist) {
sendIntent.putExtra(Intent.EXTRA_TEXT, DecklistHelpers
.getSharableDecklist(mCompressedDecklist, getActivity()));
}
sendIntent.setType(""text/plain"");
try {
startActivity(Intent.createChooser(sendIntent,
getString(R.string.decklist_share)));
} catch (ActivityNotFoundException anfe) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.error_no_email_client,
SnackbarWrapper.LENGTH_LONG);
}
return true;
} else if (item.getItemId() == R.id.deck_menu_stats) {
try {
if (null == mCurrentDeck || mCurrentDeck.isEmpty()) {
mCurrentDeck = AUTOSAVE_NAME;
saveCurrentDeck(false);
}
startNewFragment(new DeckStatsFragment(DecklistHelpers.ReadDecklist(getActivity(), mCurrentDeck + "".deck"", true)), null);
} catch (FamiliarDbException e) {
handleFamiliarDbException(false);
}
return true;
} else if (item.getItemId() == R.id.deck_menu_legality) {
getFamiliarActivity().setLoading();

if (null != mLegalityCheckerTask) {
mLegalityCheckerTask.cancel(true);
}
mLegalityCheckerTask = new LegalityCheckerTask();
mLegalityCheckerTask.execute(this);
return true;
} else if (item.getItemId() == R.id.deck_menu_settings) {
showDialog(DecklistDialogFragment.DIALOG_PRICE_SETTING, null, false);
return true;
} else {
return super.onOptionsItemSelected(item);
}",1,0,0,0,0,0,0,0,0,50,3,61,0,0,1,0,6,3,2,0,4,0.63,0,0
2555_5,5,5,"showDialog(DecklistDialogFragment.DIALOG_NEW_DECK, null, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.4,35,30
2555_6,6,6,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.18,34,29
2555_7,7,7,} else if (item.getItemId() == R.id.deck_menu_save_as) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,2,0.5,33,28
2555_8,8,8,"showDialog(DecklistDialogFragment.DIALOG_SAVE_DECK_AS, null, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,2,0.48,32,27
2555_9,9,9,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.18,31,26
2555_10,10,10,} else if (item.getItemId() == R.id.deck_menu_load) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.41,30,25
2555_11,11,11,"showDialog(DecklistDialogFragment.DIALOG_LOAD_DECK, null, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.37,29,24
2555_12,12,12,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.18,28,23
2555_13,13,13,} else if (item.getItemId() == R.id.deck_menu_delete) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.41,27,22
2555_14,14,14,"showDialog(DecklistDialogFragment.DIALOG_DELETE_DECK, null, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.38,26,21
2555_15,15,15,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.18,25,20
2555_16,16,16,} else if (item.getItemId() == R.id.deck_menu_clear) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.41,24,19
2555_17,17,17,"showDialog(DecklistDialogFragment.DIALOG_CONFIRMATION, null, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.3,23,18
2555_18,18,18,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.18,22,17
2555_19,19,19,} else if (item.getItemId() == R.id.deck_menu_import) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.42,21,16
2555_20,20,20,"startNewFragment(new ImportFragment(), null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.35,20,15
2555_21,21,21,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.18,19,14
2555_22,22,22,} else if (item.getItemId() == R.id.deck_menu_share) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.43,18,13
2555_23,23,23,Intent sendIntent = new Intent();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.29,17,12
2555_24,24,24,sendIntent.setAction(Intent.ACTION_SEND);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.29,16,11
2555_25,25,25,"sendIntent.putExtra(Intent.EXTRA_SUBJECT, R.string.decklist_share_title);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.37,15,10
2555_26,26,26,synchronized (mCompressedDecklist) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.35,14,9
2555_27,27,28,"sendIntent.putExtra(Intent.EXTRA_TEXT, DecklistHelpers
.getSharableDecklist(mCompressedDecklist, getActivity()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,2,0,0,0.35,12,8
2555_30,30,30,"sendIntent.setType(""text/plain"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.32,10,7
2555_31,31,37,"try {
startActivity(Intent.createChooser(sendIntent,
getString(R.string.decklist_share)));
} catch (ActivityNotFoundException anfe) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.error_no_email_client,
SnackbarWrapper.LENGTH_LONG);
}",0,0,0,0,1,0,0,0,0,3,1,7,0,1,0,0,6,3,2,0,1,0.47,3,3
2555_32,32,33,"startActivity(Intent.createChooser(sendIntent,
getString(R.string.decklist_share)));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,2,0,0,0.31,7,5
2555_34,34,34,} catch (ActivityNotFoundException anfe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.3,6,4
2555_35,35,36,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.error_no_email_client,
SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,2,0,1,0.48,4,3
2555_38,38,38,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.18,2,2
2555_39,39,39,} else if (item.getItemId() == R.id.deck_menu_stats) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,2,0.52,1,1
2555_40,40,48,"try {
if (null == mCurrentDeck || mCurrentDeck.isEmpty()) {
mCurrentDeck = AUTOSAVE_NAME;
saveCurrentDeck(false);
}
startNewFragment(new DeckStatsFragment(DecklistHelpers.ReadDecklist(getActivity(), mCurrentDeck + "".deck"", true)), null);
} catch (FamiliarDbException e) {
handleFamiliarDbException(false);
}",0,0,0,0,1,0,0,0,0,6,2,9,0,0,0,0,6,3,2,0,3,0.57,0,0
2555_41,41,44,"if (null == mCurrentDeck || mCurrentDeck.isEmpty()) {
mCurrentDeck = AUTOSAVE_NAME;
saveCurrentDeck(false);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,6,3,2,0,2,0.53,0,0
2555_42,42,42,mCurrentDeck = AUTOSAVE_NAME;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.45,1,0
2555_43,43,43,saveCurrentDeck(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,2,0.54,2,1
2555_45,45,45,"startNewFragment(new DeckStatsFragment(DecklistHelpers.ReadDecklist(getActivity(), mCurrentDeck + "".deck"", true)), null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,2,0.52,4,3
2555_46,46,46,} catch (FamiliarDbException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.33,5,3
2555_47,47,47,handleFamiliarDbException(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.32,6,4
2555_49,49,49,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.18,8,6
2555_50,50,50,} else if (item.getItemId() == R.id.deck_menu_legality) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.41,9,6
2555_51,51,51,getFamiliarActivity().setLoading();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,2,0,0,0.29,10,7
2555_53,53,55,"if (null != mLegalityCheckerTask) {
mLegalityCheckerTask.cancel(true);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,6,3,2,0,0,0.32,12,9
2555_54,54,54,mLegalityCheckerTask.cancel(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.31,13,9
2555_56,56,56,mLegalityCheckerTask = new LegalityCheckerTask();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.36,15,11
2555_57,57,57,mLegalityCheckerTask.execute(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.35,16,11
2555_58,58,58,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.18,17,12
2555_59,59,59,} else if (item.getItemId() == R.id.deck_menu_settings) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.42,18,13
2555_60,60,60,"showDialog(DecklistDialogFragment.DIALOG_PRICE_SETTING, null, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.32,19,14
2555_61,61,61,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.18,20,15
2555_62,62,62,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.23,21,16
2555_63,63,63,return super.onOptionsItemSelected(item);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.24,22,17
2556_1,1,1,    public void saveCurrentDeck(boolean showSnackbar) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.5,0,0
2556_2,2,12,"if (!mDecklistReadError) {
String currentDeckName = getCurrentDeckName();
synchronized (mCompressedDecklist) {
DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist,
currentDeckName);
}
if (showSnackbar) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.decklist_saved_toast,
currentDeckName), SnackbarWrapper.LENGTH_SHORT);
}
}",1,0,0,0,0,0,0,0,0,5,2,11,0,0,0,0,3,2,1,0,3,0.65,0,0
2556_3,3,3,String currentDeckName = getCurrentDeckName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.2,1,0
2556_4,4,4,synchronized (mCompressedDecklist) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.35,2,1
2556_5,5,6,"DecklistHelpers.WriteCompressedDecklist(getActivity(), mCompressedDecklist,
currentDeckName);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,0,0.33,3,2
2556_8,8,11,"if (showSnackbar) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.decklist_saved_toast,
currentDeckName), SnackbarWrapper.LENGTH_SHORT);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,3,2,1,0,1,0.44,6,4
2556_9,9,10,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.decklist_saved_toast,
currentDeckName), SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,1,0.44,7,4
2675_1,1,4,"@Override
public View onCreateView(@NonNull LayoutInflater inflater,
ViewGroup container,
Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,7,6,0,0,0,0.39,8,4
2675_6,6,7,"final View myFragmentView =
inflater.inflate(R.layout.import_frag, container, false);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,7,6,0,0,0,0.41,5,3
2675_8,8,8,assert myFragmentView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,7,6,0,0,0,0.36,4,2
2675_10,10,10,mDeckName = myFragmentView.findViewById(R.id.importName);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,7,6,0,0,2,0.58,2,1
2675_11,11,11,mDeckText = myFragmentView.findViewById(R.id.import_editText);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,7,6,0,0,2,0.58,1,0
2675_13,13,13,mDeckText.addTextChangedListener(new TextWatcher() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,6,0,0,3,0.68,0,0
2675_14,14,15,"@Override
public void onTextChanged(CharSequence s, int start, int countBefore, int countAfter) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,6,0,0,2,0.49,1,0
2675_16,16,18,"if (mDeckName.length() == 0 && start < 100) {
mDeckName.setText(DeckListImporter.tryGuessDeckName(s.toString()));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,6,0,0,5,0.76,3,2
2675_17,17,17,mDeckName.setText(DeckListImporter.tryGuessDeckName(s.toString()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,5,0.81,4,2
2675_21,21,22,"@Override
public void afterTextChanged(Editable editable) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,7,6,0,0,2,0.54,8,4
2675_25,25,26,"@Override
public void beforeTextChanged(CharSequence s, int start, int countBefore, int countAfter) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,7,6,0,0,2,0.49,12,5
2675_30,30,30,Button startButton = myFragmentView.findViewById(R.id.import_start);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,6,0,0,0,0.39,17,6
2675_31,31,31,startButton.setOnClickListener(view -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.32,18,6
2675_32,32,32,((Button) view).setText(R.string.import_loading);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,1,0.48,19,7
2675_33,33,33,importDeck();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,1,0.61,20,8
2675_34,34,34,((Button) view).setText(R.string.import_start);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,1,0.48,21,9
2675_37,37,37,return myFragmentView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,6,0,0,0,0.34,24,11
2676_1,1,1,private void importDeck() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,8,4
2676_3,3,5,"if (mImportStarted) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,2,0,0,0,0.28,4,2
2676_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,5,2
2676_6,6,6,mImportStarted = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.28,3,1
2676_8,8,8,final FamiliarActivity activity = getFamiliarActivity();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.18,1,0
2676_10,10,14,"if (getDeckNameInput() == null || getDeckNameInput().length() == 0) {
SnackbarWrapper.makeAndShowText(getFamiliarActivity(), R.string.empty_deck_name, SnackbarWrapper.LENGTH_LONG);
mImportStarted = false;
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,3,2,0,0,1,0.45,0,0
2676_11,11,11,"SnackbarWrapper.makeAndShowText(getFamiliarActivity(), R.string.empty_deck_name, SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.47,1,0
2676_12,12,12,mImportStarted = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,2,1
2676_13,13,13,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,3,2
2676_16,16,20,"if (getDeckTextInput() == null || getDeckTextInput().length() == 0) {
SnackbarWrapper.makeAndShowText(getFamiliarActivity(), R.string.empty_deck_text, SnackbarWrapper.LENGTH_LONG);
mImportStarted = false;
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,3,2,0,0,1,0.45,6,4
2676_17,17,17,"SnackbarWrapper.makeAndShowText(getFamiliarActivity(), R.string.empty_deck_text, SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.48,7,4
2676_18,18,18,mImportStarted = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,8,5
2676_19,19,19,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,9,6
2676_23,23,23,activity.setLoading();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.28,13,8
2676_25,25,25,final String name = String.valueOf(getDeckNameInput());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,3,2,0,0,0,0.33,15,9
2676_26,26,26,final String lines = String.valueOf(getDeckTextInput());,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,3,2,0,0,0,0.33,16,9
2676_28,28,28,"mImportTask = new ImportTask(this, name, lines).execute();",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.24,18,11
2677_1,1,2,"@Override
protected DeckListImporter doInBackground(ImportFragment... args) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,0,0.26,29,22
2677_3,3,3,final DeckListImporter importer = new DeckListImporter();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.26,28,21
2677_4,4,11,"try (BufferedReader br = new BufferedReader(new StringReader(mLines))) {
String line;
while ((line = br.readLine()) != null) {
importer.parseLine(line);
}
} catch (IOException e) {
return importer;
}",0,0,0,0,1,0,0,0,0,5,2,8,0,1,0,0,2,1,0,0,0,0.25,20,15
2677_5,5,5,String line;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.1,26,19
2677_6,6,8,"while ((line = br.readLine()) != null) {
importer.parseLine(line);
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,0,2,1,0,0,0,0.24,23,17
2677_7,7,7,importer.parseLine(line);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.25,24,17
2677_9,9,9,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.24,22,16
2677_10,10,10,return importer;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.31,21,15
2677_12,12,12,List<MtgCard> cardList = importer.getParsedCards();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.26,19,14
2677_13,13,17,"try {
MtgCard.initCardListFromDb(mFrag.getContext(), cardList);
} catch (FamiliarDbException fde) {
mFrag.handleFamiliarDbException(false);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,1,0,1,2,1,0,0,0,0.25,14,10
2677_14,14,14,"MtgCard.initCardListFromDb(mFrag.getContext(), cardList);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.25,17,12
2677_15,15,15,} catch (FamiliarDbException fde) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.25,16,11
2677_16,16,16,mFrag.handleFamiliarDbException(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.2,15,10
2677_19,19,30,"for (MtgCard card : cardList) {
if (card.getMultiverseId() == 0) {
try {
MtgCard noSetCard = new MtgCard(mFrag.getActivity(), card.getName(), null, null, card.mIsFoil, card.mNumberOf, card.isSideboard());
importedCards.add(noSetCard);
} catch (java.lang.InstantiationException e) {
unknownCards.add(card);
}
} else {
importedCards.add(card);
}
}",0,0,0,1,0,0,0,0,0,8,3,12,0,0,1,0,2,1,0,0,0,0.26,1,1
2677_20,20,29,"if (card.getMultiverseId() == 0) {
try {
MtgCard noSetCard = new MtgCard(mFrag.getActivity(), card.getName(), null, null, card.mIsFoil, card.mNumberOf, card.isSideboard());
importedCards.add(noSetCard);
} catch (java.lang.InstantiationException e) {
unknownCards.add(card);
}
} else {
importedCards.add(card);
}",1,0,0,0,0,0,0,0,0,7,2,10,0,0,0,0,2,1,0,0,0,0.26,2,1
2677_21,21,26,"try {
MtgCard noSetCard = new MtgCard(mFrag.getActivity(), card.getName(), null, null, card.mIsFoil, card.mNumberOf, card.isSideboard());
importedCards.add(noSetCard);
} catch (java.lang.InstantiationException e) {
unknownCards.add(card);
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,0,0,2,1,0,0,0,0.26,5,3
2677_22,22,22,"MtgCard noSetCard = new MtgCard(mFrag.getActivity(), card.getName(), null, null, card.mIsFoil, card.mNumberOf, card.isSideboard());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.21,9,6
2677_23,23,23,importedCards.add(noSetCard);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.25,8,5
2677_24,24,24,} catch (java.lang.InstantiationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.26,7,4
2677_25,25,25,unknownCards.add(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.13,6,3
2677_27,27,27,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.24,4,2
2677_28,28,28,importedCards.add(card);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.27,3,1
2677_31,31,31,publishProgress(importer.getErrorLines().toArray(new String[0]));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.25,0,0
2677_32,32,34,"if (!importedCards.isEmpty()) {
DecklistHelpers.WriteDecklist(mFrag.getFamiliarActivity(), importedCards, mName + "".deck"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,2,1,0,0,1,0.27,0,0
2677_33,33,33,"DecklistHelpers.WriteDecklist(mFrag.getFamiliarActivity(), importedCards, mName + "".deck"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.27,1,0
2677_36,36,36,return importer;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,1,0,0,0,0.31,4,2
6078_1,1,2,"    @Override
public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,0,0,0,0.39,7,3
6078_4,4,4,mRandom = new Random(System.currentTimeMillis());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,0,0,0,0.32,5,2
6078_6,6,6,"View myFragmentView = inflater.inflate(R.layout.mojhosto_frag, container, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,3,0,0,0,0.43,3,1
6078_8,8,8,assert myFragmentView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,0,0,0,0.37,1,0
6078_10,10,10,myFragmentView.findViewById(R.id.imageViewMo).setOnClickListener(v -> showDialog(MoJhoStoDialogFragment.DIALOG_MOMIR));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,0,0,2,0.53,0,0
6078_12,12,12,myFragmentView.findViewById(R.id.imageViewSto).setOnClickListener(v -> showDialog(MoJhoStoDialogFragment.DIALOG_STONEHEWER));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,0,0,2,0.53,2,1
6078_14,14,14,myFragmentView.findViewById(R.id.imageViewJho).setOnClickListener(v -> showDialog(MoJhoStoDialogFragment.DIALOG_JHOIRA));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,0,0,2,0.53,4,2
6078_16,16,16,myFragmentView.findViewById(R.id.momir_button).setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,0,0,1,0.46,6,3
6078_17,17,21,"try {
int cmc = Integer.parseInt((String) mMomirCmcChoice.getSelectedItem());
getOneSpell(CREATURE, cmc);
} catch (NumberFormatException e) {
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,6,3,0,0,0,0.33,7,3
6078_18,18,18,int cmc = Integer.parseInt((String) mMomirCmcChoice.getSelectedItem());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.33,8,4
6078_19,19,19,"getOneSpell(CREATURE, cmc);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.31,9,5
6078_20,20,20,} catch (NumberFormatException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.26,10,6
6078_24,24,24,myFragmentView.findViewById(R.id.stonehewer_button).setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,0,0,1,0.46,14,8
6078_25,25,29,"try {
int cmc = Integer.parseInt((String) mStonehewerCmcChoice.getSelectedItem());
getOneSpell(EQUIPMENT, cmc);
} catch (NumberFormatException e) {
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,6,3,0,0,0,0.33,15,8
6078_26,26,26,int cmc = Integer.parseInt((String) mStonehewerCmcChoice.getSelectedItem());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.33,16,9
6078_27,27,27,"getOneSpell(EQUIPMENT, cmc);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.31,17,10
6078_28,28,28,} catch (NumberFormatException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.26,18,11
6078_32,32,32,myFragmentView.findViewById(R.id.jhorira_instant_button).setOnClickListener(v -> getThreeSpells(INSTANT));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,0,0,1,0.5,22,13
6078_34,34,34,myFragmentView.findViewById(R.id.jhorira_sorcery_button).setOnClickListener(v -> getThreeSpells(SORCERY));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,0,0,1,0.46,24,14
6078_36,36,36,mMomirCmcChoice = myFragmentView.findViewById(R.id.momir_spinner);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,6,3,0,0,0,0.37,26,15
6078_37,37,37,mStonehewerCmcChoice = myFragmentView.findViewById(R.id.stonehewer_spinner);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,6,3,0,0,0,0.37,27,15
6078_39,39,39,return myFragmentView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,0,0,0,0.32,29,17
6079_1,1,2,"    @Override
public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,1,0,0,0.4,13,6
6079_4,4,4,mRandom = new Random(System.currentTimeMillis());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,1,0,1,0.46,11,5
6079_6,6,6,"View myFragmentView = inflater.inflate(R.layout.mojhosto_frag, container, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,3,1,0,0,0.44,9,4
6079_8,8,8,assert myFragmentView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,1,0,0,0.38,7,3
6079_10,10,10,myFragmentView.findViewById(R.id.imageViewMo).setOnClickListener(v -> showDialog(MoJhoStoDialogFragment.DIALOG_MOMIR));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,1,0,1,0.49,5,2
6079_12,12,12,myFragmentView.findViewById(R.id.imageViewSto).setOnClickListener(v -> showDialog(MoJhoStoDialogFragment.DIALOG_STONEHEWER));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,1,0,1,0.49,3,1
6079_14,14,14,myFragmentView.findViewById(R.id.imageViewJho).setOnClickListener(v -> showDialog(MoJhoStoDialogFragment.DIALOG_JHOIRA));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,1,0,1,0.49,1,0
6079_16,16,16,myFragmentView.findViewById(R.id.momir_button).setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,1,0,2,0.55,0,0
6079_17,17,21,"try {
int cmc = Integer.parseInt((String) mMomirCmcChoice.getSelectedItem());
getOneSpell(CREATURE, cmc);
} catch (NumberFormatException e) {
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,6,3,1,0,0,0.36,1,0
6079_18,18,18,int cmc = Integer.parseInt((String) mMomirCmcChoice.getSelectedItem());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.37,2,1
6079_19,19,19,"getOneSpell(CREATURE, cmc);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.34,3,2
6079_20,20,20,} catch (NumberFormatException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.3,4,3
6079_24,24,24,myFragmentView.findViewById(R.id.stonehewer_button).setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,1,0,2,0.55,8,5
6079_25,25,29,"try {
int cmc = Integer.parseInt((String) mStonehewerCmcChoice.getSelectedItem());
getOneSpell(EQUIPMENT, cmc);
} catch (NumberFormatException e) {
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,6,3,1,0,0,0.36,9,5
6079_26,26,26,int cmc = Integer.parseInt((String) mStonehewerCmcChoice.getSelectedItem());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.37,10,6
6079_27,27,27,"getOneSpell(EQUIPMENT, cmc);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.34,11,7
6079_28,28,28,} catch (NumberFormatException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.3,12,8
6079_32,32,32,myFragmentView.findViewById(R.id.jhorira_instant_button).setOnClickListener(v -> getThreeSpells(INSTANT));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,1,0,2,0.58,16,10
6079_34,34,34,myFragmentView.findViewById(R.id.jhorira_sorcery_button).setOnClickListener(v -> getThreeSpells(SORCERY));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,1,0,2,0.56,18,11
6079_36,36,36,mMomirCmcChoice = myFragmentView.findViewById(R.id.momir_spinner);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,6,3,1,0,0,0.45,20,12
6079_37,37,37,mStonehewerCmcChoice = myFragmentView.findViewById(R.id.stonehewer_spinner);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,6,3,1,0,0,0.45,21,12
6079_39,39,39,return myFragmentView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,1,0,0,0.34,23,14
6080_1,1,2,"    @Override
public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,1,0,1,0.5,33,18
6080_4,4,4,mRandom = new Random(System.currentTimeMillis());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,1,0,0,0.4,31,17
6080_6,6,6,"View myFragmentView = inflater.inflate(R.layout.mojhosto_frag, container, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,3,1,0,0,0.44,29,16
6080_8,8,8,assert myFragmentView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,1,0,0,0.4,27,15
6080_10,10,10,myFragmentView.findViewById(R.id.imageViewMo).setOnClickListener(v -> showDialog(MoJhoStoDialogFragment.DIALOG_MOMIR));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,1,0,0,0.47,25,14
6080_12,12,12,myFragmentView.findViewById(R.id.imageViewSto).setOnClickListener(v -> showDialog(MoJhoStoDialogFragment.DIALOG_STONEHEWER));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,1,0,0,0.47,23,13
6080_14,14,14,myFragmentView.findViewById(R.id.imageViewJho).setOnClickListener(v -> showDialog(MoJhoStoDialogFragment.DIALOG_JHOIRA));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,1,0,0,0.47,21,12
6080_16,16,16,myFragmentView.findViewById(R.id.momir_button).setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,1,0,0,0.45,19,11
6080_17,17,21,"try {
int cmc = Integer.parseInt((String) mMomirCmcChoice.getSelectedItem());
getOneSpell(CREATURE, cmc);
} catch (NumberFormatException e) {
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,6,3,1,0,0,0.43,14,7
6080_18,18,18,int cmc = Integer.parseInt((String) mMomirCmcChoice.getSelectedItem());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.41,17,9
6080_19,19,19,"getOneSpell(CREATURE, cmc);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.4,16,8
6080_20,20,20,} catch (NumberFormatException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.3,15,7
6080_24,24,24,myFragmentView.findViewById(R.id.stonehewer_button).setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,1,0,0,0.45,11,6
6080_25,25,29,"try {
int cmc = Integer.parseInt((String) mStonehewerCmcChoice.getSelectedItem());
getOneSpell(EQUIPMENT, cmc);
} catch (NumberFormatException e) {
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,6,3,1,0,0,0.43,6,2
6080_26,26,26,int cmc = Integer.parseInt((String) mStonehewerCmcChoice.getSelectedItem());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.41,9,4
6080_27,27,27,"getOneSpell(EQUIPMENT, cmc);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.4,8,3
6080_28,28,28,} catch (NumberFormatException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.3,7,2
6080_32,32,32,myFragmentView.findViewById(R.id.jhorira_instant_button).setOnClickListener(v -> getThreeSpells(INSTANT));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,1,0,0,0.46,3,1
6080_34,34,34,myFragmentView.findViewById(R.id.jhorira_sorcery_button).setOnClickListener(v -> getThreeSpells(SORCERY));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,1,0,0,0.46,1,0
6080_36,36,36,mMomirCmcChoice = myFragmentView.findViewById(R.id.momir_spinner);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,6,3,1,0,1,0.51,0,0
6080_37,37,37,mStonehewerCmcChoice = myFragmentView.findViewById(R.id.stonehewer_spinner);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,6,3,1,0,1,0.51,1,0
6080_39,39,39,return myFragmentView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,1,0,0,0.34,3,2
6081_1,1,2,"    @Override
public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,1,0.61,36,20
6081_4,4,4,mRandom = new Random(System.currentTimeMillis());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.12,34,19
6081_6,6,6,"View myFragmentView = inflater.inflate(R.layout.mojhosto_frag, container, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,1,0.72,32,18
6081_8,8,8,assert myFragmentView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,1,0.66,30,17
6081_10,10,10,myFragmentView.findViewById(R.id.imageViewMo).setOnClickListener(v -> showDialog(MoJhoStoDialogFragment.DIALOG_MOMIR));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,1,0.57,28,16
6081_12,12,12,myFragmentView.findViewById(R.id.imageViewSto).setOnClickListener(v -> showDialog(MoJhoStoDialogFragment.DIALOG_STONEHEWER));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,1,0.57,26,15
6081_14,14,14,myFragmentView.findViewById(R.id.imageViewJho).setOnClickListener(v -> showDialog(MoJhoStoDialogFragment.DIALOG_JHOIRA));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,1,0.57,24,14
6081_16,16,16,myFragmentView.findViewById(R.id.momir_button).setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,1,0.58,22,13
6081_17,17,21,"try {
int cmc = Integer.parseInt((String) mMomirCmcChoice.getSelectedItem());
getOneSpell(CREATURE, cmc);
} catch (NumberFormatException e) {
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,2,2,0,0,0,0.25,17,9
6081_18,18,18,int cmc = Integer.parseInt((String) mMomirCmcChoice.getSelectedItem());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.23,20,11
6081_19,19,19,"getOneSpell(CREATURE, cmc);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.2,19,10
6081_20,20,20,} catch (NumberFormatException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,18,9
6081_24,24,24,myFragmentView.findViewById(R.id.stonehewer_button).setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,1,0.58,14,8
6081_25,25,29,"try {
int cmc = Integer.parseInt((String) mStonehewerCmcChoice.getSelectedItem());
getOneSpell(EQUIPMENT, cmc);
} catch (NumberFormatException e) {
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,2,2,0,0,0,0.25,9,4
6081_26,26,26,int cmc = Integer.parseInt((String) mStonehewerCmcChoice.getSelectedItem());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.23,12,6
6081_27,27,27,"getOneSpell(EQUIPMENT, cmc);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.2,11,5
6081_28,28,28,} catch (NumberFormatException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,10,4
6081_32,32,32,myFragmentView.findViewById(R.id.jhorira_instant_button).setOnClickListener(v -> getThreeSpells(INSTANT));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,1,0.55,6,3
6081_34,34,34,myFragmentView.findViewById(R.id.jhorira_sorcery_button).setOnClickListener(v -> getThreeSpells(SORCERY));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,1,0.56,4,2
6081_36,36,36,mMomirCmcChoice = myFragmentView.findViewById(R.id.momir_spinner);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,2,2,0,0,1,0.55,2,1
6081_37,37,37,mStonehewerCmcChoice = myFragmentView.findViewById(R.id.stonehewer_spinner);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,2,2,0,0,1,0.55,1,0
6081_39,39,39,return myFragmentView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,2,0,0,2,0.9,0,0
6082_1,1,1,throws IllegalStateException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,7,7,0,0,0,0.34,1,0
6082_3,3,5,"if (!this.isVisible()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,7,0,0,1,0.51,0,0
6082_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.22,1,0
6082_7,7,7,removeDialog(getParentFragmentManager());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,7,0,0,2,0.56,4,2
6082_9,9,9,MoJhoStoDialogFragment newFragment = new MoJhoStoDialogFragment();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,7,0,0,2,0.68,6,3
6082_10,10,10,Bundle arguments = new Bundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,7,0,0,0,0.32,7,3
6082_11,11,11,"arguments.putInt(FamiliarDialogFragment.ID_KEY, id);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,2,0.52,8,4
6082_12,12,12,newFragment.setArguments(arguments);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,1,0.48,9,5
6082_13,13,13,"newFragment.show(getParentFragmentManager(), FamiliarActivity.DIALOG_TAG);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,3,0.63,10,6
6083_1,1,1,throws IllegalStateException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,3,3,0,0,0,0.3,7,3
6083_3,3,5,"if (!this.isVisible()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,0,0.31,3,1
6083_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.21,4,1
6083_7,7,7,removeDialog(getParentFragmentManager());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.53,1,0
6083_9,9,9,MoJhoStoDialogFragment newFragment = new MoJhoStoDialogFragment();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.71,0,0
6083_10,10,10,Bundle arguments = new Bundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.35,1,0
6083_11,11,11,"arguments.putInt(FamiliarDialogFragment.ID_KEY, id);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.49,2,1
6083_12,12,12,newFragment.setArguments(arguments);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.44,3,2
6083_13,13,13,"newFragment.show(getParentFragmentManager(), FamiliarActivity.DIALOG_TAG);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,2,0.68,4,3
6084_1,1,1,private void getThreeSpells(String type) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,1,0,1,0.44,12,10
6084_2,2,2,Cursor spells = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,1,1,0,0,0.4,11,9
6084_3,3,3,FamiliarDbHandle handle = new FamiliarDbHandle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,1,1,0,0,0.34,10,8
6084_4,4,43,"try {
SQLiteDatabase database = DatabaseManager.openDatabase(getActivity(), false, handle);
String[] returnTypes = new String[]{CardDbAdapter.KEY_ID, CardDbAdapter.KEY_NAME};
SearchCriteria criteria = new SearchCriteria();
criteria.superTypes = Collections.singletonList(type);
spells = CardDbAdapter.Search(criteria, false, returnTypes, true, null, database);

if (spells == null) {
throw new FamiliarDbException(new Exception(""three spell failure""));
}
int[] pos = new int[3];
pos[0] = mRandom.nextInt(spells.getCount());
pos[1] = mRandom.nextInt(spells.getCount());
while (pos[0] == pos[1]) {
pos[1] = mRandom.nextInt(spells.getCount());
}
pos[2] = mRandom.nextInt(spells.getCount());
while (pos[0] == pos[2] || pos[1] == pos[2]) {
pos[2] = mRandom.nextInt(spells.getCount());
}

Bundle args = new Bundle();

spells.moveToPosition(pos[0]);
args.putLong(ResultListFragment.CARD_ID_0, CardDbAdapter.getLongFromCursor(spells, CardDbAdapter.KEY_ID));
spells.moveToPosition(pos[1]);
args.putLong(ResultListFragment.CARD_ID_1, CardDbAdapter.getLongFromCursor(spells, CardDbAdapter.KEY_ID));
spells.moveToPosition(pos[2]);
args.putLong(ResultListFragment.CARD_ID_2, CardDbAdapter.getLongFromCursor(spells, CardDbAdapter.KEY_ID));

ResultListFragment rlFrag = new ResultListFragment();
startNewFragment(rlFrag, args);
} catch (SQLiteException | FamiliarDbException | CursorIndexOutOfBoundsException e) {
handleFamiliarDbException(true);
} finally {
if (null != spells) {
spells.close();
}
DatabaseManager.closeDatabase(getActivity(), handle);
}",0,0,0,0,1,0,0,0,0,30,2,40,0,1,0,0,5,1,1,0,3,0.61,0,0
6084_5,5,5,"SQLiteDatabase database = DatabaseManager.openDatabase(getActivity(), false, handle);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,1,1,0,1,0.5,8,6
6084_6,6,6,"String[] returnTypes = new String[]{CardDbAdapter.KEY_ID, CardDbAdapter.KEY_NAME};",0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,5,1,1,0,0,0.37,7,5
6084_7,7,7,SearchCriteria criteria = new SearchCriteria();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,1,1,0,0,0.24,6,4
6084_8,8,8,criteria.superTypes = Collections.singletonList(type);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,1,1,0,0,0.34,5,3
6084_9,9,9,"spells = CardDbAdapter.Search(criteria, false, returnTypes, true, null, database);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,1,1,0,0,0.34,4,2
6084_11,11,13,"if (spells == null) {
throw new FamiliarDbException(new Exception(""three spell failure""));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,5,1,1,0,0,0.32,0,0
6084_12,12,12,"throw new FamiliarDbException(new Exception(""three spell failure""));",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,1,1,0,0,0.31,1,0
6084_14,14,14,int[] pos = new int[3];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,1,1,0,1,0.51,0,0
6084_15,15,15,pos[0] = mRandom.nextInt(spells.getCount());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,1,1,0,2,0.6,1,0
6084_16,16,16,pos[1] = mRandom.nextInt(spells.getCount());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,1,1,0,2,0.58,2,1
6084_17,17,19,"while (pos[0] == pos[1]) {
pos[1] = mRandom.nextInt(spells.getCount());
}",0,1,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,1,1,0,2,0.56,3,2
6084_18,18,18,pos[1] = mRandom.nextInt(spells.getCount());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,1,0,2,0.58,4,3
6084_20,20,20,pos[2] = mRandom.nextInt(spells.getCount());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,1,1,0,2,0.59,6,5
6084_21,21,23,"while (pos[0] == pos[2] || pos[1] == pos[2]) {
pos[2] = mRandom.nextInt(spells.getCount());
}",0,1,0,0,0,0,0,0,0,1,1,3,1,1,0,1,5,1,1,0,2,0.55,7,5
6084_22,22,22,pos[2] = mRandom.nextInt(spells.getCount());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,1,0,2,0.59,8,6
6084_25,25,25,Bundle args = new Bundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,1,1,0,0,0.39,11,8
6084_27,27,27,spells.moveToPosition(pos[0]);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,5,1,1,0,0,0.37,13,9
6084_28,28,28,"args.putLong(ResultListFragment.CARD_ID_0, CardDbAdapter.getLongFromCursor(spells, CardDbAdapter.KEY_ID));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,1,1,0,1,0.52,14,9
6084_29,29,29,spells.moveToPosition(pos[1]);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,1,1,0,0,0.33,15,10
6084_30,30,30,"args.putLong(ResultListFragment.CARD_ID_1, CardDbAdapter.getLongFromCursor(spells, CardDbAdapter.KEY_ID));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,1,1,0,1,0.52,16,11
6084_31,31,31,spells.moveToPosition(pos[2]);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,1,1,0,0,0.36,17,12
6084_32,32,32,"args.putLong(ResultListFragment.CARD_ID_2, CardDbAdapter.getLongFromCursor(spells, CardDbAdapter.KEY_ID));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,1,1,0,1,0.52,18,13
6084_34,34,34,ResultListFragment rlFrag = new ResultListFragment();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,1,1,0,0,0.3,20,15
6084_35,35,35,"startNewFragment(rlFrag, args);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,1,1,0,0,0.35,21,15
6084_36,36,36,} catch (SQLiteException | FamiliarDbException | CursorIndexOutOfBoundsException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,1,0,0,0.41,22,16
6084_37,37,37,handleFamiliarDbException(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,1,0,0,0.32,23,17
6084_38,38,38,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,1,0,0,0.19,24,18
6084_39,39,41,"if (null != spells) {
spells.close();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,1,1,0,0,0.3,25,19
6084_40,40,40,spells.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,1,0,0,0.29,26,20
6084_42,42,42,"DatabaseManager.closeDatabase(getActivity(), handle);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,1,0,1,0.44,28,22
6085_1,1,1,private void getThreeSpells(String type) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.32,32,25
6085_2,2,2,Cursor spells = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.32,31,24
6085_3,3,3,FamiliarDbHandle handle = new FamiliarDbHandle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.27,30,23
6085_4,4,43,"try {
SQLiteDatabase database = DatabaseManager.openDatabase(getActivity(), false, handle);
String[] returnTypes = new String[]{CardDbAdapter.KEY_ID, CardDbAdapter.KEY_NAME};
SearchCriteria criteria = new SearchCriteria();
criteria.superTypes = Collections.singletonList(type);
spells = CardDbAdapter.Search(criteria, false, returnTypes, true, null, database);

if (spells == null) {
throw new FamiliarDbException(new Exception(""three spell failure""));
}
int[] pos = new int[3];
pos[0] = mRandom.nextInt(spells.getCount());
pos[1] = mRandom.nextInt(spells.getCount());
while (pos[0] == pos[1]) {
pos[1] = mRandom.nextInt(spells.getCount());
}
pos[2] = mRandom.nextInt(spells.getCount());
while (pos[0] == pos[2] || pos[1] == pos[2]) {
pos[2] = mRandom.nextInt(spells.getCount());
}

Bundle args = new Bundle();

spells.moveToPosition(pos[0]);
args.putLong(ResultListFragment.CARD_ID_0, CardDbAdapter.getLongFromCursor(spells, CardDbAdapter.KEY_ID));
spells.moveToPosition(pos[1]);
args.putLong(ResultListFragment.CARD_ID_1, CardDbAdapter.getLongFromCursor(spells, CardDbAdapter.KEY_ID));
spells.moveToPosition(pos[2]);
args.putLong(ResultListFragment.CARD_ID_2, CardDbAdapter.getLongFromCursor(spells, CardDbAdapter.KEY_ID));

ResultListFragment rlFrag = new ResultListFragment();
startNewFragment(rlFrag, args);
} catch (SQLiteException | FamiliarDbException | CursorIndexOutOfBoundsException e) {
handleFamiliarDbException(true);
} finally {
if (null != spells) {
spells.close();
}
DatabaseManager.closeDatabase(getActivity(), handle);
}",0,0,0,0,1,0,0,0,0,30,2,40,0,1,0,0,2,1,1,0,1,0.47,0,0
6085_5,5,5,"SQLiteDatabase database = DatabaseManager.openDatabase(getActivity(), false, handle);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.28,28,21
6085_6,6,6,"String[] returnTypes = new String[]{CardDbAdapter.KEY_ID, CardDbAdapter.KEY_NAME};",0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,2,1,1,0,0,0.3,27,20
6085_7,7,7,SearchCriteria criteria = new SearchCriteria();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.29,26,19
6085_8,8,8,criteria.superTypes = Collections.singletonList(type);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.29,25,18
6085_9,9,9,"spells = CardDbAdapter.Search(criteria, false, returnTypes, true, null, database);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,1,1,0,0,0.29,24,17
6085_11,11,13,"if (spells == null) {
throw new FamiliarDbException(new Exception(""three spell failure""));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,2,1,1,0,0,0.35,20,15
6085_12,12,12,"throw new FamiliarDbException(new Exception(""three spell failure""));",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,1,1,0,0,0.34,21,15
6085_14,14,14,int[] pos = new int[3];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.28,19,14
6085_15,15,15,pos[0] = mRandom.nextInt(spells.getCount());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,1,1,0,0,0.28,18,13
6085_16,16,16,pos[1] = mRandom.nextInt(spells.getCount());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,1,1,0,0,0.28,17,12
6085_17,17,19,"while (pos[0] == pos[1]) {
pos[1] = mRandom.nextInt(spells.getCount());
}",0,1,0,0,0,0,0,0,0,1,1,3,1,1,0,0,2,1,1,0,0,0.28,14,10
6085_18,18,18,pos[1] = mRandom.nextInt(spells.getCount());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.28,15,10
6085_20,20,20,pos[2] = mRandom.nextInt(spells.getCount());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,1,1,0,0,0.29,13,9
6085_21,21,23,"while (pos[0] == pos[2] || pos[1] == pos[2]) {
pos[2] = mRandom.nextInt(spells.getCount());
}",0,1,0,0,0,0,0,0,0,1,1,3,1,1,0,1,2,1,1,0,0,0.29,10,7
6085_22,22,22,pos[2] = mRandom.nextInt(spells.getCount());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.29,11,7
6085_25,25,25,Bundle args = new Bundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,1,1,0,0,0.31,8,6
6085_27,27,27,spells.moveToPosition(pos[0]);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,1,1,0,0,0.26,6,5
6085_28,28,28,"args.putLong(ResultListFragment.CARD_ID_0, CardDbAdapter.getLongFromCursor(spells, CardDbAdapter.KEY_ID));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.47,5,4
6085_29,29,29,spells.moveToPosition(pos[1]);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.27,4,3
6085_30,30,30,"args.putLong(ResultListFragment.CARD_ID_1, CardDbAdapter.getLongFromCursor(spells, CardDbAdapter.KEY_ID));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.48,3,2
6085_31,31,31,spells.moveToPosition(pos[2]);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.29,2,1
6085_32,32,32,"args.putLong(ResultListFragment.CARD_ID_2, CardDbAdapter.getLongFromCursor(spells, CardDbAdapter.KEY_ID));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,1,1,0,1,0.48,1,0
6085_34,34,34,ResultListFragment rlFrag = new ResultListFragment();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,1,1,0,1,0.59,0,0
6085_35,35,35,"startNewFragment(rlFrag, args);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.55,1,0
6085_36,36,36,} catch (SQLiteException | FamiliarDbException | CursorIndexOutOfBoundsException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.31,2,1
6085_37,37,37,handleFamiliarDbException(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.23,3,2
6085_38,38,38,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.16,4,3
6085_39,39,41,"if (null != spells) {
spells.close();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,1,1,0,0,0.32,5,4
6085_40,40,40,spells.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.3,6,5
6085_42,42,42,"DatabaseManager.closeDatabase(getActivity(), handle);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.27,8,7
6238_1,1,2,"    @Override
public View getView(int position, View convertView, ViewGroup parent) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,3,1,0,0,0.34,3,3
6238_3,3,12,"try {
return super.getView(position, convertView, parent);
} catch (Exception e) {
this.swapCursor(null);
if (convertView != null) {
return convertView;
} else {
return new View(mFragment.getActivity());
}
}",0,0,0,0,1,0,0,0,0,7,2,10,0,0,0,0,7,3,1,0,3,0.55,0,0
6238_4,4,4,"return super.getView(position, convertView, parent);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.38,1,1
6238_5,5,5,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.35,0,0
6238_6,6,6,this.swapCursor(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,3,0.78,0,0
6238_7,7,11,"if (convertView != null) {
return convertView;
} else {
return new View(mFragment.getActivity());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,7,3,1,0,1,0.43,1,0
6238_8,8,8,return convertView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.34,2,1
6238_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.33,3,2
6238_10,10,10,return new View(mFragment.getActivity());,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.37,4,3
2738_1,1,2,"@Override
public void onClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,0,0.32,4,4
2738_3,3,3,int position = getAdapterPosition();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.44,3,3
2738_4,4,18,"if (RecyclerView.NO_POSITION != position) {
if (mAdapter.isInSelectMode()) {
if (itemView.isSelected()) {
mAdapter.setItemSelected(itemView, position, false, true);

if (mFragment.adaptersGetAllSelected() < 1) {
mFragment.finishActionMode();
}
} else {
mAdapter.setItemSelected(itemView, position, true, true);
}
} else {
onClickNotSelectMode(view, position);
}
}",1,0,0,0,0,0,0,0,0,9,4,15,0,1,0,0,2,1,0,0,1,0.63,0,0
2738_5,5,17,"if (mAdapter.isInSelectMode()) {
if (itemView.isSelected()) {
mAdapter.setItemSelected(itemView, position, false, true);

if (mFragment.adaptersGetAllSelected() < 1) {
mFragment.finishActionMode();
}
} else {
mAdapter.setItemSelected(itemView, position, true, true);
}
} else {
onClickNotSelectMode(view, position);
}",1,0,0,0,0,0,0,0,0,8,3,13,0,0,0,0,2,1,0,0,1,0.61,0,0
2738_6,6,14,"if (itemView.isSelected()) {
mAdapter.setItemSelected(itemView, position, false, true);

if (mFragment.adaptersGetAllSelected() < 1) {
mFragment.finishActionMode();
}
} else {
mAdapter.setItemSelected(itemView, position, true, true);
}",1,0,0,0,0,0,0,0,0,5,2,9,0,0,0,0,2,1,0,0,1,0.62,0,0
2738_7,7,7,"mAdapter.setItemSelected(itemView, position, false, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,0,0,1,0.62,0,0
2738_9,9,11,"if (mFragment.adaptersGetAllSelected() < 1) {
mFragment.finishActionMode();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,2,1,0,0,0,0.47,2,1
2738_10,10,10,mFragment.finishActionMode();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.42,3,1
2738_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.29,5,3
2738_13,13,13,"mAdapter.setItemSelected(itemView, position, true, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.62,6,3
2738_15,15,15,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.29,8,5
2738_16,16,16,"onClickNotSelectMode(view, position);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.4,9,5
2739_1,1,2,"@Override
public void onClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,1,1,0,0,0,0.18,6,5
2739_3,3,3,int position = getAdapterPosition();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.44,5,4
2739_4,4,18,"if (RecyclerView.NO_POSITION != position) {
if (mAdapter.isInSelectMode()) {
if (itemView.isSelected()) {
mAdapter.setItemSelected(itemView, position, false, true);

if (mFragment.adaptersGetAllSelected() < 1) {
mFragment.finishActionMode();
}
} else {
mAdapter.setItemSelected(itemView, position, true, true);
}
} else {
onClickNotSelectMode(view, position);
}
}",1,0,0,0,0,0,0,0,0,9,4,15,0,1,0,0,1,1,0,0,1,0.68,0,0
2739_5,5,17,"if (mAdapter.isInSelectMode()) {
if (itemView.isSelected()) {
mAdapter.setItemSelected(itemView, position, false, true);

if (mFragment.adaptersGetAllSelected() < 1) {
mFragment.finishActionMode();
}
} else {
mAdapter.setItemSelected(itemView, position, true, true);
}
} else {
onClickNotSelectMode(view, position);
}",1,0,0,0,0,0,0,0,0,8,3,13,0,0,0,0,1,1,0,0,1,0.68,0,0
2739_6,6,14,"if (itemView.isSelected()) {
mAdapter.setItemSelected(itemView, position, false, true);

if (mFragment.adaptersGetAllSelected() < 1) {
mFragment.finishActionMode();
}
} else {
mAdapter.setItemSelected(itemView, position, true, true);
}",1,0,0,0,0,0,0,0,0,5,2,9,0,0,0,0,1,1,0,0,1,0.7,0,0
2739_7,7,7,"mAdapter.setItemSelected(itemView, position, false, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,1,0.72,1,0
2739_9,9,11,"if (mFragment.adaptersGetAllSelected() < 1) {
mFragment.finishActionMode();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,1,1,0,0,0,0.4,0,0
2739_10,10,10,mFragment.finishActionMode();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.23,1,0
2739_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.23,3,2
2739_13,13,13,"mAdapter.setItemSelected(itemView, position, true, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,0.72,4,2
2739_15,15,15,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.23,6,4
2739_16,16,16,"onClickNotSelectMode(view, position);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.34,7,4
2740_1,1,2,"@Override
public void onClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.37,7,6
2740_3,3,3,int position = getAdapterPosition();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.29,6,5
2740_4,4,18,"if (RecyclerView.NO_POSITION != position) {
if (mAdapter.isInSelectMode()) {
if (itemView.isSelected()) {
mAdapter.setItemSelected(itemView, position, false, true);

if (mFragment.adaptersGetAllSelected() < 1) {
mFragment.finishActionMode();
}
} else {
mAdapter.setItemSelected(itemView, position, true, true);
}
} else {
onClickNotSelectMode(view, position);
}
}",1,0,0,0,0,0,0,0,0,9,4,15,0,1,0,0,3,2,0,0,3,0.74,0,0
2740_5,5,17,"if (mAdapter.isInSelectMode()) {
if (itemView.isSelected()) {
mAdapter.setItemSelected(itemView, position, false, true);

if (mFragment.adaptersGetAllSelected() < 1) {
mFragment.finishActionMode();
}
} else {
mAdapter.setItemSelected(itemView, position, true, true);
}
} else {
onClickNotSelectMode(view, position);
}",1,0,0,0,0,0,0,0,0,8,3,13,0,0,0,0,3,2,0,0,3,0.75,0,0
2740_6,6,14,"if (itemView.isSelected()) {
mAdapter.setItemSelected(itemView, position, false, true);

if (mFragment.adaptersGetAllSelected() < 1) {
mFragment.finishActionMode();
}
} else {
mAdapter.setItemSelected(itemView, position, true, true);
}",1,0,0,0,0,0,0,0,0,5,2,9,0,0,0,0,3,2,0,0,3,0.73,0,0
2740_7,7,7,"mAdapter.setItemSelected(itemView, position, false, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,1,0.48,2,1
2740_9,9,11,"if (mFragment.adaptersGetAllSelected() < 1) {
mFragment.finishActionMode();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,2,0,0,3,0.77,0,0
2740_10,10,10,mFragment.finishActionMode();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.72,0,0
2740_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,2,1
2740_13,13,13,"mAdapter.setItemSelected(itemView, position, true, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.48,3,1
2740_15,15,15,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,5,3
2740_16,16,16,"onClickNotSelectMode(view, position);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.69,6,3
2741_1,1,2,"@Override
public void onClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,0,0.26,10,8
2741_3,3,3,int position = getAdapterPosition();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.41,9,7
2741_4,4,18,"if (RecyclerView.NO_POSITION != position) {
if (mAdapter.isInSelectMode()) {
if (itemView.isSelected()) {
mAdapter.setItemSelected(itemView, position, false, true);

if (mFragment.adaptersGetAllSelected() < 1) {
mFragment.finishActionMode();
}
} else {
mAdapter.setItemSelected(itemView, position, true, true);
}
} else {
onClickNotSelectMode(view, position);
}
}",1,0,0,0,0,0,0,0,0,9,4,15,0,1,0,0,2,1,0,0,2,0.73,0,0
2741_5,5,17,"if (mAdapter.isInSelectMode()) {
if (itemView.isSelected()) {
mAdapter.setItemSelected(itemView, position, false, true);

if (mFragment.adaptersGetAllSelected() < 1) {
mFragment.finishActionMode();
}
} else {
mAdapter.setItemSelected(itemView, position, true, true);
}
} else {
onClickNotSelectMode(view, position);
}",1,0,0,0,0,0,0,0,0,8,3,13,0,0,0,0,2,1,0,0,2,0.74,0,0
2741_6,6,14,"if (itemView.isSelected()) {
mAdapter.setItemSelected(itemView, position, false, true);

if (mFragment.adaptersGetAllSelected() < 1) {
mFragment.finishActionMode();
}
} else {
mAdapter.setItemSelected(itemView, position, true, true);
}",1,0,0,0,0,0,0,0,0,5,2,9,0,0,0,0,2,1,0,0,2,0.74,0,0
2741_7,7,7,"mAdapter.setItemSelected(itemView, position, false, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,0,0,2,0.76,5,3
2741_9,9,11,"if (mFragment.adaptersGetAllSelected() < 1) {
mFragment.finishActionMode();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,2,1,0,0,1,0.55,1,1
2741_10,10,10,mFragment.finishActionMode();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.25,2,1
2741_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.29,0,0
2741_13,13,13,"mAdapter.setItemSelected(itemView, position, true, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,2,0.76,0,0
2741_15,15,15,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.29,2,1
2741_16,16,16,"onClickNotSelectMode(view, position);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.57,3,1
2742_1,1,2,"    @Override
public boolean onLongClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.3,3,3
2742_3,3,3,int position = getAdapterPosition();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.29,2,2
2742_4,4,12,"if (RecyclerView.NO_POSITION != position) {
if (!mAdapter.isInSelectMode()) {
mFragment.startActionMode();

mAdapter.setItemSelected(itemView, position, true, true);

return true;
}
}",1,0,0,0,0,0,0,0,0,4,2,9,0,1,0,0,3,3,0,0,3,0.73,0,0
2742_5,5,11,"if (!mAdapter.isInSelectMode()) {
mFragment.startActionMode();

mAdapter.setItemSelected(itemView, position, true, true);

return true;
}",1,0,0,0,0,0,0,0,0,3,1,7,0,0,0,0,3,3,0,0,3,0.75,0,0
2742_6,6,6,mFragment.startActionMode();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,2,0.69,0,0
2742_8,8,8,"mAdapter.setItemSelected(itemView, position, true, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.46,2,1
2742_10,10,10,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.23,4,2
2742_13,13,13,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.21,7,3
2743_1,1,2,"    @Override
public boolean onLongClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,0,0.26,5,4
2743_3,3,3,int position = getAdapterPosition();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.41,4,3
2743_4,4,12,"if (RecyclerView.NO_POSITION != position) {
if (!mAdapter.isInSelectMode()) {
mFragment.startActionMode();

mAdapter.setItemSelected(itemView, position, true, true);

return true;
}
}",1,0,0,0,0,0,0,0,0,4,2,9,0,1,0,0,2,1,0,0,2,0.7,0,0
2743_5,5,11,"if (!mAdapter.isInSelectMode()) {
mFragment.startActionMode();

mAdapter.setItemSelected(itemView, position, true, true);

return true;
}",1,0,0,0,0,0,0,0,0,3,1,7,0,0,0,0,2,1,0,0,2,0.71,0,0
2743_6,6,6,mFragment.startActionMode();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,0,0,0,0.25,1,0
2743_8,8,8,"mAdapter.setItemSelected(itemView, position, true, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,1,0,0,2,0.76,0,0
2743_10,10,10,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,1,0,0,0,0.2,2,1
2743_13,13,13,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.21,5,2
6100_1,1,3,"static int[] getNumberOfCardsInList(ArrayList<MtgCard> cards, String cardName, String setCode,
String cardNumber, boolean isSideboard,
HashMap<Boolean, ArrayList<String>> emptyNumberSetCodes) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,10,7,1,0,3,0.63,6,4
6100_4,4,4,"int[] numberOf = new int[]{0, 0};",0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0,10,7,1,0,1,0.55,5,3
6100_5,5,23,"for (MtgCard card : cards) {
if (card.getName().equals(cardName) &&
card.getExpansion().equals(setCode) &&
card.isSideboard() == isSideboard) {

if (card.getNumber().equals(cardNumber) ||
(!emptyNumberSetCodes.get(card.mIsFoil).contains(setCode) && card.getNumber().isEmpty())) {
if (card.getNumber().isEmpty()) {
emptyNumberSetCodes.get(card.mIsFoil).add(setCode);
}

if (!card.mIsFoil) {
numberOf[0] += card.mNumberOf;
} else {
numberOf[1] += card.mNumberOf;
}
}
}
}",0,0,0,1,0,0,0,0,0,10,4,19,0,1,0,0,10,7,1,0,3,0.67,0,0
6100_6,6,22,"if (card.getName().equals(cardName) &&
card.getExpansion().equals(setCode) &&
card.isSideboard() == isSideboard) {

if (card.getNumber().equals(cardNumber) ||
(!emptyNumberSetCodes.get(card.mIsFoil).contains(setCode) && card.getNumber().isEmpty())) {
if (card.getNumber().isEmpty()) {
emptyNumberSetCodes.get(card.mIsFoil).add(setCode);
}

if (!card.mIsFoil) {
numberOf[0] += card.mNumberOf;
} else {
numberOf[1] += card.mNumberOf;
}
}
}",1,0,0,0,0,0,0,0,0,9,3,17,0,0,0,0,10,7,1,0,3,0.67,0,0
6100_7,7,8,"card.getExpansion().equals(setCode) &&
card.isSideboard() == isSideboard) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,7,1,0,1,0.4,1,0
6100_10,10,21,"if (card.getNumber().equals(cardNumber) ||
(!emptyNumberSetCodes.get(card.mIsFoil).contains(setCode) && card.getNumber().isEmpty())) {
if (card.getNumber().isEmpty()) {
emptyNumberSetCodes.get(card.mIsFoil).add(setCode);
}

if (!card.mIsFoil) {
numberOf[0] += card.mNumberOf;
} else {
numberOf[1] += card.mNumberOf;
}
}",1,0,0,0,0,0,0,0,0,7,2,12,0,0,1,0,10,7,1,0,3,0.7,0,0
6100_11,11,11,(!emptyNumberSetCodes.get(card.mIsFoil).contains(setCode) && card.getNumber().isEmpty())) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,3,0.68,1,0
6100_12,12,14,"if (card.getNumber().isEmpty()) {
emptyNumberSetCodes.get(card.mIsFoil).add(setCode);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,10,7,1,0,3,0.69,2,1
6100_13,13,13,emptyNumberSetCodes.get(card.mIsFoil).add(setCode);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,3,0.68,3,2
6100_16,16,20,"if (!card.mIsFoil) {
numberOf[0] += card.mNumberOf;
} else {
numberOf[1] += card.mNumberOf;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,10,7,1,0,1,0.59,6,4
6100_17,17,17,numberOf[0] += card.mNumberOf;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,1,0.62,7,4
6100_18,18,18,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,0,0.38,8,5
6100_19,19,19,numberOf[1] += card.mNumberOf;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,1,0.6,9,6
6100_24,24,24,return numberOf;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,10,7,1,0,1,0.6,14,8
6101_1,1,1,private String getColors(String c) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.52,2,1
6101_3,3,3,StringBuilder validColors = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,4,0,0,1,0.5,0,0
6101_4,4,6,"if (c == null || c.isEmpty()) {
return """";
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,4,0,0,2,0.6,0,0
6101_5,5,5,"return """";",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.4,1,0
6101_7,7,11,"for (int i = 0; i < c.length(); i++) {
if (COLORS.indexOf(c.charAt(i)) > -1) {
validColors.append(c.charAt(i));
}
}",0,0,1,0,0,0,0,0,0,2,2,5,0,1,0,0,5,4,0,0,1,0.42,3,2
6101_8,8,10,"if (COLORS.indexOf(c.charAt(i)) > -1) {
validColors.append(c.charAt(i));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,4,0,0,1,0.42,4,2
6101_9,9,9,validColors.append(c.charAt(i));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.33,5,3
6101_12,12,12,return validColors.toString();,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,5,4,0,0,1,0.5,8,5
6102_1,1,1,private String getColors(String c) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,2,0.62,5,3
6102_3,3,3,StringBuilder validColors = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,3,2,0,3,0.7,3,2
6102_4,4,6,"if (c == null || c.isEmpty()) {
return """";
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,3,2,0,1,0.5,0,0
6102_5,5,5,"return """";",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,3,2,0,1,0.62,1,0
6102_7,7,11,"for (int i = 0; i < c.length(); i++) {
if (COLORS.indexOf(c.charAt(i)) > -1) {
validColors.append(c.charAt(i));
}
}",0,0,1,0,0,0,0,0,0,2,2,5,0,1,0,0,7,3,2,0,3,0.66,0,0
6102_8,8,10,"if (COLORS.indexOf(c.charAt(i)) > -1) {
validColors.append(c.charAt(i));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,3,2,0,3,0.68,1,0
6102_9,9,9,validColors.append(c.charAt(i));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,3,0.72,2,1
6102_12,12,12,return validColors.toString();,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,7,3,2,0,4,0.86,5,3
6103_1,1,1,public void setMode(int mode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.5,5,2
6103_3,3,5,"if (null == mReadoutTextView) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,4,0,0,0,0.23,1,0
6103_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.2,2,0
6103_7,7,11,"if (mCommitting) {
mCommitting = false;
mHandler.removeCallbacks(mLifePoisonCommitter);
mLifePoisonCommitter.run();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,4,0,0,1,0.56,0,0
6103_8,8,8,mCommitting = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.63,1,0
6103_9,9,9,mHandler.removeCallbacks(mLifePoisonCommitter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.4,2,1
6103_10,10,10,mLifePoisonCommitter.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.4,3,2
6103_13,13,13,mMode = mode;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.75,6,4
6103_14,14,14,switch (mMode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.84,7,4
6103_15,15,16,"case LifeCounterFragment.STAT_LIFE:
if (mHistoryList != null) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.41,8,5
6103_17,17,17,mHistoryList.setAdapter(mHistoryLifeAdapter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.36,10,7
6103_18,18,18,mHistoryList.invalidate();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.34,11,7
6103_20,20,20,"mReadoutTextView.setText(formatInt(mLife, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.37,13,9
6103_21,21,22,"mReadoutTextView.setTextColor(ContextCompat.getColor(mFragment.requireContext(),
R.color.material_red_500));",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,4,4,0,0,0,0.34,14,9
6103_23,23,27,"if (mCommanderReadoutTextView != null) {
mCommanderReadoutTextView.setText(formatInt(mLife, false));
mCommanderReadoutTextView.setTextColor(
ContextCompat.getColor(mFragment.getContext(), R.color.material_red_500));
}",1,0,0,0,0,0,0,0,0,2,1,5,1,0,0,0,4,4,0,0,0,0.37,16,11
6103_24,24,24,"mCommanderReadoutTextView.setText(formatInt(mLife, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.38,17,11
6103_25,25,26,"mCommanderReadoutTextView.setTextColor(
ContextCompat.getColor(mFragment.getContext(), R.color.material_red_500));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.34,18,12
6103_28,28,28,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,4,0,0,0,0.29,21,14
6103_29,29,30,"case LifeCounterFragment.STAT_POISON:
if (mHistoryList != null) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.4,22,14
6103_31,31,31,mHistoryList.setAdapter(mHistoryPoisonAdapter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.31,24,16
6103_32,32,32,mHistoryList.invalidate();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.34,25,16
6103_34,34,34,"mReadoutTextView.setText(formatInt(mPoison, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.3,27,18
6103_35,35,36,"mReadoutTextView.setTextColor(ContextCompat.getColor(mFragment.requireContext(),
R.color.material_green_500));",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,4,4,0,0,0,0.35,28,18
6103_37,37,41,"if (mCommanderReadoutTextView != null) {
mCommanderReadoutTextView.setText(formatInt(mPoison, false));
mCommanderReadoutTextView.setTextColor(
ContextCompat.getColor(mFragment.getContext(), R.color.material_green_500));
}",1,0,0,0,0,0,0,0,0,2,1,5,1,0,0,0,4,4,0,0,0,0.36,30,20
6103_38,38,38,"mCommanderReadoutTextView.setText(formatInt(mPoison, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.33,31,20
6103_39,39,40,"mCommanderReadoutTextView.setTextColor(
ContextCompat.getColor(mFragment.getContext(), R.color.material_green_500));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.35,32,21
6103_42,42,42,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,4,0,0,0,0.29,35,23
6103_43,43,44,"case LifeCounterFragment.STAT_COMMANDER:
if (mHistoryList != null) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.4,36,23
6103_45,45,45,mHistoryList.setAdapter(mCommanderDamageAdapter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.36,38,25
6103_46,46,46,mHistoryList.invalidate();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.34,39,25
6103_48,48,48,"mReadoutTextView.setText(formatInt(mLife, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.37,41,27
6103_49,49,50,"mReadoutTextView.setTextColor(ContextCompat.getColor(mFragment.requireContext(),
R.color.material_red_500));",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,4,4,0,0,0,0.34,42,27
6103_51,51,55,"if (mCommanderReadoutTextView != null) {
mCommanderReadoutTextView.setText(formatInt(mLife, false));
mCommanderReadoutTextView.setTextColor(
ContextCompat.getColor(mFragment.getContext(), R.color.material_red_500));
}",1,0,0,0,0,0,0,0,0,2,1,5,1,0,0,0,4,4,0,0,0,0.37,44,29
6103_52,52,52,"mCommanderReadoutTextView.setText(formatInt(mLife, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.38,45,29
6103_53,53,54,"mCommanderReadoutTextView.setTextColor(
ContextCompat.getColor(mFragment.getContext(), R.color.material_red_500));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.34,46,30
6103_56,56,56,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,4,0,0,0,0.29,49,32
6104_1,1,1,"public void changeValue(int delta, boolean immediate) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.36,22,13
6104_2,2,2,switch (mMode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.26,21,12
6104_3,3,4,"case LifeCounterFragment.STAT_POISON:
mPoison += delta;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,2,2,0,0,0.43,19,11
6104_5,5,5,"mReadoutTextView.setText(formatInt(mPoison, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,2,2,0,0,0.25,18,10
6104_6,6,8,"if (mCommanderReadoutTextView != null) {
mCommanderReadoutTextView.setText(formatInt(mPoison, false));
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,6,2,2,0,0,0.3,15,8
6104_7,7,7,"mCommanderReadoutTextView.setText(formatInt(mPoison, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.3,16,8
6104_9,9,9,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,2,2,0,0,0.23,14,7
6104_10,10,12,"case LifeCounterFragment.STAT_COMMANDER:
case LifeCounterFragment.STAT_LIFE:
mLife += delta;",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,6,2,2,0,0,0.43,11,6
6104_13,13,13,"mReadoutTextView.setText(formatInt(mLife, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,2,2,0,0,0.34,10,5
6104_14,14,16,"if (mCommanderReadoutTextView != null) {
mCommanderReadoutTextView.setText(formatInt(mLife, false));
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,6,2,2,0,0,0.35,7,3
6104_15,15,15,"mCommanderReadoutTextView.setText(formatInt(mLife, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.35,8,3
6104_17,17,17,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,2,2,0,0,0.23,6,2
6104_20,20,22,"if (delta == 0) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,2,2,0,0,0.32,1,0
6104_21,21,21,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.17,2,0
6104_24,24,53,"if (!mCommitting) {
addNewLifeHistoryEntry();
addNewPoisonHistoryEntry();
} else if (!immediate) {
switch (mMode) {
case LifeCounterFragment.STAT_POISON: {
if (mPoisonHistory.isEmpty()) {
addNewPoisonHistoryEntry();
}
mPoisonHistory.get(0).mDelta += delta;
mPoisonHistory.get(0).mAbsolute += delta;
if (null != mHistoryPoisonAdapter) {
mHistoryPoisonAdapter.notifyDataSetChanged();
}
break;
}
case LifeCounterFragment.STAT_COMMANDER:
case LifeCounterFragment.STAT_LIFE: {
if (mLifeHistory.isEmpty()) {
addNewLifeHistoryEntry();
}
mLifeHistory.get(0).mDelta += delta;
mLifeHistory.get(0).mAbsolute += delta;
if (null != mHistoryLifeAdapter) {
mHistoryLifeAdapter.notifyDataSetChanged();
}
break;
}
}
}",1,0,0,0,0,0,0,0,0,20,4,30,0,0,1,1,6,2,2,0,4,0.67,0,0
6104_25,25,25,addNewLifeHistoryEntry();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,3,0.75,1,0
6104_26,26,26,addNewPoisonHistoryEntry();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,3,0.77,2,1
6104_27,27,27,} else if (!immediate) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.2,3,2
6104_28,28,28,switch (mMode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.26,4,3
6104_29,29,29,case LifeCounterFragment.STAT_POISON: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.41,5,4
6104_30,30,32,"if (mPoisonHistory.isEmpty()) {
addNewPoisonHistoryEntry();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,2,2,0,3,0.73,6,5
6104_31,31,31,addNewPoisonHistoryEntry();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,3,0.77,7,6
6104_33,33,33,mPoisonHistory.get(0).mDelta += delta;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,2,2,0,1,0.49,9,8
6104_34,34,34,mPoisonHistory.get(0).mAbsolute += delta;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,2,2,0,1,0.49,10,8
6104_35,35,37,"if (null != mHistoryPoisonAdapter) {
mHistoryPoisonAdapter.notifyDataSetChanged();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,2,2,0,1,0.43,11,9
6104_36,36,36,mHistoryPoisonAdapter.notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,1,0.41,12,10
6104_38,38,38,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,2,2,0,0,0.23,14,12
6104_40,40,41,"case LifeCounterFragment.STAT_COMMANDER:
case LifeCounterFragment.STAT_LIFE: {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,2,2,0,0,0.42,16,13
6104_42,42,44,"if (mLifeHistory.isEmpty()) {
addNewLifeHistoryEntry();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,2,2,0,3,0.71,18,14
6104_43,43,43,addNewLifeHistoryEntry();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,3,0.75,19,14
6104_45,45,45,mLifeHistory.get(0).mDelta += delta;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,2,2,0,1,0.5,21,16
6104_46,46,46,mLifeHistory.get(0).mAbsolute += delta;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,2,2,0,1,0.5,22,16
6104_47,47,49,"if (null != mHistoryLifeAdapter) {
mHistoryLifeAdapter.notifyDataSetChanged();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,2,2,0,1,0.48,23,17
6104_48,48,48,mHistoryLifeAdapter.notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,1,0.46,24,18
6104_50,50,50,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,2,2,0,0,0.23,26,20
6104_55,55,61,"if (!immediate) {
mCommitting = true;
mHandler.removeCallbacks(mLifePoisonCommitter);
mHandler.postDelayed(mLifePoisonCommitter,
Integer.parseInt(PreferenceAdapter.getLifeTimer(mFragment.getContext())));

}",1,0,0,0,0,0,0,0,0,3,1,7,0,0,1,0,6,2,2,0,1,0.44,31,21
6104_56,56,56,mCommitting = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,1,0.49,32,21
6104_57,57,57,mHandler.removeCallbacks(mLifePoisonCommitter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,2,0,0,0.38,33,22
6104_58,58,59,"mHandler.postDelayed(mLifePoisonCommitter,
Integer.parseInt(PreferenceAdapter.getLifeTimer(mFragment.getContext())));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,6,2,2,0,0,0.39,34,23
6105_1,1,1,"public void changeValue(int delta, boolean immediate) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.34,26,17
6105_2,2,2,switch (mMode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.25,25,16
6105_3,3,4,"case LifeCounterFragment.STAT_POISON:
mPoison += delta;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.37,23,15
6105_5,5,5,"mReadoutTextView.setText(formatInt(mPoison, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.3,22,14
6105_6,6,8,"if (mCommanderReadoutTextView != null) {
mCommanderReadoutTextView.setText(formatInt(mPoison, false));
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,4,3,0,0,0,0.3,19,12
6105_7,7,7,"mCommanderReadoutTextView.setText(formatInt(mPoison, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.3,20,12
6105_9,9,9,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.26,18,11
6105_10,10,12,"case LifeCounterFragment.STAT_COMMANDER:
case LifeCounterFragment.STAT_LIFE:
mLife += delta;",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,4,3,0,0,0,0.37,15,10
6105_13,13,13,"mReadoutTextView.setText(formatInt(mLife, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.33,14,9
6105_14,14,16,"if (mCommanderReadoutTextView != null) {
mCommanderReadoutTextView.setText(formatInt(mLife, false));
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,4,3,0,0,0,0.32,11,7
6105_15,15,15,"mCommanderReadoutTextView.setText(formatInt(mLife, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.33,12,7
6105_17,17,17,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.26,10,6
6105_20,20,22,"if (delta == 0) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,0,0.33,5,4
6105_21,21,21,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.21,6,4
6105_24,24,53,"if (!mCommitting) {
addNewLifeHistoryEntry();
addNewPoisonHistoryEntry();
} else if (!immediate) {
switch (mMode) {
case LifeCounterFragment.STAT_POISON: {
if (mPoisonHistory.isEmpty()) {
addNewPoisonHistoryEntry();
}
mPoisonHistory.get(0).mDelta += delta;
mPoisonHistory.get(0).mAbsolute += delta;
if (null != mHistoryPoisonAdapter) {
mHistoryPoisonAdapter.notifyDataSetChanged();
}
break;
}
case LifeCounterFragment.STAT_COMMANDER:
case LifeCounterFragment.STAT_LIFE: {
if (mLifeHistory.isEmpty()) {
addNewLifeHistoryEntry();
}
mLifeHistory.get(0).mDelta += delta;
mLifeHistory.get(0).mAbsolute += delta;
if (null != mHistoryLifeAdapter) {
mHistoryLifeAdapter.notifyDataSetChanged();
}
break;
}
}
}",1,0,0,0,0,0,0,0,0,20,4,30,0,0,1,1,4,3,0,0,2,0.58,0,0
6105_25,25,25,addNewLifeHistoryEntry();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.63,2,2
6105_26,26,26,addNewPoisonHistoryEntry();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.65,1,1
6105_27,27,27,} else if (!immediate) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.22,0,0
6105_28,28,28,switch (mMode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.25,0,0
6105_29,29,29,case LifeCounterFragment.STAT_POISON: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,1,0
6105_30,30,32,"if (mPoisonHistory.isEmpty()) {
addNewPoisonHistoryEntry();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,2,0.66,2,1
6105_31,31,31,addNewPoisonHistoryEntry();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.65,3,2
6105_33,33,33,mPoisonHistory.get(0).mDelta += delta;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,1,0.49,5,4
6105_34,34,34,mPoisonHistory.get(0).mAbsolute += delta;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,1,0.49,6,4
6105_35,35,37,"if (null != mHistoryPoisonAdapter) {
mHistoryPoisonAdapter.notifyDataSetChanged();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,1,0.48,7,5
6105_36,36,36,mHistoryPoisonAdapter.notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.46,8,6
6105_38,38,38,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.26,10,8
6105_40,40,41,"case LifeCounterFragment.STAT_COMMANDER:
case LifeCounterFragment.STAT_LIFE: {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.36,12,9
6105_42,42,44,"if (mLifeHistory.isEmpty()) {
addNewLifeHistoryEntry();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,2,0.63,14,10
6105_43,43,43,addNewLifeHistoryEntry();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.63,15,10
6105_45,45,45,mLifeHistory.get(0).mDelta += delta;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,1,0.49,17,12
6105_46,46,46,mLifeHistory.get(0).mAbsolute += delta;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,1,0.49,18,12
6105_47,47,49,"if (null != mHistoryLifeAdapter) {
mHistoryLifeAdapter.notifyDataSetChanged();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,1,0.48,19,13
6105_48,48,48,mHistoryLifeAdapter.notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.46,20,14
6105_50,50,50,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.26,22,16
6105_55,55,61,"if (!immediate) {
mCommitting = true;
mHandler.removeCallbacks(mLifePoisonCommitter);
mHandler.postDelayed(mLifePoisonCommitter,
Integer.parseInt(PreferenceAdapter.getLifeTimer(mFragment.getContext())));

}",1,0,0,0,0,0,0,0,0,3,1,7,0,0,1,0,4,3,0,0,0,0.35,27,17
6105_56,56,56,mCommitting = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.26,28,17
6105_57,57,57,mHandler.removeCallbacks(mLifePoisonCommitter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,29,18
6105_58,58,59,"mHandler.postDelayed(mLifePoisonCommitter,
Integer.parseInt(PreferenceAdapter.getLifeTimer(mFragment.getContext())));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,4,3,0,0,0,0.36,30,19
6106_1,1,1,private void addNewLifeHistoryEntry() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.75,0,0
6106_2,2,2,HistoryEntry entry = new HistoryEntry();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,3,0.94,0,0
6106_3,3,7,"if (mLifeHistory.size() == 0) {
entry.mDelta = mLife - mDefaultLifeTotal;
} else {
entry.mDelta = mLife - mLifeHistory.get(0).mAbsolute;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,4,3,0,0,2,0.6,1,0
6106_4,4,4,entry.mDelta = mLife - mDefaultLifeTotal;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.52,2,1
6106_5,5,5,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.19,3,2
6106_6,6,6,entry.mDelta = mLife - mLifeHistory.get(0).mAbsolute;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.62,4,3
6106_8,8,8,entry.mAbsolute = mLife;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.59,6,5
6106_9,9,14,"if (entry.mDelta != 0) {
mLifeHistory.add(0, entry);
if (mHistoryLifeAdapter != null) {
mHistoryLifeAdapter.notifyDataSetChanged();
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,0,4,3,0,0,2,0.61,7,5
6106_10,10,10,"mLifeHistory.add(0, entry);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.65,8,6
6106_11,11,13,"if (mHistoryLifeAdapter != null) {
mHistoryLifeAdapter.notifyDataSetChanged();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,1,0.48,9,7
6106_12,12,12,mHistoryLifeAdapter.notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.46,10,8
6107_1,1,1,private void addNewLifeHistoryEntry() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,2,0.62,1,1
6107_2,2,2,HistoryEntry entry = new HistoryEntry();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,1,0.57,0,0
6107_3,3,7,"if (mLifeHistory.size() == 0) {
entry.mDelta = mLife - mDefaultLifeTotal;
} else {
entry.mDelta = mLife - mLifeHistory.get(0).mAbsolute;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,6,4,0,0,4,0.82,0,0
6107_4,4,4,entry.mDelta = mLife - mDefaultLifeTotal;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,4,0.91,1,0
6107_5,5,5,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.31,2,1
6107_6,6,6,entry.mDelta = mLife - mLifeHistory.get(0).mAbsolute;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,2,0.71,3,2
6107_8,8,8,entry.mAbsolute = mLife;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,2,0.8,5,4
6107_9,9,14,"if (entry.mDelta != 0) {
mLifeHistory.add(0, entry);
if (mHistoryLifeAdapter != null) {
mHistoryLifeAdapter.notifyDataSetChanged();
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,0,6,4,0,0,2,0.64,6,4
6107_10,10,10,"mLifeHistory.add(0, entry);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,2,0.7,7,5
6107_11,11,13,"if (mHistoryLifeAdapter != null) {
mHistoryLifeAdapter.notifyDataSetChanged();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,4,0,0,1,0.53,8,6
6107_12,12,12,mHistoryLifeAdapter.notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.51,9,7
6108_1,1,1,"public View newView(int displayMode, int statType, GridLayout playersView, LinearLayout commanderPlayerView) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.71,3,2
6108_2,2,2,switch (displayMode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.27,2,1
6108_3,3,4,"case LifeCounterFragment.DISPLAY_COMMANDER:
case LifeCounterFragment.DISPLAY_NORMAL: {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.35,0,0
6108_5,5,9,"if (LifeCounterFragment.DISPLAY_COMMANDER == displayMode) {
mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, commanderPlayerView, false);
} else {
mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, playersView, false);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,3,2,0,0,3,0.79,0,0
6108_6,6,6,"mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, commanderPlayerView, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,3,0.81,1,0
6108_7,7,7,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.24,2,1
6108_8,8,8,"mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,3,0.83,3,2
6108_10,10,10,assert mView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.61,5,4
6108_11,11,11,mHistoryList = mView.findViewById(R.id.player_history);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,2,0.7,6,4
6108_12,12,12,mCommanderCastingButton = mView.findViewById(R.id.commanderCast);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,1,0.55,7,5
6108_13,13,13,mCommanderExperienceCountersButton = mView.findViewById(R.id.commanderExperienceCounter);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,2,0,0,1,0.55,8,6
6108_15,15,15,"mHistoryLifeAdapter = new HistoryArrayAdapter(mFragment.getActivity(), LifeCounterFragment.STAT_LIFE);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,2,0,0,0,0.41,10,8
6108_16,16,17,"mHistoryPoisonAdapter
= new HistoryArrayAdapter(mFragment.getActivity(), LifeCounterFragment.STAT_POISON);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,3,2,0,0,0,0.4,11,8
6108_18,18,18,mCommanderDamageAdapter = new CommanderDamageAdapter(mFragment.getActivity());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,2,0,0,0,0.41,13,10
6108_20,20,39,"if (displayMode == LifeCounterFragment.DISPLAY_COMMANDER) {
setupCommanderCastingButton();
setupCommanderExperienceCounterButton();

mCommanderRowView = LayoutInflater.from(
mFragment.getActivity()).inflate(R.layout.life_counter_player_commander, playersView, false);
assert mCommanderRowView != null;
mCommanderNameTextView = mCommanderRowView.findViewById(R.id.player_name);
if (mName != null) {
mCommanderNameTextView.setText(mName);
}
mCommanderReadoutTextView = mCommanderRowView.findViewById(R.id.player_readout);
}
else {
mView.findViewById(R.id.commanderCastText).setVisibility(View.GONE);
mCommanderCastingButton.setVisibility(View.GONE);

mView.findViewById(R.id.commanderExperienceCounterText).setVisibility(View.GONE);
mCommanderExperienceCountersButton.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,13,2,20,0,0,1,1,3,2,0,0,3,0.74,15,11
6108_21,21,21,setupCommanderCastingButton();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.41,16,11
6108_22,22,22,setupCommanderExperienceCounterButton();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.42,17,12
6108_24,24,25,"mCommanderRowView = LayoutInflater.from(
mFragment.getActivity()).inflate(R.layout.life_counter_player_commander, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,3,2,0,0,3,0.8,19,14
6108_26,26,26,assert mCommanderRowView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.56,21,15
6108_27,27,27,mCommanderNameTextView = mCommanderRowView.findViewById(R.id.player_name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.69,22,15
6108_28,28,30,"if (mName != null) {
mCommanderNameTextView.setText(mName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,1,0.51,23,16
6108_29,29,29,mCommanderNameTextView.setText(mName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.5,24,17
6108_31,31,31,mCommanderReadoutTextView = mCommanderRowView.findViewById(R.id.player_readout);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.72,26,19
6108_33,33,33,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.24,28,20
6108_34,34,34,mView.findViewById(R.id.commanderCastText).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,1,0.58,29,20
6108_35,35,35,mCommanderCastingButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,2,0,0,1,0.56,30,21
6108_37,37,37,mView.findViewById(R.id.commanderExperienceCounterText).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,2,0,0,1,0.58,32,23
6108_38,38,38,mCommanderExperienceCountersButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,1,0.57,33,23
6108_41,41,41,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,3,2,0,0,0,0.2,36,25
6108_43,43,43,case LifeCounterFragment.DISPLAY_COMPACT: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.38,38,26
6108_44,44,45,"mView = LayoutInflater
.from(mFragment.getActivity()).inflate(R.layout.life_counter_player_compact, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,3,0.82,39,26
6108_46,46,46,mHistoryList = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.36,41,28
6108_47,47,47,mHistoryLifeAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.41,42,28
6108_48,48,48,mHistoryPoisonAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.4,43,29
6108_49,49,49,mCommanderDamageAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.41,44,30
6108_50,50,50,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,0,0,0,0.2,45,31
6108_53,53,53,assert mView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,1,0.61,48,33
6108_55,55,55,mNameTextView = mView.findViewById(R.id.player_name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,2,0.72,50,34
6108_56,56,58,"if (mName != null) {
mNameTextView.setText(mName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,1,0.52,51,34
6108_57,57,57,mNameTextView.setText(mName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.52,52,35
6108_59,59,59,mReadoutTextView = mView.findViewById(R.id.player_readout);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.76,54,37
6108_60,60,60,mReadoutTextView.setOnClickListener(view -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.61,55,37
6108_61,61,65,"if (mCommitting) {
mCommitting = false;
mHandler.removeCallbacks(mLifePoisonCommitter);
mLifePoisonCommitter.run();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,3,2,0,0,0,0.32,56,38
6108_62,62,62,mCommitting = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.21,57,39
6108_63,63,63,mHandler.removeCallbacks(mLifePoisonCommitter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.36,58,40
6108_64,64,64,mLifePoisonCommitter.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.31,59,41
6108_66,66,66,"showDialog(LcPlayerDialogFragment.DIALOG_CHANGE_LIFE, -1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.52,61,43
6108_69,69,69,"mView.findViewById(R.id.player_minus1).setOnClickListener(view -> changeValue(-1, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,2,0,0,2,0.69,64,44
6108_70,70,70,"mView.findViewById(R.id.player_minus5).setOnClickListener(view -> changeValue(-5, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,2,0.69,65,44
6108_71,71,71,"mView.findViewById(R.id.player_plus1).setOnClickListener(view -> changeValue(1, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,2,0.69,66,45
6108_72,72,72,"mView.findViewById(R.id.player_plus5).setOnClickListener(view -> changeValue(5, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,2,0,0,2,0.69,67,46
6108_74,74,74,"mView.findViewById(R.id.player_name).setOnClickListener(view -> showDialog(LcPlayerDialogFragment.DIALOG_SET_NAME, -1));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,2,0.68,69,48
6108_76,76,76,setMode(statType);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.23,71,49
6108_78,78,82,"if (displayMode == LifeCounterFragment.DISPLAY_COMMANDER) {
return mCommanderRowView;
} else {
return mView;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,3,2,0,0,1,0.53,73,50
6108_79,79,79,return mCommanderRowView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.54,74,50
6108_80,80,80,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.24,75,51
6108_81,81,81,return mView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.6,76,52
6109_1,1,1,"public View newView(int displayMode, int statType, GridLayout playersView, LinearLayout commanderPlayerView) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.46,13,10
6109_2,2,2,switch (displayMode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.25,12,9
6109_3,3,4,"case LifeCounterFragment.DISPLAY_COMMANDER:
case LifeCounterFragment.DISPLAY_NORMAL: {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,1,0,0,0.33,10,8
6109_5,5,9,"if (LifeCounterFragment.DISPLAY_COMMANDER == displayMode) {
mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, commanderPlayerView, false);
} else {
mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, playersView, false);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,3,1,1,0,0,0.4,5,4
6109_6,6,6,"mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, commanderPlayerView, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.41,8,6
6109_7,7,7,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.13,7,5
6109_8,8,8,"mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.4,6,4
6109_10,10,10,assert mView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.25,4,3
6109_11,11,11,mHistoryList = mView.findViewById(R.id.player_history);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,1,1,0,0,0.33,3,2
6109_12,12,12,mCommanderCastingButton = mView.findViewById(R.id.commanderCast);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,1,1,0,0,0.41,2,1
6109_13,13,13,mCommanderExperienceCountersButton = mView.findViewById(R.id.commanderExperienceCounter);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,1,1,0,0,0.35,1,0
6109_15,15,15,"mHistoryLifeAdapter = new HistoryArrayAdapter(mFragment.getActivity(), LifeCounterFragment.STAT_LIFE);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,1,1,0,2,0.62,0,0
6109_16,16,17,"mHistoryPoisonAdapter
= new HistoryArrayAdapter(mFragment.getActivity(), LifeCounterFragment.STAT_POISON);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,3,1,1,0,2,0.63,1,0
6109_18,18,18,mCommanderDamageAdapter = new CommanderDamageAdapter(mFragment.getActivity());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,1,1,0,2,0.66,3,2
6109_20,20,39,"if (displayMode == LifeCounterFragment.DISPLAY_COMMANDER) {
setupCommanderCastingButton();
setupCommanderExperienceCounterButton();

mCommanderRowView = LayoutInflater.from(
mFragment.getActivity()).inflate(R.layout.life_counter_player_commander, playersView, false);
assert mCommanderRowView != null;
mCommanderNameTextView = mCommanderRowView.findViewById(R.id.player_name);
if (mName != null) {
mCommanderNameTextView.setText(mName);
}
mCommanderReadoutTextView = mCommanderRowView.findViewById(R.id.player_readout);
}
else {
mView.findViewById(R.id.commanderCastText).setVisibility(View.GONE);
mCommanderCastingButton.setVisibility(View.GONE);

mView.findViewById(R.id.commanderExperienceCounterText).setVisibility(View.GONE);
mCommanderExperienceCountersButton.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,13,2,20,0,0,1,1,3,1,1,0,0,0.42,5,3
6109_21,21,21,setupCommanderCastingButton();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.48,6,3
6109_22,22,22,setupCommanderExperienceCounterButton();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,1,1,0,0,0.4,7,4
6109_24,24,25,"mCommanderRowView = LayoutInflater.from(
mFragment.getActivity()).inflate(R.layout.life_counter_player_commander, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,3,1,1,0,0,0.41,9,6
6109_26,26,26,assert mCommanderRowView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.3,11,7
6109_27,27,27,mCommanderNameTextView = mCommanderRowView.findViewById(R.id.player_name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.31,12,7
6109_28,28,30,"if (mName != null) {
mCommanderNameTextView.setText(mName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,1,1,0,0,0.3,13,8
6109_29,29,29,mCommanderNameTextView.setText(mName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.32,14,9
6109_31,31,31,mCommanderReadoutTextView = mCommanderRowView.findViewById(R.id.player_readout);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.31,16,11
6109_33,33,33,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.13,18,12
6109_34,34,34,mView.findViewById(R.id.commanderCastText).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,1,1,0,0,0.39,19,12
6109_35,35,35,mCommanderCastingButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,1,1,0,0,0.44,20,13
6109_37,37,37,mView.findViewById(R.id.commanderExperienceCounterText).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,1,1,0,0,0.37,22,15
6109_38,38,38,mCommanderExperienceCountersButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,1,1,0,0,0.4,23,15
6109_41,41,41,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,3,1,1,0,0,0.04,26,17
6109_43,43,43,case LifeCounterFragment.DISPLAY_COMPACT: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.31,28,18
6109_44,44,45,"mView = LayoutInflater
.from(mFragment.getActivity()).inflate(R.layout.life_counter_player_compact, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,1,0,0,0.39,29,18
6109_46,46,46,mHistoryList = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.34,31,20
6109_47,47,47,mHistoryLifeAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.5,32,20
6109_48,48,48,mHistoryPoisonAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.49,33,21
6109_49,49,49,mCommanderDamageAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.52,34,22
6109_50,50,50,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,1,1,0,0,0.04,35,23
6109_53,53,53,assert mView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,1,1,0,0,0.25,38,25
6109_55,55,55,mNameTextView = mView.findViewById(R.id.player_name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,1,0,0,0.26,40,26
6109_56,56,58,"if (mName != null) {
mNameTextView.setText(mName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,1,1,0,0,0.25,41,26
6109_57,57,57,mNameTextView.setText(mName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.26,42,27
6109_59,59,59,mReadoutTextView = mView.findViewById(R.id.player_readout);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.27,44,29
6109_60,60,60,mReadoutTextView.setOnClickListener(view -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.3,45,29
6109_61,61,65,"if (mCommitting) {
mCommitting = false;
mHandler.removeCallbacks(mLifePoisonCommitter);
mLifePoisonCommitter.run();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,3,1,1,0,0,0.33,46,30
6109_62,62,62,mCommitting = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.25,47,31
6109_63,63,63,mHandler.removeCallbacks(mLifePoisonCommitter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.34,48,32
6109_64,64,64,mLifePoisonCommitter.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.36,49,33
6109_66,66,66,"showDialog(LcPlayerDialogFragment.DIALOG_CHANGE_LIFE, -1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.34,51,35
6109_69,69,69,"mView.findViewById(R.id.player_minus1).setOnClickListener(view -> changeValue(-1, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,1,1,0,0,0.28,54,36
6109_70,70,70,"mView.findViewById(R.id.player_minus5).setOnClickListener(view -> changeValue(-5, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,1,1,0,0,0.29,55,36
6109_71,71,71,"mView.findViewById(R.id.player_plus1).setOnClickListener(view -> changeValue(1, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,1,1,0,0,0.28,56,37
6109_72,72,72,"mView.findViewById(R.id.player_plus5).setOnClickListener(view -> changeValue(5, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,1,1,0,0,0.29,57,38
6109_74,74,74,"mView.findViewById(R.id.player_name).setOnClickListener(view -> showDialog(LcPlayerDialogFragment.DIALOG_SET_NAME, -1));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,1,0,0,0.34,59,40
6109_76,76,76,setMode(statType);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,1,0,0,0.31,61,41
6109_78,78,82,"if (displayMode == LifeCounterFragment.DISPLAY_COMMANDER) {
return mCommanderRowView;
} else {
return mView;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,3,1,1,0,0,0.33,63,42
6109_79,79,79,return mCommanderRowView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.28,64,42
6109_80,80,80,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.13,65,43
6109_81,81,81,return mView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.21,66,44
6110_1,1,1,"public View newView(int displayMode, int statType, GridLayout playersView, LinearLayout commanderPlayerView) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,3,0.59,18,13
6110_2,2,2,switch (displayMode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,1,0.5,17,12
6110_3,3,4,"case LifeCounterFragment.DISPLAY_COMMANDER:
case LifeCounterFragment.DISPLAY_NORMAL: {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,11,8,1,0,3,0.63,15,11
6110_5,5,9,"if (LifeCounterFragment.DISPLAY_COMMANDER == displayMode) {
mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, commanderPlayerView, false);
} else {
mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, playersView, false);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,11,8,1,0,4,0.65,10,7
6110_6,6,6,"mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, commanderPlayerView, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,3,0.63,13,9
6110_7,7,7,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,0,0.33,12,8
6110_8,8,8,"mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,2,0.59,11,7
6110_10,10,10,assert mView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,0,0.41,9,6
6110_11,11,11,mHistoryList = mView.findViewById(R.id.player_history);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,11,8,1,0,0,0.45,8,5
6110_12,12,12,mCommanderCastingButton = mView.findViewById(R.id.commanderCast);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,11,8,1,0,3,0.64,7,4
6110_13,13,13,mCommanderExperienceCountersButton = mView.findViewById(R.id.commanderExperienceCounter);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,11,8,1,0,4,0.7,6,3
6110_15,15,15,"mHistoryLifeAdapter = new HistoryArrayAdapter(mFragment.getActivity(), LifeCounterFragment.STAT_LIFE);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,11,8,1,0,1,0.52,4,2
6110_16,16,17,"mHistoryPoisonAdapter
= new HistoryArrayAdapter(mFragment.getActivity(), LifeCounterFragment.STAT_POISON);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,11,8,1,0,1,0.52,2,1
6110_18,18,18,mCommanderDamageAdapter = new CommanderDamageAdapter(mFragment.getActivity());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,11,8,1,0,1,0.55,1,0
6110_20,20,39,"if (displayMode == LifeCounterFragment.DISPLAY_COMMANDER) {
setupCommanderCastingButton();
setupCommanderExperienceCounterButton();

mCommanderRowView = LayoutInflater.from(
mFragment.getActivity()).inflate(R.layout.life_counter_player_commander, playersView, false);
assert mCommanderRowView != null;
mCommanderNameTextView = mCommanderRowView.findViewById(R.id.player_name);
if (mName != null) {
mCommanderNameTextView.setText(mName);
}
mCommanderReadoutTextView = mCommanderRowView.findViewById(R.id.player_readout);
}
else {
mView.findViewById(R.id.commanderCastText).setVisibility(View.GONE);
mCommanderCastingButton.setVisibility(View.GONE);

mView.findViewById(R.id.commanderExperienceCounterText).setVisibility(View.GONE);
mCommanderExperienceCountersButton.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,13,2,20,0,0,1,1,11,8,1,0,8,0.75,0,0
6110_21,21,21,setupCommanderCastingButton();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,3,0.71,1,0
6110_22,22,22,setupCommanderExperienceCounterButton();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,11,8,1,0,4,0.77,2,1
6110_24,24,25,"mCommanderRowView = LayoutInflater.from(
mFragment.getActivity()).inflate(R.layout.life_counter_player_commander, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,11,8,1,0,3,0.63,4,3
6110_26,26,26,assert mCommanderRowView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,1,0.5,6,4
6110_27,27,27,mCommanderNameTextView = mCommanderRowView.findViewById(R.id.player_name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,1,0.51,7,4
6110_28,28,30,"if (mName != null) {
mCommanderNameTextView.setText(mName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,11,8,1,0,2,0.53,8,5
6110_29,29,29,mCommanderNameTextView.setText(mName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,2,0.56,9,6
6110_31,31,31,mCommanderReadoutTextView = mCommanderRowView.findViewById(R.id.player_readout);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,1,0.51,11,8
6110_33,33,33,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,0,0.33,13,9
6110_34,34,34,mView.findViewById(R.id.commanderCastText).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,11,8,1,0,3,0.61,14,9
6110_35,35,35,mCommanderCastingButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,11,8,1,0,4,0.73,15,10
6110_37,37,37,mView.findViewById(R.id.commanderExperienceCounterText).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,11,8,1,0,4,0.65,17,12
6110_38,38,38,mCommanderExperienceCountersButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,11,8,1,0,5,0.77,18,12
6110_41,41,41,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,11,8,1,0,0,0.25,21,14
6110_43,43,43,case LifeCounterFragment.DISPLAY_COMPACT: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,2,0.58,23,15
6110_44,44,45,"mView = LayoutInflater
.from(mFragment.getActivity()).inflate(R.layout.life_counter_player_compact, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,11,8,1,0,2,0.58,24,15
6110_46,46,46,mHistoryList = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,0,0.38,26,17
6110_47,47,47,mHistoryLifeAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,0,0.48,27,17
6110_48,48,48,mHistoryPoisonAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,0,0.44,28,18
6110_49,49,49,mCommanderDamageAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,1,0.55,29,19
6110_50,50,50,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,11,8,1,0,0,0.25,30,20
6110_53,53,53,assert mView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,11,8,1,0,0,0.41,33,22
6110_55,55,55,mNameTextView = mView.findViewById(R.id.player_name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,11,8,1,0,0,0.44,35,23
6110_56,56,58,"if (mName != null) {
mNameTextView.setText(mName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,11,8,1,0,1,0.46,36,23
6110_57,57,57,mNameTextView.setText(mName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,1,0.49,37,24
6110_59,59,59,mReadoutTextView = mView.findViewById(R.id.player_readout);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,0,0.43,39,26
6110_60,60,60,mReadoutTextView.setOnClickListener(view -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,1,0.52,40,26
6110_61,61,65,"if (mCommitting) {
mCommitting = false;
mHandler.removeCallbacks(mLifePoisonCommitter);
mLifePoisonCommitter.run();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,11,8,1,0,0,0.42,41,27
6110_62,62,62,mCommitting = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,0,0.34,42,28
6110_63,63,63,mHandler.removeCallbacks(mLifePoisonCommitter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,0,0.43,43,29
6110_64,64,64,mLifePoisonCommitter.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,0,0.4,44,30
6110_66,66,66,"showDialog(LcPlayerDialogFragment.DIALOG_CHANGE_LIFE, -1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,0,0.47,46,32
6110_69,69,69,"mView.findViewById(R.id.player_minus1).setOnClickListener(view -> changeValue(-1, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,11,8,1,0,1,0.52,49,33
6110_70,70,70,"mView.findViewById(R.id.player_minus5).setOnClickListener(view -> changeValue(-5, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,11,8,1,0,1,0.52,50,33
6110_71,71,71,"mView.findViewById(R.id.player_plus1).setOnClickListener(view -> changeValue(1, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,11,8,1,0,1,0.52,51,34
6110_72,72,72,"mView.findViewById(R.id.player_plus5).setOnClickListener(view -> changeValue(5, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,11,8,1,0,1,0.52,52,35
6110_74,74,74,"mView.findViewById(R.id.player_name).setOnClickListener(view -> showDialog(LcPlayerDialogFragment.DIALOG_SET_NAME, -1));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,11,8,1,0,1,0.54,54,37
6110_76,76,76,setMode(statType);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,11,8,1,0,1,0.49,56,38
6110_78,78,82,"if (displayMode == LifeCounterFragment.DISPLAY_COMMANDER) {
return mCommanderRowView;
} else {
return mView;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,11,8,1,0,3,0.64,58,39
6110_79,79,79,return mCommanderRowView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,8,1,0,1,0.51,59,39
6110_80,80,80,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,8,1,0,0,0.33,60,40
6110_81,81,81,return mView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,8,1,0,0,0.4,61,41
6111_1,1,1,"public View newView(int displayMode, int statType, GridLayout playersView, LinearLayout commanderPlayerView) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.49,31,22
6111_2,2,2,switch (displayMode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.44,30,21
6111_3,3,4,"case LifeCounterFragment.DISPLAY_COMMANDER:
case LifeCounterFragment.DISPLAY_NORMAL: {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,4,1,0,2,0.59,28,20
6111_5,5,9,"if (LifeCounterFragment.DISPLAY_COMMANDER == displayMode) {
mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, commanderPlayerView, false);
} else {
mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, playersView, false);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,7,4,1,0,2,0.61,23,16
6111_6,6,6,"mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, commanderPlayerView, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,2,0.61,26,18
6111_7,7,7,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.32,25,17
6111_8,8,8,"mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.55,24,16
6111_10,10,10,assert mView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.39,22,15
6111_11,11,11,mHistoryList = mView.findViewById(R.id.player_history);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,4,1,0,0,0.44,21,14
6111_12,12,12,mCommanderCastingButton = mView.findViewById(R.id.commanderCast);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,4,1,0,3,0.67,20,13
6111_13,13,13,mCommanderExperienceCountersButton = mView.findViewById(R.id.commanderExperienceCounter);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,7,4,1,0,4,0.76,19,12
6111_15,15,15,"mHistoryLifeAdapter = new HistoryArrayAdapter(mFragment.getActivity(), LifeCounterFragment.STAT_LIFE);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,7,4,1,0,1,0.55,17,11
6111_16,16,17,"mHistoryPoisonAdapter
= new HistoryArrayAdapter(mFragment.getActivity(), LifeCounterFragment.STAT_POISON);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,7,4,1,0,1,0.54,15,10
6111_18,18,18,mCommanderDamageAdapter = new CommanderDamageAdapter(mFragment.getActivity());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,7,4,1,0,1,0.57,14,9
6111_20,20,39,"if (displayMode == LifeCounterFragment.DISPLAY_COMMANDER) {
setupCommanderCastingButton();
setupCommanderExperienceCounterButton();

mCommanderRowView = LayoutInflater.from(
mFragment.getActivity()).inflate(R.layout.life_counter_player_commander, playersView, false);
assert mCommanderRowView != null;
mCommanderNameTextView = mCommanderRowView.findViewById(R.id.player_name);
if (mName != null) {
mCommanderNameTextView.setText(mName);
}
mCommanderReadoutTextView = mCommanderRowView.findViewById(R.id.player_readout);
}
else {
mView.findViewById(R.id.commanderCastText).setVisibility(View.GONE);
mCommanderCastingButton.setVisibility(View.GONE);

mView.findViewById(R.id.commanderExperienceCounterText).setVisibility(View.GONE);
mCommanderExperienceCountersButton.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,13,2,20,0,0,1,1,7,4,1,0,5,0.73,0,0
6111_21,21,21,setupCommanderCastingButton();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,3,0.77,11,7
6111_22,22,22,setupCommanderExperienceCounterButton();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,4,1,0,4,0.84,10,6
6111_24,24,25,"mCommanderRowView = LayoutInflater.from(
mFragment.getActivity()).inflate(R.layout.life_counter_player_commander, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,7,4,1,0,2,0.62,7,5
6111_26,26,26,assert mCommanderRowView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.51,6,4
6111_27,27,27,mCommanderNameTextView = mCommanderRowView.findViewById(R.id.player_name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.51,5,3
6111_28,28,30,"if (mName != null) {
mCommanderNameTextView.setText(mName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,4,1,0,1,0.45,2,1
6111_29,29,29,mCommanderNameTextView.setText(mName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.47,3,1
6111_31,31,31,mCommanderReadoutTextView = mCommanderRowView.findViewById(R.id.player_readout);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.52,1,0
6111_33,33,33,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.32,0,0
6111_34,34,34,mView.findViewById(R.id.commanderCastText).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,4,1,0,2,0.57,1,0
6111_35,35,35,mCommanderCastingButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,7,4,1,0,3,0.7,2,1
6111_37,37,37,mView.findViewById(R.id.commanderExperienceCounterText).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,7,4,1,0,3,0.65,4,3
6111_38,38,38,mCommanderExperienceCountersButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,4,1,0,4,0.77,5,3
6111_41,41,41,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,7,4,1,0,0,0.28,8,5
6111_43,43,43,case LifeCounterFragment.DISPLAY_COMPACT: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.52,10,6
6111_44,44,45,"mView = LayoutInflater
.from(mFragment.getActivity()).inflate(R.layout.life_counter_player_compact, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,4,1,0,1,0.55,11,6
6111_46,46,46,mHistoryList = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.38,13,8
6111_47,47,47,mHistoryLifeAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.47,14,8
6111_48,48,48,mHistoryPoisonAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.42,15,9
6111_49,49,49,mCommanderDamageAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.56,16,10
6111_50,50,50,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,4,1,0,0,0.28,17,11
6111_53,53,53,assert mView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,4,1,0,0,0.39,20,13
6111_55,55,55,mNameTextView = mView.findViewById(R.id.player_name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,4,1,0,0,0.41,22,14
6111_56,56,58,"if (mName != null) {
mNameTextView.setText(mName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,4,1,0,0,0.35,23,14
6111_57,57,57,mNameTextView.setText(mName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.36,24,15
6111_59,59,59,mReadoutTextView = mView.findViewById(R.id.player_readout);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.41,26,17
6111_60,60,60,mReadoutTextView.setOnClickListener(view -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.41,27,17
6111_61,61,65,"if (mCommitting) {
mCommitting = false;
mHandler.removeCallbacks(mLifePoisonCommitter);
mLifePoisonCommitter.run();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,7,4,1,0,0,0.43,28,18
6111_62,62,62,mCommitting = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.35,29,19
6111_63,63,63,mHandler.removeCallbacks(mLifePoisonCommitter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.43,30,20
6111_64,64,64,mLifePoisonCommitter.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.45,31,21
6111_66,66,66,"showDialog(LcPlayerDialogFragment.DIALOG_CHANGE_LIFE, -1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.5,33,23
6111_69,69,69,"mView.findViewById(R.id.player_minus1).setOnClickListener(view -> changeValue(-1, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,7,4,1,0,0,0.46,36,24
6111_70,70,70,"mView.findViewById(R.id.player_minus5).setOnClickListener(view -> changeValue(-5, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,4,1,0,0,0.46,37,24
6111_71,71,71,"mView.findViewById(R.id.player_plus1).setOnClickListener(view -> changeValue(1, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,4,1,0,0,0.46,38,25
6111_72,72,72,"mView.findViewById(R.id.player_plus5).setOnClickListener(view -> changeValue(5, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,7,4,1,0,0,0.46,39,26
6111_74,74,74,"mView.findViewById(R.id.player_name).setOnClickListener(view -> showDialog(LcPlayerDialogFragment.DIALOG_SET_NAME, -1));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,4,1,0,0,0.5,41,28
6111_76,76,76,setMode(statType);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,4,1,0,0,0.39,43,29
6111_78,78,82,"if (displayMode == LifeCounterFragment.DISPLAY_COMMANDER) {
return mCommanderRowView;
} else {
return mView;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,7,4,1,0,2,0.59,45,30
6111_79,79,79,return mCommanderRowView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.48,46,30
6111_80,80,80,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.32,47,31
6111_81,81,81,return mView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.31,48,32
6112_1,1,1,"public View newView(int displayMode, int statType, GridLayout playersView, LinearLayout commanderPlayerView) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.59,42,29
6112_2,2,2,switch (displayMode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.3,41,28
6112_3,3,4,"case LifeCounterFragment.DISPLAY_COMMANDER:
case LifeCounterFragment.DISPLAY_NORMAL: {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,0,0,0,0.33,39,27
6112_5,5,9,"if (LifeCounterFragment.DISPLAY_COMMANDER == displayMode) {
mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, commanderPlayerView, false);
} else {
mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, playersView, false);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,3,1,0,0,2,0.66,34,23
6112_6,6,6,"mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, commanderPlayerView, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,2,0.68,37,25
6112_7,7,7,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.27,36,24
6112_8,8,8,"mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,2,0.69,35,23
6112_10,10,10,assert mView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.63,33,22
6112_11,11,11,mHistoryList = mView.findViewById(R.id.player_history);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,1,0,0,1,0.58,32,21
6112_12,12,12,mCommanderCastingButton = mView.findViewById(R.id.commanderCast);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,1,0,0,1,0.58,31,20
6112_13,13,13,mCommanderExperienceCountersButton = mView.findViewById(R.id.commanderExperienceCounter);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,1,0,0,1,0.56,30,19
6112_15,15,15,"mHistoryLifeAdapter = new HistoryArrayAdapter(mFragment.getActivity(), LifeCounterFragment.STAT_LIFE);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,1,0,0,0,0.38,28,18
6112_16,16,17,"mHistoryPoisonAdapter
= new HistoryArrayAdapter(mFragment.getActivity(), LifeCounterFragment.STAT_POISON);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,3,1,0,0,0,0.38,26,17
6112_18,18,18,mCommanderDamageAdapter = new CommanderDamageAdapter(mFragment.getActivity());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,1,0,0,0,0.38,25,16
6112_20,20,39,"if (displayMode == LifeCounterFragment.DISPLAY_COMMANDER) {
setupCommanderCastingButton();
setupCommanderExperienceCounterButton();

mCommanderRowView = LayoutInflater.from(
mFragment.getActivity()).inflate(R.layout.life_counter_player_commander, playersView, false);
assert mCommanderRowView != null;
mCommanderNameTextView = mCommanderRowView.findViewById(R.id.player_name);
if (mName != null) {
mCommanderNameTextView.setText(mName);
}
mCommanderReadoutTextView = mCommanderRowView.findViewById(R.id.player_readout);
}
else {
mView.findViewById(R.id.commanderCastText).setVisibility(View.GONE);
mCommanderCastingButton.setVisibility(View.GONE);

mView.findViewById(R.id.commanderExperienceCounterText).setVisibility(View.GONE);
mCommanderExperienceCountersButton.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,13,2,20,0,0,1,1,3,1,0,0,2,0.64,4,2
6112_21,21,21,setupCommanderCastingButton();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.42,22,14
6112_22,22,22,setupCommanderExperienceCounterButton();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,1,0,0,0,0.4,21,13
6112_24,24,25,"mCommanderRowView = LayoutInflater.from(
mFragment.getActivity()).inflate(R.layout.life_counter_player_commander, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,3,1,0,0,2,0.67,18,12
6112_26,26,26,assert mCommanderRowView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.58,17,11
6112_27,27,27,mCommanderNameTextView = mCommanderRowView.findViewById(R.id.player_name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.58,16,10
6112_28,28,30,"if (mName != null) {
mCommanderNameTextView.setText(mName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,1,0,0,1,0.53,13,8
6112_29,29,29,mCommanderNameTextView.setText(mName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.54,14,8
6112_31,31,31,mCommanderReadoutTextView = mCommanderRowView.findViewById(R.id.player_readout);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.6,12,7
6112_33,33,33,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.27,10,6
6112_34,34,34,mView.findViewById(R.id.commanderCastText).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,1,0,0,1,0.61,9,5
6112_35,35,35,mCommanderCastingButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,1,0,0,1,0.6,8,4
6112_37,37,37,mView.findViewById(R.id.commanderExperienceCounterText).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,1,0,0,1,0.6,6,3
6112_38,38,38,mCommanderExperienceCountersButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,1,0,0,1,0.58,5,2
6112_41,41,41,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,3,1,0,0,0,0.08,2,1
6112_43,43,43,case LifeCounterFragment.DISPLAY_COMPACT: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.54,0,0
6112_44,44,45,"mView = LayoutInflater
.from(mFragment.getActivity()).inflate(R.layout.life_counter_player_compact, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,0,0,3,0.79,0,0
6112_46,46,46,mHistoryList = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.32,2,1
6112_47,47,47,mHistoryLifeAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.37,3,1
6112_48,48,48,mHistoryPoisonAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.37,4,2
6112_49,49,49,mCommanderDamageAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.37,5,3
6112_50,50,50,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,1,0,0,0,0.08,6,4
6112_53,53,53,assert mView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,1,0,0,1,0.63,9,6
6112_55,55,55,mNameTextView = mView.findViewById(R.id.player_name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,0,0,1,0.6,11,7
6112_56,56,58,"if (mName != null) {
mNameTextView.setText(mName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,1,0,0,1,0.54,12,7
6112_57,57,57,mNameTextView.setText(mName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.56,13,8
6112_59,59,59,mReadoutTextView = mView.findViewById(R.id.player_readout);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.63,15,10
6112_60,60,60,mReadoutTextView.setOnClickListener(view -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.64,16,10
6112_61,61,65,"if (mCommitting) {
mCommitting = false;
mHandler.removeCallbacks(mLifePoisonCommitter);
mLifePoisonCommitter.run();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,3,1,0,0,0,0.28,17,11
6112_62,62,62,mCommitting = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.19,18,12
6112_63,63,63,mHandler.removeCallbacks(mLifePoisonCommitter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.31,19,13
6112_64,64,64,mLifePoisonCommitter.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.27,20,14
6112_66,66,66,"showDialog(LcPlayerDialogFragment.DIALOG_CHANGE_LIFE, -1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.38,22,16
6112_69,69,69,"mView.findViewById(R.id.player_minus1).setOnClickListener(view -> changeValue(-1, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,1,0,0,1,0.58,25,17
6112_70,70,70,"mView.findViewById(R.id.player_minus5).setOnClickListener(view -> changeValue(-5, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,1,0,0,1,0.58,26,17
6112_71,71,71,"mView.findViewById(R.id.player_plus1).setOnClickListener(view -> changeValue(1, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,1,0,0,1,0.58,27,18
6112_72,72,72,"mView.findViewById(R.id.player_plus5).setOnClickListener(view -> changeValue(5, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,1,0,0,1,0.58,28,19
6112_74,74,74,"mView.findViewById(R.id.player_name).setOnClickListener(view -> showDialog(LcPlayerDialogFragment.DIALOG_SET_NAME, -1));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,0,0,1,0.55,30,21
6112_76,76,76,setMode(statType);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,0,0,0,0.26,32,22
6112_78,78,82,"if (displayMode == LifeCounterFragment.DISPLAY_COMMANDER) {
return mCommanderRowView;
} else {
return mView;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,3,1,0,0,1,0.55,34,23
6112_79,79,79,return mCommanderRowView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.58,35,23
6112_80,80,80,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.27,36,24
6112_81,81,81,return mView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.65,37,25
6113_1,1,1,"public View newView(int displayMode, int statType, GridLayout playersView, LinearLayout commanderPlayerView) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.47,44,30
6113_2,2,2,switch (displayMode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.37,43,29
6113_3,3,4,"case LifeCounterFragment.DISPLAY_COMMANDER:
case LifeCounterFragment.DISPLAY_NORMAL: {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.5,41,28
6113_5,5,9,"if (LifeCounterFragment.DISPLAY_COMMANDER == displayMode) {
mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, commanderPlayerView, false);
} else {
mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, playersView, false);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,2,2,0,0,0,0.56,36,24
6113_6,6,6,"mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, commanderPlayerView, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.56,39,26
6113_7,7,7,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,38,25
6113_8,8,8,"mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.56,37,24
6113_10,10,10,assert mView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.45,35,23
6113_11,11,11,mHistoryList = mView.findViewById(R.id.player_history);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0.44,34,22
6113_12,12,12,mCommanderCastingButton = mView.findViewById(R.id.commanderCast);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0.41,33,21
6113_13,13,13,mCommanderExperienceCountersButton = mView.findViewById(R.id.commanderExperienceCounter);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,2,2,0,0,0,0.44,32,20
6113_15,15,15,"mHistoryLifeAdapter = new HistoryArrayAdapter(mFragment.getActivity(), LifeCounterFragment.STAT_LIFE);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,2,2,0,0,1,0.7,30,19
6113_16,16,17,"mHistoryPoisonAdapter
= new HistoryArrayAdapter(mFragment.getActivity(), LifeCounterFragment.STAT_POISON);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,2,2,0,0,1,0.69,28,18
6113_18,18,18,mCommanderDamageAdapter = new CommanderDamageAdapter(mFragment.getActivity());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,2,2,0,0,1,0.73,27,17
6113_20,20,39,"if (displayMode == LifeCounterFragment.DISPLAY_COMMANDER) {
setupCommanderCastingButton();
setupCommanderExperienceCounterButton();

mCommanderRowView = LayoutInflater.from(
mFragment.getActivity()).inflate(R.layout.life_counter_player_commander, playersView, false);
assert mCommanderRowView != null;
mCommanderNameTextView = mCommanderRowView.findViewById(R.id.player_name);
if (mName != null) {
mCommanderNameTextView.setText(mName);
}
mCommanderReadoutTextView = mCommanderRowView.findViewById(R.id.player_readout);
}
else {
mView.findViewById(R.id.commanderCastText).setVisibility(View.GONE);
mCommanderCastingButton.setVisibility(View.GONE);

mView.findViewById(R.id.commanderExperienceCounterText).setVisibility(View.GONE);
mCommanderExperienceCountersButton.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,13,2,20,0,0,1,1,2,2,0,0,0,0.53,6,3
6113_21,21,21,setupCommanderCastingButton();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.48,24,15
6113_22,22,22,setupCommanderExperienceCounterButton();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.5,23,14
6113_24,24,25,"mCommanderRowView = LayoutInflater.from(
mFragment.getActivity()).inflate(R.layout.life_counter_player_commander, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,2,2,0,0,0,0.55,20,13
6113_26,26,26,assert mCommanderRowView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.43,19,12
6113_27,27,27,mCommanderNameTextView = mCommanderRowView.findViewById(R.id.player_name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.36,18,11
6113_28,28,30,"if (mName != null) {
mCommanderNameTextView.setText(mName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,2,0,0,0,0.33,15,9
6113_29,29,29,mCommanderNameTextView.setText(mName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.34,16,9
6113_31,31,31,mCommanderReadoutTextView = mCommanderRowView.findViewById(R.id.player_readout);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.37,14,8
6113_33,33,33,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,12,7
6113_34,34,34,mView.findViewById(R.id.commanderCastText).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0.44,11,6
6113_35,35,35,mCommanderCastingButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,2,2,0,0,0,0.48,10,5
6113_37,37,37,mView.findViewById(R.id.commanderExperienceCounterText).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,2,2,0,0,0,0.44,8,4
6113_38,38,38,mCommanderExperienceCountersButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0.48,7,3
6113_41,41,41,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,2,2,0,0,0,0.25,4,2
6113_43,43,43,case LifeCounterFragment.DISPLAY_COMPACT: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.48,2,1
6113_44,44,45,"mView = LayoutInflater
.from(mFragment.getActivity()).inflate(R.layout.life_counter_player_compact, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.56,0,0
6113_46,46,46,mHistoryList = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.48,0,0
6113_47,47,47,mHistoryLifeAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.75,1,0
6113_48,48,48,mHistoryPoisonAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.65,2,1
6113_49,49,49,mCommanderDamageAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.76,3,2
6113_50,50,50,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,4,3
6113_53,53,53,assert mView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.45,7,5
6113_55,55,55,mNameTextView = mView.findViewById(R.id.player_name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.36,9,6
6113_56,56,58,"if (mName != null) {
mNameTextView.setText(mName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,2,0,0,0,0.33,10,6
6113_57,57,57,mNameTextView.setText(mName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,11,7
6113_59,59,59,mReadoutTextView = mView.findViewById(R.id.player_readout);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.36,13,9
6113_60,60,60,mReadoutTextView.setOnClickListener(view -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.41,14,9
6113_61,61,65,"if (mCommitting) {
mCommitting = false;
mHandler.removeCallbacks(mLifePoisonCommitter);
mLifePoisonCommitter.run();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,2,2,0,0,0,0.51,15,10
6113_62,62,62,mCommitting = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,16,11
6113_63,63,63,mHandler.removeCallbacks(mLifePoisonCommitter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.52,17,12
6113_64,64,64,mLifePoisonCommitter.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.56,18,13
6113_66,66,66,"showDialog(LcPlayerDialogFragment.DIALOG_CHANGE_LIFE, -1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.54,20,15
6113_69,69,69,"mView.findViewById(R.id.player_minus1).setOnClickListener(view -> changeValue(-1, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,2,2,0,0,0,0.39,23,16
6113_70,70,70,"mView.findViewById(R.id.player_minus5).setOnClickListener(view -> changeValue(-5, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0.4,24,16
6113_71,71,71,"mView.findViewById(R.id.player_plus1).setOnClickListener(view -> changeValue(1, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0.39,25,17
6113_72,72,72,"mView.findViewById(R.id.player_plus5).setOnClickListener(view -> changeValue(5, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,2,2,0,0,0,0.4,26,18
6113_74,74,74,"mView.findViewById(R.id.player_name).setOnClickListener(view -> showDialog(LcPlayerDialogFragment.DIALOG_SET_NAME, -1));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.49,28,20
6113_76,76,76,setMode(statType);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.33,30,21
6113_78,78,82,"if (displayMode == LifeCounterFragment.DISPLAY_COMMANDER) {
return mCommanderRowView;
} else {
return mView;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,2,2,0,0,0,0.48,32,22
6113_79,79,79,return mCommanderRowView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.35,33,22
6113_80,80,80,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,34,23
6113_81,81,81,return mView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.34,35,24
6114_1,1,1,"public View newView(int displayMode, int statType, GridLayout playersView, LinearLayout commanderPlayerView) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.52,53,36
6114_2,2,2,switch (displayMode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.34,52,35
6114_3,3,4,"case LifeCounterFragment.DISPLAY_COMMANDER:
case LifeCounterFragment.DISPLAY_NORMAL: {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,2,1,0,1,0.43,50,34
6114_5,5,9,"if (LifeCounterFragment.DISPLAY_COMMANDER == displayMode) {
mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, commanderPlayerView, false);
} else {
mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, playersView, false);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,6,2,1,0,1,0.48,45,30
6114_6,6,6,"mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, commanderPlayerView, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.49,48,32
6114_7,7,7,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.19,47,31
6114_8,8,8,"mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.5,46,30
6114_10,10,10,assert mView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.52,44,29
6114_11,11,11,mHistoryList = mView.findViewById(R.id.player_history);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,2,1,0,1,0.45,43,28
6114_12,12,12,mCommanderCastingButton = mView.findViewById(R.id.commanderCast);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,2,1,0,1,0.47,42,27
6114_13,13,13,mCommanderExperienceCountersButton = mView.findViewById(R.id.commanderExperienceCounter);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,6,2,1,0,1,0.47,41,26
6114_15,15,15,"mHistoryLifeAdapter = new HistoryArrayAdapter(mFragment.getActivity(), LifeCounterFragment.STAT_LIFE);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,6,2,1,0,0,0.35,39,25
6114_16,16,17,"mHistoryPoisonAdapter
= new HistoryArrayAdapter(mFragment.getActivity(), LifeCounterFragment.STAT_POISON);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,6,2,1,0,0,0.34,37,24
6114_18,18,18,mCommanderDamageAdapter = new CommanderDamageAdapter(mFragment.getActivity());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,6,2,1,0,0,0.36,36,23
6114_20,20,39,"if (displayMode == LifeCounterFragment.DISPLAY_COMMANDER) {
setupCommanderCastingButton();
setupCommanderExperienceCounterButton();

mCommanderRowView = LayoutInflater.from(
mFragment.getActivity()).inflate(R.layout.life_counter_player_commander, playersView, false);
assert mCommanderRowView != null;
mCommanderNameTextView = mCommanderRowView.findViewById(R.id.player_name);
if (mName != null) {
mCommanderNameTextView.setText(mName);
}
mCommanderReadoutTextView = mCommanderRowView.findViewById(R.id.player_readout);
}
else {
mView.findViewById(R.id.commanderCastText).setVisibility(View.GONE);
mCommanderCastingButton.setVisibility(View.GONE);

mView.findViewById(R.id.commanderExperienceCounterText).setVisibility(View.GONE);
mCommanderExperienceCountersButton.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,13,2,20,0,0,1,1,6,2,1,0,3,0.62,15,9
6114_21,21,21,setupCommanderCastingButton();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.36,33,21
6114_22,22,22,setupCommanderExperienceCounterButton();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,2,1,0,0,0.37,32,20
6114_24,24,25,"mCommanderRowView = LayoutInflater.from(
mFragment.getActivity()).inflate(R.layout.life_counter_player_commander, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,2,1,0,1,0.48,29,19
6114_26,26,26,assert mCommanderRowView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.47,28,18
6114_27,27,27,mCommanderNameTextView = mCommanderRowView.findViewById(R.id.player_name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,2,0.57,27,17
6114_28,28,30,"if (mName != null) {
mCommanderNameTextView.setText(mName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,2,1,0,3,0.7,24,15
6114_29,29,29,mCommanderNameTextView.setText(mName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,3,0.71,25,15
6114_31,31,31,mCommanderReadoutTextView = mCommanderRowView.findViewById(R.id.player_readout);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.48,23,14
6114_33,33,33,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.19,21,13
6114_34,34,34,mView.findViewById(R.id.commanderCastText).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,2,1,0,2,0.59,20,12
6114_35,35,35,mCommanderCastingButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,6,2,1,0,2,0.58,19,11
6114_37,37,37,mView.findViewById(R.id.commanderExperienceCounterText).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,6,2,1,0,2,0.58,17,10
6114_38,38,38,mCommanderExperienceCountersButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,2,1,0,2,0.58,16,9
6114_41,41,41,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,6,2,1,0,0,0.25,13,8
6114_43,43,43,case LifeCounterFragment.DISPLAY_COMPACT: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.49,11,7
6114_44,44,45,"mView = LayoutInflater
.from(mFragment.getActivity()).inflate(R.layout.life_counter_player_compact, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,2,1,0,2,0.56,9,6
6114_46,46,46,mHistoryList = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.27,8,5
6114_47,47,47,mHistoryLifeAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.34,7,4
6114_48,48,48,mHistoryPoisonAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.29,6,3
6114_49,49,49,mCommanderDamageAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.35,5,2
6114_50,50,50,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,2,1,0,0,0.25,4,1
6114_53,53,53,assert mView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,2,1,0,1,0.52,1,0
6114_55,55,55,mNameTextView = mView.findViewById(R.id.player_name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,2,1,0,2,0.61,0,0
6114_56,56,58,"if (mName != null) {
mNameTextView.setText(mName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,2,1,0,3,0.72,1,0
6114_57,57,57,mNameTextView.setText(mName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,3,0.74,2,1
6114_59,59,59,mReadoutTextView = mView.findViewById(R.id.player_readout);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.52,4,3
6114_60,60,60,mReadoutTextView.setOnClickListener(view -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,2,0.64,5,3
6114_61,61,65,"if (mCommitting) {
mCommitting = false;
mHandler.removeCallbacks(mLifePoisonCommitter);
mLifePoisonCommitter.run();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,6,2,1,0,0,0.31,6,4
6114_62,62,62,mCommitting = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.23,7,5
6114_63,63,63,mHandler.removeCallbacks(mLifePoisonCommitter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.31,8,6
6114_64,64,64,mLifePoisonCommitter.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.32,9,7
6114_66,66,66,"showDialog(LcPlayerDialogFragment.DIALOG_CHANGE_LIFE, -1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.35,11,9
6114_69,69,69,"mView.findViewById(R.id.player_minus1).setOnClickListener(view -> changeValue(-1, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,6,2,1,0,2,0.54,14,10
6114_70,70,70,"mView.findViewById(R.id.player_minus5).setOnClickListener(view -> changeValue(-5, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,2,1,0,2,0.54,15,10
6114_71,71,71,"mView.findViewById(R.id.player_plus1).setOnClickListener(view -> changeValue(1, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,2,1,0,2,0.54,16,11
6114_72,72,72,"mView.findViewById(R.id.player_plus5).setOnClickListener(view -> changeValue(5, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,6,2,1,0,2,0.54,17,12
6114_74,74,74,"mView.findViewById(R.id.player_name).setOnClickListener(view -> showDialog(LcPlayerDialogFragment.DIALOG_SET_NAME, -1));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,2,1,0,3,0.63,19,14
6114_76,76,76,setMode(statType);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,2,1,0,1,0.46,21,15
6114_78,78,82,"if (displayMode == LifeCounterFragment.DISPLAY_COMMANDER) {
return mCommanderRowView;
} else {
return mView;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,6,2,1,0,1,0.46,23,16
6114_79,79,79,return mCommanderRowView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.44,24,16
6114_80,80,80,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.19,25,17
6114_81,81,81,return mView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.5,26,18
6115_1,1,1,"public View newView(int displayMode, int statType, GridLayout playersView, LinearLayout commanderPlayerView) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.5,57,39
6115_2,2,2,switch (displayMode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.46,56,38
6115_3,3,4,"case LifeCounterFragment.DISPLAY_COMMANDER:
case LifeCounterFragment.DISPLAY_NORMAL: {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,6,0,0,1,0.54,54,37
6115_5,5,9,"if (LifeCounterFragment.DISPLAY_COMMANDER == displayMode) {
mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, commanderPlayerView, false);
} else {
mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, playersView, false);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,9,6,0,0,1,0.54,49,33
6115_6,6,6,"mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, commanderPlayerView, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,1,0.53,52,35
6115_7,7,7,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.36,51,34
6115_8,8,8,"mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,1,0.53,50,33
6115_10,10,10,assert mView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.43,48,32
6115_11,11,11,mHistoryList = mView.findViewById(R.id.player_history);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,6,0,0,0,0.42,47,31
6115_12,12,12,mCommanderCastingButton = mView.findViewById(R.id.commanderCast);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,6,0,0,0,0.42,46,30
6115_13,13,13,mCommanderExperienceCountersButton = mView.findViewById(R.id.commanderExperienceCounter);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,9,6,0,0,0,0.46,45,29
6115_15,15,15,"mHistoryLifeAdapter = new HistoryArrayAdapter(mFragment.getActivity(), LifeCounterFragment.STAT_LIFE);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,9,6,0,0,1,0.53,43,28
6115_16,16,17,"mHistoryPoisonAdapter
= new HistoryArrayAdapter(mFragment.getActivity(), LifeCounterFragment.STAT_POISON);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,9,6,0,0,1,0.5,41,27
6115_18,18,18,mCommanderDamageAdapter = new CommanderDamageAdapter(mFragment.getActivity());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,9,6,0,0,0,0.5,40,26
6115_20,20,39,"if (displayMode == LifeCounterFragment.DISPLAY_COMMANDER) {
setupCommanderCastingButton();
setupCommanderExperienceCounterButton();

mCommanderRowView = LayoutInflater.from(
mFragment.getActivity()).inflate(R.layout.life_counter_player_commander, playersView, false);
assert mCommanderRowView != null;
mCommanderNameTextView = mCommanderRowView.findViewById(R.id.player_name);
if (mName != null) {
mCommanderNameTextView.setText(mName);
}
mCommanderReadoutTextView = mCommanderRowView.findViewById(R.id.player_readout);
}
else {
mView.findViewById(R.id.commanderCastText).setVisibility(View.GONE);
mCommanderCastingButton.setVisibility(View.GONE);

mView.findViewById(R.id.commanderExperienceCounterText).setVisibility(View.GONE);
mCommanderExperienceCountersButton.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,13,2,20,0,0,1,1,9,6,0,0,1,0.51,19,12
6115_21,21,21,setupCommanderCastingButton();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.4,37,24
6115_22,22,22,setupCommanderExperienceCounterButton();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,6,0,0,0,0.45,36,23
6115_24,24,25,"mCommanderRowView = LayoutInflater.from(
mFragment.getActivity()).inflate(R.layout.life_counter_player_commander, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,9,6,0,0,1,0.53,33,22
6115_26,26,26,assert mCommanderRowView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.42,32,21
6115_27,27,27,mCommanderNameTextView = mCommanderRowView.findViewById(R.id.player_name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.41,31,20
6115_28,28,30,"if (mName != null) {
mCommanderNameTextView.setText(mName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,9,6,0,0,0,0.4,28,18
6115_29,29,29,mCommanderNameTextView.setText(mName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.41,29,18
6115_31,31,31,mCommanderReadoutTextView = mCommanderRowView.findViewById(R.id.player_readout);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.42,27,17
6115_33,33,33,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.36,25,16
6115_34,34,34,mView.findViewById(R.id.commanderCastText).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,6,0,0,0,0.45,24,15
6115_35,35,35,mCommanderCastingButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,9,6,0,0,0,0.46,23,14
6115_37,37,37,mView.findViewById(R.id.commanderExperienceCounterText).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,9,6,0,0,0,0.48,21,13
6115_38,38,38,mCommanderExperienceCountersButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,6,0,0,0,0.49,20,12
6115_41,41,41,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,9,6,0,0,0,0.33,17,11
6115_43,43,43,case LifeCounterFragment.DISPLAY_COMPACT: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,1,0.52,15,10
6115_44,44,45,"mView = LayoutInflater
.from(mFragment.getActivity()).inflate(R.layout.life_counter_player_compact, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,6,0,0,1,0.53,13,9
6115_46,46,46,mHistoryList = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.36,12,8
6115_47,47,47,mHistoryLifeAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,1,0.51,11,7
6115_48,48,48,mHistoryPoisonAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.37,10,6
6115_49,49,49,mCommanderDamageAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.49,9,5
6115_50,50,50,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,9,6,0,0,0,0.33,8,4
6115_53,53,53,assert mView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,6,0,0,0,0.43,5,3
6115_55,55,55,mNameTextView = mView.findViewById(R.id.player_name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,6,0,0,0,0.4,3,2
6115_56,56,58,"if (mName != null) {
mNameTextView.setText(mName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,9,6,0,0,0,0.37,0,0
6115_57,57,57,mNameTextView.setText(mName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.38,1,0
6115_59,59,59,mReadoutTextView = mView.findViewById(R.id.player_readout);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.41,0,0
6115_60,60,60,mReadoutTextView.setOnClickListener(view -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.44,1,0
6115_61,61,65,"if (mCommitting) {
mCommitting = false;
mHandler.removeCallbacks(mLifePoisonCommitter);
mLifePoisonCommitter.run();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,9,6,0,0,1,0.52,2,1
6115_62,62,62,mCommitting = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.41,3,2
6115_63,63,63,mHandler.removeCallbacks(mLifePoisonCommitter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,1,0.51,4,3
6115_64,64,64,mLifePoisonCommitter.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,1,0.57,5,4
6115_66,66,66,"showDialog(LcPlayerDialogFragment.DIALOG_CHANGE_LIFE, -1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,3,0.72,7,6
6115_69,69,69,"mView.findViewById(R.id.player_minus1).setOnClickListener(view -> changeValue(-1, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,9,6,0,0,1,0.49,10,7
6115_70,70,70,"mView.findViewById(R.id.player_minus5).setOnClickListener(view -> changeValue(-5, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,6,0,0,1,0.51,11,7
6115_71,71,71,"mView.findViewById(R.id.player_plus1).setOnClickListener(view -> changeValue(1, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,6,0,0,1,0.49,12,8
6115_72,72,72,"mView.findViewById(R.id.player_plus5).setOnClickListener(view -> changeValue(5, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,9,6,0,0,1,0.51,13,9
6115_74,74,74,"mView.findViewById(R.id.player_name).setOnClickListener(view -> showDialog(LcPlayerDialogFragment.DIALOG_SET_NAME, -1));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,6,0,0,1,0.55,15,11
6115_76,76,76,setMode(statType);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,6,0,0,0,0.39,17,12
6115_78,78,82,"if (displayMode == LifeCounterFragment.DISPLAY_COMMANDER) {
return mCommanderRowView;
} else {
return mView;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,9,6,0,0,1,0.52,19,13
6115_79,79,79,return mCommanderRowView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.4,20,13
6115_80,80,80,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.36,21,14
6115_81,81,81,return mView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,6,0,0,0,0.38,22,15
6116_1,1,1,"public View newView(int displayMode, int statType, GridLayout playersView, LinearLayout commanderPlayerView) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.37,59,41
6116_2,2,2,switch (displayMode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.41,58,40
6116_3,3,4,"case LifeCounterFragment.DISPLAY_COMMANDER:
case LifeCounterFragment.DISPLAY_NORMAL: {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.45,56,39
6116_5,5,9,"if (LifeCounterFragment.DISPLAY_COMMANDER == displayMode) {
mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, commanderPlayerView, false);
} else {
mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, playersView, false);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,4,4,0,0,0,0.45,51,35
6116_6,6,6,"mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, commanderPlayerView, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.44,54,37
6116_7,7,7,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.27,53,36
6116_8,8,8,"mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.44,52,35
6116_10,10,10,assert mView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.32,50,34
6116_11,11,11,mHistoryList = mView.findViewById(R.id.player_history);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.34,49,33
6116_12,12,12,mCommanderCastingButton = mView.findViewById(R.id.commanderCast);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.4,48,32
6116_13,13,13,mCommanderExperienceCountersButton = mView.findViewById(R.id.commanderExperienceCounter);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,4,0,0,0,0.4,47,31
6116_15,15,15,"mHistoryLifeAdapter = new HistoryArrayAdapter(mFragment.getActivity(), LifeCounterFragment.STAT_LIFE);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,4,4,0,0,0,0.43,45,30
6116_16,16,17,"mHistoryPoisonAdapter
= new HistoryArrayAdapter(mFragment.getActivity(), LifeCounterFragment.STAT_POISON);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,4,4,0,0,0,0.43,43,29
6116_18,18,18,mCommanderDamageAdapter = new CommanderDamageAdapter(mFragment.getActivity());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,4,0,0,0,0.43,42,28
6116_20,20,39,"if (displayMode == LifeCounterFragment.DISPLAY_COMMANDER) {
setupCommanderCastingButton();
setupCommanderExperienceCounterButton();

mCommanderRowView = LayoutInflater.from(
mFragment.getActivity()).inflate(R.layout.life_counter_player_commander, playersView, false);
assert mCommanderRowView != null;
mCommanderNameTextView = mCommanderRowView.findViewById(R.id.player_name);
if (mName != null) {
mCommanderNameTextView.setText(mName);
}
mCommanderReadoutTextView = mCommanderRowView.findViewById(R.id.player_readout);
}
else {
mView.findViewById(R.id.commanderCastText).setVisibility(View.GONE);
mCommanderCastingButton.setVisibility(View.GONE);

mView.findViewById(R.id.commanderExperienceCounterText).setVisibility(View.GONE);
mCommanderExperienceCountersButton.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,13,2,20,0,0,1,1,4,4,0,0,0,0.43,21,14
6116_21,21,21,setupCommanderCastingButton();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.44,39,26
6116_22,22,22,setupCommanderExperienceCounterButton();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.42,38,25
6116_24,24,25,"mCommanderRowView = LayoutInflater.from(
mFragment.getActivity()).inflate(R.layout.life_counter_player_commander, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,4,0,0,0,0.44,35,24
6116_26,26,26,assert mCommanderRowView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.33,34,23
6116_27,27,27,mCommanderNameTextView = mCommanderRowView.findViewById(R.id.player_name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.35,33,22
6116_28,28,30,"if (mName != null) {
mCommanderNameTextView.setText(mName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,4,0,0,0,0.29,30,20
6116_29,29,29,mCommanderNameTextView.setText(mName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.29,31,20
6116_31,31,31,mCommanderReadoutTextView = mCommanderRowView.findViewById(R.id.player_readout);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.35,29,19
6116_33,33,33,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.27,27,18
6116_34,34,34,mView.findViewById(R.id.commanderCastText).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.38,26,17
6116_35,35,35,mCommanderCastingButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,4,0,0,0,0.43,25,16
6116_37,37,37,mView.findViewById(R.id.commanderExperienceCounterText).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,4,4,0,0,0,0.39,23,15
6116_38,38,38,mCommanderExperienceCountersButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.42,22,14
6116_41,41,41,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,4,4,0,0,0,0.25,19,13
6116_43,43,43,case LifeCounterFragment.DISPLAY_COMPACT: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.44,17,12
6116_44,44,45,"mView = LayoutInflater
.from(mFragment.getActivity()).inflate(R.layout.life_counter_player_compact, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.44,15,11
6116_46,46,46,mHistoryList = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.32,14,10
6116_47,47,47,mHistoryLifeAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.4,13,9
6116_48,48,48,mHistoryPoisonAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.36,12,8
6116_49,49,49,mCommanderDamageAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.41,11,7
6116_50,50,50,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,4,0,0,0,0.25,10,6
6116_53,53,53,assert mView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.32,7,5
6116_55,55,55,mNameTextView = mView.findViewById(R.id.player_name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.31,5,4
6116_56,56,58,"if (mName != null) {
mNameTextView.setText(mName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,4,0,0,0,0.23,2,2
6116_57,57,57,mNameTextView.setText(mName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.22,3,2
6116_59,59,59,mReadoutTextView = mView.findViewById(R.id.player_readout);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.32,1,1
6116_60,60,60,mReadoutTextView.setOnClickListener(view -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.33,0,0
6116_61,61,65,"if (mCommitting) {
mCommitting = false;
mHandler.removeCallbacks(mLifePoisonCommitter);
mLifePoisonCommitter.run();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,4,4,0,0,1,0.53,0,0
6116_62,62,62,mCommitting = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.53,1,0
6116_63,63,63,mHandler.removeCallbacks(mLifePoisonCommitter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.41,2,1
6116_64,64,64,mLifePoisonCommitter.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.39,3,2
6116_66,66,66,"showDialog(LcPlayerDialogFragment.DIALOG_CHANGE_LIFE, -1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,3,0.79,5,4
6116_69,69,69,"mView.findViewById(R.id.player_minus1).setOnClickListener(view -> changeValue(-1, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,4,4,0,0,1,0.45,8,5
6116_70,70,70,"mView.findViewById(R.id.player_minus5).setOnClickListener(view -> changeValue(-5, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,1,0.45,9,5
6116_71,71,71,"mView.findViewById(R.id.player_plus1).setOnClickListener(view -> changeValue(1, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,1,0.45,10,6
6116_72,72,72,"mView.findViewById(R.id.player_plus5).setOnClickListener(view -> changeValue(5, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,4,0,0,1,0.45,11,7
6116_74,74,74,"mView.findViewById(R.id.player_name).setOnClickListener(view -> showDialog(LcPlayerDialogFragment.DIALOG_SET_NAME, -1));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,2,0.56,13,9
6116_76,76,76,setMode(statType);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.34,15,10
6116_78,78,82,"if (displayMode == LifeCounterFragment.DISPLAY_COMMANDER) {
return mCommanderRowView;
} else {
return mView;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,4,4,0,0,0,0.41,17,11
6116_79,79,79,return mCommanderRowView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.31,18,11
6116_80,80,80,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.27,19,12
6116_81,81,81,return mView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.22,20,13
6117_1,1,1,"public View newView(int displayMode, int statType, GridLayout playersView, LinearLayout commanderPlayerView) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.47,67,46
6117_2,2,2,switch (displayMode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.38,66,45
6117_3,3,4,"case LifeCounterFragment.DISPLAY_COMMANDER:
case LifeCounterFragment.DISPLAY_NORMAL: {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,1,0,1,0.53,64,44
6117_5,5,9,"if (LifeCounterFragment.DISPLAY_COMMANDER == displayMode) {
mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, commanderPlayerView, false);
} else {
mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, playersView, false);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,5,3,1,0,1,0.54,59,40
6117_6,6,6,"mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, commanderPlayerView, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.53,62,42
6117_7,7,7,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.29,61,41
6117_8,8,8,"mView = LayoutInflater.from(mFragment.getActivity()).inflate(R.layout.life_counter_player, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.53,60,40
6117_10,10,10,assert mView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.4,58,39
6117_11,11,11,mHistoryList = mView.findViewById(R.id.player_history);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,3,1,0,0,0.4,57,38
6117_12,12,12,mCommanderCastingButton = mView.findViewById(R.id.commanderCast);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,3,1,0,1,0.5,56,37
6117_13,13,13,mCommanderExperienceCountersButton = mView.findViewById(R.id.commanderExperienceCounter);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,5,3,1,0,1,0.53,55,36
6117_15,15,15,"mHistoryLifeAdapter = new HistoryArrayAdapter(mFragment.getActivity(), LifeCounterFragment.STAT_LIFE);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,5,3,1,0,1,0.55,53,35
6117_16,16,17,"mHistoryPoisonAdapter
= new HistoryArrayAdapter(mFragment.getActivity(), LifeCounterFragment.STAT_POISON);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,5,3,1,0,2,0.52,51,34
6117_18,18,18,mCommanderDamageAdapter = new CommanderDamageAdapter(mFragment.getActivity());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,5,3,1,0,0,0.5,50,33
6117_20,20,39,"if (displayMode == LifeCounterFragment.DISPLAY_COMMANDER) {
setupCommanderCastingButton();
setupCommanderExperienceCounterButton();

mCommanderRowView = LayoutInflater.from(
mFragment.getActivity()).inflate(R.layout.life_counter_player_commander, playersView, false);
assert mCommanderRowView != null;
mCommanderNameTextView = mCommanderRowView.findViewById(R.id.player_name);
if (mName != null) {
mCommanderNameTextView.setText(mName);
}
mCommanderReadoutTextView = mCommanderRowView.findViewById(R.id.player_readout);
}
else {
mView.findViewById(R.id.commanderCastText).setVisibility(View.GONE);
mCommanderCastingButton.setVisibility(View.GONE);

mView.findViewById(R.id.commanderExperienceCounterText).setVisibility(View.GONE);
mCommanderExperienceCountersButton.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,13,2,20,0,0,1,1,5,3,1,0,3,0.67,29,19
6117_21,21,21,setupCommanderCastingButton();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.56,47,31
6117_22,22,22,setupCommanderExperienceCounterButton();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,1,0,1,0.59,46,30
6117_24,24,25,"mCommanderRowView = LayoutInflater.from(
mFragment.getActivity()).inflate(R.layout.life_counter_player_commander, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,3,1,0,1,0.53,43,29
6117_26,26,26,assert mCommanderRowView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.42,42,28
6117_27,27,27,mCommanderNameTextView = mCommanderRowView.findViewById(R.id.player_name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.42,41,27
6117_28,28,30,"if (mName != null) {
mCommanderNameTextView.setText(mName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,3,1,0,1,0.52,38,25
6117_29,29,29,mCommanderNameTextView.setText(mName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.54,39,25
6117_31,31,31,mCommanderReadoutTextView = mCommanderRowView.findViewById(R.id.player_readout);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.42,37,24
6117_33,33,33,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.29,35,23
6117_34,34,34,mView.findViewById(R.id.commanderCastText).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,3,1,0,1,0.53,34,22
6117_35,35,35,mCommanderCastingButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,5,3,1,0,2,0.66,33,21
6117_37,37,37,mView.findViewById(R.id.commanderExperienceCounterText).setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,5,3,1,0,1,0.56,31,20
6117_38,38,38,mCommanderExperienceCountersButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,3,1,0,2,0.68,30,19
6117_41,41,41,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,5,3,1,0,0,0.3,27,18
6117_43,43,43,case LifeCounterFragment.DISPLAY_COMPACT: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.51,25,17
6117_44,44,45,"mView = LayoutInflater
.from(mFragment.getActivity()).inflate(R.layout.life_counter_player_compact, playersView, false);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,1,0,1,0.53,23,16
6117_46,46,46,mHistoryList = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.33,22,15
6117_47,47,47,mHistoryLifeAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.55,21,14
6117_48,48,48,mHistoryPoisonAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.4,20,13
6117_49,49,49,mCommanderDamageAdapter = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.5,19,12
6117_50,50,50,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,3,1,0,0,0.3,18,11
6117_53,53,53,assert mView != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,1,0,0,0.4,15,10
6117_55,55,55,mNameTextView = mView.findViewById(R.id.player_name);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,0,0.4,13,9
6117_56,56,58,"if (mName != null) {
mNameTextView.setText(mName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,3,1,0,1,0.5,10,7
6117_57,57,57,mNameTextView.setText(mName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.53,11,7
6117_59,59,59,mReadoutTextView = mView.findViewById(R.id.player_readout);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.39,9,6
6117_60,60,60,mReadoutTextView.setOnClickListener(view -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.58,8,5
6117_61,61,65,"if (mCommitting) {
mCommitting = false;
mHandler.removeCallbacks(mLifePoisonCommitter);
mLifePoisonCommitter.run();
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,5,3,1,0,2,0.53,3,1
6117_62,62,62,mCommitting = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.33,6,3
6117_63,63,63,mHandler.removeCallbacks(mLifePoisonCommitter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,2,0.54,5,2
6117_64,64,64,mLifePoisonCommitter.run();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,2,0.6,4,1
6117_66,66,66,"showDialog(LcPlayerDialogFragment.DIALOG_CHANGE_LIFE, -1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.53,2,0
6117_69,69,69,"mView.findViewById(R.id.player_minus1).setOnClickListener(view -> changeValue(-1, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,5,3,1,0,1,0.51,0,0
6117_70,70,70,"mView.findViewById(R.id.player_minus5).setOnClickListener(view -> changeValue(-5, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,3,1,0,1,0.52,1,0
6117_71,71,71,"mView.findViewById(R.id.player_plus1).setOnClickListener(view -> changeValue(1, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,3,1,0,1,0.51,2,1
6117_72,72,72,"mView.findViewById(R.id.player_plus5).setOnClickListener(view -> changeValue(5, false));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,5,3,1,0,1,0.52,3,2
6117_74,74,74,"mView.findViewById(R.id.player_name).setOnClickListener(view -> showDialog(LcPlayerDialogFragment.DIALOG_SET_NAME, -1));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,3,1,0,1,0.61,5,4
6117_76,76,76,setMode(statType);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,3,1,0,1,0.52,7,5
6117_78,78,82,"if (displayMode == LifeCounterFragment.DISPLAY_COMMANDER) {
return mCommanderRowView;
} else {
return mView;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,5,3,1,0,1,0.51,9,6
6117_79,79,79,return mCommanderRowView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.4,10,6
6117_80,80,80,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.29,11,7
6117_81,81,81,return mView;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.35,12,8
6118_1,1,1,public void resetStats() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.37,25,16
6118_2,2,2,mLifeHistory.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,1,0.67,24,15
6118_3,3,3,mPoisonHistory.clear();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,0,0.49,23,14
6118_4,4,4,mLife = mDefaultLifeTotal;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.81,22,13
6118_5,5,5,mPoison = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.51,21,12
6118_6,6,6,mCommanderCasting = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.54,20,11
6118_7,7,7,mCommanderExperienceCounter = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.53,19,10
6118_9,9,11,"for (CommanderEntry entry : mCommanderDamage) {
entry.mLife = 0;
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,1,0.62,15,8
6118_10,10,10,entry.mLife = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.66,16,8
6118_13,13,15,"if (mHistoryLifeAdapter != null) {
mHistoryLifeAdapter.notifyDataSetChanged();
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,1,0,3,2,0,0,1,0.53,11,6
6118_14,14,14,mHistoryLifeAdapter.notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.52,12,6
6118_16,16,18,"if (mHistoryPoisonAdapter != null) {
mHistoryPoisonAdapter.notifyDataSetChanged();
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,3,2,0,0,0,0.36,8,4
6118_17,17,17,mHistoryPoisonAdapter.notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.36,9,4
6118_19,19,21,"if (mCommanderDamageAdapter != null) {
mCommanderDamageAdapter.notifyDataSetChanged();
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,1,3,2,0,0,0,0.51,5,2
6118_20,20,20,mCommanderDamageAdapter.notifyDataSetChanged();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.5,6,2
6118_23,23,25,"if (mLife == -1) {
mLife = LifeCounterFragment.DEFAULT_LIFE;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,1,0.66,1,0
6118_24,24,24,mLife = LifeCounterFragment.DEFAULT_LIFE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.66,2,0
6118_27,27,27,"changeValue(0, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.42,0,0
6118_28,28,30,"if (mCommanderCastingButton != null) {
mCommanderCastingButton.setText(formatInt(mCommanderCasting, false));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,2,0,0,0,0.48,1,0
6118_29,29,29,"mCommanderCastingButton.setText(formatInt(mCommanderCasting, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.48,2,1
6118_32,32,34,"if (mCommanderExperienceCountersButton != null) {
mCommanderExperienceCountersButton.setText(formatInt(mCommanderExperienceCounter, false));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,2,0,0,0,0.51,5,3
6118_33,33,33,"mCommanderExperienceCountersButton.setText(formatInt(mCommanderExperienceCounter, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.51,6,3
6119_1,1,1,"public void setSize(int mGridLayoutWidth, int mGridLayoutHeight, int numRows, int numCols, int displayMode, boolean isPortrait, boolean isSingle) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,4,0.65,33,25
6119_3,3,5,"if (null == mView) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,3,2,0,0,0.3,29,23
6119_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.14,30,23
6119_7,7,7,switch (displayMode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,3,2,0,0,0.32,27,22
6119_8,8,8,case LifeCounterFragment.DISPLAY_NORMAL: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.39,26,21
6119_9,9,9,ViewGroup.LayoutParams params = mView.getLayoutParams();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,2,0,0,0.38,25,20
6119_10,10,22,"if (null != params) {
if (isSingle) {
params.width = mGridLayoutWidth;
params.height = mGridLayoutHeight;
} else if (isPortrait) {
params.width = mGridLayoutWidth;
params.height = mGridLayoutHeight / 2;
} else {
params.width = mGridLayoutWidth / 2;
params.height = mGridLayoutHeight;
}
mView.setLayoutParams(params);
}",1,0,0,0,0,0,0,0,0,10,2,13,0,1,0,0,7,3,2,0,3,0.62,12,9
6119_11,11,20,"if (isSingle) {
params.width = mGridLayoutWidth;
params.height = mGridLayoutHeight;
} else if (isPortrait) {
params.width = mGridLayoutWidth;
params.height = mGridLayoutHeight / 2;
} else {
params.width = mGridLayoutWidth / 2;
params.height = mGridLayoutHeight;
}",1,0,0,0,0,0,0,0,0,8,1,10,0,1,0,0,7,3,2,0,2,0.58,14,10
6119_12,12,12,params.width = mGridLayoutWidth;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,2,0,1,0.58,22,17
6119_13,13,13,params.height = mGridLayoutHeight;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,2,0,1,0.58,21,16
6119_14,14,14,} else if (isPortrait) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.29,20,15
6119_15,15,15,params.width = mGridLayoutWidth;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,2,0,1,0.58,19,14
6119_16,16,16,params.height = mGridLayoutHeight / 2;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,2,0,1,0.57,18,13
6119_17,17,17,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.22,17,12
6119_18,18,18,params.width = mGridLayoutWidth / 2;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,2,0,1,0.57,16,11
6119_19,19,19,params.height = mGridLayoutHeight;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,2,0,1,0.58,15,10
6119_21,21,21,mView.setLayoutParams(params);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,2,0,1,0.49,13,9
6119_23,23,23,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,3,2,0,0,0.3,11,8
6119_25,25,25,case LifeCounterFragment.DISPLAY_COMPACT: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.39,9,7
6119_26,26,26,ViewGroup.LayoutParams params = mView.getLayoutParams();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,2,0,0,0.38,8,6
6119_27,27,31,"if (null != params) {
params.width = mGridLayoutWidth / numCols;
params.height = mGridLayoutHeight / numRows;
mView.setLayoutParams(params);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,7,3,2,0,4,0.68,3,2
6119_28,28,28,params.width = mGridLayoutWidth / numCols;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,2,0,1,0.56,6,4
6119_29,29,29,params.height = mGridLayoutHeight / numRows;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,2,0,2,0.65,5,3
6119_30,30,30,mView.setLayoutParams(params);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,2,0,1,0.49,4,2
6119_32,32,32,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,3,2,0,0,0.3,2,1
6119_34,34,34,case LifeCounterFragment.DISPLAY_COMMANDER: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.4,0,0
6119_35,35,47,"if (null != mCommanderRowView) {
ViewGroup.LayoutParams rowParams = mCommanderRowView.getLayoutParams();
if (null != rowParams) {
rowParams.height = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 48,
mFragment.requireActivity().getResources().getDisplayMetrics());
if (isPortrait) {
rowParams.width = mGridLayoutWidth / 2;
} else {
rowParams.width = mGridLayoutWidth / 4;
}
mCommanderRowView.setLayoutParams(rowParams);
}
}",1,0,0,0,0,0,0,0,0,8,3,13,0,0,0,1,7,3,2,0,4,0.67,0,0
6119_36,36,36,ViewGroup.LayoutParams rowParams = mCommanderRowView.getLayoutParams();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,2,0,1,0.49,1,0
6119_37,37,46,"if (null != rowParams) {
rowParams.height = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 48,
mFragment.requireActivity().getResources().getDisplayMetrics());
if (isPortrait) {
rowParams.width = mGridLayoutWidth / 2;
} else {
rowParams.width = mGridLayoutWidth / 4;
}
mCommanderRowView.setLayoutParams(rowParams);
}",1,0,0,0,0,0,0,0,0,6,2,10,0,1,0,0,7,3,2,0,4,0.68,2,1
6119_38,38,39,"rowParams.height = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 48,
mFragment.requireActivity().getResources().getDisplayMetrics());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,7,3,2,0,2,0.56,3,2
6119_40,40,44,"if (isPortrait) {
rowParams.width = mGridLayoutWidth / 2;
} else {
rowParams.width = mGridLayoutWidth / 4;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,7,3,2,0,2,0.64,5,4
6119_41,41,41,rowParams.width = mGridLayoutWidth / 2;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,2,0.66,6,4
6119_42,42,42,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.22,7,5
6119_43,43,43,rowParams.width = mGridLayoutWidth / 4;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,2,0.65,8,6
6119_45,45,45,mCommanderRowView.setLayoutParams(rowParams);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,2,0,2,0.61,10,8
6119_49,49,49,ViewGroup.LayoutParams viewParams = mView.getLayoutParams();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,3,2,0,0,0.38,14,9
6119_50,50,55,"if (null != viewParams) {
if (!isPortrait) {
viewParams.width = mGridLayoutWidth / 2;
}
mView.setLayoutParams(viewParams);
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,0,7,3,2,0,2,0.58,15,9
6119_51,51,53,"if (!isPortrait) {
viewParams.width = mGridLayoutWidth / 2;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,3,2,0,1,0.55,16,10
6119_52,52,52,viewParams.width = mGridLayoutWidth / 2;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,1,0.56,17,11
6119_54,54,54,mView.setLayoutParams(viewParams);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,2,0,1,0.49,19,13
6119_56,56,56,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,3,2,0,0,0.3,21,14
6120_1,1,1,"public void setSize(int mGridLayoutWidth, int mGridLayoutHeight, int numRows, int numCols, int displayMode, boolean isPortrait, boolean isSingle) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.56,47,34
6120_3,3,5,"if (null == mView) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,5,1,0,1,0.46,43,32
6120_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.15,44,32
6120_7,7,7,switch (displayMode) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,5,1,0,0,0.42,41,31
6120_8,8,8,case LifeCounterFragment.DISPLAY_NORMAL: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.44,40,30
6120_9,9,9,ViewGroup.LayoutParams params = mView.getLayoutParams();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,1,0,1,0.54,39,29
6120_10,10,22,"if (null != params) {
if (isSingle) {
params.width = mGridLayoutWidth;
params.height = mGridLayoutHeight;
} else if (isPortrait) {
params.width = mGridLayoutWidth;
params.height = mGridLayoutHeight / 2;
} else {
params.width = mGridLayoutWidth / 2;
params.height = mGridLayoutHeight;
}
mView.setLayoutParams(params);
}",1,0,0,0,0,0,0,0,0,10,2,13,0,1,0,0,6,5,1,0,2,0.61,26,18
6120_11,11,20,"if (isSingle) {
params.width = mGridLayoutWidth;
params.height = mGridLayoutHeight;
} else if (isPortrait) {
params.width = mGridLayoutWidth;
params.height = mGridLayoutHeight / 2;
} else {
params.width = mGridLayoutWidth / 2;
params.height = mGridLayoutHeight;
}",1,0,0,0,0,0,0,0,0,8,1,10,0,1,0,0,6,5,1,0,0,0.52,28,19
6120_12,12,12,params.width = mGridLayoutWidth;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,1,0,0,0.53,36,26
6120_13,13,13,params.height = mGridLayoutHeight;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,1,0,0,0.52,35,25
6120_14,14,14,} else if (isPortrait) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.35,34,24
6120_15,15,15,params.width = mGridLayoutWidth;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,1,0,0,0.53,33,23
6120_16,16,16,params.height = mGridLayoutHeight / 2;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,1,0,0,0.53,32,22
6120_17,17,17,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.27,31,21
6120_18,18,18,params.width = mGridLayoutWidth / 2;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,1,0,0,0.53,30,20
6120_19,19,19,params.height = mGridLayoutHeight;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,1,0,0,0.52,29,19
6120_21,21,21,mView.setLayoutParams(params);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,1,0,2,0.64,27,18
6120_23,23,23,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,5,1,0,0,0.32,25,17
6120_25,25,25,case LifeCounterFragment.DISPLAY_COMPACT: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.45,23,16
6120_26,26,26,ViewGroup.LayoutParams params = mView.getLayoutParams();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,1,0,1,0.54,22,15
6120_27,27,31,"if (null != params) {
params.width = mGridLayoutWidth / numCols;
params.height = mGridLayoutHeight / numRows;
mView.setLayoutParams(params);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,6,5,1,0,2,0.61,17,11
6120_28,28,28,params.width = mGridLayoutWidth / numCols;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,1,0,0,0.51,20,13
6120_29,29,29,params.height = mGridLayoutHeight / numRows;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,1,0,0,0.5,19,12
6120_30,30,30,mView.setLayoutParams(params);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,1,0,2,0.64,18,11
6120_32,32,32,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,5,1,0,0,0.32,16,10
6120_34,34,34,case LifeCounterFragment.DISPLAY_COMMANDER: {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.43,14,9
6120_35,35,47,"if (null != mCommanderRowView) {
ViewGroup.LayoutParams rowParams = mCommanderRowView.getLayoutParams();
if (null != rowParams) {
rowParams.height = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 48,
mFragment.requireActivity().getResources().getDisplayMetrics());
if (isPortrait) {
rowParams.width = mGridLayoutWidth / 2;
} else {
rowParams.width = mGridLayoutWidth / 4;
}
mCommanderRowView.setLayoutParams(rowParams);
}
}",1,0,0,0,0,0,0,0,0,8,3,13,0,0,0,1,6,5,1,0,2,0.58,1,0
6120_36,36,36,ViewGroup.LayoutParams rowParams = mCommanderRowView.getLayoutParams();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,1,0,1,0.5,12,7
6120_37,37,46,"if (null != rowParams) {
rowParams.height = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 48,
mFragment.requireActivity().getResources().getDisplayMetrics());
if (isPortrait) {
rowParams.width = mGridLayoutWidth / 2;
} else {
rowParams.width = mGridLayoutWidth / 4;
}
mCommanderRowView.setLayoutParams(rowParams);
}",1,0,0,0,0,0,0,0,0,6,2,10,0,1,0,0,6,5,1,0,2,0.57,2,0
6120_38,38,39,"rowParams.height = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 48,
mFragment.requireActivity().getResources().getDisplayMetrics());",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,6,5,1,0,0,0.45,9,5
6120_40,40,44,"if (isPortrait) {
rowParams.width = mGridLayoutWidth / 2;
} else {
rowParams.width = mGridLayoutWidth / 4;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,6,5,1,0,0,0.51,4,1
6120_41,41,41,rowParams.width = mGridLayoutWidth / 2;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.52,7,3
6120_42,42,42,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.27,6,2
6120_43,43,43,rowParams.width = mGridLayoutWidth / 4;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.51,5,1
6120_45,45,45,mCommanderRowView.setLayoutParams(rowParams);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,1,0,2,0.58,3,0
6120_49,49,49,ViewGroup.LayoutParams viewParams = mView.getLayoutParams();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,5,1,0,1,0.56,0,0
6120_50,50,55,"if (null != viewParams) {
if (!isPortrait) {
viewParams.width = mGridLayoutWidth / 2;
}
mView.setLayoutParams(viewParams);
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,0,6,5,1,0,2,0.66,1,0
6120_51,51,53,"if (!isPortrait) {
viewParams.width = mGridLayoutWidth / 2;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,5,1,0,1,0.59,2,1
6120_52,52,52,viewParams.width = mGridLayoutWidth / 2;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.6,3,2
6120_54,54,54,mView.setLayoutParams(viewParams);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,1,0,2,0.67,5,4
6120_56,56,56,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,5,1,0,0,0.32,7,5
6121_1,1,1,throws IllegalStateException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,3,3,0,0,0,0.3,4,2
6121_3,3,3,((FamiliarActivity) mFragment.getActivity()),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.38,2,1
6121_4,4,4,.removeDialogFragment(mFragment.requireActivity().getSupportFragmentManager());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.53,1,0
6121_6,6,6,LcPlayerDialogFragment newFragment = new LcPlayerDialogFragment();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.64,0,0
6121_7,7,7,Bundle arguments = new Bundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.35,1,0
6121_8,8,8,"arguments.putInt(FamiliarDialogFragment.ID_KEY, id);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,1,0.49,2,1
6121_9,9,9,"arguments.putInt(LcPlayerDialogFragment.POSITION_KEY, position);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,1,0.5,3,2
6121_10,10,10,newFragment.setArguments(arguments);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.44,4,3
6121_11,11,11,newFragment.setLcPlayer(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.47,5,4
6121_12,12,12,"newFragment.show(mFragment.getActivity().getSupportFragmentManager(), FamiliarActivity.DIALOG_TAG);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,2,0.66,6,5
6122_1,1,1,public static synchronized long getRoundTimerEnd(@Nullable Context context) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.47,4,3
6122_2,2,4,"if (null == context) {
return -1;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,2,1,0,1,0.42,1,1
6122_3,3,3,return -1;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.47,2,1
6122_5,5,5,"long endTime = PreferenceManager.getDefaultSharedPreferences(context).getLong(context.getString(R.string.key_currentRoundTimer), -1);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.53,0,0
6122_6,6,9,"if (endTime < System.currentTimeMillis()) {
endTime = -1L;
setRoundTimerEnd(context, endTime);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,4,2,1,0,2,0.59,0,0
6122_7,7,7,endTime = -1L;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.37,1,0
6122_8,8,8,"setRoundTimerEnd(context, endTime);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.61,2,1
6122_10,10,10,return endTime;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.29,4,3
6123_1,1,1,public static synchronized int getImageCacheSize(@Nullable Context context) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.49,6,4
6123_2,2,2,final int MIN_CACHE_MB = 50;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,1,0,3,0.66,5,3
6123_3,3,5,"if (null == context) {
return MIN_CACHE_MB;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,2,1,0,2,0.57,2,1
6123_4,4,4,return MIN_CACHE_MB;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,2,1,0,2,0.64,3,1
6123_6,6,6,"int cacheSize = PreferenceManager.getDefaultSharedPreferences(context).getInt(context.getString(R.string.key_imageCacheSize), MIN_CACHE_MB);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,6,2,1,0,2,0.54,1,0
6123_8,8,11,"if (cacheSize < MIN_CACHE_MB) {
setImageCacheSize(context, MIN_CACHE_MB);
return MIN_CACHE_MB;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,1,0,6,2,1,0,2,0.65,0,0
6123_9,9,9,"setImageCacheSize(context, MIN_CACHE_MB);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,1,0,2,0.6,1,0
6123_10,10,10,return MIN_CACHE_MB;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,2,1,0,2,0.64,2,1
6123_12,12,12,return cacheSize;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,2,1,0,1,0.56,4,3
6124_1,1,2,"@Override
public void onReceive(final Context context, Intent intent) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,1,0,0,0.35,5,4
6124_3,3,3,assert intent.getExtras() != null;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,1,1,0,0,0.25,4,3
6124_4,4,4,int type = intent.getExtras().getInt(RoundTimerFragment.ROUND_TIMER_INTENT);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,3,1,1,0,0,0.33,3,2
6124_6,6,6,switch (type) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,1,0,0,0.2,1,1
6124_7,7,8,"case RoundTimerFragment.TIMER_RING_ALARM:
PlayNotificationSound(context, PreferenceAdapter.getTimerSound(context));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,3,1,1,0,-1,0.71,0,0
6124_10,10,10,NotificationHelper.createChannels(context);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,1,0,1,0.54,2,1
6124_11,11,11,"NotificationCompat.Builder builder = new NotificationCompat.Builder(context, NotificationHelper.NOTIFICATION_CHANNEL_ROUND_TIMER);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.58,3,1
6124_12,12,12,int pendingIntentFlags = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,0,0.22,4,2
6124_13,13,15,"if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.S) {
pendingIntentFlags |= PendingIntent.FLAG_MUTABLE;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,1,1,0,0,0.22,5,3
6124_14,14,14,pendingIntentFlags |= PendingIntent.FLAG_MUTABLE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.23,6,4
6124_16,16,23,"@SuppressLint(""UnspecifiedImmutableFlag"") Notification notification = builder
.setSmallIcon(R.drawable.notification_icon)
.setWhen(System.currentTimeMillis())
.setContentTitle(context.getString(R.string.main_timer))
.setContentText(context.getString(R.string.timer_ended))
.setContentIntent(PendingIntent.getActivity(context, 7, (new Intent(context,
FamiliarActivity.class).setAction(FamiliarActivity.ACTION_ROUND_TIMER)), pendingIntentFlags))
.build();",0,0,0,0,0,1,0,0,0,0,0,8,0,1,0,0,3,1,1,0,1,0.5,8,6
6124_24,24,24,notification.flags |= Notification.FLAG_AUTO_CANCEL;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,1,1,0,1,0.62,16,7
6124_26,26,26,NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,1,1,0,1,0.6,18,8
6124_27,27,27,notificationManager.cancel(RoundTimerFragment.TIMER_NOTIFICATION_ID);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,1,0.58,19,8
6124_28,28,28,"notificationManager.notify(RoundTimerFragment.TIMER_NOTIFICATION_ID, notification);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,1,0.61,20,9
6124_29,29,29,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,1,1,0,0,0.24,21,10
6124_30,30,31,"case RoundTimerFragment.TIMER_2_MIN_WARNING:
VerifyPlayNotificationSoundOrTTS(context, PreferenceAdapter.getTwoMinutePref(context), PreferenceAdapter.getUseSoundInsteadOfTTSPref(context)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,1,0,3,0.67,22,11
6124_32,32,32,", PreferenceAdapter.getTimerSound(context), R.string.timer_two_minutes_left);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,1,1,0,1,0.38,24,13
6124_34,34,34,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,3,1,1,0,0,0.24,26,14
6124_35,35,36,"case RoundTimerFragment.TIMER_5_MIN_WARNING:
VerifyPlayNotificationSoundOrTTS(context, PreferenceAdapter.getFiveMinutePref(context), PreferenceAdapter.getUseSoundInsteadOfTTSPref(context)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,1,0,3,0.68,27,14
6124_37,37,37,", PreferenceAdapter.getTimerSound(context), R.string.timer_five_minutes_left);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.39,29,16
6124_38,38,38,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,1,1,0,0,0.24,30,16
6124_39,39,40,"case RoundTimerFragment.TIMER_10_MIN_WARNING:
VerifyPlayNotificationSoundOrTTS(context, PreferenceAdapter.getTenMinutePref(context), PreferenceAdapter.getUseSoundInsteadOfTTSPref(context)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,1,0,3,0.68,31,17
6124_41,41,41,", PreferenceAdapter.getTimerSound(context), R.string.timer_ten_minutes_left);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.39,33,19
6124_42,42,42,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,1,1,0,0,0.24,34,19
6124_43,43,44,"case RoundTimerFragment.TIMER_15_MIN_WARNING:
VerifyPlayNotificationSoundOrTTS(context, PreferenceAdapter.getFifteenMinutePref(context), PreferenceAdapter.getUseSoundInsteadOfTTSPref(context)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,1,0,3,0.67,35,20
6124_45,45,45,", PreferenceAdapter.getTimerSound(context), R.string.timer_fifteen_minutes_left);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.39,37,22
6124_46,46,46,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,1,1,0,0,0.24,38,22
6124_47,47,48,"case RoundTimerFragment.TIMER_EASTER_EGG:
VerifyPlayNotificationSoundOrTTS(context, PreferenceAdapter.getFifteenMinutePref(context), PreferenceAdapter.getUseSoundInsteadOfTTSPref(context)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,1,0,3,0.68,39,23
6124_49,49,49,", PreferenceAdapter.getTimerSound(context), R.string.timer_easter_egg);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.39,41,25
6124_50,50,50,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,1,1,0,0,0.24,42,25
6125_1,1,2,"@Override
public void onReceive(final Context context, Intent intent) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,0,0,0,0.37,7,4
6125_3,3,3,assert intent.getExtras() != null;,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,3,0,0,0,0.3,6,3
6125_4,4,4,int type = intent.getExtras().getInt(RoundTimerFragment.ROUND_TIMER_INTENT);,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,5,3,0,0,1,0.49,5,2
6125_6,6,6,switch (type) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,0,0,0,0.28,3,1
6125_7,7,8,"case RoundTimerFragment.TIMER_RING_ALARM:
PlayNotificationSound(context, PreferenceAdapter.getTimerSound(context));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,5,3,0,0,2,0.57,1,0
6125_10,10,10,NotificationHelper.createChannels(context);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,0,0,1,0.44,0,0
6125_11,11,11,"NotificationCompat.Builder builder = new NotificationCompat.Builder(context, NotificationHelper.NOTIFICATION_CHANNEL_ROUND_TIMER);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,0,0,2,0.61,1,0
6125_12,12,12,int pendingIntentFlags = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.37,2,1
6125_13,13,15,"if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.S) {
pendingIntentFlags |= PendingIntent.FLAG_MUTABLE;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,3,0,0,0,0.37,3,2
6125_14,14,14,pendingIntentFlags |= PendingIntent.FLAG_MUTABLE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.4,4,3
6125_16,16,23,"@SuppressLint(""UnspecifiedImmutableFlag"") Notification notification = builder
.setSmallIcon(R.drawable.notification_icon)
.setWhen(System.currentTimeMillis())
.setContentTitle(context.getString(R.string.main_timer))
.setContentText(context.getString(R.string.timer_ended))
.setContentIntent(PendingIntent.getActivity(context, 7, (new Intent(context,
FamiliarActivity.class).setAction(FamiliarActivity.ACTION_ROUND_TIMER)), pendingIntentFlags))
.build();",0,0,0,0,0,1,0,0,0,0,0,8,0,1,0,0,5,3,0,0,3,0.61,6,5
6125_24,24,24,notification.flags |= Notification.FLAG_AUTO_CANCEL;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,0,0,1,0.56,14,6
6125_26,26,26,NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,0,0,1,0.5,16,7
6125_27,27,27,notificationManager.cancel(RoundTimerFragment.TIMER_NOTIFICATION_ID);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.64,17,7
6125_28,28,28,"notificationManager.notify(RoundTimerFragment.TIMER_NOTIFICATION_ID, notification);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.66,18,8
6125_29,29,29,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,3,0,0,0,0.34,19,9
6125_30,30,31,"case RoundTimerFragment.TIMER_2_MIN_WARNING:
VerifyPlayNotificationSoundOrTTS(context, PreferenceAdapter.getTwoMinutePref(context), PreferenceAdapter.getUseSoundInsteadOfTTSPref(context)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,0,0,2,0.54,20,10
6125_32,32,32,", PreferenceAdapter.getTimerSound(context), R.string.timer_two_minutes_left);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,0,0,0,0.46,22,12
6125_34,34,34,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,5,3,0,0,0,0.34,24,13
6125_35,35,36,"case RoundTimerFragment.TIMER_5_MIN_WARNING:
VerifyPlayNotificationSoundOrTTS(context, PreferenceAdapter.getFiveMinutePref(context), PreferenceAdapter.getUseSoundInsteadOfTTSPref(context)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,0,0,2,0.55,25,13
6125_37,37,37,", PreferenceAdapter.getTimerSound(context), R.string.timer_five_minutes_left);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.47,27,15
6125_38,38,38,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,3,0,0,0,0.34,28,15
6125_39,39,40,"case RoundTimerFragment.TIMER_10_MIN_WARNING:
VerifyPlayNotificationSoundOrTTS(context, PreferenceAdapter.getTenMinutePref(context), PreferenceAdapter.getUseSoundInsteadOfTTSPref(context)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,0,0,2,0.54,29,16
6125_41,41,41,", PreferenceAdapter.getTimerSound(context), R.string.timer_ten_minutes_left);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.46,31,18
6125_42,42,42,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,3,0,0,0,0.34,32,18
6125_43,43,44,"case RoundTimerFragment.TIMER_15_MIN_WARNING:
VerifyPlayNotificationSoundOrTTS(context, PreferenceAdapter.getFifteenMinutePref(context), PreferenceAdapter.getUseSoundInsteadOfTTSPref(context)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,0,0,2,0.55,33,19
6125_45,45,45,", PreferenceAdapter.getTimerSound(context), R.string.timer_fifteen_minutes_left);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.46,35,21
6125_46,46,46,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,3,0,0,0,0.34,36,21
6125_47,47,48,"case RoundTimerFragment.TIMER_EASTER_EGG:
VerifyPlayNotificationSoundOrTTS(context, PreferenceAdapter.getFifteenMinutePref(context), PreferenceAdapter.getUseSoundInsteadOfTTSPref(context)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,0,0,2,0.54,37,22
6125_49,49,49,", PreferenceAdapter.getTimerSound(context), R.string.timer_easter_egg);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.42,39,24
6125_50,50,50,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,3,0,0,0,0.34,40,24
6126_1,1,2,"        @Override
public void onInit(int status) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,6,0,0,0,0.4,5,5
6126_3,3,23,"if (status == TextToSpeech.SUCCESS) {
int result = mTts.setLanguage(getResources().getConfiguration().locale);
if (result == TextToSpeech.LANG_MISSING_DATA || result == TextToSpeech.LANG_NOT_SUPPORTED) {
PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));
} else {
int res = mAudioManager.requestAudioFocus(this, AudioManager.STREAM_ALARM,
AudioManager.AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK);

if (res == AudioManager.AUDIOFOCUS_REQUEST_GRANTED) {
HashMap<String, String> ttsParams = new HashMap<>();
ttsParams.put(TextToSpeech.Engine.KEY_PARAM_UTTERANCE_ID, WARNING_SPEECH);
ttsParams.put(TextToSpeech.Engine.KEY_PARAM_STREAM, String.valueOf(AudioManager.STREAM_ALARM));
mTts.speak(mTextToSpeak, TextToSpeech.QUEUE_FLUSH, ttsParams);
return;
} else {
PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));
}
}
} else {
PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));
}",1,0,0,0,0,0,0,0,0,15,3,21,0,0,0,0,6,6,0,0,5,0.75,0,0
6126_4,4,4,int result = mTts.setLanguage(getResources().getConfiguration().locale);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,0,0.39,3,3
6126_5,5,20,"if (result == TextToSpeech.LANG_MISSING_DATA || result == TextToSpeech.LANG_NOT_SUPPORTED) {
PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));
} else {
int res = mAudioManager.requestAudioFocus(this, AudioManager.STREAM_ALARM,
AudioManager.AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK);

if (res == AudioManager.AUDIOFOCUS_REQUEST_GRANTED) {
HashMap<String, String> ttsParams = new HashMap<>();
ttsParams.put(TextToSpeech.Engine.KEY_PARAM_UTTERANCE_ID, WARNING_SPEECH);
ttsParams.put(TextToSpeech.Engine.KEY_PARAM_STREAM, String.valueOf(AudioManager.STREAM_ALARM));
mTts.speak(mTextToSpeak, TextToSpeech.QUEUE_FLUSH, ttsParams);
return;
} else {
PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));
}
}",1,0,0,0,0,0,0,0,0,11,2,16,0,1,0,0,6,6,0,0,5,0.76,0,0
6126_6,6,6,"PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.42,1,1
6126_7,7,7,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.28,0,0
6126_8,8,9,"int res = mAudioManager.requestAudioFocus(this, AudioManager.STREAM_ALARM,
AudioManager.AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,6,6,0,0,5,0.85,0,0
6126_11,11,19,"if (res == AudioManager.AUDIOFOCUS_REQUEST_GRANTED) {
HashMap<String, String> ttsParams = new HashMap<>();
ttsParams.put(TextToSpeech.Engine.KEY_PARAM_UTTERANCE_ID, WARNING_SPEECH);
ttsParams.put(TextToSpeech.Engine.KEY_PARAM_STREAM, String.valueOf(AudioManager.STREAM_ALARM));
mTts.speak(mTextToSpeak, TextToSpeech.QUEUE_FLUSH, ttsParams);
return;
} else {
PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));
}",1,0,0,0,0,0,0,0,0,7,1,9,0,0,1,0,6,6,0,0,4,0.7,3,1
6126_12,12,12,"HashMap<String, String> ttsParams = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,0,0.34,4,1
6126_13,13,13,"ttsParams.put(TextToSpeech.Engine.KEY_PARAM_UTTERANCE_ID, WARNING_SPEECH);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,6,0,0,0,0.51,5,2
6126_14,14,14,"ttsParams.put(TextToSpeech.Engine.KEY_PARAM_STREAM, String.valueOf(AudioManager.STREAM_ALARM));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,6,0,0,3,0.69,6,3
6126_15,15,15,"mTts.speak(mTextToSpeak, TextToSpeech.QUEUE_FLUSH, ttsParams);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,6,0,0,0,0.5,7,4
6126_16,16,16,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.26,8,5
6126_17,17,17,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.28,9,6
6126_18,18,18,"PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.42,10,7
6126_21,21,21,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.28,13,9
6126_22,22,22,"PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.42,14,9
6126_24,24,24,stopSelf();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.37,16,11
6127_1,1,2,"        @Override
public void onInit(int status) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.36,9,7
6127_3,3,23,"if (status == TextToSpeech.SUCCESS) {
int result = mTts.setLanguage(getResources().getConfiguration().locale);
if (result == TextToSpeech.LANG_MISSING_DATA || result == TextToSpeech.LANG_NOT_SUPPORTED) {
PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));
} else {
int res = mAudioManager.requestAudioFocus(this, AudioManager.STREAM_ALARM,
AudioManager.AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK);

if (res == AudioManager.AUDIOFOCUS_REQUEST_GRANTED) {
HashMap<String, String> ttsParams = new HashMap<>();
ttsParams.put(TextToSpeech.Engine.KEY_PARAM_UTTERANCE_ID, WARNING_SPEECH);
ttsParams.put(TextToSpeech.Engine.KEY_PARAM_STREAM, String.valueOf(AudioManager.STREAM_ALARM));
mTts.speak(mTextToSpeak, TextToSpeech.QUEUE_FLUSH, ttsParams);
return;
} else {
PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));
}
}
} else {
PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));
}",1,0,0,0,0,0,0,0,0,15,3,21,0,0,0,0,3,2,0,0,3,0.68,0,0
6127_4,4,4,int result = mTts.setLanguage(getResources().getConfiguration().locale);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.37,7,5
6127_5,5,20,"if (result == TextToSpeech.LANG_MISSING_DATA || result == TextToSpeech.LANG_NOT_SUPPORTED) {
PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));
} else {
int res = mAudioManager.requestAudioFocus(this, AudioManager.STREAM_ALARM,
AudioManager.AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK);

if (res == AudioManager.AUDIOFOCUS_REQUEST_GRANTED) {
HashMap<String, String> ttsParams = new HashMap<>();
ttsParams.put(TextToSpeech.Engine.KEY_PARAM_UTTERANCE_ID, WARNING_SPEECH);
ttsParams.put(TextToSpeech.Engine.KEY_PARAM_STREAM, String.valueOf(AudioManager.STREAM_ALARM));
mTts.speak(mTextToSpeak, TextToSpeech.QUEUE_FLUSH, ttsParams);
return;
} else {
PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));
}
}",1,0,0,0,0,0,0,0,0,11,2,16,0,1,0,0,3,2,0,0,3,0.68,0,0
6127_6,6,6,"PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.4,5,3
6127_7,7,7,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.08,4,2
6127_8,8,9,"int res = mAudioManager.requestAudioFocus(this, AudioManager.STREAM_ALARM,
AudioManager.AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,3,2,0,0,2,0.74,2,1
6127_11,11,19,"if (res == AudioManager.AUDIOFOCUS_REQUEST_GRANTED) {
HashMap<String, String> ttsParams = new HashMap<>();
ttsParams.put(TextToSpeech.Engine.KEY_PARAM_UTTERANCE_ID, WARNING_SPEECH);
ttsParams.put(TextToSpeech.Engine.KEY_PARAM_STREAM, String.valueOf(AudioManager.STREAM_ALARM));
mTts.speak(mTextToSpeak, TextToSpeech.QUEUE_FLUSH, ttsParams);
return;
} else {
PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));
}",1,0,0,0,0,0,0,0,0,7,1,9,0,0,1,0,3,2,0,0,3,0.68,0,0
6127_12,12,12,"HashMap<String, String> ttsParams = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.29,0,0
6127_13,13,13,"ttsParams.put(TextToSpeech.Engine.KEY_PARAM_UTTERANCE_ID, WARNING_SPEECH);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.4,1,0
6127_14,14,14,"ttsParams.put(TextToSpeech.Engine.KEY_PARAM_STREAM, String.valueOf(AudioManager.STREAM_ALARM));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,2,0.73,2,1
6127_15,15,15,"mTts.speak(mTextToSpeak, TextToSpeech.QUEUE_FLUSH, ttsParams);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.37,3,2
6127_16,16,16,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.09,4,3
6127_17,17,17,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.08,5,4
6127_18,18,18,"PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.4,6,5
6127_21,21,21,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.08,9,7
6127_22,22,22,"PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.4,10,7
6127_24,24,24,stopSelf();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.33,12,9
6128_1,1,2,"        @Override
public void onInit(int status) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,1,0,0,0.41,21,16
6128_3,3,23,"if (status == TextToSpeech.SUCCESS) {
int result = mTts.setLanguage(getResources().getConfiguration().locale);
if (result == TextToSpeech.LANG_MISSING_DATA || result == TextToSpeech.LANG_NOT_SUPPORTED) {
PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));
} else {
int res = mAudioManager.requestAudioFocus(this, AudioManager.STREAM_ALARM,
AudioManager.AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK);

if (res == AudioManager.AUDIOFOCUS_REQUEST_GRANTED) {
HashMap<String, String> ttsParams = new HashMap<>();
ttsParams.put(TextToSpeech.Engine.KEY_PARAM_UTTERANCE_ID, WARNING_SPEECH);
ttsParams.put(TextToSpeech.Engine.KEY_PARAM_STREAM, String.valueOf(AudioManager.STREAM_ALARM));
mTts.speak(mTextToSpeak, TextToSpeech.QUEUE_FLUSH, ttsParams);
return;
} else {
PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));
}
}
} else {
PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));
}",1,0,0,0,0,0,0,0,0,15,3,21,0,0,0,0,4,3,1,0,1,0.54,0,0
6128_4,4,4,int result = mTts.setLanguage(getResources().getConfiguration().locale);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.33,19,14
6128_5,5,20,"if (result == TextToSpeech.LANG_MISSING_DATA || result == TextToSpeech.LANG_NOT_SUPPORTED) {
PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));
} else {
int res = mAudioManager.requestAudioFocus(this, AudioManager.STREAM_ALARM,
AudioManager.AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK);

if (res == AudioManager.AUDIOFOCUS_REQUEST_GRANTED) {
HashMap<String, String> ttsParams = new HashMap<>();
ttsParams.put(TextToSpeech.Engine.KEY_PARAM_UTTERANCE_ID, WARNING_SPEECH);
ttsParams.put(TextToSpeech.Engine.KEY_PARAM_STREAM, String.valueOf(AudioManager.STREAM_ALARM));
mTts.speak(mTextToSpeak, TextToSpeech.QUEUE_FLUSH, ttsParams);
return;
} else {
PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));
}
}",1,0,0,0,0,0,0,0,0,11,2,16,0,1,0,0,4,3,1,0,1,0.54,3,2
6128_6,6,6,"PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.53,17,12
6128_7,7,7,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.2,16,11
6128_8,8,9,"int res = mAudioManager.requestAudioFocus(this, AudioManager.STREAM_ALARM,
AudioManager.AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,4,3,1,0,0,0.47,14,10
6128_11,11,19,"if (res == AudioManager.AUDIOFOCUS_REQUEST_GRANTED) {
HashMap<String, String> ttsParams = new HashMap<>();
ttsParams.put(TextToSpeech.Engine.KEY_PARAM_UTTERANCE_ID, WARNING_SPEECH);
ttsParams.put(TextToSpeech.Engine.KEY_PARAM_STREAM, String.valueOf(AudioManager.STREAM_ALARM));
mTts.speak(mTextToSpeak, TextToSpeech.QUEUE_FLUSH, ttsParams);
return;
} else {
PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));
}",1,0,0,0,0,0,0,0,0,7,1,9,0,0,1,0,4,3,1,0,1,0.53,4,2
6128_12,12,12,"HashMap<String, String> ttsParams = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.28,11,8
6128_13,13,13,"ttsParams.put(TextToSpeech.Engine.KEY_PARAM_UTTERANCE_ID, WARNING_SPEECH);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,1,0,0,0.44,10,7
6128_14,14,14,"ttsParams.put(TextToSpeech.Engine.KEY_PARAM_STREAM, String.valueOf(AudioManager.STREAM_ALARM));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,1,0,0,0.41,9,6
6128_15,15,15,"mTts.speak(mTextToSpeak, TextToSpeech.QUEUE_FLUSH, ttsParams);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.42,8,5
6128_16,16,16,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.28,7,4
6128_17,17,17,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.2,6,3
6128_18,18,18,"PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.53,5,2
6128_21,21,21,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.2,2,1
6128_22,22,22,"PlayNotificationSound(getApplicationContext(), PreferenceAdapter.getTimerSound(getApplicationContext()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.53,1,0
6128_24,24,24,stopSelf();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.65,0,0
6129_1,1,1,public static void exportData(Activity activity) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.29,1,0
6129_3,3,6,"if (!Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {
SnackbarWrapper.makeAndShowText(activity, R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_LONG);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,5,2,1,0,3,0.68,0,0
6129_4,4,4,"SnackbarWrapper.makeAndShowText(activity, R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,3,0.65,1,0
6129_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.18,2,1
6129_8,8,8,assert activity.getFilesDir() != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,2,1,0,0,0.42,5,3
6129_10,10,10,String sharedPrefsDir = activity.getFilesDir().getPath();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,0,0.41,7,4
6129_11,11,11,"sharedPrefsDir = sharedPrefsDir.substring(0, sharedPrefsDir.lastIndexOf(""/"")) + ""/shared_prefs/"";",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,2,1,0,0,0.37,8,4
6129_13,13,13,"File zipOut = new File(activity.getApplicationContext().getExternalFilesDir(null), BACKUP_FILE_NAME);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,1,0.51,10,6
6129_14,14,18,"if (zipOut.exists()) {
if (!zipOut.delete()) {
return;
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,1,0,1,5,2,1,0,1,0.6,11,6
6129_15,15,17,"if (!zipOut.delete()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,2,1,0,0,0.46,12,7
6129_16,16,16,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.18,13,8
6129_20,20,21,"ArrayList<File> files = findAllFiles(activity.getFilesDir(),
new File(sharedPrefsDir));",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,5,2,1,0,0,0.44,17,10
6129_23,23,35,"try {
zipIt(zipOut, files, activity);
SnackbarWrapper.makeAndShowText(activity, activity.getString(R.string.main_export_success) + "" "" + zipOut.getAbsolutePath(),
SnackbarWrapper.LENGTH_XLONG);
} catch (ZipException e) {
if (Objects.requireNonNull(e.getMessage()).equals(""No entries"")) {
SnackbarWrapper.makeAndShowText(activity, R.string.main_export_no_data, SnackbarWrapper.LENGTH_SHORT);
} else {
SnackbarWrapper.makeAndShowText(activity, R.string.main_export_fail, SnackbarWrapper.LENGTH_SHORT);
}
} catch (IOException e) {
SnackbarWrapper.makeAndShowText(activity, R.string.main_export_fail, SnackbarWrapper.LENGTH_SHORT);
}",0,0,0,0,1,0,0,0,0,9,2,13,0,0,1,0,5,2,1,0,1,0.53,20,11
6129_24,24,24,"zipIt(zipOut, files, activity);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.51,21,11
6129_25,25,26,"SnackbarWrapper.makeAndShowText(activity, activity.getString(R.string.main_export_success) + "" "" + zipOut.getAbsolutePath(),
SnackbarWrapper.LENGTH_XLONG);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,5,2,1,0,1,0.54,22,12
6129_27,27,27,} catch (ZipException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.45,24,14
6129_28,28,32,"if (Objects.requireNonNull(e.getMessage()).equals(""No entries"")) {
SnackbarWrapper.makeAndShowText(activity, R.string.main_export_no_data, SnackbarWrapper.LENGTH_SHORT);
} else {
SnackbarWrapper.makeAndShowText(activity, R.string.main_export_fail, SnackbarWrapper.LENGTH_SHORT);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,5,2,1,0,1,0.51,25,14
6129_29,29,29,"SnackbarWrapper.makeAndShowText(activity, R.string.main_export_no_data, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.52,26,15
6129_30,30,30,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.15,27,16
6129_31,31,31,"SnackbarWrapper.makeAndShowText(activity, R.string.main_export_fail, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.52,28,17
6129_33,33,33,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.33,30,19
6129_34,34,34,"SnackbarWrapper.makeAndShowText(activity, R.string.main_export_fail, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.52,31,19
6130_1,1,1,    public static void importData(Activity activity) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.29,1,0
6130_3,3,6,"if (!Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {
SnackbarWrapper.makeAndShowText(activity, R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_LONG);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,5,2,1,0,3,0.68,0,0
6130_4,4,4,"SnackbarWrapper.makeAndShowText(activity, R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,3,0.65,1,0
6130_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.18,2,1
6130_8,8,17,"try (ZipFile zipFile = new ZipFile(new File(activity.getApplicationContext().getExternalFilesDir(null), BACKUP_FILE_NAME))) {
unZipIt(zipFile, activity);
SnackbarWrapper.makeAndShowText(activity, R.string.main_import_success, SnackbarWrapper.LENGTH_SHORT);
} catch (IOException e) {
SnackbarWrapper.makeAndShowText(activity,
String.format(activity.getString(R.string.main_import_fail),
BACKUP_FILE_NAME,
activity.getFilesDir().getAbsolutePath()),
SnackbarWrapper.LENGTH_XLONG);
}",0,0,0,0,1,0,0,0,0,4,1,10,0,0,1,0,5,2,1,0,2,0.6,5,3
6130_9,9,9,"unZipIt(zipFile, activity);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.48,6,3
6130_10,10,10,"SnackbarWrapper.makeAndShowText(activity, R.string.main_import_success, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.52,7,4
6130_11,11,11,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.33,8,5
6130_12,12,16,"SnackbarWrapper.makeAndShowText(activity,
String.format(activity.getString(R.string.main_import_fail),
BACKUP_FILE_NAME,
activity.getFilesDir().getAbsolutePath()),
SnackbarWrapper.LENGTH_XLONG);",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,5,2,1,0,1,0.53,9,6
6131_1,1,1,    public static void importData(Activity activity) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.42,6,3
6131_3,3,6,"if (!Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {
SnackbarWrapper.makeAndShowText(activity, R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_LONG);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,3,0,0,0,0.52,1,0
6131_4,4,4,"SnackbarWrapper.makeAndShowText(activity, R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.49,3,1
6131_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.23,2,0
6131_8,8,17,"try (ZipFile zipFile = new ZipFile(new File(activity.getApplicationContext().getExternalFilesDir(null), BACKUP_FILE_NAME))) {
unZipIt(zipFile, activity);
SnackbarWrapper.makeAndShowText(activity, R.string.main_import_success, SnackbarWrapper.LENGTH_SHORT);
} catch (IOException e) {
SnackbarWrapper.makeAndShowText(activity,
String.format(activity.getString(R.string.main_import_fail),
BACKUP_FILE_NAME,
activity.getFilesDir().getAbsolutePath()),
SnackbarWrapper.LENGTH_XLONG);
}",0,0,0,0,1,0,0,0,0,4,1,10,0,0,1,0,3,3,0,0,2,0.74,0,0
6131_9,9,9,"unZipIt(zipFile, activity);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.68,1,0
6131_10,10,10,"SnackbarWrapper.makeAndShowText(activity, R.string.main_import_success, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.47,2,1
6131_11,11,11,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.51,3,2
6131_12,12,16,"SnackbarWrapper.makeAndShowText(activity,
String.format(activity.getString(R.string.main_import_fail),
BACKUP_FILE_NAME,
activity.getFilesDir().getAbsolutePath()),
SnackbarWrapper.LENGTH_XLONG);",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,3,3,0,0,1,0.62,4,3
6132_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,1,0,0,0.35,0,0
6132_2,2,2,String applicationPath = context.getFilesDir().getPath();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,2,0.72,0,0
6132_3,3,3,"applicationPath = applicationPath.substring(0, applicationPath.lastIndexOf(""/"") + 1);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,1,0,0,0.3,1,0
6132_5,5,5,Enumeration<? extends ZipEntry> entries = zipFile.entries();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,1,0,1,0.55,3,2
6132_6,6,29,"while (entries.hasMoreElements()) {
ZipEntry entry = entries.nextElement();

if (entry.getName().contains(VERSION_PREFIX)) {
continue;
}

String[] path = entry.getName().split(""/"");
String pathCat = """";
if (path.length > 1) {
for (int i = 0; i < path.length - 1; i++) {
pathCat += path[i] + ""/"";
File tmp = new File(applicationPath, pathCat);
if (!tmp.exists() && !tmp.mkdir()) {
throw new IOException(""Couldn't mkdir"");
}
}
}

try (InputStream in = zipFile.getInputStream(entry);
OutputStream out = new BufferedOutputStream(new FileOutputStream(new File(applicationPath, entry.getName())))) {
IOUtils.copy(in, out);
}
}",0,1,0,0,0,0,0,0,0,14,4,24,0,1,0,0,3,2,1,0,2,0.62,4,2
6132_7,7,7,ZipEntry entry = entries.nextElement();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,1,0,0,0.42,5,3
6132_9,9,11,"if (entry.getName().contains(VERSION_PREFIX)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,1,0,1,0.5,7,5
6132_10,10,10,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.28,8,5
6132_13,13,13,"String[] path = entry.getName().split(""/"");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,1,0,1,0.54,11,7
6132_14,14,14,"String pathCat = """";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.36,12,7
6132_15,15,23,"if (path.length > 1) {
for (int i = 0; i < path.length - 1; i++) {
pathCat += path[i] + ""/"";
File tmp = new File(applicationPath, pathCat);
if (!tmp.exists() && !tmp.mkdir()) {
throw new IOException(""Couldn't mkdir"");
}
}
}",1,0,0,0,0,0,0,0,0,5,3,9,0,1,0,1,3,2,1,0,1,0.48,13,8
6132_16,16,22,"for (int i = 0; i < path.length - 1; i++) {
pathCat += path[i] + ""/"";
File tmp = new File(applicationPath, pathCat);
if (!tmp.exists() && !tmp.mkdir()) {
throw new IOException(""Couldn't mkdir"");
}
}",0,0,1,0,0,0,0,0,0,4,2,7,0,0,0,0,3,2,1,0,1,0.48,14,9
6132_17,17,17,"pathCat += path[i] + ""/"";",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.37,15,10
6132_18,18,18,"File tmp = new File(applicationPath, pathCat);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.54,16,11
6132_19,19,21,"if (!tmp.exists() && !tmp.mkdir()) {
throw new IOException(""Couldn't mkdir"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,2,1,0,0,0.39,17,12
6132_20,20,20,"throw new IOException(""Couldn't mkdir"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,1,0,0,0.39,18,13
6132_25,25,28,"try (InputStream in = zipFile.getInputStream(entry);
OutputStream out = new BufferedOutputStream(new FileOutputStream(new File(applicationPath, entry.getName())))) {
IOUtils.copy(in, out);
}",0,0,0,0,1,0,0,0,0,2,1,4,0,0,1,0,3,2,1,0,2,0.65,23,15
6132_26,26,26,"OutputStream out = new BufferedOutputStream(new FileOutputStream(new File(applicationPath, entry.getName())))) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,2,0.64,24,15
6132_27,27,27,"IOUtils.copy(in, out);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.34,25,16
6133_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,0,0,0,0.36,3,2
6133_2,2,2,String applicationPath = context.getFilesDir().getPath();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.57,2,1
6133_3,3,3,"applicationPath = applicationPath.substring(0, applicationPath.lastIndexOf(""/"") + 1);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.35,1,0
6133_5,5,5,Enumeration<? extends ZipEntry> entries = zipFile.entries();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,3,0.97,0,0
6133_6,6,29,"while (entries.hasMoreElements()) {
ZipEntry entry = entries.nextElement();

if (entry.getName().contains(VERSION_PREFIX)) {
continue;
}

String[] path = entry.getName().split(""/"");
String pathCat = """";
if (path.length > 1) {
for (int i = 0; i < path.length - 1; i++) {
pathCat += path[i] + ""/"";
File tmp = new File(applicationPath, pathCat);
if (!tmp.exists() && !tmp.mkdir()) {
throw new IOException(""Couldn't mkdir"");
}
}
}

try (InputStream in = zipFile.getInputStream(entry);
OutputStream out = new BufferedOutputStream(new FileOutputStream(new File(applicationPath, entry.getName())))) {
IOUtils.copy(in, out);
}
}",0,1,0,0,0,0,0,0,0,14,4,24,0,1,0,0,3,2,0,0,3,0.74,1,0
6133_7,7,7,ZipEntry entry = entries.nextElement();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,2,0.85,2,1
6133_9,9,11,"if (entry.getName().contains(VERSION_PREFIX)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,1,0.53,4,3
6133_10,10,10,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.34,5,3
6133_13,13,13,"String[] path = entry.getName().split(""/"");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,0,0,1,0.55,8,5
6133_14,14,14,"String pathCat = """";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.34,9,5
6133_15,15,23,"if (path.length > 1) {
for (int i = 0; i < path.length - 1; i++) {
pathCat += path[i] + ""/"";
File tmp = new File(applicationPath, pathCat);
if (!tmp.exists() && !tmp.mkdir()) {
throw new IOException(""Couldn't mkdir"");
}
}
}",1,0,0,0,0,0,0,0,0,5,3,9,0,1,0,1,3,2,0,0,1,0.54,10,6
6133_16,16,22,"for (int i = 0; i < path.length - 1; i++) {
pathCat += path[i] + ""/"";
File tmp = new File(applicationPath, pathCat);
if (!tmp.exists() && !tmp.mkdir()) {
throw new IOException(""Couldn't mkdir"");
}
}",0,0,1,0,0,0,0,0,0,4,2,7,0,0,0,0,3,2,0,0,1,0.55,11,7
6133_17,17,17,"pathCat += path[i] + ""/"";",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.38,12,8
6133_18,18,18,"File tmp = new File(applicationPath, pathCat);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.59,13,9
6133_19,19,21,"if (!tmp.exists() && !tmp.mkdir()) {
throw new IOException(""Couldn't mkdir"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,2,0,0,0,0.41,14,10
6133_20,20,20,"throw new IOException(""Couldn't mkdir"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,0,0,0,0.39,15,11
6133_25,25,28,"try (InputStream in = zipFile.getInputStream(entry);
OutputStream out = new BufferedOutputStream(new FileOutputStream(new File(applicationPath, entry.getName())))) {
IOUtils.copy(in, out);
}",0,0,0,0,1,0,0,0,0,2,1,4,0,0,1,0,3,2,0,0,3,0.76,20,13
6133_26,26,26,"OutputStream out = new BufferedOutputStream(new FileOutputStream(new File(applicationPath, entry.getName())))) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.72,21,13
6133_27,27,27,"IOUtils.copy(in, out);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,22,14
6134_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,4,1,0,0,0.35,11,7
6134_2,2,2,String applicationPath = context.getFilesDir().getPath();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.57,10,6
6134_3,3,3,"applicationPath = applicationPath.substring(0, applicationPath.lastIndexOf(""/"") + 1);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,1,0,1,0.47,9,5
6134_5,5,5,Enumeration<? extends ZipEntry> entries = zipFile.entries();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,1,0,2,0.79,7,4
6134_6,6,29,"while (entries.hasMoreElements()) {
ZipEntry entry = entries.nextElement();

if (entry.getName().contains(VERSION_PREFIX)) {
continue;
}

String[] path = entry.getName().split(""/"");
String pathCat = """";
if (path.length > 1) {
for (int i = 0; i < path.length - 1; i++) {
pathCat += path[i] + ""/"";
File tmp = new File(applicationPath, pathCat);
if (!tmp.exists() && !tmp.mkdir()) {
throw new IOException(""Couldn't mkdir"");
}
}
}

try (InputStream in = zipFile.getInputStream(entry);
OutputStream out = new BufferedOutputStream(new FileOutputStream(new File(applicationPath, entry.getName())))) {
IOUtils.copy(in, out);
}
}",0,1,0,0,0,0,0,0,0,14,4,24,0,1,0,0,5,4,1,0,3,0.68,0,0
6134_7,7,7,ZipEntry entry = entries.nextElement();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,1,0,2,0.73,5,2
6134_9,9,11,"if (entry.getName().contains(VERSION_PREFIX)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,4,1,0,1,0.49,1,0
6134_10,10,10,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.29,2,0
6134_13,13,13,"String[] path = entry.getName().split(""/"");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,4,1,0,2,0.6,0,0
6134_14,14,14,"String pathCat = """";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.5,1,0
6134_15,15,23,"if (path.length > 1) {
for (int i = 0; i < path.length - 1; i++) {
pathCat += path[i] + ""/"";
File tmp = new File(applicationPath, pathCat);
if (!tmp.exists() && !tmp.mkdir()) {
throw new IOException(""Couldn't mkdir"");
}
}
}",1,0,0,0,0,0,0,0,0,5,3,9,0,1,0,1,5,4,1,0,1,0.57,2,1
6134_16,16,22,"for (int i = 0; i < path.length - 1; i++) {
pathCat += path[i] + ""/"";
File tmp = new File(applicationPath, pathCat);
if (!tmp.exists() && !tmp.mkdir()) {
throw new IOException(""Couldn't mkdir"");
}
}",0,0,1,0,0,0,0,0,0,4,2,7,0,0,0,0,5,4,1,0,1,0.57,3,2
6134_17,17,17,"pathCat += path[i] + ""/"";",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.61,4,3
6134_18,18,18,"File tmp = new File(applicationPath, pathCat);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.62,5,4
6134_19,19,21,"if (!tmp.exists() && !tmp.mkdir()) {
throw new IOException(""Couldn't mkdir"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,4,1,0,0,0.42,6,5
6134_20,20,20,"throw new IOException(""Couldn't mkdir"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,4,1,0,0,0.42,7,6
6134_25,25,28,"try (InputStream in = zipFile.getInputStream(entry);
OutputStream out = new BufferedOutputStream(new FileOutputStream(new File(applicationPath, entry.getName())))) {
IOUtils.copy(in, out);
}",0,0,0,0,1,0,0,0,0,2,1,4,0,0,1,0,5,4,1,0,3,0.69,12,8
6134_26,26,26,"OutputStream out = new BufferedOutputStream(new FileOutputStream(new File(applicationPath, entry.getName())))) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,2,0.67,13,8
6134_27,27,27,"IOUtils.copy(in, out);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.39,14,9
6135_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,0,0.45,23,15
6135_2,2,2,String applicationPath = context.getFilesDir().getPath();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.58,22,14
6135_3,3,3,"applicationPath = applicationPath.substring(0, applicationPath.lastIndexOf(""/"") + 1);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,0,0.42,21,13
6135_5,5,5,Enumeration<? extends ZipEntry> entries = zipFile.entries();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,2,0.89,19,12
6135_6,6,29,"while (entries.hasMoreElements()) {
ZipEntry entry = entries.nextElement();

if (entry.getName().contains(VERSION_PREFIX)) {
continue;
}

String[] path = entry.getName().split(""/"");
String pathCat = """";
if (path.length > 1) {
for (int i = 0; i < path.length - 1; i++) {
pathCat += path[i] + ""/"";
File tmp = new File(applicationPath, pathCat);
if (!tmp.exists() && !tmp.mkdir()) {
throw new IOException(""Couldn't mkdir"");
}
}
}

try (InputStream in = zipFile.getInputStream(entry);
OutputStream out = new BufferedOutputStream(new FileOutputStream(new File(applicationPath, entry.getName())))) {
IOUtils.copy(in, out);
}
}",0,1,0,0,0,0,0,0,0,14,4,24,0,1,0,0,4,3,0,0,2,0.71,0,0
6135_7,7,7,ZipEntry entry = entries.nextElement();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,2,0.84,17,10
6135_9,9,11,"if (entry.getName().contains(VERSION_PREFIX)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,1,0.59,13,8
6135_10,10,10,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.3,14,8
6135_13,13,13,"String[] path = entry.getName().split(""/"");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.6,11,7
6135_14,14,14,"String pathCat = """";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.42,10,6
6135_15,15,23,"if (path.length > 1) {
for (int i = 0; i < path.length - 1; i++) {
pathCat += path[i] + ""/"";
File tmp = new File(applicationPath, pathCat);
if (!tmp.exists() && !tmp.mkdir()) {
throw new IOException(""Couldn't mkdir"");
}
}
}",1,0,0,0,0,0,0,0,0,5,3,9,0,1,0,1,4,3,0,0,0,0.52,1,0
6135_16,16,22,"for (int i = 0; i < path.length - 1; i++) {
pathCat += path[i] + ""/"";
File tmp = new File(applicationPath, pathCat);
if (!tmp.exists() && !tmp.mkdir()) {
throw new IOException(""Couldn't mkdir"");
}
}",0,0,1,0,0,0,0,0,0,4,2,7,0,0,0,0,4,3,0,0,0,0.53,2,0
6135_17,17,17,"pathCat += path[i] + ""/"";",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.45,7,3
6135_18,18,18,"File tmp = new File(applicationPath, pathCat);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.56,6,2
6135_19,19,21,"if (!tmp.exists() && !tmp.mkdir()) {
throw new IOException(""Couldn't mkdir"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,3,0,0,0,0.45,3,0
6135_20,20,20,"throw new IOException(""Couldn't mkdir"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,0,0.44,4,0
6135_25,25,28,"try (InputStream in = zipFile.getInputStream(entry);
OutputStream out = new BufferedOutputStream(new FileOutputStream(new File(applicationPath, entry.getName())))) {
IOUtils.copy(in, out);
}",0,0,0,0,1,0,0,0,0,2,1,4,0,0,1,0,4,3,0,0,2,0.72,0,0
6135_26,26,26,"OutputStream out = new BufferedOutputStream(new FileOutputStream(new File(applicationPath, entry.getName())))) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.66,1,0
6135_27,27,27,"IOUtils.copy(in, out);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.45,2,1
6136_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,0,0.44,0,0
6136_2,2,12,"try (ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(zipFile))) {
for (File file : files) {
ZipEntry ze = new ZipEntry(file.getCanonicalPath().split(context.getPackageName() + '/')[1]);
zos.putNextEntry(ze);
try (FileInputStream fis = new FileInputStream(file)) {
IOUtils.copy(fis, zos);
}
}
ZipEntry zipEntry = new ZipEntry(VERSION_PREFIX + '2');
zos.putNextEntry(zipEntry);
}",0,0,0,0,1,0,0,0,0,7,3,11,0,0,0,0,4,3,0,0,3,0.73,0,0
6136_3,3,9,"for (File file : files) {
ZipEntry ze = new ZipEntry(file.getCanonicalPath().split(context.getPackageName() + '/')[1]);
zos.putNextEntry(ze);
try (FileInputStream fis = new FileInputStream(file)) {
IOUtils.copy(fis, zos);
}
}",0,0,0,1,0,0,0,0,0,4,2,7,0,0,0,0,4,3,0,0,2,0.62,1,0
6136_4,4,4,ZipEntry ze = new ZipEntry(file.getCanonicalPath().split(context.getPackageName() + '/')[1]);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.55,2,1
6136_5,5,5,zos.putNextEntry(ze);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.29,3,2
6136_6,6,8,"try (FileInputStream fis = new FileInputStream(file)) {
IOUtils.copy(fis, zos);
}",0,0,0,0,1,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,1,0.61,4,3
6136_7,7,7,"IOUtils.copy(fis, zos);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.42,5,4
6136_10,10,10,ZipEntry zipEntry = new ZipEntry(VERSION_PREFIX + '2');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.59,8,6
6136_11,11,11,zos.putNextEntry(zipEntry);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.54,9,6
6137_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,4,1,0,0,0.41,2,2
6137_2,2,12,"try (ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(zipFile))) {
for (File file : files) {
ZipEntry ze = new ZipEntry(file.getCanonicalPath().split(context.getPackageName() + '/')[1]);
zos.putNextEntry(ze);
try (FileInputStream fis = new FileInputStream(file)) {
IOUtils.copy(fis, zos);
}
}
ZipEntry zipEntry = new ZipEntry(VERSION_PREFIX + '2');
zos.putNextEntry(zipEntry);
}",0,0,0,0,1,0,0,0,0,7,3,11,0,0,0,0,5,4,1,0,4,0.74,0,0
6137_3,3,9,"for (File file : files) {
ZipEntry ze = new ZipEntry(file.getCanonicalPath().split(context.getPackageName() + '/')[1]);
zos.putNextEntry(ze);
try (FileInputStream fis = new FileInputStream(file)) {
IOUtils.copy(fis, zos);
}
}",0,0,0,1,0,0,0,0,0,4,2,7,0,0,0,0,5,4,1,0,3,0.66,0,0
6137_4,4,4,ZipEntry ze = new ZipEntry(file.getCanonicalPath().split(context.getPackageName() + '/')[1]);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,2,0.58,0,0
6137_5,5,5,zos.putNextEntry(ze);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.31,1,0
6137_6,6,8,"try (FileInputStream fis = new FileInputStream(file)) {
IOUtils.copy(fis, zos);
}",0,0,0,0,1,0,0,0,0,1,1,3,0,0,0,0,5,4,1,0,2,0.65,2,1
6137_7,7,7,"IOUtils.copy(fis, zos);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.39,3,2
6137_10,10,10,ZipEntry zipEntry = new ZipEntry(VERSION_PREFIX + '2');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.6,6,4
6137_11,11,11,zos.putNextEntry(zipEntry);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.55,7,4
6138_1,1,1,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,1,0,0,0.21,8,6
6138_2,2,12,"try (ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(zipFile))) {
for (File file : files) {
ZipEntry ze = new ZipEntry(file.getCanonicalPath().split(context.getPackageName() + '/')[1]);
zos.putNextEntry(ze);
try (FileInputStream fis = new FileInputStream(file)) {
IOUtils.copy(fis, zos);
}
}
ZipEntry zipEntry = new ZipEntry(VERSION_PREFIX + '2');
zos.putNextEntry(zipEntry);
}",0,0,0,0,1,0,0,0,0,7,3,11,0,0,0,0,5,2,1,0,2,0.53,0,0
6138_3,3,9,"for (File file : files) {
ZipEntry ze = new ZipEntry(file.getCanonicalPath().split(context.getPackageName() + '/')[1]);
zos.putNextEntry(ze);
try (FileInputStream fis = new FileInputStream(file)) {
IOUtils.copy(fis, zos);
}
}",0,0,0,1,0,0,0,0,0,4,2,7,0,0,0,0,5,2,1,0,0,0.4,0,0
6138_4,4,4,ZipEntry ze = new ZipEntry(file.getCanonicalPath().split(context.getPackageName() + '/')[1]);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.43,5,3
6138_5,5,5,zos.putNextEntry(ze);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.29,4,2
6138_6,6,8,"try (FileInputStream fis = new FileInputStream(file)) {
IOUtils.copy(fis, zos);
}",0,0,0,0,1,0,0,0,0,1,1,3,0,0,0,0,5,2,1,0,0,0.27,1,0
6138_7,7,7,"IOUtils.copy(fis, zos);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.28,2,0
6138_10,10,10,ZipEntry zipEntry = new ZipEntry(VERSION_PREFIX + '2');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,2,0.59,0,0
6138_11,11,11,zos.putNextEntry(zipEntry);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.31,1,0
6139_1,1,2,"public static String[] getUniqueColumnArray(String table, String colKey, boolean shouldSplit,
SQLiteDatabase database) throws FamiliarDbException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,0,0,1,0.46,10,5
6139_3,3,3,Cursor cursor = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.8,9,4
6139_4,4,43,"try {
String query =
""SELECT "" + KEY_ID + "", "" + colKey +
"" FROM "" + table +
"" GROUP BY "" + colKey +
"" ORDER BY "" + colKey;
FamiliarLogger.logRawQuery(query, null, new Throwable().getStackTrace()[0].getMethodName());
cursor = database.rawQuery(query, null);

if (null == cursor || cursor.getCount() == 0) {
return new String[]{};
}

int colIndex = cursor.getColumnIndex(colKey);
cursor.moveToFirst();
while ("""".equals(cursor.getString(colIndex))) {
cursor.moveToNext();
}

HashSet<String> words = new HashSet<>();
while (!cursor.isAfterLast()) {
if (shouldSplit) {
Collections.addAll(words, cursor.getString(colIndex).split(""\\s+""));
} else {
words.add(cursor.getString(colIndex));
}
cursor.moveToNext();
}

String[] wordsArr = words.toArray(new String[0]);
Arrays.sort(wordsArr);
return wordsArr;

} catch (SQLiteException | IllegalStateException | NullPointerException | CursorIndexOutOfBoundsException e) {
throw new FamiliarDbException(e);
} finally {
if (cursor != null) {
cursor.close();
}
}",0,0,0,0,1,0,0,0,0,24,3,40,0,1,0,0,6,5,0,0,4,0.65,0,0
6139_5,5,9,"String query =
""SELECT "" + KEY_ID + "", "" + colKey +
"" FROM "" + table +
"" GROUP BY "" + colKey +
"" ORDER BY "" + colKey;",0,0,0,0,0,1,0,0,0,0,0,5,0,1,0,0,6,5,0,0,0,0.35,3,2
6139_10,10,10,"FamiliarLogger.logRawQuery(query, null, new Throwable().getStackTrace()[0].getMethodName());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.46,2,1
6139_11,11,11,"cursor = database.rawQuery(query, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,5,0,0,2,0.61,1,0
6139_13,13,15,"if (null == cursor || cursor.getCount() == 0) {
return new String[]{};
}",1,0,0,0,0,0,0,0,0,1,2,3,0,0,1,1,6,5,0,0,3,0.67,0,0
6139_14,14,14,return new String[]{};,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,6,5,0,0,1,0.54,1,0
6139_17,17,17,int colIndex = cursor.getColumnIndex(colKey);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,5,0,0,1,0.47,4,2
6139_18,18,18,cursor.moveToFirst();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.51,5,2
6139_19,19,21,"while ("""".equals(cursor.getString(colIndex))) {
cursor.moveToNext();
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,1,6,5,0,0,1,0.49,6,3
6139_20,20,20,cursor.moveToNext();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.49,7,4
6139_23,23,23,HashSet<String> words = new HashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,5,0,0,0,0.35,10,6
6139_24,24,31,"while (!cursor.isAfterLast()) {
if (shouldSplit) {
Collections.addAll(words, cursor.getString(colIndex).split(""\\s+""));
} else {
words.add(cursor.getString(colIndex));
}
cursor.moveToNext();
}",0,1,0,0,0,0,0,0,0,5,2,8,0,1,0,1,6,5,0,0,1,0.48,11,6
6139_25,25,29,"if (shouldSplit) {
Collections.addAll(words, cursor.getString(colIndex).split(""\\s+""));
} else {
words.add(cursor.getString(colIndex));
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,6,5,0,0,1,0.46,12,7
6139_26,26,26,"Collections.addAll(words, cursor.getString(colIndex).split(""\\s+""));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.46,13,8
6139_27,27,27,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.33,14,9
6139_28,28,28,words.add(cursor.getString(colIndex));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.47,15,10
6139_30,30,30,cursor.moveToNext();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.49,17,12
6139_33,33,33,String[] wordsArr = words.toArray(new String[0]);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,5,0,0,1,0.5,20,13
6139_34,34,34,Arrays.sort(wordsArr);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.54,21,13
6139_35,35,35,return wordsArr;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,6,5,0,0,1,0.63,22,14
6139_37,37,37,} catch (SQLiteException | IllegalStateException | NullPointerException | CursorIndexOutOfBoundsException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,2,0.52,24,16
6139_38,38,38,throw new FamiliarDbException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,5,0,0,0,0.35,25,16
6139_39,39,39,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.24,26,17
6139_40,40,42,"if (cursor != null) {
cursor.close();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,5,0,0,2,0.73,27,18
6139_41,41,41,cursor.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.58,28,19
6140_1,1,2,"public static String[] getUniqueColumnArray(String table, String colKey, boolean shouldSplit,
SQLiteDatabase database) throws FamiliarDbException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,1,0.48,14,7
6140_3,3,3,Cursor cursor = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.4,13,6
6140_4,4,43,"try {
String query =
""SELECT "" + KEY_ID + "", "" + colKey +
"" FROM "" + table +
"" GROUP BY "" + colKey +
"" ORDER BY "" + colKey;
FamiliarLogger.logRawQuery(query, null, new Throwable().getStackTrace()[0].getMethodName());
cursor = database.rawQuery(query, null);

if (null == cursor || cursor.getCount() == 0) {
return new String[]{};
}

int colIndex = cursor.getColumnIndex(colKey);
cursor.moveToFirst();
while ("""".equals(cursor.getString(colIndex))) {
cursor.moveToNext();
}

HashSet<String> words = new HashSet<>();
while (!cursor.isAfterLast()) {
if (shouldSplit) {
Collections.addAll(words, cursor.getString(colIndex).split(""\\s+""));
} else {
words.add(cursor.getString(colIndex));
}
cursor.moveToNext();
}

String[] wordsArr = words.toArray(new String[0]);
Arrays.sort(wordsArr);
return wordsArr;

} catch (SQLiteException | IllegalStateException | NullPointerException | CursorIndexOutOfBoundsException e) {
throw new FamiliarDbException(e);
} finally {
if (cursor != null) {
cursor.close();
}
}",0,0,0,0,1,0,0,0,0,24,3,40,0,1,0,0,4,4,0,0,1,0.49,0,0
6140_5,5,9,"String query =
""SELECT "" + KEY_ID + "", "" + colKey +
"" FROM "" + table +
"" GROUP BY "" + colKey +
"" ORDER BY "" + colKey;",0,0,0,0,0,1,0,0,0,0,0,5,0,1,0,0,4,4,0,0,0,0.36,7,4
6140_10,10,10,"FamiliarLogger.logRawQuery(query, null, new Throwable().getStackTrace()[0].getMethodName());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.34,6,3
6140_11,11,11,"cursor = database.rawQuery(query, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,4,0,0,0,0.38,5,2
6140_13,13,15,"if (null == cursor || cursor.getCount() == 0) {
return new String[]{};
}",1,0,0,0,0,0,0,0,0,1,2,3,0,0,1,1,4,4,0,0,0,0.37,1,0
6140_14,14,14,return new String[]{};,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,4,4,0,0,0,0.3,2,0
6140_17,17,17,int colIndex = cursor.getColumnIndex(colKey);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,1,0.47,0,0
6140_18,18,18,cursor.moveToFirst();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.35,1,0
6140_19,19,21,"while ("""".equals(cursor.getString(colIndex))) {
cursor.moveToNext();
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,1,4,4,0,0,0,0.36,2,1
6140_20,20,20,cursor.moveToNext();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.36,3,2
6140_23,23,23,HashSet<String> words = new HashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.35,6,4
6140_24,24,31,"while (!cursor.isAfterLast()) {
if (shouldSplit) {
Collections.addAll(words, cursor.getString(colIndex).split(""\\s+""));
} else {
words.add(cursor.getString(colIndex));
}
cursor.moveToNext();
}",0,1,0,0,0,0,0,0,0,5,2,8,0,1,0,1,4,4,0,0,0,0.39,7,4
6140_25,25,29,"if (shouldSplit) {
Collections.addAll(words, cursor.getString(colIndex).split(""\\s+""));
} else {
words.add(cursor.getString(colIndex));
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,4,4,0,0,0,0.39,8,5
6140_26,26,26,"Collections.addAll(words, cursor.getString(colIndex).split(""\\s+""));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.39,9,6
6140_27,27,27,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.27,10,7
6140_28,28,28,words.add(cursor.getString(colIndex));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.39,11,8
6140_30,30,30,cursor.moveToNext();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.36,13,10
6140_33,33,33,String[] wordsArr = words.toArray(new String[0]);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.42,16,11
6140_34,34,34,Arrays.sort(wordsArr);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.45,17,11
6140_35,35,35,return wordsArr;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,4,4,0,0,0,0.46,18,12
6140_37,37,37,} catch (SQLiteException | IllegalStateException | NullPointerException | CursorIndexOutOfBoundsException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.39,20,14
6140_38,38,38,throw new FamiliarDbException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,4,0,0,0,0.31,21,14
6140_39,39,39,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.16,22,15
6140_40,40,42,"if (cursor != null) {
cursor.close();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,4,0,0,0,0.38,23,16
6140_41,41,41,cursor.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.37,24,17
6141_1,1,2,"public static String[] getUniqueColumnArray(String table, String colKey, boolean shouldSplit,
SQLiteDatabase database) throws FamiliarDbException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,5,1,0,1,0.47,20,11
6141_3,3,3,Cursor cursor = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,5,1,0,0,0.33,19,10
6141_4,4,43,"try {
String query =
""SELECT "" + KEY_ID + "", "" + colKey +
"" FROM "" + table +
"" GROUP BY "" + colKey +
"" ORDER BY "" + colKey;
FamiliarLogger.logRawQuery(query, null, new Throwable().getStackTrace()[0].getMethodName());
cursor = database.rawQuery(query, null);

if (null == cursor || cursor.getCount() == 0) {
return new String[]{};
}

int colIndex = cursor.getColumnIndex(colKey);
cursor.moveToFirst();
while ("""".equals(cursor.getString(colIndex))) {
cursor.moveToNext();
}

HashSet<String> words = new HashSet<>();
while (!cursor.isAfterLast()) {
if (shouldSplit) {
Collections.addAll(words, cursor.getString(colIndex).split(""\\s+""));
} else {
words.add(cursor.getString(colIndex));
}
cursor.moveToNext();
}

String[] wordsArr = words.toArray(new String[0]);
Arrays.sort(wordsArr);
return wordsArr;

} catch (SQLiteException | IllegalStateException | NullPointerException | CursorIndexOutOfBoundsException e) {
throw new FamiliarDbException(e);
} finally {
if (cursor != null) {
cursor.close();
}
}",0,0,0,0,1,0,0,0,0,24,3,40,0,1,0,0,8,5,1,0,3,0.55,0,0
6141_5,5,9,"String query =
""SELECT "" + KEY_ID + "", "" + colKey +
"" FROM "" + table +
"" GROUP BY "" + colKey +
"" ORDER BY "" + colKey;",0,0,0,0,0,1,0,0,0,0,0,5,0,1,0,0,8,5,1,0,0,0.39,13,8
6141_10,10,10,"FamiliarLogger.logRawQuery(query, null, new Throwable().getStackTrace()[0].getMethodName());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,1,0,0,0.36,12,7
6141_11,11,11,"cursor = database.rawQuery(query, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,8,5,1,0,0,0.37,11,6
6141_13,13,15,"if (null == cursor || cursor.getCount() == 0) {
return new String[]{};
}",1,0,0,0,0,0,0,0,0,1,2,3,0,0,1,1,8,5,1,0,0,0.35,7,4
6141_14,14,14,return new String[]{};,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,8,5,1,0,0,0.32,8,4
6141_17,17,17,int colIndex = cursor.getColumnIndex(colKey);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,5,1,0,0,0.41,5,3
6141_18,18,18,cursor.moveToFirst();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,1,0,0,0.39,4,2
6141_19,19,21,"while ("""".equals(cursor.getString(colIndex))) {
cursor.moveToNext();
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,1,8,5,1,0,0,0.39,1,0
6141_20,20,20,cursor.moveToNext();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.38,2,0
6141_23,23,23,HashSet<String> words = new HashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,5,1,0,3,0.74,0,0
6141_24,24,31,"while (!cursor.isAfterLast()) {
if (shouldSplit) {
Collections.addAll(words, cursor.getString(colIndex).split(""\\s+""));
} else {
words.add(cursor.getString(colIndex));
}
cursor.moveToNext();
}",0,1,0,0,0,0,0,0,0,5,2,8,0,1,0,1,8,5,1,0,1,0.46,1,0
6141_25,25,29,"if (shouldSplit) {
Collections.addAll(words, cursor.getString(colIndex).split(""\\s+""));
} else {
words.add(cursor.getString(colIndex));
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,8,5,1,0,1,0.47,2,1
6141_26,26,26,"Collections.addAll(words, cursor.getString(colIndex).split(""\\s+""));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.47,3,2
6141_27,27,27,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.27,4,3
6141_28,28,28,words.add(cursor.getString(colIndex));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,1,0.47,5,4
6141_30,30,30,cursor.moveToNext();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,1,0,0,0.38,7,6
6141_33,33,33,String[] wordsArr = words.toArray(new String[0]);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,5,1,0,1,0.5,10,7
6141_34,34,34,Arrays.sort(wordsArr);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,5,1,0,1,0.49,11,7
6141_35,35,35,return wordsArr;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,8,5,1,0,1,0.52,12,8
6141_37,37,37,} catch (SQLiteException | IllegalStateException | NullPointerException | CursorIndexOutOfBoundsException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.37,14,10
6141_38,38,38,throw new FamiliarDbException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,5,1,0,0,0.3,15,10
6141_39,39,39,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.22,16,11
6141_40,40,42,"if (cursor != null) {
cursor.close();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,5,1,0,0,0.31,17,12
6141_41,41,41,cursor.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,5,1,0,0,0.3,18,13
6142_1,1,2,"public static String[] getUniqueColumnArray(String table, String colKey, boolean shouldSplit,
SQLiteDatabase database) throws FamiliarDbException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,1,0,1,0.53,30,18
6142_3,3,3,Cursor cursor = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.35,29,17
6142_4,4,43,"try {
String query =
""SELECT "" + KEY_ID + "", "" + colKey +
"" FROM "" + table +
"" GROUP BY "" + colKey +
"" ORDER BY "" + colKey;
FamiliarLogger.logRawQuery(query, null, new Throwable().getStackTrace()[0].getMethodName());
cursor = database.rawQuery(query, null);

if (null == cursor || cursor.getCount() == 0) {
return new String[]{};
}

int colIndex = cursor.getColumnIndex(colKey);
cursor.moveToFirst();
while ("""".equals(cursor.getString(colIndex))) {
cursor.moveToNext();
}

HashSet<String> words = new HashSet<>();
while (!cursor.isAfterLast()) {
if (shouldSplit) {
Collections.addAll(words, cursor.getString(colIndex).split(""\\s+""));
} else {
words.add(cursor.getString(colIndex));
}
cursor.moveToNext();
}

String[] wordsArr = words.toArray(new String[0]);
Arrays.sort(wordsArr);
return wordsArr;

} catch (SQLiteException | IllegalStateException | NullPointerException | CursorIndexOutOfBoundsException e) {
throw new FamiliarDbException(e);
} finally {
if (cursor != null) {
cursor.close();
}
}",0,0,0,0,1,0,0,0,0,24,3,40,0,1,0,0,5,4,1,0,4,0.66,0,0
6142_5,5,9,"String query =
""SELECT "" + KEY_ID + "", "" + colKey +
"" FROM "" + table +
"" GROUP BY "" + colKey +
"" ORDER BY "" + colKey;",0,0,0,0,0,1,0,0,0,0,0,5,0,1,0,0,5,4,1,0,0,0.44,23,15
6142_10,10,10,"FamiliarLogger.logRawQuery(query, null, new Throwable().getStackTrace()[0].getMethodName());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.38,22,14
6142_11,11,11,"cursor = database.rawQuery(query, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,1,0,0,0.36,21,13
6142_13,13,15,"if (null == cursor || cursor.getCount() == 0) {
return new String[]{};
}",1,0,0,0,0,0,0,0,0,1,2,3,0,0,1,1,5,4,1,0,0,0.35,17,11
6142_14,14,14,return new String[]{};,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,5,4,1,0,0,0.32,18,11
6142_17,17,17,int colIndex = cursor.getColumnIndex(colKey);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,1,0,0,0.41,15,10
6142_18,18,18,cursor.moveToFirst();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.35,14,9
6142_19,19,21,"while ("""".equals(cursor.getString(colIndex))) {
cursor.moveToNext();
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,1,5,4,1,0,0,0.39,11,7
6142_20,20,20,cursor.moveToNext();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.33,12,7
6142_23,23,23,HashSet<String> words = new HashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,1,0,2,0.67,9,6
6142_24,24,31,"while (!cursor.isAfterLast()) {
if (shouldSplit) {
Collections.addAll(words, cursor.getString(colIndex).split(""\\s+""));
} else {
words.add(cursor.getString(colIndex));
}
cursor.moveToNext();
}",0,1,0,0,0,0,0,0,0,5,2,8,0,1,0,1,5,4,1,0,0,0.41,1,0
6142_25,25,29,"if (shouldSplit) {
Collections.addAll(words, cursor.getString(colIndex).split(""\\s+""));
} else {
words.add(cursor.getString(colIndex));
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,5,4,1,0,0,0.42,3,1
6142_26,26,26,"Collections.addAll(words, cursor.getString(colIndex).split(""\\s+""));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.41,6,3
6142_27,27,27,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.27,5,2
6142_28,28,28,words.add(cursor.getString(colIndex));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.4,4,1
6142_30,30,30,cursor.moveToNext();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.33,2,0
6142_33,33,33,String[] wordsArr = words.toArray(new String[0]);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,1,0,1,0.52,0,0
6142_34,34,34,Arrays.sort(wordsArr);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,2,0.69,1,0
6142_35,35,35,return wordsArr;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,5,4,1,0,0,0.47,2,1
6142_37,37,37,} catch (SQLiteException | IllegalStateException | NullPointerException | CursorIndexOutOfBoundsException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.38,4,3
6142_38,38,38,throw new FamiliarDbException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,4,1,0,0,0.33,5,3
6142_39,39,39,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.23,6,4
6142_40,40,42,"if (cursor != null) {
cursor.close();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,4,1,0,0,0.35,7,5
6142_41,41,41,cursor.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.35,8,6
6143_1,1,2,"public static Cursor fetchCardByName(String name, List<String> fields, boolean shouldGroup,
boolean offlineOnly, boolean preferOptionalFoil, SQLiteDatabase mDb)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,2,1,0,1,0.53,2,2
6143_3,3,3,throws FamiliarDbException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,1,0,0,0.43,1,1
6143_4,4,44,"try {
name = sanitizeString(name, true);
StringBuilder sql = new StringBuilder(""SELECT "");
boolean first = true;
for (String field : fields) {
if (first) {
first = false;
} else {
sql.append("", "");
}
sql.append(field);
}
sql.append("" FROM "" + DATABASE_TABLE_CARDS +
"" JOIN "" + DATABASE_TABLE_SETS + "" ON "" + DATABASE_TABLE_SETS + ""."" + KEY_CODE + "" = "" + DATABASE_TABLE_CARDS + ""."" + KEY_SET +
"" WHERE "" + DATABASE_TABLE_CARDS + ""."" + KEY_NAME_NO_ACCENT + "" = "").append(name);
if (offlineOnly) {
sql.append("" AND "" + KEY_ONLINE_ONLY + "" = 0"");
}
sql.append("" COLLATE NOCASE"");
if (shouldGroup) {
sql.append("" GROUP BY "" + DATABASE_TABLE_SETS + ""."" + KEY_CODE);
}
if (preferOptionalFoil) {
sql.append("" ORDER BY "" + DATABASE_TABLE_SETS + ""."" + KEY_CAN_BE_FOIL + "" DESC, "" + DATABASE_TABLE_SETS + ""."" + KEY_DATE + "" DESC"");
} else {
sql.append("" ORDER BY "" + DATABASE_TABLE_SETS + ""."" + KEY_DATE + "" DESC"");
}

if (fields.contains(CardDbAdapter.DATABASE_TABLE_CARDS + ""."" + CardDbAdapter.KEY_NUMBER)) {
sql.append("", "").append(CardDbAdapter.DATABASE_TABLE_CARDS).append(""."").append(CardDbAdapter.KEY_NUMBER).append("" ASC"");
}

FamiliarLogger.logRawQuery(sql.toString(), null, new Throwable().getStackTrace()[0].getMethodName());
Cursor c = mDb.rawQuery(sql.toString(), null);
if (c != null) {
c.moveToFirst();
}
return c;
} catch (SQLiteException | CursorIndexOutOfBoundsException | IllegalStateException e) {
throw new FamiliarDbException(e);
}",0,0,0,0,1,0,0,0,0,28,3,41,0,0,0,0,5,2,1,0,3,0.64,0,0
6143_5,5,5,"name = sanitizeString(name, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,2,0.61,0,0
6143_6,6,6,"StringBuilder sql = new StringBuilder(""SELECT "");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.58,1,0
6143_7,7,7,boolean first = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.31,2,1
6143_8,8,15,"for (String field : fields) {
if (first) {
first = false;
} else {
sql.append("", "");
}
sql.append(field);
}",0,0,0,1,0,0,0,0,0,5,2,8,1,1,0,0,5,2,1,0,1,0.49,3,2
6143_9,9,13,"if (first) {
first = false;
} else {
sql.append("", "");
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,0,5,2,1,0,0,0.42,4,3
6143_10,10,10,first = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.28,5,4
6143_11,11,11,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.26,6,5
6143_12,12,12,"sql.append("", "");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.51,7,6
6143_14,14,14,sql.append(field);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,1,0,0,0.46,9,8
6143_16,16,18,"sql.append("" FROM "" + DATABASE_TABLE_CARDS +
"" JOIN "" + DATABASE_TABLE_SETS + "" ON "" + DATABASE_TABLE_SETS + ""."" + KEY_CODE + "" = "" + DATABASE_TABLE_CARDS + ""."" + KEY_SET +
"" WHERE "" + DATABASE_TABLE_CARDS + ""."" + KEY_NAME_NO_ACCENT + "" = "").append(name);",0,0,0,0,0,0,0,0,0,0,0,3,1,1,0,0,5,2,1,0,1,0.5,11,9
6143_19,19,21,"if (offlineOnly) {
sql.append("" AND "" + KEY_ONLINE_ONLY + "" = 0"");
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,2,1,0,0,0.5,14,10
6143_20,20,20,"sql.append("" AND "" + KEY_ONLINE_ONLY + "" = 0"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.51,15,10
6143_22,22,22,"sql.append("" COLLATE NOCASE"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,1,0,0,0.46,17,12
6143_23,23,25,"if (shouldGroup) {
sql.append("" GROUP BY "" + DATABASE_TABLE_SETS + ""."" + KEY_CODE);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,2,1,0,0,0.41,18,12
6143_24,24,24,"sql.append("" GROUP BY "" + DATABASE_TABLE_SETS + ""."" + KEY_CODE);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.42,19,13
6143_26,26,30,"if (preferOptionalFoil) {
sql.append("" ORDER BY "" + DATABASE_TABLE_SETS + ""."" + KEY_CAN_BE_FOIL + "" DESC, "" + DATABASE_TABLE_SETS + ""."" + KEY_DATE + "" DESC"");
} else {
sql.append("" ORDER BY "" + DATABASE_TABLE_SETS + ""."" + KEY_DATE + "" DESC"");
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,1,5,2,1,0,0,0.45,21,15
6143_27,27,27,"sql.append("" ORDER BY "" + DATABASE_TABLE_SETS + ""."" + KEY_CAN_BE_FOIL + "" DESC, "" + DATABASE_TABLE_SETS + ""."" + KEY_DATE + "" DESC"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.45,22,15
6143_28,28,28,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.26,23,16
6143_29,29,29,"sql.append("" ORDER BY "" + DATABASE_TABLE_SETS + ""."" + KEY_DATE + "" DESC"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.45,24,17
6143_32,32,34,"if (fields.contains(CardDbAdapter.DATABASE_TABLE_CARDS + ""."" + CardDbAdapter.KEY_NUMBER)) {
sql.append("", "").append(CardDbAdapter.DATABASE_TABLE_CARDS).append(""."").append(CardDbAdapter.KEY_NUMBER).append("" ASC"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,2,1,0,0,0.45,27,19
6143_33,33,33,"sql.append("", "").append(CardDbAdapter.DATABASE_TABLE_CARDS).append(""."").append(CardDbAdapter.KEY_NUMBER).append("" ASC"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.47,28,19
6143_36,36,36,"FamiliarLogger.logRawQuery(sql.toString(), null, new Throwable().getStackTrace()[0].getMethodName());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,5,2,1,0,1,0.55,31,21
6143_37,37,37,"Cursor c = mDb.rawQuery(sql.toString(), null);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,2,1,0,1,0.51,32,21
6143_38,38,40,"if (c != null) {
c.moveToFirst();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,2,1,0,0,0.31,33,22
6143_39,39,39,c.moveToFirst();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.29,34,23
6143_41,41,41,return c;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.32,36,25
6143_42,42,42,} catch (SQLiteException | CursorIndexOutOfBoundsException | IllegalStateException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.49,37,25
6143_43,43,43,throw new FamiliarDbException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,1,0,0,0.43,38,26
6144_1,1,2,"public static Cursor fetchCardByNameAndSet(String name, String setCode, String cardNumber, List<String> fields,
SQLiteDatabase mDb)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,2,1,0,1,0.55,2,2
6144_3,3,3,throws FamiliarDbException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,1,0,0,0.43,1,1
6144_4,4,37,"try {
name = sanitizeString(name, true);
setCode = sanitizeString(setCode, false);

StringBuilder sql = new StringBuilder(""SELECT "");
boolean first = true;
for (String field : fields) {
if (first) {
first = false;
} else {
sql.append("", "");
}
sql.append(field);
}

sql.append("" FROM "" + DATABASE_TABLE_CARDS +
"" JOIN "" + DATABASE_TABLE_SETS + "" ON "" + DATABASE_TABLE_SETS + ""."" + KEY_CODE + "" = "" + DATABASE_TABLE_CARDS + ""."" + KEY_SET +
"" WHERE "" + DATABASE_TABLE_CARDS + ""."" + KEY_NAME_NO_ACCENT + "" = "").append(name).append("" COLLATE NOCASE"")
.append("" AND "")
.append(DATABASE_TABLE_CARDS).append(""."").append(KEY_SET).append("" = "").append(setCode);
if (null != cardNumber && !cardNumber.isEmpty()) {
sql.append("" AND "").append(DATABASE_TABLE_CARDS).append(""."").append(KEY_NUMBER).append("" = "").append(sanitizeString(cardNumber, false));
}
sql.append("" ORDER BY "").append(DATABASE_TABLE_SETS).append(""."").append(KEY_DATE).append("" DESC"");

FamiliarLogger.logRawQuery(sql.toString(), null, new Throwable().getStackTrace()[0].getMethodName());
Cursor c = mDb.rawQuery(sql.toString(), null);
if (c != null) {
c.moveToFirst();
}
return c;
} catch (SQLiteException | CursorIndexOutOfBoundsException | IllegalStateException e) {
throw new FamiliarDbException(e);
}",0,0,0,0,1,0,0,0,0,23,3,34,0,0,0,0,5,2,1,0,3,0.64,0,0
6144_5,5,5,"name = sanitizeString(name, true);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,2,1,0,2,0.61,0,0
6144_6,6,6,"setCode = sanitizeString(setCode, false);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,5,2,1,0,2,0.56,1,0
6144_8,8,8,"StringBuilder sql = new StringBuilder(""SELECT "");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,2,1,0,1,0.58,3,2
6144_9,9,9,boolean first = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.31,4,2
6144_10,10,17,"for (String field : fields) {
if (first) {
first = false;
} else {
sql.append("", "");
}
sql.append(field);
}",0,0,0,1,0,0,0,0,0,5,2,8,0,1,0,1,5,2,1,0,1,0.49,5,3
6144_11,11,15,"if (first) {
first = false;
} else {
sql.append("", "");
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,0,5,2,1,0,0,0.42,6,4
6144_12,12,12,first = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.28,7,5
6144_13,13,13,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.26,8,6
6144_14,14,14,"sql.append("", "");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.51,9,7
6144_16,16,16,sql.append(field);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,2,1,0,0,0.46,11,9
6144_19,19,21,"sql.append("" FROM "" + DATABASE_TABLE_CARDS +
"" JOIN "" + DATABASE_TABLE_SETS + "" ON "" + DATABASE_TABLE_SETS + ""."" + KEY_CODE + "" = "" + DATABASE_TABLE_CARDS + ""."" + KEY_SET +
"" WHERE "" + DATABASE_TABLE_CARDS + ""."" + KEY_NAME_NO_ACCENT + "" = "").append(name).append("" COLLATE NOCASE"")",0,0,0,0,0,0,0,0,0,0,0,3,1,0,1,0,5,2,1,0,1,0.5,14,10
6144_22,22,22,".append("" AND "")",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,2,1,0,0,0.41,17,11
6144_23,23,23,".append(DATABASE_TABLE_CARDS).append(""."").append(KEY_SET).append("" = "").append(setCode);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,2,1,0,0,0.39,18,11
6144_24,24,26,"if (null != cardNumber && !cardNumber.isEmpty()) {
sql.append("" AND "").append(DATABASE_TABLE_CARDS).append(""."").append(KEY_NUMBER).append("" = "").append(sanitizeString(cardNumber, false));
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,5,2,1,0,2,0.56,19,12
6144_25,25,25,"sql.append("" AND "").append(DATABASE_TABLE_CARDS).append(""."").append(KEY_NUMBER).append("" = "").append(sanitizeString(cardNumber, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,2,0.58,20,13
6144_27,27,27,"sql.append("" ORDER BY "").append(DATABASE_TABLE_SETS).append(""."").append(KEY_DATE).append("" DESC"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,5,2,1,0,0,0.46,22,15
6144_29,29,29,"FamiliarLogger.logRawQuery(sql.toString(), null, new Throwable().getStackTrace()[0].getMethodName());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,5,2,1,0,1,0.55,24,16
6144_30,30,30,"Cursor c = mDb.rawQuery(sql.toString(), null);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,2,1,0,1,0.51,25,16
6144_31,31,33,"if (c != null) {
c.moveToFirst();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,2,1,0,0,0.31,26,17
6144_32,32,32,c.moveToFirst();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.29,27,18
6144_34,34,34,return c;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.32,29,20
6144_35,35,35,} catch (SQLiteException | CursorIndexOutOfBoundsException | IllegalStateException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.49,30,20
6144_36,36,36,throw new FamiliarDbException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,1,0,0,0.43,31,21
6152_1,1,1,throws FamiliarDbException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,1,0,0,0.41,0,0
6152_2,2,5,"String statement = ""SELECT "" + KEY_MULTIVERSEID + "", "" + KEY_DATE +
"" FROM ("" + DATABASE_TABLE_CARDS + "" JOIN "" + DATABASE_TABLE_SETS + "" ON "" + DATABASE_TABLE_SETS + ""."" + KEY_CODE + "" = "" + DATABASE_TABLE_CARDS + ""."" + KEY_SET + "")"" +
"" WHERE ("" + DATABASE_TABLE_CARDS + ""."" + KEY_NAME + "" = "" + sanitizeString(mName, false) + "")"" +
"" ORDER BY "" + KEY_DATE + "" DESC"";",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,5,2,1,0,3,0.67,0,0
6152_7,7,19,"try (Cursor c = mDb.rawQuery(statement, null)) {
c.moveToFirst();
while (!c.isAfterLast()) {
int multiverseId = CardDbAdapter.getIntFromCursor(c, KEY_MULTIVERSEID);
if (multiverseId > 0) {
return multiverseId;
}
c.moveToNext();
}
return 0;
} catch (SQLiteException | CursorIndexOutOfBoundsException | IllegalStateException e) {
throw new FamiliarDbException(e);
}",0,0,0,0,1,0,0,0,0,9,3,13,0,0,1,0,5,2,1,0,1,0.54,5,1
6152_8,8,8,c.moveToFirst();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.31,6,1
6152_9,9,15,"while (!c.isAfterLast()) {
int multiverseId = CardDbAdapter.getIntFromCursor(c, KEY_MULTIVERSEID);
if (multiverseId > 0) {
return multiverseId;
}
c.moveToNext();
}",0,1,0,0,0,0,0,0,0,4,2,7,0,0,0,0,5,2,1,0,1,0.53,7,2
6152_10,10,10,"int multiverseId = CardDbAdapter.getIntFromCursor(c, KEY_MULTIVERSEID);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,1,0.58,8,3
6152_11,11,13,"if (multiverseId > 0) {
return multiverseId;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,2,1,0,0,0.33,9,4
6152_12,12,12,return multiverseId;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.28,10,5
6152_14,14,14,c.moveToNext();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.3,12,7
6152_16,16,16,return 0;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.31,14,8
6152_17,17,17,} catch (SQLiteException | CursorIndexOutOfBoundsException | IllegalStateException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.45,15,8
6152_18,18,18,throw new FamiliarDbException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,2,1,0,0,0.38,16,9
621_1,1,1,throws FamiliarDbException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,0,0,0,0.31,0,0
621_2,2,6,"if (mOpenHandles.isEmpty()) {
handle.setInfo(1, mTransactional);
} else {
handle.setInfo(mOpenHandles.get(mOpenHandles.size() - 1).getHandle() + 1, mTransactional);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,1,3,2,0,0,2,0.65,0,0
621_3,3,3,"handle.setInfo(1, mTransactional);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.45,1,0
621_4,4,4,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.21,2,1
621_5,5,5,"handle.setInfo(mOpenHandles.get(mOpenHandles.size() - 1).getHandle() + 1, mTransactional);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.67,3,2
621_8,8,23,"try {
if (mOpenHandles.isEmpty()) {
if (mTransactional) {
mDatabase = mDatabaseHelper.getWritableDatabase();
if (mDatabase != null) {
mDatabase.execSQL(""BEGIN EXCLUSIVE TRANSACTION"");
}
} else {
mDatabase = mDatabaseHelper.getReadableDatabase();
}
}
mOpenHandles.add(handle);
return mDatabase;
} catch (SQLiteException e) {
throw new FamiliarDbException(e);
}",0,0,0,0,1,0,0,0,0,11,4,16,0,0,1,0,3,2,0,0,2,0.62,6,4
621_9,9,18,"if (mOpenHandles.isEmpty()) {
if (mTransactional) {
mDatabase = mDatabaseHelper.getWritableDatabase();
if (mDatabase != null) {
mDatabase.execSQL(""BEGIN EXCLUSIVE TRANSACTION"");
}
} else {
mDatabase = mDatabaseHelper.getReadableDatabase();
}
}",1,0,0,0,0,0,0,0,0,6,3,10,0,0,0,0,3,2,0,0,2,0.61,7,4
621_10,10,17,"if (mTransactional) {
mDatabase = mDatabaseHelper.getWritableDatabase();
if (mDatabase != null) {
mDatabase.execSQL(""BEGIN EXCLUSIVE TRANSACTION"");
}
} else {
mDatabase = mDatabaseHelper.getReadableDatabase();
}",1,0,0,0,0,0,0,0,0,5,2,8,0,0,0,0,3,2,0,0,0,0.36,8,5
621_11,11,11,mDatabase = mDatabaseHelper.getWritableDatabase();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,9,6
621_12,12,14,"if (mDatabase != null) {
mDatabase.execSQL(""BEGIN EXCLUSIVE TRANSACTION"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,0,0.33,10,7
621_13,13,13,"mDatabase.execSQL(""BEGIN EXCLUSIVE TRANSACTION"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.33,11,8
621_15,15,15,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.21,13,10
621_16,16,16,mDatabase = mDatabaseHelper.getReadableDatabase();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.32,14,10
621_19,19,19,mOpenHandles.add(handle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.78,17,12
621_20,20,20,return mDatabase;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.24,18,12
621_21,21,21,} catch (SQLiteException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,19,13
621_22,22,22,throw new FamiliarDbException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,0,0,0,0.31,20,14
622_1,1,1,throws FamiliarDbException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,4,0,0,0,0.54,7,5
622_2,2,6,"if (mOpenHandles.isEmpty()) {
handle.setInfo(1, mTransactional);
} else {
handle.setInfo(mOpenHandles.get(mOpenHandles.size() - 1).getHandle() + 1, mTransactional);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,1,7,4,0,0,2,0.6,2,1
622_3,3,3,"handle.setInfo(1, mTransactional);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,1,0.43,5,3
622_4,4,4,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.21,4,2
622_5,5,5,"handle.setInfo(mOpenHandles.get(mOpenHandles.size() - 1).getHandle() + 1, mTransactional);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,2,0.61,3,1
622_8,8,23,"try {
if (mOpenHandles.isEmpty()) {
if (mTransactional) {
mDatabase = mDatabaseHelper.getWritableDatabase();
if (mDatabase != null) {
mDatabase.execSQL(""BEGIN EXCLUSIVE TRANSACTION"");
}
} else {
mDatabase = mDatabaseHelper.getReadableDatabase();
}
}
mOpenHandles.add(handle);
return mDatabase;
} catch (SQLiteException e) {
throw new FamiliarDbException(e);
}",0,0,0,0,1,0,0,0,0,11,4,16,0,0,1,0,7,4,0,0,4,0.73,0,0
622_9,9,18,"if (mOpenHandles.isEmpty()) {
if (mTransactional) {
mDatabase = mDatabaseHelper.getWritableDatabase();
if (mDatabase != null) {
mDatabase.execSQL(""BEGIN EXCLUSIVE TRANSACTION"");
}
} else {
mDatabase = mDatabaseHelper.getReadableDatabase();
}
}",1,0,0,0,0,0,0,0,0,6,3,10,0,0,0,0,7,4,0,0,3,0.66,0,0
622_10,10,17,"if (mTransactional) {
mDatabase = mDatabaseHelper.getWritableDatabase();
if (mDatabase != null) {
mDatabase.execSQL(""BEGIN EXCLUSIVE TRANSACTION"");
}
} else {
mDatabase = mDatabaseHelper.getReadableDatabase();
}",1,0,0,0,0,0,0,0,0,5,2,8,0,0,0,0,7,4,0,0,1,0.51,1,0
622_11,11,11,mDatabase = mDatabaseHelper.getWritableDatabase();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,1,0.54,2,1
622_12,12,14,"if (mDatabase != null) {
mDatabase.execSQL(""BEGIN EXCLUSIVE TRANSACTION"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,4,0,0,1,0.47,3,2
622_13,13,13,"mDatabase.execSQL(""BEGIN EXCLUSIVE TRANSACTION"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,1,0.46,4,3
622_15,15,15,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.21,6,5
622_16,16,16,mDatabase = mDatabaseHelper.getReadableDatabase();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,1,0.53,7,5
622_19,19,19,mOpenHandles.add(handle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,2,0.72,10,7
622_20,20,20,return mDatabase;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,4,0,0,1,0.5,11,7
622_21,21,21,} catch (SQLiteException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,1,0.64,12,8
622_22,22,22,throw new FamiliarDbException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,4,0,0,1,0.57,13,9
623_1,1,1,throws FamiliarDbException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,1,0,0,0,0.51,8,6
623_2,2,6,"if (mOpenHandles.isEmpty()) {
handle.setInfo(1, mTransactional);
} else {
handle.setInfo(mOpenHandles.get(mOpenHandles.size() - 1).getHandle() + 1, mTransactional);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,1,3,1,0,0,1,0.43,3,2
623_3,3,3,"handle.setInfo(1, mTransactional);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.27,6,4
623_4,4,4,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.15,5,3
623_5,5,5,"handle.setInfo(mOpenHandles.get(mOpenHandles.size() - 1).getHandle() + 1, mTransactional);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.44,4,2
623_8,8,23,"try {
if (mOpenHandles.isEmpty()) {
if (mTransactional) {
mDatabase = mDatabaseHelper.getWritableDatabase();
if (mDatabase != null) {
mDatabase.execSQL(""BEGIN EXCLUSIVE TRANSACTION"");
}
} else {
mDatabase = mDatabaseHelper.getReadableDatabase();
}
}
mOpenHandles.add(handle);
return mDatabase;
} catch (SQLiteException e) {
throw new FamiliarDbException(e);
}",0,0,0,0,1,0,0,0,0,11,4,16,0,0,1,0,3,1,0,0,3,0.77,0,0
623_9,9,18,"if (mOpenHandles.isEmpty()) {
if (mTransactional) {
mDatabase = mDatabaseHelper.getWritableDatabase();
if (mDatabase != null) {
mDatabase.execSQL(""BEGIN EXCLUSIVE TRANSACTION"");
}
} else {
mDatabase = mDatabaseHelper.getReadableDatabase();
}
}",1,0,0,0,0,0,0,0,0,6,3,10,0,0,0,0,3,1,0,0,2,0.65,0,0
623_10,10,17,"if (mTransactional) {
mDatabase = mDatabaseHelper.getWritableDatabase();
if (mDatabase != null) {
mDatabase.execSQL(""BEGIN EXCLUSIVE TRANSACTION"");
}
} else {
mDatabase = mDatabaseHelper.getReadableDatabase();
}",1,0,0,0,0,0,0,0,0,5,2,8,0,0,0,0,3,1,0,0,1,0.55,0,0
623_11,11,11,mDatabase = mDatabaseHelper.getWritableDatabase();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.59,1,0
623_12,12,14,"if (mDatabase != null) {
mDatabase.execSQL(""BEGIN EXCLUSIVE TRANSACTION"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,1,0,0,1,0.52,2,1
623_13,13,13,"mDatabase.execSQL(""BEGIN EXCLUSIVE TRANSACTION"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.51,3,2
623_15,15,15,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.15,5,4
623_16,16,16,mDatabase = mDatabaseHelper.getReadableDatabase();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.6,6,4
623_19,19,19,mOpenHandles.add(handle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.48,9,6
623_20,20,20,return mDatabase;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.53,10,6
623_21,21,21,} catch (SQLiteException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.51,11,7
623_22,22,22,throw new FamiliarDbException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,1,0,0,1,0.64,12,8
624_1,1,1,        synchronized void closeDatabase(@NonNull FamiliarDbHandle handle) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.57,1,1
624_2,2,10,"if (mOpenHandles.contains(handle)) {
mOpenHandles.remove(handle);
if (mOpenHandles.isEmpty()) {
if (mTransactional) {
mDatabase.execSQL(""COMMIT"");
}
mDatabase.close();
}
}",1,0,0,0,0,0,0,0,0,5,3,9,0,0,0,0,5,4,0,0,3,0.77,0,0
624_3,3,3,mOpenHandles.remove(handle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,3,0.94,0,0
624_4,4,9,"if (mOpenHandles.isEmpty()) {
if (mTransactional) {
mDatabase.execSQL(""COMMIT"");
}
mDatabase.close();
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,0,0,5,4,0,0,2,0.6,1,0
624_5,5,7,"if (mTransactional) {
mDatabase.execSQL(""COMMIT"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,4,0,0,0,0.33,2,1
624_6,6,6,"mDatabase.execSQL(""COMMIT"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.33,3,2
624_8,8,8,mDatabase.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.35,5,4
625_1,1,1,        synchronized void closeDatabase(@NonNull FamiliarDbHandle handle) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,2,0.73,2,2
625_2,2,10,"if (mOpenHandles.contains(handle)) {
mOpenHandles.remove(handle);
if (mOpenHandles.isEmpty()) {
if (mTransactional) {
mDatabase.execSQL(""COMMIT"");
}
mDatabase.close();
}
}",1,0,0,0,0,0,0,0,0,5,3,9,0,0,0,0,2,1,0,0,2,0.71,0,0
625_3,3,3,mOpenHandles.remove(handle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.32,0,0
625_4,4,9,"if (mOpenHandles.isEmpty()) {
if (mTransactional) {
mDatabase.execSQL(""COMMIT"");
}
mDatabase.close();
}",1,0,0,0,0,0,0,0,0,3,2,6,0,0,0,0,2,1,0,0,2,0.78,0,0
625_5,5,7,"if (mTransactional) {
mDatabase.execSQL(""COMMIT"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,1,0,0,1,0.6,1,0
625_6,6,6,"mDatabase.execSQL(""COMMIT"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.64,2,1
625_8,8,8,mDatabase.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,2,1.0,4,3
6163_1,1,1,"public AccessToken getAccessToken(String publicKey, String privateKey, String accessToken)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.62,38,24
6163_2,2,2,throws IOException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,4,3,1,0,0,0.26,37,23
6163_4,4,38,"if (null == mAccessToken) {
HttpURLConnection conn = (HttpURLConnection)
new URL(""https://api.tcgplayer.com/token"").openConnection();
setDefaultOptions(conn, HttpMethod.POST);

conn.setRequestProperty(""Content-Type"", ""application/json"");
conn.setRequestProperty(""Accept"", ""application/json"");
conn.setRequestProperty(""X-Tcg-Access-Token"", accessToken);

String payload = ""grant_type=client_credentials&client_id="" + publicKey +
""&client_secret="" + privateKey;
conn.getOutputStream().write(payload.getBytes(StandardCharsets.UTF_8));

InputStream inStream;
try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new AccessToken();
}
}

GsonBuilder builder = new GsonBuilder();
AccessToken.setDateFormat(builder);
AccessToken token = builder.create()
.fromJson(new InputStreamReader(inStream), AccessToken.class);
this.mAccessToken = token.access_token;

inStream.close();
conn.disconnect();

return token;
}",1,0,0,0,0,0,0,0,0,22,3,35,0,0,1,1,4,3,1,0,3,0.65,1,0
6163_5,5,6,"HttpURLConnection conn = (HttpURLConnection)
new URL(""https://api.tcgplayer.com/token"").openConnection();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,3,1,0,1,0.44,33,21
6163_7,7,7,"setDefaultOptions(conn, HttpMethod.POST);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,1,0,0,0.31,32,20
6163_9,9,9,"conn.setRequestProperty(""Content-Type"", ""application/json"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,4,3,1,0,0,0.28,30,19
6163_10,10,10,"conn.setRequestProperty(""Accept"", ""application/json"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,1,0,0,0.28,29,18
6163_11,11,11,"conn.setRequestProperty(""X-Tcg-Access-Token"", accessToken);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,3,1,0,2,0.61,28,17
6163_13,13,14,"String payload = ""grant_type=client_credentials&client_id="" + publicKey +
""&client_secret="" + privateKey;",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,4,3,1,0,0,0.35,25,16
6163_15,15,15,conn.getOutputStream().write(payload.getBytes(StandardCharsets.UTF_8));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,1,0,0,0.36,24,15
6163_17,17,17,InputStream inStream;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,1,0,0,0.27,22,14
6163_18,18,26,"try {
inStream = conn.getInputStream();
} catch (FileNotFoundException e) {
inStream = conn.getErrorStream();
if (null == inStream) {
conn.disconnect();
return new AccessToken();
}
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,1,4,3,1,0,3,0.62,13,7
6163_19,19,19,inStream = conn.getInputStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.31,20,12
6163_20,20,20,} catch (FileNotFoundException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.28,19,11
6163_21,21,21,inStream = conn.getErrorStream();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.28,18,10
6163_22,22,25,"if (null == inStream) {
conn.disconnect();
return new AccessToken();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,4,3,1,0,3,0.72,14,7
6163_23,23,23,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.32,16,8
6163_24,24,24,return new AccessToken();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,3,0.79,15,7
6163_28,28,28,GsonBuilder builder = new GsonBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,1,0,0,0.25,11,6
6163_29,29,29,AccessToken.setDateFormat(builder);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,2,0.54,10,5
6163_30,30,31,"AccessToken token = builder.create()
.fromJson(new InputStreamReader(inStream), AccessToken.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,4,3,1,0,2,0.58,8,4
6163_32,32,32,this.mAccessToken = token.access_token;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,1,0,2,0.78,7,3
6163_34,34,34,inStream.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,1,0,0,0.25,5,2
6163_35,35,35,conn.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,1,0,0,0.32,4,1
6163_37,37,37,return token;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,1,0,2,0.83,2,0
6163_40,40,40,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,1,0,1,0.6,0,0
6178_1,1,2,"@Override
public void onStop() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,18,13,2,0,0,0.33,2,1
6178_3,3,3,super.onStop();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,18,13,2,0,0,0.29,1,0
6178_5,5,5,Bundle args = new Bundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,18,13,2,0,1,0.54,0,0
6178_6,6,8,"if (mActivity != null) {
mActivity.setFragmentResult(args);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,18,13,2,0,3,0.61,1,0
6178_7,7,7,mActivity.setFragmentResult(args);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,18,13,2,0,2,0.58,2,1
6179_1,1,1,    private void releaseImageResources(boolean isSplit) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,3,0.8,1,0
6179_3,3,5,"if (null != mGlideRequestManager && null != mGlideTarget) {
mGlideRequestManager.clear(mGlideTarget);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,1,0,1,0.31,0,0
6179_4,4,4,mGlideRequestManager.clear(mGlideTarget);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.31,1,0
6179_7,7,10,"if (mCardImageView != null) {
mCardImageView.setImageDrawable(null);
mCardImageView.setImageBitmap(null);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,4,3,1,0,1,0.52,4,2
6179_8,8,8,mCardImageView.setImageDrawable(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.52,5,2
6179_9,9,9,mCardImageView.setImageBitmap(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.53,6,3
6179_12,12,27,"if (!isSplit) {
mNameTextView = null;
mCostTextView = null;
mTypeTextView = null;
mSetTextView = null;
mAbilityTextView = null;
mFlavorTextView = null;
mArtistTextView = null;
mNumberTextView = null;
mPowTouTextView = null;
mTransformButtonDivider = null;
mTransformButton = null;
mCardTextLinearLayout = null;
mCardImageView = null;
mColorIndicatorLayout = null;
}",1,0,0,0,0,0,0,0,0,14,1,16,0,0,1,1,4,3,1,0,1,0.43,9,5
6179_13,13,13,mNameTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.3,10,5
6179_14,14,14,mCostTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.28,11,6
6179_15,15,15,mTypeTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.25,12,7
6179_16,16,16,mSetTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.27,13,8
6179_17,17,17,mAbilityTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.32,14,9
6179_18,18,18,mFlavorTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.31,15,10
6179_19,19,19,mArtistTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.29,16,11
6179_20,20,20,mNumberTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.24,17,12
6179_21,21,21,mPowTouTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.27,18,13
6179_22,22,22,mTransformButtonDivider = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.36,19,14
6179_23,23,23,mTransformButton = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.32,20,15
6179_24,24,24,mCardTextLinearLayout = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.35,21,16
6179_25,25,25,mCardImageView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.48,22,17
6179_26,26,26,mColorIndicatorLayout = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.27,23,18
6179_29,29,29,mDrawableForDialog = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,1,0,0,0.36,26,20
6180_1,1,1,    private void releaseImageResources(boolean isSplit) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.49,5,2
6180_3,3,5,"if (null != mGlideRequestManager && null != mGlideTarget) {
mGlideRequestManager.clear(mGlideTarget);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,1,0.41,1,0
6180_4,4,4,mGlideRequestManager.clear(mGlideTarget);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.44,2,0
6180_7,7,10,"if (mCardImageView != null) {
mCardImageView.setImageDrawable(null);
mCardImageView.setImageBitmap(null);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,2,0,0,2,0.7,0,0
6180_8,8,8,mCardImageView.setImageDrawable(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.69,1,0
6180_9,9,9,mCardImageView.setImageBitmap(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.69,2,1
6180_12,12,27,"if (!isSplit) {
mNameTextView = null;
mCostTextView = null;
mTypeTextView = null;
mSetTextView = null;
mAbilityTextView = null;
mFlavorTextView = null;
mArtistTextView = null;
mNumberTextView = null;
mPowTouTextView = null;
mTransformButtonDivider = null;
mTransformButton = null;
mCardTextLinearLayout = null;
mCardImageView = null;
mColorIndicatorLayout = null;
}",1,0,0,0,0,0,0,0,0,14,1,16,0,0,1,1,3,2,0,0,2,0.62,5,3
6180_13,13,13,mNameTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.51,6,3
6180_14,14,14,mCostTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.52,7,4
6180_15,15,15,mTypeTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.51,8,5
6180_16,16,16,mSetTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.53,9,6
6180_17,17,17,mAbilityTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.53,10,7
6180_18,18,18,mFlavorTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.54,11,8
6180_19,19,19,mArtistTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.54,12,9
6180_20,20,20,mNumberTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.51,13,10
6180_21,21,21,mPowTouTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.56,14,11
6180_22,22,22,mTransformButtonDivider = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.43,15,12
6180_23,23,23,mTransformButton = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.44,16,13
6180_24,24,24,mCardTextLinearLayout = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.46,17,14
6180_25,25,25,mCardImageView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.7,18,15
6180_26,26,26,mColorIndicatorLayout = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.38,19,16
6180_29,29,29,mDrawableForDialog = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.4,22,18
6181_1,1,1,    private void releaseImageResources(boolean isSplit) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.43,10,5
6181_3,3,5,"if (null != mGlideRequestManager && null != mGlideTarget) {
mGlideRequestManager.clear(mGlideTarget);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,3,0,0,1,0.49,6,3
6181_4,4,4,mGlideRequestManager.clear(mGlideTarget);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.35,7,3
6181_7,7,10,"if (mCardImageView != null) {
mCardImageView.setImageDrawable(null);
mCardImageView.setImageBitmap(null);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,6,3,0,0,2,0.56,1,0
6181_8,8,8,mCardImageView.setImageDrawable(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,2,0.55,3,1
6181_9,9,9,mCardImageView.setImageBitmap(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,2,0.55,2,0
6181_12,12,27,"if (!isSplit) {
mNameTextView = null;
mCostTextView = null;
mTypeTextView = null;
mSetTextView = null;
mAbilityTextView = null;
mFlavorTextView = null;
mArtistTextView = null;
mNumberTextView = null;
mPowTouTextView = null;
mTransformButtonDivider = null;
mTransformButton = null;
mCardTextLinearLayout = null;
mCardImageView = null;
mColorIndicatorLayout = null;
}",1,0,0,0,0,0,0,0,0,14,1,16,0,0,1,1,6,3,0,0,3,0.66,0,0
6181_13,13,13,mNameTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.49,1,0
6181_14,14,14,mCostTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.52,2,1
6181_15,15,15,mTypeTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.49,3,2
6181_16,16,16,mSetTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.51,4,3
6181_17,17,17,mAbilityTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.54,5,4
6181_18,18,18,mFlavorTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.53,6,5
6181_19,19,19,mArtistTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.49,7,6
6181_20,20,20,mNumberTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.49,8,7
6181_21,21,21,mPowTouTextView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.52,9,8
6181_22,22,22,mTransformButtonDivider = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.52,10,9
6181_23,23,23,mTransformButton = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.51,11,10
6181_24,24,24,mCardTextLinearLayout = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,2,0.65,12,11
6181_25,25,25,mCardImageView = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,2,0.61,13,12
6181_26,26,26,mColorIndicatorLayout = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.59,14,13
6181_29,29,29,mDrawableForDialog = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,0,0,1,0.51,17,15
6188_1,1,1,public void saveImageWithGlide(int whereTo) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.58,1,0
6188_3,3,6,"if (!Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,4,3,1,0,0,0.4,0,0
6188_4,4,4,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.32,1,0
6188_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.32,2,1
6188_8,8,15,"if (ContextCompat.checkSelfPermission(CardViewFragment.this.mActivity,
Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);
mSaveImageWhereTo = whereTo;
return;
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,1,1,4,3,1,0,3,0.64,5,3
6188_9,9,9,Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.37,6,3
6188_10,10,12,"ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,4,3,1,0,1,0.47,7,4
6188_13,13,13,mSaveImageWhereTo = whereTo;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.81,10,6
6188_14,14,14,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.32,11,6
6188_17,17,17,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,1,0,0,0.32,14,8
6188_19,19,58,"if (null != msi) {
if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}
} else {
runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {
@Override
protected void onDrawableLoaded(Drawable resource) {
try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}
}
}), 0, 0);
}",1,0,0,0,0,0,0,0,0,25,8,40,0,0,1,0,4,3,1,0,2,0.53,16,9
6188_20,20,24,"if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,4,3,1,0,2,0.54,17,9
6188_21,21,21,"shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.49,18,10
6188_22,22,22,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.19,19,11
6188_23,23,23,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.51,20,12
6188_25,25,25,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.19,22,14
6188_26,26,26,"runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.33,23,14
6188_27,27,28,"@Override
protected void onDrawableLoaded(Drawable resource) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,1,0,0,0.32,24,15
6188_29,29,55,"try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}",0,0,0,0,1,0,0,0,0,16,5,27,0,0,0,0,4,3,1,0,2,0.52,26,17
6188_30,30,52,"if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}",1,0,0,0,0,0,0,0,0,13,4,23,0,0,0,0,4,3,1,0,2,0.52,27,17
6188_31,31,34,"String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,4,3,1,0,2,0.54,28,18
6188_36,36,51,"if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}",1,0,0,0,0,0,0,0,0,11,3,16,0,0,1,0,4,3,1,0,2,0.51,33,20
6188_37,37,37,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.41,34,20
6188_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.19,35,21
6188_39,39,39,"getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,1,0,0,0.32,36,22
6188_41,41,50,"if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}",1,0,0,0,0,0,0,0,0,7,2,10,0,0,1,0,4,3,1,0,2,0.52,38,24
6188_42,42,42,shareImage(Uri.parse(url));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.48,39,24
6188_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.19,40,25
6188_44,44,44,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.32,41,26
6188_45,45,49,"if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,4,3,1,0,2,0.51,42,27
6188_46,46,46,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.51,43,28
6188_47,47,47,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.19,44,29
6188_48,48,48,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.5,45,30
6188_53,53,53,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.23,50,32
6188_54,54,54,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.41,51,32
6188_57,57,57,"}), 0, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.29,54,34
6189_1,1,1,public void saveImageWithGlide(int whereTo) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.23,6,3
6189_3,3,6,"if (!Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,3,0,0,0,0.39,1,0
6189_4,4,4,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.35,3,1
6189_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.19,2,0
6189_8,8,15,"if (ContextCompat.checkSelfPermission(CardViewFragment.this.mActivity,
Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);
mSaveImageWhereTo = whereTo;
return;
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,1,1,3,3,0,0,3,0.72,0,0
6189_9,9,9,Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.7,1,0
6189_10,10,12,"ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,3,3,0,0,1,0.59,2,1
6189_13,13,13,mSaveImageWhereTo = whereTo;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.11,5,3
6189_14,14,14,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.19,6,3
6189_17,17,17,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.24,9,5
6189_19,19,58,"if (null != msi) {
if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}
} else {
runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {
@Override
protected void onDrawableLoaded(Drawable resource) {
try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}
}
}), 0, 0);
}",1,0,0,0,0,0,0,0,0,25,8,40,0,0,1,0,3,3,0,0,0,0.41,11,6
6189_20,20,24,"if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,3,3,0,0,0,0.34,12,6
6189_21,21,21,"shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,13,7
6189_22,22,22,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.25,14,8
6189_23,23,23,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,15,9
6189_25,25,25,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.25,17,11
6189_26,26,26,"runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,18,11
6189_27,27,28,"@Override
protected void onDrawableLoaded(Drawable resource) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.43,19,12
6189_29,29,55,"try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}",0,0,0,0,1,0,0,0,0,16,5,27,0,0,0,0,3,3,0,0,0,0.34,21,14
6189_30,30,52,"if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}",1,0,0,0,0,0,0,0,0,13,4,23,0,0,0,0,3,3,0,0,0,0.34,22,14
6189_31,31,34,"String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,3,3,0,0,0,0.33,23,15
6189_36,36,51,"if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}",1,0,0,0,0,0,0,0,0,11,3,16,0,0,1,0,3,3,0,0,0,0.34,28,17
6189_37,37,37,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.34,29,17
6189_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.25,30,18
6189_39,39,39,"getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.34,31,19
6189_41,41,50,"if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}",1,0,0,0,0,0,0,0,0,7,2,10,0,0,1,0,3,3,0,0,0,0.34,33,21
6189_42,42,42,shareImage(Uri.parse(url));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.31,34,21
6189_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.25,35,22
6189_44,44,44,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.24,36,23
6189_45,45,49,"if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,3,3,0,0,0,0.33,37,24
6189_46,46,46,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,38,25
6189_47,47,47,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.25,39,26
6189_48,48,48,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,40,27
6189_53,53,53,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.12,45,29
6189_54,54,54,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.34,46,29
6189_57,57,57,"}), 0, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.16,49,31
6190_1,1,1,public void saveImageWithGlide(int whereTo) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,8,5
6190_3,3,6,"if (!Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,2,2,0,0,0,0.32,3,2
6190_4,4,4,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.31,5,3
6190_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.17,4,2
6190_8,8,15,"if (ContextCompat.checkSelfPermission(CardViewFragment.this.mActivity,
Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);
mSaveImageWhereTo = whereTo;
return;
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,1,1,2,2,0,0,2,0.72,0,0
6190_9,9,9,Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.62,0,0
6190_10,10,12,"ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,2,2,0,0,2,0.72,0,0
6190_13,13,13,mSaveImageWhereTo = whereTo;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.13,3,1
6190_14,14,14,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.17,4,1
6190_17,17,17,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.18,7,3
6190_19,19,58,"if (null != msi) {
if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}
} else {
runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {
@Override
protected void onDrawableLoaded(Drawable resource) {
try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}
}
}), 0, 0);
}",1,0,0,0,0,0,0,0,0,25,8,40,0,0,1,0,2,2,0,0,0,0.37,9,4
6190_20,20,24,"if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,2,2,0,0,0,0.33,10,4
6190_21,21,21,"shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.31,11,5
6190_22,22,22,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,12,6
6190_23,23,23,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.29,13,7
6190_25,25,25,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,15,9
6190_26,26,26,"runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.3,16,9
6190_27,27,28,"@Override
protected void onDrawableLoaded(Drawable resource) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.4,17,10
6190_29,29,55,"try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}",0,0,0,0,1,0,0,0,0,16,5,27,0,0,0,0,2,2,0,0,0,0.32,19,12
6190_30,30,52,"if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}",1,0,0,0,0,0,0,0,0,13,4,23,0,0,0,0,2,2,0,0,0,0.32,20,12
6190_31,31,34,"String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,2,2,0,0,0,0.3,21,13
6190_36,36,51,"if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}",1,0,0,0,0,0,0,0,0,11,3,16,0,0,1,0,2,2,0,0,0,0.32,26,15
6190_37,37,37,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.29,27,15
6190_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,28,16
6190_39,39,39,"getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.32,29,17
6190_41,41,50,"if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}",1,0,0,0,0,0,0,0,0,7,2,10,0,0,1,0,2,2,0,0,0,0.32,31,19
6190_42,42,42,shareImage(Uri.parse(url));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,32,19
6190_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,33,20
6190_44,44,44,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.18,34,21
6190_45,45,49,"if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,2,2,0,0,0,0.31,35,22
6190_46,46,46,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.29,36,23
6190_47,47,47,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,37,24
6190_48,48,48,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.31,38,25
6190_53,53,53,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.17,43,27
6190_54,54,54,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.29,44,27
6190_57,57,57,"}), 0, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.05,47,29
6191_1,1,1,public void saveImageWithGlide(int whereTo) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,2,0.55,15,8
6191_3,3,6,"if (!Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,7,3,2,0,1,0.44,10,5
6191_4,4,4,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.37,12,6
6191_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.21,11,5
6191_8,8,15,"if (ContextCompat.checkSelfPermission(CardViewFragment.this.mActivity,
Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);
mSaveImageWhereTo = whereTo;
return;
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,1,1,7,3,2,0,2,0.48,1,0
6191_9,9,9,Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.31,7,3
6191_10,10,12,"ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,7,3,2,0,1,0.41,4,2
6191_13,13,13,mSaveImageWhereTo = whereTo;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,2,0.73,3,1
6191_14,14,14,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.21,2,0
6191_17,17,17,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,3,2,0,2,0.59,0,0
6191_19,19,58,"if (null != msi) {
if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}
} else {
runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {
@Override
protected void onDrawableLoaded(Drawable resource) {
try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}
}
}), 0, 0);
}",1,0,0,0,0,0,0,0,0,25,8,40,0,0,1,0,7,3,2,0,4,0.58,2,1
6191_20,20,24,"if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,7,3,2,0,4,0.6,3,1
6191_21,21,21,"shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,3,0.62,4,2
6191_22,22,22,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.23,5,3
6191_23,23,23,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,2,0.48,6,4
6191_25,25,25,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.23,8,6
6191_26,26,26,"runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.31,9,6
6191_27,27,28,"@Override
protected void onDrawableLoaded(Drawable resource) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,3,2,0,0,0.34,10,7
6191_29,29,55,"try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}",0,0,0,0,1,0,0,0,0,16,5,27,0,0,0,0,7,3,2,0,4,0.58,12,9
6191_30,30,52,"if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}",1,0,0,0,0,0,0,0,0,13,4,23,0,0,0,0,7,3,2,0,4,0.59,13,9
6191_31,31,34,"String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,7,3,2,0,4,0.62,14,10
6191_36,36,51,"if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}",1,0,0,0,0,0,0,0,0,11,3,16,0,0,1,0,7,3,2,0,4,0.58,19,12
6191_37,37,37,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,1,0.43,20,12
6191_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.23,21,13
6191_39,39,39,"getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,3,2,0,1,0.42,22,14
6191_41,41,50,"if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}",1,0,0,0,0,0,0,0,0,7,2,10,0,0,1,0,7,3,2,0,4,0.59,24,16
6191_42,42,42,shareImage(Uri.parse(url));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,1,0.51,25,16
6191_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.23,26,17
6191_44,44,44,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,2,0,2,0.59,27,18
6191_45,45,49,"if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,7,3,2,0,2,0.48,28,19
6191_46,46,46,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,2,0.48,29,20
6191_47,47,47,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.23,30,21
6191_48,48,48,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,2,0.48,31,22
6191_53,53,53,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.26,36,24
6191_54,54,54,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,1,0.43,37,24
6191_57,57,57,"}), 0, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,0,0.1,40,26
6192_1,1,1,public void saveImageWithGlide(int whereTo) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,2,0.54,17,9
6192_3,3,6,"if (!Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,5,2,3,0,0,0.38,12,6
6192_4,4,4,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,0,0.29,14,7
6192_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,3,0,0,0.23,13,6
6192_8,8,15,"if (ContextCompat.checkSelfPermission(CardViewFragment.this.mActivity,
Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);
mSaveImageWhereTo = whereTo;
return;
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,1,1,5,2,3,0,3,0.58,3,1
6192_9,9,9,Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,0,0.32,9,4
6192_10,10,12,"ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,5,2,3,0,1,0.43,6,3
6192_13,13,13,mSaveImageWhereTo = whereTo;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,2,0.75,5,2
6192_14,14,14,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,3,0,0,0.23,4,1
6192_17,17,17,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,2,3,0,0,0.32,1,0
6192_19,19,58,"if (null != msi) {
if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}
} else {
runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {
@Override
protected void onDrawableLoaded(Drawable resource) {
try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}
}
}), 0, 0);
}",1,0,0,0,0,0,0,0,0,25,8,40,0,0,1,0,5,2,3,0,2,0.48,0,0
6192_20,20,24,"if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,5,2,3,0,2,0.48,1,0
6192_21,21,21,"shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,1,0.45,2,1
6192_22,22,22,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,0,0.17,3,2
6192_23,23,23,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,2,0.46,4,3
6192_25,25,25,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,0,0.17,6,5
6192_26,26,26,"runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,0,0.34,7,5
6192_27,27,28,"@Override
protected void onDrawableLoaded(Drawable resource) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,2,3,0,0,0.32,8,6
6192_29,29,55,"try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}",0,0,0,0,1,0,0,0,0,16,5,27,0,0,0,0,5,2,3,0,2,0.47,10,8
6192_30,30,52,"if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}",1,0,0,0,0,0,0,0,0,13,4,23,0,0,0,0,5,2,3,0,2,0.48,11,8
6192_31,31,34,"String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,5,2,3,0,2,0.49,12,9
6192_36,36,51,"if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}",1,0,0,0,0,0,0,0,0,11,3,16,0,0,1,0,5,2,3,0,2,0.47,17,11
6192_37,37,37,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,1,0.39,18,11
6192_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,0,0.17,19,12
6192_39,39,39,"getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,3,0,0,0.3,20,13
6192_41,41,50,"if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}",1,0,0,0,0,0,0,0,0,7,2,10,0,0,1,0,5,2,3,0,2,0.48,22,15
6192_42,42,42,shareImage(Uri.parse(url));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,1,0.46,23,15
6192_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,0,0.17,24,16
6192_44,44,44,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,3,0,0,0.32,25,17
6192_45,45,49,"if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,5,2,3,0,2,0.46,26,18
6192_46,46,46,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,2,0.46,27,19
6192_47,47,47,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,0,0.17,28,20
6192_48,48,48,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,2,0.46,29,21
6192_53,53,53,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,0,0.23,34,23
6192_54,54,54,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,1,0.39,35,23
6192_57,57,57,"}), 0, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,3,0,0,0.12,38,25
6193_1,1,1,public void saveImageWithGlide(int whereTo) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.6,19,11
6193_3,3,6,"if (!Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,4,3,1,0,0,0.35,14,8
6193_4,4,4,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.3,16,9
6193_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.21,15,8
6193_8,8,15,"if (ContextCompat.checkSelfPermission(CardViewFragment.this.mActivity,
Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);
mSaveImageWhereTo = whereTo;
return;
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,1,1,4,3,1,0,2,0.52,5,3
6193_9,9,9,Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.29,11,6
6193_10,10,12,"ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,4,3,1,0,1,0.4,8,5
6193_13,13,13,mSaveImageWhereTo = whereTo;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.83,7,4
6193_14,14,14,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.21,6,3
6193_17,17,17,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,1,0,0,0.35,3,2
6193_19,19,58,"if (null != msi) {
if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}
} else {
runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {
@Override
protected void onDrawableLoaded(Drawable resource) {
try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}
}
}), 0, 0);
}",1,0,0,0,0,0,0,0,0,25,8,40,0,0,1,0,4,3,1,0,3,0.59,0,0
6193_20,20,24,"if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,4,3,1,0,3,0.62,0,0
6193_21,21,21,"shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.58,0,0
6193_22,22,22,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.26,1,0
6193_23,23,23,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.5,2,1
6193_25,25,25,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.26,4,3
6193_26,26,26,"runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.32,5,3
6193_27,27,28,"@Override
protected void onDrawableLoaded(Drawable resource) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,1,0,0,0.35,6,4
6193_29,29,55,"try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}",0,0,0,0,1,0,0,0,0,16,5,27,0,0,0,0,4,3,1,0,3,0.59,8,6
6193_30,30,52,"if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}",1,0,0,0,0,0,0,0,0,13,4,23,0,0,0,0,4,3,1,0,3,0.59,9,6
6193_31,31,34,"String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,4,3,1,0,2,0.54,10,7
6193_36,36,51,"if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}",1,0,0,0,0,0,0,0,0,11,3,16,0,0,1,0,4,3,1,0,3,0.58,15,9
6193_37,37,37,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.42,16,9
6193_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.26,17,10
6193_39,39,39,"getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,1,0,0,0.31,18,11
6193_41,41,50,"if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}",1,0,0,0,0,0,0,0,0,7,2,10,0,0,1,0,4,3,1,0,3,0.6,20,13
6193_42,42,42,shareImage(Uri.parse(url));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.64,21,13
6193_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.26,22,14
6193_44,44,44,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.35,23,15
6193_45,45,49,"if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,4,3,1,0,2,0.51,24,16
6193_46,46,46,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.5,25,17
6193_47,47,47,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.26,26,18
6193_48,48,48,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.51,27,19
6193_53,53,53,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.18,32,21
6193_54,54,54,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.42,33,21
6193_57,57,57,"}), 0, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.07,36,23
6194_1,1,1,public void saveImageWithGlide(int whereTo) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.47,21,13
6194_3,3,6,"if (!Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,3,0,0,0,0.41,16,10
6194_4,4,4,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.39,18,11
6194_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.19,17,10
6194_8,8,15,"if (ContextCompat.checkSelfPermission(CardViewFragment.this.mActivity,
Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);
mSaveImageWhereTo = whereTo;
return;
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,1,1,3,3,0,0,1,0.45,7,5
6194_9,9,9,Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,13,8
6194_10,10,12,"ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,3,3,0,0,0,0.33,10,7
6194_13,13,13,mSaveImageWhereTo = whereTo;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.6,9,6
6194_14,14,14,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.19,8,5
6194_17,17,17,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.35,5,4
6194_19,19,58,"if (null != msi) {
if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}
} else {
runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {
@Override
protected void onDrawableLoaded(Drawable resource) {
try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}
}
}), 0, 0);
}",1,0,0,0,0,0,0,0,0,25,8,40,0,0,1,0,3,3,0,0,2,0.6,0,0
6194_20,20,24,"if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,3,3,0,0,2,0.61,0,0
6194_21,21,21,"shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,1,1
6194_22,22,22,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.23,0,0
6194_23,23,23,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.63,0,0
6194_25,25,25,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.23,2,1
6194_26,26,26,"runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.29,3,1
6194_27,27,28,"@Override
protected void onDrawableLoaded(Drawable resource) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.27,4,2
6194_29,29,55,"try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}",0,0,0,0,1,0,0,0,0,16,5,27,0,0,0,0,3,3,0,0,2,0.6,6,4
6194_30,30,52,"if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}",1,0,0,0,0,0,0,0,0,13,4,23,0,0,0,0,3,3,0,0,2,0.6,7,4
6194_31,31,34,"String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,3,3,0,0,1,0.49,8,5
6194_36,36,51,"if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}",1,0,0,0,0,0,0,0,0,11,3,16,0,0,1,0,3,3,0,0,2,0.6,13,7
6194_37,37,37,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.51,14,7
6194_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.23,15,8
6194_39,39,39,"getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.32,16,9
6194_41,41,50,"if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}",1,0,0,0,0,0,0,0,0,7,2,10,0,0,1,0,3,3,0,0,2,0.61,18,11
6194_42,42,42,shareImage(Uri.parse(url));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.34,19,11
6194_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.23,20,12
6194_44,44,44,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.35,21,13
6194_45,45,49,"if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,3,3,0,0,2,0.61,22,14
6194_46,46,46,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.63,23,15
6194_47,47,47,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.23,24,16
6194_48,48,48,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.51,25,17
6194_53,53,53,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.22,30,19
6194_54,54,54,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.51,31,19
6194_57,57,57,"}), 0, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.13,34,21
6195_1,1,1,public void saveImageWithGlide(int whereTo) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,2,0.75,29,19
6195_3,3,6,"if (!Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,2,1,1,0,0,0.33,24,16
6195_4,4,4,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.29,26,17
6195_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.15,25,16
6195_8,8,15,"if (ContextCompat.checkSelfPermission(CardViewFragment.this.mActivity,
Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);
mSaveImageWhereTo = whereTo;
return;
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,1,1,2,1,1,0,2,0.64,15,11
6195_9,9,9,Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.23,21,14
6195_10,10,12,"ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,2,1,1,0,1,0.46,18,13
6195_13,13,13,mSaveImageWhereTo = whereTo;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,2,1.0,17,12
6195_14,14,14,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.15,16,11
6195_17,17,17,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,1,1,0,0,0.33,13,10
6195_19,19,58,"if (null != msi) {
if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}
} else {
runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {
@Override
protected void onDrawableLoaded(Drawable resource) {
try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}
}
}), 0, 0);
}",1,0,0,0,0,0,0,0,0,25,8,40,0,0,1,0,2,1,1,0,2,0.66,0,0
6195_20,20,24,"if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,2,1,1,0,2,0.68,6,5
6195_21,21,21,"shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.56,9,7
6195_22,22,22,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.19,8,6
6195_23,23,23,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,2,0.66,7,5
6195_25,25,25,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.19,5,4
6195_26,26,26,"runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.34,4,3
6195_27,27,28,"@Override
protected void onDrawableLoaded(Drawable resource) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,1,0,0,0.35,2,2
6195_29,29,55,"try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}",0,0,0,0,1,0,0,0,0,16,5,27,0,0,0,0,2,1,1,0,2,0.66,0,0
6195_30,30,52,"if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}",1,0,0,0,0,0,0,0,0,13,4,23,0,0,0,0,2,1,1,0,2,0.66,0,0
6195_31,31,34,"String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,2,1,1,0,2,0.68,0,0
6195_36,36,51,"if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}",1,0,0,0,0,0,0,0,0,11,3,16,0,0,1,0,2,1,1,0,2,0.65,5,1
6195_37,37,37,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.49,6,1
6195_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.19,7,2
6195_39,39,39,"getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,1,0,0,0.3,8,3
6195_41,41,50,"if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}",1,0,0,0,0,0,0,0,0,7,2,10,0,0,1,0,2,1,1,0,2,0.66,10,5
6195_42,42,42,shareImage(Uri.parse(url));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.6,11,5
6195_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.19,12,6
6195_44,44,44,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.33,13,7
6195_45,45,49,"if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,2,1,1,0,2,0.66,14,8
6195_46,46,46,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,2,0.66,15,9
6195_47,47,47,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.19,16,10
6195_48,48,48,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,2,0.66,17,11
6195_53,53,53,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.19,22,13
6195_54,54,54,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.49,23,13
6195_57,57,57,"}), 0, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.09,26,15
6196_1,1,1,public void saveImageWithGlide(int whereTo) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,2,0.61,37,23
6196_3,3,6,"if (!Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,5,3,1,0,0,0.36,32,20
6196_4,4,4,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.34,34,21
6196_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.13,33,20
6196_8,8,15,"if (ContextCompat.checkSelfPermission(CardViewFragment.this.mActivity,
Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);
mSaveImageWhereTo = whereTo;
return;
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,1,1,5,3,1,0,3,0.63,23,15
6196_9,9,9,Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.39,29,18
6196_10,10,12,"ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,5,3,1,0,2,0.51,26,17
6196_13,13,13,mSaveImageWhereTo = whereTo;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,2,0.72,25,16
6196_14,14,14,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.13,24,15
6196_17,17,17,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,3,1,0,0,0.31,21,14
6196_19,19,58,"if (null != msi) {
if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}
} else {
runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {
@Override
protected void onDrawableLoaded(Drawable resource) {
try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}
}
}), 0, 0);
}",1,0,0,0,0,0,0,0,0,25,8,40,0,0,1,0,5,3,1,0,3,0.58,0,0
6196_20,20,24,"if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,5,3,1,0,2,0.5,14,9
6196_21,21,21,"shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.45,17,11
6196_22,22,22,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.17,16,10
6196_23,23,23,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,2,0.49,15,9
6196_25,25,25,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.17,13,8
6196_26,26,26,"runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.53,12,7
6196_27,27,28,"@Override
protected void onDrawableLoaded(Drawable resource) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,1,0,0,0.4,10,6
6196_29,29,55,"try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}",0,0,0,0,1,0,0,0,0,16,5,27,0,0,0,0,5,3,1,0,3,0.57,0,0
6196_30,30,52,"if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}",1,0,0,0,0,0,0,0,0,13,4,23,0,0,0,0,5,3,1,0,3,0.57,0,0
6196_31,31,34,"String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,5,3,1,0,2,0.5,4,3
6196_36,36,51,"if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}",1,0,0,0,0,0,0,0,0,11,3,16,0,0,1,0,5,3,1,0,3,0.56,0,0
6196_37,37,37,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.43,1,1
6196_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.17,0,0
6196_39,39,39,"getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,1,0,1,0.44,0,0
6196_41,41,50,"if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}",1,0,0,0,0,0,0,0,0,7,2,10,0,0,1,0,5,3,1,0,2,0.5,2,1
6196_42,42,42,shareImage(Uri.parse(url));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.48,3,1
6196_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.17,4,2
6196_44,44,44,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.31,5,3
6196_45,45,49,"if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,5,3,1,0,2,0.49,6,4
6196_46,46,46,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,2,0.49,7,5
6196_47,47,47,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.17,8,6
6196_48,48,48,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,2,0.5,9,7
6196_53,53,53,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.28,14,9
6196_54,54,54,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.43,15,9
6196_57,57,57,"}), 0, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.07,18,11
6197_1,1,1,public void saveImageWithGlide(int whereTo) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.66,39,24
6197_3,3,6,"if (!Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,4,2,1,0,0,0.41,34,21
6197_4,4,4,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.4,36,22
6197_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.14,35,21
6197_8,8,15,"if (ContextCompat.checkSelfPermission(CardViewFragment.this.mActivity,
Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);
mSaveImageWhereTo = whereTo;
return;
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,1,1,4,2,1,0,2,0.56,25,16
6197_9,9,9,Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.29,31,19
6197_10,10,12,"ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,4,2,1,0,1,0.47,28,18
6197_13,13,13,mSaveImageWhereTo = whereTo;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.82,27,17
6197_14,14,14,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.14,26,16
6197_17,17,17,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.34,23,15
6197_19,19,58,"if (null != msi) {
if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}
} else {
runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {
@Override
protected void onDrawableLoaded(Drawable resource) {
try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}
}
}), 0, 0);
}",1,0,0,0,0,0,0,0,0,25,8,40,0,0,1,0,4,2,1,0,3,0.66,0,0
6197_20,20,24,"if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,4,2,1,0,2,0.6,16,10
6197_21,21,21,"shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.5,19,12
6197_22,22,22,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.2,18,11
6197_23,23,23,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.59,17,10
6197_25,25,25,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.2,15,9
6197_26,26,26,"runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.39,14,8
6197_27,27,28,"@Override
protected void onDrawableLoaded(Drawable resource) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,0,0.4,12,7
6197_29,29,55,"try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}",0,0,0,0,1,0,0,0,0,16,5,27,0,0,0,0,4,2,1,0,3,0.66,0,0
6197_30,30,52,"if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}",1,0,0,0,0,0,0,0,0,13,4,23,0,0,0,0,4,2,1,0,3,0.67,0,0
6197_31,31,34,"String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,4,2,1,0,2,0.59,6,4
6197_36,36,51,"if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}",1,0,0,0,0,0,0,0,0,11,3,16,0,0,1,0,4,2,1,0,3,0.66,0,0
6197_37,37,37,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.52,3,2
6197_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.2,2,1
6197_39,39,39,"getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,1,0.53,1,0
6197_41,41,50,"if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}",1,0,0,0,0,0,0,0,0,7,2,10,0,0,1,0,4,2,1,0,2,0.59,0,0
6197_42,42,42,shareImage(Uri.parse(url));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.55,1,0
6197_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.2,2,1
6197_44,44,44,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.34,3,2
6197_45,45,49,"if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,4,2,1,0,2,0.59,4,3
6197_46,46,46,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.59,5,4
6197_47,47,47,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.2,6,5
6197_48,48,48,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.6,7,6
6197_53,53,53,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.2,12,8
6197_54,54,54,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.52,13,8
6197_57,57,57,"}), 0, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.14,16,10
6198_1,1,1,public void saveImageWithGlide(int whereTo) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.6,40,25
6198_3,3,6,"if (!Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,4,3,1,0,0,0.35,35,22
6198_4,4,4,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.3,37,23
6198_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.21,36,22
6198_8,8,15,"if (ContextCompat.checkSelfPermission(CardViewFragment.this.mActivity,
Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);
mSaveImageWhereTo = whereTo;
return;
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,1,1,4,3,1,0,2,0.52,26,17
6198_9,9,9,Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.29,32,20
6198_10,10,12,"ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,4,3,1,0,1,0.4,29,19
6198_13,13,13,mSaveImageWhereTo = whereTo;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.83,28,18
6198_14,14,14,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.21,27,17
6198_17,17,17,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,1,0,0,0.35,24,16
6198_19,19,58,"if (null != msi) {
if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}
} else {
runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {
@Override
protected void onDrawableLoaded(Drawable resource) {
try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}
}
}), 0, 0);
}",1,0,0,0,0,0,0,0,0,25,8,40,0,0,1,0,4,3,1,0,3,0.59,0,0
6198_20,20,24,"if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,4,3,1,0,3,0.62,17,11
6198_21,21,21,"shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.58,20,13
6198_22,22,22,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.26,19,12
6198_23,23,23,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.5,18,11
6198_25,25,25,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.26,16,10
6198_26,26,26,"runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.32,15,9
6198_27,27,28,"@Override
protected void onDrawableLoaded(Drawable resource) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,1,0,0,0.35,13,8
6198_29,29,55,"try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}",0,0,0,0,1,0,0,0,0,16,5,27,0,0,0,0,4,3,1,0,3,0.59,0,0
6198_30,30,52,"if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}",1,0,0,0,0,0,0,0,0,13,4,23,0,0,0,0,4,3,1,0,3,0.59,0,0
6198_31,31,34,"String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,4,3,1,0,2,0.54,7,5
6198_36,36,51,"if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}",1,0,0,0,0,0,0,0,0,11,3,16,0,0,1,0,4,3,1,0,3,0.58,0,0
6198_37,37,37,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.42,4,3
6198_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.26,3,2
6198_39,39,39,"getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,1,0,0,0.31,2,1
6198_41,41,50,"if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}",1,0,0,0,0,0,0,0,0,7,2,10,0,0,1,0,4,3,1,0,3,0.6,0,0
6198_42,42,42,shareImage(Uri.parse(url));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.64,0,0
6198_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.26,1,0
6198_44,44,44,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.35,2,1
6198_45,45,49,"if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,4,3,1,0,2,0.51,3,2
6198_46,46,46,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.5,4,3
6198_47,47,47,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.26,5,4
6198_48,48,48,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.51,6,5
6198_53,53,53,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.18,11,7
6198_54,54,54,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.42,12,7
6198_57,57,57,"}), 0, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.07,15,9
6199_1,1,1,public void saveImageWithGlide(int whereTo) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.47,42,27
6199_3,3,6,"if (!Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,3,0,0,0,0.41,37,24
6199_4,4,4,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_no_external_storage, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.39,39,25
6199_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.19,38,24
6199_8,8,15,"if (ContextCompat.checkSelfPermission(CardViewFragment.this.mActivity,
Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);
mSaveImageWhereTo = whereTo;
return;
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,1,1,3,3,0,0,1,0.45,28,19
6199_9,9,9,Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,34,22
6199_10,10,12,"ActivityCompat.requestPermissions(CardViewFragment.this.mActivity,
new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
FamiliarActivity.REQUEST_WRITE_EXTERNAL_STORAGE_IMAGE);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,3,3,0,0,0,0.33,31,21
6199_13,13,13,mSaveImageWhereTo = whereTo;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.6,30,20
6199_14,14,14,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.19,29,19
6199_17,17,17,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.35,26,18
6199_19,19,58,"if (null != msi) {
if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}
} else {
runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {
@Override
protected void onDrawableLoaded(Drawable resource) {
try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}
}
}), 0, 0);
}",1,0,0,0,0,0,0,0,0,25,8,40,0,0,1,0,3,3,0,0,2,0.6,0,0
6199_20,20,24,"if (SHARE == whereTo) {
shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,3,3,0,0,2,0.61,19,13
6199_21,21,21,"shareImage(Uri.parse(MediaStore.Images.Media.getContentUri(""external"") + ""/"" + msi.getId()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,22,15
6199_22,22,22,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.23,21,14
6199_23,23,23,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.63,20,13
6199_25,25,25,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.23,18,12
6199_26,26,26,"runGlideTarget(new FamiliarGlideTarget(this, new FamiliarGlideTarget.DrawableLoadedCallback() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.29,17,11
6199_27,27,28,"@Override
protected void onDrawableLoaded(Drawable resource) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.27,15,10
6199_29,29,55,"try {
if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}
} catch (Exception e) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
}",0,0,0,0,1,0,0,0,0,16,5,27,0,0,0,0,3,3,0,0,2,0.6,0,0
6199_30,30,52,"if (resource instanceof BitmapDrawable) {
String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());

if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}
}",1,0,0,0,0,0,0,0,0,13,4,23,0,0,0,0,3,3,0,0,2,0.6,0,0
6199_31,31,34,"String url = MediaStore.Images.Media.insertImage(
getContext().getContentResolver(),
((BitmapDrawable) resource).getBitmap(),
getSavedFileName(), mCard.getName() + "" - "" + mCard.getSetName());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,3,3,0,0,1,0.49,9,7
6199_36,36,51,"if (null == url) {
SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);
} else {
getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));

if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}
}",1,0,0,0,0,0,0,0,0,11,3,16,0,0,1,0,3,3,0,0,2,0.6,0,0
6199_37,37,37,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.51,6,5
6199_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.23,5,4
6199_39,39,39,"getFamiliarActivity().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(url)));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.32,4,3
6199_41,41,50,"if (SHARE == whereTo) {
shareImage(Uri.parse(url));
} else {
MediaStoreInfo msi = getMediaStoreInfo();
if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}
}",1,0,0,0,0,0,0,0,0,7,2,10,0,0,1,0,3,3,0,0,2,0.61,0,0
6199_42,42,42,shareImage(Uri.parse(url));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.34,1,1
6199_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.23,0,0
6199_44,44,44,MediaStoreInfo msi = getMediaStoreInfo();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.35,0,0
6199_45,45,49,"if (null != msi) {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);
} else {
SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,3,3,0,0,2,0.61,1,0
6199_46,46,46,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + msi.getFilePath(), SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.63,2,1
6199_47,47,47,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.23,3,2
6199_48,48,48,"SnackbarWrapper.makeAndShowText(getActivity(), getString(R.string.card_view_image_saved) + url, SnackbarWrapper.LENGTH_LONG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.51,4,3
6199_53,53,53,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.22,9,5
6199_54,54,54,"SnackbarWrapper.makeAndShowText(getActivity(), R.string.card_view_save_failure, SnackbarWrapper.LENGTH_SHORT);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.51,10,5
6199_57,57,57,"}), 0, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.13,13,7
6200_1,1,1,"private void runGlideTarget(FamiliarGlideTarget familiarGlideTarget, int width, int height) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.29,0,0
6200_2,2,2,String cardLanguage = PreferenceAdapter.getCardLanguage(getContext());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,3,0.89,0,0
6200_3,3,5,"if (cardLanguage == null) {
cardLanguage = ""en"";
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,1,1,0,2,0.79,1,0
6200_4,4,4,"cardLanguage = ""en"";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,2,0.81,2,1
6200_7,7,14,"if (null == mGlideRequestManager) {
mGlideRequestManager = GlideApp.with(this);
} else {
if (null != mGlideTarget) {
mGlideRequestManager.clear(mGlideTarget);
mGlideTarget = null;
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,0,1,1,3,1,1,0,0,0.33,5,3
6200_8,8,8,mGlideRequestManager = GlideApp.with(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.33,6,3
6200_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.23,7,4
6200_10,10,13,"if (null != mGlideTarget) {
mGlideRequestManager.clear(mGlideTarget);
mGlideTarget = null;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,3,1,1,0,0,0.3,8,5
6200_11,11,11,mGlideRequestManager.clear(mGlideTarget);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.29,9,6
6200_12,12,12,mGlideTarget = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.26,10,7
6200_16,16,16,"mGlideTarget = runGlideRequest(0, cardLanguage, width, height, true, familiarGlideTarget);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,1,0,2,0.6,14,9
6201_1,1,1,"private void runGlideTarget(FamiliarGlideTarget familiarGlideTarget, int width, int height) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,5,3
6201_2,2,2,String cardLanguage = PreferenceAdapter.getCardLanguage(getContext());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.29,4,2
6201_3,3,5,"if (cardLanguage == null) {
cardLanguage = ""en"";
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,3,0,0,0,0.28,1,0
6201_4,4,4,"cardLanguage = ""en"";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.28,2,0
6201_7,7,14,"if (null == mGlideRequestManager) {
mGlideRequestManager = GlideApp.with(this);
} else {
if (null != mGlideTarget) {
mGlideRequestManager.clear(mGlideTarget);
mGlideTarget = null;
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,0,1,1,3,3,0,0,0,0.26,0,0
6201_8,8,8,mGlideRequestManager = GlideApp.with(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.27,1,0
6201_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.11,2,1
6201_10,10,13,"if (null != mGlideTarget) {
mGlideRequestManager.clear(mGlideTarget);
mGlideTarget = null;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,3,3,0,0,0,0.25,3,2
6201_11,11,11,mGlideRequestManager.clear(mGlideTarget);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.24,4,3
6201_12,12,12,mGlideTarget = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.22,5,4
6201_16,16,16,"mGlideTarget = runGlideRequest(0, cardLanguage, width, height, true, familiarGlideTarget);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.34,9,6
6202_1,1,1,"private void runGlideTarget(FamiliarGlideTarget familiarGlideTarget, int width, int height) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.51,14,9
6202_2,2,2,String cardLanguage = PreferenceAdapter.getCardLanguage(getContext());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,0,0.26,13,8
6202_3,3,5,"if (cardLanguage == null) {
cardLanguage = ""en"";
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,1,1,0,0,0.28,10,6
6202_4,4,4,"cardLanguage = ""en"";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.3,11,6
6202_7,7,14,"if (null == mGlideRequestManager) {
mGlideRequestManager = GlideApp.with(this);
} else {
if (null != mGlideTarget) {
mGlideRequestManager.clear(mGlideTarget);
mGlideTarget = null;
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,0,1,1,3,1,1,0,1,0.48,1,0
6202_8,8,8,mGlideRequestManager = GlideApp.with(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.49,7,4
6202_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.24,6,3
6202_10,10,13,"if (null != mGlideTarget) {
mGlideRequestManager.clear(mGlideTarget);
mGlideTarget = null;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,3,1,1,0,1,0.45,2,0
6202_11,11,11,mGlideRequestManager.clear(mGlideTarget);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.5,4,1
6202_12,12,12,mGlideTarget = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.26,3,0
6202_16,16,16,"mGlideTarget = runGlideRequest(0, cardLanguage, width, height, true, familiarGlideTarget);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,1,1,0,2,0.6,0,0
6203_1,1,2,"private Target<Drawable> runGlideRequest(int attempt, String cardLanguage, int width, int height,
boolean onlyCheckCache, Target<Drawable> target) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,2,0.47,11,6
6203_3,3,32,"GlideRequest<Drawable> request = mGlideRequestManager
.load(mCard.getImageUrlString(attempt, cardLanguage))
.diskCacheStrategy(DiskCacheStrategy.ALL)
.listener(new RequestListener<Drawable>() {
@Override
public boolean onLoadFailed(@Nullable GlideException e, Object model, Target<Drawable> target, boolean isFirstResource) {
String thisUrl = mCard.getImageUrlString(attempt, cardLanguage);
String nextUrl = mCard.getImageUrlString(attempt + 1, cardLanguage);
if (thisUrl.equals(nextUrl)) {
if (onlyCheckCache) {
if (FamiliarActivity.getNetworkState(getActivity(), true) == -1) {
return false;
} else {
(new Handler()).post(() -> runGlideRequest(0, cardLanguage, width, height, false, target));
return true;
}
} else {
return false;
}
} else {
(new Handler()).post(() -> runGlideRequest(attempt + 1, cardLanguage, width, height, onlyCheckCache, target));
return true;
}
}

@Override
public boolean onResourceReady(Drawable resource, Object model, Target<Drawable> target, DataSource dataSource, boolean isFirstResource) {
return false;
}
});",0,0,0,0,0,1,0,0,0,10,5,30,0,0,0,1,6,5,1,0,5,0.66,0,0
6203_9,9,9,"String thisUrl = mCard.getImageUrlString(attempt, cardLanguage);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,6,5,1,0,0,0.3,4,4
6203_10,10,10,"String nextUrl = mCard.getImageUrlString(attempt + 1, cardLanguage);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,5,1,0,0,0.29,3,3
6203_11,11,25,"if (thisUrl.equals(nextUrl)) {
if (onlyCheckCache) {
if (FamiliarActivity.getNetworkState(getActivity(), true) == -1) {
return false;
} else {
(new Handler()).post(() -> runGlideRequest(0, cardLanguage, width, height, false, target));
return true;
}
} else {
return false;
}
} else {
(new Handler()).post(() -> runGlideRequest(attempt + 1, cardLanguage, width, height, onlyCheckCache, target));
return true;
}",1,0,0,0,0,0,0,0,0,6,3,15,0,1,0,0,6,5,1,0,5,0.69,0,0
6203_12,12,21,"if (onlyCheckCache) {
if (FamiliarActivity.getNetworkState(getActivity(), true) == -1) {
return false;
} else {
(new Handler()).post(() -> runGlideRequest(0, cardLanguage, width, height, false, target));
return true;
}
} else {
return false;
}",1,0,0,0,0,0,0,0,0,4,2,10,0,0,0,0,6,5,1,0,5,0.72,0,0
6203_13,13,18,"if (FamiliarActivity.getNetworkState(getActivity(), true) == -1) {
return false;
} else {
(new Handler()).post(() -> runGlideRequest(0, cardLanguage, width, height, false, target));
return true;
}",1,0,0,0,0,0,0,0,0,2,1,6,0,0,0,0,6,5,1,0,3,0.57,0,0
6203_14,14,14,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,1,0,2,0.72,0,0
6203_17,17,17,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.56,3,1
6203_20,20,20,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,1,0,2,0.72,6,2
6203_24,24,24,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.56,10,3
6203_30,30,30,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,1,0,2,0.72,16,4
6203_34,34,36,"if (onlyCheckCache) {
request = request.onlyRetrieveFromCache(true);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,5,1,0,2,0.59,20,5
6203_35,35,35,request = request.onlyRetrieveFromCache(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,1,0.45,21,5
6203_38,38,42,"if (0 != width && 0 != height) {
request = request
.override(width, height)
.fitCenter();
}",1,0,0,0,0,0,0,0,0,2,1,5,0,0,1,1,6,5,1,0,0,0.28,24,7
6203_39,39,40,"request = request
.override(width, height)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,1,0,0,0.28,25,7
6203_41,41,41,.fitCenter();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,1,0,0,0.22,27,9
6203_44,44,44,return request.into(target);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,5,1,0,1,0.49,30,10
6204_1,1,2,"private Target<Drawable> runGlideRequest(int attempt, String cardLanguage, int width, int height,
boolean onlyCheckCache, Target<Drawable> target) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,3,0.69,31,11
6204_3,3,32,"GlideRequest<Drawable> request = mGlideRequestManager
.load(mCard.getImageUrlString(attempt, cardLanguage))
.diskCacheStrategy(DiskCacheStrategy.ALL)
.listener(new RequestListener<Drawable>() {
@Override
public boolean onLoadFailed(@Nullable GlideException e, Object model, Target<Drawable> target, boolean isFirstResource) {
String thisUrl = mCard.getImageUrlString(attempt, cardLanguage);
String nextUrl = mCard.getImageUrlString(attempt + 1, cardLanguage);
if (thisUrl.equals(nextUrl)) {
if (onlyCheckCache) {
if (FamiliarActivity.getNetworkState(getActivity(), true) == -1) {
return false;
} else {
(new Handler()).post(() -> runGlideRequest(0, cardLanguage, width, height, false, target));
return true;
}
} else {
return false;
}
} else {
(new Handler()).post(() -> runGlideRequest(attempt + 1, cardLanguage, width, height, onlyCheckCache, target));
return true;
}
}

@Override
public boolean onResourceReady(Drawable resource, Object model, Target<Drawable> target, DataSource dataSource, boolean isFirstResource) {
return false;
}
});",0,0,0,0,0,1,0,0,0,10,5,30,0,0,0,1,3,2,1,0,3,0.66,1,0
6204_9,9,9,"String thisUrl = mCard.getImageUrlString(attempt, cardLanguage);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,3,2,1,0,0,0.26,24,9
6204_10,10,10,"String nextUrl = mCard.getImageUrlString(attempt + 1, cardLanguage);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,2,1,0,0,0.26,23,8
6204_11,11,25,"if (thisUrl.equals(nextUrl)) {
if (onlyCheckCache) {
if (FamiliarActivity.getNetworkState(getActivity(), true) == -1) {
return false;
} else {
(new Handler()).post(() -> runGlideRequest(0, cardLanguage, width, height, false, target));
return true;
}
} else {
return false;
}
} else {
(new Handler()).post(() -> runGlideRequest(attempt + 1, cardLanguage, width, height, onlyCheckCache, target));
return true;
}",1,0,0,0,0,0,0,0,0,6,3,15,0,1,0,0,3,2,1,0,3,0.65,8,1
6204_12,12,21,"if (onlyCheckCache) {
if (FamiliarActivity.getNetworkState(getActivity(), true) == -1) {
return false;
} else {
(new Handler()).post(() -> runGlideRequest(0, cardLanguage, width, height, false, target));
return true;
}
} else {
return false;
}",1,0,0,0,0,0,0,0,0,4,2,10,0,0,0,0,3,2,1,0,3,0.64,12,2
6204_13,13,18,"if (FamiliarActivity.getNetworkState(getActivity(), true) == -1) {
return false;
} else {
(new Handler()).post(() -> runGlideRequest(0, cardLanguage, width, height, false, target));
return true;
}",1,0,0,0,0,0,0,0,0,2,1,6,0,0,0,0,3,2,1,0,1,0.39,15,3
6204_14,14,14,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.2,19,4
6204_17,17,17,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.15,16,3
6204_20,20,20,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.2,13,2
6204_24,24,24,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.15,9,1
6204_30,30,30,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.2,3,0
6204_34,34,36,"if (onlyCheckCache) {
request = request.onlyRetrieveFromCache(true);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,1,0,3,0.89,0,0
6204_35,35,35,request = request.onlyRetrieveFromCache(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,2,0.7,1,0
6204_38,38,42,"if (0 != width && 0 != height) {
request = request
.override(width, height)
.fitCenter();
}",1,0,0,0,0,0,0,0,0,2,1,5,0,0,1,1,3,2,1,0,1,0.44,4,2
6204_39,39,40,"request = request
.override(width, height)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,1,0.53,5,2
6204_41,41,41,.fitCenter();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.21,7,4
6204_44,44,44,return request.into(target);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,2,1,0,1,0.51,10,5
6205_1,1,2,"private Target<Drawable> runGlideRequest(int attempt, String cardLanguage, int width, int height,
boolean onlyCheckCache, Target<Drawable> target) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,1,0.5,35,13
6205_3,3,32,"GlideRequest<Drawable> request = mGlideRequestManager
.load(mCard.getImageUrlString(attempt, cardLanguage))
.diskCacheStrategy(DiskCacheStrategy.ALL)
.listener(new RequestListener<Drawable>() {
@Override
public boolean onLoadFailed(@Nullable GlideException e, Object model, Target<Drawable> target, boolean isFirstResource) {
String thisUrl = mCard.getImageUrlString(attempt, cardLanguage);
String nextUrl = mCard.getImageUrlString(attempt + 1, cardLanguage);
if (thisUrl.equals(nextUrl)) {
if (onlyCheckCache) {
if (FamiliarActivity.getNetworkState(getActivity(), true) == -1) {
return false;
} else {
(new Handler()).post(() -> runGlideRequest(0, cardLanguage, width, height, false, target));
return true;
}
} else {
return false;
}
} else {
(new Handler()).post(() -> runGlideRequest(attempt + 1, cardLanguage, width, height, onlyCheckCache, target));
return true;
}
}

@Override
public boolean onResourceReady(Drawable resource, Object model, Target<Drawable> target, DataSource dataSource, boolean isFirstResource) {
return false;
}
});",0,0,0,0,0,1,0,0,0,10,5,30,0,0,0,1,3,2,1,0,1,0.53,5,2
6205_9,9,9,"String thisUrl = mCard.getImageUrlString(attempt, cardLanguage);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,3,2,1,0,0,0.39,28,11
6205_10,10,10,"String nextUrl = mCard.getImageUrlString(attempt + 1, cardLanguage);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,2,1,0,0,0.37,27,10
6205_11,11,25,"if (thisUrl.equals(nextUrl)) {
if (onlyCheckCache) {
if (FamiliarActivity.getNetworkState(getActivity(), true) == -1) {
return false;
} else {
(new Handler()).post(() -> runGlideRequest(0, cardLanguage, width, height, false, target));
return true;
}
} else {
return false;
}
} else {
(new Handler()).post(() -> runGlideRequest(attempt + 1, cardLanguage, width, height, onlyCheckCache, target));
return true;
}",1,0,0,0,0,0,0,0,0,6,3,15,0,1,0,0,3,2,1,0,1,0.48,12,3
6205_12,12,21,"if (onlyCheckCache) {
if (FamiliarActivity.getNetworkState(getActivity(), true) == -1) {
return false;
} else {
(new Handler()).post(() -> runGlideRequest(0, cardLanguage, width, height, false, target));
return true;
}
} else {
return false;
}",1,0,0,0,0,0,0,0,0,4,2,10,0,0,0,0,3,2,1,0,1,0.48,16,4
6205_13,13,18,"if (FamiliarActivity.getNetworkState(getActivity(), true) == -1) {
return false;
} else {
(new Handler()).post(() -> runGlideRequest(0, cardLanguage, width, height, false, target));
return true;
}",1,0,0,0,0,0,0,0,0,2,1,6,0,0,0,0,3,2,1,0,1,0.48,19,5
6205_14,14,14,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.34,23,6
6205_17,17,17,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.27,20,5
6205_20,20,20,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.34,17,4
6205_24,24,24,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.27,13,3
6205_30,30,30,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.34,7,2
6205_34,34,36,"if (onlyCheckCache) {
request = request.onlyRetrieveFromCache(true);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,1,0,1,0.54,1,0
6205_35,35,35,request = request.onlyRetrieveFromCache(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.58,2,0
6205_38,38,42,"if (0 != width && 0 != height) {
request = request
.override(width, height)
.fitCenter();
}",1,0,0,0,0,0,0,0,0,2,1,5,0,0,1,1,3,2,1,0,1,0.51,0,0
6205_39,39,40,"request = request
.override(width, height)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,1,0.6,1,0
6205_41,41,41,.fitCenter();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.38,3,2
6205_44,44,44,return request.into(target);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,2,1,0,1,0.57,6,3
6206_1,1,2,"private Target<Drawable> runGlideRequest(int attempt, String cardLanguage, int width, int height,
boolean onlyCheckCache, Target<Drawable> target) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,1,0.44,41,16
6206_3,3,32,"GlideRequest<Drawable> request = mGlideRequestManager
.load(mCard.getImageUrlString(attempt, cardLanguage))
.diskCacheStrategy(DiskCacheStrategy.ALL)
.listener(new RequestListener<Drawable>() {
@Override
public boolean onLoadFailed(@Nullable GlideException e, Object model, Target<Drawable> target, boolean isFirstResource) {
String thisUrl = mCard.getImageUrlString(attempt, cardLanguage);
String nextUrl = mCard.getImageUrlString(attempt + 1, cardLanguage);
if (thisUrl.equals(nextUrl)) {
if (onlyCheckCache) {
if (FamiliarActivity.getNetworkState(getActivity(), true) == -1) {
return false;
} else {
(new Handler()).post(() -> runGlideRequest(0, cardLanguage, width, height, false, target));
return true;
}
} else {
return false;
}
} else {
(new Handler()).post(() -> runGlideRequest(attempt + 1, cardLanguage, width, height, onlyCheckCache, target));
return true;
}
}

@Override
public boolean onResourceReady(Drawable resource, Object model, Target<Drawable> target, DataSource dataSource, boolean isFirstResource) {
return false;
}
});",0,0,0,0,0,1,0,0,0,10,5,30,0,0,0,1,2,2,0,0,2,0.65,11,5
6206_9,9,9,"String thisUrl = mCard.getImageUrlString(attempt, cardLanguage);",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0.24,34,14
6206_10,10,10,"String nextUrl = mCard.getImageUrlString(attempt + 1, cardLanguage);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.23,33,13
6206_11,11,25,"if (thisUrl.equals(nextUrl)) {
if (onlyCheckCache) {
if (FamiliarActivity.getNetworkState(getActivity(), true) == -1) {
return false;
} else {
(new Handler()).post(() -> runGlideRequest(0, cardLanguage, width, height, false, target));
return true;
}
} else {
return false;
}
} else {
(new Handler()).post(() -> runGlideRequest(attempt + 1, cardLanguage, width, height, onlyCheckCache, target));
return true;
}",1,0,0,0,0,0,0,0,0,6,3,15,0,1,0,0,2,2,0,0,2,0.67,18,6
6206_12,12,21,"if (onlyCheckCache) {
if (FamiliarActivity.getNetworkState(getActivity(), true) == -1) {
return false;
} else {
(new Handler()).post(() -> runGlideRequest(0, cardLanguage, width, height, false, target));
return true;
}
} else {
return false;
}",1,0,0,0,0,0,0,0,0,4,2,10,0,0,0,0,2,2,0,0,2,0.68,22,7
6206_13,13,18,"if (FamiliarActivity.getNetworkState(getActivity(), true) == -1) {
return false;
} else {
(new Handler()).post(() -> runGlideRequest(0, cardLanguage, width, height, false, target));
return true;
}",1,0,0,0,0,0,0,0,0,2,1,6,0,0,0,0,2,2,0,0,2,0.67,25,8
6206_14,14,14,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.72,29,9
6206_17,17,17,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.64,26,8
6206_20,20,20,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.72,23,7
6206_24,24,24,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.64,19,6
6206_30,30,30,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.72,13,5
6206_34,34,36,"if (onlyCheckCache) {
request = request.onlyRetrieveFromCache(true);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,2,2,0,0,1,0.57,7,3
6206_35,35,35,request = request.onlyRetrieveFromCache(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.62,8,3
6206_38,38,42,"if (0 != width && 0 != height) {
request = request
.override(width, height)
.fitCenter();
}",1,0,0,0,0,0,0,0,0,2,1,5,0,0,1,1,2,2,0,0,1,0.54,1,0
6206_39,39,40,"request = request
.override(width, height)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,1,0.59,3,1
6206_41,41,41,.fitCenter();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.24,2,0
6206_44,44,44,return request.into(target);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,2,0,0,2,0.84,0,0
1477_1,1,2,"@Override
public void onSaveInstanceState(@NonNull Bundle outState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,1,0,0,0.41,4,2
1477_3,3,3,Gathering savedGathering = new Gathering();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.41,3,1
1477_5,5,5,savedGathering.mDisplayMode = mDisplayModeSpinner.getSelectedItemPosition();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,1,0,0,0.45,1,0
1477_7,7,25,"for (int idx = 0; idx < mLinearLayout.getChildCount(); idx++) {
View player = mLinearLayout.getChildAt(idx);
assert player != null;

EditText nameField = player.findViewById(R.id.custom_name);
assert nameField.getText() != null;
String name = nameField.getText().toString().trim();

int startingLife;
try {
EditText startingLifeField = player.findViewById(R.id.starting_life);
assert startingLifeField.getText() != null;
startingLife = Integer.parseInt(startingLifeField.getText().toString().trim());
} catch (NumberFormatException e) {
startingLife = 20;
}

savedGathering.mPlayerList.add(new GatheringsPlayerData(name, startingLife));
}",0,0,1,0,0,0,0,0,0,13,2,19,0,0,1,0,6,4,1,0,3,0.63,0,0
1477_8,8,8,View player = mLinearLayout.getChildAt(idx);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,3,0.74,1,0
1477_9,9,9,assert player != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,4,1,0,1,0.55,2,1
1477_11,11,11,EditText nameField = player.findViewById(R.id.custom_name);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,1,0,1,0.52,4,3
1477_12,12,12,assert nameField.getText() != null;,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,1,0,0,0.42,5,3
1477_13,13,13,String name = nameField.getText().toString().trim();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,6,4,1,0,0,0.4,6,4
1477_15,15,15,int startingLife;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,1,0,0,0.44,8,6
1477_16,16,22,"try {
EditText startingLifeField = player.findViewById(R.id.starting_life);
assert startingLifeField.getText() != null;
startingLife = Integer.parseInt(startingLifeField.getText().toString().trim());
} catch (NumberFormatException e) {
startingLife = 20;
}",0,0,0,0,1,0,0,0,0,5,1,7,0,1,0,1,6,4,1,0,1,0.52,9,6
1477_17,17,17,EditText startingLifeField = player.findViewById(R.id.starting_life);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.53,10,7
1477_18,18,18,assert startingLifeField.getText() != null;,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,1,0,0,0.45,11,8
1477_19,19,19,startingLife = Integer.parseInt(startingLifeField.getText().toString().trim());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,1,0,0,0.45,12,9
1477_20,20,20,} catch (NumberFormatException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.24,13,10
1477_21,21,21,startingLife = 20;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.48,14,11
1477_24,24,24,"savedGathering.mPlayerList.add(new GatheringsPlayerData(name, startingLife));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,1,0,1,0.56,17,13
1477_26,26,26,outState.remove(SAVED_GATHERING_KEY);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,4,1,0,0,0.38,19,14
1477_27,27,27,outState.remove(SAVED_NAME_KEY);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,4,1,0,0,0.33,20,14
1477_28,28,28,"outState.putSerializable(SAVED_GATHERING_KEY, savedGathering);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.39,21,15
1477_29,29,29,"outState.putString(SAVED_NAME_KEY, mCurrentGatheringName);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.38,22,16
1477_31,31,31,super.onSaveInstanceState(outState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,1,0,0,0.4,24,18
1478_1,1,1,throws IllegalStateException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,7,7,0,0,0,0.34,1,0
1478_3,3,5,"if (!this.isVisible()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,7,0,0,1,0.51,0,0
1478_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.22,1,0
1478_7,7,7,removeDialog(getParentFragmentManager());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,7,0,0,2,0.56,4,2
1478_9,9,9,GatheringsDialogFragment newFragment = new GatheringsDialogFragment();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,7,0,0,2,0.62,6,3
1478_10,10,10,Bundle arguments = new Bundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,7,0,0,0,0.32,7,3
1478_11,11,11,"arguments.putInt(FamiliarDialogFragment.ID_KEY, id);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,2,0.52,8,4
1478_12,12,12,newFragment.setArguments(arguments);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,1,0.48,9,5
1478_13,13,13,"newFragment.show(getParentFragmentManager(), FamiliarActivity.DIALOG_TAG);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,3,0.63,10,6
1479_1,1,1,throws IllegalStateException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,3,3,0,0,0,0.3,7,3
1479_3,3,5,"if (!this.isVisible()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,0,0.31,3,1
1479_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.21,4,1
1479_7,7,7,removeDialog(getParentFragmentManager());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.53,1,0
1479_9,9,9,GatheringsDialogFragment newFragment = new GatheringsDialogFragment();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.68,0,0
1479_10,10,10,Bundle arguments = new Bundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.35,1,0
1479_11,11,11,"arguments.putInt(FamiliarDialogFragment.ID_KEY, id);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.49,2,1
1479_12,12,12,newFragment.setArguments(arguments);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.44,3,2
1479_13,13,13,"newFragment.show(getParentFragmentManager(), FamiliarActivity.DIALOG_TAG);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,2,0.68,4,3
1758_1,1,1,private synchronized void nextAttempt(boolean noConnectDelay),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.39,2,1
1758_3,3,35,"try {
if (isCancelled()) {
return;
}

Optional<A> address = addressSelector.selectAddress(addressSelectionContext, attemptedAddresses);
if (!address.isPresent()) {
fail(""No hosts available"");
return;
}

if (invocationAttempts > 0) {
stat.recordRetry();
}

if (noConnectDelay) {
invoke(address.get());
return;
}

int connectionFailuresCount = failedConnectionAttempts.count(address.get());
if (connectionFailuresCount == 0) {
invoke(address.get());
return;
}

Duration connectDelay = retryPolicy.getBackoffDelay(connectionFailuresCount);
log.debug(""Failed connection to %s with attempt %s, will retry in %s"", address.get(), connectionFailuresCount, connectDelay);
schedule(connectDelay, () -> invoke(address.get()));
}
catch (Throwable t) {
unexpectedError(t);
}",0,0,0,0,1,0,0,0,0,20,2,33,0,0,0,0,3,3,0,0,1,0.43,0,0
1758_4,4,6,"if (isCancelled()) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,3,0,0,1,0.59,0,0
1758_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.23,1,0
1758_8,8,8,"Optional<A> address = addressSelector.selectAddress(addressSelectionContext, attemptedAddresses);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.2,4,2
1758_9,9,12,"if (!address.isPresent()) {
fail(""No hosts available"");
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,3,3,0,0,0,0.25,5,2
1758_10,10,10,"fail(""No hosts available"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.23,6,3
1758_11,11,11,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.23,7,4
1758_14,14,16,"if (invocationAttempts > 0) {
stat.recordRetry();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,3,0,0,0,0.31,10,6
1758_15,15,15,stat.recordRetry();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.27,11,6
1758_18,18,21,"if (noConnectDelay) {
invoke(address.get());
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,3,0,0,0,0.24,14,8
1758_19,19,19,invoke(address.get());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.18,15,8
1758_20,20,20,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.23,16,9
1758_23,23,23,int connectionFailuresCount = failedConnectionAttempts.count(address.get());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,3,3,0,0,0,0.26,19,11
1758_24,24,27,"if (connectionFailuresCount == 0) {
invoke(address.get());
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,1,3,3,0,0,0,0.26,20,11
1758_25,25,25,invoke(address.get());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.18,21,12
1758_26,26,26,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.23,22,13
1758_29,29,29,Duration connectDelay = retryPolicy.getBackoffDelay(connectionFailuresCount);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.28,25,15
1758_30,30,30,"log.debug(""Failed connection to %s with attempt %s, will retry in %s"", address.get(), connectionFailuresCount, connectDelay);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,0,0.29,26,15
1758_31,31,31,"schedule(connectDelay, () -> invoke(address.get()));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,0,0.26,27,16
1758_33,33,33,catch (Throwable t) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,29,18
1758_34,34,34,unexpectedError(t);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.28,30,18
1759_1,1,1,"private synchronized void handleFailure(A address, Throwable throwable)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,8,4
1759_3,3,54,"try {
if (throwable instanceof ConnectionFailedException) {
failedConnections++;
}

ExceptionClassification exceptionClassification = retryPolicy.classifyException(throwable, metadata.isIdempotent());

attemptedAddresses.add(address);
if (exceptionClassification.getHostStatus() == NORMAL) {
lastException = throwable;
invocationAttempts++;
}
else if (exceptionClassification.getHostStatus() == DOWN || exceptionClassification.getHostStatus() == OVERLOADED) {
addressSelector.markdown(address);
failedConnectionAttempts.add(address);
if (exceptionClassification.getHostStatus() == OVERLOADED) {
overloadedRejects++;
}
}

Duration duration = succinctNanos(ticker.read() - startTime);
if (!exceptionClassification.isRetry().orElse(FALSE)) {
lastException = throwable;
fail(""Non-retryable exception"");
return;
}
if (invocationAttempts > retryPolicy.getMaxRetries()) {
fail(format(""Max retry attempts (%s) exceeded"", retryPolicy.getMaxRetries()));
return;
}
if (duration.compareTo(retryPolicy.getMaxRetryTime()) >= 0) {
fail(format(""Max retry time (%s) exceeded"", retryPolicy.getMaxRetryTime()));
return;
}

if (exceptionClassification.getHostStatus() != NORMAL) {
nextAttempt(false);
return;
}

Duration backoffDelay = retryPolicy.getBackoffDelay(invocationAttempts);
log.debug(""Failed invocation of %s with attempt %s, will retry in %s (overloadedRejects: %s). Exception: %s"",
metadata.getName(),
invocationAttempts,
backoffDelay,
overloadedRejects,
throwable.getMessage());
schedule(backoffDelay, () -> nextAttempt(true));
}
catch (Throwable t) {
unexpectedError(t);
}",0,0,0,0,1,0,0,0,0,31,3,52,0,0,0,0,4,3,0,0,1,0.38,0,0
1759_4,4,6,"if (throwable instanceof ConnectionFailedException) {
failedConnections++;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,3,0,0,0,0.29,3,1
1759_5,5,5,failedConnections++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.19,4,1
1759_8,8,8,"ExceptionClassification exceptionClassification = retryPolicy.classifyException(throwable, metadata.isIdempotent());",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.38,1,0
1759_10,10,10,attemptedAddresses.add(address);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,4,3,0,0,0,0.26,0,0
1759_11,11,21,"if (exceptionClassification.getHostStatus() == NORMAL) {
lastException = throwable;
invocationAttempts++;
}
else if (exceptionClassification.getHostStatus() == DOWN || exceptionClassification.getHostStatus() == OVERLOADED) {
addressSelector.markdown(address);
failedConnectionAttempts.add(address);
if (exceptionClassification.getHostStatus() == OVERLOADED) {
overloadedRejects++;
}
}",1,0,0,0,0,0,0,0,0,7,2,11,1,0,0,1,4,3,0,0,1,0.37,1,0
1759_12,12,12,lastException = throwable;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,2,1
1759_13,13,13,invocationAttempts++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.26,3,2
1759_15,15,15,else if (exceptionClassification.getHostStatus() == DOWN || exceptionClassification.getHostStatus() == OVERLOADED) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.28,5,4
1759_16,16,16,addressSelector.markdown(address);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.34,6,4
1759_17,17,17,failedConnectionAttempts.add(address);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.25,7,5
1759_18,18,20,"if (exceptionClassification.getHostStatus() == OVERLOADED) {
overloadedRejects++;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,1,0.28,8,6
1759_19,19,19,overloadedRejects++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,9,7
1759_23,23,23,Duration duration = succinctNanos(ticker.read() - startTime);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.34,13,9
1759_24,24,28,"if (!exceptionClassification.isRetry().orElse(FALSE)) {
lastException = throwable;
fail(""Non-retryable exception"");
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,1,0,0,0,4,3,0,0,1,0.33,14,9
1759_25,25,25,lastException = throwable;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,15,10
1759_26,26,26,"fail(""Non-retryable exception"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.24,16,11
1759_27,27,27,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,-0.01,17,12
1759_29,29,32,"if (invocationAttempts > retryPolicy.getMaxRetries()) {
fail(format(""Max retry attempts (%s) exceeded"", retryPolicy.getMaxRetries()));
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,0,0,0,4,3,0,0,0,0.27,19,14
1759_30,30,30,"fail(format(""Max retry attempts (%s) exceeded"", retryPolicy.getMaxRetries()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.26,20,14
1759_31,31,31,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,-0.01,21,15
1759_33,33,36,"if (duration.compareTo(retryPolicy.getMaxRetryTime()) >= 0) {
fail(format(""Max retry time (%s) exceeded"", retryPolicy.getMaxRetryTime()));
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,0,0,1,4,3,0,0,0,0.32,23,17
1759_34,34,34,"fail(format(""Max retry time (%s) exceeded"", retryPolicy.getMaxRetryTime()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.3,24,17
1759_35,35,35,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,-0.01,25,18
1759_38,38,41,"if (exceptionClassification.getHostStatus() != NORMAL) {
nextAttempt(false);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,4,3,0,0,1,0.28,28,20
1759_39,39,39,nextAttempt(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.2,29,20
1759_40,40,40,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,-0.01,30,21
1759_43,43,43,Duration backoffDelay = retryPolicy.getBackoffDelay(invocationAttempts);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.28,33,23
1759_44,44,49,"log.debug(""Failed invocation of %s with attempt %s, will retry in %s (overloadedRejects: %s). Exception: %s"",
metadata.getName(),
invocationAttempts,
backoffDelay,
overloadedRejects,
throwable.getMessage());",0,0,0,0,0,0,0,0,0,0,0,6,0,1,0,0,4,3,0,0,0,0.35,34,23
1759_50,50,50,"schedule(backoffDelay, () -> nextAttempt(true));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.25,40,25
1759_52,52,52,catch (Throwable t) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,42,26
1759_53,53,53,unexpectedError(t);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.34,43,26
1760_1,1,1,"private synchronized void handleFailure(A address, Throwable throwable)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.39,10,6
1760_3,3,54,"try {
if (throwable instanceof ConnectionFailedException) {
failedConnections++;
}

ExceptionClassification exceptionClassification = retryPolicy.classifyException(throwable, metadata.isIdempotent());

attemptedAddresses.add(address);
if (exceptionClassification.getHostStatus() == NORMAL) {
lastException = throwable;
invocationAttempts++;
}
else if (exceptionClassification.getHostStatus() == DOWN || exceptionClassification.getHostStatus() == OVERLOADED) {
addressSelector.markdown(address);
failedConnectionAttempts.add(address);
if (exceptionClassification.getHostStatus() == OVERLOADED) {
overloadedRejects++;
}
}

Duration duration = succinctNanos(ticker.read() - startTime);
if (!exceptionClassification.isRetry().orElse(FALSE)) {
lastException = throwable;
fail(""Non-retryable exception"");
return;
}
if (invocationAttempts > retryPolicy.getMaxRetries()) {
fail(format(""Max retry attempts (%s) exceeded"", retryPolicy.getMaxRetries()));
return;
}
if (duration.compareTo(retryPolicy.getMaxRetryTime()) >= 0) {
fail(format(""Max retry time (%s) exceeded"", retryPolicy.getMaxRetryTime()));
return;
}

if (exceptionClassification.getHostStatus() != NORMAL) {
nextAttempt(false);
return;
}

Duration backoffDelay = retryPolicy.getBackoffDelay(invocationAttempts);
log.debug(""Failed invocation of %s with attempt %s, will retry in %s (overloadedRejects: %s). Exception: %s"",
metadata.getName(),
invocationAttempts,
backoffDelay,
overloadedRejects,
throwable.getMessage());
schedule(backoffDelay, () -> nextAttempt(true));
}
catch (Throwable t) {
unexpectedError(t);
}",0,0,0,0,1,0,0,0,0,31,3,52,0,0,0,0,5,3,0,0,2,0.56,0,0
1760_4,4,6,"if (throwable instanceof ConnectionFailedException) {
failedConnections++;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,3,0,0,1,0.49,5,3
1760_5,5,5,failedConnections++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.4,6,3
1760_8,8,8,"ExceptionClassification exceptionClassification = retryPolicy.classifyException(throwable, metadata.isIdempotent());",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,3,0,0,1,0.57,3,2
1760_10,10,10,attemptedAddresses.add(address);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,5,3,0,0,0,0.28,1,1
1760_11,11,21,"if (exceptionClassification.getHostStatus() == NORMAL) {
lastException = throwable;
invocationAttempts++;
}
else if (exceptionClassification.getHostStatus() == DOWN || exceptionClassification.getHostStatus() == OVERLOADED) {
addressSelector.markdown(address);
failedConnectionAttempts.add(address);
if (exceptionClassification.getHostStatus() == OVERLOADED) {
overloadedRejects++;
}
}",1,0,0,0,0,0,0,0,0,7,2,11,1,0,0,1,5,3,0,0,2,0.59,0,0
1760_12,12,12,lastException = throwable;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.51,0,0
1760_13,13,13,invocationAttempts++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.37,1,0
1760_15,15,15,else if (exceptionClassification.getHostStatus() == DOWN || exceptionClassification.getHostStatus() == OVERLOADED) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.51,3,2
1760_16,16,16,addressSelector.markdown(address);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.36,4,2
1760_17,17,17,failedConnectionAttempts.add(address);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.36,5,3
1760_18,18,20,"if (exceptionClassification.getHostStatus() == OVERLOADED) {
overloadedRejects++;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,3,0,0,1,0.47,6,4
1760_19,19,19,overloadedRejects++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.27,7,5
1760_23,23,23,Duration duration = succinctNanos(ticker.read() - startTime);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,3,0,0,0,0.35,11,7
1760_24,24,28,"if (!exceptionClassification.isRetry().orElse(FALSE)) {
lastException = throwable;
fail(""Non-retryable exception"");
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,1,0,0,0,5,3,0,0,1,0.49,12,7
1760_25,25,25,lastException = throwable;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.51,13,8
1760_26,26,26,"fail(""Non-retryable exception"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.49,14,9
1760_27,27,27,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.13,15,10
1760_29,29,32,"if (invocationAttempts > retryPolicy.getMaxRetries()) {
fail(format(""Max retry attempts (%s) exceeded"", retryPolicy.getMaxRetries()));
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,0,0,0,5,3,0,0,0,0.34,17,12
1760_30,30,30,"fail(format(""Max retry attempts (%s) exceeded"", retryPolicy.getMaxRetries()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.34,18,12
1760_31,31,31,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.13,19,13
1760_33,33,36,"if (duration.compareTo(retryPolicy.getMaxRetryTime()) >= 0) {
fail(format(""Max retry time (%s) exceeded"", retryPolicy.getMaxRetryTime()));
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,0,0,1,5,3,0,0,0,0.34,21,15
1760_34,34,34,"fail(format(""Max retry time (%s) exceeded"", retryPolicy.getMaxRetryTime()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.33,22,15
1760_35,35,35,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.13,23,16
1760_38,38,41,"if (exceptionClassification.getHostStatus() != NORMAL) {
nextAttempt(false);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,5,3,0,0,2,0.58,26,18
1760_39,39,39,nextAttempt(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.27,27,18
1760_40,40,40,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.13,28,19
1760_43,43,43,Duration backoffDelay = retryPolicy.getBackoffDelay(invocationAttempts);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,0,0,0,0.33,31,21
1760_44,44,49,"log.debug(""Failed invocation of %s with attempt %s, will retry in %s (overloadedRejects: %s). Exception: %s"",
metadata.getName(),
invocationAttempts,
backoffDelay,
overloadedRejects,
throwable.getMessage());",0,0,0,0,0,0,0,0,0,0,0,6,0,1,0,0,5,3,0,0,1,0.44,32,21
1760_50,50,50,"schedule(backoffDelay, () -> nextAttempt(true));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.27,38,23
1760_52,52,52,catch (Throwable t) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.56,40,24
1760_53,53,53,unexpectedError(t);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.37,41,24
1761_1,1,1,"private synchronized void handleFailure(A address, Throwable throwable)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.41,23,15
1761_3,3,54,"try {
if (throwable instanceof ConnectionFailedException) {
failedConnections++;
}

ExceptionClassification exceptionClassification = retryPolicy.classifyException(throwable, metadata.isIdempotent());

attemptedAddresses.add(address);
if (exceptionClassification.getHostStatus() == NORMAL) {
lastException = throwable;
invocationAttempts++;
}
else if (exceptionClassification.getHostStatus() == DOWN || exceptionClassification.getHostStatus() == OVERLOADED) {
addressSelector.markdown(address);
failedConnectionAttempts.add(address);
if (exceptionClassification.getHostStatus() == OVERLOADED) {
overloadedRejects++;
}
}

Duration duration = succinctNanos(ticker.read() - startTime);
if (!exceptionClassification.isRetry().orElse(FALSE)) {
lastException = throwable;
fail(""Non-retryable exception"");
return;
}
if (invocationAttempts > retryPolicy.getMaxRetries()) {
fail(format(""Max retry attempts (%s) exceeded"", retryPolicy.getMaxRetries()));
return;
}
if (duration.compareTo(retryPolicy.getMaxRetryTime()) >= 0) {
fail(format(""Max retry time (%s) exceeded"", retryPolicy.getMaxRetryTime()));
return;
}

if (exceptionClassification.getHostStatus() != NORMAL) {
nextAttempt(false);
return;
}

Duration backoffDelay = retryPolicy.getBackoffDelay(invocationAttempts);
log.debug(""Failed invocation of %s with attempt %s, will retry in %s (overloadedRejects: %s). Exception: %s"",
metadata.getName(),
invocationAttempts,
backoffDelay,
overloadedRejects,
throwable.getMessage());
schedule(backoffDelay, () -> nextAttempt(true));
}
catch (Throwable t) {
unexpectedError(t);
}",0,0,0,0,1,0,0,0,0,31,3,52,0,0,0,0,8,4,0,0,3,0.57,0,0
1761_4,4,6,"if (throwable instanceof ConnectionFailedException) {
failedConnections++;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,8,4,0,0,1,0.55,18,12
1761_5,5,5,failedConnections++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.41,19,12
1761_8,8,8,"ExceptionClassification exceptionClassification = retryPolicy.classifyException(throwable, metadata.isIdempotent());",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,8,4,0,0,1,0.61,16,11
1761_10,10,10,attemptedAddresses.add(address);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,8,4,0,0,0,0.3,14,10
1761_11,11,21,"if (exceptionClassification.getHostStatus() == NORMAL) {
lastException = throwable;
invocationAttempts++;
}
else if (exceptionClassification.getHostStatus() == DOWN || exceptionClassification.getHostStatus() == OVERLOADED) {
addressSelector.markdown(address);
failedConnectionAttempts.add(address);
if (exceptionClassification.getHostStatus() == OVERLOADED) {
overloadedRejects++;
}
}",1,0,0,0,0,0,0,0,0,7,2,11,1,0,0,1,8,4,0,0,1,0.5,3,2
1761_12,12,12,lastException = throwable;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,1,0.58,12,8
1761_13,13,13,invocationAttempts++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.38,11,7
1761_15,15,15,else if (exceptionClassification.getHostStatus() == DOWN || exceptionClassification.getHostStatus() == OVERLOADED) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,1,0.48,9,6
1761_16,16,16,addressSelector.markdown(address);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.36,8,5
1761_17,17,17,failedConnectionAttempts.add(address);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.38,7,4
1761_18,18,20,"if (exceptionClassification.getHostStatus() == OVERLOADED) {
overloadedRejects++;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,4,0,0,1,0.46,4,2
1761_19,19,19,overloadedRejects++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.31,5,2
1761_23,23,23,Duration duration = succinctNanos(ticker.read() - startTime);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,8,4,0,0,0,0.39,1,1
1761_24,24,28,"if (!exceptionClassification.isRetry().orElse(FALSE)) {
lastException = throwable;
fail(""Non-retryable exception"");
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,1,0,0,0,8,4,0,0,3,0.62,0,0
1761_25,25,25,lastException = throwable;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,1,0.58,0,0
1761_26,26,26,"fail(""Non-retryable exception"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,3,0.71,1,0
1761_27,27,27,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.28,2,1
1761_29,29,32,"if (invocationAttempts > retryPolicy.getMaxRetries()) {
fail(format(""Max retry attempts (%s) exceeded"", retryPolicy.getMaxRetries()));
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,0,0,0,8,4,0,0,0,0.39,4,3
1761_30,30,30,"fail(format(""Max retry attempts (%s) exceeded"", retryPolicy.getMaxRetries()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.39,5,3
1761_31,31,31,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.28,6,4
1761_33,33,36,"if (duration.compareTo(retryPolicy.getMaxRetryTime()) >= 0) {
fail(format(""Max retry time (%s) exceeded"", retryPolicy.getMaxRetryTime()));
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,0,0,1,8,4,0,0,0,0.39,8,6
1761_34,34,34,"fail(format(""Max retry time (%s) exceeded"", retryPolicy.getMaxRetryTime()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.36,9,6
1761_35,35,35,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.28,10,7
1761_38,38,41,"if (exceptionClassification.getHostStatus() != NORMAL) {
nextAttempt(false);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,8,4,0,0,1,0.44,13,9
1761_39,39,39,nextAttempt(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.28,14,9
1761_40,40,40,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.28,15,10
1761_43,43,43,Duration backoffDelay = retryPolicy.getBackoffDelay(invocationAttempts);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,4,0,0,0,0.38,18,12
1761_44,44,49,"log.debug(""Failed invocation of %s with attempt %s, will retry in %s (overloadedRejects: %s). Exception: %s"",
metadata.getName(),
invocationAttempts,
backoffDelay,
overloadedRejects,
throwable.getMessage());",0,0,0,0,0,0,0,0,0,0,0,6,0,1,0,0,8,4,0,0,1,0.48,19,12
1761_50,50,50,"schedule(backoffDelay, () -> nextAttempt(true));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,0,0,0,0.28,25,14
1761_52,52,52,catch (Throwable t) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.59,27,15
1761_53,53,53,unexpectedError(t);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,0,0,0,0.43,28,15
1762_1,1,1,    private synchronized void fail(String reason),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.37,3,2
1762_3,3,3,Throwable cause = lastException;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.36,1,1
1762_4,4,6,"if (cause == null) {
cause = new TTransportException(reason);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,3,0,0,0,0.32,0,0
1762_5,5,5,cause = new TTransportException(reason);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,0,0
1762_8,8,13,"RetriesFailedException retriesFailedException = new RetriesFailedException(
reason,
invocationAttempts,
succinctNanos(ticker.read() - startTime),
failedConnections,
overloadedRejects);",0,0,0,0,0,1,0,0,0,0,0,6,0,0,1,1,3,3,0,0,0,0.4,3,1
1762_15,15,20,"if (cause instanceof DriftApplicationException) {
cause.getCause().addSuppressed(retriesFailedException);
}
else {
cause.addSuppressed(retriesFailedException);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,0,1,1,3,3,0,0,0,0.41,10,2
1762_16,16,16,cause.getCause().addSuppressed(retriesFailedException);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.39,11,2
1762_18,18,18,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.14,13,4
1762_19,19,19,cause.addSuppressed(retriesFailedException);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,14,4
1762_22,22,22,setException(cause);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.33,17,6
1763_1,1,1,    private synchronized void fail(String reason),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.47,13,4
1763_3,3,3,Throwable cause = lastException;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.61,11,3
1763_4,4,6,"if (cause == null) {
cause = new TTransportException(reason);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,6,3,0,0,1,0.62,8,1
1763_5,5,5,cause = new TTransportException(reason);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.63,9,1
1763_8,8,13,"RetriesFailedException retriesFailedException = new RetriesFailedException(
reason,
invocationAttempts,
succinctNanos(ticker.read() - startTime),
failedConnections,
overloadedRejects);",0,0,0,0,0,1,0,0,0,0,0,6,0,0,1,1,6,3,0,0,1,0.56,1,0
1763_15,15,20,"if (cause instanceof DriftApplicationException) {
cause.getCause().addSuppressed(retriesFailedException);
}
else {
cause.addSuppressed(retriesFailedException);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,0,1,1,6,3,0,0,1,0.62,0,0
1763_16,16,16,cause.getCause().addSuppressed(retriesFailedException);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.62,1,0
1763_18,18,18,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.16,3,2
1763_19,19,19,cause.addSuppressed(retriesFailedException);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.63,4,2
1763_22,22,22,setException(cause);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,0,0,1,0.62,7,4
6564_1,1,1,public void addDefaultCoercions(Class<?> coercionsClass),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.0,35,16
6564_3,3,3,"requireNonNull(coercionsClass, ""coercionsClass is null"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.0,33,15
6564_4,4,4,"Map<ThriftType, Method> toThriftCoercions = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.0,32,14
6564_5,5,5,"Map<ThriftType, Method> fromThriftCoercions = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.0,31,13
6564_6,6,35,"for (Method method : coercionsClass.getDeclaredMethods()) {
if (method.isAnnotationPresent(ToThrift.class)) {
verifyCoercionMethod(method);
ThriftType thriftType = getThriftType(method.getGenericReturnType());
ThriftType coercedType = thriftType.coerceTo(method.getGenericParameterTypes()[0]);

Method oldValue = toThriftCoercions.put(coercedType, method);
checkArgument(
oldValue == null,
""Coercion class two @ToThrift methods (%s and %s) for type %s"",
coercionsClass.getName(),
method,
oldValue,
coercedType);
}
else if (method.isAnnotationPresent(FromThrift.class)) {
verifyCoercionMethod(method);
ThriftType thriftType = getThriftType(method.getGenericParameterTypes()[0]);
ThriftType coercedType = thriftType.coerceTo(method.getGenericReturnType());

Method oldValue = fromThriftCoercions.put(coercedType, method);
checkArgument(
oldValue == null,
""Coercion class two @FromThrift methods (%s and %s) for type %s"",
coercionsClass.getName(),
method,
oldValue,
coercedType);
}
}",0,0,0,1,0,0,0,0,0,12,2,30,0,1,0,1,3,2,0,0,1,0.0,1,0
6564_7,7,34,"if (method.isAnnotationPresent(ToThrift.class)) {
verifyCoercionMethod(method);
ThriftType thriftType = getThriftType(method.getGenericReturnType());
ThriftType coercedType = thriftType.coerceTo(method.getGenericParameterTypes()[0]);

Method oldValue = toThriftCoercions.put(coercedType, method);
checkArgument(
oldValue == null,
""Coercion class two @ToThrift methods (%s and %s) for type %s"",
coercionsClass.getName(),
method,
oldValue,
coercedType);
}
else if (method.isAnnotationPresent(FromThrift.class)) {
verifyCoercionMethod(method);
ThriftType thriftType = getThriftType(method.getGenericParameterTypes()[0]);
ThriftType coercedType = thriftType.coerceTo(method.getGenericReturnType());

Method oldValue = fromThriftCoercions.put(coercedType, method);
checkArgument(
oldValue == null,
""Coercion class two @FromThrift methods (%s and %s) for type %s"",
coercionsClass.getName(),
method,
oldValue,
coercedType);
}",1,0,0,0,0,0,0,0,0,11,1,28,0,0,0,0,3,2,0,0,1,0.0,2,0
6564_8,8,8,verifyCoercionMethod(method);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.0,28,10
6564_9,9,9,ThriftType thriftType = getThriftType(method.getGenericReturnType());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.0,27,9
6564_10,10,10,ThriftType coercedType = thriftType.coerceTo(method.getGenericParameterTypes()[0]);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.0,26,8
6564_12,12,12,"Method oldValue = toThriftCoercions.put(coercedType, method);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.0,24,7
6564_13,13,19,"checkArgument(
oldValue == null,
""Coercion class two @ToThrift methods (%s and %s) for type %s"",
coercionsClass.getName(),
method,
oldValue,
coercedType);",0,0,0,0,0,0,0,0,0,0,0,7,0,1,0,0,3,2,0,0,1,0.0,17,6
6564_21,21,21,else if (method.isAnnotationPresent(FromThrift.class)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.0,15,5
6564_22,22,22,verifyCoercionMethod(method);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.0,14,4
6564_23,23,23,ThriftType thriftType = getThriftType(method.getGenericParameterTypes()[0]);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.0,13,3
6564_24,24,24,ThriftType coercedType = thriftType.coerceTo(method.getGenericReturnType());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.0,12,2
6564_26,26,26,"Method oldValue = fromThriftCoercions.put(coercedType, method);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.0,10,1
6564_27,27,33,"checkArgument(
oldValue == null,
""Coercion class two @FromThrift methods (%s and %s) for type %s"",
coercionsClass.getName(),
method,
oldValue,
coercedType);",0,0,0,0,0,0,0,0,0,0,0,7,0,1,0,0,3,2,0,0,1,0.0,3,0
6564_37,37,37,"Set<ThriftType> difference = Sets.symmetricDifference(toThriftCoercions.keySet(), fromThriftCoercions.keySet());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,2,0.0,0,0
6564_38,38,42,"checkArgument(
difference.isEmpty(),
""Coercion class %s does not have matched @ToThrift and @FromThrift methods for types %s"",
coercionsClass.getName(),
difference);",0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,1,3,2,0,0,1,0.0,1,0
6564_44,44,44,"Map<Type, TypeCoercion> coercions = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.0,7,2
6564_45,45,56,"for (Map.Entry<ThriftType, Method> entry : toThriftCoercions.entrySet()) {
ThriftType type = entry.getKey();
Method toThriftMethod = entry.getValue();
Method fromThriftMethod = fromThriftCoercions.get(type);
checkState(
fromThriftMethod != null,
""Coercion class %s does not have matched @ToThrift and @FromThrift methods for type %s"",
coercionsClass.getName(),
type);
TypeCoercion coercion = new TypeCoercion(type, toThriftMethod, fromThriftMethod);
coercions.put(type.getJavaType(), coercion);
}",0,0,0,1,0,0,0,0,0,6,1,12,0,1,0,0,3,2,0,0,1,0.0,8,2
6564_46,46,46,ThriftType type = entry.getKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.0,9,3
6564_47,47,47,Method toThriftMethod = entry.getValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.0,10,4
6564_48,48,48,Method fromThriftMethod = fromThriftCoercions.get(type);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.0,11,5
6564_49,49,53,"checkState(
fromThriftMethod != null,
""Coercion class %s does not have matched @ToThrift and @FromThrift methods for type %s"",
coercionsClass.getName(),
type);",0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,0,3,2,0,0,1,0.0,12,6
6564_54,54,54,"TypeCoercion coercion = new TypeCoercion(type, toThriftMethod, fromThriftMethod);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.0,17,8
6564_55,55,55,"coercions.put(type.getJavaType(), coercion);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.0,18,8
6564_57,57,57,this.coercions.putAll(coercions);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.0,20,10
6565_1,1,1,public void addDefaultCoercions(Class<?> coercionsClass),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,2,0.64,42,18
6565_3,3,3,"requireNonNull(coercionsClass, ""coercionsClass is null"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.04,40,17
6565_4,4,4,"Map<ThriftType, Method> toThriftCoercions = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.3,39,16
6565_5,5,5,"Map<ThriftType, Method> fromThriftCoercions = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.3,38,15
6565_6,6,35,"for (Method method : coercionsClass.getDeclaredMethods()) {
if (method.isAnnotationPresent(ToThrift.class)) {
verifyCoercionMethod(method);
ThriftType thriftType = getThriftType(method.getGenericReturnType());
ThriftType coercedType = thriftType.coerceTo(method.getGenericParameterTypes()[0]);

Method oldValue = toThriftCoercions.put(coercedType, method);
checkArgument(
oldValue == null,
""Coercion class two @ToThrift methods (%s and %s) for type %s"",
coercionsClass.getName(),
method,
oldValue,
coercedType);
}
else if (method.isAnnotationPresent(FromThrift.class)) {
verifyCoercionMethod(method);
ThriftType thriftType = getThriftType(method.getGenericParameterTypes()[0]);
ThriftType coercedType = thriftType.coerceTo(method.getGenericReturnType());

Method oldValue = fromThriftCoercions.put(coercedType, method);
checkArgument(
oldValue == null,
""Coercion class two @FromThrift methods (%s and %s) for type %s"",
coercionsClass.getName(),
method,
oldValue,
coercedType);
}
}",0,0,0,1,0,0,0,0,0,12,2,30,0,1,0,1,2,1,1,0,1,0.28,8,2
6565_7,7,34,"if (method.isAnnotationPresent(ToThrift.class)) {
verifyCoercionMethod(method);
ThriftType thriftType = getThriftType(method.getGenericReturnType());
ThriftType coercedType = thriftType.coerceTo(method.getGenericParameterTypes()[0]);

Method oldValue = toThriftCoercions.put(coercedType, method);
checkArgument(
oldValue == null,
""Coercion class two @ToThrift methods (%s and %s) for type %s"",
coercionsClass.getName(),
method,
oldValue,
coercedType);
}
else if (method.isAnnotationPresent(FromThrift.class)) {
verifyCoercionMethod(method);
ThriftType thriftType = getThriftType(method.getGenericParameterTypes()[0]);
ThriftType coercedType = thriftType.coerceTo(method.getGenericReturnType());

Method oldValue = fromThriftCoercions.put(coercedType, method);
checkArgument(
oldValue == null,
""Coercion class two @FromThrift methods (%s and %s) for type %s"",
coercionsClass.getName(),
method,
oldValue,
coercedType);
}",1,0,0,0,0,0,0,0,0,11,1,28,0,0,0,0,2,1,1,0,1,0.28,9,2
6565_8,8,8,verifyCoercionMethod(method);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.29,35,12
6565_9,9,9,ThriftType thriftType = getThriftType(method.getGenericReturnType());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.15,34,11
6565_10,10,10,ThriftType coercedType = thriftType.coerceTo(method.getGenericParameterTypes()[0]);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,2,1,1,0,0,0.22,33,10
6565_12,12,12,"Method oldValue = toThriftCoercions.put(coercedType, method);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,1,1,0,1,0.24,31,9
6565_13,13,19,"checkArgument(
oldValue == null,
""Coercion class two @ToThrift methods (%s and %s) for type %s"",
coercionsClass.getName(),
method,
oldValue,
coercedType);",0,0,0,0,0,0,0,0,0,0,0,7,0,1,0,0,2,1,1,0,1,0.27,24,8
6565_21,21,21,else if (method.isAnnotationPresent(FromThrift.class)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.29,22,7
6565_22,22,22,verifyCoercionMethod(method);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.29,21,6
6565_23,23,23,ThriftType thriftType = getThriftType(method.getGenericParameterTypes()[0]);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.22,20,5
6565_24,24,24,ThriftType coercedType = thriftType.coerceTo(method.getGenericReturnType());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,2,1,1,0,0,0.15,19,4
6565_26,26,26,"Method oldValue = fromThriftCoercions.put(coercedType, method);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,1,1,0,1,0.24,17,3
6565_27,27,33,"checkArgument(
oldValue == null,
""Coercion class two @FromThrift methods (%s and %s) for type %s"",
coercionsClass.getName(),
method,
oldValue,
coercedType);",0,0,0,0,0,0,0,0,0,0,0,7,0,1,0,0,2,1,1,0,1,0.27,10,2
6565_37,37,37,"Set<ThriftType> difference = Sets.symmetricDifference(toThriftCoercions.keySet(), fromThriftCoercions.keySet());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,1,1,0,1,0.15,6,1
6565_38,38,42,"checkArgument(
difference.isEmpty(),
""Coercion class %s does not have matched @ToThrift and @FromThrift methods for types %s"",
coercionsClass.getName(),
difference);",0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,1,2,1,1,0,1,0.22,1,0
6565_44,44,44,"Map<Type, TypeCoercion> coercions = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,1,1,0,1,0.31,0,0
6565_45,45,56,"for (Map.Entry<ThriftType, Method> entry : toThriftCoercions.entrySet()) {
ThriftType type = entry.getKey();
Method toThriftMethod = entry.getValue();
Method fromThriftMethod = fromThriftCoercions.get(type);
checkState(
fromThriftMethod != null,
""Coercion class %s does not have matched @ToThrift and @FromThrift methods for type %s"",
coercionsClass.getName(),
type);
TypeCoercion coercion = new TypeCoercion(type, toThriftMethod, fromThriftMethod);
coercions.put(type.getJavaType(), coercion);
}",0,0,0,1,0,0,0,0,0,6,1,12,0,1,0,0,2,1,1,0,1,0.27,1,0
6565_46,46,46,ThriftType type = entry.getKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.26,2,1
6565_47,47,47,Method toThriftMethod = entry.getValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.29,3,2
6565_48,48,48,Method fromThriftMethod = fromThriftCoercions.get(type);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.17,4,3
6565_49,49,53,"checkState(
fromThriftMethod != null,
""Coercion class %s does not have matched @ToThrift and @FromThrift methods for type %s"",
coercionsClass.getName(),
type);",0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,0,2,1,1,0,1,0.15,5,4
6565_54,54,54,"TypeCoercion coercion = new TypeCoercion(type, toThriftMethod, fromThriftMethod);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.24,10,6
6565_55,55,55,"coercions.put(type.getJavaType(), coercion);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.24,11,6
6565_57,57,57,this.coercions.putAll(coercions);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.3,13,8
6566_1,1,1,private ThriftType buildThriftTypeInternal(Type javaType),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.64,72,50
6566_2,2,2,throws IllegalArgumentException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,0,0.3,71,49
6566_4,4,4,Class<?> rawType = TypeToken.of(javaType).getRawType();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.65,69,48
6566_5,5,5,ThriftType manualType = manualTypes.get(rawType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.65,68,47
6566_6,6,8,"if (manualType != null) {
return manualType;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,1,0.51,65,45
6566_7,7,7,return manualType;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.51,66,45
6566_9,9,11,"if (boolean.class == rawType) {
return BOOL;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,1,0.56,62,43
6566_10,10,10,return BOOL;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.25,63,43
6566_12,12,14,"if (byte.class == rawType) {
return BYTE;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,1,0.59,59,41
6566_13,13,13,return BYTE;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.29,60,41
6566_15,15,17,"if (short.class == rawType) {
return I16;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,1,0.6,56,39
6566_16,16,16,return I16;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.16,57,39
6566_18,18,20,"if (int.class == rawType) {
return I32;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,1,0.57,53,37
6566_19,19,19,return I32;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.16,54,37
6566_21,21,23,"if (long.class == rawType) {
return I64;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,1,0.58,50,35
6566_22,22,22,return I64;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.16,51,35
6566_24,24,26,"if (double.class == rawType) {
return DOUBLE;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,1,0.54,47,33
6566_25,25,25,return DOUBLE;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.16,48,33
6566_27,27,29,"if (String.class == rawType) {
return STRING;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,1,0.54,44,31
6566_28,28,28,return STRING;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.16,45,31
6566_30,30,32,"if (ByteBuffer.class.isAssignableFrom(rawType)) {
return BINARY;
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,3,3,0,0,1,0.57,41,29
6566_31,31,31,return BINARY;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,42,29
6566_33,33,36,"if (Enum.class.isAssignableFrom(rawType)) {
ThriftEnumMetadata<? extends Enum<?>> thriftEnumMetadata = getThriftEnumMetadata(rawType);
return enumType(thriftEnumMetadata);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,3,3,0,0,1,0.55,37,26
6566_34,34,34,ThriftEnumMetadata<? extends Enum<?>> thriftEnumMetadata = getThriftEnumMetadata(rawType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.53,39,27
6566_35,35,35,return enumType(thriftEnumMetadata);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.56,38,26
6566_37,37,43,"if (rawType.isArray()) {
Class<?> elementType = rawType.getComponentType();
if (elementType == byte.class) {
return coercions.get(javaType).getThriftType();
}
return array(getCollectionElementThriftTypeReference(elementType));
}",1,0,0,0,0,0,0,0,0,4,2,7,0,1,0,0,3,3,0,0,1,0.6,30,21
6566_38,38,38,Class<?> elementType = rawType.getComponentType();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.63,35,24
6566_39,39,41,"if (elementType == byte.class) {
return coercions.get(javaType).getThriftType();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,1,0.6,32,22
6566_40,40,40,return coercions.get(javaType).getThriftType();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.59,33,22
6566_42,42,42,return array(getCollectionElementThriftTypeReference(elementType));,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.55,31,21
6566_44,44,48,"if (Map.class.isAssignableFrom(rawType)) {
Type mapKeyType = getMapKeyType(javaType);
Type mapValueType = getMapValueType(javaType);
return map(getMapKeyThriftTypeReference(mapKeyType), getMapValueThriftTypeReference(mapValueType));
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,0,3,3,0,0,1,0.59,25,17
6566_45,45,45,Type mapKeyType = getMapKeyType(javaType);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.61,28,19
6566_46,46,46,Type mapValueType = getMapValueType(javaType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.59,27,18
6566_47,47,47,"return map(getMapKeyThriftTypeReference(mapKeyType), getMapValueThriftTypeReference(mapValueType));",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.56,26,17
6566_49,49,52,"if (Set.class.isAssignableFrom(rawType)) {
Type elementType = getIterableType(javaType);
return set(getCollectionElementThriftTypeReference(elementType));
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,3,3,0,0,1,0.6,21,14
6566_50,50,50,Type elementType = getIterableType(javaType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.62,23,15
6566_51,51,51,return set(getCollectionElementThriftTypeReference(elementType));,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.55,22,14
6566_53,53,56,"if (Iterable.class.isAssignableFrom(rawType)) {
Type elementType = getIterableType(javaType);
return list(getCollectionElementThriftTypeReference(elementType));
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,3,3,0,0,1,0.6,17,11
6566_54,54,54,Type elementType = getIterableType(javaType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.62,19,12
6566_55,55,55,return list(getCollectionElementThriftTypeReference(elementType));,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.55,18,11
6566_57,57,60,"if (Optional.class.isAssignableFrom(rawType)) {
Type elementType = getOptionalType(javaType);
return optional(getOptionalThriftTypeReference(elementType));
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,3,3,0,0,1,0.62,13,8
6566_58,58,58,Type elementType = getOptionalType(javaType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.64,15,9
6566_59,59,59,return optional(getOptionalThriftTypeReference(elementType));,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.58,14,8
6566_61,61,63,"if (void.class.isAssignableFrom(rawType) || Void.class.isAssignableFrom(rawType)) {
return VOID;
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,3,3,0,0,1,0.53,10,6
6566_62,62,62,return VOID;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.11,11,6
6566_64,64,67,"if (isStructType(rawType)) {
ThriftStructMetadata structMetadata = getThriftStructMetadata(javaType);
return struct(structMetadata);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,3,3,0,0,1,0.55,6,3
6566_65,65,65,ThriftStructMetadata structMetadata = getThriftStructMetadata(javaType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.53,8,4
6566_66,66,66,return struct(structMetadata);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.29,7,3
6566_69,69,72,"if (ListenableFuture.class.isAssignableFrom(rawType)) {
Type returnType = getFutureReturnType(javaType);
return getThriftType(returnType);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,3,0,0,1,0.6,1,0
6566_70,70,70,Type returnType = getFutureReturnType(javaType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.58,3,1
6566_71,71,71,return getThriftType(returnType);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.61,2,0
6566_74,74,74,TypeCoercion coercion = coercions.get(javaType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,1,0.62,0,0
6566_75,75,77,"if (coercion != null) {
return coercion.getThriftType();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,1,0.56,1,0
6566_76,76,76,return coercion.getThriftType();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.59,2,1
6566_78,78,78,"throw new IllegalArgumentException(""Type can not be coerced to a Thrift type: "" + javaType);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,2,0.61,4,3
6567_1,1,1,"    private ThriftTypeReference getThriftTypeReference(Type javaType, Recursiveness recursiveness)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,4,0.86,5,4
6567_3,3,3,ThriftType thriftType = getThriftTypeFromCache(javaType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,2,0.71,3,3
6567_4,4,14,"if (thriftType == null) {
if (recursiveness == Recursiveness.FORCED ||
(recursiveness == Recursiveness.ALLOWED && stack.get().contains(javaType))) {
deferredTypesWorkList.get().add(javaType);
return new RecursiveThriftTypeReference(this, javaType);
}
else {
thriftType = buildThriftType(javaType);
typeCache.putIfAbsent(javaType, thriftType);
}
}",1,0,0,0,0,0,0,0,0,7,2,11,0,1,0,0,6,4,1,0,5,0.85,0,0
6567_5,5,13,"if (recursiveness == Recursiveness.FORCED ||
(recursiveness == Recursiveness.ALLOWED && stack.get().contains(javaType))) {
deferredTypesWorkList.get().add(javaType);
return new RecursiveThriftTypeReference(this, javaType);
}
else {
thriftType = buildThriftType(javaType);
typeCache.putIfAbsent(javaType, thriftType);
}",1,0,0,0,0,0,0,0,0,6,1,9,0,0,0,0,6,4,1,0,5,0.84,0,0
6567_6,6,6,(recursiveness == Recursiveness.ALLOWED && stack.get().contains(javaType))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,2,0.62,0,0
6567_7,7,7,deferredTypesWorkList.get().add(javaType);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.48,0,0
6567_8,8,8,"return new RecursiveThriftTypeReference(this, javaType);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,5,0.91,1,0
6567_10,10,10,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.34,3,2
6567_11,11,11,thriftType = buildThriftType(javaType);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,2,0.71,4,2
6567_12,12,12,"typeCache.putIfAbsent(javaType, thriftType);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,2,0.64,5,3
6567_15,15,15,return new DefaultThriftTypeReference(thriftType);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,4,1,0,4,0.85,8,5
6568_1,1,1,public ThriftProtocolType getThriftProtocolType(Type javaType),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.63,70,45
6568_3,3,3,ThriftType manualType = manualTypes.get(javaType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.65,68,44
6568_4,4,6,"if (manualType != null) {
return manualType.getProtocolType();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,3,0,0,1,0.53,65,42
6568_5,5,5,return manualType.getProtocolType();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.53,66,42
6568_8,8,8,Class<?> rawType = TypeToken.of(javaType).getRawType();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.65,63,41
6568_10,10,12,"if (boolean.class == rawType) {
return ThriftProtocolType.BOOL;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,3,3,0,0,1,0.59,59,39
6568_11,11,11,return ThriftProtocolType.BOOL;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.57,60,39
6568_13,13,15,"if (byte.class == rawType) {
return ThriftProtocolType.BYTE;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,1,0.61,56,37
6568_14,14,14,return ThriftProtocolType.BYTE;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.59,57,37
6568_16,16,18,"if (short.class == rawType) {
return ThriftProtocolType.I16;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,1,0.61,53,35
6568_17,17,17,return ThriftProtocolType.I16;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.59,54,35
6568_19,19,21,"if (int.class == rawType) {
return ThriftProtocolType.I32;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,1,0.6,50,33
6568_20,20,20,return ThriftProtocolType.I32;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.59,51,33
6568_22,22,24,"if (long.class == rawType) {
return ThriftProtocolType.I64;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,1,0.61,47,31
6568_23,23,23,return ThriftProtocolType.I64;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.59,48,31
6568_25,25,27,"if (double.class == rawType) {
return ThriftProtocolType.DOUBLE;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,1,0.58,44,29
6568_26,26,26,return ThriftProtocolType.DOUBLE;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.56,45,29
6568_28,28,30,"if (String.class == rawType) {
return ThriftProtocolType.STRING;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,1,0.58,41,27
6568_29,29,29,return ThriftProtocolType.STRING;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.56,42,27
6568_31,31,33,"if (ByteBuffer.class.isAssignableFrom(rawType)) {
return ThriftProtocolType.BINARY;
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,3,3,0,0,1,0.58,38,25
6568_32,32,32,return ThriftProtocolType.BINARY;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.58,39,25
6568_34,34,36,"if (Enum.class.isAssignableFrom(rawType)) {
return ThriftProtocolType.ENUM;
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,3,3,0,0,1,0.59,35,23
6568_35,35,35,return ThriftProtocolType.ENUM;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.57,36,23
6568_37,37,42,"if (rawType.isArray()) {
Class<?> elementType = rawType.getComponentType();
if (isSupportedArrayComponentType(elementType)) {
return ThriftProtocolType.LIST;
}
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,0,3,3,0,0,1,0.61,29,19
6568_38,38,38,Class<?> elementType = rawType.getComponentType();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.63,33,21
6568_39,39,41,"if (isSupportedArrayComponentType(elementType)) {
return ThriftProtocolType.LIST;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,1,0.58,30,19
6568_40,40,40,return ThriftProtocolType.LIST;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.55,31,19
6568_43,43,50,"if (Map.class.isAssignableFrom(rawType)) {
Type mapKeyType = getMapKeyType(javaType);
Type mapValueType = getMapValueType(javaType);
if (isSupportedStructFieldType(mapKeyType) &&
isSupportedStructFieldType(mapValueType)) {
return ThriftProtocolType.MAP;
}
}",1,0,0,0,0,0,0,0,0,5,2,8,1,1,0,0,3,3,0,0,1,0.61,21,13
6568_44,44,44,Type mapKeyType = getMapKeyType(javaType);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.61,27,17
6568_45,45,45,Type mapValueType = getMapValueType(javaType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.59,26,16
6568_46,46,49,"if (isSupportedStructFieldType(mapKeyType) &&
isSupportedStructFieldType(mapValueType)) {
return ThriftProtocolType.MAP;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,3,3,0,0,1,0.59,22,13
6568_47,47,47,isSupportedStructFieldType(mapValueType)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.59,24,14
6568_48,48,48,return ThriftProtocolType.MAP;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.56,23,13
6568_51,51,56,"if (Set.class.isAssignableFrom(rawType)) {
Type elementType = getIterableType(javaType);
if (isSupportedStructFieldType(elementType)) {
return ThriftProtocolType.SET;
}
}",1,0,0,0,0,0,0,0,0,3,2,6,1,1,0,0,3,3,0,0,1,0.62,15,9
6568_52,52,52,Type elementType = getIterableType(javaType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.62,19,11
6568_53,53,55,"if (isSupportedStructFieldType(elementType)) {
return ThriftProtocolType.SET;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,1,0.6,16,9
6568_54,54,54,return ThriftProtocolType.SET;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.57,17,9
6568_57,57,62,"if (Iterable.class.isAssignableFrom(rawType)) {
Type elementType = getIterableType(javaType);
if (isSupportedStructFieldType(elementType)) {
return ThriftProtocolType.LIST;
}
}",1,0,0,0,0,0,0,0,0,3,2,6,1,1,0,0,3,3,0,0,1,0.62,9,5
6568_58,58,58,Type elementType = getIterableType(javaType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.62,13,7
6568_59,59,61,"if (isSupportedStructFieldType(elementType)) {
return ThriftProtocolType.LIST;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,1,0.59,10,5
6568_60,60,60,return ThriftProtocolType.LIST;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.55,11,5
6568_63,63,66,"if (Optional.class.isAssignableFrom(rawType)) {
Type elementType = getOptionalType(javaType);
return getThriftProtocolType(elementType);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,3,3,0,0,1,0.63,5,2
6568_64,64,64,Type elementType = getOptionalType(javaType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.64,7,3
6568_65,65,65,return getThriftProtocolType(elementType);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.59,6,2
6568_67,67,69,"if (isStructType(rawType)) {
return ThriftProtocolType.STRUCT;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,3,0,0,1,0.63,2,0
6568_68,68,68,return ThriftProtocolType.STRUCT;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.58,3,0
6568_72,72,72,TypeCoercion coercion = coercions.get(javaType);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,1,0.62,0,0
6568_73,73,75,"if (coercion != null) {
return coercion.getThriftType().getProtocolType();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,3,0,0,1,0.57,1,0
6568_74,74,74,return coercion.getThriftType().getProtocolType();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.59,2,1
6568_77,77,77,return ThriftProtocolType.UNKNOWN;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.58,5,3
6589_1,1,1,"private void writeFieldBeginInternal(TField field, byte typeOverride)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.56,6,3
6589_2,2,2,throws TException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,1,0,0,0,0.35,5,2
6589_5,5,5,byte typeToWrite = typeOverride == -1 ? getCompactType(field.getType()) : typeOverride;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,1,0,0,1,0.51,2,1
6589_7,7,13,"if (field.getId() > lastFieldId && field.getId() - lastFieldId <= 15) {
writeByteDirect((field.getId() - lastFieldId) << 4 | typeToWrite);
}
else {
writeByteDirect(typeToWrite);
writeI16(field.getId());
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,1,1,2,1,0,0,1,0.6,0,0
6589_8,8,8,writeByteDirect((field.getId() - lastFieldId) << 4 | typeToWrite);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.61,0,0
6589_10,10,10,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.16,2,1
6589_11,11,11,writeByteDirect(typeToWrite);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.66,3,1
6589_12,12,12,writeI16(field.getId());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.62,4,2
6589_15,15,15,lastFieldId = field.getId();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,1,0,0,0,0.36,7,4
6590_1,1,1,"private void writeFieldBeginInternal(TField field, byte typeOverride)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.57,9,5
6590_2,2,2,throws TException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,1,0,0,0,0.23,8,4
6590_5,5,5,byte typeToWrite = typeOverride == -1 ? getCompactType(field.getType()) : typeOverride;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,1,0,0,1,0.51,5,3
6590_7,7,13,"if (field.getId() > lastFieldId && field.getId() - lastFieldId <= 15) {
writeByteDirect((field.getId() - lastFieldId) << 4 | typeToWrite);
}
else {
writeByteDirect(typeToWrite);
writeI16(field.getId());
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,1,1,2,1,0,0,1,0.59,0,0
6590_8,8,8,writeByteDirect((field.getId() - lastFieldId) << 4 | typeToWrite);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.59,2,1
6590_10,10,10,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.18,0,0
6590_11,11,11,writeByteDirect(typeToWrite);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.65,0,0
6590_12,12,12,writeI16(field.getId());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.55,1,0
6590_15,15,15,lastFieldId = field.getId();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,1,0,0,0,0.38,4,2
6595_1,1,2,"@Override
public TField readFieldBegin()",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,4,2,0,1,0.56,24,13
6595_3,3,3,throws TException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,9,4,2,0,0,0.34,23,12
6595_5,5,5,byte type = readByte();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,4,2,0,0,0.39,21,11
6595_7,7,9,"if (type == TType.STOP) {
return TSTOP;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,9,4,2,0,0,0.27,17,9
6595_8,8,8,return TSTOP;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,4,2,0,0,0.23,18,9
6595_11,11,11,short fieldId;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,9,4,2,0,1,0.51,15,8
6595_13,13,13,short modifier = (short) ((type & 0xf0) >> 4);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,4,2,0,0,0.37,13,7
6595_14,14,19,"if (modifier == 0) {
fieldId = readI16();
}
else {
fieldId = (short) (lastFieldId + modifier);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,1,9,4,2,0,1,0.52,7,3
6595_15,15,15,fieldId = readI16();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,2,0,1,0.54,11,5
6595_17,17,17,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,2,0,0,0.23,9,4
6595_18,18,18,fieldId = (short) (lastFieldId + modifier);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,2,0,1,0.52,8,3
6595_21,21,21,"TField field = new TField("""", getTType((byte) (type & 0x0f)), fieldId);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,9,4,2,0,2,0.62,5,2
6595_23,23,25,"if (isBoolType(type)) {
booleanValue = (byte) (type & 0x0f) == Types.BOOLEAN_TRUE ? Boolean.TRUE : Boolean.FALSE;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,9,4,2,0,0,0.35,1,0
6595_24,24,24,booleanValue = (byte) (type & 0x0f) == Types.BOOLEAN_TRUE ? Boolean.TRUE : Boolean.FALSE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,2,0,0,0.34,2,0
6595_27,27,27,lastFieldId = field.getId();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,9,4,2,0,1,0.5,0,0
6595_28,28,28,return field;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,9,4,2,0,1,0.54,1,0
6571_1,1,1,"private synchronized void handleFailure(A address, Throwable throwable)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.36,41,27
6571_3,3,54,"try {
if (throwable instanceof ConnectionFailedException) {
failedConnections++;
}

ExceptionClassification exceptionClassification = retryPolicy.classifyException(throwable, metadata.isIdempotent());

attemptedAddresses.add(address);
if (exceptionClassification.getHostStatus() == NORMAL) {
lastException = throwable;
invocationAttempts++;
}
else if (exceptionClassification.getHostStatus() == DOWN || exceptionClassification.getHostStatus() == OVERLOADED) {
addressSelector.markdown(address);
failedConnectionAttempts.add(address);
if (exceptionClassification.getHostStatus() == OVERLOADED) {
overloadedRejects++;
}
}

Duration duration = succinctNanos(ticker.read() - startTime);
if (!exceptionClassification.isRetry().orElse(FALSE)) {
lastException = throwable;
fail(""Non-retryable exception"");
return;
}
if (invocationAttempts > retryPolicy.getMaxRetries()) {
fail(format(""Max retry attempts (%s) exceeded"", retryPolicy.getMaxRetries()));
return;
}
if (duration.compareTo(retryPolicy.getMaxRetryTime()) >= 0) {
fail(format(""Max retry time (%s) exceeded"", retryPolicy.getMaxRetryTime()));
return;
}

if (exceptionClassification.getHostStatus() != NORMAL) {
nextAttempt(false);
return;
}

Duration backoffDelay = retryPolicy.getBackoffDelay(invocationAttempts);
log.debug(""Failed invocation of %s with attempt %s, will retry in %s (overloadedRejects: %s). Exception: %s"",
metadata.getName(),
invocationAttempts,
backoffDelay,
overloadedRejects,
throwable.getMessage());
schedule(backoffDelay, () -> nextAttempt(true));
}
catch (Throwable t) {
unexpectedError(t);
}",0,0,0,0,1,0,0,0,0,31,3,52,0,0,0,0,3,2,0,0,3,0.72,0,0
6571_4,4,6,"if (throwable instanceof ConnectionFailedException) {
failedConnections++;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,2,0,0,0,0.39,36,24
6571_5,5,5,failedConnections++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,37,24
6571_8,8,8,"ExceptionClassification exceptionClassification = retryPolicy.classifyException(throwable, metadata.isIdempotent());",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.46,34,23
6571_10,10,10,attemptedAddresses.add(address);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,2,0,0,0,0.31,32,22
6571_11,11,21,"if (exceptionClassification.getHostStatus() == NORMAL) {
lastException = throwable;
invocationAttempts++;
}
else if (exceptionClassification.getHostStatus() == DOWN || exceptionClassification.getHostStatus() == OVERLOADED) {
addressSelector.markdown(address);
failedConnectionAttempts.add(address);
if (exceptionClassification.getHostStatus() == OVERLOADED) {
overloadedRejects++;
}
}",1,0,0,0,0,0,0,0,0,7,2,11,1,0,0,1,3,2,0,0,1,0.47,21,14
6571_12,12,12,lastException = throwable;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.42,30,20
6571_13,13,13,invocationAttempts++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.59,29,19
6571_15,15,15,else if (exceptionClassification.getHostStatus() == DOWN || exceptionClassification.getHostStatus() == OVERLOADED) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,27,18
6571_16,16,16,addressSelector.markdown(address);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,26,17
6571_17,17,17,failedConnectionAttempts.add(address);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.34,25,16
6571_18,18,20,"if (exceptionClassification.getHostStatus() == OVERLOADED) {
overloadedRejects++;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,0,0.4,22,14
6571_19,19,19,overloadedRejects++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.41,23,14
6571_23,23,23,Duration duration = succinctNanos(ticker.read() - startTime);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.41,19,13
6571_24,24,28,"if (!exceptionClassification.isRetry().orElse(FALSE)) {
lastException = throwable;
fail(""Non-retryable exception"");
return;
}",1,0,0,0,0,0,0,0,0,3,1,5,1,0,0,0,3,2,0,0,0,0.43,14,9
6571_25,25,25,lastException = throwable;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.42,17,11
6571_26,26,26,"fail(""Non-retryable exception"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.35,16,10
6571_27,27,27,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,15,9
6571_29,29,32,"if (invocationAttempts > retryPolicy.getMaxRetries()) {
fail(format(""Max retry attempts (%s) exceeded"", retryPolicy.getMaxRetries()));
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,0,0,0,3,2,0,0,1,0.52,10,6
6571_30,30,30,"fail(format(""Max retry attempts (%s) exceeded"", retryPolicy.getMaxRetries()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.42,12,7
6571_31,31,31,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,11,6
6571_33,33,36,"if (duration.compareTo(retryPolicy.getMaxRetryTime()) >= 0) {
fail(format(""Max retry time (%s) exceeded"", retryPolicy.getMaxRetryTime()));
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,1,0,0,1,3,2,0,0,0,0.42,6,3
6571_34,34,34,"fail(format(""Max retry time (%s) exceeded"", retryPolicy.getMaxRetryTime()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.42,8,4
6571_35,35,35,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,7,3
6571_38,38,41,"if (exceptionClassification.getHostStatus() != NORMAL) {
nextAttempt(false);
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,3,2,0,0,1,0.51,1,0
6571_39,39,39,nextAttempt(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.54,3,1
6571_40,40,40,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,2,0
6571_43,43,43,Duration backoffDelay = retryPolicy.getBackoffDelay(invocationAttempts);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,2,0.66,0,0
6571_44,44,49,"log.debug(""Failed invocation of %s with attempt %s, will retry in %s (overloadedRejects: %s). Exception: %s"",
metadata.getName(),
invocationAttempts,
backoffDelay,
overloadedRejects,
throwable.getMessage());",0,0,0,0,0,0,0,0,0,0,0,6,0,1,0,0,3,2,0,0,2,0.63,1,0
6571_50,50,50,"schedule(backoffDelay, () -> nextAttempt(true));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,2,0.69,7,2
6571_52,52,52,catch (Throwable t) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.43,9,3
6571_53,53,53,unexpectedError(t);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.4,10,3
6596_1,1,1,    protected final void verifyClass(Class<? extends Annotation> annotation),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,0,0,3,0.8,4,2
6596_3,3,3,String annotationName = annotation.getSimpleName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,2,0,0,0,0.42,2,1
6596_4,4,4,String structClassName = getStructClass().getName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,2,0,0,2,0.64,1,0
6596_6,6,8,"if (!Modifier.isPublic(getStructClass().getModifiers())) {
metadataErrors.addError(""%s class '%s' is not public"", annotationName, structClassName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,2,0,0,3,0.7,0,0
6596_7,7,7,"metadataErrors.addError(""%s class '%s' is not public"", annotationName, structClassName);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,0,0,3,0.71,1,0
6596_10,10,12,"if (!getStructClass().isAnnotationPresent(annotation)) {
metadataErrors.addError(""%s class '%s' does not have a @%s annotation"", annotationName, structClassName, annotationName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,5,2,0,0,2,0.62,4,2
6596_11,11,11,"metadataErrors.addError(""%s class '%s' does not have a @%s annotation"", annotationName, structClassName, annotationName);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,0,0,2,0.62,5,2
6597_1,1,1,    protected final void extractFromConstructors(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.53,9,5
6597_3,3,19,"if (builderType == null) {
addConstructors(structType);
}
else {
addConstructors(builderType);

addBuilderMethods();

for (Constructor<?> constructor : getStructClass().getConstructors()) {
if (constructor.isAnnotationPresent(ThriftConstructor.class)) {
metadataErrors.addWarning(
""Thrift class '%s' has a builder class, but constructor '%s' annotated with @ThriftConstructor"",
getStructClass().getName(),
constructor);
}
}
}",1,0,0,0,0,0,0,0,0,7,3,17,0,0,0,0,5,4,0,0,4,0.8,0,0
6597_4,4,4,addConstructors(structType);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.72,6,3
6597_6,6,6,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.28,4,2
6597_7,7,7,addConstructors(builderType);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,4,0,0,1,0.56,3,1
6597_9,9,9,addBuilderMethods();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,4,0,0,0,0.45,1,0
6597_11,11,18,"for (Constructor<?> constructor : getStructClass().getConstructors()) {
if (constructor.isAnnotationPresent(ThriftConstructor.class)) {
metadataErrors.addWarning(
""Thrift class '%s' has a builder class, but constructor '%s' annotated with @ThriftConstructor"",
getStructClass().getName(),
constructor);
}
}",0,0,0,1,0,0,0,0,0,2,2,8,0,0,1,0,5,4,0,0,4,0.83,0,0
6597_12,12,17,"if (constructor.isAnnotationPresent(ThriftConstructor.class)) {
metadataErrors.addWarning(
""Thrift class '%s' has a builder class, but constructor '%s' annotated with @ThriftConstructor"",
getStructClass().getName(),
constructor);
}",1,0,0,0,0,0,0,0,0,1,1,6,0,0,0,0,5,4,0,0,4,0.82,1,0
6597_13,13,16,"metadataErrors.addWarning(
""Thrift class '%s' has a builder class, but constructor '%s' annotated with @ThriftConstructor"",
getStructClass().getName(),
constructor);",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,5,4,0,0,4,0.81,2,1
6598_1,1,1,protected final void addBuilderMethods(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,1,0.48,22,7
6598_3,3,22,"for (Method method : findAnnotatedMethods(getBuilderClass(), ThriftConstructor.class)) {
List<ParameterInjection> parameters = getParameterInjections(
builderType,
method.getParameterAnnotations(),
resolveFieldTypes(builderType, method.getGenericParameterTypes()),
extractParameterNames(method));

if (parameters != null) {
fields.addAll(parameters);
builderMethodInjections.add(new MethodInjection(method, parameters));
}

if (!getStructClass().isAssignableFrom(method.getReturnType())) {
metadataErrors.addError(
""'%s' says that '%s' is its builder class, but @ThriftConstructor method '%s' in the builder does not build an instance assignable to that type"",
structType,
builderType,
method.getName());
}
}",0,0,0,1,0,0,0,0,0,6,2,20,0,0,0,1,7,3,2,0,3,0.66,1,0
6598_4,4,8,"List<ParameterInjection> parameters = getParameterInjections(
builderType,
method.getParameterAnnotations(),
resolveFieldTypes(builderType, method.getGenericParameterTypes()),
extractParameterNames(method));",0,0,0,0,0,1,0,0,0,0,0,5,0,0,0,1,7,3,2,0,2,0.57,15,5
6598_10,10,13,"if (parameters != null) {
fields.addAll(parameters);
builderMethodInjections.add(new MethodInjection(method, parameters));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,7,3,2,0,1,0.54,10,2
6598_11,11,11,fields.addAll(parameters);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,2,0,0,0.42,12,3
6598_12,12,12,"builderMethodInjections.add(new MethodInjection(method, parameters));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,2,0,1,0.55,11,2
6598_15,15,21,"if (!getStructClass().isAssignableFrom(method.getReturnType())) {
metadataErrors.addError(
""'%s' says that '%s' is its builder class, but @ThriftConstructor method '%s' in the builder does not build an instance assignable to that type"",
structType,
builderType,
method.getName());
}",1,0,0,0,0,0,0,0,0,1,1,7,0,0,1,0,7,3,2,0,1,0.55,2,0
6598_16,16,20,"metadataErrors.addError(
""'%s' says that '%s' is its builder class, but @ThriftConstructor method '%s' in the builder does not build an instance assignable to that type"",
structType,
builderType,
method.getName());",0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,7,3,2,0,1,0.54,3,0
6598_24,24,33,"for (Method method : getAllDeclaredMethods(getBuilderClass())) {
if (method.isAnnotationPresent(ThriftConstructor.class) || hasThriftFieldAnnotation(method)) {
if (!Modifier.isPublic(method.getModifiers())) {
metadataErrors.addError(""@ThriftConstructor method '%s' is not public"", method.toGenericString());
}
if (Modifier.isStatic(method.getModifiers())) {
metadataErrors.addError(""@ThriftConstructor method '%s' is static"", method.toGenericString());
}
}
}",0,0,0,1,0,0,0,0,0,5,3,10,0,0,1,1,7,3,2,0,2,0.64,0,0
6598_25,25,32,"if (method.isAnnotationPresent(ThriftConstructor.class) || hasThriftFieldAnnotation(method)) {
if (!Modifier.isPublic(method.getModifiers())) {
metadataErrors.addError(""@ThriftConstructor method '%s' is not public"", method.toGenericString());
}
if (Modifier.isStatic(method.getModifiers())) {
metadataErrors.addError(""@ThriftConstructor method '%s' is static"", method.toGenericString());
}
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,0,0,7,3,2,0,2,0.64,1,0
6598_26,26,28,"if (!Modifier.isPublic(method.getModifiers())) {
metadataErrors.addError(""@ThriftConstructor method '%s' is not public"", method.toGenericString());
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,7,3,2,0,1,0.57,2,1
6598_27,27,27,"metadataErrors.addError(""@ThriftConstructor method '%s' is not public"", method.toGenericString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,1,0.57,3,2
6598_29,29,31,"if (Modifier.isStatic(method.getModifiers())) {
metadataErrors.addError(""@ThriftConstructor method '%s' is static"", method.toGenericString());
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,7,3,2,0,1,0.58,5,4
6598_30,30,30,"metadataErrors.addError(""@ThriftConstructor method '%s' is static"", method.toGenericString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,1,0.58,6,4
6598_35,35,37,"if (builderMethodInjections.isEmpty()) {
metadataErrors.addError(""Struct builder class '%s' does not have a public builder method annotated with @ThriftConstructor"", getBuilderClass().getName());
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,1,0,7,3,2,0,2,0.59,11,6
6598_36,36,36,"metadataErrors.addError(""Struct builder class '%s' does not have a public builder method annotated with @ThriftConstructor"", getBuilderClass().getName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,2,0.59,12,6
6598_38,38,40,"if (builderMethodInjections.size() > 1) {
metadataErrors.addError(""Multiple builder methods are annotated with @ThriftConstructor "", builderMethodInjections);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,7,3,2,0,2,0.6,14,8
6598_39,39,39,"metadataErrors.addError(""Multiple builder methods are annotated with @ThriftConstructor "", builderMethodInjections);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,2,0.61,15,8
6599_1,1,1,"    protected final void addFields(Class<?> clazz, boolean allowReaders, boolean allowWriters)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,1,0.5,5,2
6599_3,3,5,"for (Field fieldField : ReflectionHelper.findAnnotatedFields(clazz, ThriftField.class)) {
addField(fieldField, allowReaders, allowWriters);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,1,7,3,2,0,3,0.76,1,0
6599_4,4,4,"addField(fieldField, allowReaders, allowWriters);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,1,0.55,2,0
6599_7,7,16,"for (Field field : getAllDeclaredFields(clazz)) {
if (field.isAnnotationPresent(ThriftField.class)) {
if (!Modifier.isPublic(field.getModifiers())) {
metadataErrors.addError(""@ThriftField field '%s' is not public"", field.toGenericString());
}
if (Modifier.isStatic(field.getModifiers())) {
metadataErrors.addError(""@ThriftField field '%s' is static"", field.toGenericString());
}
}
}",0,0,0,1,0,0,0,0,0,5,3,10,0,0,1,0,7,3,2,0,2,0.63,0,0
6599_8,8,15,"if (field.isAnnotationPresent(ThriftField.class)) {
if (!Modifier.isPublic(field.getModifiers())) {
metadataErrors.addError(""@ThriftField field '%s' is not public"", field.toGenericString());
}
if (Modifier.isStatic(field.getModifiers())) {
metadataErrors.addError(""@ThriftField field '%s' is static"", field.toGenericString());
}
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,0,0,7,3,2,0,2,0.62,1,0
6599_9,9,11,"if (!Modifier.isPublic(field.getModifiers())) {
metadataErrors.addError(""@ThriftField field '%s' is not public"", field.toGenericString());
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,7,3,2,0,1,0.56,2,1
6599_10,10,10,"metadataErrors.addError(""@ThriftField field '%s' is not public"", field.toGenericString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,1,0.56,3,2
6599_12,12,14,"if (Modifier.isStatic(field.getModifiers())) {
metadataErrors.addError(""@ThriftField field '%s' is static"", field.toGenericString());
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,7,3,2,0,1,0.56,5,4
6599_13,13,13,"metadataErrors.addError(""@ThriftField field '%s' is static"", field.toGenericString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,1,0.56,6,4
6600_1,1,1,"    protected final void addMethods(Type type, boolean allowReaders, boolean allowWriters)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,1,0.49,7,3
6600_3,3,3,Class<?> clazz = TypeToken.of(type).getRawType();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,3,2,0,0,0.46,5,2
6600_5,5,7,"for (Method fieldMethod : findAnnotatedMethods(clazz, ThriftField.class)) {
addMethod(type, fieldMethod, allowReaders, allowWriters);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,1,1,7,3,2,0,3,0.73,1,0
6600_6,6,6,"addMethod(type, fieldMethod, allowReaders, allowWriters);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,1,0.54,2,0
6600_9,9,18,"for (Method method : getAllDeclaredMethods(clazz)) {
if (method.isAnnotationPresent(ThriftField.class) || hasThriftFieldAnnotation(method)) {
if (!Modifier.isPublic(method.getModifiers())) {
metadataErrors.addError(""@ThriftField method '%s' is not public"", method.toGenericString());
}
if (Modifier.isStatic(method.getModifiers())) {
metadataErrors.addError(""@ThriftField method '%s' is static"", method.toGenericString());
}
}
}",0,0,0,1,0,0,0,0,0,5,3,10,0,0,1,0,7,3,2,0,2,0.63,0,0
6600_10,10,17,"if (method.isAnnotationPresent(ThriftField.class) || hasThriftFieldAnnotation(method)) {
if (!Modifier.isPublic(method.getModifiers())) {
metadataErrors.addError(""@ThriftField method '%s' is not public"", method.toGenericString());
}
if (Modifier.isStatic(method.getModifiers())) {
metadataErrors.addError(""@ThriftField method '%s' is static"", method.toGenericString());
}
}",1,0,0,0,0,0,0,0,0,4,2,8,0,0,0,0,7,3,2,0,2,0.62,1,0
6600_11,11,13,"if (!Modifier.isPublic(method.getModifiers())) {
metadataErrors.addError(""@ThriftField method '%s' is not public"", method.toGenericString());
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,7,3,2,0,1,0.54,2,1
6600_12,12,12,"metadataErrors.addError(""@ThriftField method '%s' is not public"", method.toGenericString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,1,0.55,3,2
6600_14,14,16,"if (Modifier.isStatic(method.getModifiers())) {
metadataErrors.addError(""@ThriftField method '%s' is static"", method.toGenericString());
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,7,3,2,0,1,0.55,5,4
6600_15,15,15,"metadataErrors.addError(""@ThriftField method '%s' is static"", method.toGenericString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,2,0,1,0.56,6,4
6601_1,1,1,    protected final void normalizeThriftFields(ThriftCatalog catalog),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.45,1,0
6601_3,3,3,Set<String> fieldsWithConflictingIds = inferThriftFieldIds();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,2,0.7,0,0
6601_5,5,6,"Map<Optional<Short>, List<FieldMetadata>> fieldsById = fields.stream()
.collect(groupingBy(field -> Optional.ofNullable(field.getId())));",0,0,0,0,0,1,0,0,0,0,0,2,1,1,1,0,4,3,0,0,2,0.7,2,1
6601_7,7,50,"for (Entry<Optional<Short>, List<FieldMetadata>> entry : fieldsById.entrySet()) {
Collection<FieldMetadata> fields = entry.getValue();

if (!entry.getKey().isPresent()) {
Set<String> sortedFields = fields.stream()
.map(FieldMetadata::getOrExtractThriftFieldName)
.collect(toCollection(TreeSet::new));
for (String fieldName : sortedFields) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}
}
continue;
}

short fieldId = entry.getKey().get();

String fieldName = extractFieldName(fieldId, fields);
for (FieldMetadata field : fields) {
field.setName(fieldName);
}

Requiredness requiredness = extractFieldRequiredness(fieldId, fieldName, fields);
for (FieldMetadata field : fields) {
field.setRequiredness(requiredness);
}

boolean isLegacyId = extractFieldIsLegacyId(fieldId, fieldName, fields);
for (FieldMetadata field : fields) {
field.setIsLegacyId(isLegacyId);
}

Map<String, String> idlAnnotations = extractFieldIdlAnnotations(fieldId, fields);
for (FieldMetadata field : fields) {
field.setIdlAnnotations(idlAnnotations);
}

boolean isRecursiveReference = extractFieldIsRecursiveReference(fieldId, fields);
for (FieldMetadata field : fields) {
field.setIsRecursiveReference(isRecursiveReference);
}

verifyFieldType(fieldId, fieldName, fields, catalog);
}",0,0,0,1,0,0,0,0,0,24,4,44,1,1,0,0,4,3,0,0,2,0.69,4,2
6601_8,8,8,Collection<FieldMetadata> fields = entry.getValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.53,5,2
6601_10,10,20,"if (!entry.getKey().isPresent()) {
Set<String> sortedFields = fields.stream()
.map(FieldMetadata::getOrExtractThriftFieldName)
.collect(toCollection(TreeSet::new));
for (String fieldName : sortedFields) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}
}
continue;
}",1,0,0,0,0,0,0,0,0,5,3,11,0,0,1,1,4,3,0,0,2,0.62,7,4
6601_11,11,13,"Set<String> sortedFields = fields.stream()
.map(FieldMetadata::getOrExtractThriftFieldName)
.collect(toCollection(TreeSet::new));",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,4,3,0,0,1,0.52,8,4
6601_14,14,18,"for (String fieldName : sortedFields) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,1,0,0,4,3,0,0,2,0.64,11,6
6601_15,15,17,"if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,2,0.63,12,6
6601_16,16,16,"metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.6,13,7
6601_19,19,19,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.33,16,9
6601_22,22,22,short fieldId = entry.getKey().get();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,2,0.63,19,10
6601_24,24,24,"String fieldName = extractFieldName(fieldId, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,2,0.74,21,11
6601_25,25,27,"for (FieldMetadata field : fields) {
field.setName(fieldName);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,4,3,0,0,1,0.62,22,11
6601_26,26,26,field.setName(fieldName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.56,23,12
6601_29,29,29,"Requiredness requiredness = extractFieldRequiredness(fieldId, fieldName, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,2,0.8,26,14
6601_30,30,32,"for (FieldMetadata field : fields) {
field.setRequiredness(requiredness);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,4,3,0,0,1,0.63,27,14
6601_31,31,31,field.setRequiredness(requiredness);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.54,28,15
6601_34,34,34,"boolean isLegacyId = extractFieldIsLegacyId(fieldId, fieldName, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,2,0.74,31,17
6601_35,35,37,"for (FieldMetadata field : fields) {
field.setIsLegacyId(isLegacyId);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,4,3,0,0,2,0.72,32,17
6601_36,36,36,field.setIsLegacyId(isLegacyId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.69,33,18
6601_39,39,39,"Map<String, String> idlAnnotations = extractFieldIdlAnnotations(fieldId, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,2,0.67,36,20
6601_40,40,42,"for (FieldMetadata field : fields) {
field.setIdlAnnotations(idlAnnotations);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,4,3,0,0,1,0.57,37,20
6601_41,41,41,field.setIdlAnnotations(idlAnnotations);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.49,38,21
6601_44,44,44,"boolean isRecursiveReference = extractFieldIsRecursiveReference(fieldId, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,2,0.68,41,23
6601_45,45,47,"for (FieldMetadata field : fields) {
field.setIsRecursiveReference(isRecursiveReference);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,4,3,0,0,1,0.57,42,23
6601_46,46,46,field.setIsRecursiveReference(isRecursiveReference);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.5,43,24
6601_49,49,49,"verifyFieldType(fieldId, fieldName, fields, catalog);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,2,0.7,46,26
6602_1,1,1,    protected final void normalizeThriftFields(ThriftCatalog catalog),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.42,3,1
6602_3,3,3,Set<String> fieldsWithConflictingIds = inferThriftFieldIds();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,2,0.71,1,0
6602_5,5,6,"Map<Optional<Short>, List<FieldMetadata>> fieldsById = fields.stream()
.collect(groupingBy(field -> Optional.ofNullable(field.getId())));",0,0,0,0,0,1,0,0,0,0,0,2,1,1,1,0,3,3,0,0,3,0.82,0,0
6602_7,7,50,"for (Entry<Optional<Short>, List<FieldMetadata>> entry : fieldsById.entrySet()) {
Collection<FieldMetadata> fields = entry.getValue();

if (!entry.getKey().isPresent()) {
Set<String> sortedFields = fields.stream()
.map(FieldMetadata::getOrExtractThriftFieldName)
.collect(toCollection(TreeSet::new));
for (String fieldName : sortedFields) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}
}
continue;
}

short fieldId = entry.getKey().get();

String fieldName = extractFieldName(fieldId, fields);
for (FieldMetadata field : fields) {
field.setName(fieldName);
}

Requiredness requiredness = extractFieldRequiredness(fieldId, fieldName, fields);
for (FieldMetadata field : fields) {
field.setRequiredness(requiredness);
}

boolean isLegacyId = extractFieldIsLegacyId(fieldId, fieldName, fields);
for (FieldMetadata field : fields) {
field.setIsLegacyId(isLegacyId);
}

Map<String, String> idlAnnotations = extractFieldIdlAnnotations(fieldId, fields);
for (FieldMetadata field : fields) {
field.setIdlAnnotations(idlAnnotations);
}

boolean isRecursiveReference = extractFieldIsRecursiveReference(fieldId, fields);
for (FieldMetadata field : fields) {
field.setIsRecursiveReference(isRecursiveReference);
}

verifyFieldType(fieldId, fieldName, fields, catalog);
}",0,0,0,1,0,0,0,0,0,24,4,44,1,1,0,0,3,3,0,0,2,0.69,2,1
6602_8,8,8,Collection<FieldMetadata> fields = entry.getValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.54,3,1
6602_10,10,20,"if (!entry.getKey().isPresent()) {
Set<String> sortedFields = fields.stream()
.map(FieldMetadata::getOrExtractThriftFieldName)
.collect(toCollection(TreeSet::new));
for (String fieldName : sortedFields) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}
}
continue;
}",1,0,0,0,0,0,0,0,0,5,3,11,0,0,1,1,3,3,0,0,2,0.63,5,3
6602_11,11,13,"Set<String> sortedFields = fields.stream()
.map(FieldMetadata::getOrExtractThriftFieldName)
.collect(toCollection(TreeSet::new));",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,3,3,0,0,1,0.5,6,3
6602_14,14,18,"for (String fieldName : sortedFields) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,1,0,0,3,3,0,0,2,0.66,9,5
6602_15,15,17,"if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,2,0.66,10,5
6602_16,16,16,"metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.63,11,6
6602_19,19,19,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.22,14,8
6602_22,22,22,short fieldId = entry.getKey().get();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,2,0.61,17,9
6602_24,24,24,"String fieldName = extractFieldName(fieldId, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,2,0.75,19,10
6602_25,25,27,"for (FieldMetadata field : fields) {
field.setName(fieldName);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,3,3,0,0,1,0.62,20,10
6602_26,26,26,field.setName(fieldName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.56,21,11
6602_29,29,29,"Requiredness requiredness = extractFieldRequiredness(fieldId, fieldName, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,2,0.8,24,13
6602_30,30,32,"for (FieldMetadata field : fields) {
field.setRequiredness(requiredness);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,3,3,0,0,1,0.64,25,13
6602_31,31,31,field.setRequiredness(requiredness);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.56,26,14
6602_34,34,34,"boolean isLegacyId = extractFieldIsLegacyId(fieldId, fieldName, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,2,0.75,29,16
6602_35,35,37,"for (FieldMetadata field : fields) {
field.setIsLegacyId(isLegacyId);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,3,3,0,0,2,0.76,30,16
6602_36,36,36,field.setIsLegacyId(isLegacyId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.73,31,17
6602_39,39,39,"Map<String, String> idlAnnotations = extractFieldIdlAnnotations(fieldId, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,2,0.67,34,19
6602_40,40,42,"for (FieldMetadata field : fields) {
field.setIdlAnnotations(idlAnnotations);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,3,3,0,0,1,0.57,35,19
6602_41,41,41,field.setIdlAnnotations(idlAnnotations);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.49,36,20
6602_44,44,44,"boolean isRecursiveReference = extractFieldIsRecursiveReference(fieldId, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,2,0.69,39,22
6602_45,45,47,"for (FieldMetadata field : fields) {
field.setIsRecursiveReference(isRecursiveReference);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,3,3,0,0,1,0.59,40,22
6602_46,46,46,field.setIsRecursiveReference(isRecursiveReference);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.51,41,23
6602_49,49,49,"verifyFieldType(fieldId, fieldName, fields, catalog);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,2,0.71,44,25
6603_1,1,1,    protected final void normalizeThriftFields(ThriftCatalog catalog),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.54,13,7
6603_3,3,3,Set<String> fieldsWithConflictingIds = inferThriftFieldIds();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,5,0,0,3,0.78,11,6
6603_5,5,6,"Map<Optional<Short>, List<FieldMetadata>> fieldsById = fields.stream()
.collect(groupingBy(field -> Optional.ofNullable(field.getId())));",0,0,0,0,0,1,0,0,0,0,0,2,1,1,1,0,5,5,0,0,2,0.67,8,5
6603_7,7,50,"for (Entry<Optional<Short>, List<FieldMetadata>> entry : fieldsById.entrySet()) {
Collection<FieldMetadata> fields = entry.getValue();

if (!entry.getKey().isPresent()) {
Set<String> sortedFields = fields.stream()
.map(FieldMetadata::getOrExtractThriftFieldName)
.collect(toCollection(TreeSet::new));
for (String fieldName : sortedFields) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}
}
continue;
}

short fieldId = entry.getKey().get();

String fieldName = extractFieldName(fieldId, fields);
for (FieldMetadata field : fields) {
field.setName(fieldName);
}

Requiredness requiredness = extractFieldRequiredness(fieldId, fieldName, fields);
for (FieldMetadata field : fields) {
field.setRequiredness(requiredness);
}

boolean isLegacyId = extractFieldIsLegacyId(fieldId, fieldName, fields);
for (FieldMetadata field : fields) {
field.setIsLegacyId(isLegacyId);
}

Map<String, String> idlAnnotations = extractFieldIdlAnnotations(fieldId, fields);
for (FieldMetadata field : fields) {
field.setIdlAnnotations(idlAnnotations);
}

boolean isRecursiveReference = extractFieldIsRecursiveReference(fieldId, fields);
for (FieldMetadata field : fields) {
field.setIsRecursiveReference(isRecursiveReference);
}

verifyFieldType(fieldId, fieldName, fields, catalog);
}",0,0,0,1,0,0,0,0,0,24,4,44,1,1,0,0,5,5,0,0,4,0.78,0,0
6603_8,8,8,Collection<FieldMetadata> fields = entry.getValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,5,0,0,1,0.51,6,3
6603_10,10,20,"if (!entry.getKey().isPresent()) {
Set<String> sortedFields = fields.stream()
.map(FieldMetadata::getOrExtractThriftFieldName)
.collect(toCollection(TreeSet::new));
for (String fieldName : sortedFields) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}
}
continue;
}",1,0,0,0,0,0,0,0,0,5,3,11,0,0,1,1,5,5,0,0,4,0.74,0,0
6603_11,11,13,"Set<String> sortedFields = fields.stream()
.map(FieldMetadata::getOrExtractThriftFieldName)
.collect(toCollection(TreeSet::new));",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,5,5,0,0,1,0.53,1,1
6603_14,14,18,"for (String fieldName : sortedFields) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,1,0,0,5,5,0,0,4,0.8,0,0
6603_15,15,17,"if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,5,0,0,4,0.81,0,0
6603_16,16,16,"metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,3,0.77,1,0
6603_19,19,19,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.24,4,2
6603_22,22,22,short fieldId = entry.getKey().get();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,5,0,0,2,0.58,7,3
6603_24,24,24,"String fieldName = extractFieldName(fieldId, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,2,0.65,9,4
6603_25,25,27,"for (FieldMetadata field : fields) {
field.setName(fieldName);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,5,5,0,0,1,0.59,10,4
6603_26,26,26,field.setName(fieldName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.53,11,5
6603_29,29,29,"Requiredness requiredness = extractFieldRequiredness(fieldId, fieldName, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,2,0.71,14,7
6603_30,30,32,"for (FieldMetadata field : fields) {
field.setRequiredness(requiredness);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,5,5,0,0,1,0.62,15,7
6603_31,31,31,field.setRequiredness(requiredness);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.55,16,8
6603_34,34,34,"boolean isLegacyId = extractFieldIsLegacyId(fieldId, fieldName, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,2,0.69,19,10
6603_35,35,37,"for (FieldMetadata field : fields) {
field.setIsLegacyId(isLegacyId);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,5,5,0,0,2,0.68,20,10
6603_36,36,36,field.setIsLegacyId(isLegacyId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.65,21,11
6603_39,39,39,"Map<String, String> idlAnnotations = extractFieldIdlAnnotations(fieldId, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,2,0.61,24,13
6603_40,40,42,"for (FieldMetadata field : fields) {
field.setIdlAnnotations(idlAnnotations);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,5,5,0,0,1,0.58,25,13
6603_41,41,41,field.setIdlAnnotations(idlAnnotations);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.51,26,14
6603_44,44,44,"boolean isRecursiveReference = extractFieldIsRecursiveReference(fieldId, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,2,0.62,29,16
6603_45,45,47,"for (FieldMetadata field : fields) {
field.setIsRecursiveReference(isRecursiveReference);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,5,5,0,0,1,0.53,30,16
6603_46,46,46,field.setIsRecursiveReference(isRecursiveReference);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.46,31,17
6603_49,49,49,"verifyFieldType(fieldId, fieldName, fields, catalog);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,2,0.71,34,19
6604_1,1,1,    protected final void normalizeThriftFields(ThriftCatalog catalog),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.44,22,11
6604_3,3,3,Set<String> fieldsWithConflictingIds = inferThriftFieldIds();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,2,0.68,20,10
6604_5,5,6,"Map<Optional<Short>, List<FieldMetadata>> fieldsById = fields.stream()
.collect(groupingBy(field -> Optional.ofNullable(field.getId())));",0,0,0,0,0,1,0,0,0,0,0,2,1,1,1,0,4,3,0,0,2,0.66,17,9
6604_7,7,50,"for (Entry<Optional<Short>, List<FieldMetadata>> entry : fieldsById.entrySet()) {
Collection<FieldMetadata> fields = entry.getValue();

if (!entry.getKey().isPresent()) {
Set<String> sortedFields = fields.stream()
.map(FieldMetadata::getOrExtractThriftFieldName)
.collect(toCollection(TreeSet::new));
for (String fieldName : sortedFields) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}
}
continue;
}

short fieldId = entry.getKey().get();

String fieldName = extractFieldName(fieldId, fields);
for (FieldMetadata field : fields) {
field.setName(fieldName);
}

Requiredness requiredness = extractFieldRequiredness(fieldId, fieldName, fields);
for (FieldMetadata field : fields) {
field.setRequiredness(requiredness);
}

boolean isLegacyId = extractFieldIsLegacyId(fieldId, fieldName, fields);
for (FieldMetadata field : fields) {
field.setIsLegacyId(isLegacyId);
}

Map<String, String> idlAnnotations = extractFieldIdlAnnotations(fieldId, fields);
for (FieldMetadata field : fields) {
field.setIdlAnnotations(idlAnnotations);
}

boolean isRecursiveReference = extractFieldIsRecursiveReference(fieldId, fields);
for (FieldMetadata field : fields) {
field.setIsRecursiveReference(isRecursiveReference);
}

verifyFieldType(fieldId, fieldName, fields, catalog);
}",0,0,0,1,0,0,0,0,0,24,4,44,1,1,0,0,4,3,0,0,3,0.74,0,0
6604_8,8,8,Collection<FieldMetadata> fields = entry.getValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.53,15,7
6604_10,10,20,"if (!entry.getKey().isPresent()) {
Set<String> sortedFields = fields.stream()
.map(FieldMetadata::getOrExtractThriftFieldName)
.collect(toCollection(TreeSet::new));
for (String fieldName : sortedFields) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}
}
continue;
}",1,0,0,0,0,0,0,0,0,5,3,11,0,0,1,1,4,3,0,0,3,0.69,3,1
6604_11,11,13,"Set<String> sortedFields = fields.stream()
.map(FieldMetadata::getOrExtractThriftFieldName)
.collect(toCollection(TreeSet::new));",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,4,3,0,0,2,0.58,10,5
6604_14,14,18,"for (String fieldName : sortedFields) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,1,0,0,4,3,0,0,3,0.74,5,2
6604_15,15,17,"if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,3,0.73,6,2
6604_16,16,16,"metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.69,7,2
6604_19,19,19,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.14,4,1
6604_22,22,22,short fieldId = entry.getKey().get();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,2,0.59,1,0
6604_24,24,24,"String fieldName = extractFieldName(fieldId, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,3,0.85,0,0
6604_25,25,27,"for (FieldMetadata field : fields) {
field.setName(fieldName);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,4,3,0,0,2,0.76,1,0
6604_26,26,26,field.setName(fieldName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.76,2,1
6604_29,29,29,"Requiredness requiredness = extractFieldRequiredness(fieldId, fieldName, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,3,0.87,5,3
6604_30,30,32,"for (FieldMetadata field : fields) {
field.setRequiredness(requiredness);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,4,3,0,0,1,0.64,6,3
6604_31,31,31,field.setRequiredness(requiredness);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.57,7,4
6604_34,34,34,"boolean isLegacyId = extractFieldIsLegacyId(fieldId, fieldName, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,3,0.8,10,6
6604_35,35,37,"for (FieldMetadata field : fields) {
field.setIsLegacyId(isLegacyId);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,4,3,0,0,2,0.71,11,6
6604_36,36,36,field.setIsLegacyId(isLegacyId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.68,12,7
6604_39,39,39,"Map<String, String> idlAnnotations = extractFieldIdlAnnotations(fieldId, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,2,0.63,15,9
6604_40,40,42,"for (FieldMetadata field : fields) {
field.setIdlAnnotations(idlAnnotations);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,4,3,0,0,1,0.57,16,9
6604_41,41,41,field.setIdlAnnotations(idlAnnotations);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.5,17,10
6604_44,44,44,"boolean isRecursiveReference = extractFieldIsRecursiveReference(fieldId, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,2,0.64,20,12
6604_45,45,47,"for (FieldMetadata field : fields) {
field.setIsRecursiveReference(isRecursiveReference);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,4,3,0,0,1,0.56,21,12
6604_46,46,46,field.setIsRecursiveReference(isRecursiveReference);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.48,22,13
6604_49,49,49,"verifyFieldType(fieldId, fieldName, fields, catalog);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,3,0.8,25,15
6605_1,1,1,    protected final void normalizeThriftFields(ThriftCatalog catalog),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.45,27,14
6605_3,3,3,Set<String> fieldsWithConflictingIds = inferThriftFieldIds();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,2,0.73,25,13
6605_5,5,6,"Map<Optional<Short>, List<FieldMetadata>> fieldsById = fields.stream()
.collect(groupingBy(field -> Optional.ofNullable(field.getId())));",0,0,0,0,0,1,0,0,0,0,0,2,1,1,1,0,4,2,1,0,2,0.68,22,12
6605_7,7,50,"for (Entry<Optional<Short>, List<FieldMetadata>> entry : fieldsById.entrySet()) {
Collection<FieldMetadata> fields = entry.getValue();

if (!entry.getKey().isPresent()) {
Set<String> sortedFields = fields.stream()
.map(FieldMetadata::getOrExtractThriftFieldName)
.collect(toCollection(TreeSet::new));
for (String fieldName : sortedFields) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}
}
continue;
}

short fieldId = entry.getKey().get();

String fieldName = extractFieldName(fieldId, fields);
for (FieldMetadata field : fields) {
field.setName(fieldName);
}

Requiredness requiredness = extractFieldRequiredness(fieldId, fieldName, fields);
for (FieldMetadata field : fields) {
field.setRequiredness(requiredness);
}

boolean isLegacyId = extractFieldIsLegacyId(fieldId, fieldName, fields);
for (FieldMetadata field : fields) {
field.setIsLegacyId(isLegacyId);
}

Map<String, String> idlAnnotations = extractFieldIdlAnnotations(fieldId, fields);
for (FieldMetadata field : fields) {
field.setIdlAnnotations(idlAnnotations);
}

boolean isRecursiveReference = extractFieldIsRecursiveReference(fieldId, fields);
for (FieldMetadata field : fields) {
field.setIsRecursiveReference(isRecursiveReference);
}

verifyFieldType(fieldId, fieldName, fields, catalog);
}",0,0,0,1,0,0,0,0,0,24,4,44,1,1,0,0,4,2,1,0,3,0.69,0,0
6605_8,8,8,Collection<FieldMetadata> fields = entry.getValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,1,0.54,20,10
6605_10,10,20,"if (!entry.getKey().isPresent()) {
Set<String> sortedFields = fields.stream()
.map(FieldMetadata::getOrExtractThriftFieldName)
.collect(toCollection(TreeSet::new));
for (String fieldName : sortedFields) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}
}
continue;
}",1,0,0,0,0,0,0,0,0,5,3,11,0,0,1,1,4,2,1,0,2,0.62,8,4
6605_11,11,13,"Set<String> sortedFields = fields.stream()
.map(FieldMetadata::getOrExtractThriftFieldName)
.collect(toCollection(TreeSet::new));",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,4,2,1,0,1,0.49,15,8
6605_14,14,18,"for (String fieldName : sortedFields) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,1,0,0,4,2,1,0,2,0.66,10,5
6605_15,15,17,"if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,2,1,0,2,0.66,11,5
6605_16,16,16,"metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.63,12,5
6605_19,19,19,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.16,9,4
6605_22,22,22,short fieldId = entry.getKey().get();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,1,0,2,0.62,6,3
6605_24,24,24,"String fieldName = extractFieldName(fieldId, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,2,0.74,4,2
6605_25,25,27,"for (FieldMetadata field : fields) {
field.setName(fieldName);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,4,2,1,0,1,0.63,1,0
6605_26,26,26,field.setName(fieldName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.57,2,0
6605_29,29,29,"Requiredness requiredness = extractFieldRequiredness(fieldId, fieldName, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,3,0.79,0,0
6605_30,30,32,"for (FieldMetadata field : fields) {
field.setRequiredness(requiredness);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,4,2,1,0,2,0.66,1,0
6605_31,31,31,field.setRequiredness(requiredness);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.58,2,1
6605_34,34,34,"boolean isLegacyId = extractFieldIsLegacyId(fieldId, fieldName, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,2,0.75,5,3
6605_35,35,37,"for (FieldMetadata field : fields) {
field.setIsLegacyId(isLegacyId);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,4,2,1,0,2,0.76,6,3
6605_36,36,36,field.setIsLegacyId(isLegacyId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.72,7,4
6605_39,39,39,"Map<String, String> idlAnnotations = extractFieldIdlAnnotations(fieldId, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,2,0.66,10,6
6605_40,40,42,"for (FieldMetadata field : fields) {
field.setIdlAnnotations(idlAnnotations);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,4,2,1,0,1,0.6,11,6
6605_41,41,41,field.setIdlAnnotations(idlAnnotations);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.52,12,7
6605_44,44,44,"boolean isRecursiveReference = extractFieldIsRecursiveReference(fieldId, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,2,0.68,15,9
6605_45,45,47,"for (FieldMetadata field : fields) {
field.setIsRecursiveReference(isRecursiveReference);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,4,2,1,0,1,0.58,16,9
6605_46,46,46,field.setIsRecursiveReference(isRecursiveReference);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.5,17,10
6605_49,49,49,"verifyFieldType(fieldId, fieldName, fields, catalog);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,2,0.73,20,12
6606_1,1,1,    protected final void normalizeThriftFields(ThriftCatalog catalog),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,1,0.43,42,23
6606_3,3,3,Set<String> fieldsWithConflictingIds = inferThriftFieldIds();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,4,1,0,2,0.6,40,22
6606_5,5,6,"Map<Optional<Short>, List<FieldMetadata>> fieldsById = fields.stream()
.collect(groupingBy(field -> Optional.ofNullable(field.getId())));",0,0,0,0,0,1,0,0,0,0,0,2,1,1,1,0,8,4,1,0,3,0.64,37,21
6606_7,7,50,"for (Entry<Optional<Short>, List<FieldMetadata>> entry : fieldsById.entrySet()) {
Collection<FieldMetadata> fields = entry.getValue();

if (!entry.getKey().isPresent()) {
Set<String> sortedFields = fields.stream()
.map(FieldMetadata::getOrExtractThriftFieldName)
.collect(toCollection(TreeSet::new));
for (String fieldName : sortedFields) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}
}
continue;
}

short fieldId = entry.getKey().get();

String fieldName = extractFieldName(fieldId, fields);
for (FieldMetadata field : fields) {
field.setName(fieldName);
}

Requiredness requiredness = extractFieldRequiredness(fieldId, fieldName, fields);
for (FieldMetadata field : fields) {
field.setRequiredness(requiredness);
}

boolean isLegacyId = extractFieldIsLegacyId(fieldId, fieldName, fields);
for (FieldMetadata field : fields) {
field.setIsLegacyId(isLegacyId);
}

Map<String, String> idlAnnotations = extractFieldIdlAnnotations(fieldId, fields);
for (FieldMetadata field : fields) {
field.setIdlAnnotations(idlAnnotations);
}

boolean isRecursiveReference = extractFieldIsRecursiveReference(fieldId, fields);
for (FieldMetadata field : fields) {
field.setIsRecursiveReference(isRecursiveReference);
}

verifyFieldType(fieldId, fieldName, fields, catalog);
}",0,0,0,1,0,0,0,0,0,24,4,44,1,1,0,0,8,4,1,0,5,0.73,0,0
6606_8,8,8,Collection<FieldMetadata> fields = entry.getValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,4,1,0,2,0.59,35,19
6606_10,10,20,"if (!entry.getKey().isPresent()) {
Set<String> sortedFields = fields.stream()
.map(FieldMetadata::getOrExtractThriftFieldName)
.collect(toCollection(TreeSet::new));
for (String fieldName : sortedFields) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}
}
continue;
}",1,0,0,0,0,0,0,0,0,5,3,11,0,0,1,1,8,4,1,0,3,0.59,23,13
6606_11,11,13,"Set<String> sortedFields = fields.stream()
.map(FieldMetadata::getOrExtractThriftFieldName)
.collect(toCollection(TreeSet::new));",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,8,4,1,0,2,0.53,30,17
6606_14,14,18,"for (String fieldName : sortedFields) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,1,0,0,8,4,1,0,2,0.55,25,14
6606_15,15,17,"if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,4,1,0,2,0.55,26,14
6606_16,16,16,"metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,2,0.51,27,14
6606_19,19,19,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,0,0.34,24,13
6606_22,22,22,short fieldId = entry.getKey().get();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,8,4,1,0,3,0.63,21,12
6606_24,24,24,"String fieldName = extractFieldName(fieldId, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,4,1,0,2,0.61,19,11
6606_25,25,27,"for (FieldMetadata field : fields) {
field.setName(fieldName);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,8,4,1,0,1,0.56,16,9
6606_26,26,26,field.setName(fieldName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,1,0.5,17,9
6606_29,29,29,"Requiredness requiredness = extractFieldRequiredness(fieldId, fieldName, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,4,1,0,2,0.66,14,8
6606_30,30,32,"for (FieldMetadata field : fields) {
field.setRequiredness(requiredness);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,8,4,1,0,1,0.58,11,6
6606_31,31,31,field.setRequiredness(requiredness);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,1,0.5,12,6
6606_34,34,34,"boolean isLegacyId = extractFieldIsLegacyId(fieldId, fieldName, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,4,1,0,2,0.62,9,5
6606_35,35,37,"for (FieldMetadata field : fields) {
field.setIsLegacyId(isLegacyId);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,8,4,1,0,2,0.62,6,3
6606_36,36,36,field.setIsLegacyId(isLegacyId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,2,0.59,7,3
6606_39,39,39,"Map<String, String> idlAnnotations = extractFieldIdlAnnotations(fieldId, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,4,1,0,2,0.54,4,2
6606_40,40,42,"for (FieldMetadata field : fields) {
field.setIdlAnnotations(idlAnnotations);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,8,4,1,0,1,0.51,1,0
6606_41,41,41,field.setIdlAnnotations(idlAnnotations);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,1,0.43,2,0
6606_44,44,44,"boolean isRecursiveReference = extractFieldIsRecursiveReference(fieldId, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,4,1,0,4,0.76,0,0
6606_45,45,47,"for (FieldMetadata field : fields) {
field.setIsRecursiveReference(isRecursiveReference);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,8,4,1,0,3,0.72,1,0
6606_46,46,46,field.setIsRecursiveReference(isRecursiveReference);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,3,0.73,2,1
6606_49,49,49,"verifyFieldType(fieldId, fieldName, fields, catalog);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,4,1,0,2,0.65,5,3
6607_1,1,1,    protected final void normalizeThriftFields(ThriftCatalog catalog),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,0,0,2,0.57,47,26
6607_3,3,3,Set<String> fieldsWithConflictingIds = inferThriftFieldIds();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,8,0,0,3,0.74,45,25
6607_5,5,6,"Map<Optional<Short>, List<FieldMetadata>> fieldsById = fields.stream()
.collect(groupingBy(field -> Optional.ofNullable(field.getId())));",0,0,0,0,0,1,0,0,0,0,0,2,1,1,1,0,9,8,0,0,2,0.62,42,24
6607_7,7,50,"for (Entry<Optional<Short>, List<FieldMetadata>> entry : fieldsById.entrySet()) {
Collection<FieldMetadata> fields = entry.getValue();

if (!entry.getKey().isPresent()) {
Set<String> sortedFields = fields.stream()
.map(FieldMetadata::getOrExtractThriftFieldName)
.collect(toCollection(TreeSet::new));
for (String fieldName : sortedFields) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}
}
continue;
}

short fieldId = entry.getKey().get();

String fieldName = extractFieldName(fieldId, fields);
for (FieldMetadata field : fields) {
field.setName(fieldName);
}

Requiredness requiredness = extractFieldRequiredness(fieldId, fieldName, fields);
for (FieldMetadata field : fields) {
field.setRequiredness(requiredness);
}

boolean isLegacyId = extractFieldIsLegacyId(fieldId, fieldName, fields);
for (FieldMetadata field : fields) {
field.setIsLegacyId(isLegacyId);
}

Map<String, String> idlAnnotations = extractFieldIdlAnnotations(fieldId, fields);
for (FieldMetadata field : fields) {
field.setIdlAnnotations(idlAnnotations);
}

boolean isRecursiveReference = extractFieldIsRecursiveReference(fieldId, fields);
for (FieldMetadata field : fields) {
field.setIsRecursiveReference(isRecursiveReference);
}

verifyFieldType(fieldId, fieldName, fields, catalog);
}",0,0,0,1,0,0,0,0,0,24,4,44,1,1,0,0,9,8,0,0,5,0.77,0,0
6607_8,8,8,Collection<FieldMetadata> fields = entry.getValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,8,0,0,1,0.54,40,22
6607_10,10,20,"if (!entry.getKey().isPresent()) {
Set<String> sortedFields = fields.stream()
.map(FieldMetadata::getOrExtractThriftFieldName)
.collect(toCollection(TreeSet::new));
for (String fieldName : sortedFields) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}
}
continue;
}",1,0,0,0,0,0,0,0,0,5,3,11,0,0,1,1,9,8,0,0,3,0.64,28,16
6607_11,11,13,"Set<String> sortedFields = fields.stream()
.map(FieldMetadata::getOrExtractThriftFieldName)
.collect(toCollection(TreeSet::new));",0,0,0,0,0,1,0,0,0,0,0,3,0,1,0,0,9,8,0,0,2,0.56,35,20
6607_14,14,18,"for (String fieldName : sortedFields) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,1,0,0,9,8,0,0,3,0.68,30,17
6607_15,15,17,"if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,9,8,0,0,3,0.68,31,17
6607_16,16,16,"metadataErrors.addError(""Thrift class '%s' fields %s do not have an id"", structName, sortedFields);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,0,0,3,0.65,32,17
6607_19,19,19,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,0,0,0,0.25,29,16
6607_22,22,22,short fieldId = entry.getKey().get();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,9,8,0,0,2,0.53,26,15
6607_24,24,24,"String fieldName = extractFieldName(fieldId, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,8,0,0,2,0.66,24,14
6607_25,25,27,"for (FieldMetadata field : fields) {
field.setName(fieldName);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,9,8,0,0,1,0.62,21,12
6607_26,26,26,field.setName(fieldName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,0,0,1,0.55,22,12
6607_29,29,29,"Requiredness requiredness = extractFieldRequiredness(fieldId, fieldName, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,8,0,0,2,0.71,19,11
6607_30,30,32,"for (FieldMetadata field : fields) {
field.setRequiredness(requiredness);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,9,8,0,0,1,0.66,16,9
6607_31,31,31,field.setRequiredness(requiredness);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,0,0,1,0.54,17,9
6607_34,34,34,"boolean isLegacyId = extractFieldIsLegacyId(fieldId, fieldName, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,8,0,0,2,0.67,14,8
6607_35,35,37,"for (FieldMetadata field : fields) {
field.setIsLegacyId(isLegacyId);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,9,8,0,0,2,0.67,11,6
6607_36,36,36,field.setIsLegacyId(isLegacyId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,0,0,2,0.62,12,6
6607_39,39,39,"Map<String, String> idlAnnotations = extractFieldIdlAnnotations(fieldId, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,8,0,0,2,0.61,9,5
6607_40,40,42,"for (FieldMetadata field : fields) {
field.setIdlAnnotations(idlAnnotations);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,9,8,0,0,1,0.6,6,3
6607_41,41,41,field.setIdlAnnotations(idlAnnotations);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,0,0,1,0.52,7,3
6607_44,44,44,"boolean isRecursiveReference = extractFieldIsRecursiveReference(fieldId, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,8,0,0,2,0.66,4,2
6607_45,45,47,"for (FieldMetadata field : fields) {
field.setIsRecursiveReference(isRecursiveReference);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,1,9,8,0,0,1,0.63,1,0
6607_46,46,46,field.setIsRecursiveReference(isRecursiveReference);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,0,0,1,0.56,2,0
6607_49,49,49,"verifyFieldType(fieldId, fieldName, fields, catalog);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,8,0,0,4,0.84,0,0
6608_1,1,1,    protected final Set<String> inferThriftFieldIds(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,1,0,1,0.49,3,1
6608_3,3,3,Set<String> fieldsWithConflictingIds = new HashSet<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,7,1,0,1,0.5,1,0
6608_5,5,5,"Multimap<String, FieldMetadata> fieldsByExplicitOrExtractedName = Multimaps.index(fields, FieldMetadata::getOrExtractThriftFieldName);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,7,1,0,4,0.78,0,0
6608_6,6,6,"inferThriftFieldIds(fieldsByExplicitOrExtractedName, fieldsWithConflictingIds);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,9,7,1,0,4,0.78,1,0
6608_8,8,8,"Multimap<String, FieldMetadata> fieldsByExtractedName = Multimaps.index(fields, FieldMetadata::extractName);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,7,1,0,3,0.75,3,2
6608_9,9,9,"inferThriftFieldIds(fieldsByExtractedName, fieldsWithConflictingIds);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,9,7,1,0,3,0.73,4,2
6608_11,11,11,return fieldsWithConflictingIds;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,9,7,1,0,1,0.51,6,4
6609_1,1,1,"protected final void inferThriftFieldIds(Multimap<String, FieldMetadata> fieldsByName, Set<String> fieldsWithConflictingIds)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,3,0.7,9,5
6609_3,3,34,"for (Entry<String, Collection<FieldMetadata>> entry : fieldsByName.asMap().entrySet()) {
Collection<FieldMetadata> fields = entry.getValue();
String fieldName = entry.getKey();

if (fields.size() <= 1) {
continue;
}

Set<Short> ids = fields.stream()
.map(FieldMetadata::getId)
.filter(Objects::nonNull)
.collect(toSet());

if (ids.size() > 1) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' field '%s' has multiple ids: %s"", structName, fieldName, ids.toString());
fieldsWithConflictingIds.add(fieldName);
}
continue;
}

if (ids.size() == 1) {
short id = Iterables.getOnlyElement(ids);

boolean isLegacyId = extractFieldIsLegacyId(id, fieldName, fields);

for (FieldMetadata field : fields) {
field.setId(id);
field.setIsLegacyId(isLegacyId);
}
}
}",0,0,0,1,0,0,0,0,0,16,3,32,0,0,0,0,4,4,0,0,3,0.72,0,0
6609_4,4,4,Collection<FieldMetadata> fields = entry.getValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.51,6,3
6609_5,5,5,String fieldName = entry.getKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,4,4,0,0,2,0.59,5,2
6609_7,7,9,"if (fields.size() <= 1) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,4,0,0,1,0.46,1,0
6609_8,8,8,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.14,2,0
6609_11,11,14,"Set<Short> ids = fields.stream()
.map(FieldMetadata::getId)
.filter(Objects::nonNull)
.collect(toSet());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,1,1,4,4,0,0,2,0.57,0,0
6609_16,16,22,"if (ids.size() > 1) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' field '%s' has multiple ids: %s"", structName, fieldName, ids.toString());
fieldsWithConflictingIds.add(fieldName);
}
continue;
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,1,4,4,0,0,3,0.74,5,1
6609_17,17,20,"if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' field '%s' has multiple ids: %s"", structName, fieldName, ids.toString());
fieldsWithConflictingIds.add(fieldName);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,4,4,0,0,3,0.76,6,1
6609_18,18,18,"metadataErrors.addError(""Thrift class '%s' field '%s' has multiple ids: %s"", structName, fieldName, ids.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,3,0.72,7,2
6609_19,19,19,fieldsWithConflictingIds.add(fieldName);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,3,0.78,8,3
6609_21,21,21,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.14,10,5
6609_24,24,33,"if (ids.size() == 1) {
short id = Iterables.getOnlyElement(ids);

boolean isLegacyId = extractFieldIsLegacyId(id, fieldName, fields);

for (FieldMetadata field : fields) {
field.setId(id);
field.setIsLegacyId(isLegacyId);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,0,4,4,0,0,3,0.75,13,6
6609_25,25,25,short id = Iterables.getOnlyElement(ids);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,1,0.49,14,6
6609_27,27,27,"boolean isLegacyId = extractFieldIsLegacyId(id, fieldName, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,4,0,0,3,0.78,16,8
6609_29,29,32,"for (FieldMetadata field : fields) {
field.setId(id);
field.setIsLegacyId(isLegacyId);
}",0,0,0,1,0,0,0,0,0,2,1,4,0,0,1,0,4,4,0,0,2,0.7,18,9
6609_30,30,30,field.setId(id);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,2,0.73,19,9
6609_31,31,31,field.setIsLegacyId(isLegacyId);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,2,0.66,20,10
6610_1,1,1,"protected final void inferThriftFieldIds(Multimap<String, FieldMetadata> fieldsByName, Set<String> fieldsWithConflictingIds)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.64,27,14
6610_3,3,34,"for (Entry<String, Collection<FieldMetadata>> entry : fieldsByName.asMap().entrySet()) {
Collection<FieldMetadata> fields = entry.getValue();
String fieldName = entry.getKey();

if (fields.size() <= 1) {
continue;
}

Set<Short> ids = fields.stream()
.map(FieldMetadata::getId)
.filter(Objects::nonNull)
.collect(toSet());

if (ids.size() > 1) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' field '%s' has multiple ids: %s"", structName, fieldName, ids.toString());
fieldsWithConflictingIds.add(fieldName);
}
continue;
}

if (ids.size() == 1) {
short id = Iterables.getOnlyElement(ids);

boolean isLegacyId = extractFieldIsLegacyId(id, fieldName, fields);

for (FieldMetadata field : fields) {
field.setId(id);
field.setIsLegacyId(isLegacyId);
}
}
}",0,0,0,1,0,0,0,0,0,16,3,32,0,0,0,0,5,5,0,0,2,0.64,0,0
6610_4,4,4,Collection<FieldMetadata> fields = entry.getValue();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.51,24,12
6610_5,5,5,String fieldName = entry.getKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,5,5,0,0,1,0.43,23,11
6610_7,7,9,"if (fields.size() <= 1) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,5,5,0,0,1,0.48,19,9
6610_8,8,8,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.28,20,9
6610_11,11,14,"Set<Short> ids = fields.stream()
.map(FieldMetadata::getId)
.filter(Objects::nonNull)
.collect(toSet());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,1,1,5,5,0,0,2,0.56,14,8
6610_16,16,22,"if (ids.size() > 1) {
if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' field '%s' has multiple ids: %s"", structName, fieldName, ids.toString());
fieldsWithConflictingIds.add(fieldName);
}
continue;
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,1,5,5,0,0,2,0.65,6,3
6610_17,17,20,"if (!fieldsWithConflictingIds.contains(fieldName)) {
metadataErrors.addError(""Thrift class '%s' field '%s' has multiple ids: %s"", structName, fieldName, ids.toString());
fieldsWithConflictingIds.add(fieldName);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,5,5,0,0,2,0.65,8,4
6610_18,18,18,"metadataErrors.addError(""Thrift class '%s' field '%s' has multiple ids: %s"", structName, fieldName, ids.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.61,10,5
6610_19,19,19,fieldsWithConflictingIds.add(fieldName);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.68,9,4
6610_21,21,21,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.28,7,3
6610_24,24,33,"if (ids.size() == 1) {
short id = Iterables.getOnlyElement(ids);

boolean isLegacyId = extractFieldIsLegacyId(id, fieldName, fields);

for (FieldMetadata field : fields) {
field.setId(id);
field.setIsLegacyId(isLegacyId);
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,0,5,5,0,0,2,0.66,0,0
6610_25,25,25,short id = Iterables.getOnlyElement(ids);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,5,0,0,1,0.5,3,1
6610_27,27,27,"boolean isLegacyId = extractFieldIsLegacyId(id, fieldName, fields);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,5,0,0,2,0.66,1,0
6610_29,29,32,"for (FieldMetadata field : fields) {
field.setId(id);
field.setIsLegacyId(isLegacyId);
}",0,0,0,1,0,0,0,0,0,2,1,4,0,0,1,0,5,5,0,0,2,0.69,0,0
6610_30,30,30,field.setId(id);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.69,1,0
6610_31,31,31,field.setIsLegacyId(isLegacyId);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.64,2,1
6573_1,1,1,public static Class<?> getArrayOfType(Type componentType),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,1,0,3,0.6,1,0
6573_3,3,3,Class<?> rawComponentType = TypeToken.of(componentType).getRawType();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,3,1,0,2,0.53,0,0
6573_4,4,4,"return Array.newInstance(rawComponentType, 0).getClass();",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,8,3,1,0,3,0.63,1,0
6574_1,1,1,"    public static <T extends Annotation> Set<T> getEffectiveClassAnnotations(Class<?> type, Class<T> annotation)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.68,1,0
6574_3,3,5,"if (type.isAnnotationPresent(annotation)) {
return ImmutableSet.of(type.getAnnotation(annotation));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,5,0,0,1,0.61,0,0
6574_4,4,4,return ImmutableSet.of(type.getAnnotation(annotation));,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.57,1,0
6574_7,7,7,ImmutableSet.Builder<T> builder = ImmutableSet.builder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,0,0.29,4,2
6574_8,8,8,"addEffectiveClassAnnotations(type, annotation, builder);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.66,5,2
6574_9,9,9,return builder.build();,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.27,6,3
6575_1,1,1,"    public static <T extends Annotation> Set<T> getEffectiveClassAnnotations(Class<?> type, Class<T> annotation)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,2,0.64,5,2
6575_3,3,5,"if (type.isAnnotationPresent(annotation)) {
return ImmutableSet.of(type.getAnnotation(annotation));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,2,1,0,1,0.55,1,0
6575_4,4,4,return ImmutableSet.of(type.getAnnotation(annotation));,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.52,2,0
6575_7,7,7,ImmutableSet.Builder<T> builder = ImmutableSet.builder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,2,1,0,0,0.36,0,0
6575_8,8,8,"addEffectiveClassAnnotations(type, annotation, builder);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,1,0,2,0.6,1,0
6575_9,9,9,return builder.build();,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,2,1,0,0,0.29,2,1
6576_1,1,1,"    public static Collection<Method> findAnnotatedMethods(Class<?> type, Class<? extends Annotation> annotation)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,1,0.52,3,1
6576_3,3,3,List<Method> result = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,5,1,0,1,0.47,1,0
6576_5,5,18,"for (Method method : type.getMethods()) {
if (method.isSynthetic() || method.isBridge() || isStatic(method.getModifiers())) {
continue;
}

Method managedMethod = findAnnotatedMethod(
type,
annotation,
method.getName(),
method.getParameterTypes());
if (managedMethod != null) {
result.add(managedMethod);
}
}",0,0,0,1,0,0,0,0,0,5,2,14,0,0,1,1,9,5,1,0,1,0.55,0,0
6576_6,6,8,"if (method.isSynthetic() || method.isBridge() || isStatic(method.getModifiers())) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,9,5,1,0,1,0.55,1,0
6576_7,7,7,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,0,0.31,2,1
6576_10,10,14,"Method managedMethod = findAnnotatedMethod(
type,
annotation,
method.getName(),
method.getParameterTypes());",0,0,0,0,0,1,0,0,0,0,0,5,0,1,1,0,9,5,1,0,1,0.5,5,3
6576_15,15,17,"if (managedMethod != null) {
result.add(managedMethod);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,9,5,1,0,1,0.45,10,4
6576_16,16,16,result.add(managedMethod);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,1,0.41,11,4
6576_20,20,20,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,9,5,1,0,1,0.44,15,6
6577_1,1,1,"    public static Collection<Method> findAnnotatedMethods(Class<?> type, Class<? extends Annotation> annotation)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,1,0.46,4,2
6577_3,3,3,List<Method> result = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,7,0,0,1,0.42,2,1
6577_5,5,18,"for (Method method : type.getMethods()) {
if (method.isSynthetic() || method.isBridge() || isStatic(method.getModifiers())) {
continue;
}

Method managedMethod = findAnnotatedMethod(
type,
annotation,
method.getName(),
method.getParameterTypes());
if (managedMethod != null) {
result.add(managedMethod);
}
}",0,0,0,1,0,0,0,0,0,5,2,14,0,0,1,1,8,7,0,0,1,0.54,0,0
6577_6,6,8,"if (method.isSynthetic() || method.isBridge() || isStatic(method.getModifiers())) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,8,7,0,0,1,0.53,0,0
6577_7,7,7,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,0,0.35,1,0
6577_10,10,14,"Method managedMethod = findAnnotatedMethod(
type,
annotation,
method.getName(),
method.getParameterTypes());",0,0,0,0,0,1,0,0,0,0,0,5,0,1,1,0,8,7,0,0,1,0.49,4,2
6577_15,15,17,"if (managedMethod != null) {
result.add(managedMethod);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,8,7,0,0,1,0.48,9,3
6577_16,16,16,result.add(managedMethod);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,1,0.44,10,3
6577_20,20,20,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,8,7,0,0,0,0.37,14,5
6578_1,1,1,"    public static Collection<Method> findAnnotatedMethods(Class<?> type, Class<? extends Annotation> annotation)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,2,0.67,8,4
6578_3,3,3,List<Method> result = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.35,6,3
6578_5,5,18,"for (Method method : type.getMethods()) {
if (method.isSynthetic() || method.isBridge() || isStatic(method.getModifiers())) {
continue;
}

Method managedMethod = findAnnotatedMethod(
type,
annotation,
method.getName(),
method.getParameterTypes());
if (managedMethod != null) {
result.add(managedMethod);
}
}",0,0,0,1,0,0,0,0,0,5,2,14,0,0,1,1,6,4,1,0,1,0.54,0,0
6578_6,6,8,"if (method.isSynthetic() || method.isBridge() || isStatic(method.getModifiers())) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,4,1,0,0,0.42,1,0
6578_7,7,7,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.19,2,0
6578_10,10,14,"Method managedMethod = findAnnotatedMethod(
type,
annotation,
method.getName(),
method.getParameterTypes());",0,0,0,0,0,1,0,0,0,0,0,5,0,1,1,0,6,4,1,0,1,0.57,0,0
6578_15,15,17,"if (managedMethod != null) {
result.add(managedMethod);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,4,1,0,0,0.41,5,1
6578_16,16,16,result.add(managedMethod);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.4,6,1
6578_20,20,20,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,4,1,0,0,0.28,10,3
6579_1,1,1,"    public static Collection<Field> findAnnotatedFields(Class<?> type, Class<? extends Annotation> annotation)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,1,0.51,3,1
6579_3,3,3,List<Field> result = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,5,0,0,1,0.47,1,0
6579_5,5,13,"for (Field field : type.getFields()) {
if (field.isSynthetic() || isStatic(field.getModifiers())) {
continue;
}

if (field.isAnnotationPresent(annotation)) {
result.add(field);
}
}",0,0,0,1,0,0,0,0,0,4,2,9,0,0,1,1,9,5,0,0,1,0.54,0,0
6579_6,6,8,"if (field.isSynthetic() || isStatic(field.getModifiers())) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,9,5,0,0,1,0.53,1,0
6579_7,7,7,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.32,2,1
6579_10,10,12,"if (field.isAnnotationPresent(annotation)) {
result.add(field);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,9,5,0,0,1,0.48,5,3
6579_11,11,11,result.add(field);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,1,0.44,6,3
6579_15,15,15,return result;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,9,5,0,0,1,0.44,10,5
6580_1,1,1,private static List<String> getParameterNames(Executable executable),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,3,0.6,7,3
6580_3,3,3,"requireNonNull(executable, ""executable is null"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,4,1,0,0,0.28,5,2
6580_5,5,7,"if (executable.getParameterCount() == 0) {
return emptyList();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,8,4,1,0,2,0.51,1,0
6580_6,6,6,return emptyList();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,4,1,0,0,0.32,2,0
6580_9,9,11,"List<Optional<String>> parameterNamesFromThriftField = Arrays.stream(executable.getParameters())
.map(ReflectionHelper::getThriftFieldParameterName)
.collect(toImmutableList());",0,0,0,0,0,1,0,0,0,0,0,3,1,1,1,0,8,4,1,0,5,0.73,0,0
6580_12,12,16,"if (parameterNamesFromThriftField.stream().allMatch(Optional::isPresent)) {
return parameterNamesFromThriftField.stream()
.map(Optional::get)
.collect(toImmutableList());
}",1,0,0,0,0,0,0,0,0,1,1,5,1,1,0,1,8,4,1,0,5,0.73,3,1
6580_13,13,15,"return parameterNamesFromThriftField.stream()
.map(Optional::get)
.collect(toImmutableList());",0,0,0,0,0,0,1,0,0,0,0,3,0,0,0,0,8,4,1,0,5,0.72,4,1
6580_18,18,18,List<String> parameterNamesFromClass = ParameterNames.getParameterNames(executable);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,8,4,1,0,3,0.69,9,3
6580_19,19,19,ImmutableList.Builder<String> parameterNames = ImmutableList.builder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,1,0,2,0.54,10,3
6580_20,20,22,"for (int i = 0; i < parameterNamesFromThriftField.size(); i++) {
parameterNames.add(parameterNamesFromThriftField.get(i).orElse(parameterNamesFromClass.get(i)));
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,8,4,1,0,5,0.8,11,4
6580_21,21,21,parameterNames.add(parameterNamesFromThriftField.get(i).orElse(parameterNamesFromClass.get(i)));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,5,0.82,12,5
6580_23,23,23,return parameterNames.build();,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,8,4,1,0,2,0.58,14,7
6581_1,1,1,private static List<String> getParameterNames(Executable executable),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,3,0.57,16,6
6581_3,3,3,"requireNonNull(executable, ""executable is null"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,10,6,1,0,0,0.31,14,5
6581_5,5,7,"if (executable.getParameterCount() == 0) {
return emptyList();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,10,6,1,0,2,0.48,10,3
6581_6,6,6,return emptyList();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,6,1,0,0,0.31,11,3
6581_9,9,11,"List<Optional<String>> parameterNamesFromThriftField = Arrays.stream(executable.getParameters())
.map(ReflectionHelper::getThriftFieldParameterName)
.collect(toImmutableList());",0,0,0,0,0,1,0,0,0,0,0,3,1,1,1,0,10,6,1,0,5,0.68,6,2
6581_12,12,16,"if (parameterNamesFromThriftField.stream().allMatch(Optional::isPresent)) {
return parameterNamesFromThriftField.stream()
.map(Optional::get)
.collect(toImmutableList());
}",1,0,0,0,0,0,0,0,0,1,1,5,1,1,0,1,10,6,1,0,5,0.68,1,0
6581_13,13,15,"return parameterNamesFromThriftField.stream()
.map(Optional::get)
.collect(toImmutableList());",0,0,0,0,0,0,1,0,0,0,0,3,0,0,0,0,10,6,1,0,5,0.66,2,0
6581_18,18,18,List<String> parameterNamesFromClass = ParameterNames.getParameterNames(executable);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,10,6,1,0,4,0.71,0,0
6581_19,19,19,ImmutableList.Builder<String> parameterNames = ImmutableList.builder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,6,1,0,2,0.51,1,0
6581_20,20,22,"for (int i = 0; i < parameterNamesFromThriftField.size(); i++) {
parameterNames.add(parameterNamesFromThriftField.get(i).orElse(parameterNamesFromClass.get(i)));
}",0,0,1,0,0,0,0,0,0,1,1,3,0,1,0,0,10,6,1,0,6,0.78,2,1
6581_21,21,21,parameterNames.add(parameterNamesFromThriftField.get(i).orElse(parameterNamesFromClass.get(i)));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,6,0.82,3,2
6581_23,23,23,return parameterNames.build();,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,10,6,1,0,2,0.57,5,4
953_1,1,1,    public String generate(Iterable<String> inputs),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.37,9,6
953_3,3,12,"for (String className : inputs) {
Object result = convertToThrift(load(className));
if (result instanceof ThriftType) {
thriftTypes.add((ThriftType) result);
}
else {
thriftServices.add((ThriftServiceMetadata) result);
}
includes.remove(result);
}",0,0,0,1,0,0,0,0,0,6,2,10,0,0,0,1,6,4,0,0,4,0.62,0,0
953_4,4,4,Object result = convertToThrift(load(className));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,2,0.54,6,4
953_5,5,10,"if (result instanceof ThriftType) {
thriftTypes.add((ThriftType) result);
}
else {
thriftServices.add((ThriftServiceMetadata) result);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,0,6,4,0,0,0,0.35,0,0
953_6,6,6,thriftTypes.add((ThriftType) result);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.35,4,2
953_8,8,8,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.15,2,1
953_9,9,9,thriftServices.add((ThriftServiceMetadata) result);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.36,1,0
953_11,11,11,includes.remove(result);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,2,0.62,0,0
953_14,14,16,"if (!verify()) {
throw new ThriftIdlGeneratorException(""Errors found during verification."");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,4,0,0,0,0.38,3,1
953_15,15,15,"throw new ThriftIdlGeneratorException(""Errors found during verification."");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,4,0,0,0,0.36,4,1
953_18,18,18,return generate();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,4,0,0,0,0.32,7,3
954_1,1,1,"    @SuppressWarnings(""NonShortCircuitBooleanExpression"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,25,20,2,0,0,0.41,4,3
954_2,2,2,"@SuppressFBWarnings(""NS_DANGEROUS_NON_SHORT_CIRCUIT"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,25,20,2,0,0,0.45,3,2
954_3,3,3,private boolean verify(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,25,20,2,0,1,0.51,2,1
954_5,5,29,"if (recursive) {
while (true) {
int size = thriftTypes.size();
for (ThriftType type : thriftTypes) {
verifyStruct(type, true);
}
if (size == thriftTypes.size()) {
break;
}
}

while (true) {
int size = thriftServices.size();
for (ThriftServiceMetadata service : thriftServices) {
verifyService(service, true);
}
if (size == thriftServices.size()) {
break;
}
}

recursive = false;
usedIncludedTypes.clear();
knownTypes = new HashSet<>(BUILT_IN_TYPES);
}",1,0,0,0,0,0,0,0,0,15,3,25,0,0,0,0,25,20,2,0,4,0.68,0,0
954_6,6,14,"while (true) {
int size = thriftTypes.size();
for (ThriftType type : thriftTypes) {
verifyStruct(type, true);
}
if (size == thriftTypes.size()) {
break;
}
}",0,1,0,0,0,0,0,0,0,5,2,9,0,0,0,1,25,20,2,0,3,0.64,0,0
954_7,7,7,int size = thriftTypes.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,25,20,2,0,1,0.54,1,0
954_8,8,10,"for (ThriftType type : thriftTypes) {
verifyStruct(type, true);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,25,20,2,0,3,0.72,2,1
954_9,9,9,"verifyStruct(type, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,25,20,2,0,3,0.7,3,2
954_11,11,13,"if (size == thriftTypes.size()) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,25,20,2,0,1,0.54,5,4
954_12,12,12,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,25,20,2,0,0,0.32,6,4
954_16,16,24,"while (true) {
int size = thriftServices.size();
for (ThriftServiceMetadata service : thriftServices) {
verifyService(service, true);
}
if (size == thriftServices.size()) {
break;
}
}",0,1,0,0,0,0,0,0,0,5,2,9,0,0,1,1,25,20,2,0,2,0.64,10,6
954_17,17,17,int size = thriftServices.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,25,20,2,0,1,0.54,11,6
954_18,18,20,"for (ThriftServiceMetadata service : thriftServices) {
verifyService(service, true);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,0,0,25,20,2,0,2,0.69,12,7
954_19,19,19,"verifyService(service, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,25,20,2,0,2,0.67,13,8
954_21,21,23,"if (size == thriftServices.size()) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,25,20,2,0,1,0.55,15,10
954_22,22,22,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,25,20,2,0,0,0.32,16,10
954_26,26,26,recursive = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,25,20,2,0,0,0.35,20,12
954_27,27,27,usedIncludedTypes.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,25,20,2,0,1,0.43,21,12
954_28,28,28,knownTypes = new HashSet<>(BUILT_IN_TYPES);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,25,20,2,0,1,0.53,22,13
954_30,30,30,return verifyTypes() & verifyServices();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,25,20,2,0,3,0.74,24,15
955_1,1,1,"    @SuppressWarnings(""NonShortCircuitBooleanExpression"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.41,21,13
955_2,2,2,"@SuppressFBWarnings(""NS_DANGEROUS_NON_SHORT_CIRCUIT"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.36,20,12
955_3,3,3,private boolean verifyField(ThriftType type),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.5,19,11
955_5,5,5,ThriftProtocolType proto = type.getProtocolType();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.53,17,10
955_6,6,8,"if (proto == ThriftProtocolType.SET || proto == ThriftProtocolType.LIST) {
return verifyElementType(type.getValueTypeReference());
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,6,3,1,0,2,0.58,14,8
955_7,7,7,return verifyElementType(type.getValueTypeReference());,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.53,15,8
955_9,9,11,"if (proto == ThriftProtocolType.MAP) {
return verifyElementType(type.getKeyTypeReference()) & verifyElementType(type.getValueTypeReference());
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,1,6,3,1,0,1,0.53,11,6
955_10,10,10,return verifyElementType(type.getKeyTypeReference()) & verifyElementType(type.getValueTypeReference());,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.54,12,6
955_13,13,15,"if (knownTypes.contains(type)) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,3,1,0,1,0.51,7,4
955_14,14,14,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.26,8,4
955_17,17,20,"if (includes.containsKey(type)) {
usedIncludedTypes.add(type);
return true;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,6,3,1,0,2,0.58,2,1
955_18,18,18,usedIncludedTypes.add(type);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,2,0.66,4,2
955_19,19,19,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.26,3,1
955_22,22,25,"if (recursive) {
thriftTypes.add(type);
return verifyStruct(type, true);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,6,3,1,0,3,0.75,0,0
955_23,23,23,thriftTypes.add(type);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,2,0.72,0,0
955_24,24,24,"return verifyStruct(type, true);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.5,1,0
955_26,26,26,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.27,3,2
1363_1,1,2,"    @Override
public void writeBool(boolean value)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,2,0.6,7,5
1363_3,3,3,throws TException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,4,0,0,0,0.22,6,4
1363_5,5,11,"if (booleanField != null) {
writeFieldBeginInternal(booleanField, value ? Types.BOOLEAN_TRUE : Types.BOOLEAN_FALSE);
booleanField = null;
}
else {
writeByteDirect(value ? Types.BOOLEAN_TRUE : Types.BOOLEAN_FALSE);
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,0,0,4,4,0,0,3,0.68,0,0
1363_6,6,6,"writeFieldBeginInternal(booleanField, value ? Types.BOOLEAN_TRUE : Types.BOOLEAN_FALSE);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,3,0.68,3,2
1363_7,7,7,booleanField = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.52,2,1
1363_9,9,9,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.2,0,0
1363_10,10,10,writeByteDirect(value ? Types.BOOLEAN_TRUE : Types.BOOLEAN_FALSE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.59,0,0
1364_1,1,2,"    @Override
public void readStructEnd()",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,3,1,0,1,0.51,1,0
1364_4,4,4,lastFieldId = lastField.pop();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,2,0.71,0,0
1365_1,1,2,"@Override
public TField readFieldBegin()",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,0,0.43,4,2
1365_3,3,3,throws TException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,1,0,0,0.27,3,1
1365_5,5,5,byte type = readByte();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.29,1,0
1365_7,7,9,"if (type == TType.STOP) {
return TSTOP;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,1,0,2,0.66,0,0
1365_8,8,8,return TSTOP;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.72,1,0
1365_11,11,11,short fieldId;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.35,4,2
1365_13,13,13,short modifier = (short) ((type & 0xf0) >> 4);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.35,6,3
1365_14,14,19,"if (modifier == 0) {
fieldId = readI16();
}
else {
fieldId = (short) (lastFieldId + modifier);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,1,4,2,1,0,0,0.37,7,3
1365_15,15,15,fieldId = readI16();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.33,8,4
1365_17,17,17,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.34,10,6
1365_18,18,18,fieldId = (short) (lastFieldId + modifier);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.35,11,6
1365_21,21,21,"TField field = new TField("""", getTType((byte) (type & 0x0f)), fieldId);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.36,14,8
1365_23,23,25,"if (isBoolType(type)) {
booleanValue = (byte) (type & 0x0f) == Types.BOOLEAN_TRUE ? Boolean.TRUE : Boolean.FALSE;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,2,1,0,0,0.44,16,9
1365_24,24,24,booleanValue = (byte) (type & 0x0f) == Types.BOOLEAN_TRUE ? Boolean.TRUE : Boolean.FALSE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.42,17,9
1365_27,27,27,lastFieldId = field.getId();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.34,20,11
1365_28,28,28,return field;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.62,21,11
1366_1,1,2,"@Override
public TField readFieldBegin()",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,7,1,0,1,0.51,10,5
1366_3,3,3,throws TException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,10,7,1,0,0,0.41,9,4
1366_5,5,5,byte type = readByte();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,10,7,1,0,1,0.5,7,3
1366_7,7,9,"if (type == TType.STOP) {
return TSTOP;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,10,7,1,0,1,0.5,3,1
1366_8,8,8,return TSTOP;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,7,1,0,0,0.22,4,1
1366_11,11,11,short fieldId;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,10,7,1,0,2,0.6,1,0
1366_13,13,13,short modifier = (short) ((type & 0xf0) >> 4);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,10,7,1,0,2,0.56,0,0
1366_14,14,19,"if (modifier == 0) {
fieldId = readI16();
}
else {
fieldId = (short) (lastFieldId + modifier);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,1,10,7,1,0,2,0.59,1,0
1366_15,15,15,fieldId = readI16();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,2,0.6,2,1
1366_17,17,17,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,0,0.27,4,3
1366_18,18,18,fieldId = (short) (lastFieldId + modifier);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,2,0.6,5,3
1366_21,21,21,"TField field = new TField("""", getTType((byte) (type & 0x0f)), fieldId);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,10,7,1,0,3,0.7,8,5
1366_23,23,25,"if (isBoolType(type)) {
booleanValue = (byte) (type & 0x0f) == Types.BOOLEAN_TRUE ? Boolean.TRUE : Boolean.FALSE;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,10,7,1,0,1,0.53,10,6
1366_24,24,24,booleanValue = (byte) (type & 0x0f) == Types.BOOLEAN_TRUE ? Boolean.TRUE : Boolean.FALSE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,7,1,0,1,0.47,11,6
1366_27,27,27,lastFieldId = field.getId();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,10,7,1,0,2,0.61,14,8
1366_28,28,28,return field;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,10,7,1,0,1,0.49,15,8
1367_1,1,2,"@Override
public TField readFieldBegin()",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,0,0,1,0.53,20,11
1367_3,3,3,throws TException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,4,0,0,0,0.37,19,10
1367_5,5,5,byte type = readByte();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,0,0,1,0.59,17,9
1367_7,7,9,"if (type == TType.STOP) {
return TSTOP;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,4,0,0,1,0.55,13,7
1367_8,8,8,return TSTOP;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.26,14,7
1367_11,11,11,short fieldId;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,0,0,1,0.53,11,6
1367_13,13,13,short modifier = (short) ((type & 0xf0) >> 4);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,0,0,1,0.52,9,5
1367_14,14,19,"if (modifier == 0) {
fieldId = readI16();
}
else {
fieldId = (short) (lastFieldId + modifier);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,1,6,4,0,0,1,0.51,3,1
1367_15,15,15,fieldId = readI16();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.53,7,3
1367_17,17,17,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.26,5,2
1367_18,18,18,fieldId = (short) (lastFieldId + modifier);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.51,4,1
1367_21,21,21,"TField field = new TField("""", getTType((byte) (type & 0x0f)), fieldId);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,0,0,2,0.69,1,0
1367_23,23,25,"if (isBoolType(type)) {
booleanValue = (byte) (type & 0x0f) == Types.BOOLEAN_TRUE ? Boolean.TRUE : Boolean.FALSE;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,4,0,0,3,0.77,0,0
1367_24,24,24,booleanValue = (byte) (type & 0x0f) == Types.BOOLEAN_TRUE ? Boolean.TRUE : Boolean.FALSE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,3,0.76,1,0
1367_27,27,27,lastFieldId = field.getId();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,4,0,0,1,0.51,4,2
1367_28,28,28,return field;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,4,0,0,1,0.55,5,2
1368_1,1,2,"@Override
public TField readFieldBegin()",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,0,0,0,0.34,21,12
1368_3,3,3,throws TException,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,4,0,0,0,0.33,20,11
1368_5,5,5,byte type = readByte();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,0,0,0,0.32,18,10
1368_7,7,9,"if (type == TType.STOP) {
return TSTOP;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,4,0,0,0,0.3,14,8
1368_8,8,8,return TSTOP;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.19,15,8
1368_11,11,11,short fieldId;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,0,0,0,0.37,12,7
1368_13,13,13,short modifier = (short) ((type & 0xf0) >> 4);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,0,0,0,0.42,10,6
1368_14,14,19,"if (modifier == 0) {
fieldId = readI16();
}
else {
fieldId = (short) (lastFieldId + modifier);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,1,6,4,0,0,0,0.37,4,2
1368_15,15,15,fieldId = readI16();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.34,8,4
1368_17,17,17,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.31,6,3
1368_18,18,18,fieldId = (short) (lastFieldId + modifier);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.36,5,2
1368_21,21,21,"TField field = new TField("""", getTType((byte) (type & 0x0f)), fieldId);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,0,0,0,0.35,2,1
1368_23,23,25,"if (isBoolType(type)) {
booleanValue = (byte) (type & 0x0f) == Types.BOOLEAN_TRUE ? Boolean.TRUE : Boolean.FALSE;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,4,0,0,2,0.58,0,0
1368_24,24,24,booleanValue = (byte) (type & 0x0f) == Types.BOOLEAN_TRUE ? Boolean.TRUE : Boolean.FALSE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,2,0.6,0,0
1368_27,27,27,lastFieldId = field.getId();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,4,0,0,0,0.31,3,1
1368_28,28,28,return field;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.3,4,1
328_1,1,1,private void detectNotificationIds(Context context),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.54,13,4
328_3,3,8,"NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(context)
.setSmallIcon(R.drawable.dummy_icon)
.setContentTitle(""1"")
.setContentText(""2"")
.setContentInfo(""3"")
.setSubText(""4"");",0,0,0,0,0,1,0,0,0,0,0,6,0,0,0,1,4,2,0,0,0,0.43,6,3
328_10,10,10,android.app.Notification n = mBuilder.build();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.3,4,2
328_12,12,12,LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.42,2,1
328_13,13,13,ViewGroup localView;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,0,0,1,0.52,1,0
328_15,15,15,"localView = (ViewGroup) inflater.inflate(n.contentView.getLayoutId(), null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,2,0,0,2,0.61,0,0
328_16,16,16,"n.contentView.reapply(context, localView);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.48,1,0
328_17,17,17,recursiveDetectNotificationsIds(localView);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,3,0.71,2,1
328_19,19,19,NotificationCompat.BigTextStyle bigtextstyle = new NotificationCompat.BigTextStyle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,0,0,0,0.34,4,3
328_20,20,20,"bigtextstyle.setSummaryText(""5"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.36,5,3
328_21,21,21,"bigtextstyle.setBigContentTitle(""6"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.35,6,4
328_22,22,22,"bigtextstyle.bigText(""7"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.35,7,5
328_23,23,23,"mBuilder.setContentTitle(""8"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.31,8,6
328_24,24,24,mBuilder.setStyle(bigtextstyle);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,0,0.29,9,7
328_25,25,25,"detectExpandedNotificationsIds(mBuilder.build(), context);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,2,0.59,10,8
328_27,27,28,"NotificationCompat.InboxStyle inboxStyle =
new NotificationCompat.InboxStyle();",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,0,4,2,0,0,0,0.33,12,10
328_29,29,29,"String[] events = {""10"",""11"",""12"",""13"",""14"",""15"",""16"",""17"",""18"",""19""};",0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,4,2,0,0,0,0.41,14,11
328_30,30,30,"inboxStyle.setBigContentTitle(""6"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.37,15,11
328_31,31,31,"mBuilder.setContentTitle(""9"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.38,16,12
328_32,32,32,"inboxStyle.setSummaryText(""5"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.36,17,13
328_34,34,37,"for (int i=0; i < events.length; i++)
{
inboxStyle.addLine(events[i]);
}",0,0,1,0,0,0,0,0,0,1,1,4,0,1,1,0,4,2,0,0,0,0.33,19,15
328_36,36,36,inboxStyle.addLine(events[i]);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.29,21,16
328_38,38,38,mBuilder.setStyle(inboxStyle);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,0,0.32,23,17
328_40,40,40,"detectExpandedNotificationsIds(mBuilder.build(), context);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,2,0.59,25,18
329_1,1,1,private void detectNotificationIds(Context context),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.55,17,7
329_3,3,8,"NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(context)
.setSmallIcon(R.drawable.dummy_icon)
.setContentTitle(""1"")
.setContentText(""2"")
.setContentInfo(""3"")
.setSubText(""4"");",0,0,0,0,0,1,0,0,0,0,0,6,0,0,0,1,4,3,0,0,0,0.44,10,6
329_10,10,10,android.app.Notification n = mBuilder.build();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.29,8,5
329_12,12,12,LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.44,6,4
329_13,13,13,ViewGroup localView;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,1,0.58,5,3
329_15,15,15,"localView = (ViewGroup) inflater.inflate(n.contentView.getLayoutId(), null);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,3,0,0,2,0.64,3,2
329_16,16,16,"n.contentView.reapply(context, localView);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.49,2,1
329_17,17,17,recursiveDetectNotificationsIds(localView);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,3,0.75,1,0
329_19,19,19,NotificationCompat.BigTextStyle bigtextstyle = new NotificationCompat.BigTextStyle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,0,0,0,0.33,0,0
329_20,20,20,"bigtextstyle.setSummaryText(""5"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.33,1,0
329_21,21,21,"bigtextstyle.setBigContentTitle(""6"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.34,2,1
329_22,22,22,"bigtextstyle.bigText(""7"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.3,3,2
329_23,23,23,"mBuilder.setContentTitle(""8"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.31,4,3
329_24,24,24,mBuilder.setStyle(bigtextstyle);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.29,5,4
329_25,25,25,"detectExpandedNotificationsIds(mBuilder.build(), context);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,3,0.71,6,5
329_27,27,28,"NotificationCompat.InboxStyle inboxStyle =
new NotificationCompat.InboxStyle();",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,0,4,3,0,0,0,0.35,8,7
329_29,29,29,"String[] events = {""10"",""11"",""12"",""13"",""14"",""15"",""16"",""17"",""18"",""19""};",0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,4,3,0,0,0,0.4,10,8
329_30,30,30,"inboxStyle.setBigContentTitle(""6"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,11,8
329_31,31,31,"mBuilder.setContentTitle(""9"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,12,9
329_32,32,32,"inboxStyle.setSummaryText(""5"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.36,13,10
329_34,34,37,"for (int i=0; i < events.length; i++)
{
inboxStyle.addLine(events[i]);
}",0,0,1,0,0,0,0,0,0,1,1,4,0,1,1,0,4,3,0,0,0,0.34,15,12
329_36,36,36,inboxStyle.addLine(events[i]);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.32,17,13
329_38,38,38,mBuilder.setStyle(inboxStyle);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,0,0.34,19,14
329_40,40,40,"detectExpandedNotificationsIds(mBuilder.build(), context);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,3,0.71,21,15
6814_1,1,1,"public static NotificationData getMapNotification(Context context, StatusBarNotification statusBarNotification) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.43,20,12
6814_3,3,3,"Logger.debug(""getMapNotification package: {} key: {}"", statusBarNotification.getPackageName(), statusBarNotification.getKey());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,1,0,1,0.43,18,11
6814_5,5,5,NotificationData notificationData = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,1,0,0,0.31,16,10
6814_7,7,78,"if(Build.VERSION.SDK_INT < Build.VERSION_CODES.O) {
notificationData = fromStatusBarNotification(context, statusBarNotification);

RemoteViews rmv = getContentView(context, statusBarNotification.getNotification());
RemoteViews brmv = getBigContentView(context, statusBarNotification.getNotification());

if (rmv == null) {
rmv = brmv;
Logger.debug(""using BigContentView"");
} else {
Logger.debug(""using ContentView"");
}

if (rmv != null) {

List<String> txt = extractText(rmv);
if ((txt.size() > 0) && (!(txt.get(0).isEmpty()))) {

try {
LayoutInflater inflater = (LayoutInflater) context.getSystemService(LAYOUT_INFLATER_SERVICE);
View layout = inflater.inflate(R.layout.nav_layout, null);
ViewGroup frame = layout.findViewById(R.id.layout_navi);
frame.removeAllViews();
View newView = rmv.apply(context, frame);
frame.addView(newView);
View viewImage = ((ViewGroup) newView).getChildAt(0);
viewImage.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED);
Bitmap bitmap = Bitmap.createBitmap(viewImage.getMeasuredWidth(), viewImage.getMeasuredHeight(), Bitmap.Config.ARGB_8888);
Canvas canvas = new Canvas(bitmap);
viewImage.layout(0, 0, viewImage.getMeasuredWidth(), viewImage.getMeasuredHeight());
viewImage.draw(canvas);
bitmap = Bitmap.createScaledBitmap(bitmap, 48, 48, true);

int width = bitmap.getWidth();
int height = bitmap.getHeight();
int[] intArray = new int[width * height];
bitmap.getPixels(intArray, 0, width, 0, 0, width, height);
Logger.info(""bitmap dimensions: "" + width + "" x "" + height);

notificationData.setIcon(intArray);
notificationData.setIconWidth(width);
notificationData.setIconHeight(height);
} catch (Exception e) {
notificationData.setIcon(new int[]{});
Logger.error(e, ""failed to get bitmap with exception: {}"", e.getMessage());
}

notificationData.setTitle(txt.get(0));
if (txt.size() > 1)
notificationData.setText(txt.get(1));
else
notificationData.setText("""");
notificationData.setHideReplies(true);
notificationData.setHideButtons(false);
notificationData.setForceCustom(true);
}
return notificationData;

} else {
Logger.warn(""null remoteView"");
return null;
}

} else {
isNormalNotification = false;
notificationData = fromStatusBarNotification(context, statusBarNotification);
notificationData.setHideReplies(true);
notificationData.setHideButtons(false);
notificationData.setForceCustom(true);
isNormalNotification = true;
return notificationData;
}",1,0,0,0,0,0,0,0,0,55,5,72,0,0,1,0,6,4,1,0,5,0.69,0,0
6814_8,8,8,"notificationData = fromStatusBarNotification(context, statusBarNotification);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.35,13,8
6814_10,10,10,"RemoteViews rmv = getContentView(context, statusBarNotification.getNotification());",0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,6,4,1,0,3,0.65,11,7
6814_11,11,11,"RemoteViews brmv = getBigContentView(context, statusBarNotification.getNotification());",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,6,4,1,0,3,0.64,10,6
6814_13,13,18,"if (rmv == null) {
rmv = brmv;
Logger.debug(""using BigContentView"");
} else {
Logger.debug(""using ContentView"");
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,1,1,6,4,1,0,2,0.56,3,1
6814_14,14,14,rmv = brmv;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.0,7,4
6814_15,15,15,"Logger.debug(""using BigContentView"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,2,0.56,6,3
6814_16,16,16,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.17,5,2
6814_17,17,17,"Logger.debug(""using ContentView"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,2,0.59,4,1
6814_20,20,68,"if (rmv != null) {

List<String> txt = extractText(rmv);
if ((txt.size() > 0) && (!(txt.get(0).isEmpty()))) {

try {
LayoutInflater inflater = (LayoutInflater) context.getSystemService(LAYOUT_INFLATER_SERVICE);
View layout = inflater.inflate(R.layout.nav_layout, null);
ViewGroup frame = layout.findViewById(R.id.layout_navi);
frame.removeAllViews();
View newView = rmv.apply(context, frame);
frame.addView(newView);
View viewImage = ((ViewGroup) newView).getChildAt(0);
viewImage.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED);
Bitmap bitmap = Bitmap.createBitmap(viewImage.getMeasuredWidth(), viewImage.getMeasuredHeight(), Bitmap.Config.ARGB_8888);
Canvas canvas = new Canvas(bitmap);
viewImage.layout(0, 0, viewImage.getMeasuredWidth(), viewImage.getMeasuredHeight());
viewImage.draw(canvas);
bitmap = Bitmap.createScaledBitmap(bitmap, 48, 48, true);

int width = bitmap.getWidth();
int height = bitmap.getHeight();
int[] intArray = new int[width * height];
bitmap.getPixels(intArray, 0, width, 0, 0, width, height);
Logger.info(""bitmap dimensions: "" + width + "" x "" + height);

notificationData.setIcon(intArray);
notificationData.setIconWidth(width);
notificationData.setIconHeight(height);
} catch (Exception e) {
notificationData.setIcon(new int[]{});
Logger.error(e, ""failed to get bitmap with exception: {}"", e.getMessage());
}

notificationData.setTitle(txt.get(0));
if (txt.size() > 1)
notificationData.setText(txt.get(1));
else
notificationData.setText("""");
notificationData.setHideReplies(true);
notificationData.setHideButtons(false);
notificationData.setForceCustom(true);
}
return notificationData;

} else {
Logger.warn(""null remoteView"");
return null;
}",1,0,0,0,0,0,0,0,0,38,4,49,0,0,1,1,6,4,1,0,4,0.65,0,0
6814_22,22,22,List<String> txt = extractText(rmv);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,1,0,1,0.48,0,0
6814_23,23,62,"if ((txt.size() > 0) && (!(txt.get(0).isEmpty()))) {

try {
LayoutInflater inflater = (LayoutInflater) context.getSystemService(LAYOUT_INFLATER_SERVICE);
View layout = inflater.inflate(R.layout.nav_layout, null);
ViewGroup frame = layout.findViewById(R.id.layout_navi);
frame.removeAllViews();
View newView = rmv.apply(context, frame);
frame.addView(newView);
View viewImage = ((ViewGroup) newView).getChildAt(0);
viewImage.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED);
Bitmap bitmap = Bitmap.createBitmap(viewImage.getMeasuredWidth(), viewImage.getMeasuredHeight(), Bitmap.Config.ARGB_8888);
Canvas canvas = new Canvas(bitmap);
viewImage.layout(0, 0, viewImage.getMeasuredWidth(), viewImage.getMeasuredHeight());
viewImage.draw(canvas);
bitmap = Bitmap.createScaledBitmap(bitmap, 48, 48, true);

int width = bitmap.getWidth();
int height = bitmap.getHeight();
int[] intArray = new int[width * height];
bitmap.getPixels(intArray, 0, width, 0, 0, width, height);
Logger.info(""bitmap dimensions: "" + width + "" x "" + height);

notificationData.setIcon(intArray);
notificationData.setIconWidth(width);
notificationData.setIconHeight(height);
} catch (Exception e) {
notificationData.setIcon(new int[]{});
Logger.error(e, ""failed to get bitmap with exception: {}"", e.getMessage());
}

notificationData.setTitle(txt.get(0));
if (txt.size() > 1)
notificationData.setText(txt.get(1));
else
notificationData.setText("""");
notificationData.setHideReplies(true);
notificationData.setHideButtons(false);
notificationData.setForceCustom(true);
}",1,0,0,0,0,0,0,0,0,32,3,40,0,1,0,0,6,4,1,0,3,0.6,1,0
6814_25,25,52,"try {
LayoutInflater inflater = (LayoutInflater) context.getSystemService(LAYOUT_INFLATER_SERVICE);
View layout = inflater.inflate(R.layout.nav_layout, null);
ViewGroup frame = layout.findViewById(R.id.layout_navi);
frame.removeAllViews();
View newView = rmv.apply(context, frame);
frame.addView(newView);
View viewImage = ((ViewGroup) newView).getChildAt(0);
viewImage.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED);
Bitmap bitmap = Bitmap.createBitmap(viewImage.getMeasuredWidth(), viewImage.getMeasuredHeight(), Bitmap.Config.ARGB_8888);
Canvas canvas = new Canvas(bitmap);
viewImage.layout(0, 0, viewImage.getMeasuredWidth(), viewImage.getMeasuredHeight());
viewImage.draw(canvas);
bitmap = Bitmap.createScaledBitmap(bitmap, 48, 48, true);

int width = bitmap.getWidth();
int height = bitmap.getHeight();
int[] intArray = new int[width * height];
bitmap.getPixels(intArray, 0, width, 0, 0, width, height);
Logger.info(""bitmap dimensions: "" + width + "" x "" + height);

notificationData.setIcon(intArray);
notificationData.setIconWidth(width);
notificationData.setIconHeight(height);
} catch (Exception e) {
notificationData.setIcon(new int[]{});
Logger.error(e, ""failed to get bitmap with exception: {}"", e.getMessage());
}",0,0,0,0,1,0,0,0,0,24,2,28,0,0,1,1,6,4,1,0,2,0.57,3,2
6814_26,26,26,LayoutInflater inflater = (LayoutInflater) context.getSystemService(LAYOUT_INFLATER_SERVICE);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.53,4,2
6814_27,27,27,"View layout = inflater.inflate(R.layout.nav_layout, null);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.51,5,3
6814_28,28,28,ViewGroup frame = layout.findViewById(R.id.layout_navi);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.51,6,4
6814_29,29,29,frame.removeAllViews();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.47,7,5
6814_30,30,30,"View newView = rmv.apply(context, frame);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.51,8,6
6814_31,31,31,frame.addView(newView);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.51,9,7
6814_32,32,32,View viewImage = ((ViewGroup) newView).getChildAt(0);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,2,0.61,10,8
6814_33,33,33,"viewImage.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.53,11,9
6814_34,34,34,"Bitmap bitmap = Bitmap.createBitmap(viewImage.getMeasuredWidth(), viewImage.getMeasuredHeight(), Bitmap.Config.ARGB_8888);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,2,0.59,12,10
6814_35,35,35,Canvas canvas = new Canvas(bitmap);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.37,13,11
6814_36,36,36,"viewImage.layout(0, 0, viewImage.getMeasuredWidth(), viewImage.getMeasuredHeight());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,2,0.57,14,12
6814_37,37,37,viewImage.draw(canvas);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.47,15,13
6814_38,38,38,"bitmap = Bitmap.createScaledBitmap(bitmap, 48, 48, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.4,16,14
6814_40,40,40,int width = bitmap.getWidth();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,1,0,1,0.49,18,16
6814_41,41,41,int height = bitmap.getHeight();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.52,19,16
6814_42,42,42,int[] intArray = new int[width * height];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.32,20,17
6814_43,43,43,"bitmap.getPixels(intArray, 0, width, 0, 0, width, height);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.45,21,18
6814_44,44,44,"Logger.info(""bitmap dimensions: "" + width + "" x "" + height);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,4,1,0,0,0.4,22,19
6814_46,46,46,notificationData.setIcon(intArray);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,4,1,0,0,0.35,24,21
6814_47,47,47,notificationData.setIconWidth(width);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.37,25,21
6814_48,48,48,notificationData.setIconHeight(height);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.38,26,22
6814_49,49,49,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.29,27,23
6814_50,50,50,notificationData.setIcon(new int[]{});,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.35,28,24
6814_51,51,51,"Logger.error(e, ""failed to get bitmap with exception: {}"", e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.49,29,25
6814_54,54,54,notificationData.setTitle(txt.get(0));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,6,4,1,0,1,0.47,32,27
6814_55,55,58,"if (txt.size() > 1)
notificationData.setText(txt.get(1));
else
notificationData.setText("""");",1,0,0,0,0,0,0,0,0,2,0,4,1,1,0,0,6,4,1,0,2,0.51,33,27
6814_56,56,56,notificationData.setText(txt.get(1));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,1,0,2,0.54,34,28
6814_57,57,58,"else
notificationData.setText("""");",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,6,4,1,0,1,0.45,35,29
6814_59,59,59,notificationData.setHideReplies(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.38,37,31
6814_60,60,60,notificationData.setHideButtons(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.36,38,31
6814_61,61,61,notificationData.setForceCustom(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.3,39,32
6814_63,63,63,return notificationData;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,6,4,1,0,0,0.29,41,34
6814_65,65,65,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.17,43,35
6814_66,66,66,"Logger.warn(""null remoteView"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,2,0.58,44,35
6814_67,67,67,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.27,45,36
6814_70,70,70,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.17,48,38
6814_71,71,71,isNormalNotification = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.22,49,38
6814_72,72,72,"notificationData = fromStatusBarNotification(context, statusBarNotification);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.35,50,39
6814_73,73,73,notificationData.setHideReplies(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.38,51,40
6814_74,74,74,notificationData.setHideButtons(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.36,52,41
6814_75,75,75,notificationData.setForceCustom(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.3,53,42
6814_76,76,76,isNormalNotification = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.21,54,43
6814_77,77,77,return notificationData;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.29,55,44
6817_1,1,1,private static List<String> extractText(RemoteViews views) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.48,8,5
6817_2,2,2,List<String> text = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,1,0.45,7,4
6817_3,3,38,"try {
Field field = views.getClass().getDeclaredField(""mActions"");
field.setAccessible(true);

@SuppressWarnings(""unchecked"")
ArrayList<Parcelable> actions = (ArrayList<Parcelable>) field.get(views);

for (Parcelable p : actions) {
Parcel parcel = Parcel.obtain();
p.writeToParcel(parcel, 0);
parcel.setDataPosition(0);

int tag = parcel.readInt();
if (tag != 2) continue;

parcel.readInt();

String methodName = parcel.readString();
if (methodName == null)
continue;
else {

if (methodName.equals(""setText"")) {
parcel.readInt();

String t = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(parcel).toString().trim();
text.add(t);
}
}
parcel.recycle();
}
}
catch (Exception e) {
Logger.error(e, ""extractText exception: {}"", e.getMessage());
text.add(""ERROR"");
}",0,0,0,0,1,0,0,0,0,22,4,36,0,1,0,0,5,2,1,0,3,0.6,0,0
6817_4,4,4,"Field field = views.getClass().getDeclaredField(""mActions"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,1,0.48,5,2
6817_5,5,5,field.setAccessible(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,2,1,0,1,0.48,4,1
6817_7,7,8,"@SuppressWarnings(""unchecked"")
ArrayList<Parcelable> actions = (ArrayList<Parcelable>) field.get(views);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,5,2,1,0,1,0.46,1,0
6817_10,10,33,"for (Parcelable p : actions) {
Parcel parcel = Parcel.obtain();
p.writeToParcel(parcel, 0);
parcel.setDataPosition(0);

int tag = parcel.readInt();
if (tag != 2) continue;

parcel.readInt();

String methodName = parcel.readString();
if (methodName == null)
continue;
else {

if (methodName.equals(""setText"")) {
parcel.readInt();

String t = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(parcel).toString().trim();
text.add(t);
}
}
parcel.recycle();
}",0,0,0,1,0,0,0,0,0,15,3,24,0,0,1,0,5,2,1,0,3,0.6,0,0
6817_11,11,11,Parcel parcel = Parcel.obtain();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.45,1,0
6817_12,12,12,"p.writeToParcel(parcel, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.36,2,1
6817_13,13,13,parcel.setDataPosition(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,2,1,0,1,0.51,3,2
6817_15,15,15,int tag = parcel.readInt();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,0,0.34,5,4
6817_16,16,16,if (tag != 2) continue;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,2,1,0,0,0.3,6,4
6817_18,18,18,parcel.readInt();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,2,1,0,0,0.34,8,6
6817_20,20,20,String methodName = parcel.readString();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,0,0.38,10,7
6817_21,21,31,"if (methodName == null)
continue;
else {

if (methodName.equals(""setText"")) {
parcel.readInt();

String t = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(parcel).toString().trim();
text.add(t);
}
}",1,0,0,0,0,0,0,0,0,6,2,11,0,1,0,0,5,2,1,0,2,0.56,11,7
6817_22,22,22,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.2,12,8
6817_23,23,23,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.2,13,9
6817_25,25,30,"if (methodName.equals(""setText"")) {
parcel.readInt();

String t = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(parcel).toString().trim();
text.add(t);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,0,1,0,5,2,1,0,2,0.57,15,11
6817_26,26,26,parcel.readInt();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,1,0,0,0.34,16,11
6817_28,28,28,String t = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(parcel).toString().trim();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,2,1,0,1,0.46,18,13
6817_29,29,29,text.add(t);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,1,0.5,19,13
6817_32,32,32,parcel.recycle();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.45,22,15
6817_35,35,35,catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.24,25,16
6817_36,36,36,"Logger.error(e, ""extractText exception: {}"", e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.42,26,16
6817_37,37,37,"text.add(""ERROR"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.43,27,17
6817_39,39,39,return text;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,2,1,0,1,0.5,29,19
6712_1,1,2,"    @Override
public void onCreate() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,2,1,0,0,0.42,4,2
6712_3,3,3,super.onCreate();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,1,0,0,0.21,3,1
6712_5,5,5,"Logger.debug(""onCreate is now running..."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,2,1,0,1,0.48,1,0
6712_7,7,7,startPersistentNotification();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,1,0.5,0,0
6712_8,8,8,tryReconnectNotificationService();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,1,0,1,0.5,1,0
6712_10,10,10,transportListener = new TransportListener(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,0,0.35,3,2
6712_11,11,11,EventBus.getDefault().register(transportListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,1,0,0,0.3,4,2
6712_13,13,13,"Logger.trace(""connecting transporters..."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,0,0.37,6,4
6712_14,14,14,"transporterAmazMod = TransporterClassic.get(this, Transport.NAME);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.36,7,4
6712_15,15,19,"if (!transporterAmazMod.isTransportServiceConnected()) {
transporterAmazMod.addDataListener(this);
transporterAmazMod.connectTransportService();
AmazModApplication.setWatchConnected(false);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,5,2,1,0,1,0.46,8,5
6712_16,16,16,transporterAmazMod.addDataListener(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.36,9,6
6712_17,17,17,transporterAmazMod.connectTransportService();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.49,10,7
6712_18,18,18,AmazModApplication.setWatchConnected(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.36,11,8
6712_20,20,20,"transporterNotifications = TransporterClassic.get(this, Transport.NAME_NOTIFICATION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.35,13,10
6712_21,21,24,"if (!transporterNotifications.isTransportServiceConnected()) {
transporterNotifications.connectTransportService();
AmazModApplication.setWatchConnected(false);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,5,2,1,0,1,0.46,14,10
6712_22,22,22,transporterNotifications.connectTransportService();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.47,15,11
6712_23,23,23,AmazModApplication.setWatchConnected(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.36,16,12
6712_25,25,25,"transporterHuami = TransporterClassic.get(this, ""com.huami.action.notification"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.39,18,14
6712_26,26,29,"if (!transporterHuami.isTransportServiceConnected()) {
transporterHuami.connectTransportService();
AmazModApplication.setWatchConnected(false);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,5,2,1,0,1,0.47,19,14
6712_27,27,27,transporterHuami.connectTransportService();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.47,20,15
6712_28,28,28,AmazModApplication.setWatchConnected(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.36,21,16
6712_30,30,30,"transporterCompanion = TransporterClassic.get(this, ""com.huami.watch.companion"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.4,23,18
6712_31,31,35,"if (!transporterCompanion.isTransportServiceConnected()) {
transporterCompanion.addDataListener(this);
transporterCompanion.connectTransportService();
AmazModApplication.setWatchConnected(false);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,1,5,2,1,0,1,0.47,24,18
6712_32,32,32,transporterCompanion.addDataListener(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.35,25,19
6712_33,33,33,transporterCompanion.connectTransportService();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.47,26,20
6712_34,34,34,AmazModApplication.setWatchConnected(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.36,27,21
6712_37,37,38,"if (PreferenceManager.getDefaultSharedPreferences(this).getBoolean(Constants.PREF_ENABLE_INTERNET_COMPANION, false))
startInternetCompanion(getApplicationContext());",1,0,0,0,0,0,0,0,0,1,0,2,1,0,1,0,5,2,1,0,0,0.36,30,23
6712_38,38,38,startInternetCompanion(getApplicationContext());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.32,31,23
6712_39,39,40,"if (PreferenceManager.getDefaultSharedPreferences(this).getBoolean(Constants.PREF_ENABLE_SLEEP_AS_ANDROID, false))
sleepListener.register(this);",1,0,0,0,0,0,0,0,0,1,0,2,1,0,0,0,5,2,1,0,0,0.34,32,24
6712_40,40,40,sleepListener.register(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.31,33,25
6713_1,1,2,"    @Override
public void onCreate() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.32,14,10
6713_3,3,3,super.onCreate();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.35,13,9
6713_5,5,5,"Logger.debug(""onCreate is now running..."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.28,11,8
6713_7,7,7,startPersistentNotification();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.34,9,7
6713_8,8,8,tryReconnectNotificationService();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.27,8,6
6713_10,10,10,transportListener = new TransportListener(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,1,0.57,6,5
6713_11,11,11,EventBus.getDefault().register(transportListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,1,0.51,5,4
6713_13,13,13,"Logger.trace(""connecting transporters..."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.32,3,3
6713_14,14,14,"transporterAmazMod = TransporterClassic.get(this, Transport.NAME);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.24,2,2
6713_15,15,19,"if (!transporterAmazMod.isTransportServiceConnected()) {
transporterAmazMod.addDataListener(this);
transporterAmazMod.connectTransportService();
AmazModApplication.setWatchConnected(false);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,2,2,0,0,2,0.66,0,0
6713_16,16,16,transporterAmazMod.addDataListener(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,2,0.78,0,0
6713_17,17,17,transporterAmazMod.connectTransportService();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.24,0,0
6713_18,18,18,AmazModApplication.setWatchConnected(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.3,1,0
6713_20,20,20,"transporterNotifications = TransporterClassic.get(this, Transport.NAME_NOTIFICATION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.24,3,2
6713_21,21,24,"if (!transporterNotifications.isTransportServiceConnected()) {
transporterNotifications.connectTransportService();
AmazModApplication.setWatchConnected(false);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,2,2,0,0,0,0.28,4,2
6713_22,22,22,transporterNotifications.connectTransportService();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.24,5,3
6713_23,23,23,AmazModApplication.setWatchConnected(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.3,6,4
6713_25,25,25,"transporterHuami = TransporterClassic.get(this, ""com.huami.action.notification"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,8,6
6713_26,26,29,"if (!transporterHuami.isTransportServiceConnected()) {
transporterHuami.connectTransportService();
AmazModApplication.setWatchConnected(false);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,2,2,0,0,0,0.28,9,6
6713_27,27,27,transporterHuami.connectTransportService();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,10,7
6713_28,28,28,AmazModApplication.setWatchConnected(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.3,11,8
6713_30,30,30,"transporterCompanion = TransporterClassic.get(this, ""com.huami.watch.companion"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.35,13,10
6713_31,31,35,"if (!transporterCompanion.isTransportServiceConnected()) {
transporterCompanion.addDataListener(this);
transporterCompanion.connectTransportService();
AmazModApplication.setWatchConnected(false);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,1,2,2,0,0,2,0.66,14,10
6713_32,32,32,transporterCompanion.addDataListener(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,2,0.81,15,11
6713_33,33,33,transporterCompanion.connectTransportService();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,16,12
6713_34,34,34,AmazModApplication.setWatchConnected(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.3,17,13
6713_37,37,38,"if (PreferenceManager.getDefaultSharedPreferences(this).getBoolean(Constants.PREF_ENABLE_INTERNET_COMPANION, false))
startInternetCompanion(getApplicationContext());",1,0,0,0,0,0,0,0,0,1,0,2,1,0,1,0,2,2,0,0,0,0.29,20,15
6713_38,38,38,startInternetCompanion(getApplicationContext());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.19,21,15
6713_39,39,40,"if (PreferenceManager.getDefaultSharedPreferences(this).getBoolean(Constants.PREF_ENABLE_SLEEP_AS_ANDROID, false))
sleepListener.register(this);",1,0,0,0,0,0,0,0,0,1,0,2,1,0,0,0,2,2,0,0,1,0.47,22,16
6713_40,40,40,sleepListener.register(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.58,23,17
6714_1,1,2,"    @Override
public void onCreate() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.32,30,23
6714_3,3,3,super.onCreate();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.35,29,22
6714_5,5,5,"Logger.debug(""onCreate is now running..."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.28,27,21
6714_7,7,7,startPersistentNotification();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.34,25,20
6714_8,8,8,tryReconnectNotificationService();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.27,24,19
6714_10,10,10,transportListener = new TransportListener(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,1,0.57,22,18
6714_11,11,11,EventBus.getDefault().register(transportListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,1,0.51,21,17
6714_13,13,13,"Logger.trace(""connecting transporters..."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.32,19,16
6714_14,14,14,"transporterAmazMod = TransporterClassic.get(this, Transport.NAME);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.24,18,15
6714_15,15,19,"if (!transporterAmazMod.isTransportServiceConnected()) {
transporterAmazMod.addDataListener(this);
transporterAmazMod.connectTransportService();
AmazModApplication.setWatchConnected(false);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,2,2,0,0,2,0.66,13,11
6714_16,16,16,transporterAmazMod.addDataListener(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,2,0.78,16,13
6714_17,17,17,transporterAmazMod.connectTransportService();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.24,15,12
6714_18,18,18,AmazModApplication.setWatchConnected(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.3,14,11
6714_20,20,20,"transporterNotifications = TransporterClassic.get(this, Transport.NAME_NOTIFICATION);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.24,12,10
6714_21,21,24,"if (!transporterNotifications.isTransportServiceConnected()) {
transporterNotifications.connectTransportService();
AmazModApplication.setWatchConnected(false);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,2,2,0,0,0,0.28,8,7
6714_22,22,22,transporterNotifications.connectTransportService();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.24,10,8
6714_23,23,23,AmazModApplication.setWatchConnected(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.3,9,7
6714_25,25,25,"transporterHuami = TransporterClassic.get(this, ""com.huami.action.notification"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,7,6
6714_26,26,29,"if (!transporterHuami.isTransportServiceConnected()) {
transporterHuami.connectTransportService();
AmazModApplication.setWatchConnected(false);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,2,2,0,0,0,0.28,3,3
6714_27,27,27,transporterHuami.connectTransportService();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,5,4
6714_28,28,28,AmazModApplication.setWatchConnected(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.3,4,3
6714_30,30,30,"transporterCompanion = TransporterClassic.get(this, ""com.huami.watch.companion"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.35,2,2
6714_31,31,35,"if (!transporterCompanion.isTransportServiceConnected()) {
transporterCompanion.addDataListener(this);
transporterCompanion.connectTransportService();
AmazModApplication.setWatchConnected(false);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,1,2,2,0,0,2,0.66,0,0
6714_32,32,32,transporterCompanion.addDataListener(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,2,0.81,0,0
6714_33,33,33,transporterCompanion.connectTransportService();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,0,0
6714_34,34,34,AmazModApplication.setWatchConnected(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.3,1,0
6714_37,37,38,"if (PreferenceManager.getDefaultSharedPreferences(this).getBoolean(Constants.PREF_ENABLE_INTERNET_COMPANION, false))
startInternetCompanion(getApplicationContext());",1,0,0,0,0,0,0,0,0,1,0,2,1,0,1,0,2,2,0,0,0,0.29,4,2
6714_38,38,38,startInternetCompanion(getApplicationContext());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.19,5,2
6714_39,39,40,"if (PreferenceManager.getDefaultSharedPreferences(this).getBoolean(Constants.PREF_ENABLE_SLEEP_AS_ANDROID, false))
sleepListener.register(this);",1,0,0,0,0,0,0,0,0,1,0,2,1,0,0,0,2,2,0,0,1,0.47,6,3
6714_40,40,40,sleepListener.register(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.58,7,4
6715_1,1,2,"    @Override
public void onDataReceived(TransportDataItem transportDataItem) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,1,0,1,0.44,3,2
6715_3,3,3,String action = transportDataItem.getAction();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,2,0.57,2,1
6715_4,4,4,"Logger.debug(""Watch replied with action: {} (full reply: {})"", action, transportDataItem.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,1,0,1,0.46,1,0
6715_6,6,6,Object event = dataToClass(transportDataItem);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,3,1,0,2,0.63,0,0
6715_8,8,23,"if (action != null) {
TaskCompletionSource<Object> taskCompletionSourcePendingResult = (TaskCompletionSource<Object>) pendingResults.get(action);
if (taskCompletionSourcePendingResult != null) {
pendingResults.remove(action);
taskCompletionSourcePendingResult.setResult(event);
} else {
if( event != null ) {
Logger.trace(""Sending EventBus event: ""+event);
EventBus.getDefault().post(event);
}else{
Logger.trace(""EventBus event is null"");
}
}
} else {
Logger.error(""TransportService onDataReceived null action!"");
}",1,0,0,0,0,0,0,0,0,12,3,16,0,0,1,0,4,3,1,0,2,0.5,2,1
6715_9,9,9,TaskCompletionSource<Object> taskCompletionSourcePendingResult = (TaskCompletionSource<Object>) pendingResults.get(action);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.41,3,1
6715_10,10,20,"if (taskCompletionSourcePendingResult != null) {
pendingResults.remove(action);
taskCompletionSourcePendingResult.setResult(event);
} else {
if( event != null ) {
Logger.trace(""Sending EventBus event: ""+event);
EventBus.getDefault().post(event);
}else{
Logger.trace(""EventBus event is null"");
}
}",1,0,0,0,0,0,0,0,0,8,2,11,0,1,0,0,4,3,1,0,1,0.43,4,2
6715_11,11,11,pendingResults.remove(action);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.29,5,3
6715_12,12,12,taskCompletionSourcePendingResult.setResult(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.27,6,4
6715_13,13,13,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.1,7,5
6715_14,14,19,"if( event != null ) {
Logger.trace(""Sending EventBus event: ""+event);
EventBus.getDefault().post(event);
}else{
Logger.trace(""EventBus event is null"");
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,4,3,1,0,1,0.44,8,6
6715_15,15,15,"Logger.trace(""Sending EventBus event: ""+event);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.33,9,7
6715_16,16,16,EventBus.getDefault().post(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.45,10,8
6715_17,17,17,}else{,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.1,11,9
6715_18,18,18,"Logger.trace(""EventBus event is null"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.34,12,10
6715_21,21,21,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.1,15,12
6715_22,22,22,"Logger.error(""TransportService onDataReceived null action!"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.47,16,12
6716_1,1,2,"    @Override
public void onDataReceived(TransportDataItem transportDataItem) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,0,0.37,6,4
6716_3,3,3,String action = transportDataItem.getAction();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.25,5,3
6716_4,4,4,"Logger.debug(""Watch replied with action: {} (full reply: {})"", action, transportDataItem.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,1,0,0,0.32,4,2
6716_6,6,6,Object event = dataToClass(transportDataItem);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,2,1,0,0,0.32,2,1
6716_8,8,23,"if (action != null) {
TaskCompletionSource<Object> taskCompletionSourcePendingResult = (TaskCompletionSource<Object>) pendingResults.get(action);
if (taskCompletionSourcePendingResult != null) {
pendingResults.remove(action);
taskCompletionSourcePendingResult.setResult(event);
} else {
if( event != null ) {
Logger.trace(""Sending EventBus event: ""+event);
EventBus.getDefault().post(event);
}else{
Logger.trace(""EventBus event is null"");
}
}
} else {
Logger.error(""TransportService onDataReceived null action!"");
}",1,0,0,0,0,0,0,0,0,12,3,16,0,0,1,0,3,2,1,0,2,0.59,0,0
6716_9,9,9,TaskCompletionSource<Object> taskCompletionSourcePendingResult = (TaskCompletionSource<Object>) pendingResults.get(action);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,2,0.63,0,0
6716_10,10,20,"if (taskCompletionSourcePendingResult != null) {
pendingResults.remove(action);
taskCompletionSourcePendingResult.setResult(event);
} else {
if( event != null ) {
Logger.trace(""Sending EventBus event: ""+event);
EventBus.getDefault().post(event);
}else{
Logger.trace(""EventBus event is null"");
}
}",1,0,0,0,0,0,0,0,0,8,2,11,0,1,0,0,3,2,1,0,2,0.59,1,0
6716_11,11,11,pendingResults.remove(action);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.54,2,1
6716_12,12,12,taskCompletionSourcePendingResult.setResult(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,2,0.63,3,2
6716_13,13,13,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.15,4,3
6716_14,14,19,"if( event != null ) {
Logger.trace(""Sending EventBus event: ""+event);
EventBus.getDefault().post(event);
}else{
Logger.trace(""EventBus event is null"");
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,3,2,1,0,0,0.33,5,4
6716_15,15,15,"Logger.trace(""Sending EventBus event: ""+event);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.33,6,5
6716_16,16,16,EventBus.getDefault().post(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.26,7,6
6716_17,17,17,}else{,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.15,8,7
6716_18,18,18,"Logger.trace(""EventBus event is null"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.35,9,8
6716_21,21,21,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.15,12,10
6716_22,22,22,"Logger.error(""TransportService onDataReceived null action!"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.34,13,10
6717_1,1,1,"    public void send(char mode, final String action, Transportable transportable, final TaskCompletionSource<Void> waiter) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.44,54,37
6717_2,2,2,"Transporter transporter = getTransporter(mode, action);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.26,53,36
6717_4,4,5,"if (transporter == null)
return;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,3,3,0,0,0,0.2,50,34
6717_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.18,50,34
6717_7,7,7,boolean isTransportConnected = transporter.isTransportServiceConnected();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.31,48,33
6717_8,8,17,"if (!isTransportConnected) {
if (AmazModApplication.isWatchConnected() || (EventBus.getDefault().getStickyEvent(IsWatchConnectedLocal.class) == null)) {
AmazModApplication.setWatchConnected(false);
EventBus.getDefault().removeAllStickyEvents();
EventBus.getDefault().postSticky(new IsWatchConnectedLocal(AmazModApplication.isWatchConnected()));
persistentNotification.updatePersistentNotification(AmazModApplication.isWatchConnected());
}
Logger.warn(""Transporter is not connected"");
return;
}",1,0,0,0,0,0,0,0,0,7,2,10,0,1,0,1,3,3,0,0,0,0.38,38,25
6717_9,9,14,"if (AmazModApplication.isWatchConnected() || (EventBus.getDefault().getStickyEvent(IsWatchConnectedLocal.class) == null)) {
AmazModApplication.setWatchConnected(false);
EventBus.getDefault().removeAllStickyEvents();
EventBus.getDefault().postSticky(new IsWatchConnectedLocal(AmazModApplication.isWatchConnected()));
persistentNotification.updatePersistentNotification(AmazModApplication.isWatchConnected());
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,3,3,0,0,0,0.36,41,27
6717_10,10,10,AmazModApplication.setWatchConnected(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.31,45,30
6717_11,11,11,EventBus.getDefault().removeAllStickyEvents();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.26,44,29
6717_12,12,12,EventBus.getDefault().postSticky(new IsWatchConnectedLocal(AmazModApplication.isWatchConnected()));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.34,43,28
6717_13,13,13,persistentNotification.updatePersistentNotification(AmazModApplication.isWatchConnected());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.39,42,27
6717_15,15,15,"Logger.warn(""Transporter is not connected"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,40,26
6717_16,16,16,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.18,39,25
6717_19,19,28,"if(!BluetoothAdapter.getDefaultAdapter().isEnabled()){
if (AmazModApplication.isWatchConnected() || (EventBus.getDefault().getStickyEvent(IsWatchConnectedLocal.class) == null)) {
AmazModApplication.setWatchConnected(false);
EventBus.getDefault().removeAllStickyEvents();
EventBus.getDefault().postSticky(new IsWatchConnectedLocal(AmazModApplication.isWatchConnected()));
persistentNotification.updatePersistentNotification(AmazModApplication.isWatchConnected());
}
Logger.warn(""Bluetooth is not enabled"");
return;
}",1,0,0,0,0,0,0,0,0,7,2,10,0,0,1,1,3,3,0,0,0,0.38,27,17
6717_20,20,25,"if (AmazModApplication.isWatchConnected() || (EventBus.getDefault().getStickyEvent(IsWatchConnectedLocal.class) == null)) {
AmazModApplication.setWatchConnected(false);
EventBus.getDefault().removeAllStickyEvents();
EventBus.getDefault().postSticky(new IsWatchConnectedLocal(AmazModApplication.isWatchConnected()));
persistentNotification.updatePersistentNotification(AmazModApplication.isWatchConnected());
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,3,3,0,0,0,0.36,30,19
6717_21,21,21,AmazModApplication.setWatchConnected(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.31,34,22
6717_22,22,22,EventBus.getDefault().removeAllStickyEvents();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.26,33,21
6717_23,23,23,EventBus.getDefault().postSticky(new IsWatchConnectedLocal(AmazModApplication.isWatchConnected()));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.34,32,20
6717_24,24,24,persistentNotification.updatePersistentNotification(AmazModApplication.isWatchConnected());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.39,31,19
6717_26,26,26,"Logger.warn(""Bluetooth is not enabled"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,29,18
6717_27,27,27,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.18,28,17
6717_30,30,30,DataBundle dataBundle = new DataBundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,1,0.56,25,16
6717_31,31,32,"if (transportable != null)
transportable.toDataBundle(dataBundle);",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,1,3,3,0,0,1,0.49,23,14
6717_32,32,32,transportable.toDataBundle(dataBundle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.54,23,14
6717_34,34,34,"Logger.debug(""Send action: {}"", action);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.54,21,13
6717_35,35,35,"transporter.send(action, dataBundle, new Transporter.DataSendResultCallback() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.68,20,12
6717_36,36,37,"@Override
public void onResultBack(DataTransportResult dataTransportResult) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,1,0.52,18,11
6717_38,38,38,"Logger.info(""Send result: {}"", dataTransportResult.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,2,0.65,17,10
6717_40,40,40,switch (dataTransportResult.getResultCode()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.49,15,9
6717_41,41,44,"case (DataTransportResult.RESULT_FAILED_TRANSPORT_SERVICE_UNCONNECTED):
case (DataTransportResult.RESULT_FAILED_CHANNEL_UNAVAILABLE):
case (DataTransportResult.RESULT_FAILED_IWDS_CRASH):
case (DataTransportResult.RESULT_FAILED_LINK_DISCONNECTED): {",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,3,3,0,0,1,0.56,11,8
6717_45,45,45,TaskCompletionSource<Object> taskCompletionSourcePendingResult = (TaskCompletionSource<Object>) pendingResults.get(action);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.32,10,7
6717_46,46,49,"if (taskCompletionSourcePendingResult != null) {
taskCompletionSourcePendingResult.setException(new RuntimeException(""TransporterError: "" + dataTransportResult.toString()));
pendingResults.remove(action);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,3,3,0,0,1,0.44,6,4
6717_47,47,47,"taskCompletionSourcePendingResult.setException(new RuntimeException(""TransporterError: "" + dataTransportResult.toString()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.45,8,5
6717_48,48,48,pendingResults.remove(action);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,7,4
6717_51,51,52,"if (waiter != null)
waiter.setException(new RuntimeException(""TransporterError: "" + dataTransportResult.toString()));",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,0,3,3,0,0,1,0.45,3,2
6717_52,52,52,"waiter.setException(new RuntimeException(""TransporterError: "" + dataTransportResult.toString()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.45,3,2
6717_53,53,53,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,3,0,0,0,0.24,2,1
6717_55,55,55,case (DataTransportResult.RESULT_OK): {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.52,0,0
6717_56,56,57,"if (waiter != null)
waiter.setResult(null);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,1,3,3,0,0,0,0.27,0,0
6717_57,57,57,waiter.setResult(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.28,1,0
6717_59,59,64,"if (EventBus.getDefault().getStickyEvent(IsWatchConnectedLocal.class) == null) {
AmazModApplication.setWatchConnected(true);
EventBus.getDefault().removeAllStickyEvents();
EventBus.getDefault().postSticky(new IsWatchConnectedLocal(true));
persistentNotification.updatePersistentNotification(true);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,1,1,3,3,0,0,0,0.37,3,2
6717_60,60,60,AmazModApplication.setWatchConnected(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,4,2
6717_61,61,61,EventBus.getDefault().removeAllStickyEvents();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.26,5,3
6717_62,62,62,EventBus.getDefault().postSticky(new IsWatchConnectedLocal(true));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.35,6,4
6717_63,63,63,persistentNotification.updatePersistentNotification(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.42,7,5
6717_66,66,66,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,3,3,0,0,0,0.24,10,7
6717_68,68,69,"default:
Logger.warn(""Send status result is an unknown getResultCode: {}"", dataTransportResult.getResultCode());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,2,0.66,12,8
6718_1,1,1,"    public void send(char mode, final String action, Transportable transportable, final TaskCompletionSource<Void> waiter) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.34,57,39
6718_2,2,2,"Transporter transporter = getTransporter(mode, action);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,1,0,0,0.32,56,38
6718_4,4,5,"if (transporter == null)
return;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,4,3,1,0,0,0.24,53,36
6718_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,4,3,1,0,0,0.11,53,36
6718_7,7,7,boolean isTransportConnected = transporter.isTransportServiceConnected();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,1,0,1,0.5,51,35
6718_8,8,17,"if (!isTransportConnected) {
if (AmazModApplication.isWatchConnected() || (EventBus.getDefault().getStickyEvent(IsWatchConnectedLocal.class) == null)) {
AmazModApplication.setWatchConnected(false);
EventBus.getDefault().removeAllStickyEvents();
EventBus.getDefault().postSticky(new IsWatchConnectedLocal(AmazModApplication.isWatchConnected()));
persistentNotification.updatePersistentNotification(AmazModApplication.isWatchConnected());
}
Logger.warn(""Transporter is not connected"");
return;
}",1,0,0,0,0,0,0,0,0,7,2,10,0,1,0,1,4,3,1,0,3,0.69,41,27
6718_9,9,14,"if (AmazModApplication.isWatchConnected() || (EventBus.getDefault().getStickyEvent(IsWatchConnectedLocal.class) == null)) {
AmazModApplication.setWatchConnected(false);
EventBus.getDefault().removeAllStickyEvents();
EventBus.getDefault().postSticky(new IsWatchConnectedLocal(AmazModApplication.isWatchConnected()));
persistentNotification.updatePersistentNotification(AmazModApplication.isWatchConnected());
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,4,3,1,0,3,0.69,44,29
6718_10,10,10,AmazModApplication.setWatchConnected(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,3,0.75,48,32
6718_11,11,11,EventBus.getDefault().removeAllStickyEvents();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,0,0.36,47,31
6718_12,12,12,EventBus.getDefault().postSticky(new IsWatchConnectedLocal(AmazModApplication.isWatchConnected()));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,2,0.61,46,30
6718_13,13,13,persistentNotification.updatePersistentNotification(AmazModApplication.isWatchConnected());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,2,0.56,45,29
6718_15,15,15,"Logger.warn(""Transporter is not connected"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.55,43,28
6718_16,16,16,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.11,42,27
6718_19,19,28,"if(!BluetoothAdapter.getDefaultAdapter().isEnabled()){
if (AmazModApplication.isWatchConnected() || (EventBus.getDefault().getStickyEvent(IsWatchConnectedLocal.class) == null)) {
AmazModApplication.setWatchConnected(false);
EventBus.getDefault().removeAllStickyEvents();
EventBus.getDefault().postSticky(new IsWatchConnectedLocal(AmazModApplication.isWatchConnected()));
persistentNotification.updatePersistentNotification(AmazModApplication.isWatchConnected());
}
Logger.warn(""Bluetooth is not enabled"");
return;
}",1,0,0,0,0,0,0,0,0,7,2,10,0,0,1,1,4,3,1,0,3,0.67,30,19
6718_20,20,25,"if (AmazModApplication.isWatchConnected() || (EventBus.getDefault().getStickyEvent(IsWatchConnectedLocal.class) == null)) {
AmazModApplication.setWatchConnected(false);
EventBus.getDefault().removeAllStickyEvents();
EventBus.getDefault().postSticky(new IsWatchConnectedLocal(AmazModApplication.isWatchConnected()));
persistentNotification.updatePersistentNotification(AmazModApplication.isWatchConnected());
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,0,0,4,3,1,0,3,0.69,33,21
6718_21,21,21,AmazModApplication.setWatchConnected(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,3,0.75,37,24
6718_22,22,22,EventBus.getDefault().removeAllStickyEvents();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,0,0.36,36,23
6718_23,23,23,EventBus.getDefault().postSticky(new IsWatchConnectedLocal(AmazModApplication.isWatchConnected()));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,2,0.61,35,22
6718_24,24,24,persistentNotification.updatePersistentNotification(AmazModApplication.isWatchConnected());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,2,0.56,34,21
6718_26,26,26,"Logger.warn(""Bluetooth is not enabled"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.38,32,20
6718_27,27,27,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.11,31,19
6718_30,30,30,DataBundle dataBundle = new DataBundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,1,0,0,0.26,28,18
6718_31,31,32,"if (transportable != null)
transportable.toDataBundle(dataBundle);",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,1,4,3,1,0,0,0.29,26,16
6718_32,32,32,transportable.toDataBundle(dataBundle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,1,0,0,0.3,26,16
6718_34,34,34,"Logger.debug(""Send action: {}"", action);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,1,0,0,0.36,24,15
6718_35,35,35,"transporter.send(action, dataBundle, new Transporter.DataSendResultCallback() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.31,23,14
6718_36,36,37,"@Override
public void onResultBack(DataTransportResult dataTransportResult) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,1,0,0,0.32,21,13
6718_38,38,38,"Logger.info(""Send result: {}"", dataTransportResult.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,1,0,0,0.37,20,12
6718_40,40,40,switch (dataTransportResult.getResultCode()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,1,0,0,0.33,18,11
6718_41,41,44,"case (DataTransportResult.RESULT_FAILED_TRANSPORT_SERVICE_UNCONNECTED):
case (DataTransportResult.RESULT_FAILED_CHANNEL_UNAVAILABLE):
case (DataTransportResult.RESULT_FAILED_IWDS_CRASH):
case (DataTransportResult.RESULT_FAILED_LINK_DISCONNECTED): {",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,4,3,1,0,0,0.43,14,10
6718_45,45,45,TaskCompletionSource<Object> taskCompletionSourcePendingResult = (TaskCompletionSource<Object>) pendingResults.get(action);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.35,13,9
6718_46,46,49,"if (taskCompletionSourcePendingResult != null) {
taskCompletionSourcePendingResult.setException(new RuntimeException(""TransporterError: "" + dataTransportResult.toString()));
pendingResults.remove(action);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,4,3,1,0,1,0.45,9,6
6718_47,47,47,"taskCompletionSourcePendingResult.setException(new RuntimeException(""TransporterError: "" + dataTransportResult.toString()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.46,11,7
6718_48,48,48,pendingResults.remove(action);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.29,10,6
6718_51,51,52,"if (waiter != null)
waiter.setException(new RuntimeException(""TransporterError: "" + dataTransportResult.toString()));",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,0,4,3,1,0,1,0.44,6,4
6718_52,52,52,"waiter.setException(new RuntimeException(""TransporterError: "" + dataTransportResult.toString()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.45,6,4
6718_53,53,53,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,1,0,0,0.38,5,3
6718_55,55,55,case (DataTransportResult.RESULT_OK): {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.35,3,2
6718_56,56,57,"if (waiter != null)
waiter.setResult(null);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,1,4,3,1,0,1,0.43,1,0
6718_57,57,57,waiter.setResult(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,1,0,1,0.47,1,0
6718_59,59,64,"if (EventBus.getDefault().getStickyEvent(IsWatchConnectedLocal.class) == null) {
AmazModApplication.setWatchConnected(true);
EventBus.getDefault().removeAllStickyEvents();
EventBus.getDefault().postSticky(new IsWatchConnectedLocal(true));
persistentNotification.updatePersistentNotification(true);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,1,1,4,3,1,0,3,0.65,0,0
6718_60,60,60,AmazModApplication.setWatchConnected(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,3,0.76,1,0
6718_61,61,61,EventBus.getDefault().removeAllStickyEvents();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,0,0.36,2,1
6718_62,62,62,EventBus.getDefault().postSticky(new IsWatchConnectedLocal(true));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,2,0.57,3,2
6718_63,63,63,persistentNotification.updatePersistentNotification(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.29,4,3
6718_66,66,66,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,4,3,1,0,0,0.38,7,5
6718_68,68,69,"default:
Logger.warn(""Send status result is an unknown getResultCode: {}"", dataTransportResult.getResultCode());",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,1,0,1,0.47,9,6
6719_1,1,1,    private Object dataToClass(TransportDataItem transportDataItem) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.43,3,1
6719_2,2,2,String action = transportDataItem.getAction();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,3,1,0,2,0.6,2,0
6719_5,5,5,Class messageClass = messages.get(action);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,3,1,0,3,0.76,0,0
6719_6,6,6,Class[] args = {DataBundle.class};,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,5,3,1,0,1,0.58,1,0
6719_8,8,9,"if (messageClass == null)
messageClass = OtherData.class;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,5,3,1,0,1,0.51,3,2
6719_9,9,9,messageClass = OtherData.class;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,1,0,1,0.53,4,2
6719_11,11,24,"try {
Constructor eventConstructor = messageClass.getDeclaredConstructor(args);
Object event = eventConstructor.newInstance(transportDataItem.getData());
Logger.debug(""Watch data to class: {} -> {}"", action, event.toString());

return event;
} catch (NoSuchMethodException e) {
Logger.debug(""Transport event mapped with action \""{}\"" doesn't have constructor with DataBundle as parameter"", action);
e.printStackTrace();
return null;
} catch (IllegalAccessException | InstantiationException | InvocationTargetException e) {
e.printStackTrace();
return null;
}",0,0,0,0,1,0,0,0,0,11,2,14,0,0,1,0,5,3,1,0,3,0.63,6,4
6719_12,12,12,Constructor eventConstructor = messageClass.getDeclaredConstructor(args);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,2,0.63,7,4
6719_13,13,13,Object event = eventConstructor.newInstance(transportDataItem.getData());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,1,0.46,8,5
6719_14,14,14,"Logger.debug(""Watch data to class: {} -> {}"", action, event.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,3,1,0,2,0.61,9,6
6719_16,16,16,return event;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,3,1,0,0,0.36,11,8
6719_17,17,17,} catch (NoSuchMethodException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.44,12,8
6719_18,18,18,"Logger.debug(""Transport event mapped with action \""{}\"" doesn't have constructor with DataBundle as parameter"", action);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.53,13,9
6719_19,19,19,e.printStackTrace();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.4,14,10
6719_20,20,20,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.31,15,11
6719_21,21,21,} catch (IllegalAccessException | InstantiationException | InvocationTargetException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.42,16,12
6719_22,22,22,e.printStackTrace();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.4,17,13
6719_23,23,23,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.31,18,14
6720_1,1,1,    private Object dataToClass(TransportDataItem transportDataItem) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.63,6,3
6720_2,2,2,String action = transportDataItem.getAction();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,1,0,1,0.41,5,2
6720_5,5,5,Class messageClass = messages.get(action);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,3,1,0,1,0.49,2,1
6720_6,6,6,Class[] args = {DataBundle.class};,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,4,3,1,0,2,0.71,1,0
6720_8,8,9,"if (messageClass == null)
messageClass = OtherData.class;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,4,3,1,0,2,0.68,0,0
6720_9,9,9,messageClass = OtherData.class;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,1,0,2,0.74,1,0
6720_11,11,24,"try {
Constructor eventConstructor = messageClass.getDeclaredConstructor(args);
Object event = eventConstructor.newInstance(transportDataItem.getData());
Logger.debug(""Watch data to class: {} -> {}"", action, event.toString());

return event;
} catch (NoSuchMethodException e) {
Logger.debug(""Transport event mapped with action \""{}\"" doesn't have constructor with DataBundle as parameter"", action);
e.printStackTrace();
return null;
} catch (IllegalAccessException | InstantiationException | InvocationTargetException e) {
e.printStackTrace();
return null;
}",0,0,0,0,1,0,0,0,0,11,2,14,0,0,1,0,4,3,1,0,2,0.58,3,2
6720_12,12,12,Constructor eventConstructor = messageClass.getDeclaredConstructor(args);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.49,4,2
6720_13,13,13,Object event = eventConstructor.newInstance(transportDataItem.getData());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.48,5,3
6720_14,14,14,"Logger.debug(""Watch data to class: {} -> {}"", action, event.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,1,0,2,0.6,6,4
6720_16,16,16,return event;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,1,0,0,0.24,8,6
6720_17,17,17,} catch (NoSuchMethodException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.34,9,6
6720_18,18,18,"Logger.debug(""Transport event mapped with action \""{}\"" doesn't have constructor with DataBundle as parameter"", action);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.48,10,7
6720_19,19,19,e.printStackTrace();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.32,11,8
6720_20,20,20,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.24,12,9
6720_21,21,21,} catch (IllegalAccessException | InstantiationException | InvocationTargetException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.43,13,10
6720_22,22,22,e.printStackTrace();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.32,14,11
6720_23,23,23,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.24,15,12
6721_1,1,1,public static void startInternetCompanion(Context context) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.38,8,7
6721_2,2,2,"Logger.trace(""start"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.45,7,6
6721_3,3,3,"transporter = Transporter.get(context, Transport.NAME_INTERNET);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.31,6,5
6721_4,4,4,internetListener = new Transporter.DataListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.29,5,4
6721_5,5,6,"@Override
public void onDataReceived(TransportDataItem item) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,4,3,0,0,0.41,3,3
6721_7,7,7,"Logger.debug(""AmazfitInternetCompanion onDataReceived"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.44,2,2
6721_8,8,47,"if (Transport.HTTP_REQUEST.equals(item.getAction())) {
if (""Huami"".equals(Build.BRAND)) return;
transporter.send(Transport.HTTP_PINGBACK, item.getData());
DataBundle dataBundle = item.getData();
try {
HttpURLConnection httpURLConnection = (HttpURLConnection) new URL(dataBundle.getString(""url"")).openConnection();
httpURLConnection.setInstanceFollowRedirects(dataBundle.getBoolean(""followRedirects""));
httpURLConnection.setRequestMethod(dataBundle.getString(""requestMethod""));
httpURLConnection.setUseCaches(dataBundle.getBoolean(""useCaches""));
httpURLConnection.setDoInput(dataBundle.getBoolean(""doInput""));
httpURLConnection.setDoOutput(dataBundle.getBoolean(""doOutput""));
try {
JSONArray headers = new JSONArray(dataBundle.getString(""requestHeaders""));
for (int x = 0; x < headers.length(); x++) {
JSONObject header = headers.getJSONObject(x);
httpURLConnection.setRequestProperty(header.getString(""key""), header.getString(""value""));
}
} catch (JSONException e) {
Logger.error(e, ""exception: {}"", e.getMessage());
}
httpURLConnection.connect();
if (httpURLConnection.getInputStream() != null) {
byte[] inputStream = IOUtils.toByteArray(httpURLConnection.getInputStream());
if (inputStream != null)
dataBundle.putByteArray(""inputStream"", inputStream);
}
if (httpURLConnection.getErrorStream() != null) {
byte[] errorStream = IOUtils.toByteArray(httpURLConnection.getErrorStream());
if (errorStream != null)
dataBundle.putByteArray(""errorStream"", errorStream);
}
dataBundle.putString(""responseMessage"", httpURLConnection.getResponseMessage());
dataBundle.putInt(""responseCode"", httpURLConnection.getResponseCode());
dataBundle.putString(""responseHeaders"", mapToJSON(httpURLConnection.getHeaderFields()).toString());
transporter.send(Transport.HTTP_RESULT, dataBundle);
httpURLConnection.disconnect();
} catch (IOException e) {
Logger.error(e, ""exception: {}"", e.getMessage());
}
}",1,0,0,0,0,0,0,0,0,33,4,40,0,0,0,0,7,4,3,0,2,0.45,0,0
6721_9,9,9,"if (""Huami"".equals(Build.BRAND)) return;",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.27,0,0
6721_10,10,10,"transporter.send(Transport.HTTP_PINGBACK, item.getData());",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,4,3,0,2,0.45,0,0
6721_11,11,11,DataBundle dataBundle = item.getData();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,7,4,3,0,0,0.32,1,0
6721_12,12,46,"try {
HttpURLConnection httpURLConnection = (HttpURLConnection) new URL(dataBundle.getString(""url"")).openConnection();
httpURLConnection.setInstanceFollowRedirects(dataBundle.getBoolean(""followRedirects""));
httpURLConnection.setRequestMethod(dataBundle.getString(""requestMethod""));
httpURLConnection.setUseCaches(dataBundle.getBoolean(""useCaches""));
httpURLConnection.setDoInput(dataBundle.getBoolean(""doInput""));
httpURLConnection.setDoOutput(dataBundle.getBoolean(""doOutput""));
try {
JSONArray headers = new JSONArray(dataBundle.getString(""requestHeaders""));
for (int x = 0; x < headers.length(); x++) {
JSONObject header = headers.getJSONObject(x);
httpURLConnection.setRequestProperty(header.getString(""key""), header.getString(""value""));
}
} catch (JSONException e) {
Logger.error(e, ""exception: {}"", e.getMessage());
}
httpURLConnection.connect();
if (httpURLConnection.getInputStream() != null) {
byte[] inputStream = IOUtils.toByteArray(httpURLConnection.getInputStream());
if (inputStream != null)
dataBundle.putByteArray(""inputStream"", inputStream);
}
if (httpURLConnection.getErrorStream() != null) {
byte[] errorStream = IOUtils.toByteArray(httpURLConnection.getErrorStream());
if (errorStream != null)
dataBundle.putByteArray(""errorStream"", errorStream);
}
dataBundle.putString(""responseMessage"", httpURLConnection.getResponseMessage());
dataBundle.putInt(""responseCode"", httpURLConnection.getResponseCode());
dataBundle.putString(""responseHeaders"", mapToJSON(httpURLConnection.getHeaderFields()).toString());
transporter.send(Transport.HTTP_RESULT, dataBundle);
httpURLConnection.disconnect();
} catch (IOException e) {
Logger.error(e, ""exception: {}"", e.getMessage());
}",0,0,0,0,1,0,0,0,0,29,3,35,0,1,0,0,7,4,3,0,1,0.44,2,1
6721_13,13,13,"HttpURLConnection httpURLConnection = (HttpURLConnection) new URL(dataBundle.getString(""url"")).openConnection();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.33,3,2
6721_14,14,14,"httpURLConnection.setInstanceFollowRedirects(dataBundle.getBoolean(""followRedirects""));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.37,4,3
6721_15,15,15,"httpURLConnection.setRequestMethod(dataBundle.getString(""requestMethod""));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.33,5,4
6721_16,16,16,"httpURLConnection.setUseCaches(dataBundle.getBoolean(""useCaches""));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,4,3,0,0,0.33,6,5
6721_17,17,17,"httpURLConnection.setDoInput(dataBundle.getBoolean(""doInput""));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,4,3,0,0,0.33,7,6
6721_18,18,18,"httpURLConnection.setDoOutput(dataBundle.getBoolean(""doOutput""));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,4,3,0,0,0.31,8,7
6721_19,19,27,"try {
JSONArray headers = new JSONArray(dataBundle.getString(""requestHeaders""));
for (int x = 0; x < headers.length(); x++) {
JSONObject header = headers.getJSONObject(x);
httpURLConnection.setRequestProperty(header.getString(""key""), header.getString(""value""));
}
} catch (JSONException e) {
Logger.error(e, ""exception: {}"", e.getMessage());
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,0,7,4,3,0,0,0.39,9,8
6721_20,20,20,"JSONArray headers = new JSONArray(dataBundle.getString(""requestHeaders""));",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,7,4,3,0,0,0.3,10,9
6721_21,21,24,"for (int x = 0; x < headers.length(); x++) {
JSONObject header = headers.getJSONObject(x);
httpURLConnection.setRequestProperty(header.getString(""key""), header.getString(""value""));
}",0,0,1,0,0,0,0,0,0,2,1,4,1,1,0,0,7,4,3,0,0,0.31,11,10
6721_22,22,22,JSONObject header = headers.getJSONObject(x);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.29,12,11
6721_23,23,23,"httpURLConnection.setRequestProperty(header.getString(""key""), header.getString(""value""));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.31,13,12
6721_25,25,25,} catch (JSONException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.38,15,14
6721_26,26,26,"Logger.error(e, ""exception: {}"", e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.43,16,14
6721_28,28,28,httpURLConnection.connect();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.32,18,16
6721_29,29,33,"if (httpURLConnection.getInputStream() != null) {
byte[] inputStream = IOUtils.toByteArray(httpURLConnection.getInputStream());
if (inputStream != null)
dataBundle.putByteArray(""inputStream"", inputStream);
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,0,7,4,3,0,0,0.36,19,16
6721_30,30,30,byte[] inputStream = IOUtils.toByteArray(httpURLConnection.getInputStream());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.35,20,17
6721_31,31,32,"if (inputStream != null)
dataBundle.putByteArray(""inputStream"", inputStream);",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,7,4,3,0,0,0.29,21,18
6721_32,32,32,"dataBundle.putByteArray(""inputStream"", inputStream);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.3,22,19
6721_34,34,38,"if (httpURLConnection.getErrorStream() != null) {
byte[] errorStream = IOUtils.toByteArray(httpURLConnection.getErrorStream());
if (errorStream != null)
dataBundle.putByteArray(""errorStream"", errorStream);
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,0,7,4,3,0,0,0.37,24,21
6721_35,35,35,byte[] errorStream = IOUtils.toByteArray(httpURLConnection.getErrorStream());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.36,25,21
6721_36,36,37,"if (errorStream != null)
dataBundle.putByteArray(""errorStream"", errorStream);",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,7,4,3,0,0,0.32,26,22
6721_37,37,37,"dataBundle.putByteArray(""errorStream"", errorStream);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.32,27,23
6721_39,39,39,"dataBundle.putString(""responseMessage"", httpURLConnection.getResponseMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.41,29,25
6721_40,40,40,"dataBundle.putInt(""responseCode"", httpURLConnection.getResponseCode());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.37,30,25
6721_41,41,41,"dataBundle.putString(""responseHeaders"", mapToJSON(httpURLConnection.getHeaderFields()).toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,3,0,0,0.37,31,26
6721_42,42,42,"transporter.send(Transport.HTTP_RESULT, dataBundle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,3,0,1,0.47,32,27
6721_43,43,43,httpURLConnection.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.35,33,28
6721_44,44,44,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.41,34,29
6721_45,45,45,"Logger.error(e, ""exception: {}"", e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.43,35,30
6721_50,50,50,transporter.addDataListener(internetListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.28,40,32
6721_51,51,51,transporter.connectTransportService();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,3,0,0,0.35,41,32
6722_1,1,1,public static void startInternetCompanion(Context context) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.3,9,8
6722_2,2,2,"Logger.trace(""start"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.32,8,7
6722_3,3,3,"transporter = Transporter.get(context, Transport.NAME_INTERNET);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.5,7,6
6722_4,4,4,internetListener = new Transporter.DataListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.5,6,5
6722_5,5,6,"@Override
public void onDataReceived(TransportDataItem item) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,1,0,1,0.52,4,4
6722_7,7,7,"Logger.debug(""AmazfitInternetCompanion onDataReceived"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.59,3,3
6722_8,8,47,"if (Transport.HTTP_REQUEST.equals(item.getAction())) {
if (""Huami"".equals(Build.BRAND)) return;
transporter.send(Transport.HTTP_PINGBACK, item.getData());
DataBundle dataBundle = item.getData();
try {
HttpURLConnection httpURLConnection = (HttpURLConnection) new URL(dataBundle.getString(""url"")).openConnection();
httpURLConnection.setInstanceFollowRedirects(dataBundle.getBoolean(""followRedirects""));
httpURLConnection.setRequestMethod(dataBundle.getString(""requestMethod""));
httpURLConnection.setUseCaches(dataBundle.getBoolean(""useCaches""));
httpURLConnection.setDoInput(dataBundle.getBoolean(""doInput""));
httpURLConnection.setDoOutput(dataBundle.getBoolean(""doOutput""));
try {
JSONArray headers = new JSONArray(dataBundle.getString(""requestHeaders""));
for (int x = 0; x < headers.length(); x++) {
JSONObject header = headers.getJSONObject(x);
httpURLConnection.setRequestProperty(header.getString(""key""), header.getString(""value""));
}
} catch (JSONException e) {
Logger.error(e, ""exception: {}"", e.getMessage());
}
httpURLConnection.connect();
if (httpURLConnection.getInputStream() != null) {
byte[] inputStream = IOUtils.toByteArray(httpURLConnection.getInputStream());
if (inputStream != null)
dataBundle.putByteArray(""inputStream"", inputStream);
}
if (httpURLConnection.getErrorStream() != null) {
byte[] errorStream = IOUtils.toByteArray(httpURLConnection.getErrorStream());
if (errorStream != null)
dataBundle.putByteArray(""errorStream"", errorStream);
}
dataBundle.putString(""responseMessage"", httpURLConnection.getResponseMessage());
dataBundle.putInt(""responseCode"", httpURLConnection.getResponseCode());
dataBundle.putString(""responseHeaders"", mapToJSON(httpURLConnection.getHeaderFields()).toString());
transporter.send(Transport.HTTP_RESULT, dataBundle);
httpURLConnection.disconnect();
} catch (IOException e) {
Logger.error(e, ""exception: {}"", e.getMessage());
}
}",1,0,0,0,0,0,0,0,0,33,4,40,0,0,0,0,2,1,1,0,2,0.69,0,0
6722_9,9,9,"if (""Huami"".equals(Build.BRAND)) return;",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.17,1,1
6722_10,10,10,"transporter.send(Transport.HTTP_PINGBACK, item.getData());",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,1,1,0,2,0.73,0,0
6722_11,11,11,DataBundle dataBundle = item.getData();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,1,1,0,2,0.86,0,0
6722_12,12,46,"try {
HttpURLConnection httpURLConnection = (HttpURLConnection) new URL(dataBundle.getString(""url"")).openConnection();
httpURLConnection.setInstanceFollowRedirects(dataBundle.getBoolean(""followRedirects""));
httpURLConnection.setRequestMethod(dataBundle.getString(""requestMethod""));
httpURLConnection.setUseCaches(dataBundle.getBoolean(""useCaches""));
httpURLConnection.setDoInput(dataBundle.getBoolean(""doInput""));
httpURLConnection.setDoOutput(dataBundle.getBoolean(""doOutput""));
try {
JSONArray headers = new JSONArray(dataBundle.getString(""requestHeaders""));
for (int x = 0; x < headers.length(); x++) {
JSONObject header = headers.getJSONObject(x);
httpURLConnection.setRequestProperty(header.getString(""key""), header.getString(""value""));
}
} catch (JSONException e) {
Logger.error(e, ""exception: {}"", e.getMessage());
}
httpURLConnection.connect();
if (httpURLConnection.getInputStream() != null) {
byte[] inputStream = IOUtils.toByteArray(httpURLConnection.getInputStream());
if (inputStream != null)
dataBundle.putByteArray(""inputStream"", inputStream);
}
if (httpURLConnection.getErrorStream() != null) {
byte[] errorStream = IOUtils.toByteArray(httpURLConnection.getErrorStream());
if (errorStream != null)
dataBundle.putByteArray(""errorStream"", errorStream);
}
dataBundle.putString(""responseMessage"", httpURLConnection.getResponseMessage());
dataBundle.putInt(""responseCode"", httpURLConnection.getResponseCode());
dataBundle.putString(""responseHeaders"", mapToJSON(httpURLConnection.getHeaderFields()).toString());
transporter.send(Transport.HTTP_RESULT, dataBundle);
httpURLConnection.disconnect();
} catch (IOException e) {
Logger.error(e, ""exception: {}"", e.getMessage());
}",0,0,0,0,1,0,0,0,0,29,3,35,0,1,0,0,2,1,1,0,2,0.69,1,0
6722_13,13,13,"HttpURLConnection httpURLConnection = (HttpURLConnection) new URL(dataBundle.getString(""url"")).openConnection();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,2,0.7,2,1
6722_14,14,14,"httpURLConnection.setInstanceFollowRedirects(dataBundle.getBoolean(""followRedirects""));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,2,0.71,3,2
6722_15,15,15,"httpURLConnection.setRequestMethod(dataBundle.getString(""requestMethod""));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,2,0.72,4,3
6722_16,16,16,"httpURLConnection.setUseCaches(dataBundle.getBoolean(""useCaches""));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,1,1,0,2,0.68,5,4
6722_17,17,17,"httpURLConnection.setDoInput(dataBundle.getBoolean(""doInput""));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,1,1,0,2,0.71,6,5
6722_18,18,18,"httpURLConnection.setDoOutput(dataBundle.getBoolean(""doOutput""));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,1,1,0,2,0.72,7,6
6722_19,19,27,"try {
JSONArray headers = new JSONArray(dataBundle.getString(""requestHeaders""));
for (int x = 0; x < headers.length(); x++) {
JSONObject header = headers.getJSONObject(x);
httpURLConnection.setRequestProperty(header.getString(""key""), header.getString(""value""));
}
} catch (JSONException e) {
Logger.error(e, ""exception: {}"", e.getMessage());
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,0,2,1,1,0,2,0.67,8,7
6722_20,20,20,"JSONArray headers = new JSONArray(dataBundle.getString(""requestHeaders""));",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,1,1,0,2,0.7,9,8
6722_21,21,24,"for (int x = 0; x < headers.length(); x++) {
JSONObject header = headers.getJSONObject(x);
httpURLConnection.setRequestProperty(header.getString(""key""), header.getString(""value""));
}",0,0,1,0,0,0,0,0,0,2,1,4,1,1,0,0,2,1,1,0,1,0.52,10,9
6722_22,22,22,JSONObject header = headers.getJSONObject(x);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.53,11,10
6722_23,23,23,"httpURLConnection.setRequestProperty(header.getString(""key""), header.getString(""value""));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.55,12,11
6722_25,25,25,} catch (JSONException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.25,14,13
6722_26,26,26,"Logger.error(e, ""exception: {}"", e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.48,15,13
6722_28,28,28,httpURLConnection.connect();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.31,17,15
6722_29,29,33,"if (httpURLConnection.getInputStream() != null) {
byte[] inputStream = IOUtils.toByteArray(httpURLConnection.getInputStream());
if (inputStream != null)
dataBundle.putByteArray(""inputStream"", inputStream);
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,0,2,1,1,0,2,0.67,18,15
6722_30,30,30,byte[] inputStream = IOUtils.toByteArray(httpURLConnection.getInputStream());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.5,19,16
6722_31,31,32,"if (inputStream != null)
dataBundle.putByteArray(""inputStream"", inputStream);",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,2,1,1,0,1,0.52,20,17
6722_32,32,32,"dataBundle.putByteArray(""inputStream"", inputStream);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.53,21,18
6722_34,34,38,"if (httpURLConnection.getErrorStream() != null) {
byte[] errorStream = IOUtils.toByteArray(httpURLConnection.getErrorStream());
if (errorStream != null)
dataBundle.putByteArray(""errorStream"", errorStream);
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,0,2,1,1,0,2,0.67,23,20
6722_35,35,35,byte[] errorStream = IOUtils.toByteArray(httpURLConnection.getErrorStream());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.5,24,20
6722_36,36,37,"if (errorStream != null)
dataBundle.putByteArray(""errorStream"", errorStream);",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,2,1,1,0,1,0.52,25,21
6722_37,37,37,"dataBundle.putByteArray(""errorStream"", errorStream);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.54,26,22
6722_39,39,39,"dataBundle.putString(""responseMessage"", httpURLConnection.getResponseMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,2,0.71,28,24
6722_40,40,40,"dataBundle.putInt(""responseCode"", httpURLConnection.getResponseCode());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,2,0.72,29,24
6722_41,41,41,"dataBundle.putString(""responseHeaders"", mapToJSON(httpURLConnection.getHeaderFields()).toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,2,0.71,30,25
6722_42,42,42,"transporter.send(Transport.HTTP_RESULT, dataBundle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.54,31,26
6722_43,43,43,httpURLConnection.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.29,32,27
6722_44,44,44,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.24,33,28
6722_45,45,45,"Logger.error(e, ""exception: {}"", e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.48,34,29
6722_50,50,50,transporter.addDataListener(internetListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.49,39,31
6722_51,51,51,transporter.connectTransportService();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.29,40,31
6723_1,1,1,public static void startInternetCompanion(Context context) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.29,40,35
6723_2,2,2,"Logger.trace(""start"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.26,39,34
6723_3,3,3,"transporter = Transporter.get(context, Transport.NAME_INTERNET);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.21,38,33
6723_4,4,4,internetListener = new Transporter.DataListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.49,37,32
6723_5,5,6,"@Override
public void onDataReceived(TransportDataItem item) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,1,0.55,35,31
6723_7,7,7,"Logger.debug(""AmazfitInternetCompanion onDataReceived"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.52,34,30
6723_8,8,47,"if (Transport.HTTP_REQUEST.equals(item.getAction())) {
if (""Huami"".equals(Build.BRAND)) return;
transporter.send(Transport.HTTP_PINGBACK, item.getData());
DataBundle dataBundle = item.getData();
try {
HttpURLConnection httpURLConnection = (HttpURLConnection) new URL(dataBundle.getString(""url"")).openConnection();
httpURLConnection.setInstanceFollowRedirects(dataBundle.getBoolean(""followRedirects""));
httpURLConnection.setRequestMethod(dataBundle.getString(""requestMethod""));
httpURLConnection.setUseCaches(dataBundle.getBoolean(""useCaches""));
httpURLConnection.setDoInput(dataBundle.getBoolean(""doInput""));
httpURLConnection.setDoOutput(dataBundle.getBoolean(""doOutput""));
try {
JSONArray headers = new JSONArray(dataBundle.getString(""requestHeaders""));
for (int x = 0; x < headers.length(); x++) {
JSONObject header = headers.getJSONObject(x);
httpURLConnection.setRequestProperty(header.getString(""key""), header.getString(""value""));
}
} catch (JSONException e) {
Logger.error(e, ""exception: {}"", e.getMessage());
}
httpURLConnection.connect();
if (httpURLConnection.getInputStream() != null) {
byte[] inputStream = IOUtils.toByteArray(httpURLConnection.getInputStream());
if (inputStream != null)
dataBundle.putByteArray(""inputStream"", inputStream);
}
if (httpURLConnection.getErrorStream() != null) {
byte[] errorStream = IOUtils.toByteArray(httpURLConnection.getErrorStream());
if (errorStream != null)
dataBundle.putByteArray(""errorStream"", errorStream);
}
dataBundle.putString(""responseMessage"", httpURLConnection.getResponseMessage());
dataBundle.putInt(""responseCode"", httpURLConnection.getResponseCode());
dataBundle.putString(""responseHeaders"", mapToJSON(httpURLConnection.getHeaderFields()).toString());
transporter.send(Transport.HTTP_RESULT, dataBundle);
httpURLConnection.disconnect();
} catch (IOException e) {
Logger.error(e, ""exception: {}"", e.getMessage());
}
}",1,0,0,0,0,0,0,0,0,33,4,40,0,0,0,0,2,2,0,0,2,0.64,0,0
6723_9,9,9,"if (""Huami"".equals(Build.BRAND)) return;",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.51,32,28
6723_10,10,10,"transporter.send(Transport.HTTP_PINGBACK, item.getData());",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,2,0,0,1,0.45,31,27
6723_11,11,11,DataBundle dataBundle = item.getData();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,2,0,0,1,0.58,30,26
6723_12,12,46,"try {
HttpURLConnection httpURLConnection = (HttpURLConnection) new URL(dataBundle.getString(""url"")).openConnection();
httpURLConnection.setInstanceFollowRedirects(dataBundle.getBoolean(""followRedirects""));
httpURLConnection.setRequestMethod(dataBundle.getString(""requestMethod""));
httpURLConnection.setUseCaches(dataBundle.getBoolean(""useCaches""));
httpURLConnection.setDoInput(dataBundle.getBoolean(""doInput""));
httpURLConnection.setDoOutput(dataBundle.getBoolean(""doOutput""));
try {
JSONArray headers = new JSONArray(dataBundle.getString(""requestHeaders""));
for (int x = 0; x < headers.length(); x++) {
JSONObject header = headers.getJSONObject(x);
httpURLConnection.setRequestProperty(header.getString(""key""), header.getString(""value""));
}
} catch (JSONException e) {
Logger.error(e, ""exception: {}"", e.getMessage());
}
httpURLConnection.connect();
if (httpURLConnection.getInputStream() != null) {
byte[] inputStream = IOUtils.toByteArray(httpURLConnection.getInputStream());
if (inputStream != null)
dataBundle.putByteArray(""inputStream"", inputStream);
}
if (httpURLConnection.getErrorStream() != null) {
byte[] errorStream = IOUtils.toByteArray(httpURLConnection.getErrorStream());
if (errorStream != null)
dataBundle.putByteArray(""errorStream"", errorStream);
}
dataBundle.putString(""responseMessage"", httpURLConnection.getResponseMessage());
dataBundle.putInt(""responseCode"", httpURLConnection.getResponseCode());
dataBundle.putString(""responseHeaders"", mapToJSON(httpURLConnection.getHeaderFields()).toString());
transporter.send(Transport.HTTP_RESULT, dataBundle);
httpURLConnection.disconnect();
} catch (IOException e) {
Logger.error(e, ""exception: {}"", e.getMessage());
}",0,0,0,0,1,0,0,0,0,29,3,35,0,1,0,0,2,2,0,0,1,0.51,0,0
6723_13,13,13,"HttpURLConnection httpURLConnection = (HttpURLConnection) new URL(dataBundle.getString(""url"")).openConnection();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.44,28,24
6723_14,14,14,"httpURLConnection.setInstanceFollowRedirects(dataBundle.getBoolean(""followRedirects""));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.46,27,23
6723_15,15,15,"httpURLConnection.setRequestMethod(dataBundle.getString(""requestMethod""));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.48,26,22
6723_16,16,16,"httpURLConnection.setUseCaches(dataBundle.getBoolean(""useCaches""));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,1,0.44,25,21
6723_17,17,17,"httpURLConnection.setDoInput(dataBundle.getBoolean(""doInput""));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,1,0.44,24,20
6723_18,18,18,"httpURLConnection.setDoOutput(dataBundle.getBoolean(""doOutput""));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,1,0.46,23,19
6723_19,19,27,"try {
JSONArray headers = new JSONArray(dataBundle.getString(""requestHeaders""));
for (int x = 0; x < headers.length(); x++) {
JSONObject header = headers.getJSONObject(x);
httpURLConnection.setRequestProperty(header.getString(""key""), header.getString(""value""));
}
} catch (JSONException e) {
Logger.error(e, ""exception: {}"", e.getMessage());
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,0,2,2,0,0,1,0.46,14,12
6723_20,20,20,"JSONArray headers = new JSONArray(dataBundle.getString(""requestHeaders""));",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,2,0,0,1,0.48,21,17
6723_21,21,24,"for (int x = 0; x < headers.length(); x++) {
JSONObject header = headers.getJSONObject(x);
httpURLConnection.setRequestProperty(header.getString(""key""), header.getString(""value""));
}",0,0,1,0,0,0,0,0,0,2,1,4,1,1,0,0,2,2,0,0,0,0.3,17,14
6723_22,22,22,JSONObject header = headers.getJSONObject(x);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.29,19,15
6723_23,23,23,"httpURLConnection.setRequestProperty(header.getString(""key""), header.getString(""value""));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.27,18,14
6723_25,25,25,} catch (JSONException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.27,16,13
6723_26,26,26,"Logger.error(e, ""exception: {}"", e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.23,15,12
6723_28,28,28,httpURLConnection.connect();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.2,13,11
6723_29,29,33,"if (httpURLConnection.getInputStream() != null) {
byte[] inputStream = IOUtils.toByteArray(httpURLConnection.getInputStream());
if (inputStream != null)
dataBundle.putByteArray(""inputStream"", inputStream);
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,0,2,2,0,0,1,0.51,8,7
6723_30,30,30,byte[] inputStream = IOUtils.toByteArray(httpURLConnection.getInputStream());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.26,11,9
6723_31,31,32,"if (inputStream != null)
dataBundle.putByteArray(""inputStream"", inputStream);",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,2,2,0,0,1,0.54,9,7
6723_32,32,32,"dataBundle.putByteArray(""inputStream"", inputStream);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.49,9,7
6723_34,34,38,"if (httpURLConnection.getErrorStream() != null) {
byte[] errorStream = IOUtils.toByteArray(httpURLConnection.getErrorStream());
if (errorStream != null)
dataBundle.putByteArray(""errorStream"", errorStream);
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,0,2,2,0,0,1,0.52,3,3
6723_35,35,35,byte[] errorStream = IOUtils.toByteArray(httpURLConnection.getErrorStream());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.27,6,5
6723_36,36,37,"if (errorStream != null)
dataBundle.putByteArray(""errorStream"", errorStream);",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,2,2,0,0,1,0.56,4,3
6723_37,37,37,"dataBundle.putByteArray(""errorStream"", errorStream);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.5,4,3
6723_39,39,39,"dataBundle.putString(""responseMessage"", httpURLConnection.getResponseMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.47,2,2
6723_40,40,40,"dataBundle.putInt(""responseCode"", httpURLConnection.getResponseCode());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.46,1,1
6723_41,41,41,"dataBundle.putString(""responseHeaders"", mapToJSON(httpURLConnection.getHeaderFields()).toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.48,0,0
6723_42,42,42,"transporter.send(Transport.HTTP_RESULT, dataBundle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.45,0,0
6723_43,43,43,httpURLConnection.disconnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.2,1,0
6723_44,44,44,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,2,1
6723_45,45,45,"Logger.error(e, ""exception: {}"", e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.23,3,2
6723_50,50,50,transporter.addDataListener(internetListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.48,8,4
6723_51,51,51,transporter.connectTransportService();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.19,9,4
6724_1,1,2,"@Override
protected void onCreate(@Nullable Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,1,0.49,3,2
6724_3,3,3,super.onCreate(savedInstanceState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,1,0.49,2,1
6724_5,5,5,Intent intent = getIntent();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,2,0.82,0,0
6724_6,6,10,"if (intent.hasExtra(PATH)) {
currentPath = intent.getStringExtra(PATH);
} else {
currentPath = Constants.INITIAL_PATH;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,1,4,2,1,0,2,0.54,0,0
6724_7,7,7,currentPath = intent.getStringExtra(PATH);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.57,1,0
6724_8,8,8,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.12,2,1
6724_9,9,9,currentPath = Constants.INITIAL_PATH;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.26,3,2
6724_12,12,12,"Logger.debug(""currentPath = {} source = {}"", currentPath, intent.getStringExtra(SOURCE));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,2,0.56,6,4
6724_14,14,14,setContentView(R.layout.activity_file_explorer);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.34,8,5
6724_16,16,21,"try {
getSupportActionBar().setDisplayHomeAsUpEnabled(true);
getSupportActionBar().setTitle(R.string.file_explorer);
} catch (NullPointerException ex) {
Logger.error(""onCreate exception: "" + ex.getMessage());
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,1,1,4,2,1,0,2,0.6,10,6
6724_17,17,17,getSupportActionBar().setDisplayHomeAsUpEnabled(true);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,1,0.47,11,6
6724_18,18,18,getSupportActionBar().setTitle(R.string.file_explorer);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,1,0.47,12,7
6724_19,19,19,} catch (NullPointerException ex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.43,13,8
6724_20,20,20,"Logger.error(""onCreate exception: "" + ex.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.69,14,9
6724_23,23,23,ButterKnife.bind(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.3,17,11
6724_25,25,25,"fileExplorerAdapter = new FileExplorerAdapter(this, R.layout.row_file_explorer, new ArrayList<>());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.39,19,12
6724_26,26,26,listView.setAdapter(fileExplorerAdapter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.34,20,12
6724_28,28,28,loadPath(currentPath);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.24,22,14
6724_30,30,30,registerForContextMenu(listView);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.37,24,15
6724_32,32,32,snackProgressBarManager = new SnackProgressBarManager(findViewById(android.R.id.content)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.38,26,16
6724_33,33,33,.setProgressBarColor(ThemeHelper.getThemeColorAccentId(this)),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,1,0.48,27,16
6724_34,34,34,.setActionTextColor(ThemeHelper.getThemeColorAccentId(this)),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,1,0.48,28,17
6724_35,35,35,.setBackgroundColor(SnackProgressBarManager.BACKGROUND_COLOR_DEFAULT),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.32,29,18
6724_36,36,36,.setTextSize(14),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.22,30,19
6724_37,37,37,.setMessageMaxLines(4),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.32,31,20
6724_38,38,38,.setOnDisplayListener(new SnackProgressBarManager.OnDisplayListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.4,32,21
6724_39,39,40,"@Override
public void onShown(@NonNull SnackProgressBar snackProgressBar, int onDisplayId) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,0,0.34,33,22
6724_43,43,44,"@Override
public void onDismissed(@NonNull SnackProgressBar snackProgressBar, int onDisplayId) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,2,1,0,0,0.37,37,24
6724_48,48,48,listView.setOnScrollListener(new AbsListView.OnScrollListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.35,42,25
6724_49,49,49,private int lastFirstVisibleItem = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.25,43,25
6724_51,51,52,"@Override
public void onScrollStateChanged(AbsListView view, int scrollState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,2,1,0,0,0.34,45,27
6724_56,56,58,"@Override
public void onScroll(AbsListView view, int firstVisibleItem,
int visibleItemCount, int totalItemCount) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,4,2,1,0,0,0.34,50,28
6724_60,60,61,"int topRowVerticalPosition = (listView == null || listView.getChildCount() == 0) ?
0 : listView.getChildAt(0).getTop();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,4,2,1,0,1,0.43,54,29
6724_62,62,62,swipeRefreshLayout.setEnabled((topRowVerticalPosition >= 0));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.32,56,30
6724_64,64,66,"if (lastFirstVisibleItem < firstVisibleItem) {
fabMain.hide();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,4,2,1,0,0,0.22,58,31
6724_65,65,65,fabMain.hide();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.24,59,31
6724_67,67,69,"if (lastFirstVisibleItem > firstVisibleItem) {
fabMain.show();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,2,1,0,0,0.24,61,33
6724_68,68,68,fabMain.show();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.28,62,33
6724_70,70,70,lastFirstVisibleItem = firstVisibleItem;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.2,64,35
6724_75,75,75,swipeRefreshLayout.setColorSchemeColors(ThemeHelper.getThemeColorAccent(this));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,1,0.48,69,36
6724_77,77,77,swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.38,71,37
6724_78,78,79,"@Override
public void onRefresh() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,0,0.37,72,37
6724_80,80,80,"Logger.debug(""onRefresh"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.41,74,39
6724_81,81,81,loadPath(currentPath);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.24,75,39
6724_85,85,85,ftpTransporterConnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.34,79,41
6725_1,1,2,"@Override
protected void onCreate(@Nullable Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.38,82,43
6725_3,3,3,super.onCreate(savedInstanceState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.31,81,42
6725_5,5,5,Intent intent = getIntent();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.27,79,41
6725_6,6,10,"if (intent.hasExtra(PATH)) {
currentPath = intent.getStringExtra(PATH);
} else {
currentPath = Constants.INITIAL_PATH;
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,1,4,4,0,0,0,0.3,74,37
6725_7,7,7,currentPath = intent.getStringExtra(PATH);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.3,77,39
6725_8,8,8,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.22,76,38
6725_9,9,9,currentPath = Constants.INITIAL_PATH;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.26,75,37
6725_12,12,12,"Logger.debug(""currentPath = {} source = {}"", currentPath, intent.getStringExtra(SOURCE));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.33,72,36
6725_14,14,14,setContentView(R.layout.activity_file_explorer);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.34,70,35
6725_16,16,21,"try {
getSupportActionBar().setDisplayHomeAsUpEnabled(true);
getSupportActionBar().setTitle(R.string.file_explorer);
} catch (NullPointerException ex) {
Logger.error(""onCreate exception: "" + ex.getMessage());
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,1,1,4,4,0,0,0,0.39,63,30
6725_17,17,17,getSupportActionBar().setDisplayHomeAsUpEnabled(true);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.34,67,33
6725_18,18,18,getSupportActionBar().setTitle(R.string.file_explorer);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.38,66,32
6725_19,19,19,} catch (NullPointerException ex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.37,65,31
6725_20,20,20,"Logger.error(""onCreate exception: "" + ex.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.41,64,30
6725_23,23,23,ButterKnife.bind(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.38,61,29
6725_25,25,25,"fileExplorerAdapter = new FileExplorerAdapter(this, R.layout.row_file_explorer, new ArrayList<>());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.35,59,28
6725_26,26,26,listView.setAdapter(fileExplorerAdapter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.35,58,27
6725_28,28,28,loadPath(currentPath);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.27,56,26
6725_30,30,30,registerForContextMenu(listView);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.36,54,25
6725_32,32,32,snackProgressBarManager = new SnackProgressBarManager(findViewById(android.R.id.content)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.36,52,24
6725_33,33,33,.setProgressBarColor(ThemeHelper.getThemeColorAccentId(this)),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.38,51,23
6725_34,34,34,.setActionTextColor(ThemeHelper.getThemeColorAccentId(this)),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.34,50,22
6725_35,35,35,.setBackgroundColor(SnackProgressBarManager.BACKGROUND_COLOR_DEFAULT),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.36,49,21
6725_36,36,36,.setTextSize(14),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.24,48,20
6725_37,37,37,.setMessageMaxLines(4),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.33,47,19
6725_38,38,38,.setOnDisplayListener(new SnackProgressBarManager.OnDisplayListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.36,46,18
6725_39,39,40,"@Override
public void onShown(@NonNull SnackProgressBar snackProgressBar, int onDisplayId) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.38,44,17
6725_43,43,44,"@Override
public void onDismissed(@NonNull SnackProgressBar snackProgressBar, int onDisplayId) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,4,0,0,0,0.39,40,16
6725_48,48,48,listView.setOnScrollListener(new AbsListView.OnScrollListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.28,36,15
6725_49,49,49,private int lastFirstVisibleItem = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.27,35,14
6725_51,51,52,"@Override
public void onScrollStateChanged(AbsListView view, int scrollState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,4,0,0,0,0.34,32,13
6725_56,56,58,"@Override
public void onScroll(AbsListView view, int firstVisibleItem,
int visibleItemCount, int totalItemCount) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,4,4,0,0,0,0.34,26,12
6725_60,60,61,"int topRowVerticalPosition = (listView == null || listView.getChildCount() == 0) ?
0 : listView.getChildAt(0).getTop();",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,4,4,0,0,0,0.34,23,11
6725_62,62,62,swipeRefreshLayout.setEnabled((topRowVerticalPosition >= 0));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,4,0,0,0,0.33,22,10
6725_64,64,66,"if (lastFirstVisibleItem < firstVisibleItem) {
fabMain.hide();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,4,4,0,0,0,0.32,18,8
6725_65,65,65,fabMain.hide();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.41,19,8
6725_67,67,69,"if (lastFirstVisibleItem > firstVisibleItem) {
fabMain.show();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,4,0,0,0,0.35,15,6
6725_68,68,68,fabMain.show();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.47,16,6
6725_70,70,70,lastFirstVisibleItem = firstVisibleItem;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,4,0,0,0,0.21,14,5
6725_75,75,75,swipeRefreshLayout.setColorSchemeColors(ThemeHelper.getThemeColorAccent(this));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,4,0,0,0,0.36,9,4
6725_77,77,77,swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.35,7,3
6725_78,78,79,"@Override
public void onRefresh() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.37,5,2
6725_80,80,80,"Logger.debug(""onRefresh"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.34,4,1
6725_81,81,81,loadPath(currentPath);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.27,3,0
6725_85,85,85,ftpTransporterConnect();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,3,0.89,0,0
6727_1,1,1,"private void uploadFTPFiles(final ArrayList<File> files, final String uploadPath) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.53,34,23
6727_2,2,2,wifiManualEnabled = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.34,33,22
6727_3,3,3,mWifiManager = (WifiManager) getApplicationContext().getSystemService(Context.WIFI_SERVICE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.33,32,21
6727_4,4,10,"if (mWifiManager == null) {
updateSnackBarOnUIthreat(getString(R.string.error), SnackProgressBarManager.LENGTH_LONG, SnackProgressBar.TYPE_HORIZONTAL);
return;
} else if (!mWifiManager.isWifiEnabled()) {
updateSnackBarOnUIthreat(getString(R.string.turn_on_wifi), SnackProgressBarManager.LENGTH_LONG, SnackProgressBar.TYPE_HORIZONTAL);
return;
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,0,1,4,3,1,0,0,0.39,25,15
6727_5,5,5,"updateSnackBarOnUIthreat(getString(R.string.error), SnackProgressBarManager.LENGTH_LONG, SnackProgressBar.TYPE_HORIZONTAL);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.36,30,19
6727_6,6,6,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.22,29,18
6727_7,7,7,} else if (!mWifiManager.isWifiEnabled()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.35,28,17
6727_8,8,8,"updateSnackBarOnUIthreat(getString(R.string.turn_on_wifi), SnackProgressBarManager.LENGTH_LONG, SnackProgressBar.TYPE_HORIZONTAL);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.39,27,16
6727_9,9,9,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.22,26,15
6727_12,12,15,"if (!(files.size() > 0)) {
transferring = false;
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,4,3,1,0,1,0.45,20,12
6727_13,13,13,transferring = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.31,22,13
6727_14,14,14,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.22,21,12
6727_17,17,17,transferring = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,1,0,0,0.32,18,11
6727_18,18,18,FTP_files = files;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.65,17,10
6727_19,19,19,FTP_file = files.get(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,1,0,1,0.53,16,9
6727_21,21,24,"if (!FTP_file.exists()) {
fileNotExists();
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,4,3,1,0,1,0.52,11,6
6727_22,22,22,fileNotExists();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.54,13,7
6727_23,23,23,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.22,12,6
6727_25,25,28,"if (FTP_file.isDirectory()) {
fileIsDirectory();
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,4,3,1,0,1,0.52,7,3
6727_26,26,26,fileIsDirectory();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.55,9,4
6727_27,27,27,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.22,8,3
6727_30,30,30,"FTP_destPath = uploadPath + ""/"";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,1,0,0,0.41,5,2
6727_32,32,32,"createNotification(getString(R.string.watch_connecting) + "", "" + getString(R.string.wait), ""\"""" + FTP_file.getName() + ""\"""", R.drawable.ic_wifi_tethering_white_24dp, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,1,0,1,0.47,3,1
6727_34,34,34,"updateSnackBarOnUIthreat(getString(R.string.watch_connecting), SnackProgressBarManager.LENGTH_LONG, SnackProgressBar.TYPE_CIRCULAR);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,1,0,0,0.4,1,0
6727_36,36,36,getTransferringMethod();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,1,0,0,0.27,0,0
6727_37,37,37,"updateSnackBarOnUIthreat(getString(R.string.wifi_transfer_method), SnackProgressBarManager.LENGTH_LONG, SnackProgressBar.TYPE_CIRCULAR);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,1,0,0,0.39,1,0
6752_1,1,1,    private void chooseCalendars() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.52,7,3
6752_2,2,3,"Map<String, List<CalendarInfo>> calendarsInfo =
WatchfaceReceiver.getCalendarsInfo(this);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,5,2,1,0,1,0.5,5,2
6752_5,5,5,List<CheckableAdapter.Item> items = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,2,1,0,0,0.38,3,1
6752_6,6,7,"final Set<String> selectedCalendarIds = Prefs.getStringSet(
Constants.PREF_WATCHFACE_CALENDARS_IDS, new HashSet<>());",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,5,2,1,0,3,0.7,1,0
6752_9,9,9,boolean selectAll = selectedCalendarIds.isEmpty();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,2,1,0,2,0.66,0,0
6752_11,11,36,"for (Map.Entry<String, List<CalendarInfo>> entry : calendarsInfo.entrySet()) {
items.add(new CheckableAdapter.Item(entry.getKey(),
getResources().getColor(R.color.calendar_chooser_account, getTheme())));
for (final CalendarInfo info : entry.getValue()) {
if (selectAll) {
selectedCalendarIds.add(info.id());
}

items.add(new CheckableAdapter.CheckableItem(info.name(), info.color()) {

@Override
public void setChecked(boolean checked) {
if (checked) {
selectedCalendarIds.add(info.id());
} else {
selectedCalendarIds.remove(info.id());
}
}

@Override
public boolean isChecked() {
return selectedCalendarIds.contains(info.id());
}
});
}
}",0,0,0,1,0,0,0,0,0,12,5,26,0,0,1,1,5,2,1,0,3,0.62,2,1
6752_12,12,13,"items.add(new CheckableAdapter.Item(entry.getKey(),
getResources().getColor(R.color.calendar_chooser_account, getTheme())));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,5,2,1,0,1,0.48,3,1
6752_14,14,35,"for (final CalendarInfo info : entry.getValue()) {
if (selectAll) {
selectedCalendarIds.add(info.id());
}

items.add(new CheckableAdapter.CheckableItem(info.name(), info.color()) {

@Override
public void setChecked(boolean checked) {
if (checked) {
selectedCalendarIds.add(info.id());
} else {
selectedCalendarIds.remove(info.id());
}
}

@Override
public boolean isChecked() {
return selectedCalendarIds.contains(info.id());
}
});
}",0,0,0,1,0,0,0,0,0,10,4,22,1,1,0,0,5,2,1,0,3,0.62,5,3
6752_15,15,17,"if (selectAll) {
selectedCalendarIds.add(info.id());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,2,1,0,2,0.61,6,3
6752_16,16,16,selectedCalendarIds.add(info.id());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,2,0.58,7,4
6752_19,19,19,"items.add(new CheckableAdapter.CheckableItem(info.name(), info.color()) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,0,0.37,10,6
6752_21,21,22,"@Override
public void setChecked(boolean checked) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,2,1,0,1,0.44,12,7
6752_23,23,27,"if (checked) {
selectedCalendarIds.add(info.id());
} else {
selectedCalendarIds.remove(info.id());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,5,2,1,0,2,0.55,14,8
6752_24,24,24,selectedCalendarIds.add(info.id());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,2,0.58,15,8
6752_25,25,25,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.27,16,9
6752_26,26,26,selectedCalendarIds.remove(info.id());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,2,0.57,17,10
6752_30,30,31,"@Override
public boolean isChecked() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,2,1,0,0,0.33,21,12
6752_32,32,32,return selectedCalendarIds.contains(info.id());,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,2,1,0,2,0.56,23,13
6752_39,39,39,new AlertDialog.Builder(this),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,0,0.4,30,14
6752_40,40,40,".setAdapter(new CheckableAdapter(items), null)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.48,31,14
6752_41,41,41,.setOnDismissListener(dialog -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.49,32,15
6752_42,42,43,"Prefs.putStringSet(Constants.PREF_WATCHFACE_CALENDARS_IDS,
selectedCalendarIds);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,2,1,0,3,0.69,33,16
6752_44,44,44,showFoundBuildInCalendarEvents();}),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.54,35,18
6752_45,45,45,.create().show();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.4,36,18
6753_1,1,1,    private void chooseCalendars() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,1,0.47,9,4
6753_2,2,3,"Map<String, List<CalendarInfo>> calendarsInfo =
WatchfaceReceiver.getCalendarsInfo(this);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,9,7,0,0,3,0.73,7,3
6753_5,5,5,List<CheckableAdapter.Item> items = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,9,7,0,0,3,0.68,5,2
6753_6,6,7,"final Set<String> selectedCalendarIds = Prefs.getStringSet(
Constants.PREF_WATCHFACE_CALENDARS_IDS, new HashSet<>());",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,9,7,0,0,1,0.44,3,1
6753_9,9,9,boolean selectAll = selectedCalendarIds.isEmpty();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,9,7,0,0,1,0.47,1,0
6753_11,11,36,"for (Map.Entry<String, List<CalendarInfo>> entry : calendarsInfo.entrySet()) {
items.add(new CheckableAdapter.Item(entry.getKey(),
getResources().getColor(R.color.calendar_chooser_account, getTheme())));
for (final CalendarInfo info : entry.getValue()) {
if (selectAll) {
selectedCalendarIds.add(info.id());
}

items.add(new CheckableAdapter.CheckableItem(info.name(), info.color()) {

@Override
public void setChecked(boolean checked) {
if (checked) {
selectedCalendarIds.add(info.id());
} else {
selectedCalendarIds.remove(info.id());
}
}

@Override
public boolean isChecked() {
return selectedCalendarIds.contains(info.id());
}
});
}
}",0,0,0,1,0,0,0,0,0,12,5,26,0,0,1,1,9,7,0,0,5,0.67,0,0
6753_12,12,13,"items.add(new CheckableAdapter.Item(entry.getKey(),
getResources().getColor(R.color.calendar_chooser_account, getTheme())));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,9,7,0,0,3,0.56,1,0
6753_14,14,35,"for (final CalendarInfo info : entry.getValue()) {
if (selectAll) {
selectedCalendarIds.add(info.id());
}

items.add(new CheckableAdapter.CheckableItem(info.name(), info.color()) {

@Override
public void setChecked(boolean checked) {
if (checked) {
selectedCalendarIds.add(info.id());
} else {
selectedCalendarIds.remove(info.id());
}
}

@Override
public boolean isChecked() {
return selectedCalendarIds.contains(info.id());
}
});
}",0,0,0,1,0,0,0,0,0,10,4,22,1,1,0,0,9,7,0,0,4,0.62,3,2
6753_15,15,17,"if (selectAll) {
selectedCalendarIds.add(info.id());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,9,7,0,0,2,0.53,4,2
6753_16,16,16,selectedCalendarIds.add(info.id());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,2,0.54,5,3
6753_19,19,19,"items.add(new CheckableAdapter.CheckableItem(info.name(), info.color()) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,7,0,0,3,0.61,8,5
6753_21,21,22,"@Override
public void setChecked(boolean checked) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,9,7,0,0,0,0.32,10,6
6753_23,23,27,"if (checked) {
selectedCalendarIds.add(info.id());
} else {
selectedCalendarIds.remove(info.id());
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,9,7,0,0,2,0.53,12,7
6753_24,24,24,selectedCalendarIds.add(info.id());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,2,0.54,13,7
6753_25,25,25,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.22,14,8
6753_26,26,26,selectedCalendarIds.remove(info.id());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,2,0.55,15,9
6753_30,30,31,"@Override
public boolean isChecked() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,9,7,0,0,0,0.29,19,11
6753_32,32,32,return selectedCalendarIds.contains(info.id());,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,7,0,0,2,0.51,21,12
6753_39,39,39,new AlertDialog.Builder(this),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,7,0,0,0,0.33,28,13
6753_40,40,40,".setAdapter(new CheckableAdapter(items), null)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,2,0.55,29,13
6753_41,41,41,.setOnDismissListener(dialog -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,1,0.49,30,14
6753_42,42,43,"Prefs.putStringSet(Constants.PREF_WATCHFACE_CALENDARS_IDS,
selectedCalendarIds);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,7,0,0,1,0.47,31,15
6753_44,44,44,showFoundBuildInCalendarEvents();}),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,1,0.47,33,17
6753_45,45,45,.create().show();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.36,34,17
757_1,1,1,    public static boolean isDeviceLocked(Context context) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.47,3,1
757_3,3,3,boolean isLocked = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,1,0,1,0.52,1,0
757_5,5,18,"try {
KeyguardManager keyguardManager = (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE);
boolean inKeyguardRestrictedInputMode = keyguardManager != null && keyguardManager.inKeyguardRestrictedInputMode();

if (inKeyguardRestrictedInputMode) {
isLocked = true;

} else {
PowerManager powerManager = (PowerManager) context.getSystemService(Context.POWER_SERVICE);
if (powerManager != null) isLocked = !powerManager.isInteractive();
}
} catch (NullPointerException e) {
Logger.error(""iDeviceLocked exception: "" + e.toString());
}",0,0,0,0,1,0,0,0,0,9,2,14,0,0,1,1,4,2,1,0,1,0.45,0,0
757_6,6,6,KeyguardManager keyguardManager = (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.29,1,0
757_7,7,7,boolean inKeyguardRestrictedInputMode = keyguardManager != null && keyguardManager.inKeyguardRestrictedInputMode();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.29,2,1
757_9,9,15,"if (inKeyguardRestrictedInputMode) {
isLocked = true;

} else {
PowerManager powerManager = (PowerManager) context.getSystemService(Context.POWER_SERVICE);
if (powerManager != null) isLocked = !powerManager.isInteractive();
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,1,0,4,2,1,0,1,0.46,4,3
757_10,10,10,isLocked = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,1,0.51,5,3
757_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.25,7,5
757_13,13,13,PowerManager powerManager = (PowerManager) context.getSystemService(Context.POWER_SERVICE);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.36,8,5
757_14,14,14,if (powerManager != null) isLocked = !powerManager.isInteractive();,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.47,9,6
757_16,16,16,} catch (NullPointerException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.31,11,8
757_17,17,17,"Logger.error(""iDeviceLocked exception: "" + e.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.44,12,8
757_20,20,20,"Logger.info(TAG_LOCAL+""isDeviceLocked: "" + isLocked);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,2,1,0,1,0.48,15,10
757_21,21,21,return isLocked;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.49,16,10
843_1,1,1,    private void loadEmoji() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,2,0.63,0,0
843_2,2,2,EmojiCompat.Config config = new BundledEmojiCompatConfig(getContext());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,2,0,2,0.54,0,0
843_3,3,3,config.setReplaceAll(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,2,0,0,0.34,1,0
843_4,4,4,EmojiCompat.init(config);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,2,0,1,0.47,2,1
6819_1,1,1,private void updateCharge() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.31,11,7
6819_3,3,3,widgetSettings.reload();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,1,0.51,9,6
6819_4,4,4,IntentFilter ifilter = new IntentFilter(Intent.ACTION_BATTERY_CHANGED);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.42,8,5
6819_5,5,5,"Intent batteryStatus = mContext.registerReceiver(null, ifilter);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,4,2,1,0,1,0.41,7,4
6819_7,7,37,"if (batteryStatus != null) {

int level = batteryStatus.getIntExtra(BatteryManager.EXTRA_LEVEL, -1);
int scale = batteryStatus.getIntExtra(BatteryManager.EXTRA_SCALE, -1);
int batteryIconId = batteryStatus.getIntExtra(BatteryManager.EXTRA_ICON_SMALL, 0);

int battery = Math.round((level / (float) scale) * 100f);
String msg;
if (battery != 0) {
String battlvl = battery + ""%"";
msg = battlvl;
widgetSettings.set(Constants.PREF_BATT_LEVEL, battlvl);
} else {
msg = ""N/A%"";
}

LevelListDrawable batteryLevel = (LevelListDrawable) mContext.getResources().getDrawable(batteryIconId);
batteryLevel.setLevel(level);

getHost().runTaskOnUI(AmazModLauncher.this, new Runnable() {
@Override
public void run() {
if (battValueTV != null)
battValueTV.setText(msg);
if (battIconImg != null)
battIconImg.setImageDrawable(batteryLevel);
}
});

} else
Logger.error(""AmazModLauncher updateCharge error: null batteryStatus!"");",1,0,0,0,0,0,0,0,0,20,3,31,0,0,1,1,4,2,1,0,4,0.73,0,0
6819_9,9,9,"int level = batteryStatus.getIntExtra(BatteryManager.EXTRA_LEVEL, -1);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,4,2,1,0,1,0.45,3,2
6819_10,10,10,"int scale = batteryStatus.getIntExtra(BatteryManager.EXTRA_SCALE, -1);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,2,1,0,1,0.45,2,1
6819_11,11,11,"int batteryIconId = batteryStatus.getIntExtra(BatteryManager.EXTRA_ICON_SMALL, 0);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,4,2,1,0,2,0.62,1,0
6819_13,13,13,int battery = Math.round((level / (float) scale) * 100f);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,2,1,0,1,0.48,0,0
6819_14,14,14,String msg;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.28,1,0
6819_15,15,21,"if (battery != 0) {
String battlvl = battery + ""%"";
msg = battlvl;
widgetSettings.set(Constants.PREF_BATT_LEVEL, battlvl);
} else {
msg = ""N/A%"";
}",1,0,0,0,0,0,0,0,0,5,1,7,0,1,0,1,4,2,1,0,2,0.61,2,1
6819_16,16,16,"String battlvl = battery + ""%"";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.54,3,2
6819_17,17,17,msg = battlvl;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.28,4,3
6819_18,18,18,"widgetSettings.set(Constants.PREF_BATT_LEVEL, battlvl);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.52,5,4
6819_19,19,19,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.22,6,5
6819_20,20,20,"msg = ""N/A%"";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.25,7,6
6819_23,23,23,LevelListDrawable batteryLevel = (LevelListDrawable) mContext.getResources().getDrawable(batteryIconId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,2,0.57,10,8
6819_24,24,24,batteryLevel.setLevel(level);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,2,0.62,11,8
6819_26,26,26,"getHost().runTaskOnUI(AmazModLauncher.this, new Runnable() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.36,13,10
6819_27,27,28,"@Override
public void run() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,0,0.29,14,10
6819_29,29,30,"if (battValueTV != null)
battValueTV.setText(msg);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,4,2,1,0,2,0.61,16,12
6819_30,30,30,battValueTV.setText(msg);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.66,17,12
6819_31,31,32,"if (battIconImg != null)
battIconImg.setImageDrawable(batteryLevel);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,4,2,1,0,3,0.73,18,13
6819_32,32,32,battIconImg.setImageDrawable(batteryLevel);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,3,0.75,19,14
6819_36,36,37,"} else
Logger.error(""AmazModLauncher updateCharge error: null batteryStatus!"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,4,2,1,0,1,0.45,23,16
6820_1,1,2,"@Override
public void onAbsoluteScrollChange(int i) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,0,0,1,0.52,0,0
6820_3,3,5,"if (i > 0) {
mHeader.setY(-i);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,4,0,0,0,0.36,0,0
6820_4,4,4,mHeader.setY(-i);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.34,1,0
6821_1,1,1,    private void onShow() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.25,0,0
6821_2,2,4,"if (this.view != null && !this.isActive) {
this.refreshView();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,3,3,0,0,1,0.65,0,0
6821_3,3,3,this.refreshView();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.56,1,0
6821_6,6,6,this.isActive = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.43,4,2
6822_1,1,1,    private void onShow() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.3,1,1
6822_2,2,4,"if (this.view != null && !this.isActive) {
this.refreshView();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,2,0,0,2,0.76,0,0
6822_3,3,3,this.refreshView();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.9,0,0
6822_6,6,6,this.isActive = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.17,3,1
6823_1,1,1,    private void onShow() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.29,4,2
6823_2,2,4,"if (this.view != null && !this.isActive) {
this.refreshView();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,2,1,1,0,0,0.31,1,0
6823_3,3,3,this.refreshView();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.32,2,0
6823_6,6,6,this.isActive = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,1,1,0,0,0.29,0,0
1704_1,1,3,"@NonNull
@Override
public SpringboardWidgetAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,7,6,0,0,0,0.45,3,2
1704_4,4,4,LayoutInflater layoutInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,6,0,0,1,0.52,2,1
1704_6,6,19,"if (layoutInflater != null) {
if (viewType == 0) {
return new ViewHolder(layoutInflater.inflate(R.layout.springboard_item_header, parent, false));
} else if (viewType == 1) {
return new ViewHolder(layoutInflater.inflate(R.layout.springboard_item_preference_icon, parent, false));
} else if (viewType == 2) {
return new ViewHolder(layoutInflater.inflate(R.layout.springboard_item_preference_switch, parent, false));
} else if (viewType == 3) {
return new ViewHolder(layoutInflater.inflate(R.layout.springboard_item_preference_text, parent, false));
} else if (viewType == 4) {
return new ViewHolder(layoutInflater.inflate(R.layout.springboard_item_preference_button, parent, false));
}
} else
Logger.error(""SpringboardWidgetAdapter onCreateViewHolder: null layoutInflater!"");",1,0,0,0,0,0,0,0,0,11,2,14,0,0,1,1,7,6,0,0,5,0.72,0,0
1704_7,7,17,"if (viewType == 0) {
return new ViewHolder(layoutInflater.inflate(R.layout.springboard_item_header, parent, false));
} else if (viewType == 1) {
return new ViewHolder(layoutInflater.inflate(R.layout.springboard_item_preference_icon, parent, false));
} else if (viewType == 2) {
return new ViewHolder(layoutInflater.inflate(R.layout.springboard_item_preference_switch, parent, false));
} else if (viewType == 3) {
return new ViewHolder(layoutInflater.inflate(R.layout.springboard_item_preference_text, parent, false));
} else if (viewType == 4) {
return new ViewHolder(layoutInflater.inflate(R.layout.springboard_item_preference_button, parent, false));
}",1,0,0,0,0,0,0,0,0,9,1,11,0,0,0,0,7,6,0,0,5,0.72,0,0
1704_8,8,8,"return new ViewHolder(layoutInflater.inflate(R.layout.springboard_item_header, parent, false));",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,6,0,0,2,0.62,1,0
1704_9,9,9,} else if (viewType == 1) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.4,2,1
1704_10,10,10,"return new ViewHolder(layoutInflater.inflate(R.layout.springboard_item_preference_icon, parent, false));",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,6,0,0,2,0.6,3,2
1704_11,11,11,} else if (viewType == 2) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.45,4,3
1704_12,12,12,"return new ViewHolder(layoutInflater.inflate(R.layout.springboard_item_preference_switch, parent, false));",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,6,0,0,2,0.61,5,4
1704_13,13,13,} else if (viewType == 3) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.43,6,5
1704_14,14,14,"return new ViewHolder(layoutInflater.inflate(R.layout.springboard_item_preference_text, parent, false));",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,6,0,0,2,0.61,7,6
1704_15,15,15,} else if (viewType == 4) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.45,8,7
1704_16,16,16,"return new ViewHolder(layoutInflater.inflate(R.layout.springboard_item_preference_button, parent, false));",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,6,0,0,1,0.56,9,8
1704_18,18,19,"} else
Logger.error(""SpringboardWidgetAdapter onCreateViewHolder: null layoutInflater!"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,7,6,0,0,1,0.49,11,10
1704_21,21,21,"return new ViewHolder(Objects.requireNonNull(layoutInflater).inflate(R.layout.springboard_item_preference_text, parent, false));",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,6,0,0,2,0.58,14,11
1705_1,1,2,"@Override
public int getItemViewType(int position) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,1,0,2,0.58,0,0
1705_3,3,3,BaseSetting setting = settings.get(position);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.29,0,0
1705_4,4,4,if (setting instanceof HeaderSetting) return 0;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.46,1,0
1705_5,5,5,if (setting instanceof IconSetting) return 1;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.45,2,1
1705_6,6,6,if (setting instanceof SwitchSetting) return 2;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.47,3,2
1705_7,7,8,"if (setting instanceof ButtonSetting) return 4;
else return 3;",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,4,3,1,0,1,0.5,4,3
1705_8,8,8,else return 3;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.53,5,4
1706_1,1,2,"    @Override
public void onBindViewHolder(@NonNull final SpringboardWidgetAdapter.ViewHolder holder, int position) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,2,0,1,0.43,0,0
1706_3,3,3,BaseSetting setting = settings.get(position);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,4,1.0,0,0
1706_4,4,55,"if (setting instanceof HeaderSetting) {
holder.title.setText(((HeaderSetting) setting).title);
final HeaderSetting headerSetting = (HeaderSetting) setting;
if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);
} else if (setting instanceof SwitchSetting) {
final SwitchSetting switchSetting = (SwitchSetting) setting;

CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};

CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);
holder.sw.setOnCheckedChangeListener(mListener);


holder.sw.setChecked(switchSetting.isChecked);
holder.title.setText(switchSetting.title);
holder.title.setSelected(true);
if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
} else if(setting instanceof TextSetting) {
TextSetting textSetting = (TextSetting) setting;
holder.subtitle.setText(textSetting.text);
holder.root.setOnClickListener(textSetting.onClickListener);
} else if(setting instanceof ButtonSetting) {
ButtonSetting buttonSetting = (ButtonSetting) setting;
holder.button.setText(buttonSetting.text);
holder.root.setOnClickListener(buttonSetting.onClickListener);
} else {
IconSetting iconSetting = (IconSetting) setting;
holder.icon.setImageDrawable(iconSetting.icon);
holder.root.setOnClickListener(iconSetting.onClickListener);
holder.title.setText(iconSetting.title);
if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
}",1,0,0,0,0,0,0,0,0,38,3,52,0,1,0,0,4,2,2,0,1,0.52,1,0
1706_5,5,5,holder.title.setText(((HeaderSetting) setting).title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.55,2,1
1706_6,6,6,final HeaderSetting headerSetting = (HeaderSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.55,3,2
1706_7,7,8,"if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,4,2,2,0,1,0.45,4,3
1706_8,8,8,holder.root.setOnLongClickListener(headerSetting.onLongClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.46,5,4
1706_9,9,9,} else if (setting instanceof SwitchSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.51,6,5
1706_10,10,10,final SwitchSetting switchSetting = (SwitchSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,2,0,1,0.53,7,6
1706_12,12,18,"CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};",0,0,0,0,0,1,0,0,0,0,2,7,0,0,1,1,4,2,2,0,1,0.43,9,8
1706_20,20,20,"CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,2,0,1,0.43,17,9
1706_21,21,21,holder.sw.setOnCheckedChangeListener(mListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,2,0,1,0.45,18,9
1706_24,24,24,holder.sw.setChecked(switchSetting.isChecked);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,2,2,0,1,0.51,21,11
1706_25,25,25,holder.title.setText(switchSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.52,22,11
1706_26,26,26,holder.title.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,2,0,1,0.48,23,12
1706_27,27,34,"if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,6,1,8,1,0,0,0,4,2,2,0,1,0.5,24,13
1706_28,28,28,holder.subtitle.setText(switchSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.52,25,14
1706_29,29,29,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.51,26,15
1706_30,30,30,holder.subtitle.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.48,27,16
1706_31,31,31,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,0,0.17,28,17
1706_32,32,32,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.51,29,18
1706_33,33,33,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.51,30,19
1706_35,35,35,} else if(setting instanceof TextSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.52,32,21
1706_36,36,36,TextSetting textSetting = (TextSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.58,33,21
1706_37,37,37,holder.subtitle.setText(textSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.52,34,22
1706_38,38,38,holder.root.setOnClickListener(textSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.49,35,23
1706_39,39,39,} else if(setting instanceof ButtonSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.53,36,24
1706_40,40,40,ButtonSetting buttonSetting = (ButtonSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.61,37,25
1706_41,41,41,holder.button.setText(buttonSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.52,38,26
1706_42,42,42,holder.root.setOnClickListener(buttonSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.49,39,27
1706_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,0,0.17,40,28
1706_44,44,44,IconSetting iconSetting = (IconSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.58,41,29
1706_45,45,45,holder.icon.setImageDrawable(iconSetting.icon);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.5,42,30
1706_46,46,46,holder.root.setOnClickListener(iconSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.49,43,31
1706_47,47,47,holder.title.setText(iconSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,2,0,1,0.52,44,32
1706_48,48,54,"if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,5,1,7,1,1,0,0,4,2,2,0,1,0.51,45,33
1706_49,49,49,holder.subtitle.setText(iconSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.52,46,34
1706_50,50,50,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.51,47,35
1706_51,51,51,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,0,0.17,48,36
1706_52,52,52,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.51,49,37
1706_53,53,53,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.51,50,38
1707_1,1,2,"    @Override
public void onBindViewHolder(@NonNull final SpringboardWidgetAdapter.ViewHolder holder, int position) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,0,0.35,2,2
1707_3,3,3,BaseSetting setting = settings.get(position);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.59,1,1
1707_4,4,55,"if (setting instanceof HeaderSetting) {
holder.title.setText(((HeaderSetting) setting).title);
final HeaderSetting headerSetting = (HeaderSetting) setting;
if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);
} else if (setting instanceof SwitchSetting) {
final SwitchSetting switchSetting = (SwitchSetting) setting;

CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};

CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);
holder.sw.setOnCheckedChangeListener(mListener);


holder.sw.setChecked(switchSetting.isChecked);
holder.title.setText(switchSetting.title);
holder.title.setSelected(true);
if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
} else if(setting instanceof TextSetting) {
TextSetting textSetting = (TextSetting) setting;
holder.subtitle.setText(textSetting.text);
holder.root.setOnClickListener(textSetting.onClickListener);
} else if(setting instanceof ButtonSetting) {
ButtonSetting buttonSetting = (ButtonSetting) setting;
holder.button.setText(buttonSetting.text);
holder.root.setOnClickListener(buttonSetting.onClickListener);
} else {
IconSetting iconSetting = (IconSetting) setting;
holder.icon.setImageDrawable(iconSetting.icon);
holder.root.setOnClickListener(iconSetting.onClickListener);
holder.title.setText(iconSetting.title);
if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
}",1,0,0,0,0,0,0,0,0,38,3,52,0,1,0,0,3,2,1,0,3,0.77,0,0
1707_5,5,5,holder.title.setText(((HeaderSetting) setting).title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,3,0.89,0,0
1707_6,6,6,final HeaderSetting headerSetting = (HeaderSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,2,0.83,1,0
1707_7,7,8,"if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,3,2,1,0,2,0.63,2,1
1707_8,8,8,holder.root.setOnLongClickListener(headerSetting.onLongClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,2,0.63,3,2
1707_9,9,9,} else if (setting instanceof SwitchSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.53,4,3
1707_10,10,10,final SwitchSetting switchSetting = (SwitchSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,1,0,1,0.56,5,4
1707_12,12,18,"CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};",0,0,0,0,0,1,0,0,0,0,2,7,0,0,1,1,3,2,1,0,1,0.44,7,6
1707_20,20,20,"CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,1,0,1,0.44,15,7
1707_21,21,21,holder.sw.setOnCheckedChangeListener(mListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,1,0,1,0.47,16,7
1707_24,24,24,holder.sw.setChecked(switchSetting.isChecked);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,2,1,0,1,0.51,19,9
1707_25,25,25,holder.title.setText(switchSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,2,0.71,20,9
1707_26,26,26,holder.title.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,1,0,1,0.53,21,10
1707_27,27,34,"if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,6,1,8,1,0,0,0,3,2,1,0,2,0.67,22,11
1707_28,28,28,holder.subtitle.setText(switchSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,2,0.71,23,12
1707_29,29,29,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.56,24,13
1707_30,30,30,holder.subtitle.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.54,25,14
1707_31,31,31,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.2,26,15
1707_32,32,32,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,2,0.74,27,16
1707_33,33,33,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.56,28,17
1707_35,35,35,} else if(setting instanceof TextSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,2,0.72,30,19
1707_36,36,36,TextSetting textSetting = (TextSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,2,0.87,31,19
1707_37,37,37,holder.subtitle.setText(textSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,2,0.8,32,20
1707_38,38,38,holder.root.setOnClickListener(textSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,2,0.65,33,21
1707_39,39,39,} else if(setting instanceof ButtonSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.55,34,22
1707_40,40,40,ButtonSetting buttonSetting = (ButtonSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.63,35,23
1707_41,41,41,holder.button.setText(buttonSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,2,0.75,36,24
1707_42,42,42,holder.root.setOnClickListener(buttonSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.51,37,25
1707_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.2,38,26
1707_44,44,44,IconSetting iconSetting = (IconSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.67,39,27
1707_45,45,45,holder.icon.setImageDrawable(iconSetting.icon);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.56,40,28
1707_46,46,46,holder.root.setOnClickListener(iconSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.54,41,29
1707_47,47,47,holder.title.setText(iconSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,1,0,2,0.72,42,30
1707_48,48,54,"if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,5,1,7,1,1,0,0,3,2,1,0,2,0.68,43,31
1707_49,49,49,holder.subtitle.setText(iconSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,2,0.73,44,32
1707_50,50,50,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.56,45,33
1707_51,51,51,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.2,46,34
1707_52,52,52,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,2,0.74,47,35
1707_53,53,53,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.56,48,36
1708_1,1,2,"    @Override
public void onBindViewHolder(@NonNull final SpringboardWidgetAdapter.ViewHolder holder, int position) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,0,0.38,3,3
1708_3,3,3,BaseSetting setting = settings.get(position);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.26,2,2
1708_4,4,55,"if (setting instanceof HeaderSetting) {
holder.title.setText(((HeaderSetting) setting).title);
final HeaderSetting headerSetting = (HeaderSetting) setting;
if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);
} else if (setting instanceof SwitchSetting) {
final SwitchSetting switchSetting = (SwitchSetting) setting;

CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};

CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);
holder.sw.setOnCheckedChangeListener(mListener);


holder.sw.setChecked(switchSetting.isChecked);
holder.title.setText(switchSetting.title);
holder.title.setSelected(true);
if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
} else if(setting instanceof TextSetting) {
TextSetting textSetting = (TextSetting) setting;
holder.subtitle.setText(textSetting.text);
holder.root.setOnClickListener(textSetting.onClickListener);
} else if(setting instanceof ButtonSetting) {
ButtonSetting buttonSetting = (ButtonSetting) setting;
holder.button.setText(buttonSetting.text);
holder.root.setOnClickListener(buttonSetting.onClickListener);
} else {
IconSetting iconSetting = (IconSetting) setting;
holder.icon.setImageDrawable(iconSetting.icon);
holder.root.setOnClickListener(iconSetting.onClickListener);
holder.title.setText(iconSetting.title);
if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
}",1,0,0,0,0,0,0,0,0,38,3,52,0,1,0,0,4,2,1,0,3,0.63,0,0
1708_5,5,5,holder.title.setText(((HeaderSetting) setting).title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.35,0,0
1708_6,6,6,final HeaderSetting headerSetting = (HeaderSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.28,0,0
1708_7,7,8,"if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,4,2,1,0,3,0.76,1,0
1708_8,8,8,holder.root.setOnLongClickListener(headerSetting.onLongClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,3,0.76,2,1
1708_9,9,9,} else if (setting instanceof SwitchSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.33,3,2
1708_10,10,10,final SwitchSetting switchSetting = (SwitchSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.26,4,3
1708_12,12,18,"CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};",0,0,0,0,0,1,0,0,0,0,2,7,0,0,1,1,4,2,1,0,1,0.5,6,5
1708_20,20,20,"CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,1,0.55,14,6
1708_21,21,21,holder.sw.setOnCheckedChangeListener(mListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,1,0.52,15,6
1708_24,24,24,holder.sw.setChecked(switchSetting.isChecked);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.28,18,8
1708_25,25,25,holder.title.setText(switchSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.35,19,8
1708_26,26,26,holder.title.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,0,0.37,20,9
1708_27,27,34,"if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,6,1,8,1,0,0,0,4,2,1,0,0,0.36,21,10
1708_28,28,28,holder.subtitle.setText(switchSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.33,22,11
1708_29,29,29,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.35,23,12
1708_30,30,30,holder.subtitle.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.35,24,13
1708_31,31,31,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.23,25,14
1708_32,32,32,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.33,26,15
1708_33,33,33,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.36,27,16
1708_35,35,35,} else if(setting instanceof TextSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.32,29,18
1708_36,36,36,TextSetting textSetting = (TextSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.25,30,18
1708_37,37,37,holder.subtitle.setText(textSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.3,31,19
1708_38,38,38,holder.root.setOnClickListener(textSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.61,32,20
1708_39,39,39,} else if(setting instanceof ButtonSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.4,33,21
1708_40,40,40,ButtonSetting buttonSetting = (ButtonSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.42,34,22
1708_41,41,41,holder.button.setText(buttonSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.38,35,23
1708_42,42,42,holder.root.setOnClickListener(buttonSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.65,36,24
1708_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.23,37,25
1708_44,44,44,IconSetting iconSetting = (IconSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.31,38,26
1708_45,45,45,holder.icon.setImageDrawable(iconSetting.icon);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.33,39,27
1708_46,46,46,holder.root.setOnClickListener(iconSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.63,40,28
1708_47,47,47,holder.title.setText(iconSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.36,41,29
1708_48,48,54,"if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,5,1,7,1,1,0,0,4,2,1,0,0,0.37,42,30
1708_49,49,49,holder.subtitle.setText(iconSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.34,43,31
1708_50,50,50,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.35,44,32
1708_51,51,51,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.23,45,33
1708_52,52,52,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.33,46,34
1708_53,53,53,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.36,47,35
1709_1,1,2,"    @Override
public void onBindViewHolder(@NonNull final SpringboardWidgetAdapter.ViewHolder holder, int position) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,4,2,0,1,0.52,7,7
1709_3,3,3,BaseSetting setting = settings.get(position);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,2,0,0,0.31,6,6
1709_4,4,55,"if (setting instanceof HeaderSetting) {
holder.title.setText(((HeaderSetting) setting).title);
final HeaderSetting headerSetting = (HeaderSetting) setting;
if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);
} else if (setting instanceof SwitchSetting) {
final SwitchSetting switchSetting = (SwitchSetting) setting;

CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};

CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);
holder.sw.setOnCheckedChangeListener(mListener);


holder.sw.setChecked(switchSetting.isChecked);
holder.title.setText(switchSetting.title);
holder.title.setSelected(true);
if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
} else if(setting instanceof TextSetting) {
TextSetting textSetting = (TextSetting) setting;
holder.subtitle.setText(textSetting.text);
holder.root.setOnClickListener(textSetting.onClickListener);
} else if(setting instanceof ButtonSetting) {
ButtonSetting buttonSetting = (ButtonSetting) setting;
holder.button.setText(buttonSetting.text);
holder.root.setOnClickListener(buttonSetting.onClickListener);
} else {
IconSetting iconSetting = (IconSetting) setting;
holder.icon.setImageDrawable(iconSetting.icon);
holder.root.setOnClickListener(iconSetting.onClickListener);
holder.title.setText(iconSetting.title);
if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
}",1,0,0,0,0,0,0,0,0,38,3,52,0,1,0,0,8,4,2,0,6,0.74,0,0
1709_5,5,5,holder.title.setText(((HeaderSetting) setting).title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,2,0,0,0.43,4,4
1709_6,6,6,final HeaderSetting headerSetting = (HeaderSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,2,0,0,0.3,3,3
1709_7,7,8,"if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,8,4,2,0,3,0.67,1,1
1709_8,8,8,holder.root.setOnLongClickListener(headerSetting.onLongClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,3,0.68,1,1
1709_9,9,9,} else if (setting instanceof SwitchSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,1,0.48,0,0
1709_10,10,10,final SwitchSetting switchSetting = (SwitchSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,4,2,0,1,0.47,0,0
1709_12,12,18,"CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};",0,0,0,0,0,1,0,0,0,0,2,7,0,0,1,1,8,4,2,0,4,0.69,2,1
1709_20,20,20,"CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,4,2,0,3,0.74,10,2
1709_21,21,21,holder.sw.setOnCheckedChangeListener(mListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,8,4,2,0,2,0.69,11,2
1709_24,24,24,holder.sw.setChecked(switchSetting.isChecked);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,8,4,2,0,1,0.47,14,4
1709_25,25,25,holder.title.setText(switchSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,2,0,1,0.54,15,4
1709_26,26,26,holder.title.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,8,4,2,0,0,0.46,16,5
1709_27,27,34,"if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,6,1,8,1,0,0,0,8,4,2,0,2,0.55,17,6
1709_28,28,28,holder.subtitle.setText(switchSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,1,0.52,18,7
1709_29,29,29,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,1,0.53,19,8
1709_30,30,30,holder.subtitle.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.45,20,9
1709_31,31,31,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.29,21,10
1709_32,32,32,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.45,22,11
1709_33,33,33,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,1,0.54,23,12
1709_35,35,35,} else if(setting instanceof TextSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.37,25,14
1709_36,36,36,TextSetting textSetting = (TextSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,2,0,0,0.32,26,14
1709_37,37,37,holder.subtitle.setText(textSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,2,0,0,0.43,27,15
1709_38,38,38,holder.root.setOnClickListener(textSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,2,0,3,0.73,28,16
1709_39,39,39,} else if(setting instanceof ButtonSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.43,29,17
1709_40,40,40,ButtonSetting buttonSetting = (ButtonSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,2,0,0,0.43,30,18
1709_41,41,41,holder.button.setText(buttonSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,2,0,0,0.46,31,19
1709_42,42,42,holder.root.setOnClickListener(buttonSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,2,0,3,0.75,32,20
1709_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.29,33,21
1709_44,44,44,IconSetting iconSetting = (IconSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,2,0,0,0.34,34,22
1709_45,45,45,holder.icon.setImageDrawable(iconSetting.icon);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,2,0,0,0.42,35,23
1709_46,46,46,holder.root.setOnClickListener(iconSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,2,0,3,0.73,36,24
1709_47,47,47,holder.title.setText(iconSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,4,2,0,0,0.44,37,25
1709_48,48,54,"if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,5,1,7,1,1,0,0,8,4,2,0,1,0.5,38,26
1709_49,49,49,holder.subtitle.setText(iconSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.44,39,27
1709_50,50,50,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,1,0.53,40,28
1709_51,51,51,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.29,41,29
1709_52,52,52,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.45,42,30
1709_53,53,53,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,1,0.54,43,31
1710_1,1,2,"    @Override
public void onBindViewHolder(@NonNull final SpringboardWidgetAdapter.ViewHolder holder, int position) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,1,0,0,0.33,9,8
1710_3,3,3,BaseSetting setting = settings.get(position);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.53,8,7
1710_4,4,55,"if (setting instanceof HeaderSetting) {
holder.title.setText(((HeaderSetting) setting).title);
final HeaderSetting headerSetting = (HeaderSetting) setting;
if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);
} else if (setting instanceof SwitchSetting) {
final SwitchSetting switchSetting = (SwitchSetting) setting;

CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};

CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);
holder.sw.setOnCheckedChangeListener(mListener);


holder.sw.setChecked(switchSetting.isChecked);
holder.title.setText(switchSetting.title);
holder.title.setSelected(true);
if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
} else if(setting instanceof TextSetting) {
TextSetting textSetting = (TextSetting) setting;
holder.subtitle.setText(textSetting.text);
holder.root.setOnClickListener(textSetting.onClickListener);
} else if(setting instanceof ButtonSetting) {
ButtonSetting buttonSetting = (ButtonSetting) setting;
holder.button.setText(buttonSetting.text);
holder.root.setOnClickListener(buttonSetting.onClickListener);
} else {
IconSetting iconSetting = (IconSetting) setting;
holder.icon.setImageDrawable(iconSetting.icon);
holder.root.setOnClickListener(iconSetting.onClickListener);
holder.title.setText(iconSetting.title);
if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
}",1,0,0,0,0,0,0,0,0,38,3,52,0,1,0,0,5,4,1,0,2,0.66,0,0
1710_5,5,5,holder.title.setText(((HeaderSetting) setting).title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.5,6,5
1710_6,6,6,final HeaderSetting headerSetting = (HeaderSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.51,5,4
1710_7,7,8,"if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,5,4,1,0,1,0.41,3,2
1710_8,8,8,holder.root.setOnLongClickListener(headerSetting.onLongClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.42,3,2
1710_9,9,9,} else if (setting instanceof SwitchSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.57,2,1
1710_10,10,10,final SwitchSetting switchSetting = (SwitchSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,1,0,1,0.59,1,0
1710_12,12,18,"CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};",0,0,0,0,0,1,0,0,0,0,2,7,0,0,1,1,5,4,1,0,2,0.59,0,0
1710_20,20,20,"CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,1,0,2,0.61,8,1
1710_21,21,21,holder.sw.setOnCheckedChangeListener(mListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,1,0,2,0.63,9,1
1710_24,24,24,holder.sw.setChecked(switchSetting.isChecked);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,5,4,1,0,1,0.53,12,3
1710_25,25,25,holder.title.setText(switchSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.54,13,3
1710_26,26,26,holder.title.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,1,0,1,0.49,14,4
1710_27,27,34,"if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,6,1,8,1,0,0,0,5,4,1,0,1,0.54,15,5
1710_28,28,28,holder.subtitle.setText(switchSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.55,16,6
1710_29,29,29,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.54,17,7
1710_30,30,30,holder.subtitle.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.51,18,8
1710_31,31,31,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.23,19,9
1710_32,32,32,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.51,20,10
1710_33,33,33,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.52,21,11
1710_35,35,35,} else if(setting instanceof TextSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.5,23,13
1710_36,36,36,TextSetting textSetting = (TextSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.54,24,13
1710_37,37,37,holder.subtitle.setText(textSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.51,25,14
1710_38,38,38,holder.root.setOnClickListener(textSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.44,26,15
1710_39,39,39,} else if(setting instanceof ButtonSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.52,27,16
1710_40,40,40,ButtonSetting buttonSetting = (ButtonSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.59,28,17
1710_41,41,41,holder.button.setText(buttonSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.49,29,18
1710_42,42,42,holder.root.setOnClickListener(buttonSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.46,30,19
1710_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.23,31,20
1710_44,44,44,IconSetting iconSetting = (IconSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.56,32,21
1710_45,45,45,holder.icon.setImageDrawable(iconSetting.icon);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.44,33,22
1710_46,46,46,holder.root.setOnClickListener(iconSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.45,34,23
1710_47,47,47,holder.title.setText(iconSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,4,1,0,1,0.47,35,24
1710_48,48,54,"if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,5,1,7,1,1,0,0,5,4,1,0,1,0.53,36,25
1710_49,49,49,holder.subtitle.setText(iconSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.52,37,26
1710_50,50,50,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.54,38,27
1710_51,51,51,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.23,39,28
1710_52,52,52,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.51,40,29
1710_53,53,53,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.52,41,30
1711_1,1,2,"    @Override
public void onBindViewHolder(@NonNull final SpringboardWidgetAdapter.ViewHolder holder, int position) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,0,0.29,21,11
1711_3,3,3,BaseSetting setting = settings.get(position);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.56,20,10
1711_4,4,55,"if (setting instanceof HeaderSetting) {
holder.title.setText(((HeaderSetting) setting).title);
final HeaderSetting headerSetting = (HeaderSetting) setting;
if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);
} else if (setting instanceof SwitchSetting) {
final SwitchSetting switchSetting = (SwitchSetting) setting;

CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};

CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);
holder.sw.setOnCheckedChangeListener(mListener);


holder.sw.setChecked(switchSetting.isChecked);
holder.title.setText(switchSetting.title);
holder.title.setSelected(true);
if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
} else if(setting instanceof TextSetting) {
TextSetting textSetting = (TextSetting) setting;
holder.subtitle.setText(textSetting.text);
holder.root.setOnClickListener(textSetting.onClickListener);
} else if(setting instanceof ButtonSetting) {
ButtonSetting buttonSetting = (ButtonSetting) setting;
holder.button.setText(buttonSetting.text);
holder.root.setOnClickListener(buttonSetting.onClickListener);
} else {
IconSetting iconSetting = (IconSetting) setting;
holder.icon.setImageDrawable(iconSetting.icon);
holder.root.setOnClickListener(iconSetting.onClickListener);
holder.title.setText(iconSetting.title);
if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
}",1,0,0,0,0,0,0,0,0,38,3,52,0,1,0,0,3,2,1,0,2,0.66,0,0
1711_5,5,5,holder.title.setText(((HeaderSetting) setting).title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.51,18,8
1711_6,6,6,final HeaderSetting headerSetting = (HeaderSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.56,17,7
1711_7,7,8,"if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,3,2,1,0,1,0.45,15,5
1711_8,8,8,holder.root.setOnLongClickListener(headerSetting.onLongClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.44,15,5
1711_9,9,9,} else if (setting instanceof SwitchSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.51,14,4
1711_10,10,10,final SwitchSetting switchSetting = (SwitchSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,1,0,1,0.56,13,3
1711_12,12,18,"CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};",0,0,0,0,0,1,0,0,0,0,2,7,0,0,1,1,3,2,1,0,2,0.65,5,2
1711_20,20,20,"CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,1,0,2,0.59,3,1
1711_21,21,21,holder.sw.setOnCheckedChangeListener(mListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,1,0,2,0.64,2,0
1711_24,24,24,holder.sw.setChecked(switchSetting.isChecked);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,2,1,0,2,0.75,0,0
1711_25,25,25,holder.title.setText(switchSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.5,1,0
1711_26,26,26,holder.title.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,1,0,1,0.44,2,1
1711_27,27,34,"if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,6,1,8,1,0,0,0,3,2,1,0,1,0.51,3,2
1711_28,28,28,holder.subtitle.setText(switchSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.51,4,3
1711_29,29,29,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.5,5,4
1711_30,30,30,holder.subtitle.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.45,6,5
1711_31,31,31,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.1,7,6
1711_32,32,32,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.5,8,7
1711_33,33,33,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.5,9,8
1711_35,35,35,} else if(setting instanceof TextSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.52,11,10
1711_36,36,36,TextSetting textSetting = (TextSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.58,12,10
1711_37,37,37,holder.subtitle.setText(textSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.5,13,11
1711_38,38,38,holder.root.setOnClickListener(textSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.47,14,12
1711_39,39,39,} else if(setting instanceof ButtonSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.52,15,13
1711_40,40,40,ButtonSetting buttonSetting = (ButtonSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.59,16,14
1711_41,41,41,holder.button.setText(buttonSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.49,17,15
1711_42,42,42,holder.root.setOnClickListener(buttonSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.47,18,16
1711_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.1,19,17
1711_44,44,44,IconSetting iconSetting = (IconSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.58,20,18
1711_45,45,45,holder.icon.setImageDrawable(iconSetting.icon);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.47,21,19
1711_46,46,46,holder.root.setOnClickListener(iconSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.47,22,20
1711_47,47,47,holder.title.setText(iconSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,1,0,1,0.49,23,21
1711_48,48,54,"if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,5,1,7,1,1,0,0,3,2,1,0,1,0.51,24,22
1711_49,49,49,holder.subtitle.setText(iconSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.51,25,23
1711_50,50,50,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.5,26,24
1711_51,51,51,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.1,27,25
1711_52,52,52,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.5,28,26
1711_53,53,53,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.5,29,27
1712_1,1,2,"    @Override
public void onBindViewHolder(@NonNull final SpringboardWidgetAdapter.ViewHolder holder, int position) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.47,22,12
1712_3,3,3,BaseSetting setting = settings.get(position);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.33,21,11
1712_4,4,55,"if (setting instanceof HeaderSetting) {
holder.title.setText(((HeaderSetting) setting).title);
final HeaderSetting headerSetting = (HeaderSetting) setting;
if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);
} else if (setting instanceof SwitchSetting) {
final SwitchSetting switchSetting = (SwitchSetting) setting;

CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};

CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);
holder.sw.setOnCheckedChangeListener(mListener);


holder.sw.setChecked(switchSetting.isChecked);
holder.title.setText(switchSetting.title);
holder.title.setSelected(true);
if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
} else if(setting instanceof TextSetting) {
TextSetting textSetting = (TextSetting) setting;
holder.subtitle.setText(textSetting.text);
holder.root.setOnClickListener(textSetting.onClickListener);
} else if(setting instanceof ButtonSetting) {
ButtonSetting buttonSetting = (ButtonSetting) setting;
holder.button.setText(buttonSetting.text);
holder.root.setOnClickListener(buttonSetting.onClickListener);
} else {
IconSetting iconSetting = (IconSetting) setting;
holder.icon.setImageDrawable(iconSetting.icon);
holder.root.setOnClickListener(iconSetting.onClickListener);
holder.title.setText(iconSetting.title);
if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
}",1,0,0,0,0,0,0,0,0,38,3,52,0,1,0,0,2,2,0,0,1,0.6,0,0
1712_5,5,5,holder.title.setText(((HeaderSetting) setting).title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.67,19,9
1712_6,6,6,final HeaderSetting headerSetting = (HeaderSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.33,18,8
1712_7,7,8,"if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,2,2,0,0,0,0.43,16,6
1712_8,8,8,holder.root.setOnLongClickListener(headerSetting.onLongClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.44,16,6
1712_9,9,9,} else if (setting instanceof SwitchSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.38,15,5
1712_10,10,10,final SwitchSetting switchSetting = (SwitchSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.32,14,4
1712_12,12,18,"CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};",0,0,0,0,0,1,0,0,0,0,2,7,0,0,1,1,2,2,0,0,0,0.45,6,3
1712_20,20,20,"CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.44,4,2
1712_21,21,21,holder.sw.setOnCheckedChangeListener(mListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.4,3,1
1712_24,24,24,holder.sw.setChecked(switchSetting.isChecked);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.38,0,0
1712_25,25,25,holder.title.setText(switchSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.68,0,0
1712_26,26,26,holder.title.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,2,0,0,1,0.63,1,0
1712_27,27,34,"if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,6,1,8,1,0,0,0,2,2,0,0,0,0.56,2,1
1712_28,28,28,holder.subtitle.setText(switchSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.57,3,2
1712_29,29,29,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.57,4,3
1712_30,30,30,holder.subtitle.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.54,5,4
1712_31,31,31,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,6,5
1712_32,32,32,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.58,7,6
1712_33,33,33,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.58,8,7
1712_35,35,35,} else if(setting instanceof TextSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.42,10,9
1712_36,36,36,TextSetting textSetting = (TextSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.39,11,9
1712_37,37,37,holder.subtitle.setText(textSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.56,12,10
1712_38,38,38,holder.root.setOnClickListener(textSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.47,13,11
1712_39,39,39,} else if(setting instanceof ButtonSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.46,14,12
1712_40,40,40,ButtonSetting buttonSetting = (ButtonSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.48,15,13
1712_41,41,41,holder.button.setText(buttonSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.49,16,14
1712_42,42,42,holder.root.setOnClickListener(buttonSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.48,17,15
1712_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,18,16
1712_44,44,44,IconSetting iconSetting = (IconSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.51,19,17
1712_45,45,45,holder.icon.setImageDrawable(iconSetting.icon);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.53,20,18
1712_46,46,46,holder.root.setOnClickListener(iconSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.5,21,19
1712_47,47,47,holder.title.setText(iconSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,1,0.7,22,20
1712_48,48,54,"if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,5,1,7,1,1,0,0,2,2,0,0,0,0.58,23,21
1712_49,49,49,holder.subtitle.setText(iconSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.6,24,22
1712_50,50,50,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.57,25,23
1712_51,51,51,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,26,24
1712_52,52,52,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.58,27,25
1712_53,53,53,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.58,28,26
1713_1,1,2,"    @Override
public void onBindViewHolder(@NonNull final SpringboardWidgetAdapter.ViewHolder holder, int position) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.46,24,14
1713_3,3,3,BaseSetting setting = settings.get(position);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.32,23,13
1713_4,4,55,"if (setting instanceof HeaderSetting) {
holder.title.setText(((HeaderSetting) setting).title);
final HeaderSetting headerSetting = (HeaderSetting) setting;
if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);
} else if (setting instanceof SwitchSetting) {
final SwitchSetting switchSetting = (SwitchSetting) setting;

CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};

CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);
holder.sw.setOnCheckedChangeListener(mListener);


holder.sw.setChecked(switchSetting.isChecked);
holder.title.setText(switchSetting.title);
holder.title.setSelected(true);
if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
} else if(setting instanceof TextSetting) {
TextSetting textSetting = (TextSetting) setting;
holder.subtitle.setText(textSetting.text);
holder.root.setOnClickListener(textSetting.onClickListener);
} else if(setting instanceof ButtonSetting) {
ButtonSetting buttonSetting = (ButtonSetting) setting;
holder.button.setText(buttonSetting.text);
holder.root.setOnClickListener(buttonSetting.onClickListener);
} else {
IconSetting iconSetting = (IconSetting) setting;
holder.icon.setImageDrawable(iconSetting.icon);
holder.root.setOnClickListener(iconSetting.onClickListener);
holder.title.setText(iconSetting.title);
if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
}",1,0,0,0,0,0,0,0,0,38,3,52,0,1,0,0,3,3,0,0,1,0.54,0,0
1713_5,5,5,holder.title.setText(((HeaderSetting) setting).title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.51,21,11
1713_6,6,6,final HeaderSetting headerSetting = (HeaderSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.31,20,10
1713_7,7,8,"if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,3,3,0,0,0,0.37,18,8
1713_8,8,8,holder.root.setOnLongClickListener(headerSetting.onLongClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,18,8
1713_9,9,9,} else if (setting instanceof SwitchSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.37,17,7
1713_10,10,10,final SwitchSetting switchSetting = (SwitchSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.32,16,6
1713_12,12,18,"CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};",0,0,0,0,0,1,0,0,0,0,2,7,0,0,1,1,3,3,0,0,0,0.44,8,5
1713_20,20,20,"CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.41,6,4
1713_21,21,21,holder.sw.setOnCheckedChangeListener(mListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.37,5,3
1713_24,24,24,holder.sw.setChecked(switchSetting.isChecked);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.34,2,2
1713_25,25,25,holder.title.setText(switchSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.52,1,1
1713_26,26,26,holder.title.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.49,0,0
1713_27,27,34,"if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,6,1,8,1,0,0,0,3,3,0,0,1,0.56,0,0
1713_28,28,28,holder.subtitle.setText(switchSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.58,1,0
1713_29,29,29,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.56,2,1
1713_30,30,30,holder.subtitle.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.54,3,2
1713_31,31,31,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,4,3
1713_32,32,32,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.58,5,4
1713_33,33,33,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.56,6,5
1713_35,35,35,} else if(setting instanceof TextSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.4,8,7
1713_36,36,36,TextSetting textSetting = (TextSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.39,9,7
1713_37,37,37,holder.subtitle.setText(textSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.56,10,8
1713_38,38,38,holder.root.setOnClickListener(textSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.41,11,9
1713_39,39,39,} else if(setting instanceof ButtonSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.43,12,10
1713_40,40,40,ButtonSetting buttonSetting = (ButtonSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.45,13,11
1713_41,41,41,holder.button.setText(buttonSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.47,14,12
1713_42,42,42,holder.root.setOnClickListener(buttonSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.44,15,13
1713_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,16,14
1713_44,44,44,IconSetting iconSetting = (IconSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.47,17,15
1713_45,45,45,holder.icon.setImageDrawable(iconSetting.icon);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.5,18,16
1713_46,46,46,holder.root.setOnClickListener(iconSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.45,19,17
1713_47,47,47,holder.title.setText(iconSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,0,0.55,20,18
1713_48,48,54,"if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,5,1,7,1,1,0,0,3,3,0,0,1,0.57,21,19
1713_49,49,49,holder.subtitle.setText(iconSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.61,22,20
1713_50,50,50,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.56,23,21
1713_51,51,51,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,24,22
1713_52,52,52,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.58,25,23
1713_53,53,53,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.56,26,24
1714_1,1,2,"    @Override
public void onBindViewHolder(@NonNull final SpringboardWidgetAdapter.ViewHolder holder, int position) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,2,0,0,0.31,33,22
1714_3,3,3,BaseSetting setting = settings.get(position);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.65,32,21
1714_4,4,55,"if (setting instanceof HeaderSetting) {
holder.title.setText(((HeaderSetting) setting).title);
final HeaderSetting headerSetting = (HeaderSetting) setting;
if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);
} else if (setting instanceof SwitchSetting) {
final SwitchSetting switchSetting = (SwitchSetting) setting;

CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};

CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);
holder.sw.setOnCheckedChangeListener(mListener);


holder.sw.setChecked(switchSetting.isChecked);
holder.title.setText(switchSetting.title);
holder.title.setSelected(true);
if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
} else if(setting instanceof TextSetting) {
TextSetting textSetting = (TextSetting) setting;
holder.subtitle.setText(textSetting.text);
holder.root.setOnClickListener(textSetting.onClickListener);
} else if(setting instanceof ButtonSetting) {
ButtonSetting buttonSetting = (ButtonSetting) setting;
holder.button.setText(buttonSetting.text);
holder.root.setOnClickListener(buttonSetting.onClickListener);
} else {
IconSetting iconSetting = (IconSetting) setting;
holder.icon.setImageDrawable(iconSetting.icon);
holder.root.setOnClickListener(iconSetting.onClickListener);
holder.title.setText(iconSetting.title);
if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
}",1,0,0,0,0,0,0,0,0,38,3,52,0,1,0,0,4,2,2,0,2,0.69,0,0
1714_5,5,5,holder.title.setText(((HeaderSetting) setting).title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,2,0.74,30,19
1714_6,6,6,final HeaderSetting headerSetting = (HeaderSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.61,29,18
1714_7,7,8,"if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,4,2,2,0,1,0.54,27,16
1714_8,8,8,holder.root.setOnLongClickListener(headerSetting.onLongClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.55,27,16
1714_9,9,9,} else if (setting instanceof SwitchSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.58,26,15
1714_10,10,10,final SwitchSetting switchSetting = (SwitchSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,2,0,1,0.61,25,14
1714_12,12,18,"CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};",0,0,0,0,0,1,0,0,0,0,2,7,0,0,1,1,4,2,2,0,1,0.48,17,13
1714_20,20,20,"CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,2,0,1,0.5,15,12
1714_21,21,21,holder.sw.setOnCheckedChangeListener(mListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,2,0,1,0.53,14,11
1714_24,24,24,holder.sw.setChecked(switchSetting.isChecked);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,2,2,0,1,0.55,11,10
1714_25,25,25,holder.title.setText(switchSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,2,0.72,10,9
1714_26,26,26,holder.title.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,2,0,1,0.56,9,8
1714_27,27,34,"if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,6,1,8,1,0,0,0,4,2,2,0,2,0.68,1,1
1714_28,28,28,holder.subtitle.setText(switchSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,2,0.73,7,6
1714_29,29,29,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.59,6,5
1714_30,30,30,holder.subtitle.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.58,5,4
1714_31,31,31,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,0,0.19,4,3
1714_32,32,32,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,2,0.76,3,2
1714_33,33,33,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.59,2,1
1714_35,35,35,} else if(setting instanceof TextSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,2,0.75,0,0
1714_36,36,36,TextSetting textSetting = (TextSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,2,0.9,0,0
1714_37,37,37,holder.subtitle.setText(textSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,2,0.82,1,0
1714_38,38,38,holder.root.setOnClickListener(textSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,2,0.7,2,1
1714_39,39,39,} else if(setting instanceof ButtonSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.59,3,2
1714_40,40,40,ButtonSetting buttonSetting = (ButtonSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.68,4,3
1714_41,41,41,holder.button.setText(buttonSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,2,0.77,5,4
1714_42,42,42,holder.root.setOnClickListener(buttonSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.59,6,5
1714_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,0,0.19,7,6
1714_44,44,44,IconSetting iconSetting = (IconSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.71,8,7
1714_45,45,45,holder.icon.setImageDrawable(iconSetting.icon);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.62,9,8
1714_46,46,46,holder.root.setOnClickListener(iconSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.61,10,9
1714_47,47,47,holder.title.setText(iconSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,2,0,2,0.74,11,10
1714_48,48,54,"if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,5,1,7,1,1,0,0,4,2,2,0,2,0.69,12,11
1714_49,49,49,holder.subtitle.setText(iconSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,2,0.75,13,12
1714_50,50,50,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.59,14,13
1714_51,51,51,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,0,0.19,15,14
1714_52,52,52,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,2,0.76,16,15
1714_53,53,53,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.59,17,16
1715_1,1,2,"    @Override
public void onBindViewHolder(@NonNull final SpringboardWidgetAdapter.ViewHolder holder, int position) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,2,0,0,0.31,37,26
1715_3,3,3,BaseSetting setting = settings.get(position);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.65,36,25
1715_4,4,55,"if (setting instanceof HeaderSetting) {
holder.title.setText(((HeaderSetting) setting).title);
final HeaderSetting headerSetting = (HeaderSetting) setting;
if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);
} else if (setting instanceof SwitchSetting) {
final SwitchSetting switchSetting = (SwitchSetting) setting;

CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};

CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);
holder.sw.setOnCheckedChangeListener(mListener);


holder.sw.setChecked(switchSetting.isChecked);
holder.title.setText(switchSetting.title);
holder.title.setSelected(true);
if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
} else if(setting instanceof TextSetting) {
TextSetting textSetting = (TextSetting) setting;
holder.subtitle.setText(textSetting.text);
holder.root.setOnClickListener(textSetting.onClickListener);
} else if(setting instanceof ButtonSetting) {
ButtonSetting buttonSetting = (ButtonSetting) setting;
holder.button.setText(buttonSetting.text);
holder.root.setOnClickListener(buttonSetting.onClickListener);
} else {
IconSetting iconSetting = (IconSetting) setting;
holder.icon.setImageDrawable(iconSetting.icon);
holder.root.setOnClickListener(iconSetting.onClickListener);
holder.title.setText(iconSetting.title);
if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
}",1,0,0,0,0,0,0,0,0,38,3,52,0,1,0,0,4,2,2,0,2,0.69,0,0
1715_5,5,5,holder.title.setText(((HeaderSetting) setting).title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,2,0.74,34,23
1715_6,6,6,final HeaderSetting headerSetting = (HeaderSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.61,33,22
1715_7,7,8,"if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,4,2,2,0,1,0.54,31,20
1715_8,8,8,holder.root.setOnLongClickListener(headerSetting.onLongClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.55,31,20
1715_9,9,9,} else if (setting instanceof SwitchSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.58,30,19
1715_10,10,10,final SwitchSetting switchSetting = (SwitchSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,2,0,1,0.61,29,18
1715_12,12,18,"CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};",0,0,0,0,0,1,0,0,0,0,2,7,0,0,1,1,4,2,2,0,1,0.48,21,17
1715_20,20,20,"CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,2,0,1,0.5,19,16
1715_21,21,21,holder.sw.setOnCheckedChangeListener(mListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,2,0,1,0.53,18,15
1715_24,24,24,holder.sw.setChecked(switchSetting.isChecked);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,2,2,0,1,0.55,15,14
1715_25,25,25,holder.title.setText(switchSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,2,0.72,14,13
1715_26,26,26,holder.title.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,2,0,1,0.56,13,12
1715_27,27,34,"if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,6,1,8,1,0,0,0,4,2,2,0,2,0.68,5,5
1715_28,28,28,holder.subtitle.setText(switchSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,2,0.73,11,10
1715_29,29,29,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.59,10,9
1715_30,30,30,holder.subtitle.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.58,9,8
1715_31,31,31,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,0,0.19,8,7
1715_32,32,32,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,2,0.76,7,6
1715_33,33,33,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.59,6,5
1715_35,35,35,} else if(setting instanceof TextSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,2,0.75,4,4
1715_36,36,36,TextSetting textSetting = (TextSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,2,0.9,3,3
1715_37,37,37,holder.subtitle.setText(textSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,2,0.82,2,2
1715_38,38,38,holder.root.setOnClickListener(textSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,2,0.7,1,1
1715_39,39,39,} else if(setting instanceof ButtonSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.59,0,0
1715_40,40,40,ButtonSetting buttonSetting = (ButtonSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.68,0,0
1715_41,41,41,holder.button.setText(buttonSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,2,0.77,1,0
1715_42,42,42,holder.root.setOnClickListener(buttonSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.59,2,1
1715_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,0,0.19,3,2
1715_44,44,44,IconSetting iconSetting = (IconSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.71,4,3
1715_45,45,45,holder.icon.setImageDrawable(iconSetting.icon);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.62,5,4
1715_46,46,46,holder.root.setOnClickListener(iconSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,2,0,1,0.61,6,5
1715_47,47,47,holder.title.setText(iconSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,2,0,2,0.74,7,6
1715_48,48,54,"if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,5,1,7,1,1,0,0,4,2,2,0,2,0.69,8,7
1715_49,49,49,holder.subtitle.setText(iconSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,2,0.75,9,8
1715_50,50,50,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.59,10,9
1715_51,51,51,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,0,0.19,11,10
1715_52,52,52,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,2,0.76,12,11
1715_53,53,53,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,2,0,1,0.59,13,12
1716_1,1,2,"    @Override
public void onBindViewHolder(@NonNull final SpringboardWidgetAdapter.ViewHolder holder, int position) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,1,0,0,0.46,41,30
1716_3,3,3,BaseSetting setting = settings.get(position);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.33,40,29
1716_4,4,55,"if (setting instanceof HeaderSetting) {
holder.title.setText(((HeaderSetting) setting).title);
final HeaderSetting headerSetting = (HeaderSetting) setting;
if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);
} else if (setting instanceof SwitchSetting) {
final SwitchSetting switchSetting = (SwitchSetting) setting;

CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};

CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);
holder.sw.setOnCheckedChangeListener(mListener);


holder.sw.setChecked(switchSetting.isChecked);
holder.title.setText(switchSetting.title);
holder.title.setSelected(true);
if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
} else if(setting instanceof TextSetting) {
TextSetting textSetting = (TextSetting) setting;
holder.subtitle.setText(textSetting.text);
holder.root.setOnClickListener(textSetting.onClickListener);
} else if(setting instanceof ButtonSetting) {
ButtonSetting buttonSetting = (ButtonSetting) setting;
holder.button.setText(buttonSetting.text);
holder.root.setOnClickListener(buttonSetting.onClickListener);
} else {
IconSetting iconSetting = (IconSetting) setting;
holder.icon.setImageDrawable(iconSetting.icon);
holder.root.setOnClickListener(iconSetting.onClickListener);
holder.title.setText(iconSetting.title);
if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
}",1,0,0,0,0,0,0,0,0,38,3,52,0,1,0,0,6,3,1,0,4,0.72,0,0
1716_5,5,5,holder.title.setText(((HeaderSetting) setting).title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.59,38,27
1716_6,6,6,final HeaderSetting headerSetting = (HeaderSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.32,37,26
1716_7,7,8,"if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,6,3,1,0,2,0.61,35,24
1716_8,8,8,holder.root.setOnLongClickListener(headerSetting.onLongClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,2,0.61,35,24
1716_9,9,9,} else if (setting instanceof SwitchSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.38,34,23
1716_10,10,10,final SwitchSetting switchSetting = (SwitchSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,3,1,0,0,0.33,33,22
1716_12,12,18,"CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};",0,0,0,0,0,1,0,0,0,0,2,7,0,0,1,1,6,3,1,0,1,0.52,25,21
1716_20,20,20,"CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,1,0,1,0.59,23,20
1716_21,21,21,holder.sw.setOnCheckedChangeListener(mListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,3,1,0,1,0.56,22,19
1716_24,24,24,holder.sw.setChecked(switchSetting.isChecked);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,3,1,0,0,0.36,19,18
1716_25,25,25,holder.title.setText(switchSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.6,18,17
1716_26,26,26,holder.title.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,3,1,0,1,0.56,17,16
1716_27,27,34,"if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,6,1,8,1,0,0,0,6,3,1,0,0,0.54,9,9
1716_28,28,28,holder.subtitle.setText(switchSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.55,15,14
1716_29,29,29,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.55,14,13
1716_30,30,30,holder.subtitle.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.51,13,12
1716_31,31,31,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.25,12,11
1716_32,32,32,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.56,11,10
1716_33,33,33,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.55,10,9
1716_35,35,35,} else if(setting instanceof TextSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.41,8,8
1716_36,36,36,TextSetting textSetting = (TextSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.41,7,7
1716_37,37,37,holder.subtitle.setText(textSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.54,6,6
1716_38,38,38,holder.root.setOnClickListener(textSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,2,0.66,5,5
1716_39,39,39,} else if(setting instanceof ButtonSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.45,4,4
1716_40,40,40,ButtonSetting buttonSetting = (ButtonSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.48,3,3
1716_41,41,41,holder.button.setText(buttonSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.5,2,2
1716_42,42,42,holder.root.setOnClickListener(buttonSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,2,0.68,1,1
1716_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.25,0,0
1716_44,44,44,IconSetting iconSetting = (IconSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.64,0,0
1716_45,45,45,holder.icon.setImageDrawable(iconSetting.icon);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.65,1,0
1716_46,46,46,holder.root.setOnClickListener(iconSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,3,0.79,2,1
1716_47,47,47,holder.title.setText(iconSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,1,0,2,0.71,3,2
1716_48,48,54,"if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,5,1,7,1,1,0,0,6,3,1,0,1,0.62,4,3
1716_49,49,49,holder.subtitle.setText(iconSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.65,5,4
1716_50,50,50,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.55,6,5
1716_51,51,51,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.25,7,6
1716_52,52,52,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.56,8,7
1716_53,53,53,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.55,9,8
1717_1,1,2,"    @Override
public void onBindViewHolder(@NonNull final SpringboardWidgetAdapter.ViewHolder holder, int position) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.46,45,34
1717_3,3,3,BaseSetting setting = settings.get(position);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.32,44,33
1717_4,4,55,"if (setting instanceof HeaderSetting) {
holder.title.setText(((HeaderSetting) setting).title);
final HeaderSetting headerSetting = (HeaderSetting) setting;
if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);
} else if (setting instanceof SwitchSetting) {
final SwitchSetting switchSetting = (SwitchSetting) setting;

CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};

CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);
holder.sw.setOnCheckedChangeListener(mListener);


holder.sw.setChecked(switchSetting.isChecked);
holder.title.setText(switchSetting.title);
holder.title.setSelected(true);
if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
} else if(setting instanceof TextSetting) {
TextSetting textSetting = (TextSetting) setting;
holder.subtitle.setText(textSetting.text);
holder.root.setOnClickListener(textSetting.onClickListener);
} else if(setting instanceof ButtonSetting) {
ButtonSetting buttonSetting = (ButtonSetting) setting;
holder.button.setText(buttonSetting.text);
holder.root.setOnClickListener(buttonSetting.onClickListener);
} else {
IconSetting iconSetting = (IconSetting) setting;
holder.icon.setImageDrawable(iconSetting.icon);
holder.root.setOnClickListener(iconSetting.onClickListener);
holder.title.setText(iconSetting.title);
if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}
}",1,0,0,0,0,0,0,0,0,38,3,52,0,1,0,0,3,3,0,0,1,0.54,0,0
1717_5,5,5,holder.title.setText(((HeaderSetting) setting).title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.51,42,31
1717_6,6,6,final HeaderSetting headerSetting = (HeaderSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.31,41,30
1717_7,7,8,"if (headerSetting.onLongClickListener != null)
holder.root.setOnLongClickListener(headerSetting.onLongClickListener);",1,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,3,3,0,0,0,0.37,39,28
1717_8,8,8,holder.root.setOnLongClickListener(headerSetting.onLongClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.38,39,28
1717_9,9,9,} else if (setting instanceof SwitchSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.37,38,27
1717_10,10,10,final SwitchSetting switchSetting = (SwitchSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.32,37,26
1717_12,12,18,"CompoundButton.OnCheckedChangeListener mOnCheckedListener = new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
switchSetting.isChecked = isChecked;
Logger.debug(""SpringboardWidgetAdapter mOnCheckedListener isChecked: "" + isChecked);
}
};",0,0,0,0,0,1,0,0,0,0,2,7,0,0,1,1,3,3,0,0,0,0.44,29,25
1717_20,20,20,"CompoundButton.OnCheckedChangeListener mListener = new CompositeListener(switchSetting.changeListener, mOnCheckedListener);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.41,27,24
1717_21,21,21,holder.sw.setOnCheckedChangeListener(mListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.37,26,23
1717_24,24,24,holder.sw.setChecked(switchSetting.isChecked);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.34,23,22
1717_25,25,25,holder.title.setText(switchSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.52,22,21
1717_26,26,26,holder.title.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.49,21,20
1717_27,27,34,"if (switchSetting.subtitle != null) {
holder.subtitle.setText(switchSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
holder.subtitle.setSelected(true);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,6,1,8,1,0,0,0,3,3,0,0,1,0.56,13,13
1717_28,28,28,holder.subtitle.setText(switchSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.58,19,18
1717_29,29,29,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.56,18,17
1717_30,30,30,holder.subtitle.setSelected(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.54,17,16
1717_31,31,31,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,16,15
1717_32,32,32,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.58,15,14
1717_33,33,33,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.56,14,13
1717_35,35,35,} else if(setting instanceof TextSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.4,12,12
1717_36,36,36,TextSetting textSetting = (TextSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.39,11,11
1717_37,37,37,holder.subtitle.setText(textSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.56,10,10
1717_38,38,38,holder.root.setOnClickListener(textSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.41,9,9
1717_39,39,39,} else if(setting instanceof ButtonSetting) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.43,8,8
1717_40,40,40,ButtonSetting buttonSetting = (ButtonSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.45,7,7
1717_41,41,41,holder.button.setText(buttonSetting.text);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.47,6,6
1717_42,42,42,holder.root.setOnClickListener(buttonSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.44,5,5
1717_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,4,4
1717_44,44,44,IconSetting iconSetting = (IconSetting) setting;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.47,3,3
1717_45,45,45,holder.icon.setImageDrawable(iconSetting.icon);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.5,2,2
1717_46,46,46,holder.root.setOnClickListener(iconSetting.onClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.45,1,1
1717_47,47,47,holder.title.setText(iconSetting.title);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,3,0,0,0,0.55,0,0
1717_48,48,54,"if (iconSetting.subtitle != null) {
holder.subtitle.setText(iconSetting.subtitle);
holder.subtitle.setVisibility(View.VISIBLE);
} else {
holder.subtitle.setText("""");
holder.subtitle.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,5,1,7,1,1,0,0,3,3,0,0,1,0.57,0,0
1717_49,49,49,holder.subtitle.setText(iconSetting.subtitle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.61,1,0
1717_50,50,50,holder.subtitle.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.56,2,1
1717_51,51,51,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.3,3,2
1717_52,52,52,"holder.subtitle.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.58,4,3
1717_53,53,53,holder.subtitle.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.56,5,4
6754_1,1,1,"public static void removeCustomNotification(String key, Context context) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,1,0.48,1,1
6754_2,2,2,NotificationData notificationData = NotificationStore.getCustomNotification(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,1,0,2,0.67,0,0
6754_3,3,9,"if (notificationData == null)
DeviceUtil.notificationCounter(context, -1,""NotificationWearActivity notification is null (del action will not be send)"");
else{
sendRequestDeleteNotification(key, notificationData);
customNotifications.remove(key);
keyMap.remove(key);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,1,0,0,9,5,1,0,7,0.82,0,0
6754_4,4,4,"DeviceUtil.notificationCounter(context, -1,""NotificationWearActivity notification is null (del action will not be send)"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,6,0.79,1,0
6754_5,5,5,else{,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,0,0.24,2,1
6754_6,6,6,"sendRequestDeleteNotification(key, notificationData);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,1,0,3,0.71,3,2
6754_7,7,7,customNotifications.remove(key);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,5,1,0,1,0.54,4,3
6754_8,8,8,keyMap.remove(key);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,5,1,0,0,0.36,5,4
6755_1,1,1,"public static void removeCustomNotification(String key, Context context) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,3,0.74,4,4
6755_2,2,2,NotificationData notificationData = NotificationStore.getCustomNotification(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,2,0.69,3,3
6755_3,3,9,"if (notificationData == null)
DeviceUtil.notificationCounter(context, -1,""NotificationWearActivity notification is null (del action will not be send)"");
else{
sendRequestDeleteNotification(key, notificationData);
customNotifications.remove(key);
keyMap.remove(key);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,1,0,0,3,3,0,0,3,0.74,0,0
6755_4,4,4,"DeviceUtil.notificationCounter(context, -1,""NotificationWearActivity notification is null (del action will not be send)"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.53,1,1
6755_5,5,5,else{,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.09,0,0
6755_6,6,6,"sendRequestDeleteNotification(key, notificationData);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.54,0,0
6755_7,7,7,customNotifications.remove(key);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,3,0.9,1,0
6755_8,8,8,keyMap.remove(key);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.44,2,1
2853_1,1,1,private void showTimeSinceLastCharge() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,2,0.59,1,1
2853_2,2,2,widgetSettings.reload();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.36,0,0
2853_3,3,3,"long lastChargeDate = widgetSettings.get(Constants.PREF_DATE_LAST_CHARGE, 0L);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,3,0,0,4,0.81,0,0
2853_5,5,5,"StringBuilder dateDiff = new StringBuilder("""");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,0,0,1,0.55,2,1
2853_6,6,25,"if (lastChargeDate != 0L) {
long diffInMillies = System.currentTimeMillis() - lastChargeDate;
List<TimeUnit> units = new ArrayList<>(EnumSet.allOf(TimeUnit.class));
Collections.reverse(units);
long millisRest = diffInMillies;
for (TimeUnit unit : units) {
long diff = unit.convert(millisRest, TimeUnit.MILLISECONDS);
long diffInMilliesForUnit = unit.toMillis(diff);
millisRest = millisRest - diffInMilliesForUnit;
if (unit.equals(TimeUnit.DAYS) && diff != 0) {
dateDiff.append(diff).append(""d : "");
} else if (unit.equals(TimeUnit.HOURS) && diff != 0) {
dateDiff.append(diff).append(""h : "");
} else if (unit.equals(TimeUnit.MINUTES)) {
dateDiff.append(diff).append(""min"");
break;
}
}
dateDiff.append(""\n"").append(mContext.getResources().getText(R.string.last_charge));
} else dateDiff.append(mContext.getResources().getText(R.string.last_charge_no_info));",1,0,0,0,0,0,0,0,0,17,3,20,0,1,0,1,5,3,0,0,4,0.71,3,1
2853_7,7,7,long diffInMillies = System.currentTimeMillis() - lastChargeDate;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,0,0,3,0.66,4,2
2853_8,8,8,List<TimeUnit> units = new ArrayList<>(EnumSet.allOf(TimeUnit.class));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.39,5,3
2853_9,9,9,Collections.reverse(units);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.43,6,4
2853_10,10,10,long millisRest = diffInMillies;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.41,7,5
2853_11,11,23,"for (TimeUnit unit : units) {
long diff = unit.convert(millisRest, TimeUnit.MILLISECONDS);
long diffInMilliesForUnit = unit.toMillis(diff);
millisRest = millisRest - diffInMilliesForUnit;
if (unit.equals(TimeUnit.DAYS) && diff != 0) {
dateDiff.append(diff).append(""d : "");
} else if (unit.equals(TimeUnit.HOURS) && diff != 0) {
dateDiff.append(diff).append(""h : "");
} else if (unit.equals(TimeUnit.MINUTES)) {
dateDiff.append(diff).append(""min"");
break;
}
}",0,0,0,1,0,0,0,0,0,10,2,13,1,1,0,0,5,3,0,0,1,0.5,8,6
2853_12,12,12,"long diff = unit.convert(millisRest, TimeUnit.MILLISECONDS);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.42,9,7
2853_13,13,13,long diffInMilliesForUnit = unit.toMillis(diff);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.4,10,8
2853_14,14,14,millisRest = millisRest - diffInMilliesForUnit;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.39,11,9
2853_15,15,22,"if (unit.equals(TimeUnit.DAYS) && diff != 0) {
dateDiff.append(diff).append(""d : "");
} else if (unit.equals(TimeUnit.HOURS) && diff != 0) {
dateDiff.append(diff).append(""h : "");
} else if (unit.equals(TimeUnit.MINUTES)) {
dateDiff.append(diff).append(""min"");
break;
}",1,0,0,0,0,0,0,0,0,6,1,8,0,0,0,0,5,3,0,0,1,0.51,12,10
2853_16,16,16,"dateDiff.append(diff).append(""d : "");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.58,13,11
2853_17,17,17,} else if (unit.equals(TimeUnit.HOURS) && diff != 0) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.38,14,12
2853_18,18,18,"dateDiff.append(diff).append(""h : "");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.56,15,13
2853_19,19,19,} else if (unit.equals(TimeUnit.MINUTES)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.39,16,14
2853_20,20,20,"dateDiff.append(diff).append(""min"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.55,17,15
2853_21,21,21,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,3,0,0,0,0.21,18,16
2853_24,24,24,"dateDiff.append(""\n"").append(mContext.getResources().getText(R.string.last_charge));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,3,0,0,4,0.76,21,18
2853_25,25,25,} else dateDiff.append(mContext.getResources().getText(R.string.last_charge_no_info));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,0,0,4,0.75,22,18
2853_27,27,27,final String timeSLC = dateDiff.toString();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,0,0,1,0.53,24,20
2853_28,28,28,"Toast.makeText(mContext, timeSLC, Toast.LENGTH_LONG).show();",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.36,25,20
2984_1,1,1,private void showAppInfo(final int itemChosen) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.51,47,30
2984_2,2,2,"setButtonTheme(buttonClose, getResources().getString(R.string.close));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,0,0,0,0.37,46,29
2984_3,3,3,"setButtonTheme(buttonClear, getResources().getString(R.string.clear_data));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,0,0,0,0.37,45,28
2984_4,4,4,"setButtonTheme(buttonUninstall, getResources().getString(R.string.uninstall));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,0,0,0,0.4,44,27
2984_5,5,5,"setButtonTheme(buttonQuickLaunch, getResources().getString(R.string.quick_launch));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,0,0,2,0.63,43,26
2984_6,6,6,listView.setGreedyTouchMode(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,4,0,0,1,0.48,42,25
2984_8,8,8,final String pkgName = appInfoList.get(itemChosen).getPackageName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,4,0,0,2,0.58,40,24
2984_9,9,9,appChosen = itemChosen;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,4,0,0,1,0.55,39,23
2984_11,11,11,appIcon.setImageDrawable(appInfoList.get(itemChosen).getIcon());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,5,4,0,0,2,0.59,37,22
2984_12,12,12,appName.setText(appInfoList.get(itemChosen).getAppName());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,0,0,2,0.6,36,21
2984_13,13,13,appPackage.setText(pkgName);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,0,0,1,0.52,35,20
2984_14,14,14,appVersion.setText(appInfoList.get(itemChosen).getVersionName());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,0,0,2,0.59,34,19
2984_15,15,15,appSize.setText(appInfoList.get(itemChosen).getSize());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,5,4,0,0,2,0.57,33,18
2984_17,17,17,buttonClose.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,0,0,0,0.35,31,17
2984_18,18,19,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,0,0,0,0.38,29,16
2984_20,20,20,"Logger.info(""WearAppsFragment showAppInfo buttonClose"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.51,28,15
2984_21,21,21,scrollView.post(new Runnable() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.34,27,14
2984_22,22,22,public void run() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.31,26,13
2984_23,23,23,"Logger.debug(""WearAppsFragment showAppInfo scrollToTop"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.54,25,12
2984_24,24,24,"scrollView.scrollTo(0, scrollView.getTop());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.36,24,11
2984_27,27,27,infoView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,0,0,0,0.42,21,10
2984_28,28,28,wearAppsFrameLayout.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,0,0,1,0.56,20,9
2984_29,29,29,listView.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,0,0,1,0.54,19,8
2984_33,33,33,buttonUninstall.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,0,0,0,0.38,15,7
2984_34,34,35,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,0,0,0,0.38,13,6
2984_36,36,36,"Logger.info(""WearAppsFragment showAppInfo buttonUninstall"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.52,12,5
2984_37,37,37,"uninstallPackage(mContext, pkgName);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.43,11,4
2984_41,41,41,buttonClear.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,0,0,0,0.35,7,3
2984_42,42,43,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,0,0,0,0.38,5,2
2984_44,44,44,"Logger.info(""WearAppsFragment showAppInfo buttonClear"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.51,4,1
2984_45,45,45,"clearPackage(mContext, pkgName);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.41,3,0
2984_49,49,60,"if((isStratos || isStratos3) && quickLaunchApk.contains(pkgName)) {
buttonQuickLaunch.setVisibility(View.VISIBLE);
buttonQuickLaunch.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
Logger.info(""WearAppsFragment showAppInfo buttonClear"");
quickLaunchPackage(mContext, pkgName);
}
});
}else{
buttonQuickLaunch.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,7,3,12,0,0,1,1,5,4,0,0,3,0.66,0,0
2984_50,50,50,buttonQuickLaunch.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.67,1,0
2984_51,51,51,buttonQuickLaunch.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.6,2,1
2984_52,52,53,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,0,0,0,0.38,3,2
2984_54,54,54,"Logger.info(""WearAppsFragment showAppInfo buttonClear"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.51,5,4
2984_55,55,55,"quickLaunchPackage(mContext, pkgName);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.66,6,4
2984_58,58,58,}else{,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.25,9,6
2984_59,59,59,buttonQuickLaunch.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.66,10,6
2984_62,62,62,wearAppsFrameLayout.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,5,4,0,0,1,0.55,13,8
2984_63,63,63,listView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,0,0,1,0.54,14,8
2984_64,64,64,infoView.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,4,0,0,0,0.42,15,9
2985_1,1,1,private void showAppInfo(final int itemChosen) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.47,48,31
2985_2,2,2,"setButtonTheme(buttonClose, getResources().getString(R.string.close));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,1,0.51,47,30
2985_3,3,3,"setButtonTheme(buttonClear, getResources().getString(R.string.clear_data));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,1,0.51,46,29
2985_4,4,4,"setButtonTheme(buttonUninstall, getResources().getString(R.string.uninstall));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,1,0.52,45,28
2985_5,5,5,"setButtonTheme(buttonQuickLaunch, getResources().getString(R.string.quick_launch));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,3,0.74,44,27
2985_6,6,6,listView.setGreedyTouchMode(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.41,43,26
2985_8,8,8,final String pkgName = appInfoList.get(itemChosen).getPackageName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.44,41,25
2985_9,9,9,appChosen = itemChosen;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.46,40,24
2985_11,11,11,appIcon.setImageDrawable(appInfoList.get(itemChosen).getIcon());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,4,3,0,0,0,0.45,38,23
2985_12,12,12,appName.setText(appInfoList.get(itemChosen).getAppName());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.44,37,22
2985_13,13,13,appPackage.setText(pkgName);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.48,36,21
2985_14,14,14,appVersion.setText(appInfoList.get(itemChosen).getVersionName());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.44,35,20
2985_15,15,15,appSize.setText(appInfoList.get(itemChosen).getSize());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,3,0,0,0,0.43,34,19
2985_17,17,17,buttonClose.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.53,32,18
2985_18,18,19,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.43,30,17
2985_20,20,20,"Logger.info(""WearAppsFragment showAppInfo buttonClose"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.58,29,16
2985_21,21,21,scrollView.post(new Runnable() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.37,28,15
2985_22,22,22,public void run() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.32,27,14
2985_23,23,23,"Logger.debug(""WearAppsFragment showAppInfo scrollToTop"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.5,26,13
2985_24,24,24,"scrollView.scrollTo(0, scrollView.getTop());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.37,25,12
2985_27,27,27,infoView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.44,22,11
2985_28,28,28,wearAppsFrameLayout.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.52,21,10
2985_29,29,29,listView.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.45,20,9
2985_33,33,33,buttonUninstall.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.54,16,8
2985_34,34,35,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.43,14,7
2985_36,36,36,"Logger.info(""WearAppsFragment showAppInfo buttonUninstall"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.58,13,6
2985_37,37,37,"uninstallPackage(mContext, pkgName);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.4,12,5
2985_41,41,41,buttonClear.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,0,0,1,0.53,8,4
2985_42,42,43,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.43,6,3
2985_44,44,44,"Logger.info(""WearAppsFragment showAppInfo buttonClear"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.57,5,2
2985_45,45,45,"clearPackage(mContext, pkgName);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,4,1
2985_49,49,60,"if((isStratos || isStratos3) && quickLaunchApk.contains(pkgName)) {
buttonQuickLaunch.setVisibility(View.VISIBLE);
buttonQuickLaunch.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
Logger.info(""WearAppsFragment showAppInfo buttonClear"");
quickLaunchPackage(mContext, pkgName);
}
});
}else{
buttonQuickLaunch.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,7,3,12,0,0,1,1,4,3,0,0,3,0.74,0,0
2985_50,50,50,buttonQuickLaunch.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.79,0,0
2985_51,51,51,buttonQuickLaunch.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.73,1,0
2985_52,52,53,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.43,2,1
2985_54,54,54,"Logger.info(""WearAppsFragment showAppInfo buttonClear"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.57,4,3
2985_55,55,55,"quickLaunchPackage(mContext, pkgName);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.64,5,3
2985_58,58,58,}else{,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.23,8,5
2985_59,59,59,buttonQuickLaunch.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.78,9,5
2985_62,62,62,wearAppsFrameLayout.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,4,3,0,0,0,0.51,12,7
2985_63,63,63,listView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.45,13,7
2985_64,64,64,infoView.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,0,0.44,14,8
2986_1,1,1,private void showAppInfo(final int itemChosen) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.45,57,37
2986_2,2,2,"setButtonTheme(buttonClose, getResources().getString(R.string.close));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.54,56,36
2986_3,3,3,"setButtonTheme(buttonClear, getResources().getString(R.string.clear_data));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.53,55,35
2986_4,4,4,"setButtonTheme(buttonUninstall, getResources().getString(R.string.uninstall));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.57,54,34
2986_5,5,5,"setButtonTheme(buttonQuickLaunch, getResources().getString(R.string.quick_launch));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,2,0.68,53,33
2986_6,6,6,listView.setGreedyTouchMode(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.42,52,32
2986_8,8,8,final String pkgName = appInfoList.get(itemChosen).getPackageName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.41,50,31
2986_9,9,9,appChosen = itemChosen;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.47,49,30
2986_11,11,11,appIcon.setImageDrawable(appInfoList.get(itemChosen).getIcon());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,3,0,0,0,0.45,47,29
2986_12,12,12,appName.setText(appInfoList.get(itemChosen).getAppName());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.45,46,28
2986_13,13,13,appPackage.setText(pkgName);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.44,45,27
2986_14,14,14,appVersion.setText(appInfoList.get(itemChosen).getVersionName());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.42,44,26
2986_15,15,15,appSize.setText(appInfoList.get(itemChosen).getSize());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,3,0,0,0,0.44,43,25
2986_17,17,17,buttonClose.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.55,41,24
2986_18,18,19,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.46,39,23
2986_20,20,20,"Logger.info(""WearAppsFragment showAppInfo buttonClose"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.59,38,22
2986_21,21,21,scrollView.post(new Runnable() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.36,37,21
2986_22,22,22,public void run() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.33,36,20
2986_23,23,23,"Logger.debug(""WearAppsFragment showAppInfo scrollToTop"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.48,35,19
2986_24,24,24,"scrollView.scrollTo(0, scrollView.getTop());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.37,34,18
2986_27,27,27,infoView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.42,31,17
2986_28,28,28,wearAppsFrameLayout.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.5,30,16
2986_29,29,29,listView.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.43,29,15
2986_33,33,33,buttonUninstall.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.58,25,14
2986_34,34,35,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.46,23,13
2986_36,36,36,"Logger.info(""WearAppsFragment showAppInfo buttonUninstall"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.6,22,12
2986_37,37,37,"uninstallPackage(mContext, pkgName);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.36,21,11
2986_41,41,41,buttonClear.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.55,17,10
2986_42,42,43,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.46,15,9
2986_44,44,44,"Logger.info(""WearAppsFragment showAppInfo buttonClear"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.59,14,8
2986_45,45,45,"clearPackage(mContext, pkgName);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,13,7
2986_49,49,60,"if((isStratos || isStratos3) && quickLaunchApk.contains(pkgName)) {
buttonQuickLaunch.setVisibility(View.VISIBLE);
buttonQuickLaunch.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
Logger.info(""WearAppsFragment showAppInfo buttonClear"");
quickLaunchPackage(mContext, pkgName);
}
});
}else{
buttonQuickLaunch.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,7,3,12,0,0,1,1,3,3,0,0,2,0.67,0,0
2986_50,50,50,buttonQuickLaunch.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.72,8,5
2986_51,51,51,buttonQuickLaunch.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.69,7,4
2986_52,52,53,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.46,5,3
2986_54,54,54,"Logger.info(""WearAppsFragment showAppInfo buttonClear"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.59,4,2
2986_55,55,55,"quickLaunchPackage(mContext, pkgName);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.53,3,1
2986_58,58,58,}else{,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.25,0,0
2986_59,59,59,buttonQuickLaunch.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.71,0,0
2986_62,62,62,wearAppsFrameLayout.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,3,0,0,0,0.5,3,1
2986_63,63,63,listView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.43,4,1
2986_64,64,64,infoView.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.41,5,2
2987_1,1,1,"public void uninstallPackage(Context context, String packageName) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.56,4,1
2987_3,3,3,"Logger.info(""WearAppsFragment uninstallPackage packageName: "" + packageName);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,5,0,0,1,0.6,2,0
2987_6,6,7,"if (packageName.equals(""com.amazmod.service""))
isAmazModUninstall = true;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,5,5,0,0,4,0.74,0,0
2987_7,7,7,isAmazModUninstall = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,5,0,0,2,0.61,1,0
2987_9,9,9,Intent intent = new Intent(Intent.ACTION_UNINSTALL_PACKAGE);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,1,0.49,3,2
2987_10,10,10,"intent.setData(Uri.parse(""package:"" + packageName));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.48,4,2
2987_11,11,11,"intent.putExtra(Intent.EXTRA_RETURN_RESULT, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.28,5,3
2987_12,12,12,"startActivityForResult(intent, UNINSTALL_REQUEST_CODE);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.4,6,4
2988_1,1,1,"    public void quickLaunchPackage(Context context, String packageName) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.39,1,1
2988_2,2,2,"Logger.info(""WearAppsFragment quickLaunchPackage packageName: "" + packageName);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.48,0,0
2988_3,3,3,int pos = quickLaunchApk.indexOf(packageName);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.47,0,0
2988_4,4,4,final String command = quickLaunchCommands.get(pos);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,4,2,1,0,1,0.5,1,0
2988_6,6,6,new AlertDialog.Builder(getActivity()),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,1,0.46,3,2
2988_7,7,7,.setTitle(getResources().getString(R.string.quick_launch)),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,1,0.53,4,2
2988_8,8,8,.setMessage(getResources().getString(R.string.confirmation)),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,1,0.47,5,3
2988_9,9,9,".setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.48,6,4
2988_10,10,10,"public void onClick(DialogInterface dialog, int whichButton) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.36,7,5
2988_11,11,11,"Settings.System.putString(context.getContentResolver(), LONG_KEY_SETTINGS, command);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.43,8,6
2988_12,12,12,"Toast.makeText(mContext, mContext.getResources().getString(R.string.quick_launch_description), Toast.LENGTH_SHORT).show();",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.49,9,7
2988_14,14,14,".setNegativeButton(android.R.string.no, null).show();",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.39,11,9
2989_1,1,1,"    public void quickLaunchPackage(Context context, String packageName) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.36,2,2
2989_2,2,2,"Logger.info(""WearAppsFragment quickLaunchPackage packageName: "" + packageName);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.38,1,1
2989_3,3,3,int pos = quickLaunchApk.indexOf(packageName);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.38,0,0
2989_4,4,4,final String command = quickLaunchCommands.get(pos);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,3,2,1,0,2,0.67,0,0
2989_6,6,6,new AlertDialog.Builder(getActivity()),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,1,0,1,0.53,2,1
2989_7,7,7,.setTitle(getResources().getString(R.string.quick_launch)),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,1,0,1,0.52,3,1
2989_8,8,8,.setMessage(getResources().getString(R.string.confirmation)),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,1,0,1,0.53,4,2
2989_9,9,9,".setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.34,5,3
2989_10,10,10,"public void onClick(DialogInterface dialog, int whichButton) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.34,6,4
2989_11,11,11,"Settings.System.putString(context.getContentResolver(), LONG_KEY_SETTINGS, command);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,2,0.61,7,5
2989_12,12,12,"Toast.makeText(mContext, mContext.getResources().getString(R.string.quick_launch_description), Toast.LENGTH_SHORT).show();",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.51,8,6
2989_14,14,14,".setNegativeButton(android.R.string.no, null).show();",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.38,10,8
6824_1,1,2,"@Override
public void onListenerConnected() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,4,2,0,0,0.44,5,3
6824_3,3,3,super.onListenerConnected();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,2,0,0,0.28,4,2
6824_4,4,4,"Logger.debug(""onListenerConnected"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,4,2,0,0,0.36,3,1
6824_6,6,6,startPersistentNotification();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,4,2,0,0,0.34,1,0
6824_8,8,8,cancelPendingJobs(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,4,2,0,3,0.68,0,0
6824_9,9,9,"scheduleJob(0, 0, null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,2,0,2,0.5,1,0
6825_1,1,2,"@Override
public void onNotificationPosted(StatusBarNotification statusBarNotification) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,1,0.53,47,35
6825_4,4,4,String notificationPackage = statusBarNotification.getPackageName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.48,45,34
6825_6,6,6,"String notificationTxt = """";",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.56,43,33
6825_7,7,7,CharSequence charSequence = statusBarNotification.getNotification().extras.getCharSequence(Notification.EXTRA_TEXT);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.47,42,32
6825_8,8,10,"if (charSequence != null) {
notificationTxt = charSequence.toString();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,3,0,0,1,0.44,39,30
6825_9,9,9,notificationTxt = charSequence.toString();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.48,40,30
6825_12,12,38,"if (!isPackageAllowed(notificationPackage)) {
Logger.debug(""[Notification Blocked] Notifications from {} are blocked."", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_PACKAGE);
return;
}else if (isPackageSilenced(notificationPackage)) {
Logger.debug(""[Notification Blocked] Notifications from {} are currently silenced."",notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SILENCE);
return;
}else if (isPackageFiltered(statusBarNotification)) {
Logger.debug(""[Notification Blocked] Notifications from {} was blocked because of content filters."", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_TEXT);
return;
}else if (isNotificationsDisabled()) {
Logger.debug(""[Notification Blocked] All notifications are disabled (disabled, DND, Driving etc). {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_NOTIFICATIONS_DISABLED);
return;
}else if (isNotificationsDisabledWhenScreenOn()) {
if (!Screen.isDeviceLocked(this)) {
Logger.debug(""[Notification Blocked] Device is unlocked. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENON);
return;
} else if (!isNotificationsEnabledWhenScreenLocked()) {
Logger.debug(""[Notification Blocked] Device is in lock-screen. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENLOCKED);
return;
}
}",1,0,0,0,0,0,0,0,0,24,3,27,0,0,1,1,3,3,0,0,2,0.62,11,5
6825_13,13,13,"Logger.debug(""[Notification Blocked] Notifications from {} are blocked."", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.5,36,28
6825_14,14,14,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_PACKAGE);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,2,0.61,35,27
6825_15,15,15,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.13,34,26
6825_16,16,16,}else if (isPackageSilenced(notificationPackage)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.41,33,25
6825_17,17,17,"Logger.debug(""[Notification Blocked] Notifications from {} are currently silenced."",notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.48,32,24
6825_18,18,18,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SILENCE);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,2,0.62,31,23
6825_19,19,19,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.13,30,22
6825_20,20,20,}else if (isPackageFiltered(statusBarNotification)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.44,29,21
6825_21,21,21,"Logger.debug(""[Notification Blocked] Notifications from {} was blocked because of content filters."", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.46,28,20
6825_22,22,22,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_TEXT);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,2,0.6,27,19
6825_23,23,23,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.13,26,18
6825_24,24,24,}else if (isNotificationsDisabled()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.46,25,17
6825_25,25,25,"Logger.debug(""[Notification Blocked] All notifications are disabled (disabled, DND, Driving etc). {}"", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.45,24,16
6825_26,26,26,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_NOTIFICATIONS_DISABLED);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,2,0.64,23,15
6825_27,27,27,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.13,22,14
6825_28,28,28,}else if (isNotificationsDisabledWhenScreenOn()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.46,21,13
6825_29,29,37,"if (!Screen.isDeviceLocked(this)) {
Logger.debug(""[Notification Blocked] Device is unlocked. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENON);
return;
} else if (!isNotificationsEnabledWhenScreenLocked()) {
Logger.debug(""[Notification Blocked] Device is in lock-screen. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENLOCKED);
return;
}",1,0,0,0,0,0,0,0,0,7,2,9,0,0,0,0,3,3,0,0,2,0.62,12,5
6825_30,30,30,"Logger.debug(""[Notification Blocked] Device is unlocked. {}"", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.5,19,11
6825_31,31,31,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENON);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,2,0.63,18,10
6825_32,32,32,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.13,17,9
6825_33,33,33,} else if (!isNotificationsEnabledWhenScreenLocked()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.44,16,8
6825_34,34,34,"Logger.debug(""[Notification Blocked] Device is in lock-screen. {}"", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.49,15,7
6825_35,35,35,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENLOCKED);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,2,0.63,14,6
6825_36,36,36,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.13,13,5
6825_40,40,40,"Logger.debug(""[New Notification] Notification is posted: "" + statusBarNotification.getKey());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.5,9,4
6825_42,42,42,byte filterResult = filter(statusBarNotification);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.47,7,3
6825_44,44,44,"Logger.debug(""[New Notification] pkg: {}, filterResult: {}"", notificationPackage, ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.46,5,2
6825_46,46,94,"if (filterResult == Constants.FILTER_CONTINUE || filterResult == Constants.FILTER_UNGROUP || filterResult == Constants.FILTER_LOCALOK) {

StatusBarNotification sbn = null;

if (filterResult == Constants.FILTER_UNGROUP && Prefs.getBoolean(Constants.PREF_NOTIFICATIONS_ENABLE_UNGROUP, false)) {
int nextId = statusBarNotification.getId() + newUID();
sbn = new StatusBarNotification(notificationPackage, """", nextId,
statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());

if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());
if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");
} else {
grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});
}
}

if (sbn == null)
sbn = statusBarNotification;

if (isCustomUIEnabled())
sendNotificationWithCustomUI(filterResult, sbn);
else
sendNotificationWithStandardUI(filterResult, sbn);

storeForStats(notificationPackage, filterResult);

} else {
if (isRingingNotification(filterResult, notificationPackage)) {
Logger.debug(""[Ringing Notification] New notifications is a ringing notification: "" + ((char) (byte) filterResult));
handleCall(statusBarNotification, notificationPackage);

} else if (isMapsNotification(filterResult, notificationPackage)) {
Logger.debug(""[Maps Notification] New notifications is a MapsNotification: "" + ((char) (byte) filterResult));
mapNotification(statusBarNotification);

} else {
Logger.debug(""[New Notification] New notifications is blocked. (pkg: {}, marked as: {})"",notificationPackage, ((char) (byte) filterResult));
checkAndLog(notificationPackage, notificationTxt, filterResult);
}
}",1,0,0,0,0,0,0,0,0,30,4,49,0,0,1,0,3,3,0,0,3,0.7,0,0
6825_48,48,48,StatusBarNotification sbn = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.51,1,0
6825_50,50,69,"if (filterResult == Constants.FILTER_UNGROUP && Prefs.getBoolean(Constants.PREF_NOTIFICATIONS_ENABLE_UNGROUP, false)) {
int nextId = statusBarNotification.getId() + newUID();
sbn = new StatusBarNotification(notificationPackage, """", nextId,
statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());

if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());
if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");
} else {
grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});
}
}",1,0,0,0,0,0,0,0,0,12,3,20,0,0,1,1,3,3,0,0,2,0.61,0,0
6825_51,51,51,int nextId = statusBarNotification.getId() + newUID();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.45,1,0
6825_52,52,55,"sbn = new StatusBarNotification(notificationPackage, """", nextId,
statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());",0,0,0,0,0,0,0,0,0,0,0,4,0,1,0,1,3,3,0,0,1,0.49,2,1
6825_57,57,68,"if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());
if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");
} else {
grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});
}",1,0,0,0,0,0,0,0,0,9,2,12,0,0,1,0,3,3,0,0,2,0.59,7,3
6825_58,58,58,int[] grouped = grouped_notifications.get(statusBarNotification.getId());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,3,0,0,2,0.66,8,3
6825_59,59,65,"if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");",1,0,0,0,0,0,0,0,0,5,1,7,1,1,0,0,3,3,0,0,2,0.57,9,4
6825_60,60,60,int[] newArray = new int[grouped.length + 1];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.4,10,5
6825_61,61,61,"System.arraycopy(grouped, 0, newArray, 0, grouped.length);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.5,11,6
6825_62,62,62,newArray[newArray.length - 1] = nextId;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.24,12,7
6825_63,63,63,"grouped_notifications.put(statusBarNotification.getId(), newArray);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,2,0.62,13,8
6825_64,64,65,"} else
Logger.error(""grouped: could not create array"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,1,0.42,14,9
6825_66,66,66,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.09,16,11
6825_67,67,67,"grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.6,17,11
6825_71,71,72,"if (sbn == null)
sbn = statusBarNotification;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,3,3,0,0,1,0.51,21,13
6825_72,72,72,sbn = statusBarNotification;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.55,22,13
6825_74,74,77,"if (isCustomUIEnabled())
sendNotificationWithCustomUI(filterResult, sbn);
else
sendNotificationWithStandardUI(filterResult, sbn);",1,0,0,0,0,0,0,0,0,2,0,4,0,0,1,1,3,3,0,0,1,0.45,24,15
6825_75,75,75,"sendNotificationWithCustomUI(filterResult, sbn);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.47,25,15
6825_76,76,77,"else
sendNotificationWithStandardUI(filterResult, sbn);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,3,3,0,0,1,0.45,26,16
6825_79,79,79,"storeForStats(notificationPackage, filterResult);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.44,29,18
6825_81,81,81,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.09,31,19
6825_82,82,93,"if (isRingingNotification(filterResult, notificationPackage)) {
Logger.debug(""[Ringing Notification] New notifications is a ringing notification: "" + ((char) (byte) filterResult));
handleCall(statusBarNotification, notificationPackage);

} else if (isMapsNotification(filterResult, notificationPackage)) {
Logger.debug(""[Maps Notification] New notifications is a MapsNotification: "" + ((char) (byte) filterResult));
mapNotification(statusBarNotification);

} else {
Logger.debug(""[New Notification] New notifications is blocked. (pkg: {}, marked as: {})"",notificationPackage, ((char) (byte) filterResult));
checkAndLog(notificationPackage, notificationTxt, filterResult);
}",1,0,0,0,0,0,0,0,0,8,2,12,0,0,0,0,3,3,0,0,2,0.63,32,19
6825_83,83,83,"Logger.debug(""[Ringing Notification] New notifications is a ringing notification: "" + ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.5,33,20
6825_84,84,84,"handleCall(statusBarNotification, notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.5,34,21
6825_86,86,86,"} else if (isMapsNotification(filterResult, notificationPackage)) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.44,36,23
6825_87,87,87,"Logger.debug(""[Maps Notification] New notifications is a MapsNotification: "" + ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.5,37,23
6825_88,88,88,mapNotification(statusBarNotification);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.56,38,24
6825_90,90,90,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.09,40,26
6825_91,91,91,"Logger.debug(""[New Notification] New notifications is blocked. (pkg: {}, marked as: {})"",notificationPackage, ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.48,41,26
6825_92,92,92,"checkAndLog(notificationPackage, notificationTxt, filterResult);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,2,0.62,42,27
6826_1,1,2,"@Override
public void onNotificationPosted(StatusBarNotification statusBarNotification) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,1,0,0,0.22,55,39
6826_4,4,4,String notificationPackage = statusBarNotification.getPackageName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,1,1,0,1,0.52,53,38
6826_6,6,6,"String notificationTxt = """";",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,2,1,1,0,0,0.3,51,37
6826_7,7,7,CharSequence charSequence = statusBarNotification.getNotification().extras.getCharSequence(Notification.EXTRA_TEXT);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.58,50,36
6826_8,8,10,"if (charSequence != null) {
notificationTxt = charSequence.toString();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,2,1,1,0,0,0.38,47,34
6826_9,9,9,notificationTxt = charSequence.toString();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.38,48,34
6826_12,12,38,"if (!isPackageAllowed(notificationPackage)) {
Logger.debug(""[Notification Blocked] Notifications from {} are blocked."", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_PACKAGE);
return;
}else if (isPackageSilenced(notificationPackage)) {
Logger.debug(""[Notification Blocked] Notifications from {} are currently silenced."",notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SILENCE);
return;
}else if (isPackageFiltered(statusBarNotification)) {
Logger.debug(""[Notification Blocked] Notifications from {} was blocked because of content filters."", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_TEXT);
return;
}else if (isNotificationsDisabled()) {
Logger.debug(""[Notification Blocked] All notifications are disabled (disabled, DND, Driving etc). {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_NOTIFICATIONS_DISABLED);
return;
}else if (isNotificationsDisabledWhenScreenOn()) {
if (!Screen.isDeviceLocked(this)) {
Logger.debug(""[Notification Blocked] Device is unlocked. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENON);
return;
} else if (!isNotificationsEnabledWhenScreenLocked()) {
Logger.debug(""[Notification Blocked] Device is in lock-screen. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENLOCKED);
return;
}
}",1,0,0,0,0,0,0,0,0,24,3,27,0,0,1,1,2,1,1,0,0,0.33,19,9
6826_13,13,13,"Logger.debug(""[Notification Blocked] Notifications from {} are blocked."", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.3,44,32
6826_14,14,14,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_PACKAGE);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.3,43,31
6826_15,15,15,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.2,42,30
6826_16,16,16,}else if (isPackageSilenced(notificationPackage)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.31,41,29
6826_17,17,17,"Logger.debug(""[Notification Blocked] Notifications from {} are currently silenced."",notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.3,40,28
6826_18,18,18,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SILENCE);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.29,39,27
6826_19,19,19,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.2,38,26
6826_20,20,20,}else if (isPackageFiltered(statusBarNotification)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.3,37,25
6826_21,21,21,"Logger.debug(""[Notification Blocked] Notifications from {} was blocked because of content filters."", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.31,36,24
6826_22,22,22,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_TEXT);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.3,35,23
6826_23,23,23,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.2,34,22
6826_24,24,24,}else if (isNotificationsDisabled()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.2,33,21
6826_25,25,25,"Logger.debug(""[Notification Blocked] All notifications are disabled (disabled, DND, Driving etc). {}"", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.3,32,20
6826_26,26,26,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_NOTIFICATIONS_DISABLED);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.28,31,19
6826_27,27,27,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.2,30,18
6826_28,28,28,}else if (isNotificationsDisabledWhenScreenOn()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.2,29,17
6826_29,29,37,"if (!Screen.isDeviceLocked(this)) {
Logger.debug(""[Notification Blocked] Device is unlocked. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENON);
return;
} else if (!isNotificationsEnabledWhenScreenLocked()) {
Logger.debug(""[Notification Blocked] Device is in lock-screen. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENLOCKED);
return;
}",1,0,0,0,0,0,0,0,0,7,2,9,0,0,0,0,2,1,1,0,0,0.33,20,9
6826_30,30,30,"Logger.debug(""[Notification Blocked] Device is unlocked. {}"", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.34,27,15
6826_31,31,31,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENON);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.29,26,14
6826_32,32,32,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.2,25,13
6826_33,33,33,} else if (!isNotificationsEnabledWhenScreenLocked()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.23,24,12
6826_34,34,34,"Logger.debug(""[Notification Blocked] Device is in lock-screen. {}"", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.31,23,11
6826_35,35,35,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENLOCKED);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.29,22,10
6826_36,36,36,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.2,21,9
6826_40,40,40,"Logger.debug(""[New Notification] Notification is posted: "" + statusBarNotification.getKey());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,1,1,0,1,0.5,17,8
6826_42,42,42,byte filterResult = filter(statusBarNotification);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,1,1,0,0,0.32,15,7
6826_44,44,44,"Logger.debug(""[New Notification] pkg: {}, filterResult: {}"", notificationPackage, ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,1,1,0,0,0.37,13,6
6826_46,46,94,"if (filterResult == Constants.FILTER_CONTINUE || filterResult == Constants.FILTER_UNGROUP || filterResult == Constants.FILTER_LOCALOK) {

StatusBarNotification sbn = null;

if (filterResult == Constants.FILTER_UNGROUP && Prefs.getBoolean(Constants.PREF_NOTIFICATIONS_ENABLE_UNGROUP, false)) {
int nextId = statusBarNotification.getId() + newUID();
sbn = new StatusBarNotification(notificationPackage, """", nextId,
statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());

if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());
if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");
} else {
grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});
}
}

if (sbn == null)
sbn = statusBarNotification;

if (isCustomUIEnabled())
sendNotificationWithCustomUI(filterResult, sbn);
else
sendNotificationWithStandardUI(filterResult, sbn);

storeForStats(notificationPackage, filterResult);

} else {
if (isRingingNotification(filterResult, notificationPackage)) {
Logger.debug(""[Ringing Notification] New notifications is a ringing notification: "" + ((char) (byte) filterResult));
handleCall(statusBarNotification, notificationPackage);

} else if (isMapsNotification(filterResult, notificationPackage)) {
Logger.debug(""[Maps Notification] New notifications is a MapsNotification: "" + ((char) (byte) filterResult));
mapNotification(statusBarNotification);

} else {
Logger.debug(""[New Notification] New notifications is blocked. (pkg: {}, marked as: {})"",notificationPackage, ((char) (byte) filterResult));
checkAndLog(notificationPackage, notificationTxt, filterResult);
}
}",1,0,0,0,0,0,0,0,0,30,4,49,0,0,1,0,2,1,1,0,2,0.66,0,0
6826_48,48,48,StatusBarNotification sbn = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,1,1,0,0,0.21,9,4
6826_50,50,69,"if (filterResult == Constants.FILTER_UNGROUP && Prefs.getBoolean(Constants.PREF_NOTIFICATIONS_ENABLE_UNGROUP, false)) {
int nextId = statusBarNotification.getId() + newUID();
sbn = new StatusBarNotification(notificationPackage, """", nextId,
statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());

if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());
if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");
} else {
grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});
}
}",1,0,0,0,0,0,0,0,0,12,3,20,0,0,1,1,2,1,1,0,2,0.68,0,0
6826_51,51,51,int nextId = statusBarNotification.getId() + newUID();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.52,6,2
6826_52,52,55,"sbn = new StatusBarNotification(notificationPackage, """", nextId,
statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());",0,0,0,0,0,0,0,0,0,0,0,4,0,1,0,1,2,1,1,0,1,0.51,2,1
6826_57,57,68,"if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());
if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");
} else {
grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});
}",1,0,0,0,0,0,0,0,0,9,2,12,0,0,1,0,2,1,1,0,2,0.69,0,0
6826_58,58,58,int[] grouped = grouped_notifications.get(statusBarNotification.getId());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,1,1,0,1,0.55,0,0
6826_59,59,65,"if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");",1,0,0,0,0,0,0,0,0,5,1,7,1,1,0,0,2,1,1,0,2,0.7,1,0
6826_60,60,60,int[] newArray = new int[grouped.length + 1];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.51,2,1
6826_61,61,61,"System.arraycopy(grouped, 0, newArray, 0, grouped.length);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.54,3,2
6826_62,62,62,newArray[newArray.length - 1] = nextId;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.54,4,3
6826_63,63,63,"grouped_notifications.put(statusBarNotification.getId(), newArray);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,2,0.7,5,4
6826_64,64,65,"} else
Logger.error(""grouped: could not create array"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,1,0,1,0.55,6,5
6826_66,66,66,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.18,8,7
6826_67,67,67,"grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.51,9,7
6826_71,71,72,"if (sbn == null)
sbn = statusBarNotification;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,2,1,1,0,0,0.21,13,9
6826_72,72,72,sbn = statusBarNotification;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,1,0,0,0.21,14,9
6826_74,74,77,"if (isCustomUIEnabled())
sendNotificationWithCustomUI(filterResult, sbn);
else
sendNotificationWithStandardUI(filterResult, sbn);",1,0,0,0,0,0,0,0,0,2,0,4,0,0,1,1,2,1,1,0,0,0.32,16,11
6826_75,75,75,"sendNotificationWithCustomUI(filterResult, sbn);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.32,17,11
6826_76,76,77,"else
sendNotificationWithStandardUI(filterResult, sbn);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,2,1,1,0,0,0.32,18,12
6826_79,79,79,"storeForStats(notificationPackage, filterResult);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,1,1,0,0,0.31,21,14
6826_81,81,81,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.18,23,15
6826_82,82,93,"if (isRingingNotification(filterResult, notificationPackage)) {
Logger.debug(""[Ringing Notification] New notifications is a ringing notification: "" + ((char) (byte) filterResult));
handleCall(statusBarNotification, notificationPackage);

} else if (isMapsNotification(filterResult, notificationPackage)) {
Logger.debug(""[Maps Notification] New notifications is a MapsNotification: "" + ((char) (byte) filterResult));
mapNotification(statusBarNotification);

} else {
Logger.debug(""[New Notification] New notifications is blocked. (pkg: {}, marked as: {})"",notificationPackage, ((char) (byte) filterResult));
checkAndLog(notificationPackage, notificationTxt, filterResult);
}",1,0,0,0,0,0,0,0,0,8,2,12,0,0,0,0,2,1,1,0,0,0.35,24,15
6826_83,83,83,"Logger.debug(""[Ringing Notification] New notifications is a ringing notification: "" + ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.36,25,16
6826_84,84,84,"handleCall(statusBarNotification, notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,1,0,0,0.29,26,17
6826_86,86,86,"} else if (isMapsNotification(filterResult, notificationPackage)) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.31,28,19
6826_87,87,87,"Logger.debug(""[Maps Notification] New notifications is a MapsNotification: "" + ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.37,29,19
6826_88,88,88,mapNotification(statusBarNotification);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,1,0,0,0.25,30,20
6826_90,90,90,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.18,32,22
6826_91,91,91,"Logger.debug(""[New Notification] New notifications is blocked. (pkg: {}, marked as: {})"",notificationPackage, ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.37,33,22
6826_92,92,92,"checkAndLog(notificationPackage, notificationTxt, filterResult);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.29,34,23
6827_1,1,2,"@Override
public void onNotificationPosted(StatusBarNotification statusBarNotification) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,0,0,0,0.26,56,40
6827_4,4,4,String notificationPackage = statusBarNotification.getPackageName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,1,0,0,0,0.29,54,39
6827_6,6,6,"String notificationTxt = """";",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,1,0,0,0,0.27,52,38
6827_7,7,7,CharSequence charSequence = statusBarNotification.getNotification().extras.getCharSequence(Notification.EXTRA_TEXT);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.36,51,37
6827_8,8,10,"if (charSequence != null) {
notificationTxt = charSequence.toString();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,3,1,0,0,0,0.38,48,35
6827_9,9,9,notificationTxt = charSequence.toString();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.38,49,35
6827_12,12,38,"if (!isPackageAllowed(notificationPackage)) {
Logger.debug(""[Notification Blocked] Notifications from {} are blocked."", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_PACKAGE);
return;
}else if (isPackageSilenced(notificationPackage)) {
Logger.debug(""[Notification Blocked] Notifications from {} are currently silenced."",notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SILENCE);
return;
}else if (isPackageFiltered(statusBarNotification)) {
Logger.debug(""[Notification Blocked] Notifications from {} was blocked because of content filters."", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_TEXT);
return;
}else if (isNotificationsDisabled()) {
Logger.debug(""[Notification Blocked] All notifications are disabled (disabled, DND, Driving etc). {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_NOTIFICATIONS_DISABLED);
return;
}else if (isNotificationsDisabledWhenScreenOn()) {
if (!Screen.isDeviceLocked(this)) {
Logger.debug(""[Notification Blocked] Device is unlocked. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENON);
return;
} else if (!isNotificationsEnabledWhenScreenLocked()) {
Logger.debug(""[Notification Blocked] Device is in lock-screen. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENLOCKED);
return;
}
}",1,0,0,0,0,0,0,0,0,24,3,27,0,0,1,1,3,1,0,0,0,0.34,20,10
6827_13,13,13,"Logger.debug(""[Notification Blocked] Notifications from {} are blocked."", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.27,45,33
6827_14,14,14,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_PACKAGE);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.3,44,32
6827_15,15,15,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.2,43,31
6827_16,16,16,}else if (isPackageSilenced(notificationPackage)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.31,42,30
6827_17,17,17,"Logger.debug(""[Notification Blocked] Notifications from {} are currently silenced."",notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.29,41,29
6827_18,18,18,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SILENCE);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.31,40,28
6827_19,19,19,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.2,39,27
6827_20,20,20,}else if (isPackageFiltered(statusBarNotification)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.28,38,26
6827_21,21,21,"Logger.debug(""[Notification Blocked] Notifications from {} was blocked because of content filters."", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.28,37,25
6827_22,22,22,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_TEXT);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.3,36,24
6827_23,23,23,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.2,35,23
6827_24,24,24,}else if (isNotificationsDisabled()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.18,34,22
6827_25,25,25,"Logger.debug(""[Notification Blocked] All notifications are disabled (disabled, DND, Driving etc). {}"", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.25,33,21
6827_26,26,26,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_NOTIFICATIONS_DISABLED);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.28,32,20
6827_27,27,27,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.2,31,19
6827_28,28,28,}else if (isNotificationsDisabledWhenScreenOn()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.19,30,18
6827_29,29,37,"if (!Screen.isDeviceLocked(this)) {
Logger.debug(""[Notification Blocked] Device is unlocked. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENON);
return;
} else if (!isNotificationsEnabledWhenScreenLocked()) {
Logger.debug(""[Notification Blocked] Device is in lock-screen. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENLOCKED);
return;
}",1,0,0,0,0,0,0,0,0,7,2,9,0,0,0,0,3,1,0,0,0,0.35,21,10
6827_30,30,30,"Logger.debug(""[Notification Blocked] Device is unlocked. {}"", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.35,28,16
6827_31,31,31,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENON);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.3,27,15
6827_32,32,32,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.2,26,14
6827_33,33,33,} else if (!isNotificationsEnabledWhenScreenLocked()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.25,25,13
6827_34,34,34,"Logger.debug(""[Notification Blocked] Device is in lock-screen. {}"", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.32,24,12
6827_35,35,35,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENLOCKED);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.3,23,11
6827_36,36,36,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.2,22,10
6827_40,40,40,"Logger.debug(""[New Notification] Notification is posted: "" + statusBarNotification.getKey());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,0,0,1,0.45,18,9
6827_42,42,42,byte filterResult = filter(statusBarNotification);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,1,0,0,0,0.33,16,8
6827_44,44,44,"Logger.debug(""[New Notification] pkg: {}, filterResult: {}"", notificationPackage, ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,0,0,1,0.51,14,7
6827_46,46,94,"if (filterResult == Constants.FILTER_CONTINUE || filterResult == Constants.FILTER_UNGROUP || filterResult == Constants.FILTER_LOCALOK) {

StatusBarNotification sbn = null;

if (filterResult == Constants.FILTER_UNGROUP && Prefs.getBoolean(Constants.PREF_NOTIFICATIONS_ENABLE_UNGROUP, false)) {
int nextId = statusBarNotification.getId() + newUID();
sbn = new StatusBarNotification(notificationPackage, """", nextId,
statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());

if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());
if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");
} else {
grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});
}
}

if (sbn == null)
sbn = statusBarNotification;

if (isCustomUIEnabled())
sendNotificationWithCustomUI(filterResult, sbn);
else
sendNotificationWithStandardUI(filterResult, sbn);

storeForStats(notificationPackage, filterResult);

} else {
if (isRingingNotification(filterResult, notificationPackage)) {
Logger.debug(""[Ringing Notification] New notifications is a ringing notification: "" + ((char) (byte) filterResult));
handleCall(statusBarNotification, notificationPackage);

} else if (isMapsNotification(filterResult, notificationPackage)) {
Logger.debug(""[Maps Notification] New notifications is a MapsNotification: "" + ((char) (byte) filterResult));
mapNotification(statusBarNotification);

} else {
Logger.debug(""[New Notification] New notifications is blocked. (pkg: {}, marked as: {})"",notificationPackage, ((char) (byte) filterResult));
checkAndLog(notificationPackage, notificationTxt, filterResult);
}
}",1,0,0,0,0,0,0,0,0,30,4,49,0,0,1,0,3,1,0,0,2,0.57,0,0
6827_48,48,48,StatusBarNotification sbn = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,1,0,0,0,0.17,10,5
6827_50,50,69,"if (filterResult == Constants.FILTER_UNGROUP && Prefs.getBoolean(Constants.PREF_NOTIFICATIONS_ENABLE_UNGROUP, false)) {
int nextId = statusBarNotification.getId() + newUID();
sbn = new StatusBarNotification(notificationPackage, """", nextId,
statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());

if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());
if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");
} else {
grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});
}
}",1,0,0,0,0,0,0,0,0,12,3,20,0,0,1,1,3,1,0,0,2,0.58,0,0
6827_51,51,51,int nextId = statusBarNotification.getId() + newUID();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,0,0,1,0.45,7,3
6827_52,52,55,"sbn = new StatusBarNotification(notificationPackage, """", nextId,
statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());",0,0,0,0,0,0,0,0,0,0,0,4,0,1,0,1,3,1,0,0,1,0.41,3,2
6827_57,57,68,"if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());
if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");
} else {
grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});
}",1,0,0,0,0,0,0,0,0,9,2,12,0,0,1,0,3,1,0,0,2,0.6,0,0
6827_58,58,58,int[] grouped = grouped_notifications.get(statusBarNotification.getId());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,1,0,0,0,0.27,0,0
6827_59,59,65,"if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");",1,0,0,0,0,0,0,0,0,5,1,7,1,1,0,0,3,1,0,0,2,0.65,0,0
6827_60,60,60,int[] newArray = new int[grouped.length + 1];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,0,0,2,0.68,1,0
6827_61,61,61,"System.arraycopy(grouped, 0, newArray, 0, grouped.length);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,2,0.65,2,1
6827_62,62,62,newArray[newArray.length - 1] = nextId;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,2,0.71,3,2
6827_63,63,63,"grouped_notifications.put(statusBarNotification.getId(), newArray);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,2,0.59,4,3
6827_64,64,65,"} else
Logger.error(""grouped: could not create array"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,0,0,1,0.53,5,4
6827_66,66,66,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.18,7,6
6827_67,67,67,"grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.43,8,6
6827_71,71,72,"if (sbn == null)
sbn = statusBarNotification;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,3,1,0,0,0,0.17,12,8
6827_72,72,72,sbn = statusBarNotification;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,1,0,0,0,0.16,13,8
6827_74,74,77,"if (isCustomUIEnabled())
sendNotificationWithCustomUI(filterResult, sbn);
else
sendNotificationWithStandardUI(filterResult, sbn);",1,0,0,0,0,0,0,0,0,2,0,4,0,0,1,1,3,1,0,0,0,0.27,15,10
6827_75,75,75,"sendNotificationWithCustomUI(filterResult, sbn);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.28,16,10
6827_76,76,77,"else
sendNotificationWithStandardUI(filterResult, sbn);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,3,1,0,0,0,0.28,17,11
6827_79,79,79,"storeForStats(notificationPackage, filterResult);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,1,0,0,0,0.34,20,13
6827_81,81,81,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.18,22,14
6827_82,82,93,"if (isRingingNotification(filterResult, notificationPackage)) {
Logger.debug(""[Ringing Notification] New notifications is a ringing notification: "" + ((char) (byte) filterResult));
handleCall(statusBarNotification, notificationPackage);

} else if (isMapsNotification(filterResult, notificationPackage)) {
Logger.debug(""[Maps Notification] New notifications is a MapsNotification: "" + ((char) (byte) filterResult));
mapNotification(statusBarNotification);

} else {
Logger.debug(""[New Notification] New notifications is blocked. (pkg: {}, marked as: {})"",notificationPackage, ((char) (byte) filterResult));
checkAndLog(notificationPackage, notificationTxt, filterResult);
}",1,0,0,0,0,0,0,0,0,8,2,12,0,0,0,0,3,1,0,0,1,0.48,23,14
6827_83,83,83,"Logger.debug(""[Ringing Notification] New notifications is a ringing notification: "" + ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.51,24,15
6827_84,84,84,"handleCall(statusBarNotification, notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,1,0,0,0,0.27,25,16
6827_86,86,86,"} else if (isMapsNotification(filterResult, notificationPackage)) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.31,27,18
6827_87,87,87,"Logger.debug(""[Maps Notification] New notifications is a MapsNotification: "" + ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,1,0.5,28,18
6827_88,88,88,mapNotification(statusBarNotification);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,1,0,0,0,0.26,29,19
6827_90,90,90,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,0,0,0.18,31,21
6827_91,91,91,"Logger.debug(""[New Notification] New notifications is blocked. (pkg: {}, marked as: {})"",notificationPackage, ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,1,0.51,32,21
6827_92,92,92,"checkAndLog(notificationPackage, notificationTxt, filterResult);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,0,0,0,0.28,33,22
6828_1,1,2,"@Override
public void onNotificationPosted(StatusBarNotification statusBarNotification) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,0,0.28,58,42
6828_4,4,4,String notificationPackage = statusBarNotification.getPackageName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.27,56,41
6828_6,6,6,"String notificationTxt = """";",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.24,54,40
6828_7,7,7,CharSequence charSequence = statusBarNotification.getNotification().extras.getCharSequence(Notification.EXTRA_TEXT);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.31,53,39
6828_8,8,10,"if (charSequence != null) {
notificationTxt = charSequence.toString();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,4,2,1,0,0,0.33,50,37
6828_9,9,9,notificationTxt = charSequence.toString();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.33,51,37
6828_12,12,38,"if (!isPackageAllowed(notificationPackage)) {
Logger.debug(""[Notification Blocked] Notifications from {} are blocked."", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_PACKAGE);
return;
}else if (isPackageSilenced(notificationPackage)) {
Logger.debug(""[Notification Blocked] Notifications from {} are currently silenced."",notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SILENCE);
return;
}else if (isPackageFiltered(statusBarNotification)) {
Logger.debug(""[Notification Blocked] Notifications from {} was blocked because of content filters."", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_TEXT);
return;
}else if (isNotificationsDisabled()) {
Logger.debug(""[Notification Blocked] All notifications are disabled (disabled, DND, Driving etc). {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_NOTIFICATIONS_DISABLED);
return;
}else if (isNotificationsDisabledWhenScreenOn()) {
if (!Screen.isDeviceLocked(this)) {
Logger.debug(""[Notification Blocked] Device is unlocked. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENON);
return;
} else if (!isNotificationsEnabledWhenScreenLocked()) {
Logger.debug(""[Notification Blocked] Device is in lock-screen. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENLOCKED);
return;
}
}",1,0,0,0,0,0,0,0,0,24,3,27,0,0,1,1,4,2,1,0,0,0.31,22,12
6828_13,13,13,"Logger.debug(""[Notification Blocked] Notifications from {} are blocked."", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.22,47,35
6828_14,14,14,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_PACKAGE);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.24,46,34
6828_15,15,15,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.19,45,33
6828_16,16,16,}else if (isPackageSilenced(notificationPackage)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.26,44,32
6828_17,17,17,"Logger.debug(""[Notification Blocked] Notifications from {} are currently silenced."",notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.24,43,31
6828_18,18,18,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SILENCE);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.24,42,30
6828_19,19,19,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.19,41,29
6828_20,20,20,}else if (isPackageFiltered(statusBarNotification)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.24,40,28
6828_21,21,21,"Logger.debug(""[Notification Blocked] Notifications from {} was blocked because of content filters."", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.23,39,27
6828_22,22,22,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_TEXT);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.24,38,26
6828_23,23,23,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.19,37,25
6828_24,24,24,}else if (isNotificationsDisabled()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.18,36,24
6828_25,25,25,"Logger.debug(""[Notification Blocked] All notifications are disabled (disabled, DND, Driving etc). {}"", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.21,35,23
6828_26,26,26,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_NOTIFICATIONS_DISABLED);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.23,34,22
6828_27,27,27,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.19,33,21
6828_28,28,28,}else if (isNotificationsDisabledWhenScreenOn()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.18,32,20
6828_29,29,37,"if (!Screen.isDeviceLocked(this)) {
Logger.debug(""[Notification Blocked] Device is unlocked. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENON);
return;
} else if (!isNotificationsEnabledWhenScreenLocked()) {
Logger.debug(""[Notification Blocked] Device is in lock-screen. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENLOCKED);
return;
}",1,0,0,0,0,0,0,0,0,7,2,9,0,0,0,0,4,2,1,0,0,0.32,23,12
6828_30,30,30,"Logger.debug(""[Notification Blocked] Device is unlocked. {}"", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.32,30,18
6828_31,31,31,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENON);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.24,29,17
6828_32,32,32,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.19,28,16
6828_33,33,33,} else if (!isNotificationsEnabledWhenScreenLocked()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.23,27,15
6828_34,34,34,"Logger.debug(""[Notification Blocked] Device is in lock-screen. {}"", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.27,26,14
6828_35,35,35,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENLOCKED);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.24,25,13
6828_36,36,36,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.19,24,12
6828_40,40,40,"Logger.debug(""[New Notification] Notification is posted: "" + statusBarNotification.getKey());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,1,0.41,20,11
6828_42,42,42,byte filterResult = filter(statusBarNotification);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.3,18,10
6828_44,44,44,"Logger.debug(""[New Notification] pkg: {}, filterResult: {}"", notificationPackage, ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,1,0.44,16,9
6828_46,46,94,"if (filterResult == Constants.FILTER_CONTINUE || filterResult == Constants.FILTER_UNGROUP || filterResult == Constants.FILTER_LOCALOK) {

StatusBarNotification sbn = null;

if (filterResult == Constants.FILTER_UNGROUP && Prefs.getBoolean(Constants.PREF_NOTIFICATIONS_ENABLE_UNGROUP, false)) {
int nextId = statusBarNotification.getId() + newUID();
sbn = new StatusBarNotification(notificationPackage, """", nextId,
statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());

if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());
if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");
} else {
grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});
}
}

if (sbn == null)
sbn = statusBarNotification;

if (isCustomUIEnabled())
sendNotificationWithCustomUI(filterResult, sbn);
else
sendNotificationWithStandardUI(filterResult, sbn);

storeForStats(notificationPackage, filterResult);

} else {
if (isRingingNotification(filterResult, notificationPackage)) {
Logger.debug(""[Ringing Notification] New notifications is a ringing notification: "" + ((char) (byte) filterResult));
handleCall(statusBarNotification, notificationPackage);

} else if (isMapsNotification(filterResult, notificationPackage)) {
Logger.debug(""[Maps Notification] New notifications is a MapsNotification: "" + ((char) (byte) filterResult));
mapNotification(statusBarNotification);

} else {
Logger.debug(""[New Notification] New notifications is blocked. (pkg: {}, marked as: {})"",notificationPackage, ((char) (byte) filterResult));
checkAndLog(notificationPackage, notificationTxt, filterResult);
}
}",1,0,0,0,0,0,0,0,0,30,4,49,0,0,1,0,4,2,1,0,2,0.5,0,0
6828_48,48,48,StatusBarNotification sbn = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.19,12,7
6828_50,50,69,"if (filterResult == Constants.FILTER_UNGROUP && Prefs.getBoolean(Constants.PREF_NOTIFICATIONS_ENABLE_UNGROUP, false)) {
int nextId = statusBarNotification.getId() + newUID();
sbn = new StatusBarNotification(notificationPackage, """", nextId,
statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());

if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());
if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");
} else {
grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});
}
}",1,0,0,0,0,0,0,0,0,12,3,20,0,0,1,1,4,2,1,0,2,0.52,0,0
6828_51,51,51,int nextId = statusBarNotification.getId() + newUID();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.4,9,5
6828_52,52,55,"sbn = new StatusBarNotification(notificationPackage, """", nextId,
statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());",0,0,0,0,0,0,0,0,0,0,0,4,0,1,0,1,4,2,1,0,1,0.39,5,4
6828_57,57,68,"if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());
if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");
} else {
grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});
}",1,0,0,0,0,0,0,0,0,9,2,12,0,0,1,0,4,2,1,0,2,0.54,0,0
6828_58,58,58,int[] grouped = grouped_notifications.get(statusBarNotification.getId());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.27,2,2
6828_59,59,65,"if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");",1,0,0,0,0,0,0,0,0,5,1,7,1,1,0,0,4,2,1,0,2,0.58,0,0
6828_60,60,60,int[] newArray = new int[grouped.length + 1];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.61,0,0
6828_61,61,61,"System.arraycopy(grouped, 0, newArray, 0, grouped.length);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.58,0,0
6828_62,62,62,newArray[newArray.length - 1] = nextId;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.63,1,0
6828_63,63,63,"grouped_notifications.put(statusBarNotification.getId(), newArray);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.53,2,1
6828_64,64,65,"} else
Logger.error(""grouped: could not create array"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,1,0.47,3,2
6828_66,66,66,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.18,5,4
6828_67,67,67,"grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.42,6,4
6828_71,71,72,"if (sbn == null)
sbn = statusBarNotification;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,4,2,1,0,0,0.19,10,6
6828_72,72,72,sbn = statusBarNotification;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.19,11,6
6828_74,74,77,"if (isCustomUIEnabled())
sendNotificationWithCustomUI(filterResult, sbn);
else
sendNotificationWithStandardUI(filterResult, sbn);",1,0,0,0,0,0,0,0,0,2,0,4,0,0,1,1,4,2,1,0,0,0.22,13,8
6828_75,75,75,"sendNotificationWithCustomUI(filterResult, sbn);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.23,14,8
6828_76,76,77,"else
sendNotificationWithStandardUI(filterResult, sbn);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,4,2,1,0,0,0.23,15,9
6828_79,79,79,"storeForStats(notificationPackage, filterResult);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.32,18,11
6828_81,81,81,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.18,20,12
6828_82,82,93,"if (isRingingNotification(filterResult, notificationPackage)) {
Logger.debug(""[Ringing Notification] New notifications is a ringing notification: "" + ((char) (byte) filterResult));
handleCall(statusBarNotification, notificationPackage);

} else if (isMapsNotification(filterResult, notificationPackage)) {
Logger.debug(""[Maps Notification] New notifications is a MapsNotification: "" + ((char) (byte) filterResult));
mapNotification(statusBarNotification);

} else {
Logger.debug(""[New Notification] New notifications is blocked. (pkg: {}, marked as: {})"",notificationPackage, ((char) (byte) filterResult));
checkAndLog(notificationPackage, notificationTxt, filterResult);
}",1,0,0,0,0,0,0,0,0,8,2,12,0,0,0,0,4,2,1,0,1,0.41,21,12
6828_83,83,83,"Logger.debug(""[Ringing Notification] New notifications is a ringing notification: "" + ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.42,22,13
6828_84,84,84,"handleCall(statusBarNotification, notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.23,23,14
6828_86,86,86,"} else if (isMapsNotification(filterResult, notificationPackage)) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.28,25,16
6828_87,87,87,"Logger.debug(""[Maps Notification] New notifications is a MapsNotification: "" + ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.43,26,16
6828_88,88,88,mapNotification(statusBarNotification);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.26,27,17
6828_90,90,90,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.18,29,19
6828_91,91,91,"Logger.debug(""[New Notification] New notifications is blocked. (pkg: {}, marked as: {})"",notificationPackage, ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.45,30,19
6828_92,92,92,"checkAndLog(notificationPackage, notificationTxt, filterResult);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.23,31,20
6829_1,1,2,"@Override
public void onNotificationPosted(StatusBarNotification statusBarNotification) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,0,0.24,64,47
6829_4,4,4,String notificationPackage = statusBarNotification.getPackageName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,1,0,0,0,0.25,62,46
6829_6,6,6,"String notificationTxt = """";",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,2,1,0,0,0,0.26,60,45
6829_7,7,7,CharSequence charSequence = statusBarNotification.getNotification().extras.getCharSequence(Notification.EXTRA_TEXT);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.33,59,44
6829_8,8,10,"if (charSequence != null) {
notificationTxt = charSequence.toString();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,2,1,0,0,0,0.36,56,42
6829_9,9,9,notificationTxt = charSequence.toString();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.36,57,42
6829_12,12,38,"if (!isPackageAllowed(notificationPackage)) {
Logger.debug(""[Notification Blocked] Notifications from {} are blocked."", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_PACKAGE);
return;
}else if (isPackageSilenced(notificationPackage)) {
Logger.debug(""[Notification Blocked] Notifications from {} are currently silenced."",notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SILENCE);
return;
}else if (isPackageFiltered(statusBarNotification)) {
Logger.debug(""[Notification Blocked] Notifications from {} was blocked because of content filters."", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_TEXT);
return;
}else if (isNotificationsDisabled()) {
Logger.debug(""[Notification Blocked] All notifications are disabled (disabled, DND, Driving etc). {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_NOTIFICATIONS_DISABLED);
return;
}else if (isNotificationsDisabledWhenScreenOn()) {
if (!Screen.isDeviceLocked(this)) {
Logger.debug(""[Notification Blocked] Device is unlocked. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENON);
return;
} else if (!isNotificationsEnabledWhenScreenLocked()) {
Logger.debug(""[Notification Blocked] Device is in lock-screen. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENLOCKED);
return;
}
}",1,0,0,0,0,0,0,0,0,24,3,27,0,0,1,1,2,1,0,0,0,0.3,28,17
6829_13,13,13,"Logger.debug(""[Notification Blocked] Notifications from {} are blocked."", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.22,53,40
6829_14,14,14,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_PACKAGE);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.23,52,39
6829_15,15,15,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.19,51,38
6829_16,16,16,}else if (isPackageSilenced(notificationPackage)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.25,50,37
6829_17,17,17,"Logger.debug(""[Notification Blocked] Notifications from {} are currently silenced."",notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.21,49,36
6829_18,18,18,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SILENCE);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.22,48,35
6829_19,19,19,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.19,47,34
6829_20,20,20,}else if (isPackageFiltered(statusBarNotification)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.23,46,33
6829_21,21,21,"Logger.debug(""[Notification Blocked] Notifications from {} was blocked because of content filters."", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.22,45,32
6829_22,22,22,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_TEXT);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.23,44,31
6829_23,23,23,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.19,43,30
6829_24,24,24,}else if (isNotificationsDisabled()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.17,42,29
6829_25,25,25,"Logger.debug(""[Notification Blocked] All notifications are disabled (disabled, DND, Driving etc). {}"", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.2,41,28
6829_26,26,26,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_NOTIFICATIONS_DISABLED);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.21,40,27
6829_27,27,27,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.19,39,26
6829_28,28,28,}else if (isNotificationsDisabledWhenScreenOn()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.17,38,25
6829_29,29,37,"if (!Screen.isDeviceLocked(this)) {
Logger.debug(""[Notification Blocked] Device is unlocked. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENON);
return;
} else if (!isNotificationsEnabledWhenScreenLocked()) {
Logger.debug(""[Notification Blocked] Device is in lock-screen. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENLOCKED);
return;
}",1,0,0,0,0,0,0,0,0,7,2,9,0,0,0,0,2,1,0,0,0,0.3,29,17
6829_30,30,30,"Logger.debug(""[Notification Blocked] Device is unlocked. {}"", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.3,36,23
6829_31,31,31,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENON);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.22,35,22
6829_32,32,32,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.19,34,21
6829_33,33,33,} else if (!isNotificationsEnabledWhenScreenLocked()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.24,33,20
6829_34,34,34,"Logger.debug(""[Notification Blocked] Device is in lock-screen. {}"", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.29,32,19
6829_35,35,35,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENLOCKED);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.22,31,18
6829_36,36,36,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.19,30,17
6829_40,40,40,"Logger.debug(""[New Notification] Notification is posted: "" + statusBarNotification.getKey());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,1,0,0,1,0.47,26,16
6829_42,42,42,byte filterResult = filter(statusBarNotification);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,1,0,0,0,0.29,24,15
6829_44,44,44,"Logger.debug(""[New Notification] pkg: {}, filterResult: {}"", notificationPackage, ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,1,0,0,1,0.53,22,14
6829_46,46,94,"if (filterResult == Constants.FILTER_CONTINUE || filterResult == Constants.FILTER_UNGROUP || filterResult == Constants.FILTER_LOCALOK) {

StatusBarNotification sbn = null;

if (filterResult == Constants.FILTER_UNGROUP && Prefs.getBoolean(Constants.PREF_NOTIFICATIONS_ENABLE_UNGROUP, false)) {
int nextId = statusBarNotification.getId() + newUID();
sbn = new StatusBarNotification(notificationPackage, """", nextId,
statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());

if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());
if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");
} else {
grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});
}
}

if (sbn == null)
sbn = statusBarNotification;

if (isCustomUIEnabled())
sendNotificationWithCustomUI(filterResult, sbn);
else
sendNotificationWithStandardUI(filterResult, sbn);

storeForStats(notificationPackage, filterResult);

} else {
if (isRingingNotification(filterResult, notificationPackage)) {
Logger.debug(""[Ringing Notification] New notifications is a ringing notification: "" + ((char) (byte) filterResult));
handleCall(statusBarNotification, notificationPackage);

} else if (isMapsNotification(filterResult, notificationPackage)) {
Logger.debug(""[Maps Notification] New notifications is a MapsNotification: "" + ((char) (byte) filterResult));
mapNotification(statusBarNotification);

} else {
Logger.debug(""[New Notification] New notifications is blocked. (pkg: {}, marked as: {})"",notificationPackage, ((char) (byte) filterResult));
checkAndLog(notificationPackage, notificationTxt, filterResult);
}
}",1,0,0,0,0,0,0,0,0,30,4,49,0,0,1,0,2,1,0,0,2,0.64,0,0
6829_48,48,48,StatusBarNotification sbn = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,1,0,0,0,0.15,18,12
6829_50,50,69,"if (filterResult == Constants.FILTER_UNGROUP && Prefs.getBoolean(Constants.PREF_NOTIFICATIONS_ENABLE_UNGROUP, false)) {
int nextId = statusBarNotification.getId() + newUID();
sbn = new StatusBarNotification(notificationPackage, """", nextId,
statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());

if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());
if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");
} else {
grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});
}
}",1,0,0,0,0,0,0,0,0,12,3,20,0,0,1,1,2,1,0,0,2,0.65,0,0
6829_51,51,51,int nextId = statusBarNotification.getId() + newUID();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,1,0.49,15,10
6829_52,52,55,"sbn = new StatusBarNotification(notificationPackage, """", nextId,
statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());",0,0,0,0,0,0,0,0,0,0,0,4,0,1,0,1,2,1,0,0,1,0.45,11,9
6829_57,57,68,"if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());
if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");
} else {
grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});
}",1,0,0,0,0,0,0,0,0,9,2,12,0,0,1,0,2,1,0,0,2,0.68,0,0
6829_58,58,58,int[] grouped = grouped_notifications.get(statusBarNotification.getId());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,1,0,0,0,0.27,8,7
6829_59,59,65,"if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");",1,0,0,0,0,0,0,0,0,5,1,7,1,1,0,0,2,1,0,0,2,0.73,1,1
6829_60,60,60,int[] newArray = new int[grouped.length + 1];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,2,0.78,6,5
6829_61,61,61,"System.arraycopy(grouped, 0, newArray, 0, grouped.length);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,2,0.73,5,4
6829_62,62,62,newArray[newArray.length - 1] = nextId;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,2,0.8,4,3
6829_63,63,63,"grouped_notifications.put(statusBarNotification.getId(), newArray);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,2,0.68,3,2
6829_64,64,65,"} else
Logger.error(""grouped: could not create array"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,1,0.58,1,1
6829_66,66,66,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.16,0,0
6829_67,67,67,"grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.49,0,0
6829_71,71,72,"if (sbn == null)
sbn = statusBarNotification;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,2,1,0,0,0,0.15,4,1
6829_72,72,72,sbn = statusBarNotification;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,0,0,0,0.14,5,1
6829_74,74,77,"if (isCustomUIEnabled())
sendNotificationWithCustomUI(filterResult, sbn);
else
sendNotificationWithStandardUI(filterResult, sbn);",1,0,0,0,0,0,0,0,0,2,0,4,0,0,1,1,2,1,0,0,0,0.22,7,3
6829_75,75,75,"sendNotificationWithCustomUI(filterResult, sbn);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.23,8,3
6829_76,76,77,"else
sendNotificationWithStandardUI(filterResult, sbn);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,2,1,0,0,0,0.23,9,4
6829_79,79,79,"storeForStats(notificationPackage, filterResult);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,1,0,0,0,0.32,12,6
6829_81,81,81,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.16,14,7
6829_82,82,93,"if (isRingingNotification(filterResult, notificationPackage)) {
Logger.debug(""[Ringing Notification] New notifications is a ringing notification: "" + ((char) (byte) filterResult));
handleCall(statusBarNotification, notificationPackage);

} else if (isMapsNotification(filterResult, notificationPackage)) {
Logger.debug(""[Maps Notification] New notifications is a MapsNotification: "" + ((char) (byte) filterResult));
mapNotification(statusBarNotification);

} else {
Logger.debug(""[New Notification] New notifications is blocked. (pkg: {}, marked as: {})"",notificationPackage, ((char) (byte) filterResult));
checkAndLog(notificationPackage, notificationTxt, filterResult);
}",1,0,0,0,0,0,0,0,0,8,2,12,0,0,0,0,2,1,0,0,1,0.5,15,7
6829_83,83,83,"Logger.debug(""[Ringing Notification] New notifications is a ringing notification: "" + ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.51,16,8
6829_84,84,84,"handleCall(statusBarNotification, notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,0,0,0,0.22,17,9
6829_86,86,86,"} else if (isMapsNotification(filterResult, notificationPackage)) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.28,19,11
6829_87,87,87,"Logger.debug(""[Maps Notification] New notifications is a MapsNotification: "" + ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.53,20,11
6829_88,88,88,mapNotification(statusBarNotification);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,0,0,0,0.23,21,12
6829_90,90,90,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.16,23,14
6829_91,91,91,"Logger.debug(""[New Notification] New notifications is blocked. (pkg: {}, marked as: {})"",notificationPackage, ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,1,0.54,24,14
6829_92,92,92,"checkAndLog(notificationPackage, notificationTxt, filterResult);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.22,25,15
6830_1,1,2,"@Override
public void onNotificationPosted(StatusBarNotification statusBarNotification) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,0,0,1,0.57,71,50
6830_4,4,4,String notificationPackage = statusBarNotification.getPackageName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,3,0,0,1,0.55,69,49
6830_6,6,6,"String notificationTxt = """";",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,3,0,0,1,0.57,67,48
6830_7,7,7,CharSequence charSequence = statusBarNotification.getNotification().extras.getCharSequence(Notification.EXTRA_TEXT);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.55,66,47
6830_8,8,10,"if (charSequence != null) {
notificationTxt = charSequence.toString();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,6,3,0,0,1,0.44,63,45
6830_9,9,9,notificationTxt = charSequence.toString();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.48,64,45
6830_12,12,38,"if (!isPackageAllowed(notificationPackage)) {
Logger.debug(""[Notification Blocked] Notifications from {} are blocked."", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_PACKAGE);
return;
}else if (isPackageSilenced(notificationPackage)) {
Logger.debug(""[Notification Blocked] Notifications from {} are currently silenced."",notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SILENCE);
return;
}else if (isPackageFiltered(statusBarNotification)) {
Logger.debug(""[Notification Blocked] Notifications from {} was blocked because of content filters."", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_TEXT);
return;
}else if (isNotificationsDisabled()) {
Logger.debug(""[Notification Blocked] All notifications are disabled (disabled, DND, Driving etc). {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_NOTIFICATIONS_DISABLED);
return;
}else if (isNotificationsDisabledWhenScreenOn()) {
if (!Screen.isDeviceLocked(this)) {
Logger.debug(""[Notification Blocked] Device is unlocked. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENON);
return;
} else if (!isNotificationsEnabledWhenScreenLocked()) {
Logger.debug(""[Notification Blocked] Device is in lock-screen. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENLOCKED);
return;
}
}",1,0,0,0,0,0,0,0,0,24,3,27,0,0,1,1,6,3,0,0,1,0.56,35,20
6830_13,13,13,"Logger.debug(""[Notification Blocked] Notifications from {} are blocked."", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.52,60,43
6830_14,14,14,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_PACKAGE);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.46,59,42
6830_15,15,15,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.18,58,41
6830_16,16,16,}else if (isPackageSilenced(notificationPackage)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.46,57,40
6830_17,17,17,"Logger.debug(""[Notification Blocked] Notifications from {} are currently silenced."",notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.51,56,39
6830_18,18,18,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SILENCE);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.46,55,38
6830_19,19,19,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.18,54,37
6830_20,20,20,}else if (isPackageFiltered(statusBarNotification)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.54,53,36
6830_21,21,21,"Logger.debug(""[Notification Blocked] Notifications from {} was blocked because of content filters."", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.5,52,35
6830_22,22,22,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_TEXT);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.49,51,34
6830_23,23,23,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.18,50,33
6830_24,24,24,}else if (isNotificationsDisabled()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.51,49,32
6830_25,25,25,"Logger.debug(""[Notification Blocked] All notifications are disabled (disabled, DND, Driving etc). {}"", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.51,48,31
6830_26,26,26,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_NOTIFICATIONS_DISABLED);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.49,47,30
6830_27,27,27,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.18,46,29
6830_28,28,28,}else if (isNotificationsDisabledWhenScreenOn()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.54,45,28
6830_29,29,37,"if (!Screen.isDeviceLocked(this)) {
Logger.debug(""[Notification Blocked] Device is unlocked. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENON);
return;
} else if (!isNotificationsEnabledWhenScreenLocked()) {
Logger.debug(""[Notification Blocked] Device is in lock-screen. {}"", notificationPackage);
checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENLOCKED);
return;
}",1,0,0,0,0,0,0,0,0,7,2,9,0,0,0,0,6,3,0,0,1,0.51,36,20
6830_30,30,30,"Logger.debug(""[Notification Blocked] Device is unlocked. {}"", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.5,43,26
6830_31,31,31,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENON);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.47,42,25
6830_32,32,32,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.18,41,24
6830_33,33,33,} else if (!isNotificationsEnabledWhenScreenLocked()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.51,40,23
6830_34,34,34,"Logger.debug(""[Notification Blocked] Device is in lock-screen. {}"", notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.5,39,22
6830_35,35,35,"checkAndLog(notificationPackage, notificationTxt, Constants.FILTER_SCREENLOCKED);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.47,38,21
6830_36,36,36,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.18,37,20
6830_40,40,40,"Logger.debug(""[New Notification] Notification is posted: "" + statusBarNotification.getKey());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,0,0,1,0.56,33,19
6830_42,42,42,byte filterResult = filter(statusBarNotification);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,3,0,0,1,0.52,31,18
6830_44,44,44,"Logger.debug(""[New Notification] pkg: {}, filterResult: {}"", notificationPackage, ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,0,0,1,0.47,29,17
6830_46,46,94,"if (filterResult == Constants.FILTER_CONTINUE || filterResult == Constants.FILTER_UNGROUP || filterResult == Constants.FILTER_LOCALOK) {

StatusBarNotification sbn = null;

if (filterResult == Constants.FILTER_UNGROUP && Prefs.getBoolean(Constants.PREF_NOTIFICATIONS_ENABLE_UNGROUP, false)) {
int nextId = statusBarNotification.getId() + newUID();
sbn = new StatusBarNotification(notificationPackage, """", nextId,
statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());

if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());
if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");
} else {
grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});
}
}

if (sbn == null)
sbn = statusBarNotification;

if (isCustomUIEnabled())
sendNotificationWithCustomUI(filterResult, sbn);
else
sendNotificationWithStandardUI(filterResult, sbn);

storeForStats(notificationPackage, filterResult);

} else {
if (isRingingNotification(filterResult, notificationPackage)) {
Logger.debug(""[Ringing Notification] New notifications is a ringing notification: "" + ((char) (byte) filterResult));
handleCall(statusBarNotification, notificationPackage);

} else if (isMapsNotification(filterResult, notificationPackage)) {
Logger.debug(""[Maps Notification] New notifications is a MapsNotification: "" + ((char) (byte) filterResult));
mapNotification(statusBarNotification);

} else {
Logger.debug(""[New Notification] New notifications is blocked. (pkg: {}, marked as: {})"",notificationPackage, ((char) (byte) filterResult));
checkAndLog(notificationPackage, notificationTxt, filterResult);
}
}",1,0,0,0,0,0,0,0,0,30,4,49,0,0,1,0,6,3,0,0,4,0.68,0,0
6830_48,48,48,StatusBarNotification sbn = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,3,0,0,1,0.57,25,15
6830_50,50,69,"if (filterResult == Constants.FILTER_UNGROUP && Prefs.getBoolean(Constants.PREF_NOTIFICATIONS_ENABLE_UNGROUP, false)) {
int nextId = statusBarNotification.getId() + newUID();
sbn = new StatusBarNotification(notificationPackage, """", nextId,
statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());

if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());
if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");
} else {
grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});
}
}",1,0,0,0,0,0,0,0,0,12,3,20,0,0,1,1,6,3,0,0,1,0.51,4,2
6830_51,51,51,int nextId = statusBarNotification.getId() + newUID();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.49,22,13
6830_52,52,55,"sbn = new StatusBarNotification(notificationPackage, """", nextId,
statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());",0,0,0,0,0,0,0,0,0,0,0,4,0,1,0,1,6,3,0,0,1,0.55,18,12
6830_57,57,68,"if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());
if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");
} else {
grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});
}",1,0,0,0,0,0,0,0,0,9,2,12,0,0,1,0,6,3,0,0,1,0.49,5,2
6830_58,58,58,int[] grouped = grouped_notifications.get(statusBarNotification.getId());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,3,0,0,1,0.55,15,10
6830_59,59,65,"if (grouped != null) {
int[] newArray = new int[grouped.length + 1];
System.arraycopy(grouped, 0, newArray, 0, grouped.length);
newArray[newArray.length - 1] = nextId;
grouped_notifications.put(statusBarNotification.getId(), newArray);
} else
Logger.error(""grouped: could not create array"");",1,0,0,0,0,0,0,0,0,5,1,7,1,1,0,0,6,3,0,0,1,0.46,8,4
6830_60,60,60,int[] newArray = new int[grouped.length + 1];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.25,13,8
6830_61,61,61,"System.arraycopy(grouped, 0, newArray, 0, grouped.length);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.37,12,7
6830_62,62,62,newArray[newArray.length - 1] = nextId;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,0,0.26,11,6
6830_63,63,63,"grouped_notifications.put(statusBarNotification.getId(), newArray);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.53,10,5
6830_64,64,65,"} else
Logger.error(""grouped: could not create array"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,0,0,0,0.32,8,4
6830_66,66,66,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.26,7,3
6830_67,67,67,"grouped_notifications.put(statusBarNotification.getId(), new int[]{nextId});",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.52,6,2
6830_71,71,72,"if (sbn == null)
sbn = statusBarNotification;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,6,3,0,0,1,0.57,1,0
6830_72,72,72,sbn = statusBarNotification;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,0,0,1,0.61,1,0
6830_74,74,77,"if (isCustomUIEnabled())
sendNotificationWithCustomUI(filterResult, sbn);
else
sendNotificationWithStandardUI(filterResult, sbn);",1,0,0,0,0,0,0,0,0,2,0,4,0,0,1,1,6,3,0,0,4,0.79,0,0
6830_75,75,75,"sendNotificationWithCustomUI(filterResult, sbn);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,3,0.73,1,0
6830_76,76,77,"else
sendNotificationWithStandardUI(filterResult, sbn);",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,6,3,0,0,3,0.72,2,1
6830_79,79,79,"storeForStats(notificationPackage, filterResult);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,0,0,1,0.44,5,3
6830_81,81,81,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.26,7,4
6830_82,82,93,"if (isRingingNotification(filterResult, notificationPackage)) {
Logger.debug(""[Ringing Notification] New notifications is a ringing notification: "" + ((char) (byte) filterResult));
handleCall(statusBarNotification, notificationPackage);

} else if (isMapsNotification(filterResult, notificationPackage)) {
Logger.debug(""[Maps Notification] New notifications is a MapsNotification: "" + ((char) (byte) filterResult));
mapNotification(statusBarNotification);

} else {
Logger.debug(""[New Notification] New notifications is blocked. (pkg: {}, marked as: {})"",notificationPackage, ((char) (byte) filterResult));
checkAndLog(notificationPackage, notificationTxt, filterResult);
}",1,0,0,0,0,0,0,0,0,8,2,12,0,0,0,0,6,3,0,0,1,0.55,8,4
6830_83,83,83,"Logger.debug(""[Ringing Notification] New notifications is a ringing notification: "" + ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.48,9,5
6830_84,84,84,"handleCall(statusBarNotification, notificationPackage);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,0,0,1,0.59,10,6
6830_86,86,86,"} else if (isMapsNotification(filterResult, notificationPackage)) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.48,12,8
6830_87,87,87,"Logger.debug(""[Maps Notification] New notifications is a MapsNotification: "" + ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.47,13,8
6830_88,88,88,mapNotification(statusBarNotification);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,0,0,1,0.61,14,9
6830_90,90,90,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.26,16,11
6830_91,91,91,"Logger.debug(""[New Notification] New notifications is blocked. (pkg: {}, marked as: {})"",notificationPackage, ((char) (byte) filterResult));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.48,17,11
6830_92,92,92,"checkAndLog(notificationPackage, notificationTxt, filterResult);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.47,18,12
6831_1,1,2,"@Override
public void onNotificationRemoved(final StatusBarNotification statusBarNotification) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.29,5,3
6831_3,3,4,"if (statusBarNotification == null)
return;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,1,2,2,0,0,0,0.3,3,1
6831_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.1,3,1
6831_6,6,6,String key = statusBarNotification.getKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.27,1,0
6831_8,8,12,"if (!Prefs.getBoolean(Constants.PREF_ENABLE_NOTIFICATIONS, Constants.PREF_DEFAULT_ENABLE_NOTIFICATIONS)
|| (Prefs.getBoolean(Constants.PREF_DISABLE_REMOVE_NOTIFICATIONS, false))) {
Logger.debug(""[Notification Remove] Notification wont be removed due to current settings. (key: {})"", key);
return;
}",1,0,0,0,0,0,0,0,0,3,2,5,0,0,1,1,2,2,0,0,1,0.49,0,0
6831_9,9,9,"|| (Prefs.getBoolean(Constants.PREF_DISABLE_REMOVE_NOTIFICATIONS, false))) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.32,1,0
6831_10,10,10,"Logger.debug(""[Notification Remove] Notification wont be removed due to current settings. (key: {})"", key);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.46,2,1
6831_11,11,11,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.1,3,2
6831_15,15,19,"if (!(isPackageAllowed(statusBarNotification.getPackageName())
&& ((statusBarNotification.getNotification().flags & Notification.FLAG_ONGOING_EVENT) != Notification.FLAG_ONGOING_EVENT))) {
Logger.debug(""[Notification Remove] App {} is ignored: P || G || O"", statusBarNotification.getPackageName());
return;
}",1,0,0,0,0,0,0,0,0,3,2,5,0,0,1,1,2,2,0,0,0,0.28,7,4
6831_16,16,16,&& ((statusBarNotification.getNotification().flags & Notification.FLAG_ONGOING_EVENT) != Notification.FLAG_ONGOING_EVENT))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.27,8,4
6831_17,17,17,"Logger.debug(""[Notification Remove] App {} is ignored: P || G || O"", statusBarNotification.getPackageName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.28,9,5
6831_18,18,18,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.1,10,6
6831_23,23,23,DataBundle dataBundle = new DataBundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.2,15,8
6831_24,24,24,"dataBundle.putParcelable(""data"", StatusBarNotificationData.from(this, statusBarNotification, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.3,16,8
6831_26,26,26,String uuid = newKey(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.09,18,10
6831_27,27,27,"NotificationStore.addRemovedNotification(uuid, dataBundle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.23,19,10
6831_28,28,28,int id = NotificationJobService.NOTIFICATION_REMOVED;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.24,20,11
6831_29,29,29,int jobId = statusBarNotification.getId() + newUID();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.29,21,12
6831_31,31,31,"scheduleJob(id, jobId, uuid);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.15,23,14
6831_33,33,33,"Logger.debug(""[Notification Remove] Remove scheduled. key {}, jobId: {}, uuid: {}"", key, jobId, uuid);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.21,25,15
6831_36,36,59,"if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());

assert grouped != null;
for (int groupedId : grouped) {
jobId = groupedId + newUID();

dataBundle = new DataBundle();
StatusBarNotification sbn = new StatusBarNotification(statusBarNotification.getPackageName(), """",
groupedId, statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());
dataBundle.putParcelable(""data"", StatusBarNotificationData.from(this, sbn, false));

uuid = newKey(statusBarNotification.getKey());
NotificationStore.addRemovedNotification(uuid, dataBundle);

scheduleJob(id, jobId, uuid);

Logger.info(""onNotificationRemoved ungroup jobScheduled: "" + jobId + "" \\ uuid: "" + uuid);

}
grouped_notifications.remove(statusBarNotification.getId());
}",1,0,0,0,0,0,0,0,0,12,2,24,0,0,1,1,2,2,0,0,0,0.28,28,16
6831_37,37,37,int[] grouped = grouped_notifications.get(statusBarNotification.getId());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.29,29,16
6831_39,39,39,assert grouped != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.2,31,18
6831_40,40,57,"for (int groupedId : grouped) {
jobId = groupedId + newUID();

dataBundle = new DataBundle();
StatusBarNotification sbn = new StatusBarNotification(statusBarNotification.getPackageName(), """",
groupedId, statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());
dataBundle.putParcelable(""data"", StatusBarNotificationData.from(this, sbn, false));

uuid = newKey(statusBarNotification.getKey());
NotificationStore.addRemovedNotification(uuid, dataBundle);

scheduleJob(id, jobId, uuid);

Logger.info(""onNotificationRemoved ungroup jobScheduled: "" + jobId + "" \\ uuid: "" + uuid);

}",0,0,0,1,0,0,0,0,0,8,1,18,0,1,0,0,2,2,0,0,0,0.28,32,18
6831_41,41,41,jobId = groupedId + newUID();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.22,33,19
6831_43,43,43,dataBundle = new DataBundle();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.2,35,21
6831_44,44,47,"StatusBarNotification sbn = new StatusBarNotification(statusBarNotification.getPackageName(), """",
groupedId, statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());",0,0,0,0,0,1,0,0,0,0,0,4,0,1,0,0,2,2,0,0,0,0.3,36,21
6831_48,48,48,"dataBundle.putParcelable(""data"", StatusBarNotificationData.from(this, sbn, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.29,40,23
6831_50,50,50,uuid = newKey(statusBarNotification.getKey());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.26,42,24
6831_51,51,51,"NotificationStore.addRemovedNotification(uuid, dataBundle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.23,43,24
6831_53,53,53,"scheduleJob(id, jobId, uuid);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.15,45,26
6831_55,55,55,"Logger.info(""onNotificationRemoved ungroup jobScheduled: "" + jobId + "" \\ uuid: "" + uuid);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.22,47,27
6831_58,58,58,grouped_notifications.remove(statusBarNotification.getId());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.28,50,28
6831_62,62,64,"if (lastTimeNotificationArrived > 0) {
lastTimeNotificationArrived = 0;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,2,2,0,0,0,0.23,54,29
6831_63,63,63,lastTimeNotificationArrived = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.23,55,29
6831_65,65,67,"if (lastTimeNotificationSent > 0) {
lastTimeNotificationSent = 0;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,2,0,0,0,0.25,57,31
6831_66,66,66,lastTimeNotificationSent = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,58,31
6832_1,1,2,"@Override
public void onNotificationRemoved(final StatusBarNotification statusBarNotification) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,1,0.51,33,19
6832_3,3,4,"if (statusBarNotification == null)
return;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,1,3,3,0,0,1,0.48,31,17
6832_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.13,31,17
6832_6,6,6,String key = statusBarNotification.getKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.44,29,16
6832_8,8,12,"if (!Prefs.getBoolean(Constants.PREF_ENABLE_NOTIFICATIONS, Constants.PREF_DEFAULT_ENABLE_NOTIFICATIONS)
|| (Prefs.getBoolean(Constants.PREF_DISABLE_REMOVE_NOTIFICATIONS, false))) {
Logger.debug(""[Notification Remove] Notification wont be removed due to current settings. (key: {})"", key);
return;
}",1,0,0,0,0,0,0,0,0,3,2,5,0,0,1,1,3,3,0,0,1,0.49,23,12
6832_9,9,9,"|| (Prefs.getBoolean(Constants.PREF_DISABLE_REMOVE_NOTIFICATIONS, false))) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.49,26,14
6832_10,10,10,"Logger.debug(""[Notification Remove] Notification wont be removed due to current settings. (key: {})"", key);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.42,25,13
6832_11,11,11,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.13,24,12
6832_15,15,19,"if (!(isPackageAllowed(statusBarNotification.getPackageName())
&& ((statusBarNotification.getNotification().flags & Notification.FLAG_ONGOING_EVENT) != Notification.FLAG_ONGOING_EVENT))) {
Logger.debug(""[Notification Remove] App {} is ignored: P || G || O"", statusBarNotification.getPackageName());
return;
}",1,0,0,0,0,0,0,0,0,3,2,5,0,0,1,1,3,3,0,0,1,0.47,16,8
6832_16,16,16,&& ((statusBarNotification.getNotification().flags & Notification.FLAG_ONGOING_EVENT) != Notification.FLAG_ONGOING_EVENT))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.51,19,10
6832_17,17,17,"Logger.debug(""[Notification Remove] App {} is ignored: P || G || O"", statusBarNotification.getPackageName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.45,18,9
6832_18,18,18,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.13,17,8
6832_23,23,23,DataBundle dataBundle = new DataBundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.22,12,7
6832_24,24,24,"dataBundle.putParcelable(""data"", StatusBarNotificationData.from(this, statusBarNotification, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,1,0.48,11,6
6832_26,26,26,String uuid = newKey(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.24,9,5
6832_27,27,27,"NotificationStore.addRemovedNotification(uuid, dataBundle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.52,8,4
6832_28,28,28,int id = NotificationJobService.NOTIFICATION_REMOVED;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.5,7,3
6832_29,29,29,int jobId = statusBarNotification.getId() + newUID();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.45,6,2
6832_31,31,31,"scheduleJob(id, jobId, uuid);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.33,4,1
6832_33,33,33,"Logger.debug(""[Notification Remove] Remove scheduled. key {}, jobId: {}, uuid: {}"", key, jobId, uuid);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.45,2,0
6832_36,36,59,"if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());

assert grouped != null;
for (int groupedId : grouped) {
jobId = groupedId + newUID();

dataBundle = new DataBundle();
StatusBarNotification sbn = new StatusBarNotification(statusBarNotification.getPackageName(), """",
groupedId, statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());
dataBundle.putParcelable(""data"", StatusBarNotificationData.from(this, sbn, false));

uuid = newKey(statusBarNotification.getKey());
NotificationStore.addRemovedNotification(uuid, dataBundle);

scheduleJob(id, jobId, uuid);

Logger.info(""onNotificationRemoved ungroup jobScheduled: "" + jobId + "" \\ uuid: "" + uuid);

}
grouped_notifications.remove(statusBarNotification.getId());
}",1,0,0,0,0,0,0,0,0,12,2,24,0,0,1,1,3,3,0,0,2,0.6,0,0
6832_37,37,37,int[] grouped = grouped_notifications.get(statusBarNotification.getId());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,2,0.66,1,0
6832_39,39,39,assert grouped != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,3,0,0,1,0.53,3,2
6832_40,40,57,"for (int groupedId : grouped) {
jobId = groupedId + newUID();

dataBundle = new DataBundle();
StatusBarNotification sbn = new StatusBarNotification(statusBarNotification.getPackageName(), """",
groupedId, statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());
dataBundle.putParcelable(""data"", StatusBarNotificationData.from(this, sbn, false));

uuid = newKey(statusBarNotification.getKey());
NotificationStore.addRemovedNotification(uuid, dataBundle);

scheduleJob(id, jobId, uuid);

Logger.info(""onNotificationRemoved ungroup jobScheduled: "" + jobId + "" \\ uuid: "" + uuid);

}",0,0,0,1,0,0,0,0,0,8,1,18,0,1,0,0,3,3,0,0,2,0.59,4,2
6832_41,41,41,jobId = groupedId + newUID();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.46,5,3
6832_43,43,43,dataBundle = new DataBundle();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.22,7,5
6832_44,44,47,"StatusBarNotification sbn = new StatusBarNotification(statusBarNotification.getPackageName(), """",
groupedId, statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());",0,0,0,0,0,1,0,0,0,0,0,4,0,1,0,0,3,3,0,0,2,0.6,8,5
6832_48,48,48,"dataBundle.putParcelable(""data"", StatusBarNotificationData.from(this, sbn, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,1,0.45,12,7
6832_50,50,50,uuid = newKey(statusBarNotification.getKey());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,3,0,0,1,0.46,14,8
6832_51,51,51,"NotificationStore.addRemovedNotification(uuid, dataBundle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,1,0.52,15,8
6832_53,53,53,"scheduleJob(id, jobId, uuid);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.33,17,10
6832_55,55,55,"Logger.info(""onNotificationRemoved ungroup jobScheduled: "" + jobId + "" \\ uuid: "" + uuid);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.48,19,11
6832_58,58,58,grouped_notifications.remove(statusBarNotification.getId());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.65,22,12
6832_62,62,64,"if (lastTimeNotificationArrived > 0) {
lastTimeNotificationArrived = 0;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,3,0,0,1,0.45,26,13
6832_63,63,63,lastTimeNotificationArrived = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.45,27,13
6832_65,65,67,"if (lastTimeNotificationSent > 0) {
lastTimeNotificationSent = 0;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,1,0.48,29,15
6832_66,66,66,lastTimeNotificationSent = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.48,30,15
6833_1,1,2,"@Override
public void onNotificationRemoved(final StatusBarNotification statusBarNotification) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,1,0.48,36,21
6833_3,3,4,"if (statusBarNotification == null)
return;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,1,3,3,0,0,1,0.44,34,19
6833_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.07,34,19
6833_6,6,6,String key = statusBarNotification.getKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.46,32,18
6833_8,8,12,"if (!Prefs.getBoolean(Constants.PREF_ENABLE_NOTIFICATIONS, Constants.PREF_DEFAULT_ENABLE_NOTIFICATIONS)
|| (Prefs.getBoolean(Constants.PREF_DISABLE_REMOVE_NOTIFICATIONS, false))) {
Logger.debug(""[Notification Remove] Notification wont be removed due to current settings. (key: {})"", key);
return;
}",1,0,0,0,0,0,0,0,0,3,2,5,0,0,1,1,3,3,0,0,1,0.49,26,14
6833_9,9,9,"|| (Prefs.getBoolean(Constants.PREF_DISABLE_REMOVE_NOTIFICATIONS, false))) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.45,29,16
6833_10,10,10,"Logger.debug(""[Notification Remove] Notification wont be removed due to current settings. (key: {})"", key);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.47,28,15
6833_11,11,11,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.07,27,14
6833_15,15,19,"if (!(isPackageAllowed(statusBarNotification.getPackageName())
&& ((statusBarNotification.getNotification().flags & Notification.FLAG_ONGOING_EVENT) != Notification.FLAG_ONGOING_EVENT))) {
Logger.debug(""[Notification Remove] App {} is ignored: P || G || O"", statusBarNotification.getPackageName());
return;
}",1,0,0,0,0,0,0,0,0,3,2,5,0,0,1,1,3,3,0,0,1,0.5,19,10
6833_16,16,16,&& ((statusBarNotification.getNotification().flags & Notification.FLAG_ONGOING_EVENT) != Notification.FLAG_ONGOING_EVENT))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.57,22,12
6833_17,17,17,"Logger.debug(""[Notification Remove] App {} is ignored: P || G || O"", statusBarNotification.getPackageName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.47,21,11
6833_18,18,18,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.07,20,10
6833_23,23,23,DataBundle dataBundle = new DataBundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.25,15,9
6833_24,24,24,"dataBundle.putParcelable(""data"", StatusBarNotificationData.from(this, statusBarNotification, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,1,0.48,14,8
6833_26,26,26,String uuid = newKey(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.34,12,7
6833_27,27,27,"NotificationStore.addRemovedNotification(uuid, dataBundle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.54,11,6
6833_28,28,28,int id = NotificationJobService.NOTIFICATION_REMOVED;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.5,10,5
6833_29,29,29,int jobId = statusBarNotification.getId() + newUID();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.47,9,4
6833_31,31,31,"scheduleJob(id, jobId, uuid);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.36,7,3
6833_33,33,33,"Logger.debug(""[Notification Remove] Remove scheduled. key {}, jobId: {}, uuid: {}"", key, jobId, uuid);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.49,5,2
6833_36,36,59,"if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());

assert grouped != null;
for (int groupedId : grouped) {
jobId = groupedId + newUID();

dataBundle = new DataBundle();
StatusBarNotification sbn = new StatusBarNotification(statusBarNotification.getPackageName(), """",
groupedId, statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());
dataBundle.putParcelable(""data"", StatusBarNotificationData.from(this, sbn, false));

uuid = newKey(statusBarNotification.getKey());
NotificationStore.addRemovedNotification(uuid, dataBundle);

scheduleJob(id, jobId, uuid);

Logger.info(""onNotificationRemoved ungroup jobScheduled: "" + jobId + "" \\ uuid: "" + uuid);

}
grouped_notifications.remove(statusBarNotification.getId());
}",1,0,0,0,0,0,0,0,0,12,2,24,0,0,1,1,3,3,0,0,2,0.62,0,0
6833_37,37,37,int[] grouped = grouped_notifications.get(statusBarNotification.getId());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,3,0,0,2,0.64,1,0
6833_39,39,39,assert grouped != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,3,0,0,1,0.53,0,0
6833_40,40,57,"for (int groupedId : grouped) {
jobId = groupedId + newUID();

dataBundle = new DataBundle();
StatusBarNotification sbn = new StatusBarNotification(statusBarNotification.getPackageName(), """",
groupedId, statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());
dataBundle.putParcelable(""data"", StatusBarNotificationData.from(this, sbn, false));

uuid = newKey(statusBarNotification.getKey());
NotificationStore.addRemovedNotification(uuid, dataBundle);

scheduleJob(id, jobId, uuid);

Logger.info(""onNotificationRemoved ungroup jobScheduled: "" + jobId + "" \\ uuid: "" + uuid);

}",0,0,0,1,0,0,0,0,0,8,1,18,0,1,0,0,3,3,0,0,2,0.6,1,0
6833_41,41,41,jobId = groupedId + newUID();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,1,0.49,2,1
6833_43,43,43,dataBundle = new DataBundle();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.26,4,3
6833_44,44,47,"StatusBarNotification sbn = new StatusBarNotification(statusBarNotification.getPackageName(), """",
groupedId, statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());",0,0,0,0,0,1,0,0,0,0,0,4,0,1,0,0,3,3,0,0,2,0.61,5,3
6833_48,48,48,"dataBundle.putParcelable(""data"", StatusBarNotificationData.from(this, sbn, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,1,0.45,9,5
6833_50,50,50,uuid = newKey(statusBarNotification.getKey());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,3,0,0,1,0.51,11,6
6833_51,51,51,"NotificationStore.addRemovedNotification(uuid, dataBundle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,1,0.54,12,6
6833_53,53,53,"scheduleJob(id, jobId, uuid);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.36,14,8
6833_55,55,55,"Logger.info(""onNotificationRemoved ungroup jobScheduled: "" + jobId + "" \\ uuid: "" + uuid);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.51,16,9
6833_58,58,58,grouped_notifications.remove(statusBarNotification.getId());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.63,19,10
6833_62,62,64,"if (lastTimeNotificationArrived > 0) {
lastTimeNotificationArrived = 0;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,3,3,0,0,1,0.47,23,11
6833_63,63,63,lastTimeNotificationArrived = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.47,24,11
6833_65,65,67,"if (lastTimeNotificationSent > 0) {
lastTimeNotificationSent = 0;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,3,0,0,1,0.49,26,13
6833_66,66,66,lastTimeNotificationSent = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.49,27,13
6834_1,1,2,"@Override
public void onNotificationRemoved(final StatusBarNotification statusBarNotification) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,0,0,2,0.59,59,32
6834_3,3,4,"if (statusBarNotification == null)
return;",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,1,6,4,0,0,1,0.46,57,30
6834_4,4,4,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,6,4,0,0,0,0.2,57,30
6834_6,6,6,String key = statusBarNotification.getKey();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,0,0,1,0.42,55,29
6834_8,8,12,"if (!Prefs.getBoolean(Constants.PREF_ENABLE_NOTIFICATIONS, Constants.PREF_DEFAULT_ENABLE_NOTIFICATIONS)
|| (Prefs.getBoolean(Constants.PREF_DISABLE_REMOVE_NOTIFICATIONS, false))) {
Logger.debug(""[Notification Remove] Notification wont be removed due to current settings. (key: {})"", key);
return;
}",1,0,0,0,0,0,0,0,0,3,2,5,0,0,1,1,6,4,0,0,2,0.56,49,25
6834_9,9,9,"|| (Prefs.getBoolean(Constants.PREF_DISABLE_REMOVE_NOTIFICATIONS, false))) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,2,0.57,52,27
6834_10,10,10,"Logger.debug(""[Notification Remove] Notification wont be removed due to current settings. (key: {})"", key);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,2,0.58,51,26
6834_11,11,11,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.2,50,25
6834_15,15,19,"if (!(isPackageAllowed(statusBarNotification.getPackageName())
&& ((statusBarNotification.getNotification().flags & Notification.FLAG_ONGOING_EVENT) != Notification.FLAG_ONGOING_EVENT))) {
Logger.debug(""[Notification Remove] App {} is ignored: P || G || O"", statusBarNotification.getPackageName());
return;
}",1,0,0,0,0,0,0,0,0,3,2,5,0,0,1,1,6,4,0,0,2,0.57,42,21
6834_16,16,16,&& ((statusBarNotification.getNotification().flags & Notification.FLAG_ONGOING_EVENT) != Notification.FLAG_ONGOING_EVENT))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.55,45,23
6834_17,17,17,"Logger.debug(""[Notification Remove] App {} is ignored: P || G || O"", statusBarNotification.getPackageName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,2,0.53,44,22
6834_18,18,18,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.2,43,21
6834_23,23,23,DataBundle dataBundle = new DataBundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,0,0,0,0.19,38,20
6834_24,24,24,"dataBundle.putParcelable(""data"", StatusBarNotificationData.from(this, statusBarNotification, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,4,0,0,1,0.44,37,19
6834_26,26,26,String uuid = newKey(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,0,0,0,0.21,35,18
6834_27,27,27,"NotificationStore.addRemovedNotification(uuid, dataBundle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,2,0.59,34,17
6834_28,28,28,int id = NotificationJobService.NOTIFICATION_REMOVED;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,0,0,2,0.63,33,16
6834_29,29,29,int jobId = statusBarNotification.getId() + newUID();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,0,0,1,0.44,32,15
6834_31,31,31,"scheduleJob(id, jobId, uuid);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,0,0,0,0.29,30,14
6834_33,33,33,"Logger.debug(""[Notification Remove] Remove scheduled. key {}, jobId: {}, uuid: {}"", key, jobId, uuid);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,0,0,2,0.54,28,13
6834_36,36,59,"if (grouped_notifications.containsKey(statusBarNotification.getId())) {
int[] grouped = grouped_notifications.get(statusBarNotification.getId());

assert grouped != null;
for (int groupedId : grouped) {
jobId = groupedId + newUID();

dataBundle = new DataBundle();
StatusBarNotification sbn = new StatusBarNotification(statusBarNotification.getPackageName(), """",
groupedId, statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());
dataBundle.putParcelable(""data"", StatusBarNotificationData.from(this, sbn, false));

uuid = newKey(statusBarNotification.getKey());
NotificationStore.addRemovedNotification(uuid, dataBundle);

scheduleJob(id, jobId, uuid);

Logger.info(""onNotificationRemoved ungroup jobScheduled: "" + jobId + "" \\ uuid: "" + uuid);

}
grouped_notifications.remove(statusBarNotification.getId());
}",1,0,0,0,0,0,0,0,0,12,2,24,0,0,1,1,6,4,0,0,3,0.59,2,0
6834_37,37,37,int[] grouped = grouped_notifications.get(statusBarNotification.getId());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,0,0,1,0.46,24,11
6834_39,39,39,assert grouped != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,4,0,0,0,0.27,22,10
6834_40,40,57,"for (int groupedId : grouped) {
jobId = groupedId + newUID();

dataBundle = new DataBundle();
StatusBarNotification sbn = new StatusBarNotification(statusBarNotification.getPackageName(), """",
groupedId, statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());
dataBundle.putParcelable(""data"", StatusBarNotificationData.from(this, sbn, false));

uuid = newKey(statusBarNotification.getKey());
NotificationStore.addRemovedNotification(uuid, dataBundle);

scheduleJob(id, jobId, uuid);

Logger.info(""onNotificationRemoved ungroup jobScheduled: "" + jobId + "" \\ uuid: "" + uuid);

}",0,0,0,1,0,0,0,0,0,8,1,18,0,1,0,0,6,4,0,0,3,0.58,4,1
6834_41,41,41,jobId = groupedId + newUID();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,0,0,0,0.28,20,8
6834_43,43,43,dataBundle = new DataBundle();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,0,0,0,0.19,18,7
6834_44,44,47,"StatusBarNotification sbn = new StatusBarNotification(statusBarNotification.getPackageName(), """",
groupedId, statusBarNotification.getTag(), 0, 0, 0,
statusBarNotification.getNotification(), statusBarNotification.getUser(),
statusBarNotification.getPostTime());",0,0,0,0,0,1,0,0,0,0,0,4,0,1,0,0,6,4,0,0,2,0.54,14,6
6834_48,48,48,"dataBundle.putParcelable(""data"", StatusBarNotificationData.from(this, sbn, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,4,0,0,1,0.42,13,5
6834_50,50,50,uuid = newKey(statusBarNotification.getKey());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,4,0,0,1,0.42,11,4
6834_51,51,51,"NotificationStore.addRemovedNotification(uuid, dataBundle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,4,0,0,2,0.59,10,3
6834_53,53,53,"scheduleJob(id, jobId, uuid);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,0,0,0,0.29,8,2
6834_55,55,55,"Logger.info(""onNotificationRemoved ungroup jobScheduled: "" + jobId + "" \\ uuid: "" + uuid);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,0,0,2,0.54,6,1
6834_58,58,58,grouped_notifications.remove(statusBarNotification.getId());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,2,0.58,3,0
6834_62,62,64,"if (lastTimeNotificationArrived > 0) {
lastTimeNotificationArrived = 0;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,6,4,0,0,3,0.74,0,0
6834_63,63,63,lastTimeNotificationArrived = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,3,0.74,1,0
6834_65,65,67,"if (lastTimeNotificationSent > 0) {
lastTimeNotificationSent = 0;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,6,4,0,0,3,0.77,3,2
6834_66,66,66,lastTimeNotificationSent = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,3,0.77,4,2
6835_1,1,1,"    private void sendNotificationWithStandardUI(byte filterResult, StatusBarNotification statusBarNotification) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.55,4,3
6835_2,2,2,DataBundle dataBundle = new DataBundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.16,3,2
6835_3,3,3,"dataBundle.putParcelable(""data"", StatusBarNotificationData.from(this, statusBarNotification, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,1,0.51,2,1
6835_5,5,17,"if (isJobSchedulerEnabled()) {
String uuid = newKey(statusBarNotification.getKey());
int notificationId = statusBarNotification.getId();
int id = NotificationJobService.NOTIFICATION_POSTED_STANDARD_UI;
int jobId = notificationId + newUID();
NotificationStore.addStandardNotification(uuid, dataBundle);
scheduleJob(id, jobId, uuid);
Logger.info(""sendNotificationWithStandardUI jobScheduled: "" + jobId + "" \\ uuid: "" + uuid);

} else {
TransportService.sendWithTransporterHuami(""add"", dataBundle);
Logger.info(""sendNotificationWithStandardUI: "" + dataBundle.toString());
}",1,0,0,0,0,0,0,0,0,10,1,13,0,0,1,0,2,2,0,0,2,0.69,0,0
6835_6,6,6,String uuid = newKey(statusBarNotification.getKey());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.48,0,0
6835_7,7,7,int notificationId = statusBarNotification.getId();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.55,1,0
6835_8,8,8,int id = NotificationJobService.NOTIFICATION_POSTED_STANDARD_UI;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.61,2,1
6835_9,9,9,int jobId = notificationId + newUID();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.57,3,2
6835_10,10,10,"NotificationStore.addStandardNotification(uuid, dataBundle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.55,4,3
6835_11,11,11,"scheduleJob(id, jobId, uuid);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.57,5,4
6835_12,12,12,"Logger.info(""sendNotificationWithStandardUI jobScheduled: "" + jobId + "" \\ uuid: "" + uuid);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,2,0.72,6,5
6835_14,14,14,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.06,8,7
6835_15,15,15,"TransportService.sendWithTransporterHuami(""add"", dataBundle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.29,9,7
6835_16,16,16,"Logger.info(""sendNotificationWithStandardUI: "" + dataBundle.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.51,10,8
6836_1,1,1,"    private void sendNotificationWithStandardUI(byte filterResult, StatusBarNotification statusBarNotification) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,2,0.63,13,11
6836_2,2,2,DataBundle dataBundle = new DataBundle();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,2,0,0,0.2,12,10
6836_3,3,3,"dataBundle.putParcelable(""data"", StatusBarNotificationData.from(this, statusBarNotification, false));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,1,2,0,1,0.49,11,9
6836_5,5,17,"if (isJobSchedulerEnabled()) {
String uuid = newKey(statusBarNotification.getKey());
int notificationId = statusBarNotification.getId();
int id = NotificationJobService.NOTIFICATION_POSTED_STANDARD_UI;
int jobId = notificationId + newUID();
NotificationStore.addStandardNotification(uuid, dataBundle);
scheduleJob(id, jobId, uuid);
Logger.info(""sendNotificationWithStandardUI jobScheduled: "" + jobId + "" \\ uuid: "" + uuid);

} else {
TransportService.sendWithTransporterHuami(""add"", dataBundle);
Logger.info(""sendNotificationWithStandardUI: "" + dataBundle.toString());
}",1,0,0,0,0,0,0,0,0,10,1,13,0,0,1,0,3,1,2,0,2,0.6,0,0
6836_6,6,6,String uuid = newKey(statusBarNotification.getKey());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,1,2,0,1,0.47,8,7
6836_7,7,7,int notificationId = statusBarNotification.getId();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,1,2,0,1,0.5,7,6
6836_8,8,8,int id = NotificationJobService.NOTIFICATION_POSTED_STANDARD_UI;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,1,2,0,1,0.49,6,5
6836_9,9,9,int jobId = notificationId + newUID();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,1,2,0,1,0.51,5,4
6836_10,10,10,"NotificationStore.addStandardNotification(uuid, dataBundle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,2,0,1,0.48,4,3
6836_11,11,11,"scheduleJob(id, jobId, uuid);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,2,0,0,0.32,3,2
6836_12,12,12,"Logger.info(""sendNotificationWithStandardUI jobScheduled: "" + jobId + "" \\ uuid: "" + uuid);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,1,2,0,2,0.62,2,1
6836_14,14,14,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.14,0,0
6836_15,15,15,"TransportService.sendWithTransporterHuami(""add"", dataBundle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,2,0,1,0.45,0,0
6836_16,16,16,"Logger.info(""sendNotificationWithStandardUI: "" + dataBundle.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,2,0,2,0.63,1,0
6757_1,1,1,"public static NotificationData getMapNotification(Context context, StatusBarNotification statusBarNotification) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.5,23,14
6757_3,3,3,"Logger.debug(""getMapNotification package: {} key: {}"", statusBarNotification.getPackageName(), statusBarNotification.getKey());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,5,1,0,1,0.54,21,13
6757_5,5,5,NotificationData notificationData = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,5,1,0,0,0.25,19,12
6757_7,7,78,"if(Build.VERSION.SDK_INT < Build.VERSION_CODES.O) {
notificationData = fromStatusBarNotification(context, statusBarNotification);

RemoteViews rmv = getContentView(context, statusBarNotification.getNotification());
RemoteViews brmv = getBigContentView(context, statusBarNotification.getNotification());

if (rmv == null) {
rmv = brmv;
Logger.debug(""using BigContentView"");
} else {
Logger.debug(""using ContentView"");
}

if (rmv != null) {

List<String> txt = extractText(rmv);
if ((txt.size() > 0) && (!(txt.get(0).isEmpty()))) {

try {
LayoutInflater inflater = (LayoutInflater) context.getSystemService(LAYOUT_INFLATER_SERVICE);
View layout = inflater.inflate(R.layout.nav_layout, null);
ViewGroup frame = layout.findViewById(R.id.layout_navi);
frame.removeAllViews();
View newView = rmv.apply(context, frame);
frame.addView(newView);
View viewImage = ((ViewGroup) newView).getChildAt(0);
viewImage.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED);
Bitmap bitmap = Bitmap.createBitmap(viewImage.getMeasuredWidth(), viewImage.getMeasuredHeight(), Bitmap.Config.ARGB_8888);
Canvas canvas = new Canvas(bitmap);
viewImage.layout(0, 0, viewImage.getMeasuredWidth(), viewImage.getMeasuredHeight());
viewImage.draw(canvas);
bitmap = Bitmap.createScaledBitmap(bitmap, 48, 48, true);

int width = bitmap.getWidth();
int height = bitmap.getHeight();
int[] intArray = new int[width * height];
bitmap.getPixels(intArray, 0, width, 0, 0, width, height);
Logger.info(""bitmap dimensions: "" + width + "" x "" + height);

notificationData.setIcon(intArray);
notificationData.setIconWidth(width);
notificationData.setIconHeight(height);
} catch (Exception e) {
notificationData.setIcon(new int[]{});
Logger.error(e, ""failed to get bitmap with exception: {}"", e.getMessage());
}

notificationData.setTitle(txt.get(0));
if (txt.size() > 1)
notificationData.setText(txt.get(1));
else
notificationData.setText("""");
notificationData.setHideReplies(true);
notificationData.setHideButtons(false);
notificationData.setForceCustom(true);
}
return notificationData;

} else {
Logger.warn(""null remoteView"");
return null;
}

} else {
isNormalNotification = false;
notificationData = fromStatusBarNotification(context, statusBarNotification);
notificationData.setHideReplies(true);
notificationData.setHideButtons(false);
notificationData.setForceCustom(true);
isNormalNotification = true;
return notificationData;
}",1,0,0,0,0,0,0,0,0,55,5,72,0,0,1,0,7,5,1,0,5,0.73,0,0
6757_8,8,8,"notificationData = fromStatusBarNotification(context, statusBarNotification);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,5,1,0,0,0.45,16,10
6757_10,10,10,"RemoteViews rmv = getContentView(context, statusBarNotification.getNotification());",0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,7,5,1,0,2,0.65,14,9
6757_11,11,11,"RemoteViews brmv = getBigContentView(context, statusBarNotification.getNotification());",0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,7,5,1,0,2,0.65,13,8
6757_13,13,18,"if (rmv == null) {
rmv = brmv;
Logger.debug(""using BigContentView"");
} else {
Logger.debug(""using ContentView"");
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,1,1,7,5,1,0,1,0.53,6,3
6757_14,14,14,rmv = brmv;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.0,10,6
6757_15,15,15,"Logger.debug(""using BigContentView"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.53,9,5
6757_16,16,16,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.48,8,4
6757_17,17,17,"Logger.debug(""using ContentView"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.49,7,3
6757_20,20,68,"if (rmv != null) {

List<String> txt = extractText(rmv);
if ((txt.size() > 0) && (!(txt.get(0).isEmpty()))) {

try {
LayoutInflater inflater = (LayoutInflater) context.getSystemService(LAYOUT_INFLATER_SERVICE);
View layout = inflater.inflate(R.layout.nav_layout, null);
ViewGroup frame = layout.findViewById(R.id.layout_navi);
frame.removeAllViews();
View newView = rmv.apply(context, frame);
frame.addView(newView);
View viewImage = ((ViewGroup) newView).getChildAt(0);
viewImage.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED);
Bitmap bitmap = Bitmap.createBitmap(viewImage.getMeasuredWidth(), viewImage.getMeasuredHeight(), Bitmap.Config.ARGB_8888);
Canvas canvas = new Canvas(bitmap);
viewImage.layout(0, 0, viewImage.getMeasuredWidth(), viewImage.getMeasuredHeight());
viewImage.draw(canvas);
bitmap = Bitmap.createScaledBitmap(bitmap, 48, 48, true);

int width = bitmap.getWidth();
int height = bitmap.getHeight();
int[] intArray = new int[width * height];
bitmap.getPixels(intArray, 0, width, 0, 0, width, height);
Logger.info(""bitmap dimensions: "" + width + "" x "" + height);

notificationData.setIcon(intArray);
notificationData.setIconWidth(width);
notificationData.setIconHeight(height);
} catch (Exception e) {
notificationData.setIcon(new int[]{});
Logger.error(e, ""failed to get bitmap with exception: {}"", e.getMessage());
}

notificationData.setTitle(txt.get(0));
if (txt.size() > 1)
notificationData.setText(txt.get(1));
else
notificationData.setText("""");
notificationData.setHideReplies(true);
notificationData.setHideButtons(false);
notificationData.setForceCustom(true);
}
return notificationData;

} else {
Logger.warn(""null remoteView"");
return null;
}",1,0,0,0,0,0,0,0,0,38,4,49,0,0,1,1,7,5,1,0,5,0.73,0,0
6757_22,22,22,List<String> txt = extractText(rmv);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,5,1,0,0,0.37,2,1
6757_23,23,62,"if ((txt.size() > 0) && (!(txt.get(0).isEmpty()))) {

try {
LayoutInflater inflater = (LayoutInflater) context.getSystemService(LAYOUT_INFLATER_SERVICE);
View layout = inflater.inflate(R.layout.nav_layout, null);
ViewGroup frame = layout.findViewById(R.id.layout_navi);
frame.removeAllViews();
View newView = rmv.apply(context, frame);
frame.addView(newView);
View viewImage = ((ViewGroup) newView).getChildAt(0);
viewImage.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED);
Bitmap bitmap = Bitmap.createBitmap(viewImage.getMeasuredWidth(), viewImage.getMeasuredHeight(), Bitmap.Config.ARGB_8888);
Canvas canvas = new Canvas(bitmap);
viewImage.layout(0, 0, viewImage.getMeasuredWidth(), viewImage.getMeasuredHeight());
viewImage.draw(canvas);
bitmap = Bitmap.createScaledBitmap(bitmap, 48, 48, true);

int width = bitmap.getWidth();
int height = bitmap.getHeight();
int[] intArray = new int[width * height];
bitmap.getPixels(intArray, 0, width, 0, 0, width, height);
Logger.info(""bitmap dimensions: "" + width + "" x "" + height);

notificationData.setIcon(intArray);
notificationData.setIconWidth(width);
notificationData.setIconHeight(height);
} catch (Exception e) {
notificationData.setIcon(new int[]{});
Logger.error(e, ""failed to get bitmap with exception: {}"", e.getMessage());
}

notificationData.setTitle(txt.get(0));
if (txt.size() > 1)
notificationData.setText(txt.get(1));
else
notificationData.setText("""");
notificationData.setHideReplies(true);
notificationData.setHideButtons(false);
notificationData.setForceCustom(true);
}",1,0,0,0,0,0,0,0,0,32,3,40,0,1,0,0,7,5,1,0,5,0.74,0,0
6757_25,25,52,"try {
LayoutInflater inflater = (LayoutInflater) context.getSystemService(LAYOUT_INFLATER_SERVICE);
View layout = inflater.inflate(R.layout.nav_layout, null);
ViewGroup frame = layout.findViewById(R.id.layout_navi);
frame.removeAllViews();
View newView = rmv.apply(context, frame);
frame.addView(newView);
View viewImage = ((ViewGroup) newView).getChildAt(0);
viewImage.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED);
Bitmap bitmap = Bitmap.createBitmap(viewImage.getMeasuredWidth(), viewImage.getMeasuredHeight(), Bitmap.Config.ARGB_8888);
Canvas canvas = new Canvas(bitmap);
viewImage.layout(0, 0, viewImage.getMeasuredWidth(), viewImage.getMeasuredHeight());
viewImage.draw(canvas);
bitmap = Bitmap.createScaledBitmap(bitmap, 48, 48, true);

int width = bitmap.getWidth();
int height = bitmap.getHeight();
int[] intArray = new int[width * height];
bitmap.getPixels(intArray, 0, width, 0, 0, width, height);
Logger.info(""bitmap dimensions: "" + width + "" x "" + height);

notificationData.setIcon(intArray);
notificationData.setIconWidth(width);
notificationData.setIconHeight(height);
} catch (Exception e) {
notificationData.setIcon(new int[]{});
Logger.error(e, ""failed to get bitmap with exception: {}"", e.getMessage());
}",0,0,0,0,1,0,0,0,0,24,2,28,0,0,1,1,7,5,1,0,5,0.75,0,0
6757_26,26,26,LayoutInflater inflater = (LayoutInflater) context.getSystemService(LAYOUT_INFLATER_SERVICE);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.56,1,0
6757_27,27,27,"View layout = inflater.inflate(R.layout.nav_layout, null);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.62,2,1
6757_28,28,28,ViewGroup frame = layout.findViewById(R.id.layout_navi);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.54,3,2
6757_29,29,29,frame.removeAllViews();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.55,4,3
6757_30,30,30,"View newView = rmv.apply(context, frame);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.54,5,4
6757_31,31,31,frame.addView(newView);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.54,6,5
6757_32,32,32,View viewImage = ((ViewGroup) newView).getChildAt(0);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,1,0,3,0.7,7,6
6757_33,33,33,"viewImage.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.62,8,7
6757_34,34,34,"Bitmap bitmap = Bitmap.createBitmap(viewImage.getMeasuredWidth(), viewImage.getMeasuredHeight(), Bitmap.Config.ARGB_8888);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,1,0,2,0.64,9,8
6757_35,35,35,Canvas canvas = new Canvas(bitmap);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.63,10,9
6757_36,36,36,"viewImage.layout(0, 0, viewImage.getMeasuredWidth(), viewImage.getMeasuredHeight());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,2,0.65,11,10
6757_37,37,37,viewImage.draw(canvas);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,2,0.72,12,11
6757_38,38,38,"bitmap = Bitmap.createScaledBitmap(bitmap, 48, 48, true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,5,1,0,0,0.49,13,12
6757_40,40,40,int width = bitmap.getWidth();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,5,1,0,1,0.56,15,14
6757_41,41,41,int height = bitmap.getHeight();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.59,16,14
6757_42,42,42,int[] intArray = new int[width * height];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,1,0,0,0.43,17,15
6757_43,43,43,"bitmap.getPixels(intArray, 0, width, 0, 0, width, height);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.54,18,16
6757_44,44,44,"Logger.info(""bitmap dimensions: "" + width + "" x "" + height);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,7,5,1,0,0,0.56,19,17
6757_46,46,46,notificationData.setIcon(intArray);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,7,5,1,0,1,0.47,21,19
6757_47,47,47,notificationData.setIconWidth(width);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.51,22,19
6757_48,48,48,notificationData.setIconHeight(height);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,1,0.53,23,20
6757_49,49,49,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.16,24,21
6757_50,50,50,notificationData.setIcon(new int[]{});,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.45,25,22
6757_51,51,51,"Logger.error(e, ""failed to get bitmap with exception: {}"", e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.48,26,23
6757_54,54,54,notificationData.setTitle(txt.get(0));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,7,5,1,0,1,0.52,29,25
6757_55,55,58,"if (txt.size() > 1)
notificationData.setText(txt.get(1));
else
notificationData.setText("""");",1,0,0,0,0,0,0,0,0,2,0,4,1,1,0,0,7,5,1,0,1,0.47,30,25
6757_56,56,56,notificationData.setText(txt.get(1));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,5,1,0,1,0.44,31,26
6757_57,57,58,"else
notificationData.setText("""");",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,7,5,1,0,0,0.4,32,27
6757_59,59,59,notificationData.setHideReplies(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,0,0.47,34,29
6757_60,60,60,notificationData.setHideButtons(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,0,0.47,35,29
6757_61,61,61,notificationData.setForceCustom(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,0,0.32,36,30
6757_63,63,63,return notificationData;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,7,5,1,0,0,0.27,38,32
6757_65,65,65,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.48,40,33
6757_66,66,66,"Logger.warn(""null remoteView"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,1,0.47,41,33
6757_67,67,67,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.26,42,34
6757_70,70,70,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.48,45,36
6757_71,71,71,isNormalNotification = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.4,46,36
6757_72,72,72,"notificationData = fromStatusBarNotification(context, statusBarNotification);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,0,0.45,47,37
6757_73,73,73,notificationData.setHideReplies(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,0,0.47,48,38
6757_74,74,74,notificationData.setHideButtons(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,0,0.47,49,39
6757_75,75,75,notificationData.setForceCustom(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,1,0,0,0.32,50,40
6757_76,76,76,isNormalNotification = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.39,51,41
6757_77,77,77,return notificationData;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,5,1,0,0,0.27,52,42
6758_1,1,1,private static List<String> extractText(RemoteViews views) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,2,0.58,0,0
6758_2,2,2,List<String> text = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,2,0,0,0.35,0,0
6758_3,3,38,"try {
Field field = views.getClass().getDeclaredField(""mActions"");
field.setAccessible(true);

@SuppressWarnings(""unchecked"")
ArrayList<Parcelable> actions = (ArrayList<Parcelable>) field.get(views);

for (Parcelable p : actions) {
Parcel parcel = Parcel.obtain();
p.writeToParcel(parcel, 0);
parcel.setDataPosition(0);

int tag = parcel.readInt();
if (tag != 2) continue;

parcel.readInt();

String methodName = parcel.readString();
if (methodName == null)
continue;
else {

if (methodName.equals(""setText"")) {
parcel.readInt();

String t = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(parcel).toString().trim();
text.add(t);
}
}
parcel.recycle();
}
}
catch (Exception e) {
Logger.error(e, ""extractText exception: {}"", e.getMessage());
text.add(""ERROR"");
}",0,0,0,0,1,0,0,0,0,22,4,36,0,1,0,0,9,5,2,0,2,0.51,1,0
6758_4,4,4,"Field field = views.getClass().getDeclaredField(""mActions"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,2,0,2,0.56,2,1
6758_5,5,5,field.setAccessible(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,9,5,2,0,0,0.36,3,2
6758_7,7,8,"@SuppressWarnings(""unchecked"")
ArrayList<Parcelable> actions = (ArrayList<Parcelable>) field.get(views);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,9,5,2,0,2,0.54,5,4
6758_10,10,33,"for (Parcelable p : actions) {
Parcel parcel = Parcel.obtain();
p.writeToParcel(parcel, 0);
parcel.setDataPosition(0);

int tag = parcel.readInt();
if (tag != 2) continue;

parcel.readInt();

String methodName = parcel.readString();
if (methodName == null)
continue;
else {

if (methodName.equals(""setText"")) {
parcel.readInt();

String t = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(parcel).toString().trim();
text.add(t);
}
}
parcel.recycle();
}",0,0,0,1,0,0,0,0,0,15,3,24,0,0,1,0,9,5,2,0,1,0.45,8,5
6758_11,11,11,Parcel parcel = Parcel.obtain();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,2,0,0,0.46,9,5
6758_12,12,12,"p.writeToParcel(parcel, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,5,2,0,0,0.37,10,6
6758_13,13,13,parcel.setDataPosition(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,9,5,2,0,0,0.38,11,7
6758_15,15,15,int tag = parcel.readInt();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,5,2,0,0,0.34,13,9
6758_16,16,16,if (tag != 2) continue;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,9,5,2,0,0,0.3,14,9
6758_18,18,18,parcel.readInt();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,5,2,0,0,0.34,16,11
6758_20,20,20,String methodName = parcel.readString();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,5,2,0,0,0.39,18,12
6758_21,21,31,"if (methodName == null)
continue;
else {

if (methodName.equals(""setText"")) {
parcel.readInt();

String t = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(parcel).toString().trim();
text.add(t);
}
}",1,0,0,0,0,0,0,0,0,6,2,11,0,1,0,0,9,5,2,0,0,0.39,19,12
6758_22,22,22,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.3,20,13
6758_23,23,23,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.15,21,14
6758_25,25,30,"if (methodName.equals(""setText"")) {
parcel.readInt();

String t = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(parcel).toString().trim();
text.add(t);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,0,1,0,9,5,2,0,0,0.39,23,16
6758_26,26,26,parcel.readInt();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,5,2,0,0,0.34,24,16
6758_28,28,28,String t = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(parcel).toString().trim();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,5,2,0,0,0.39,26,18
6758_29,29,29,text.add(t);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,5,2,0,0,0.3,27,18
6758_32,32,32,parcel.recycle();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,5,2,0,0,0.47,30,20
6758_35,35,35,catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.3,33,21
6758_36,36,36,"Logger.error(e, ""extractText exception: {}"", e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.38,34,21
6758_37,37,37,"text.add(""ERROR"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,2,0,0,0.29,35,22
6758_39,39,39,return text;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,9,5,2,0,0,0.35,37,24
6759_1,1,1,private static List<String> extractText(RemoteViews views) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.49,26,18
6759_2,2,2,List<String> text = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.46,25,17
6759_3,3,38,"try {
Field field = views.getClass().getDeclaredField(""mActions"");
field.setAccessible(true);

@SuppressWarnings(""unchecked"")
ArrayList<Parcelable> actions = (ArrayList<Parcelable>) field.get(views);

for (Parcelable p : actions) {
Parcel parcel = Parcel.obtain();
p.writeToParcel(parcel, 0);
parcel.setDataPosition(0);

int tag = parcel.readInt();
if (tag != 2) continue;

parcel.readInt();

String methodName = parcel.readString();
if (methodName == null)
continue;
else {

if (methodName.equals(""setText"")) {
parcel.readInt();

String t = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(parcel).toString().trim();
text.add(t);
}
}
parcel.recycle();
}
}
catch (Exception e) {
Logger.error(e, ""extractText exception: {}"", e.getMessage());
text.add(""ERROR"");
}",0,0,0,0,1,0,0,0,0,22,4,36,0,1,0,0,3,2,0,0,1,0.47,0,0
6759_4,4,4,"Field field = views.getClass().getDeclaredField(""mActions"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.31,23,15
6759_5,5,5,field.setAccessible(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.24,22,14
6759_7,7,8,"@SuppressWarnings(""unchecked"")
ArrayList<Parcelable> actions = (ArrayList<Parcelable>) field.get(views);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,3,2,0,0,0,0.32,19,13
6759_10,10,33,"for (Parcelable p : actions) {
Parcel parcel = Parcel.obtain();
p.writeToParcel(parcel, 0);
parcel.setDataPosition(0);

int tag = parcel.readInt();
if (tag != 2) continue;

parcel.readInt();

String methodName = parcel.readString();
if (methodName == null)
continue;
else {

if (methodName.equals(""setText"")) {
parcel.readInt();

String t = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(parcel).toString().trim();
text.add(t);
}
}
parcel.recycle();
}",0,0,0,1,0,0,0,0,0,15,3,24,0,0,1,0,3,2,0,0,1,0.46,0,0
6759_11,11,11,Parcel parcel = Parcel.obtain();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.31,16,11
6759_12,12,12,"p.writeToParcel(parcel, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.27,15,10
6759_13,13,13,parcel.setDataPosition(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.28,14,9
6759_15,15,15,int tag = parcel.readInt();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,0,0.3,12,8
6759_16,16,16,if (tag != 2) continue;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,0,0,0,0.18,11,7
6759_18,18,18,parcel.readInt();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.32,9,6
6759_20,20,20,String methodName = parcel.readString();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.56,7,5
6759_21,21,31,"if (methodName == null)
continue;
else {

if (methodName.equals(""setText"")) {
parcel.readInt();

String t = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(parcel).toString().trim();
text.add(t);
}
}",1,0,0,0,0,0,0,0,0,6,2,11,0,1,0,0,3,2,0,0,1,0.47,0,0
6759_22,22,22,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.21,5,3
6759_23,23,23,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.26,4,2
6759_25,25,30,"if (methodName.equals(""setText"")) {
parcel.readInt();

String t = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(parcel).toString().trim();
text.add(t);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,0,1,0,3,2,0,0,1,0.48,0,0
6759_26,26,26,parcel.readInt();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.32,1,0
6759_28,28,28,String t = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(parcel).toString().trim();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,2,0,0,1,0.53,0,0
6759_29,29,29,text.add(t);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.26,1,0
6759_32,32,32,parcel.recycle();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.33,4,2
6759_35,35,35,catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.19,7,3
6759_36,36,36,"Logger.error(e, ""extractText exception: {}"", e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.32,8,3
6759_37,37,37,"text.add(""ERROR"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.24,9,4
6759_39,39,39,return text;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.25,11,6
1005_1,1,1,"@SuppressLint(""ClickableViewAccessibility"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.36,18,14
1005_2,2,3,"@Override
public void onCreate(@Nullable Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,7,0,0,0,0.32,16,13
1005_4,4,4,super.onCreate(savedInstanceState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.31,15,12
1005_5,5,5,binding = ActivityStatsBinding.inflate(getLayoutInflater());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.34,14,11
1005_6,6,6,setContentView(binding.getRoot());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.32,13,10
1005_7,7,7,logFile = this.getExternalFilesDir(null) + File.separator + Constants.LOGFILE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.25,12,9
1005_8,8,8,"Logger.debug(""logFile: {}"", logFile);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,7,0,0,0,0.24,11,8
1005_10,10,15,"try {
getSupportActionBar().setDisplayHomeAsUpEnabled(true);
getSupportActionBar().setTitle(R.string.stats);
} catch (NullPointerException exception) {
Logger.error(exception.getMessage());
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,1,1,9,7,0,0,0,0.41,4,3
1005_11,11,11,getSupportActionBar().setDisplayHomeAsUpEnabled(true);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,7,0,0,0,0.43,8,6
1005_12,12,12,getSupportActionBar().setTitle(R.string.stats);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,7,0,0,0,0.4,7,5
1005_13,13,13,} catch (NullPointerException exception) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.26,6,4
1005_14,14,14,Logger.error(exception.getMessage());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.26,5,3
1005_17,17,17,snackProgressBarManager = new SnackProgressBarManager(findViewById(android.R.id.content)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,7,0,0,0,0.36,2,2
1005_18,18,18,.setProgressBarColor(ThemeHelper.getThemeColorAccentId(this)),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,7,0,0,1,0.52,1,1
1005_19,19,19,.setActionTextColor(ThemeHelper.getThemeColorAccentId(this)),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,7,0,0,1,0.51,0,0
1005_20,20,20,.setBackgroundColor(SnackProgressBarManager.BACKGROUND_COLOR_DEFAULT),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,3,0.79,0,0
1005_21,21,21,.setTextSize(14),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.34,1,0
1005_22,22,22,.setMessageMaxLines(2),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.34,2,1
1005_23,23,23,.setOnDisplayListener(new SnackProgressBarManager.OnDisplayListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.39,3,2
1005_24,24,25,"@Override
public void onShown(@NonNull SnackProgressBar snackProgressBar, int onDisplayId) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,7,0,0,0,0.38,4,3
1005_28,28,29,"@Override
public void onDismissed(@NonNull SnackProgressBar snackProgressBar, int onDisplayId) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,9,7,0,0,0,0.39,8,5
1005_33,33,33,binding.activityStatsLogsContent.setMovementMethod(new ScrollingMovementMethod());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,7,0,0,0,0.32,13,6
1005_34,34,34,"binding.activityStatsRootLayout.setOnTouchListener((v, event) -> {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.36,14,6
1005_35,35,35,binding.activityStatsLogsContent.getParent().requestDisallowInterceptTouchEvent(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.35,15,7
1005_36,36,36,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.22,16,8
1005_39,39,39,"binding.activityStatsLogsContent.setOnTouchListener((v, event) -> {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,7,0,0,0,0.34,19,10
1005_40,40,40,binding.activityStatsLogsContent.getParent().requestDisallowInterceptTouchEvent(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.35,20,10
1005_41,41,41,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.22,21,11
1005_43,43,43,binding.activityStatsOpenNotificationsLog.setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.31,23,13
1005_44,44,44,"startActivity(new Intent(this, NotificationsLogActivity.class));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.27,24,13
1005_48,48,48,binding.activityStatsGenerateBundle.setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,7,0,0,0,0.32,28,15
1005_49,49,49,String generateBundleCmd = ShellCommandHelper.getLogBundleCommand();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,7,0,0,0,0.3,29,15
1005_50,50,50,generateLogBundle(generateBundleCmd);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,7,0,0,0,0.29,30,16
1005_53,53,53,binding.activityStatsClearLogs.setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,7,0,0,0,0.32,33,18
1005_54,54,59,"try {
binding.activityStatsLogsContent.setText("""");
FileWriter fw = new FileWriter(logFile, false);
} catch (IOException e) {
Logger.error(e, ""clearLogs: can't empty file: {}"", logFile);
}",0,0,0,0,1,0,0,0,0,4,2,6,0,0,0,0,9,7,0,0,0,0.33,34,18
1005_55,55,55,"binding.activityStatsLogsContent.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.35,35,19
1005_56,56,56,"FileWriter fw = new FileWriter(logFile, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.29,36,20
1005_57,57,57,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.18,37,21
1005_58,58,58,"Logger.error(e, ""clearLogs: can't empty file: {}"", logFile);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.28,38,22
1005_63,63,63,binding.activityStatsSendLogs.setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,7,0,0,0,0.31,43,24
1005_64,64,64,sendLogs();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.21,44,24
1006_1,1,1,"@SuppressLint(""ClickableViewAccessibility"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.34,19,15
1006_2,2,3,"@Override
public void onCreate(@Nullable Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,0,0,0,0.35,17,14
1006_4,4,4,super.onCreate(savedInstanceState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.28,16,13
1006_5,5,5,binding = ActivityStatsBinding.inflate(getLayoutInflater());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.33,15,12
1006_6,6,6,setContentView(binding.getRoot());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.31,14,11
1006_7,7,7,logFile = this.getExternalFilesDir(null) + File.separator + Constants.LOGFILE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.25,13,10
1006_8,8,8,"Logger.debug(""logFile: {}"", logFile);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,5,0,0,0,0.26,12,9
1006_10,10,15,"try {
getSupportActionBar().setDisplayHomeAsUpEnabled(true);
getSupportActionBar().setTitle(R.string.stats);
} catch (NullPointerException exception) {
Logger.error(exception.getMessage());
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,1,1,6,5,0,0,0,0.38,5,4
1006_11,11,11,getSupportActionBar().setDisplayHomeAsUpEnabled(true);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,5,0,0,0,0.39,9,7
1006_12,12,12,getSupportActionBar().setTitle(R.string.stats);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,5,0,0,0,0.39,8,6
1006_13,13,13,} catch (NullPointerException exception) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.29,7,5
1006_14,14,14,Logger.error(exception.getMessage());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.28,6,4
1006_17,17,17,snackProgressBarManager = new SnackProgressBarManager(findViewById(android.R.id.content)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,5,0,0,0,0.39,3,3
1006_18,18,18,.setProgressBarColor(ThemeHelper.getThemeColorAccentId(this)),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,5,0,0,0,0.42,2,2
1006_19,19,19,.setActionTextColor(ThemeHelper.getThemeColorAccentId(this)),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,5,0,0,1,0.46,1,1
1006_20,20,20,.setBackgroundColor(SnackProgressBarManager.BACKGROUND_COLOR_DEFAULT),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.51,0,0
1006_21,21,21,.setTextSize(14),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,2,0.6,0,0
1006_22,22,22,.setMessageMaxLines(2),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.39,1,0
1006_23,23,23,.setOnDisplayListener(new SnackProgressBarManager.OnDisplayListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.4,2,1
1006_24,24,25,"@Override
public void onShown(@NonNull SnackProgressBar snackProgressBar, int onDisplayId) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,0,0,0,0.39,3,2
1006_28,28,29,"@Override
public void onDismissed(@NonNull SnackProgressBar snackProgressBar, int onDisplayId) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,5,0,0,0,0.4,7,4
1006_33,33,33,binding.activityStatsLogsContent.setMovementMethod(new ScrollingMovementMethod());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,5,0,0,0,0.3,12,5
1006_34,34,34,"binding.activityStatsRootLayout.setOnTouchListener((v, event) -> {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.34,13,5
1006_35,35,35,binding.activityStatsLogsContent.getParent().requestDisallowInterceptTouchEvent(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.32,14,6
1006_36,36,36,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.25,15,7
1006_39,39,39,"binding.activityStatsLogsContent.setOnTouchListener((v, event) -> {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,5,0,0,0,0.33,18,9
1006_40,40,40,binding.activityStatsLogsContent.getParent().requestDisallowInterceptTouchEvent(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.33,19,9
1006_41,41,41,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.25,20,10
1006_43,43,43,binding.activityStatsOpenNotificationsLog.setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.31,22,12
1006_44,44,44,"startActivity(new Intent(this, NotificationsLogActivity.class));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.25,23,12
1006_48,48,48,binding.activityStatsGenerateBundle.setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,5,0,0,0,0.32,27,14
1006_49,49,49,String generateBundleCmd = ShellCommandHelper.getLogBundleCommand();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.3,28,14
1006_50,50,50,generateLogBundle(generateBundleCmd);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.29,29,15
1006_53,53,53,binding.activityStatsClearLogs.setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,5,0,0,0,0.31,32,17
1006_54,54,59,"try {
binding.activityStatsLogsContent.setText("""");
FileWriter fw = new FileWriter(logFile, false);
} catch (IOException e) {
Logger.error(e, ""clearLogs: can't empty file: {}"", logFile);
}",0,0,0,0,1,0,0,0,0,4,2,6,0,0,0,0,6,5,0,0,1,0.39,33,17
1006_55,55,55,"binding.activityStatsLogsContent.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.42,34,18
1006_56,56,56,"FileWriter fw = new FileWriter(logFile, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.31,35,19
1006_57,57,57,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.22,36,20
1006_58,58,58,"Logger.error(e, ""clearLogs: can't empty file: {}"", logFile);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.28,37,21
1006_63,63,63,binding.activityStatsSendLogs.setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,5,0,0,0,0.31,42,23
1006_64,64,64,sendLogs();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.21,43,23
1007_1,1,1,"@SuppressLint(""ClickableViewAccessibility"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.28,20,16
1007_2,2,3,"@Override
public void onCreate(@Nullable Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,1,0,0,0.3,18,15
1007_4,4,4,super.onCreate(savedInstanceState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.23,17,14
1007_5,5,5,binding = ActivityStatsBinding.inflate(getLayoutInflater());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.35,16,13
1007_6,6,6,setContentView(binding.getRoot());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.39,15,12
1007_7,7,7,logFile = this.getExternalFilesDir(null) + File.separator + Constants.LOGFILE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.28,14,11
1007_8,8,8,"Logger.debug(""logFile: {}"", logFile);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,1,0,0,0.25,13,10
1007_10,10,15,"try {
getSupportActionBar().setDisplayHomeAsUpEnabled(true);
getSupportActionBar().setTitle(R.string.stats);
} catch (NullPointerException exception) {
Logger.error(exception.getMessage());
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,1,1,6,3,1,0,1,0.45,6,5
1007_11,11,11,getSupportActionBar().setDisplayHomeAsUpEnabled(true);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,3,1,0,1,0.43,10,8
1007_12,12,12,getSupportActionBar().setTitle(R.string.stats);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,3,1,0,1,0.47,9,7
1007_13,13,13,} catch (NullPointerException exception) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.3,8,6
1007_14,14,14,Logger.error(exception.getMessage());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.28,7,5
1007_17,17,17,snackProgressBarManager = new SnackProgressBarManager(findViewById(android.R.id.content)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,1,0,0,0.35,4,4
1007_18,18,18,.setProgressBarColor(ThemeHelper.getThemeColorAccentId(this)),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,3,1,0,1,0.43,3,3
1007_19,19,19,.setActionTextColor(ThemeHelper.getThemeColorAccentId(this)),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,3,1,0,1,0.45,2,2
1007_20,20,20,.setBackgroundColor(SnackProgressBarManager.BACKGROUND_COLOR_DEFAULT),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,2,0.54,1,1
1007_21,21,21,.setTextSize(14),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.57,0,0
1007_22,22,22,.setMessageMaxLines(2),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,4,0.81,0,0
1007_23,23,23,.setOnDisplayListener(new SnackProgressBarManager.OnDisplayListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.44,1,0
1007_24,24,25,"@Override
public void onShown(@NonNull SnackProgressBar snackProgressBar, int onDisplayId) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,1,0,0,0.36,2,1
1007_28,28,29,"@Override
public void onDismissed(@NonNull SnackProgressBar snackProgressBar, int onDisplayId) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,3,1,0,0,0.38,6,3
1007_33,33,33,binding.activityStatsLogsContent.setMovementMethod(new ScrollingMovementMethod());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,1,0,1,0.39,11,4
1007_34,34,34,"binding.activityStatsRootLayout.setOnTouchListener((v, event) -> {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.42,12,4
1007_35,35,35,binding.activityStatsLogsContent.getParent().requestDisallowInterceptTouchEvent(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.32,13,5
1007_36,36,36,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.22,14,6
1007_39,39,39,"binding.activityStatsLogsContent.setOnTouchListener((v, event) -> {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,1,0,1,0.4,17,8
1007_40,40,40,binding.activityStatsLogsContent.getParent().requestDisallowInterceptTouchEvent(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.32,18,8
1007_41,41,41,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.22,19,9
1007_43,43,43,binding.activityStatsOpenNotificationsLog.setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.38,21,11
1007_44,44,44,"startActivity(new Intent(this, NotificationsLogActivity.class));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.24,22,11
1007_48,48,48,binding.activityStatsGenerateBundle.setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,1,0,1,0.41,26,13
1007_49,49,49,String generateBundleCmd = ShellCommandHelper.getLogBundleCommand();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.33,27,13
1007_50,50,50,generateLogBundle(generateBundleCmd);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,0,0.31,28,14
1007_53,53,53,binding.activityStatsClearLogs.setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,1,0,1,0.39,31,16
1007_54,54,59,"try {
binding.activityStatsLogsContent.setText("""");
FileWriter fw = new FileWriter(logFile, false);
} catch (IOException e) {
Logger.error(e, ""clearLogs: can't empty file: {}"", logFile);
}",0,0,0,0,1,0,0,0,0,4,2,6,0,0,0,0,6,3,1,0,1,0.39,32,16
1007_55,55,55,"binding.activityStatsLogsContent.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.44,33,17
1007_56,56,56,"FileWriter fw = new FileWriter(logFile, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.31,34,18
1007_57,57,57,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.23,35,19
1007_58,58,58,"Logger.error(e, ""clearLogs: can't empty file: {}"", logFile);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.25,36,20
1007_63,63,63,binding.activityStatsSendLogs.setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,1,0,1,0.39,41,22
1007_64,64,64,sendLogs();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.22,42,22
1008_1,1,1,"@SuppressLint(""ClickableViewAccessibility"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.25,21,17
1008_2,2,3,"@Override
public void onCreate(@Nullable Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.35,19,16
1008_4,4,4,super.onCreate(savedInstanceState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.33,18,15
1008_5,5,5,binding = ActivityStatsBinding.inflate(getLayoutInflater());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.34,17,14
1008_6,6,6,setContentView(binding.getRoot());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.32,16,13
1008_7,7,7,logFile = this.getExternalFilesDir(null) + File.separator + Constants.LOGFILE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.27,15,12
1008_8,8,8,"Logger.debug(""logFile: {}"", logFile);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.35,14,11
1008_10,10,15,"try {
getSupportActionBar().setDisplayHomeAsUpEnabled(true);
getSupportActionBar().setTitle(R.string.stats);
} catch (NullPointerException exception) {
Logger.error(exception.getMessage());
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,1,1,4,4,0,0,1,0.49,7,6
1008_11,11,11,getSupportActionBar().setDisplayHomeAsUpEnabled(true);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,1,0.5,11,9
1008_12,12,12,getSupportActionBar().setTitle(R.string.stats);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.44,10,8
1008_13,13,13,} catch (NullPointerException exception) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.3,9,7
1008_14,14,14,Logger.error(exception.getMessage());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.39,8,6
1008_17,17,17,snackProgressBarManager = new SnackProgressBarManager(findViewById(android.R.id.content)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.39,5,5
1008_18,18,18,.setProgressBarColor(ThemeHelper.getThemeColorAccentId(this)),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.41,4,4
1008_19,19,19,.setActionTextColor(ThemeHelper.getThemeColorAccentId(this)),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.4,3,3
1008_20,20,20,.setBackgroundColor(SnackProgressBarManager.BACKGROUND_COLOR_DEFAULT),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.37,2,2
1008_21,21,21,.setTextSize(14),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.32,1,1
1008_22,22,22,.setMessageMaxLines(2),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.31,0,0
1008_23,23,23,.setOnDisplayListener(new SnackProgressBarManager.OnDisplayListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.69,0,0
1008_24,24,25,"@Override
public void onShown(@NonNull SnackProgressBar snackProgressBar, int onDisplayId) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,1,0.5,1,0
1008_28,28,29,"@Override
public void onDismissed(@NonNull SnackProgressBar snackProgressBar, int onDisplayId) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,4,0,0,1,0.5,5,2
1008_33,33,33,binding.activityStatsLogsContent.setMovementMethod(new ScrollingMovementMethod());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.34,10,3
1008_34,34,34,"binding.activityStatsRootLayout.setOnTouchListener((v, event) -> {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.47,11,3
1008_35,35,35,binding.activityStatsLogsContent.getParent().requestDisallowInterceptTouchEvent(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.35,12,4
1008_36,36,36,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.17,13,5
1008_39,39,39,"binding.activityStatsLogsContent.setOnTouchListener((v, event) -> {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.46,16,7
1008_40,40,40,binding.activityStatsLogsContent.getParent().requestDisallowInterceptTouchEvent(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.35,17,7
1008_41,41,41,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.17,18,8
1008_43,43,43,binding.activityStatsOpenNotificationsLog.setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.47,20,10
1008_44,44,44,"startActivity(new Intent(this, NotificationsLogActivity.class));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.31,21,10
1008_48,48,48,binding.activityStatsGenerateBundle.setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.5,25,12
1008_49,49,49,String generateBundleCmd = ShellCommandHelper.getLogBundleCommand();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.37,26,12
1008_50,50,50,generateLogBundle(generateBundleCmd);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.33,27,13
1008_53,53,53,binding.activityStatsClearLogs.setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.48,30,15
1008_54,54,59,"try {
binding.activityStatsLogsContent.setText("""");
FileWriter fw = new FileWriter(logFile, false);
} catch (IOException e) {
Logger.error(e, ""clearLogs: can't empty file: {}"", logFile);
}",0,0,0,0,1,0,0,0,0,4,2,6,0,0,0,0,4,4,0,0,0,0.38,31,15
1008_55,55,55,"binding.activityStatsLogsContent.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.35,32,16
1008_56,56,56,"FileWriter fw = new FileWriter(logFile, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.36,33,17
1008_57,57,57,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.28,34,18
1008_58,58,58,"Logger.error(e, ""clearLogs: can't empty file: {}"", logFile);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.36,35,19
1008_63,63,63,binding.activityStatsSendLogs.setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.48,40,21
1008_64,64,64,sendLogs();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.28,41,21
1009_1,1,1,"@SuppressLint(""ClickableViewAccessibility"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,1,0.51,31,20
1009_2,2,3,"@Override
public void onCreate(@Nullable Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,5,2,0,0,0.32,29,19
1009_4,4,4,super.onCreate(savedInstanceState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.3,28,18
1009_5,5,5,binding = ActivityStatsBinding.inflate(getLayoutInflater());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.44,27,17
1009_6,6,6,setContentView(binding.getRoot());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,1,0.44,26,16
1009_7,7,7,logFile = this.getExternalFilesDir(null) + File.separator + Constants.LOGFILE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.28,25,15
1009_8,8,8,"Logger.debug(""logFile: {}"", logFile);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,5,2,0,0,0.23,24,14
1009_10,10,15,"try {
getSupportActionBar().setDisplayHomeAsUpEnabled(true);
getSupportActionBar().setTitle(R.string.stats);
} catch (NullPointerException exception) {
Logger.error(exception.getMessage());
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,1,1,7,5,2,0,0,0.37,17,9
1009_11,11,11,getSupportActionBar().setDisplayHomeAsUpEnabled(true);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,5,2,0,0,0.33,21,12
1009_12,12,12,getSupportActionBar().setTitle(R.string.stats);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,5,2,0,0,0.35,20,11
1009_13,13,13,} catch (NullPointerException exception) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.31,19,10
1009_14,14,14,Logger.error(exception.getMessage());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.29,18,9
1009_17,17,17,snackProgressBarManager = new SnackProgressBarManager(findViewById(android.R.id.content)),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,5,2,0,1,0.42,15,8
1009_18,18,18,.setProgressBarColor(ThemeHelper.getThemeColorAccentId(this)),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,5,2,0,0,0.37,14,7
1009_19,19,19,.setActionTextColor(ThemeHelper.getThemeColorAccentId(this)),0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,7,5,2,0,1,0.43,13,6
1009_20,20,20,.setBackgroundColor(SnackProgressBarManager.BACKGROUND_COLOR_DEFAULT),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.36,12,5
1009_21,21,21,.setTextSize(14),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,1,0.42,11,4
1009_22,22,22,.setMessageMaxLines(2),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.29,10,3
1009_23,23,23,.setOnDisplayListener(new SnackProgressBarManager.OnDisplayListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.34,9,2
1009_24,24,25,"@Override
public void onShown(@NonNull SnackProgressBar snackProgressBar, int onDisplayId) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,5,2,0,0,0.34,7,1
1009_28,28,29,"@Override
public void onDismissed(@NonNull SnackProgressBar snackProgressBar, int onDisplayId) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,7,5,2,0,0,0.38,3,0
1009_33,33,33,binding.activityStatsLogsContent.setMovementMethod(new ScrollingMovementMethod());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,5,2,0,1,0.42,0,0
1009_34,34,34,"binding.activityStatsRootLayout.setOnTouchListener((v, event) -> {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.4,1,0
1009_35,35,35,binding.activityStatsLogsContent.getParent().requestDisallowInterceptTouchEvent(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.38,2,1
1009_36,36,36,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.23,3,2
1009_39,39,39,"binding.activityStatsLogsContent.setOnTouchListener((v, event) -> {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,5,2,0,0,0.37,6,4
1009_40,40,40,binding.activityStatsLogsContent.getParent().requestDisallowInterceptTouchEvent(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.38,7,4
1009_41,41,41,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.23,8,5
1009_43,43,43,binding.activityStatsOpenNotificationsLog.setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.39,10,7
1009_44,44,44,"startActivity(new Intent(this, NotificationsLogActivity.class));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.3,11,7
1009_48,48,48,binding.activityStatsGenerateBundle.setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,5,2,0,0,0.41,15,9
1009_49,49,49,String generateBundleCmd = ShellCommandHelper.getLogBundleCommand();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,5,2,0,0,0.31,16,9
1009_50,50,50,generateLogBundle(generateBundleCmd);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,5,2,0,0,0.29,17,10
1009_53,53,53,binding.activityStatsClearLogs.setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,5,2,0,0,0.4,20,12
1009_54,54,59,"try {
binding.activityStatsLogsContent.setText("""");
FileWriter fw = new FileWriter(logFile, false);
} catch (IOException e) {
Logger.error(e, ""clearLogs: can't empty file: {}"", logFile);
}",0,0,0,0,1,0,0,0,0,4,2,6,0,0,0,0,7,5,2,0,1,0.41,21,12
1009_55,55,55,"binding.activityStatsLogsContent.setText("""");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,1,0.45,22,13
1009_56,56,56,"FileWriter fw = new FileWriter(logFile, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.31,23,14
1009_57,57,57,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.21,24,15
1009_58,58,58,"Logger.error(e, ""clearLogs: can't empty file: {}"", logFile);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.29,25,16
1009_63,63,63,binding.activityStatsSendLogs.setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,5,2,0,0,0.4,30,18
1009_64,64,64,sendLogs();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,5,2,0,0,0.21,31,18
1010_1,1,1,private void sendLogs() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,2,0.66,5,3
1010_2,2,2,final String logContent = binding.activityStatsLogsContent.getText().toString();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.43,4,2
1010_3,3,3,"Logger.trace(""logTextView: {} logFile: {}"", logContent.substring(0, Math.min(logContent.length(), 48)), logFile);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,1,0,2,0.6,3,1
1010_6,6,6,File file = new File(logFile);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,1,0,2,0.7,0,0
1010_7,7,18,"if (file.exists()) {
Uri path = Build.VERSION.SDK_INT >= Build.VERSION_CODES.N ?
FileProvider.getUriForFile(this, Constants.FILE_PROVIDER, file)
: Uri.fromFile(file);
Intent sendIntent = new Intent(Intent.ACTION_SEND);
sendIntent.putExtra(Intent.EXTRA_TEXT, ""AmazMod Phone Logs"");
sendIntent.putExtra(Intent.EXTRA_STREAM, path);
sendIntent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
sendIntent.setType(""plain/*"");
startActivity(Intent.createChooser(sendIntent, getString(R.string.send_log)));
} else
Toast.makeText(this, getString(R.string.file_not_found), Toast.LENGTH_LONG).show();",1,0,0,0,0,0,0,0,0,8,1,12,0,1,0,1,5,4,1,0,3,0.63,0,0
1010_8,8,10,"Uri path = Build.VERSION.SDK_INT >= Build.VERSION_CODES.N ?
FileProvider.getUriForFile(this, Constants.FILE_PROVIDER, file)
: Uri.fromFile(file);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,5,4,1,0,1,0.51,1,0
1010_11,11,11,Intent sendIntent = new Intent(Intent.ACTION_SEND);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.49,4,2
1010_12,12,12,"sendIntent.putExtra(Intent.EXTRA_TEXT, ""AmazMod Phone Logs"");",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,4,1,0,2,0.56,5,2
1010_13,13,13,"sendIntent.putExtra(Intent.EXTRA_STREAM, path);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,4,1,0,1,0.49,6,3
1010_14,14,14,sendIntent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.49,7,4
1010_15,15,15,"sendIntent.setType(""plain/*"");",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,1,0.46,8,5
1010_16,16,16,"startActivity(Intent.createChooser(sendIntent, getString(R.string.send_log)));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,2,0.53,9,6
1010_17,17,18,"} else
Toast.makeText(this, getString(R.string.file_not_found), Toast.LENGTH_LONG).show();",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,5,4,1,0,1,0.43,10,7
3386_1,1,1,public void run() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.39,1,1
3386_2,2,2,notificationManager.post(notificationData);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.27,0,0
3386_3,3,12,"if (!DeviceUtil.isDNDActive(context)) {
final Vibrator vibrator = (Vibrator) getSystemService(VIBRATOR_SERVICE);
if (vibrator == null) return;

try {
vibrator.vibrate(new long[]{1000 , vibrate}, -1);
} catch (Exception e) {
Logger.error(""vibrator exception: {}"", e.getMessage());
}
}",1,0,0,0,0,0,0,0,0,6,3,10,0,0,0,1,3,3,0,0,3,0.71,0,0
3386_4,4,4,final Vibrator vibrator = (Vibrator) getSystemService(VIBRATOR_SERVICE);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.57,1,0
3386_5,5,5,if (vibrator == null) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,1,0.55,2,1
3386_7,7,11,"try {
vibrator.vibrate(new long[]{1000 , vibrate}, -1);
} catch (Exception e) {
Logger.error(""vibrator exception: {}"", e.getMessage());
}",0,0,0,0,1,0,0,0,0,3,2,5,0,0,1,0,3,3,0,0,1,0.49,4,3
3386_8,8,8,"vibrator.vibrate(new long[]{1000 , vibrate}, -1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.58,5,3
3386_9,9,9,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.19,6,4
3386_10,10,10,"Logger.error(""vibrator exception: {}"", e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.46,7,5
3386_14,14,14,isRunning = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.35,11,7
3406_1,1,1,@Subscribe(threadMode = ThreadMode.BACKGROUND),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.41,6,5
3406_2,2,2,public void deleteNotification(DeleteNotificationEvent deleteNotificationEvent) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.54,5,4
3406_3,3,3,"boolean enableCustomUI = settingsManager.getBoolean(Constants.PREF_NOTIFICATIONS_ENABLE_CUSTOM_UI, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.46,4,3
3406_4,4,4,"StatusBarNotificationData statusBarNotificationData = deleteNotificationEvent.getDataBundle().getParcelable(""data"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.49,3,2
3406_5,5,5,String key = statusBarNotificationData.key;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.49,2,1
3406_6,6,6,"Logger.warn(""deleteNotification enableCustomUI: {} \\ key: {}"", enableCustomUI, key);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,0,0,1,0.47,1,0
3406_8,8,8,"DeviceUtil.notificationCounter(context, -1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,2,0.65,0,0
3406_10,10,10,if (!enableCustomUI) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,2,0,0,0,0.31,2,1
3406_12,12,23,"if (key != null) {
if (NotificationStore.getCustomNotificationCount() > 0)
for (ArrayMap.Entry<String, String> pair : NotificationStore.keyMap.entrySet()) {

if (key.equals(pair.getValue())) {
Logger.warn(""deleteNotification removing: {}"", pair.getKey());
NotificationStore.removeCustomNotification(pair.getKey(), context);
}
}
else
Logger.warn(""deleteNotification empty NotificationStore"");
}",1,0,0,0,0,0,0,0,0,6,4,12,0,0,1,0,3,2,0,0,1,0.51,4,2
3406_13,13,22,"if (NotificationStore.getCustomNotificationCount() > 0)
for (ArrayMap.Entry<String, String> pair : NotificationStore.keyMap.entrySet()) {

if (key.equals(pair.getValue())) {
Logger.warn(""deleteNotification removing: {}"", pair.getKey());
NotificationStore.removeCustomNotification(pair.getKey(), context);
}
}
else
Logger.warn(""deleteNotification empty NotificationStore"");",1,0,0,0,0,0,0,0,0,5,3,10,0,0,0,0,3,2,0,0,1,0.52,5,2
3406_14,14,20,"for (ArrayMap.Entry<String, String> pair : NotificationStore.keyMap.entrySet()) {

if (key.equals(pair.getValue())) {
Logger.warn(""deleteNotification removing: {}"", pair.getKey());
NotificationStore.removeCustomNotification(pair.getKey(), context);
}
}",0,0,0,1,0,0,0,0,0,3,3,7,1,0,0,0,3,2,0,0,1,0.5,6,3
3406_16,16,19,"if (key.equals(pair.getValue())) {
Logger.warn(""deleteNotification removing: {}"", pair.getKey());
NotificationStore.removeCustomNotification(pair.getKey(), context);
}",1,0,0,0,0,0,0,0,0,2,2,4,0,0,1,0,3,2,0,0,1,0.52,8,5
3406_17,17,17,"Logger.warn(""deleteNotification removing: {}"", pair.getKey());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,1,0.46,9,5
3406_18,18,18,"NotificationStore.removeCustomNotification(pair.getKey(), context);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,1,0.52,10,6
3406_21,21,22,"else
Logger.warn(""deleteNotification empty NotificationStore"");",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,3,2,0,0,1,0.51,13,8
3407_1,1,1,@Subscribe(threadMode = ThreadMode.BACKGROUND),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.36,8,6
3407_2,2,2,public void deleteNotification(DeleteNotificationEvent deleteNotificationEvent) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.49,7,5
3407_3,3,3,"boolean enableCustomUI = settingsManager.getBoolean(Constants.PREF_NOTIFICATIONS_ENABLE_CUSTOM_UI, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.71,6,4
3407_4,4,4,"StatusBarNotificationData statusBarNotificationData = deleteNotificationEvent.getDataBundle().getParcelable(""data"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.48,5,3
3407_5,5,5,String key = statusBarNotificationData.key;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.45,4,2
3407_6,6,6,"Logger.warn(""deleteNotification enableCustomUI: {} \\ key: {}"", enableCustomUI, key);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,3,0,0,3,0.71,3,1
3407_8,8,8,"DeviceUtil.notificationCounter(context, -1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,0.44,1,0
3407_10,10,10,if (!enableCustomUI) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,2,0.64,0,0
3407_12,12,23,"if (key != null) {
if (NotificationStore.getCustomNotificationCount() > 0)
for (ArrayMap.Entry<String, String> pair : NotificationStore.keyMap.entrySet()) {

if (key.equals(pair.getValue())) {
Logger.warn(""deleteNotification removing: {}"", pair.getKey());
NotificationStore.removeCustomNotification(pair.getKey(), context);
}
}
else
Logger.warn(""deleteNotification empty NotificationStore"");
}",1,0,0,0,0,0,0,0,0,6,4,12,0,0,1,0,4,3,0,0,2,0.57,2,1
3407_13,13,22,"if (NotificationStore.getCustomNotificationCount() > 0)
for (ArrayMap.Entry<String, String> pair : NotificationStore.keyMap.entrySet()) {

if (key.equals(pair.getValue())) {
Logger.warn(""deleteNotification removing: {}"", pair.getKey());
NotificationStore.removeCustomNotification(pair.getKey(), context);
}
}
else
Logger.warn(""deleteNotification empty NotificationStore"");",1,0,0,0,0,0,0,0,0,5,3,10,0,0,0,0,4,3,0,0,2,0.57,3,1
3407_14,14,20,"for (ArrayMap.Entry<String, String> pair : NotificationStore.keyMap.entrySet()) {

if (key.equals(pair.getValue())) {
Logger.warn(""deleteNotification removing: {}"", pair.getKey());
NotificationStore.removeCustomNotification(pair.getKey(), context);
}
}",0,0,0,1,0,0,0,0,0,3,3,7,1,0,0,0,4,3,0,0,2,0.55,4,2
3407_16,16,19,"if (key.equals(pair.getValue())) {
Logger.warn(""deleteNotification removing: {}"", pair.getKey());
NotificationStore.removeCustomNotification(pair.getKey(), context);
}",1,0,0,0,0,0,0,0,0,2,2,4,0,0,1,0,4,3,0,0,2,0.57,6,4
3407_17,17,17,"Logger.warn(""deleteNotification removing: {}"", pair.getKey());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,1,0.48,7,4
3407_18,18,18,"NotificationStore.removeCustomNotification(pair.getKey(), context);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,2,0.59,8,5
3407_21,21,22,"else
Logger.warn(""deleteNotification empty NotificationStore"");",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,4,3,0,0,1,0.5,11,7
2903_1,1,1,public void onSensorChanged(SensorEvent sensorEvent) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.4,16,13
2903_2,2,2,if (sleepStore.isSuspended()) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.48,15,12
2903_3,3,3,float x = sensorEvent.values[0];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.4,14,11
2903_4,4,4,float y = sensorEvent.values[1];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.39,13,10
2903_5,5,5,float z = sensorEvent.values[2];,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,2,1,0,0,0.39,12,9
2903_7,7,7,float max = abs(x - lastX) + abs(y - lastY) + abs(z - lastZ);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,2,1,0,0,0.43,10,8
2903_8,8,8,if (max > current_max_data) current_max_data = max;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,1,0,0,0.38,9,7
2903_9,9,9,float max_raw = (float) sqrt((x * x) + (y * y) + (z * z));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,1,0,0,0.41,8,6
2903_10,10,10,if (max_raw > current_max_raw_data) current_max_raw_data = max_raw;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,1,0,0,0.36,7,5
2903_11,11,11,lastX = x;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.44,6,4
2903_12,12,12,lastY = y;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.47,5,3
2903_13,13,13,lastZ = z;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,2,1,0,0,0.42,4,2
2903_15,15,15,int tsMillis = (int) (sensorEvent.timestamp / 1_000_000L);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,2,1,0,0,0.53,2,1
2903_17,17,17,if (latestSaveBatch == 0) latestSaveBatch = tsMillis;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,2,1,0,3,0.85,0,0
2903_18,18,25,"if (tsMillis - latestSaveBatch >= sleepConstants.SECS_PER_MAX_VALUE * 1000 ) {
Logger.debug(new SimpleDateFormat(""hh:mm:ss"", Locale.US).format(new Date()) + ""- Added accelerometer values to batch"");
sleepStore.addMaxData(current_max_data, current_max_raw_data);
current_max_data = 0;
current_max_raw_data = 0;
latestSaveBatch = tsMillis;
checkAndSendBatch();
}",1,0,0,0,0,0,0,0,0,6,1,8,0,1,0,0,6,2,1,0,3,0.69,0,0
2903_19,19,19,"Logger.debug(new SimpleDateFormat(""hh:mm:ss"", Locale.US).format(new Date()) + ""- Added accelerometer values to batch"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.54,1,0
2903_20,20,20,"sleepStore.addMaxData(current_max_data, current_max_raw_data);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.48,2,1
2903_21,21,21,current_max_data = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.37,3,2
2903_22,22,22,current_max_raw_data = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.36,4,3
2903_23,23,23,latestSaveBatch = tsMillis;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,3,0.85,5,4
2903_24,24,24,checkAndSendBatch();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.57,6,5
2904_1,1,1,    private void checkAndSendBatch() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,2,0,2,0.64,0,0
2904_2,2,10,"if (sleepStore.getMaxData().size() >= sleepStore.getBatchSize()) {
SleepData sleepData = new SleepData();
sleepData.setAction(SleepData.actions.ACTION_DATA_UPDATE);
sleepData.setMax_data(sleepUtils.linkedToArray(sleepStore.getMaxData()));
sleepData.setMax_raw_data(sleepUtils.linkedToArray(sleepStore.getMaxRawData()));
sleepStore.resetMaxData();
Logger.debug(""Sending sleep batch to phone..."");
sleepService.send(sleepData.toDataBundle(new DataBundle()));
}",1,0,0,0,0,0,0,0,0,7,1,9,0,0,0,0,6,4,2,0,4,0.76,0,0
2904_3,3,3,SleepData sleepData = new SleepData();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,2,0,1,0.63,1,0
2904_4,4,4,sleepData.setAction(SleepData.actions.ACTION_DATA_UPDATE);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,2,0,1,0.55,2,1
2904_5,5,5,sleepData.setMax_data(sleepUtils.linkedToArray(sleepStore.getMaxData()));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,2,0,1,0.58,3,2
2904_6,6,6,sleepData.setMax_raw_data(sleepUtils.linkedToArray(sleepStore.getMaxRawData()));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,4,2,0,1,0.56,4,3
2904_7,7,7,sleepStore.resetMaxData();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,2,0,1,0.57,5,4
2904_8,8,8,"Logger.debug(""Sending sleep batch to phone..."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,2,0,2,0.67,6,5
2904_9,9,9,sleepService.send(sleepData.toDataBundle(new DataBundle()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,2,0,2,0.65,7,6
2905_1,1,2,"        @Override
public void onSensorChanged(SensorEvent event) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,1,0.45,1,1
2905_3,3,3,accelerometer.this.onSensorChanged(event);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.47,0,0
2018_1,1,1,"    private boolean setString(String key, String value) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.53,0,0
2018_2,2,8,"try {
if (this.data.getString(key).equals(value)) {
return true;
}
} catch (JSONException e) {
Logger.debug(""WidgetSettings setString exception: "" + e.toString());
}",0,0,0,0,1,0,0,0,0,4,2,7,0,0,0,1,2,2,0,0,1,0.44,0,0
2018_3,3,5,"if (this.data.getString(key).equals(value)) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,2,0,0,1,0.48,1,0
2018_4,4,4,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,2,1
2018_6,6,6,} catch (JSONException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.21,4,3
2018_7,7,7,"Logger.debug(""WidgetSettings setString exception: "" + e.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,5,3
2018_10,10,16,"try {
this.data.put(key, value);
this.save();
} catch (JSONException e) {
Logger.debug(""WidgetSettings setString exception: "" + e.toString());
return false;
}",0,0,0,0,1,0,0,0,0,5,1,7,0,0,1,0,2,2,0,0,1,0.43,8,5
2018_11,11,11,"this.data.put(key, value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.51,9,5
2018_12,12,12,this.save();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,10,6
2018_13,13,13,} catch (JSONException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.21,11,7
2018_14,14,14,"Logger.debug(""WidgetSettings setString exception: "" + e.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,12,8
2018_15,15,15,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.16,13,9
2018_17,17,17,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,15,11
2019_1,1,1,"    private boolean setInt(String key, int value) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.53,0,0
2019_2,2,8,"try {
if (this.data.getInt(key) == value) {
return true;
}
} catch (JSONException e) {
Logger.debug(""WidgetSettings setInt exception: "" + e.toString());
}",0,0,0,0,1,0,0,0,0,4,2,7,0,0,0,1,2,2,0,0,1,0.43,0,0
2019_3,3,5,"if (this.data.getInt(key) == value) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,2,0,0,1,0.47,1,0
2019_4,4,4,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,2,1
2019_6,6,6,} catch (JSONException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.21,4,3
2019_7,7,7,"Logger.debug(""WidgetSettings setInt exception: "" + e.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.26,5,3
2019_10,10,16,"try {
this.data.put(key, value);
this.save();
} catch (JSONException e) {
Logger.debug(""WidgetSettings setInt exception: "" + e.toString());
return false;
}",0,0,0,0,1,0,0,0,0,5,1,7,0,0,1,0,2,2,0,0,1,0.43,8,5
2019_11,11,11,"this.data.put(key, value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.51,9,5
2019_12,12,12,this.save();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,10,6
2019_13,13,13,} catch (JSONException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.21,11,7
2019_14,14,14,"Logger.debug(""WidgetSettings setInt exception: "" + e.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.26,12,8
2019_15,15,15,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.16,13,9
2019_17,17,17,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,15,11
2020_1,1,1,"    private boolean setBoolean(String key, boolean value) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.55,0,0
2020_2,2,8,"try {
if (this.data.getBoolean(key) == value) {
return true;
}
} catch (JSONException e) {
Logger.debug(""WidgetSettings setBoolean exception: "" + e.toString());
}",0,0,0,0,1,0,0,0,0,4,2,7,0,0,0,1,2,2,0,0,1,0.48,0,0
2020_3,3,5,"if (this.data.getBoolean(key) == value) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,2,0,0,1,0.53,1,0
2020_4,4,4,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,2,1
2020_6,6,6,} catch (JSONException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.21,4,3
2020_7,7,7,"Logger.debug(""WidgetSettings setBoolean exception: "" + e.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.31,5,3
2020_10,10,16,"try {
this.data.put(key, value);
this.save();
} catch (JSONException e) {
Logger.debug(""WidgetSettings setBoolean exception: "" + e.toString());
return false;
}",0,0,0,0,1,0,0,0,0,5,1,7,0,0,1,0,2,2,0,0,1,0.48,8,5
2020_11,11,11,"this.data.put(key, value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.51,9,5
2020_12,12,12,this.save();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,10,6
2020_13,13,13,} catch (JSONException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.21,11,7
2020_14,14,14,"Logger.debug(""WidgetSettings setBoolean exception: "" + e.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.31,12,8
2020_15,15,15,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.16,13,9
2020_17,17,17,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,15,11
2021_1,1,1,"    private boolean setLong(String key, long value) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.55,0,0
2021_2,2,8,"try {
if (this.data.getLong(key) == value) {
return true;
}
} catch (JSONException e) {
Logger.debug(""WidgetSettings setLong exception: "" + e.toString());
}",0,0,0,0,1,0,0,0,0,4,2,7,0,0,0,1,2,2,0,0,1,0.44,0,0
2021_3,3,5,"if (this.data.getLong(key) == value) {
return true;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,2,0,0,1,0.48,1,0
2021_4,4,4,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,2,1
2021_6,6,6,} catch (JSONException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.21,4,3
2021_7,7,7,"Logger.debug(""WidgetSettings setLong exception: "" + e.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.27,5,3
2021_10,10,16,"try {
this.data.put(key, value);
this.save();
} catch (JSONException e) {
Logger.debug(""WidgetSettings setLong exception: "" + e.toString());
return false;
}",0,0,0,0,1,0,0,0,0,5,1,7,0,0,1,0,2,2,0,0,1,0.43,8,5
2021_11,11,11,"this.data.put(key, value);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.51,9,5
2021_12,12,12,this.save();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,10,6
2021_13,13,13,} catch (JSONException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.21,11,7
2021_14,14,14,"Logger.debug(""WidgetSettings setLong exception: "" + e.toString());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.27,12,8
2021_15,15,15,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.16,13,9
2021_17,17,17,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,15,11
6849_1,1,1,    private void updateContent() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.28,28,20
6849_2,2,94,"try {
util = new FragmentUtil(mContext);
disableDelay = util.getDisableDelay();

boolean disableNotificationText = util.getDisableNotificationText();
final boolean notificationHasHideReplies = NotificationStore.getHideReplies(key);
final boolean notificationHasForceCustom = NotificationStore.getForceCustom(key);
enableInvertedTheme = util.getInvertedTheme();

Logger.info(""NotificationFragment updateContent key: {} dt: {} hr: {} fc: {}"",
key, disableNotificationText, notificationHasHideReplies, notificationHasForceCustom);

initView();
setTheme();

if (notificationHasHideReplies) {

replyButton.setVisibility(View.GONE);

} else {
replyButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
Logger.debug(""NotificationFragment updateContent: replyButton clicked!"");
if (repliesListView.getVisibility() == View.VISIBLE) {
repliesListView.setVisibility(View.GONE);
focusOnViewBottom(scrollView, replyButton);
} else {
repliesListView.setVisibility(View.VISIBLE);
muteListView.setVisibility(View.GONE);
focusOnView(scrollView, replyButton);
}
}
});
loadReplies();
}

if (notificationHasForceCustom && notificationHasHideReplies) {

muteButton.setVisibility(View.GONE);
deleteButton.setVisibility(View.GONE);

} else {
deleteButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
Logger.debug(""NotificationFragment updateContent: deleteButton clicked!"");
muteListView.setVisibility(View.GONE);
repliesListView.setVisibility(View.GONE);
sendDeleteCommand(v);
}
});

muteButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
Logger.debug(""NotificationFragment updateContent: muteButton clicked!"");
if (muteListView.getVisibility() == View.VISIBLE) {
muteListView.setVisibility(View.GONE);
} else {
muteListView.setVisibility(View.VISIBLE);
repliesListView.setVisibility(View.GONE);
focusOnView(scrollView, muteButton);
}
}
});
loadMuteOptions();
}

populateNotificationIcon(icon, iconBadge, notificationData);

if (hasPicture(notificationData)) {
populateNotificationPicture(picture, notificationData);
Logger.trace(""hasPicture = true"");
title.setText(String.format(""%s - %s"", notificationData.getTitle(), notificationData.getTime()));
time.setVisibility(View.GONE);
text.setVisibility(View.GONE);

} else {
Logger.trace(""hasPicture = false"");
title.setText(notificationData.getTitle());
time.setText(notificationData.getTime());
text.setText(notificationData.getText());
}

if (disableNotificationText)
hideContent();

doVibration(notificationData.getVibration());

} catch (NullPointerException exception) {
Logger.error(exception, exception.getMessage());
}",0,0,0,0,1,0,0,0,0,60,5,93,0,0,0,0,3,3,0,0,1,0.57,0,0
6849_3,3,3,util = new FragmentUtil(mContext);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.29,26,18
6849_4,4,4,disableDelay = util.getDisableDelay();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.41,25,17
6849_6,6,6,boolean disableNotificationText = util.getDisableNotificationText();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.27,23,16
6849_7,7,7,final boolean notificationHasHideReplies = NotificationStore.getHideReplies(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.35,22,15
6849_8,8,8,final boolean notificationHasForceCustom = NotificationStore.getForceCustom(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.24,21,14
6849_9,9,9,enableInvertedTheme = util.getInvertedTheme();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.41,20,13
6849_11,11,12,"Logger.info(""NotificationFragment updateContent key: {} dt: {} hr: {} fc: {}"",
key, disableNotificationText, notificationHasHideReplies, notificationHasForceCustom);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,3,3,0,0,0,0.37,17,12
6849_14,14,14,initView();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.7,15,11
6849_15,15,15,setTheme();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.38,14,10
6849_17,17,37,"if (notificationHasHideReplies) {

replyButton.setVisibility(View.GONE);

} else {
replyButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
Logger.debug(""NotificationFragment updateContent: replyButton clicked!"");
if (repliesListView.getVisibility() == View.VISIBLE) {
repliesListView.setVisibility(View.GONE);
focusOnViewBottom(scrollView, replyButton);
} else {
repliesListView.setVisibility(View.VISIBLE);
muteListView.setVisibility(View.GONE);
focusOnView(scrollView, replyButton);
}
}
});
loadReplies();
}",1,0,0,0,0,0,0,0,0,13,4,21,0,0,1,1,3,3,0,0,1,0.59,0,0
6849_19,19,19,replyButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.56,10,8
6849_21,21,21,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.22,8,7
6849_22,22,22,replyButton.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.52,7,6
6849_23,23,24,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,1,0.52,5,5
6849_25,25,25,"Logger.debug(""NotificationFragment updateContent: replyButton clicked!"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.35,4,4
6849_26,26,33,"if (repliesListView.getVisibility() == View.VISIBLE) {
repliesListView.setVisibility(View.GONE);
focusOnViewBottom(scrollView, replyButton);
} else {
repliesListView.setVisibility(View.VISIBLE);
muteListView.setVisibility(View.GONE);
focusOnView(scrollView, replyButton);
}",1,0,0,0,0,0,0,0,0,6,1,8,0,0,0,0,3,3,0,0,1,0.63,0,0
6849_27,27,27,repliesListView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.59,2,2
6849_28,28,28,"focusOnViewBottom(scrollView, replyButton);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.64,1,1
6849_29,29,29,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.22,0,0
6849_30,30,30,repliesListView.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.58,0,0
6849_31,31,31,muteListView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.63,1,0
6849_32,32,32,"focusOnView(scrollView, replyButton);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.64,2,1
6849_36,36,36,loadReplies();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,6,3
6849_39,39,69,"if (notificationHasForceCustom && notificationHasHideReplies) {

muteButton.setVisibility(View.GONE);
deleteButton.setVisibility(View.GONE);

} else {
deleteButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
Logger.debug(""NotificationFragment updateContent: deleteButton clicked!"");
muteListView.setVisibility(View.GONE);
repliesListView.setVisibility(View.GONE);
sendDeleteCommand(v);
}
});

muteButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
Logger.debug(""NotificationFragment updateContent: muteButton clicked!"");
if (muteListView.getVisibility() == View.VISIBLE) {
muteListView.setVisibility(View.GONE);
} else {
muteListView.setVisibility(View.VISIBLE);
repliesListView.setVisibility(View.GONE);
focusOnView(scrollView, muteButton);
}
}
});
loadMuteOptions();
}",1,0,0,0,0,0,0,0,0,19,4,31,0,0,1,1,3,3,0,0,1,0.57,9,4
6849_41,41,41,muteButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,3,0,0,1,0.6,11,5
6849_42,42,42,deleteButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,3,0,0,1,0.55,12,5
6849_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.22,14,7
6849_45,45,45,deleteButton.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.51,15,7
6849_46,46,47,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,1,0.52,16,8
6849_48,48,48,"Logger.debug(""NotificationFragment updateContent: deleteButton clicked!"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.34,18,10
6849_49,49,49,muteListView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.63,19,10
6849_50,50,50,repliesListView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.59,20,11
6849_51,51,51,sendDeleteCommand(v);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.34,21,12
6849_55,55,55,muteButton.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.55,25,14
6849_56,56,57,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,1,0.52,26,14
6849_58,58,58,"Logger.debug(""NotificationFragment updateContent: muteButton clicked!"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.4,28,16
6849_59,59,65,"if (muteListView.getVisibility() == View.VISIBLE) {
muteListView.setVisibility(View.GONE);
} else {
muteListView.setVisibility(View.VISIBLE);
repliesListView.setVisibility(View.GONE);
focusOnView(scrollView, muteButton);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,0,0,3,3,0,0,1,0.63,29,16
6849_60,60,60,muteListView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.63,30,17
6849_61,61,61,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.22,31,18
6849_62,62,62,muteListView.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.63,32,19
6849_63,63,63,repliesListView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.59,33,20
6849_64,64,64,"focusOnView(scrollView, muteButton);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.67,34,21
6849_68,68,68,loadMuteOptions();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.35,38,23
6849_71,71,71,"populateNotificationIcon(icon, iconBadge, notificationData);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.35,41,24
6849_73,73,85,"if (hasPicture(notificationData)) {
populateNotificationPicture(picture, notificationData);
Logger.trace(""hasPicture = true"");
title.setText(String.format(""%s - %s"", notificationData.getTitle(), notificationData.getTime()));
time.setVisibility(View.GONE);
text.setVisibility(View.GONE);

} else {
Logger.trace(""hasPicture = false"");
title.setText(notificationData.getTitle());
time.setText(notificationData.getTime());
text.setText(notificationData.getText());
}",1,0,0,0,0,0,0,0,0,10,1,13,0,0,1,1,3,3,0,0,1,0.48,43,25
6849_74,74,74,"populateNotificationPicture(picture, notificationData);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.28,44,25
6849_75,75,75,"Logger.trace(""hasPicture = true"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.27,45,26
6849_76,76,76,"title.setText(String.format(""%s - %s"", notificationData.getTitle(), notificationData.getTime()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.35,46,27
6849_77,77,77,time.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.56,47,28
6849_78,78,78,text.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,3,0,0,1,0.57,48,29
6849_80,80,80,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.22,50,31
6849_81,81,81,"Logger.trace(""hasPicture = false"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.29,51,31
6849_82,82,82,title.setText(notificationData.getTitle());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.37,52,32
6849_83,83,83,time.setText(notificationData.getTime());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.34,53,33
6849_84,84,84,text.setText(notificationData.getText());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.35,54,34
6849_87,87,88,"if (disableNotificationText)
hideContent();",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,3,3,0,0,0,0.36,57,36
6849_88,88,88,hideContent();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.37,58,36
6849_90,90,90,doVibration(notificationData.getVibration());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.33,60,38
6849_92,92,92,} catch (NullPointerException exception) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,62,39
6849_93,93,93,"Logger.error(exception, exception.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.26,63,39
6850_1,1,1,    private void updateContent() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.28,60,40
6850_2,2,94,"try {
util = new FragmentUtil(mContext);
disableDelay = util.getDisableDelay();

boolean disableNotificationText = util.getDisableNotificationText();
final boolean notificationHasHideReplies = NotificationStore.getHideReplies(key);
final boolean notificationHasForceCustom = NotificationStore.getForceCustom(key);
enableInvertedTheme = util.getInvertedTheme();

Logger.info(""NotificationFragment updateContent key: {} dt: {} hr: {} fc: {}"",
key, disableNotificationText, notificationHasHideReplies, notificationHasForceCustom);

initView();
setTheme();

if (notificationHasHideReplies) {

replyButton.setVisibility(View.GONE);

} else {
replyButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
Logger.debug(""NotificationFragment updateContent: replyButton clicked!"");
if (repliesListView.getVisibility() == View.VISIBLE) {
repliesListView.setVisibility(View.GONE);
focusOnViewBottom(scrollView, replyButton);
} else {
repliesListView.setVisibility(View.VISIBLE);
muteListView.setVisibility(View.GONE);
focusOnView(scrollView, replyButton);
}
}
});
loadReplies();
}

if (notificationHasForceCustom && notificationHasHideReplies) {

muteButton.setVisibility(View.GONE);
deleteButton.setVisibility(View.GONE);

} else {
deleteButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
Logger.debug(""NotificationFragment updateContent: deleteButton clicked!"");
muteListView.setVisibility(View.GONE);
repliesListView.setVisibility(View.GONE);
sendDeleteCommand(v);
}
});

muteButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
Logger.debug(""NotificationFragment updateContent: muteButton clicked!"");
if (muteListView.getVisibility() == View.VISIBLE) {
muteListView.setVisibility(View.GONE);
} else {
muteListView.setVisibility(View.VISIBLE);
repliesListView.setVisibility(View.GONE);
focusOnView(scrollView, muteButton);
}
}
});
loadMuteOptions();
}

populateNotificationIcon(icon, iconBadge, notificationData);

if (hasPicture(notificationData)) {
populateNotificationPicture(picture, notificationData);
Logger.trace(""hasPicture = true"");
title.setText(String.format(""%s - %s"", notificationData.getTitle(), notificationData.getTime()));
time.setVisibility(View.GONE);
text.setVisibility(View.GONE);

} else {
Logger.trace(""hasPicture = false"");
title.setText(notificationData.getTitle());
time.setText(notificationData.getTime());
text.setText(notificationData.getText());
}

if (disableNotificationText)
hideContent();

doVibration(notificationData.getVibration());

} catch (NullPointerException exception) {
Logger.error(exception, exception.getMessage());
}",0,0,0,0,1,0,0,0,0,60,5,93,0,0,0,0,3,3,0,0,1,0.57,0,0
6850_3,3,3,util = new FragmentUtil(mContext);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.29,58,38
6850_4,4,4,disableDelay = util.getDisableDelay();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.41,57,37
6850_6,6,6,boolean disableNotificationText = util.getDisableNotificationText();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.27,55,36
6850_7,7,7,final boolean notificationHasHideReplies = NotificationStore.getHideReplies(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.35,54,35
6850_8,8,8,final boolean notificationHasForceCustom = NotificationStore.getForceCustom(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.24,53,34
6850_9,9,9,enableInvertedTheme = util.getInvertedTheme();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.41,52,33
6850_11,11,12,"Logger.info(""NotificationFragment updateContent key: {} dt: {} hr: {} fc: {}"",
key, disableNotificationText, notificationHasHideReplies, notificationHasForceCustom);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,3,3,0,0,0,0.37,49,32
6850_14,14,14,initView();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.7,47,31
6850_15,15,15,setTheme();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.38,46,30
6850_17,17,37,"if (notificationHasHideReplies) {

replyButton.setVisibility(View.GONE);

} else {
replyButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
Logger.debug(""NotificationFragment updateContent: replyButton clicked!"");
if (repliesListView.getVisibility() == View.VISIBLE) {
repliesListView.setVisibility(View.GONE);
focusOnViewBottom(scrollView, replyButton);
} else {
repliesListView.setVisibility(View.VISIBLE);
muteListView.setVisibility(View.GONE);
focusOnView(scrollView, replyButton);
}
}
});
loadReplies();
}",1,0,0,0,0,0,0,0,0,13,4,21,0,0,1,1,3,3,0,0,1,0.59,24,16
6850_19,19,19,replyButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.56,42,28
6850_21,21,21,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.22,40,27
6850_22,22,22,replyButton.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.52,39,26
6850_23,23,24,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,1,0.52,37,25
6850_25,25,25,"Logger.debug(""NotificationFragment updateContent: replyButton clicked!"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.35,36,24
6850_26,26,33,"if (repliesListView.getVisibility() == View.VISIBLE) {
repliesListView.setVisibility(View.GONE);
focusOnViewBottom(scrollView, replyButton);
} else {
repliesListView.setVisibility(View.VISIBLE);
muteListView.setVisibility(View.GONE);
focusOnView(scrollView, replyButton);
}",1,0,0,0,0,0,0,0,0,6,1,8,0,0,0,0,3,3,0,0,1,0.63,28,17
6850_27,27,27,repliesListView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.59,34,22
6850_28,28,28,"focusOnViewBottom(scrollView, replyButton);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.64,33,21
6850_29,29,29,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.22,32,20
6850_30,30,30,repliesListView.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.58,31,19
6850_31,31,31,muteListView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.63,30,18
6850_32,32,32,"focusOnView(scrollView, replyButton);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.64,29,17
6850_36,36,36,loadReplies();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,25,16
6850_39,39,69,"if (notificationHasForceCustom && notificationHasHideReplies) {

muteButton.setVisibility(View.GONE);
deleteButton.setVisibility(View.GONE);

} else {
deleteButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
Logger.debug(""NotificationFragment updateContent: deleteButton clicked!"");
muteListView.setVisibility(View.GONE);
repliesListView.setVisibility(View.GONE);
sendDeleteCommand(v);
}
});

muteButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
Logger.debug(""NotificationFragment updateContent: muteButton clicked!"");
if (muteListView.getVisibility() == View.VISIBLE) {
muteListView.setVisibility(View.GONE);
} else {
muteListView.setVisibility(View.VISIBLE);
repliesListView.setVisibility(View.GONE);
focusOnView(scrollView, muteButton);
}
}
});
loadMuteOptions();
}",1,0,0,0,0,0,0,0,0,19,4,31,0,0,1,1,3,3,0,0,1,0.57,0,0
6850_41,41,41,muteButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,3,0,0,1,0.6,20,14
6850_42,42,42,deleteButton.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,3,0,0,1,0.55,19,13
6850_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.22,17,12
6850_45,45,45,deleteButton.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.51,16,11
6850_46,46,47,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,1,0.52,14,10
6850_48,48,48,"Logger.debug(""NotificationFragment updateContent: deleteButton clicked!"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.34,13,9
6850_49,49,49,muteListView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.63,12,8
6850_50,50,50,repliesListView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.59,11,7
6850_51,51,51,sendDeleteCommand(v);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.34,10,6
6850_55,55,55,muteButton.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,1,0.55,6,5
6850_56,56,57,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,1,0.52,4,4
6850_58,58,58,"Logger.debug(""NotificationFragment updateContent: muteButton clicked!"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.4,3,3
6850_59,59,65,"if (muteListView.getVisibility() == View.VISIBLE) {
muteListView.setVisibility(View.GONE);
} else {
muteListView.setVisibility(View.VISIBLE);
repliesListView.setVisibility(View.GONE);
focusOnView(scrollView, muteButton);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,0,0,3,3,0,0,1,0.63,0,0
6850_60,60,60,muteListView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.63,1,1
6850_61,61,61,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.22,0,0
6850_62,62,62,muteListView.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.63,0,0
6850_63,63,63,repliesListView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.59,1,0
6850_64,64,64,"focusOnView(scrollView, muteButton);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.67,2,1
6850_68,68,68,loadMuteOptions();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.35,6,3
6850_71,71,71,"populateNotificationIcon(icon, iconBadge, notificationData);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.35,9,4
6850_73,73,85,"if (hasPicture(notificationData)) {
populateNotificationPicture(picture, notificationData);
Logger.trace(""hasPicture = true"");
title.setText(String.format(""%s - %s"", notificationData.getTitle(), notificationData.getTime()));
time.setVisibility(View.GONE);
text.setVisibility(View.GONE);

} else {
Logger.trace(""hasPicture = false"");
title.setText(notificationData.getTitle());
time.setText(notificationData.getTime());
text.setText(notificationData.getText());
}",1,0,0,0,0,0,0,0,0,10,1,13,0,0,1,1,3,3,0,0,1,0.48,11,5
6850_74,74,74,"populateNotificationPicture(picture, notificationData);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.28,12,5
6850_75,75,75,"Logger.trace(""hasPicture = true"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.27,13,6
6850_76,76,76,"title.setText(String.format(""%s - %s"", notificationData.getTitle(), notificationData.getTime()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.35,14,7
6850_77,77,77,time.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,1,0.56,15,8
6850_78,78,78,text.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,3,3,0,0,1,0.57,16,9
6850_80,80,80,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.22,18,11
6850_81,81,81,"Logger.trace(""hasPicture = false"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.29,19,11
6850_82,82,82,title.setText(notificationData.getTitle());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.37,20,12
6850_83,83,83,time.setText(notificationData.getTime());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.34,21,13
6850_84,84,84,text.setText(notificationData.getText());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,3,0,0,0,0.35,22,14
6850_87,87,88,"if (disableNotificationText)
hideContent();",1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,1,3,3,0,0,0,0.36,25,16
6850_88,88,88,hideContent();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.37,26,16
6850_90,90,90,doVibration(notificationData.getVibration());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.33,28,18
6850_92,92,92,} catch (NullPointerException exception) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.32,30,19
6850_93,93,93,"Logger.error(exception, exception.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.26,31,19
6851_1,1,1,private void setTheme() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,0,0,0,0.42,0,0
6851_2,2,8,"if (SystemProperties.isVerge()) {
int px = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 72, getResources().getDisplayMetrics());
replies_layout.setMinimumHeight(px);
}else if (SystemProperties.isStratos3()) {
int px = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 48, getResources().getDisplayMetrics());
replies_layout.setMinimumHeight(px);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,0,1,10,6,0,0,3,0.6,0,0
6851_3,3,3,"int px = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 72, getResources().getDisplayMetrics());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,6,0,0,0,0.5,1,0
6851_4,4,4,replies_layout.setMinimumHeight(px);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,6,0,0,3,0.72,2,1
6851_5,5,5,}else if (SystemProperties.isStratos3()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,0,0,0,0.31,3,2
6851_6,6,6,"int px = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 48, getResources().getDisplayMetrics());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,6,0,0,0,0.5,4,3
6851_7,7,7,replies_layout.setMinimumHeight(px);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,6,0,0,3,0.72,5,4
6851_10,10,19,"if (enableInvertedTheme) {
rootLayout.setBackgroundColor(getResources().getColor(R.color.white));
time.setTextColor(getResources().getColor(R.color.black));
title.setTextColor(getResources().getColor(R.color.black));
text.setTextColor(getResources().getColor(R.color.black));
iconBadge.setBackgroundTintList(ColorStateList.valueOf(getResources().getColor(R.color.white)));
delayedConfirmationViewTitle.setTextColor(getResources().getColor(R.color.black));
delayedConfirmationViewBottom.setTextColor(getResources().getColor(R.color.black));
} else
rootLayout.setBackgroundColor(getResources().getColor(R.color.black));",1,0,0,0,0,0,0,0,0,8,1,10,0,0,1,1,10,6,0,0,1,0.53,8,6
6851_11,11,11,rootLayout.setBackgroundColor(getResources().getColor(R.color.white));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,6,0,0,0,0.48,9,6
6851_12,12,12,time.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,6,0,0,0,0.48,10,7
6851_13,13,13,title.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,6,0,0,0,0.48,11,8
6851_14,14,14,text.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,6,0,0,0,0.47,12,9
6851_15,15,15,iconBadge.setBackgroundTintList(ColorStateList.valueOf(getResources().getColor(R.color.white)));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,6,0,0,0,0.49,13,10
6851_16,16,16,delayedConfirmationViewTitle.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,6,0,0,0,0.49,14,11
6851_17,17,17,delayedConfirmationViewBottom.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,6,0,0,1,0.54,15,12
6851_18,18,19,"} else
rootLayout.setBackgroundColor(getResources().getColor(R.color.black));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,10,6,0,0,0,0.48,16,13
6851_21,21,21,time.setTextSize(util.getFontTitleSizeSP());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,10,6,0,0,0,0.49,19,15
6851_22,22,22,title.setTextSize(util.getFontTitleSizeSP());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,6,0,0,0,0.48,20,15
6851_23,23,23,text.setTextSize(util.getFontSizeSP());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,10,6,0,0,0,0.45,21,16
6851_25,25,25,"util.setFontLocale(title, notificationData.getTitle());",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,10,6,0,0,0,0.41,23,18
6851_26,26,26,"util.setFontLocale(text, notificationData.getText());",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,6,0,0,0,0.38,24,18
6852_1,1,1,private void setTheme() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.67,8,6
6852_2,2,8,"if (SystemProperties.isVerge()) {
int px = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 72, getResources().getDisplayMetrics());
replies_layout.setMinimumHeight(px);
}else if (SystemProperties.isStratos3()) {
int px = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 48, getResources().getDisplayMetrics());
replies_layout.setMinimumHeight(px);
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,0,1,4,3,1,0,1,0.54,1,0
6852_3,3,3,"int px = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 72, getResources().getDisplayMetrics());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.43,6,4
6852_4,4,4,replies_layout.setMinimumHeight(px);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.63,5,3
6852_5,5,5,}else if (SystemProperties.isStratos3()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.27,4,2
6852_6,6,6,"int px = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 48, getResources().getDisplayMetrics());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.43,3,1
6852_7,7,7,replies_layout.setMinimumHeight(px);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.63,2,0
6852_10,10,19,"if (enableInvertedTheme) {
rootLayout.setBackgroundColor(getResources().getColor(R.color.white));
time.setTextColor(getResources().getColor(R.color.black));
title.setTextColor(getResources().getColor(R.color.black));
text.setTextColor(getResources().getColor(R.color.black));
iconBadge.setBackgroundTintList(ColorStateList.valueOf(getResources().getColor(R.color.white)));
delayedConfirmationViewTitle.setTextColor(getResources().getColor(R.color.black));
delayedConfirmationViewBottom.setTextColor(getResources().getColor(R.color.black));
} else
rootLayout.setBackgroundColor(getResources().getColor(R.color.black));",1,0,0,0,0,0,0,0,0,8,1,10,0,0,1,1,4,3,1,0,2,0.6,0,0
6852_11,11,11,rootLayout.setBackgroundColor(getResources().getColor(R.color.white));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,1,0.52,1,0
6852_12,12,12,time.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,1,0.55,2,1
6852_13,13,13,title.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,1,0.57,3,2
6852_14,14,14,text.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,1,0.57,4,3
6852_15,15,15,iconBadge.setBackgroundTintList(ColorStateList.valueOf(getResources().getColor(R.color.white)));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,1,0.52,5,4
6852_16,16,16,delayedConfirmationViewTitle.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,1,0.56,6,5
6852_17,17,17,delayedConfirmationViewBottom.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,1,0.55,7,6
6852_18,18,19,"} else
rootLayout.setBackgroundColor(getResources().getColor(R.color.black));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,4,3,1,0,1,0.51,8,7
6852_21,21,21,time.setTextSize(util.getFontTitleSizeSP());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,4,3,1,0,3,0.76,11,9
6852_22,22,22,title.setTextSize(util.getFontTitleSizeSP());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,3,0.78,12,9
6852_23,23,23,text.setTextSize(util.getFontSizeSP());,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,4,3,1,0,3,0.79,13,10
6852_25,25,25,"util.setFontLocale(title, notificationData.getTitle());",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,4,3,1,0,2,0.61,15,12
6852_26,26,26,"util.setFontLocale(text, notificationData.getText());",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,1,0,2,0.63,16,12
6853_1,1,1,private void setIconBadge(ImageView iconView) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.55,5,4
6853_2,2,2,int[] iconData = notificationData.getIcon();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.42,4,3
6853_3,3,3,int iconWidth = notificationData.getIconWidth();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,4,0,0,0,0.54,3,2
6853_4,4,4,int iconHeight = notificationData.getIconHeight();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,0,0,0,0.51,2,1
6853_5,5,5,"Bitmap bitmap = Bitmap.createBitmap(iconWidth, iconHeight, Bitmap.Config.ARGB_8888);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,7,4,0,0,3,0.75,1,0
6853_7,7,18,"if (enableInvertedTheme) {
int[] invertedIconData = new int[iconData.length];
for (int i = 0; i < iconData.length; i++) {
if (iconData[i] == 0xffffffff)
invertedIconData[i] = 0xff000000;
else
invertedIconData[i] = iconData[i];
}
bitmap.setPixels(invertedIconData, 0, iconWidth, 0, 0, iconWidth, iconHeight);

} else
bitmap.setPixels(iconData, 0, iconWidth, 0, 0, iconWidth, iconHeight);",1,0,0,0,0,0,0,0,0,7,2,12,0,0,1,1,7,4,0,0,2,0.64,0,0
6853_8,8,8,int[] invertedIconData = new int[iconData.length];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,0,0,1,0.53,1,0
6853_9,9,14,"for (int i = 0; i < iconData.length; i++) {
if (iconData[i] == 0xffffffff)
invertedIconData[i] = 0xff000000;
else
invertedIconData[i] = iconData[i];
}",0,0,1,0,0,0,0,0,0,3,1,6,0,1,0,0,7,4,0,0,1,0.53,2,1
6853_10,10,13,"if (iconData[i] == 0xffffffff)
invertedIconData[i] = 0xff000000;
else
invertedIconData[i] = iconData[i];",1,0,0,0,0,0,0,0,0,2,0,4,0,0,0,0,7,4,0,0,1,0.54,3,2
6853_11,11,11,invertedIconData[i] = 0xff000000;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,4,0,0,1,0.59,4,3
6853_12,12,13,"else
invertedIconData[i] = iconData[i];",0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,7,4,0,0,1,0.53,5,4
6853_15,15,15,"bitmap.setPixels(invertedIconData, 0, iconWidth, 0, 0, iconWidth, iconHeight);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,7,4,0,0,2,0.67,8,6
6853_17,17,18,"} else
bitmap.setPixels(iconData, 0, iconWidth, 0, 0, iconWidth, iconHeight);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,7,4,0,0,1,0.61,10,7
6853_20,20,20,iconView.setImageBitmap(bitmap);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,4,0,0,1,0.62,13,8
6854_1,1,1,"@SuppressLint(""CheckResult"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.24,21,17
6854_2,2,2,public void loadReplies() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.32,20,16
6854_3,3,3,"Logger.info(""NotificationFragment loadReplies"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.32,19,15
6854_4,4,4,List<Reply> replyList = util.listReplies();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.39,18,14
6854_5,5,5,final LayoutInflater inflater = LayoutInflater.from(NotificationFragment.this.mContext);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.45,17,13
6854_6,6,24,"for (final Reply reply : replyList) {
final View row = inflater.inflate(R.layout.row_reply, repliesListView, false);
EmojiTextView replyView = row.findViewById(R.id.row_reply_text);
replyView.setText(reply.getValue());
util.setFontLocale(replyView, reply.getValue());
if (enableInvertedTheme) {
replyView.setTextColor(getResources().getColor(R.color.black));
replyView.setCompoundDrawablesWithIntrinsicBounds(R.drawable.send, 0, 0, 0);
}
replyView.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
selectedReply = reply.getValue();
sendReply(view);
Logger.debug(""NotificationFragment replyView OnClick: "" + selectedReply);
}
});
repliesListView.addView(row);
}",0,0,0,1,0,0,0,0,0,13,3,19,1,1,0,0,4,2,1,0,2,0.6,0,0
6854_7,7,7,"final View row = inflater.inflate(R.layout.row_reply, repliesListView, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.54,15,11
6854_8,8,8,EmojiTextView replyView = row.findViewById(R.id.row_reply_text);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.49,14,10
6854_9,9,9,replyView.setText(reply.getValue());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,2,0.61,13,9
6854_10,10,10,"util.setFontLocale(replyView, reply.getValue());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,2,0.56,12,8
6854_11,11,14,"if (enableInvertedTheme) {
replyView.setTextColor(getResources().getColor(R.color.black));
replyView.setCompoundDrawablesWithIntrinsicBounds(R.drawable.send, 0, 0, 0);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,4,2,1,0,2,0.59,8,5
6854_12,12,12,replyView.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.58,10,6
6854_13,13,13,"replyView.setCompoundDrawablesWithIntrinsicBounds(R.drawable.send, 0, 0, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.59,9,5
6854_15,15,15,replyView.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.61,7,4
6854_16,16,17,"@Override
public void onClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,1,0.48,5,3
6854_18,18,18,selectedReply = reply.getValue();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.39,4,2
6854_19,19,19,sendReply(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.51,3,1
6854_20,20,20,"Logger.debug(""NotificationFragment replyView OnClick: "" + selectedReply);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.48,2,0
6854_23,23,23,repliesListView.addView(row);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.56,0,0
6854_25,25,25,"final View row = inflater.inflate(R.layout.row_reply, repliesListView, false);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,2,1,0,1,0.54,2,1
6854_26,26,26,EmojiTextView replyView = row.findViewById(R.id.row_reply_text);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.49,3,1
6854_27,27,27,replyView.setText(getResources().getString(R.string.keyboard));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,2,0.55,4,2
6854_28,28,31,"if (enableInvertedTheme) {
replyView.setTextColor(getResources().getColor(R.color.black));
replyView.setCompoundDrawables(getResources().getDrawable(R.drawable.send), null, null, null);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,4,2,1,0,2,0.58,5,3
6854_29,29,29,replyView.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,2,0.58,6,4
6854_30,30,30,"replyView.setCompoundDrawables(getResources().getDrawable(R.drawable.send), null, null, null);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,2,0.58,7,5
6854_32,32,32,replyView.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.61,9,7
6854_33,33,34,"@Override
public void onClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,1,0.48,10,7
6854_35,35,35,"Logger.debug(""NotificationFragment replyView OnClick: KEYBOARD"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.45,12,9
6854_36,36,36,scrollView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,2,0.73,13,9
6854_37,37,37,repliesEditTextContainer.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,2,0.67,14,10
6854_38,38,38,((NotificationWearActivity) getActivity()).stopTimerFinish();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,0,0.25,15,11
6854_39,39,39,((NotificationWearActivity) getActivity()).setKeyboardVisible(true);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,1,0.48,16,12
6854_40,40,40,keyboardIsEnable = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.24,17,13
6854_41,41,41,"Logger.debug(""keyboard IS visible"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.36,18,14
6854_43,43,43,replyEditSend.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,2,0.56,20,16
6854_44,44,45,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,1,0.44,21,16
6854_46,46,46,selectedReply = replyEditText.getText().toString();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.38,23,18
6854_47,47,47,repliesEditTextContainer.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.66,24,18
6854_48,48,48,sendReply(v);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.34,25,19
6854_51,51,51,replyEditClose.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.56,28,21
6854_52,52,53,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,1,0.44,29,21
6854_54,54,54,scrollView.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,2,0.74,31,23
6854_55,55,55,repliesEditTextContainer.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,1,0,2,0.66,32,23
6854_56,56,56,((NotificationWearActivity) getActivity()).setKeyboardVisible(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.49,33,24
6854_57,57,57,keyboardIsEnable = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.26,34,25
6854_58,58,58,"Logger.debug(""keyboard NOT visible"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.36,35,26
6854_59,59,59,((NotificationWearActivity) getActivity()).startTimerFinish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.25,36,27
6854_64,64,64,repliesListView.addView(row);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.56,41,29
6855_1,1,1,"@SuppressLint(""CheckResult"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,49,38
6855_2,2,2,public void loadReplies() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.45,48,37
6855_3,3,3,"Logger.info(""NotificationFragment loadReplies"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.38,47,36
6855_4,4,4,List<Reply> replyList = util.listReplies();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.38,46,35
6855_5,5,5,final LayoutInflater inflater = LayoutInflater.from(NotificationFragment.this.mContext);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.46,45,34
6855_6,6,24,"for (final Reply reply : replyList) {
final View row = inflater.inflate(R.layout.row_reply, repliesListView, false);
EmojiTextView replyView = row.findViewById(R.id.row_reply_text);
replyView.setText(reply.getValue());
util.setFontLocale(replyView, reply.getValue());
if (enableInvertedTheme) {
replyView.setTextColor(getResources().getColor(R.color.black));
replyView.setCompoundDrawablesWithIntrinsicBounds(R.drawable.send, 0, 0, 0);
}
replyView.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
selectedReply = reply.getValue();
sendReply(view);
Logger.debug(""NotificationFragment replyView OnClick: "" + selectedReply);
}
});
repliesListView.addView(row);
}",0,0,0,1,0,0,0,0,0,13,3,19,1,1,0,0,2,2,0,0,0,0.48,26,20
6855_7,7,7,"final View row = inflater.inflate(R.layout.row_reply, repliesListView, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.43,43,32
6855_8,8,8,EmojiTextView replyView = row.findViewById(R.id.row_reply_text);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.41,42,31
6855_9,9,9,replyView.setText(reply.getValue());,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.4,41,30
6855_10,10,10,"util.setFontLocale(replyView, reply.getValue());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.38,40,29
6855_11,11,14,"if (enableInvertedTheme) {
replyView.setTextColor(getResources().getColor(R.color.black));
replyView.setCompoundDrawablesWithIntrinsicBounds(R.drawable.send, 0, 0, 0);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,2,2,0,0,0,0.42,36,26
6855_12,12,12,replyView.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.42,38,27
6855_13,13,13,"replyView.setCompoundDrawablesWithIntrinsicBounds(R.drawable.send, 0, 0, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.42,37,26
6855_15,15,15,replyView.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.52,35,25
6855_16,16,17,"@Override
public void onClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.54,33,24
6855_18,18,18,selectedReply = reply.getValue();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.39,32,23
6855_19,19,19,sendReply(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.42,31,22
6855_20,20,20,"Logger.debug(""NotificationFragment replyView OnClick: "" + selectedReply);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.49,30,21
6855_23,23,23,repliesListView.addView(row);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.4,27,20
6855_25,25,25,"final View row = inflater.inflate(R.layout.row_reply, repliesListView, false);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.43,25,19
6855_26,26,26,EmojiTextView replyView = row.findViewById(R.id.row_reply_text);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.41,24,18
6855_27,27,27,replyView.setText(getResources().getString(R.string.keyboard));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.41,23,17
6855_28,28,31,"if (enableInvertedTheme) {
replyView.setTextColor(getResources().getColor(R.color.black));
replyView.setCompoundDrawables(getResources().getDrawable(R.drawable.send), null, null, null);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,2,2,0,0,0,0.43,19,14
6855_29,29,29,replyView.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.42,21,15
6855_30,30,30,"replyView.setCompoundDrawables(getResources().getDrawable(R.drawable.send), null, null, null);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,2,0,0,0,0.43,20,14
6855_32,32,32,replyView.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.52,18,13
6855_33,33,34,"@Override
public void onClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.54,16,12
6855_35,35,35,"Logger.debug(""NotificationFragment replyView OnClick: KEYBOARD"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.48,15,11
6855_36,36,36,scrollView.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0.42,14,10
6855_37,37,37,repliesEditTextContainer.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0.43,13,9
6855_38,38,38,((NotificationWearActivity) getActivity()).stopTimerFinish();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0.45,12,8
6855_39,39,39,((NotificationWearActivity) getActivity()).setKeyboardVisible(true);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0.42,11,7
6855_40,40,40,keyboardIsEnable = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.37,10,6
6855_41,41,41,"Logger.debug(""keyboard IS visible"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.39,9,5
6855_43,43,43,replyEditSend.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.52,7,4
6855_44,44,45,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.54,5,3
6855_46,46,46,selectedReply = replyEditText.getText().toString();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.41,4,2
6855_47,47,47,repliesEditTextContainer.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.43,3,1
6855_48,48,48,sendReply(v);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.4,2,0
6855_51,51,51,replyEditClose.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.51,0,0
6855_52,52,53,"@Override
public void onClick(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.54,1,0
6855_54,54,54,scrollView.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0.43,3,2
6855_55,55,55,repliesEditTextContainer.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,2,0,0,0,0.43,4,2
6855_56,56,56,((NotificationWearActivity) getActivity()).setKeyboardVisible(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.41,5,3
6855_57,57,57,keyboardIsEnable = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.36,6,4
6855_58,58,58,"Logger.debug(""keyboard NOT visible"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.39,7,5
6855_59,59,59,((NotificationWearActivity) getActivity()).startTimerFinish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.45,8,6
6855_64,64,64,repliesListView.addView(row);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.4,13,8
6857_1,1,1,private void loadMuteOptions() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.43,9,6
6857_3,3,3,List<Integer> silenceList = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,1,0,2,0.66,7,5
6857_4,4,4,silenceList.add(5);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,1,0,3,0.77,6,4
6857_5,5,5,silenceList.add(15);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,1,0,3,0.78,5,3
6857_6,6,6,silenceList.add(30);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,1,0,3,0.78,4,2
6857_7,7,7,silenceList.add(60);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,6,3,1,0,3,0.78,3,1
6857_9,9,9,LayoutInflater inflater = LayoutInflater.from(NotificationFragment.this.mContext);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,3,1,0,0,0.47,1,0
6857_11,11,27,"for (final Integer silence : silenceList) {
final View row = inflater.inflate(R.layout.row_mute, muteListView, false);
EmojiTextView muteView = row.findViewById(R.id.row_mute_value);
muteView.setText(String.format(""%s "" + getString(R.string.minutes), silence.toString()));
if (enableInvertedTheme) {
muteView.setTextColor(getResources().getColor(R.color.black));
}
muteView.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
selectedSilenceTime = silence.toString();
sendMuteCommand(view);
Logger.debug(""NotificationFragment loadMuteOptions muteView OnClick: "" + selectedSilenceTime);
}
});
muteListView.addView(row);
}",0,0,0,1,0,0,0,0,0,11,3,17,0,0,1,1,6,3,1,0,4,0.67,0,0
6857_12,12,12,"final View row = inflater.inflate(R.layout.row_mute, muteListView, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,2,0.63,1,0
6857_13,13,13,EmojiTextView muteView = row.findViewById(R.id.row_mute_value);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.51,2,1
6857_14,14,14,"muteView.setText(String.format(""%s "" + getString(R.string.minutes), silence.toString()));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,2,0.51,3,2
6857_15,15,17,"if (enableInvertedTheme) {
muteView.setTextColor(getResources().getColor(R.color.black));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,1,0,1,0.47,4,3
6857_16,16,16,muteView.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.48,5,4
6857_18,18,18,muteView.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.53,7,6
6857_19,19,20,"@Override
public void onClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,1,0,1,0.51,8,6
6857_21,21,21,selectedSilenceTime = silence.toString();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.53,10,8
6857_22,22,22,sendMuteCommand(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.54,11,8
6857_23,23,23,"Logger.debug(""NotificationFragment loadMuteOptions muteView OnClick: "" + selectedSilenceTime);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,2,0.55,12,9
6857_26,26,26,muteListView.addView(row);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,3,0.78,15,11
6857_29,29,29,"final View row_day = inflater.inflate(R.layout.row_mute, muteListView, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,1,0,2,0.63,18,12
6857_30,30,30,EmojiTextView muteView = row_day.findViewById(R.id.row_mute_value);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.52,19,12
6857_31,31,31,muteView.setText(getString(R.string.one_day));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,2,0.57,20,13
6857_32,32,34,"if (enableInvertedTheme) {
muteView.setTextColor(getResources().getColor(R.color.black));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,1,0,1,0.47,21,14
6857_33,33,33,muteView.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.48,22,15
6857_35,35,35,muteView.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.53,24,17
6857_36,36,37,"@Override
public void onClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,1,0,1,0.51,25,17
6857_38,38,38,"selectedSilenceTime = ""1440"";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.52,27,19
6857_39,39,39,sendMuteCommand(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.54,28,19
6857_40,40,40,"Logger.debug(""NotificationFragment loadMuteOptions muteView OnClick: "" + selectedSilenceTime);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,2,0.55,29,20
6857_43,43,43,muteListView.addView(row_day);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,1,0,3,0.77,32,22
6857_46,46,46,"final View row_block = inflater.inflate(R.layout.row_mute, muteListView, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,1,0,2,0.62,35,23
6857_47,47,47,muteView = row_block.findViewById(R.id.row_mute_value);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.5,36,23
6857_48,48,48,muteView.setText(R.string.block_app);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.49,37,24
6857_49,49,52,"if (enableInvertedTheme)
muteView.setTextColor(getResources().getColor(R.color.dark_red));
else
muteView.setTextColor(getResources().getColor(R.color.red_a200));",1,0,0,0,0,0,0,0,0,2,0,4,0,1,0,0,6,3,1,0,1,0.47,38,25
6857_50,50,50,muteView.setTextColor(getResources().getColor(R.color.dark_red));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,1,0,1,0.48,39,26
6857_51,51,52,"else
muteView.setTextColor(getResources().getColor(R.color.red_a200));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,6,3,1,0,1,0.47,40,27
6857_53,53,53,muteView.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.53,42,29
6857_54,54,55,"@Override
public void onClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,1,0,1,0.51,43,29
6857_56,56,56,selectedSilenceTime = Constants.BLOCK_APP;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.47,45,31
6857_57,57,57,sendMuteCommand(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.54,46,31
6857_58,58,58,"Logger.debug(""NotificationFragment loadMuteOptions muteView OnClick: "" + selectedSilenceTime);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,2,0.55,47,32
6857_61,61,61,muteListView.addView(row_block);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,3,0.75,50,34
6858_1,1,1,private void loadMuteOptions() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.35,24,17
6858_3,3,3,List<Integer> silenceList = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.33,22,16
6858_4,4,4,silenceList.add(5);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.35,21,15
6858_5,5,5,silenceList.add(15);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.34,20,14
6858_6,6,6,silenceList.add(30);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.35,19,13
6858_7,7,7,silenceList.add(60);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,4,2,1,0,0,0.33,18,12
6858_9,9,9,LayoutInflater inflater = LayoutInflater.from(NotificationFragment.this.mContext);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,1,0,0,0.47,16,11
6858_11,11,27,"for (final Integer silence : silenceList) {
final View row = inflater.inflate(R.layout.row_mute, muteListView, false);
EmojiTextView muteView = row.findViewById(R.id.row_mute_value);
muteView.setText(String.format(""%s "" + getString(R.string.minutes), silence.toString()));
if (enableInvertedTheme) {
muteView.setTextColor(getResources().getColor(R.color.black));
}
muteView.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
selectedSilenceTime = silence.toString();
sendMuteCommand(view);
Logger.debug(""NotificationFragment loadMuteOptions muteView OnClick: "" + selectedSilenceTime);
}
});
muteListView.addView(row);
}",0,0,0,1,0,0,0,0,0,11,3,17,0,0,1,1,4,2,1,0,2,0.57,0,0
6858_12,12,12,"final View row = inflater.inflate(R.layout.row_mute, muteListView, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.53,13,9
6858_13,13,13,EmojiTextView muteView = row.findViewById(R.id.row_mute_value);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.5,12,8
6858_14,14,14,"muteView.setText(String.format(""%s "" + getString(R.string.minutes), silence.toString()));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.52,11,7
6858_15,15,17,"if (enableInvertedTheme) {
muteView.setTextColor(getResources().getColor(R.color.black));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,2,1,0,2,0.57,8,5
6858_16,16,16,muteView.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.57,9,5
6858_18,18,18,muteView.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.61,7,4
6858_19,19,20,"@Override
public void onClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,1,0.48,5,3
6858_21,21,21,selectedSilenceTime = silence.toString();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.29,4,2
6858_22,22,22,sendMuteCommand(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.47,3,1
6858_23,23,23,"Logger.debug(""NotificationFragment loadMuteOptions muteView OnClick: "" + selectedSilenceTime);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.46,2,0
6858_26,26,26,muteListView.addView(row);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.56,0,0
6858_29,29,29,"final View row_day = inflater.inflate(R.layout.row_mute, muteListView, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,1,0.52,3,1
6858_30,30,30,EmojiTextView muteView = row_day.findViewById(R.id.row_mute_value);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.49,4,1
6858_31,31,31,muteView.setText(getString(R.string.one_day));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.55,5,2
6858_32,32,34,"if (enableInvertedTheme) {
muteView.setTextColor(getResources().getColor(R.color.black));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,2,1,0,2,0.57,6,3
6858_33,33,33,muteView.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.57,7,4
6858_35,35,35,muteView.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.61,9,6
6858_36,36,37,"@Override
public void onClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,1,0.48,10,6
6858_38,38,38,"selectedSilenceTime = ""1440"";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.3,12,8
6858_39,39,39,sendMuteCommand(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.47,13,8
6858_40,40,40,"Logger.debug(""NotificationFragment loadMuteOptions muteView OnClick: "" + selectedSilenceTime);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.46,14,9
6858_43,43,43,muteListView.addView(row_day);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,1,0.53,17,11
6858_46,46,46,"final View row_block = inflater.inflate(R.layout.row_mute, muteListView, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,1,0.52,20,12
6858_47,47,47,muteView = row_block.findViewById(R.id.row_mute_value);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.48,21,12
6858_48,48,48,muteView.setText(R.string.block_app);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.58,22,13
6858_49,49,52,"if (enableInvertedTheme)
muteView.setTextColor(getResources().getColor(R.color.dark_red));
else
muteView.setTextColor(getResources().getColor(R.color.red_a200));",1,0,0,0,0,0,0,0,0,2,0,4,0,1,0,0,4,2,1,0,2,0.58,23,14
6858_50,50,50,muteView.setTextColor(getResources().getColor(R.color.dark_red));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,2,0.58,24,15
6858_51,51,52,"else
muteView.setTextColor(getResources().getColor(R.color.red_a200));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,4,2,1,0,2,0.57,25,16
6858_53,53,53,muteView.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.61,27,18
6858_54,54,55,"@Override
public void onClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,1,0.48,28,18
6858_56,56,56,selectedSilenceTime = Constants.BLOCK_APP;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.34,30,20
6858_57,57,57,sendMuteCommand(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.47,31,20
6858_58,58,58,"Logger.debug(""NotificationFragment loadMuteOptions muteView OnClick: "" + selectedSilenceTime);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.46,32,21
6858_61,61,61,muteListView.addView(row_block);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.54,35,23
6859_1,1,1,private void loadMuteOptions() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.51,27,18
6859_3,3,3,List<Integer> silenceList = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,0,0,0,0.5,25,17
6859_4,4,4,silenceList.add(5);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,0,0,0,0.44,24,16
6859_5,5,5,silenceList.add(15);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,0,0,0,0.5,23,15
6859_6,6,6,silenceList.add(30);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,0,0,0,0.52,22,14
6859_7,7,7,silenceList.add(60);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,6,3,0,0,0,0.5,21,13
6859_9,9,9,LayoutInflater inflater = LayoutInflater.from(NotificationFragment.this.mContext);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,3,0,0,0,0.42,19,12
6859_11,11,27,"for (final Integer silence : silenceList) {
final View row = inflater.inflate(R.layout.row_mute, muteListView, false);
EmojiTextView muteView = row.findViewById(R.id.row_mute_value);
muteView.setText(String.format(""%s "" + getString(R.string.minutes), silence.toString()));
if (enableInvertedTheme) {
muteView.setTextColor(getResources().getColor(R.color.black));
}
muteView.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
selectedSilenceTime = silence.toString();
sendMuteCommand(view);
Logger.debug(""NotificationFragment loadMuteOptions muteView OnClick: "" + selectedSilenceTime);
}
});
muteListView.addView(row);
}",0,0,0,1,0,0,0,0,0,11,3,17,0,0,1,1,6,3,0,0,1,0.54,1,0
6859_12,12,12,"final View row = inflater.inflate(R.layout.row_mute, muteListView, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.5,16,10
6859_13,13,13,EmojiTextView muteView = row.findViewById(R.id.row_mute_value);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.47,15,9
6859_14,14,14,"muteView.setText(String.format(""%s "" + getString(R.string.minutes), silence.toString()));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.49,14,8
6859_15,15,17,"if (enableInvertedTheme) {
muteView.setTextColor(getResources().getColor(R.color.black));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,0,0,1,0.49,11,6
6859_16,16,16,muteView.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.48,12,6
6859_18,18,18,muteView.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.53,10,5
6859_19,19,20,"@Override
public void onClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,0,0,0,0.37,8,4
6859_21,21,21,selectedSilenceTime = silence.toString();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.49,7,3
6859_22,22,22,sendMuteCommand(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.51,6,2
6859_23,23,23,"Logger.debug(""NotificationFragment loadMuteOptions muteView OnClick: "" + selectedSilenceTime);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.55,5,1
6859_26,26,26,muteListView.addView(row);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.49,2,0
6859_29,29,29,"final View row_day = inflater.inflate(R.layout.row_mute, muteListView, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,0,0,2,0.58,0,0
6859_30,30,30,EmojiTextView muteView = row_day.findViewById(R.id.row_mute_value);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,2,0.55,1,0
6859_31,31,31,muteView.setText(getString(R.string.one_day));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,3,0.62,2,1
6859_32,32,34,"if (enableInvertedTheme) {
muteView.setTextColor(getResources().getColor(R.color.black));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,0,0,1,0.49,3,2
6859_33,33,33,muteView.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.48,4,3
6859_35,35,35,muteView.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.53,6,5
6859_36,36,37,"@Override
public void onClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,0,0,0,0.37,7,5
6859_38,38,38,"selectedSilenceTime = ""1440"";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.5,9,7
6859_39,39,39,sendMuteCommand(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.51,10,7
6859_40,40,40,"Logger.debug(""NotificationFragment loadMuteOptions muteView OnClick: "" + selectedSilenceTime);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.55,11,8
6859_43,43,43,muteListView.addView(row_day);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,0,0,2,0.59,14,10
6859_46,46,46,"final View row_block = inflater.inflate(R.layout.row_mute, muteListView, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,0,0,1,0.5,17,11
6859_47,47,47,muteView = row_block.findViewById(R.id.row_mute_value);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.48,18,11
6859_48,48,48,muteView.setText(R.string.block_app);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,2,0.54,19,12
6859_49,49,52,"if (enableInvertedTheme)
muteView.setTextColor(getResources().getColor(R.color.dark_red));
else
muteView.setTextColor(getResources().getColor(R.color.red_a200));",1,0,0,0,0,0,0,0,0,2,0,4,0,1,0,0,6,3,0,0,1,0.5,20,13
6859_50,50,50,muteView.setTextColor(getResources().getColor(R.color.dark_red));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,3,0,0,1,0.49,21,14
6859_51,51,52,"else
muteView.setTextColor(getResources().getColor(R.color.red_a200));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,6,3,0,0,1,0.49,22,15
6859_53,53,53,muteView.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.53,24,17
6859_54,54,55,"@Override
public void onClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,0,0,0,0.37,25,17
6859_56,56,56,selectedSilenceTime = Constants.BLOCK_APP;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.58,27,19
6859_57,57,57,sendMuteCommand(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.51,28,19
6859_58,58,58,"Logger.debug(""NotificationFragment loadMuteOptions muteView OnClick: "" + selectedSilenceTime);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.55,29,20
6859_61,61,61,muteListView.addView(row_block);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,1,0.49,32,22
6860_1,1,1,private void loadMuteOptions() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.37,44,29
6860_3,3,3,List<Integer> silenceList = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,7,0,0,1,0.59,42,28
6860_4,4,4,silenceList.add(5);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,7,0,0,1,0.5,41,27
6860_5,5,5,silenceList.add(15);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,7,0,0,1,0.49,40,26
6860_6,6,6,silenceList.add(30);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,7,0,0,1,0.49,39,25
6860_7,7,7,silenceList.add(60);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,7,7,0,0,1,0.48,38,24
6860_9,9,9,LayoutInflater inflater = LayoutInflater.from(NotificationFragment.this.mContext);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,7,7,0,0,0,0.37,36,23
6860_11,11,27,"for (final Integer silence : silenceList) {
final View row = inflater.inflate(R.layout.row_mute, muteListView, false);
EmojiTextView muteView = row.findViewById(R.id.row_mute_value);
muteView.setText(String.format(""%s "" + getString(R.string.minutes), silence.toString()));
if (enableInvertedTheme) {
muteView.setTextColor(getResources().getColor(R.color.black));
}
muteView.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
selectedSilenceTime = silence.toString();
sendMuteCommand(view);
Logger.debug(""NotificationFragment loadMuteOptions muteView OnClick: "" + selectedSilenceTime);
}
});
muteListView.addView(row);
}",0,0,0,1,0,0,0,0,0,11,3,17,0,0,1,1,7,7,0,0,1,0.44,18,11
6860_12,12,12,"final View row = inflater.inflate(R.layout.row_mute, muteListView, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,7,0,0,1,0.46,33,21
6860_13,13,13,EmojiTextView muteView = row.findViewById(R.id.row_mute_value);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,7,0,0,0,0.36,32,20
6860_14,14,14,"muteView.setText(String.format(""%s "" + getString(R.string.minutes), silence.toString()));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,0,0.34,31,19
6860_15,15,17,"if (enableInvertedTheme) {
muteView.setTextColor(getResources().getColor(R.color.black));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,7,0,0,0,0.36,28,17
6860_16,16,16,muteView.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.34,29,17
6860_18,18,18,muteView.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,0,0.41,27,16
6860_19,19,20,"@Override
public void onClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,7,0,0,0,0.32,25,15
6860_21,21,21,selectedSilenceTime = silence.toString();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.33,24,14
6860_22,22,22,sendMuteCommand(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.37,23,13
6860_23,23,23,"Logger.debug(""NotificationFragment loadMuteOptions muteView OnClick: "" + selectedSilenceTime);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.38,22,12
6860_26,26,26,muteListView.addView(row);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.48,19,11
6860_29,29,29,"final View row_day = inflater.inflate(R.layout.row_mute, muteListView, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,7,0,0,1,0.45,16,10
6860_30,30,30,EmojiTextView muteView = row_day.findViewById(R.id.row_mute_value);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,7,0,0,0,0.35,15,9
6860_31,31,31,muteView.setText(getString(R.string.one_day));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,0,0.34,14,8
6860_32,32,34,"if (enableInvertedTheme) {
muteView.setTextColor(getResources().getColor(R.color.black));
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,7,0,0,0,0.36,11,6
6860_33,33,33,muteView.setTextColor(getResources().getColor(R.color.black));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.34,12,6
6860_35,35,35,muteView.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,0,0.41,10,5
6860_36,36,37,"@Override
public void onClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,7,0,0,0,0.32,8,4
6860_38,38,38,"selectedSilenceTime = ""1440"";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.33,7,3
6860_39,39,39,sendMuteCommand(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.37,6,2
6860_40,40,40,"Logger.debug(""NotificationFragment loadMuteOptions muteView OnClick: "" + selectedSilenceTime);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.38,5,1
6860_43,43,43,muteListView.addView(row_day);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,7,0,0,1,0.46,2,0
6860_46,46,46,"final View row_block = inflater.inflate(R.layout.row_mute, muteListView, false);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,7,0,0,2,0.52,0,0
6860_47,47,47,muteView = row_block.findViewById(R.id.row_mute_value);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,1,0.43,1,0
6860_48,48,48,muteView.setText(R.string.block_app);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,2,0.56,2,1
6860_49,49,52,"if (enableInvertedTheme)
muteView.setTextColor(getResources().getColor(R.color.dark_red));
else
muteView.setTextColor(getResources().getColor(R.color.red_a200));",1,0,0,0,0,0,0,0,0,2,0,4,0,1,0,0,7,7,0,0,0,0.36,3,2
6860_50,50,50,muteView.setTextColor(getResources().getColor(R.color.dark_red));,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,7,0,0,0,0.35,4,3
6860_51,51,52,"else
muteView.setTextColor(getResources().getColor(R.color.red_a200));",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,7,7,0,0,0,0.35,5,4
6860_53,53,53,muteView.setOnClickListener(new View.OnClickListener() {,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,0,0.41,7,6
6860_54,54,55,"@Override
public void onClick(View view) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,7,0,0,0,0.32,8,6
6860_56,56,56,selectedSilenceTime = Constants.BLOCK_APP;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,2,0.57,10,8
6860_57,57,57,sendMuteCommand(view);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.37,11,8
6860_58,58,58,"Logger.debug(""NotificationFragment loadMuteOptions muteView OnClick: "" + selectedSilenceTime);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.38,12,9
6860_61,61,61,muteListView.addView(row_block);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,2,0.56,15,11
6861_1,1,2,"    @Override
public void onTimerSelected(View v) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,1,0.54,3,3
6861_3,3,3,"action = """";",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,2,2
6861_4,4,4,v.setPressed(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.43,1,1
6861_5,5,5,delayedConfirmationView.reset();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.42,0,0
6861_6,6,6,((DelayedConfirmationView) v).setListener(null);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.37,0,0
6861_7,7,7,((NotificationWearActivity) getActivity()).startTimerFinish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.73,1,0
6861_8,8,8,hideDelayed();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.39,2,1
6861_9,9,9,"Logger.info(""NotificationFragment onTimerSelected isPressed: "" + v.isPressed());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,1,0.56,3,2
2979_1,1,7,"@Override
public ResponseEntity<CohortReview> createCohortReview(
String workspaceNamespace,
String workspaceId,
Long cohortId,
Long cdrVersionId,
CreateReviewRequest request) {",0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,4,3,0,0,1,0.46,6,2
2979_8,8,12,"if (request.getSize() <= 0 || request.getSize() > MAX_REVIEW_SIZE) {
throw new BadRequestException(
String.format(
""Bad Request: Cohort Review size must be between %s and %s"", 0, MAX_REVIEW_SIZE));
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,1,4,3,0,0,0,0.42,1,0
2979_9,9,11,"throw new BadRequestException(
String.format(
""Bad Request: Cohort Review size must be between %s and %s"", 0, MAX_REVIEW_SIZE));",0,0,0,0,0,0,0,0,1,0,0,3,0,0,0,0,4,3,0,0,0,0.44,2,0
2979_14,14,16,"DbWorkspace dbWorkspace =
workspaceAuthService.getWorkspaceEnforceAccessLevelAndSetCdrVersion(
workspaceNamespace, workspaceId, WorkspaceAccessLevel.WRITER);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,4,3,0,0,1,0.6,0,0
2979_18,18,18,CohortReview cohortReview;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.31,4,1
2979_19,19,19,"DbCohort cohort = cohortReviewService.findCohort(dbWorkspace.getWorkspaceId(), cohortId);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.49,5,1
2979_20,20,27,"try {
cohortReview =
cohortReviewService.findCohortReview(
cohort.getCohortId(), dbWorkspace.getCdrVersion().getCdrVersionId());
} catch (NotFoundException nfe) {
cohortReview = cohortReviewService.initializeCohortReview(cdrVersionId, cohort);
cohortReview = cohortReviewService.saveCohortReview(cohortReview, userProvider.get());
}",0,0,0,0,1,0,0,0,0,4,1,8,0,1,0,0,4,3,0,0,2,0.53,6,2
2979_21,21,23,"cohortReview =
cohortReviewService.findCohortReview(
cohort.getCohortId(), dbWorkspace.getCdrVersion().getCdrVersionId());",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,4,3,0,0,1,0.44,7,3
2979_24,24,24,} catch (NotFoundException nfe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.35,10,5
2979_25,25,25,"cohortReview = cohortReviewService.initializeCohortReview(cdrVersionId, cohort);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.32,11,5
2979_26,26,26,"cohortReview = cohortReviewService.saveCohortReview(cohortReview, userProvider.get());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,1,0.45,12,6
2979_28,28,33,"if (cohortReview.getReviewSize() > 0) {
throw new BadRequestException(
String.format(
""Bad Request: Cohort Review already created for cohortId: %s, cdrVersionId: %s"",
cohortId, cdrVersionId));
}",1,0,0,0,0,0,0,0,0,1,1,6,0,1,0,1,4,3,0,0,0,0.42,14,8
2979_29,29,32,"throw new BadRequestException(
String.format(
""Bad Request: Cohort Review already created for cohortId: %s, cdrVersionId: %s"",
cohortId, cdrVersionId));",0,0,0,0,0,0,0,0,1,0,0,4,0,0,0,0,4,3,0,0,0,0.43,15,8
2979_35,35,37,"List<DbParticipantCohortStatus> participantCohortStatuses =
cohortReviewService.createDbParticipantCohortStatusesList(
cohort, request.getSize(), cohortReview.getCohortReviewId());",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,4,3,0,0,0,0.37,21,10
2979_39,39,40,"cohortReview
.reviewSize((long) participantCohortStatuses.size())",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,3,0,0,0,0.34,25,11
2979_41,41,41,.reviewStatus(ReviewStatus.CREATED);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.31,27,12
2979_43,43,43,"cohortReviewService.saveFullCohortReview(cohortReview, participantCohortStatuses);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,0,0.34,29,13
2979_45,45,50,"PageRequest pageRequest =
new PageRequest()
.page(PAGE)
.pageSize(PAGE_SIZE)
.sortOrder(SortOrder.ASC)
.sortColumn(FilterColumns.PARTICIPANTID.toString());",0,0,0,0,0,1,0,0,0,0,0,6,0,0,1,1,4,3,0,0,0,0.35,31,14
2979_52,52,53,"List<ParticipantCohortStatus> paginatedPCS =
cohortReviewService.findAll(cohortReview.getCohortReviewId(), pageRequest);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,4,3,0,0,0,0.37,38,15
2979_55,55,55,return ResponseEntity.ok(cohortReview.participantCohortStatuses(paginatedPCS));,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,3,0,0,0,0.42,41,16
6938_1,1,2,"private TableNameAndAlias getTableNameAndAlias(
List<String> columnParts, QueryState queryState, boolean beforeLimitRequired) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,0,0,2,0.56,5,5
6938_3,3,3,String tableName = queryState.mainTableName;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.48,4,4
6938_4,4,4,JoinedTableInfo joinedTableInfo = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,0,0,2,0.62,3,3
6938_5,5,5,String tableAlias = tableName;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,0,0,2,0.65,2,2
6938_6,6,6,int i;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.25,1,1
6938_7,7,7,"Map<String, ColumnConfig> tableColumns = queryState.mainTableColumns;",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.46,0,0
6938_8,8,25,"for (i = columnParts.size() - 1; i > 0; i--) {
String alias = toTableAlias(columnParts, i);
joinedTableInfo = queryState.aliasToJoinedTableInfo.get(alias);
if (joinedTableInfo != null) {
if (beforeLimitRequired && !joinedTableInfo.beforeLimitRequired) {
joinedTableInfo.beforeLimitRequired = true;
for (int j = i - 1; j > 0; j--) {
String beforeAlias = toTableAlias(columnParts, j);
JoinedTableInfo beforeInfo = queryState.aliasToJoinedTableInfo.get(beforeAlias);
beforeInfo.beforeLimitRequired = true;
}
}
tableName = joinedTableInfo.joinedTableName;
tableAlias = alias;
tableColumns = getColumnConfigs(queryState, tableName, false);
break;
}
}",0,0,1,0,0,0,0,0,0,13,4,18,1,1,0,0,6,5,0,0,3,0.66,0,0
6938_9,9,9,"String alias = toTableAlias(columnParts, i);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.64,1,0
6938_10,10,10,joinedTableInfo = queryState.aliasToJoinedTableInfo.get(alias);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,5,0,0,3,0.69,2,1
6938_11,11,24,"if (joinedTableInfo != null) {
if (beforeLimitRequired && !joinedTableInfo.beforeLimitRequired) {
joinedTableInfo.beforeLimitRequired = true;
for (int j = i - 1; j > 0; j--) {
String beforeAlias = toTableAlias(columnParts, j);
JoinedTableInfo beforeInfo = queryState.aliasToJoinedTableInfo.get(beforeAlias);
beforeInfo.beforeLimitRequired = true;
}
}
tableName = joinedTableInfo.joinedTableName;
tableAlias = alias;
tableColumns = getColumnConfigs(queryState, tableName, false);
break;
}",1,0,0,0,0,0,0,0,0,10,3,14,1,1,0,0,6,5,0,0,3,0.66,3,2
6938_12,12,19,"if (beforeLimitRequired && !joinedTableInfo.beforeLimitRequired) {
joinedTableInfo.beforeLimitRequired = true;
for (int j = i - 1; j > 0; j--) {
String beforeAlias = toTableAlias(columnParts, j);
JoinedTableInfo beforeInfo = queryState.aliasToJoinedTableInfo.get(beforeAlias);
beforeInfo.beforeLimitRequired = true;
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,0,6,5,0,0,3,0.63,4,3
6938_13,13,13,joinedTableInfo.beforeLimitRequired = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,2,0.56,5,4
6938_14,14,18,"for (int j = i - 1; j > 0; j--) {
String beforeAlias = toTableAlias(columnParts, j);
JoinedTableInfo beforeInfo = queryState.aliasToJoinedTableInfo.get(beforeAlias);
beforeInfo.beforeLimitRequired = true;
}",0,0,1,0,0,0,0,0,0,3,1,5,0,0,0,0,6,5,0,0,3,0.63,6,5
6938_15,15,15,"String beforeAlias = toTableAlias(columnParts, j);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.63,7,6
6938_16,16,16,JoinedTableInfo beforeInfo = queryState.aliasToJoinedTableInfo.get(beforeAlias);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,3,0.68,8,7
6938_17,17,17,beforeInfo.beforeLimitRequired = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.33,9,8
6938_20,20,20,tableName = joinedTableInfo.joinedTableName;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.66,12,10
6938_21,21,21,tableAlias = alias;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,2,0.77,13,10
6938_22,22,22,"tableColumns = getColumnConfigs(queryState, tableName, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.49,14,11
6938_23,23,23,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,5,0,0,0,0.29,15,12
6938_26,26,50,"for (int j = i; j < columnParts.size() - 1; j++) {
String columnPart = columnParts.get(j);
String foreignKeyColumn = getForeignKeyColumn(columnPart);
ColumnConfig foreignKeyColumnConfig = tableColumns.get(foreignKeyColumn);
if (foreignKeyColumnConfig == null) {
throw new BadRequestException(""No foreign key column found: "" + foreignKeyColumn);
}
String foreignKeyTable = foreignKeyColumnConfig.foreignKey;
if (foreignKeyTable == null) {
throw new BadRequestException(""Column is not a foreign key: "" + foreignKeyColumn);
}
tableColumns = getColumnConfigs(queryState, foreignKeyTable, false);
ColumnConfig foreignKeyTablePrimaryKey = findPrimaryKey(tableColumns.values());

String foreignKeyAlias = toTableAlias(columnParts, j + 1);
joinedTableInfo = new JoinedTableInfo();
joinedTableInfo.joinedTableName = foreignKeyTable;
joinedTableInfo.joinedTablePrimaryKey = foreignKeyTablePrimaryKey;
joinedTableInfo.startTableAlias = tableAlias;
joinedTableInfo.startTableJoinColumn = foreignKeyColumn;
joinedTableInfo.beforeLimitRequired = beforeLimitRequired;
queryState.aliasToJoinedTableInfo.put(foreignKeyAlias, joinedTableInfo);
tableAlias = foreignKeyAlias;
tableName = foreignKeyTable;
}",0,0,1,0,0,0,0,0,0,20,2,25,1,1,0,0,6,5,0,0,3,0.64,18,14
6938_27,27,27,String columnPart = columnParts.get(j);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.42,19,14
6938_28,28,28,String foreignKeyColumn = getForeignKeyColumn(columnPart);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.47,20,15
6938_29,29,29,ColumnConfig foreignKeyColumnConfig = tableColumns.get(foreignKeyColumn);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.51,21,16
6938_30,30,32,"if (foreignKeyColumnConfig == null) {
throw new BadRequestException(""No foreign key column found: "" + foreignKeyColumn);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,5,0,0,0,0.45,22,17
6938_31,31,31,"throw new BadRequestException(""No foreign key column found: "" + foreignKeyColumn);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,5,0,0,0,0.45,23,18
6938_33,33,33,String foreignKeyTable = foreignKeyColumnConfig.foreignKey;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.52,25,20
6938_34,34,36,"if (foreignKeyTable == null) {
throw new BadRequestException(""Column is not a foreign key: "" + foreignKeyColumn);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,5,0,0,1,0.52,26,20
6938_35,35,35,"throw new BadRequestException(""Column is not a foreign key: "" + foreignKeyColumn);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,5,0,0,0,0.45,27,21
6938_37,37,37,"tableColumns = getColumnConfigs(queryState, foreignKeyTable, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.54,29,23
6938_38,38,38,ColumnConfig foreignKeyTablePrimaryKey = findPrimaryKey(tableColumns.values());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,6,5,0,0,1,0.52,30,23
6938_40,40,40,"String foreignKeyAlias = toTableAlias(columnParts, j + 1);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,5,0,0,2,0.62,32,25
6938_41,41,41,joinedTableInfo = new JoinedTableInfo();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.65,33,25
6938_42,42,42,joinedTableInfo.joinedTableName = foreignKeyTable;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.67,34,26
6938_43,43,43,joinedTableInfo.joinedTablePrimaryKey = foreignKeyTablePrimaryKey;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.63,35,27
6938_44,44,44,joinedTableInfo.startTableAlias = tableAlias;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,3,0.76,36,28
6938_45,45,45,joinedTableInfo.startTableJoinColumn = foreignKeyColumn;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.63,37,29
6938_46,46,46,joinedTableInfo.beforeLimitRequired = beforeLimitRequired;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.53,38,30
6938_47,47,47,"queryState.aliasToJoinedTableInfo.put(foreignKeyAlias, joinedTableInfo);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,3,0.67,39,31
6938_48,48,48,tableAlias = foreignKeyAlias;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.72,40,32
6938_49,49,49,tableName = foreignKeyTable;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.61,41,33
6938_51,51,51,"return new TableNameAndAlias(tableName, tableAlias);",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,5,0,0,2,0.66,43,35
6939_1,1,2,"private TableNameAndAlias getTableNameAndAlias(
List<String> columnParts, QueryState queryState, boolean beforeLimitRequired) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,6,0,0,3,0.61,11,11
6939_3,3,3,String tableName = queryState.mainTableName;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,6,0,0,1,0.51,10,10
6939_4,4,4,JoinedTableInfo joinedTableInfo = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,6,0,0,2,0.66,9,9
6939_5,5,5,String tableAlias = tableName;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,6,0,0,1,0.53,8,8
6939_6,6,6,int i;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,6,0,0,0,0.29,7,7
6939_7,7,7,"Map<String, ColumnConfig> tableColumns = queryState.mainTableColumns;",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,0,0,1,0.49,6,6
6939_8,8,25,"for (i = columnParts.size() - 1; i > 0; i--) {
String alias = toTableAlias(columnParts, i);
joinedTableInfo = queryState.aliasToJoinedTableInfo.get(alias);
if (joinedTableInfo != null) {
if (beforeLimitRequired && !joinedTableInfo.beforeLimitRequired) {
joinedTableInfo.beforeLimitRequired = true;
for (int j = i - 1; j > 0; j--) {
String beforeAlias = toTableAlias(columnParts, j);
JoinedTableInfo beforeInfo = queryState.aliasToJoinedTableInfo.get(beforeAlias);
beforeInfo.beforeLimitRequired = true;
}
}
tableName = joinedTableInfo.joinedTableName;
tableAlias = alias;
tableColumns = getColumnConfigs(queryState, tableName, false);
break;
}
}",0,0,1,0,0,0,0,0,0,13,4,18,1,1,0,0,7,6,0,0,5,0.75,0,0
6939_9,9,9,"String alias = toTableAlias(columnParts, i);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,0,0,1,0.46,4,4
6939_10,10,10,joinedTableInfo = queryState.aliasToJoinedTableInfo.get(alias);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,6,0,0,2,0.59,3,3
6939_11,11,24,"if (joinedTableInfo != null) {
if (beforeLimitRequired && !joinedTableInfo.beforeLimitRequired) {
joinedTableInfo.beforeLimitRequired = true;
for (int j = i - 1; j > 0; j--) {
String beforeAlias = toTableAlias(columnParts, j);
JoinedTableInfo beforeInfo = queryState.aliasToJoinedTableInfo.get(beforeAlias);
beforeInfo.beforeLimitRequired = true;
}
}
tableName = joinedTableInfo.joinedTableName;
tableAlias = alias;
tableColumns = getColumnConfigs(queryState, tableName, false);
break;
}",1,0,0,0,0,0,0,0,0,10,3,14,1,1,0,0,7,6,0,0,5,0.77,0,0
6939_12,12,19,"if (beforeLimitRequired && !joinedTableInfo.beforeLimitRequired) {
joinedTableInfo.beforeLimitRequired = true;
for (int j = i - 1; j > 0; j--) {
String beforeAlias = toTableAlias(columnParts, j);
JoinedTableInfo beforeInfo = queryState.aliasToJoinedTableInfo.get(beforeAlias);
beforeInfo.beforeLimitRequired = true;
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,0,7,6,0,0,5,0.78,0,0
6939_13,13,13,joinedTableInfo.beforeLimitRequired = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,5,0.9,0,0
6939_14,14,18,"for (int j = i - 1; j > 0; j--) {
String beforeAlias = toTableAlias(columnParts, j);
JoinedTableInfo beforeInfo = queryState.aliasToJoinedTableInfo.get(beforeAlias);
beforeInfo.beforeLimitRequired = true;
}",0,0,1,0,0,0,0,0,0,3,1,5,0,0,0,0,7,6,0,0,5,0.72,0,0
6939_15,15,15,"String beforeAlias = toTableAlias(columnParts, j);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,0,0,1,0.46,1,0
6939_16,16,16,JoinedTableInfo beforeInfo = queryState.aliasToJoinedTableInfo.get(beforeAlias);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,0,0,2,0.58,2,1
6939_17,17,17,beforeInfo.beforeLimitRequired = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,3,0.73,3,2
6939_20,20,20,tableName = joinedTableInfo.joinedTableName;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,2,0.69,6,4
6939_21,21,21,tableAlias = alias;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,1,0.48,7,4
6939_22,22,22,"tableColumns = getColumnConfigs(queryState, tableName, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,1,0.53,8,5
6939_23,23,23,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,6,0,0,0,0.28,9,6
6939_26,26,50,"for (int j = i; j < columnParts.size() - 1; j++) {
String columnPart = columnParts.get(j);
String foreignKeyColumn = getForeignKeyColumn(columnPart);
ColumnConfig foreignKeyColumnConfig = tableColumns.get(foreignKeyColumn);
if (foreignKeyColumnConfig == null) {
throw new BadRequestException(""No foreign key column found: "" + foreignKeyColumn);
}
String foreignKeyTable = foreignKeyColumnConfig.foreignKey;
if (foreignKeyTable == null) {
throw new BadRequestException(""Column is not a foreign key: "" + foreignKeyColumn);
}
tableColumns = getColumnConfigs(queryState, foreignKeyTable, false);
ColumnConfig foreignKeyTablePrimaryKey = findPrimaryKey(tableColumns.values());

String foreignKeyAlias = toTableAlias(columnParts, j + 1);
joinedTableInfo = new JoinedTableInfo();
joinedTableInfo.joinedTableName = foreignKeyTable;
joinedTableInfo.joinedTablePrimaryKey = foreignKeyTablePrimaryKey;
joinedTableInfo.startTableAlias = tableAlias;
joinedTableInfo.startTableJoinColumn = foreignKeyColumn;
joinedTableInfo.beforeLimitRequired = beforeLimitRequired;
queryState.aliasToJoinedTableInfo.put(foreignKeyAlias, joinedTableInfo);
tableAlias = foreignKeyAlias;
tableName = foreignKeyTable;
}",0,0,1,0,0,0,0,0,0,20,2,25,1,1,0,0,7,6,0,0,4,0.69,12,8
6939_27,27,27,String columnPart = columnParts.get(j);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.36,13,8
6939_28,28,28,String foreignKeyColumn = getForeignKeyColumn(columnPart);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,0,0,0,0.45,14,9
6939_29,29,29,ColumnConfig foreignKeyColumnConfig = tableColumns.get(foreignKeyColumn);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,0,0,1,0.54,15,10
6939_30,30,32,"if (foreignKeyColumnConfig == null) {
throw new BadRequestException(""No foreign key column found: "" + foreignKeyColumn);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,6,0,0,0,0.43,16,11
6939_31,31,31,"throw new BadRequestException(""No foreign key column found: "" + foreignKeyColumn);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,6,0,0,0,0.43,17,12
6939_33,33,33,String foreignKeyTable = foreignKeyColumnConfig.foreignKey;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,6,0,0,1,0.56,19,14
6939_34,34,36,"if (foreignKeyTable == null) {
throw new BadRequestException(""Column is not a foreign key: "" + foreignKeyColumn);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,6,0,0,1,0.53,20,14
6939_35,35,35,"throw new BadRequestException(""Column is not a foreign key: "" + foreignKeyColumn);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,6,0,0,0,0.43,21,15
6939_37,37,37,"tableColumns = getColumnConfigs(queryState, foreignKeyTable, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,1,0.57,23,17
6939_38,38,38,ColumnConfig foreignKeyTablePrimaryKey = findPrimaryKey(tableColumns.values());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,7,6,0,0,1,0.56,24,17
6939_40,40,40,"String foreignKeyAlias = toTableAlias(columnParts, j + 1);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,6,0,0,1,0.52,26,19
6939_41,41,41,joinedTableInfo = new JoinedTableInfo();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,2,0.64,27,19
6939_42,42,42,joinedTableInfo.joinedTableName = foreignKeyTable;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,2,0.7,28,20
6939_43,43,43,joinedTableInfo.joinedTablePrimaryKey = foreignKeyTablePrimaryKey;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,2,0.65,29,21
6939_44,44,44,joinedTableInfo.startTableAlias = tableAlias;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,2,0.64,30,22
6939_45,45,45,joinedTableInfo.startTableJoinColumn = foreignKeyColumn;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,2,0.66,31,23
6939_46,46,46,joinedTableInfo.beforeLimitRequired = beforeLimitRequired;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,4,0.86,32,24
6939_47,47,47,"queryState.aliasToJoinedTableInfo.put(foreignKeyAlias, joinedTableInfo);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,2,0.59,33,25
6939_48,48,48,tableAlias = foreignKeyAlias;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,6,0,0,1,0.55,34,26
6939_49,49,49,tableName = foreignKeyTable;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,6,0,0,1,0.64,35,27
6939_51,51,51,"return new TableNameAndAlias(tableName, tableAlias);",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,7,6,0,0,1,0.54,37,29
6940_1,1,2,"private TableNameAndAlias getTableNameAndAlias(
List<String> columnParts, QueryState queryState, boolean beforeLimitRequired) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,2,2,0,1,0.47,23,19
6940_3,3,3,String tableName = queryState.mainTableName;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,2,2,0,1,0.48,22,18
6940_4,4,4,JoinedTableInfo joinedTableInfo = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,2,2,0,2,0.6,21,17
6940_5,5,5,String tableAlias = tableName;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,2,2,0,1,0.49,20,16
6940_6,6,6,int i;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,7,2,2,0,0,0.39,19,15
6940_7,7,7,"Map<String, ColumnConfig> tableColumns = queryState.mainTableColumns;",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,2,2,0,1,0.49,18,14
6940_8,8,25,"for (i = columnParts.size() - 1; i > 0; i--) {
String alias = toTableAlias(columnParts, i);
joinedTableInfo = queryState.aliasToJoinedTableInfo.get(alias);
if (joinedTableInfo != null) {
if (beforeLimitRequired && !joinedTableInfo.beforeLimitRequired) {
joinedTableInfo.beforeLimitRequired = true;
for (int j = i - 1; j > 0; j--) {
String beforeAlias = toTableAlias(columnParts, j);
JoinedTableInfo beforeInfo = queryState.aliasToJoinedTableInfo.get(beforeAlias);
beforeInfo.beforeLimitRequired = true;
}
}
tableName = joinedTableInfo.joinedTableName;
tableAlias = alias;
tableColumns = getColumnConfigs(queryState, tableName, false);
break;
}
}",0,0,1,0,0,0,0,0,0,13,4,18,1,1,0,0,7,2,2,0,2,0.58,0,0
6940_9,9,9,"String alias = toTableAlias(columnParts, i);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,2,2,0,1,0.47,16,12
6940_10,10,10,joinedTableInfo = queryState.aliasToJoinedTableInfo.get(alias);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,7,2,2,0,2,0.54,15,11
6940_11,11,24,"if (joinedTableInfo != null) {
if (beforeLimitRequired && !joinedTableInfo.beforeLimitRequired) {
joinedTableInfo.beforeLimitRequired = true;
for (int j = i - 1; j > 0; j--) {
String beforeAlias = toTableAlias(columnParts, j);
JoinedTableInfo beforeInfo = queryState.aliasToJoinedTableInfo.get(beforeAlias);
beforeInfo.beforeLimitRequired = true;
}
}
tableName = joinedTableInfo.joinedTableName;
tableAlias = alias;
tableColumns = getColumnConfigs(queryState, tableName, false);
break;
}",1,0,0,0,0,0,0,0,0,10,3,14,1,1,0,0,7,2,2,0,2,0.59,1,0
6940_12,12,19,"if (beforeLimitRequired && !joinedTableInfo.beforeLimitRequired) {
joinedTableInfo.beforeLimitRequired = true;
for (int j = i - 1; j > 0; j--) {
String beforeAlias = toTableAlias(columnParts, j);
JoinedTableInfo beforeInfo = queryState.aliasToJoinedTableInfo.get(beforeAlias);
beforeInfo.beforeLimitRequired = true;
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,0,7,2,2,0,2,0.57,6,4
6940_13,13,13,joinedTableInfo.beforeLimitRequired = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,2,0,2,0.55,12,8
6940_14,14,18,"for (int j = i - 1; j > 0; j--) {
String beforeAlias = toTableAlias(columnParts, j);
JoinedTableInfo beforeInfo = queryState.aliasToJoinedTableInfo.get(beforeAlias);
beforeInfo.beforeLimitRequired = true;
}",0,0,1,0,0,0,0,0,0,3,1,5,0,0,0,0,7,2,2,0,2,0.56,7,4
6940_15,15,15,"String beforeAlias = toTableAlias(columnParts, j);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,2,2,0,1,0.5,10,6
6940_16,16,16,JoinedTableInfo beforeInfo = queryState.aliasToJoinedTableInfo.get(beforeAlias);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,2,2,0,2,0.52,9,5
6940_17,17,17,beforeInfo.beforeLimitRequired = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,2,2,0,0,0.35,8,4
6940_20,20,20,tableName = joinedTableInfo.joinedTableName;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,2,2,0,2,0.63,5,3
6940_21,21,21,tableAlias = alias;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,2,0,1,0.46,4,2
6940_22,22,22,"tableColumns = getColumnConfigs(queryState, tableName, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,2,0,1,0.49,3,1
6940_23,23,23,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,7,2,2,0,0,0.28,2,0
6940_26,26,50,"for (int j = i; j < columnParts.size() - 1; j++) {
String columnPart = columnParts.get(j);
String foreignKeyColumn = getForeignKeyColumn(columnPart);
ColumnConfig foreignKeyColumnConfig = tableColumns.get(foreignKeyColumn);
if (foreignKeyColumnConfig == null) {
throw new BadRequestException(""No foreign key column found: "" + foreignKeyColumn);
}
String foreignKeyTable = foreignKeyColumnConfig.foreignKey;
if (foreignKeyTable == null) {
throw new BadRequestException(""Column is not a foreign key: "" + foreignKeyColumn);
}
tableColumns = getColumnConfigs(queryState, foreignKeyTable, false);
ColumnConfig foreignKeyTablePrimaryKey = findPrimaryKey(tableColumns.values());

String foreignKeyAlias = toTableAlias(columnParts, j + 1);
joinedTableInfo = new JoinedTableInfo();
joinedTableInfo.joinedTableName = foreignKeyTable;
joinedTableInfo.joinedTablePrimaryKey = foreignKeyTablePrimaryKey;
joinedTableInfo.startTableAlias = tableAlias;
joinedTableInfo.startTableJoinColumn = foreignKeyColumn;
joinedTableInfo.beforeLimitRequired = beforeLimitRequired;
queryState.aliasToJoinedTableInfo.put(foreignKeyAlias, joinedTableInfo);
tableAlias = foreignKeyAlias;
tableName = foreignKeyTable;
}",0,0,1,0,0,0,0,0,0,20,2,25,1,1,0,0,7,2,2,0,3,0.64,0,0
6940_27,27,27,String columnPart = columnParts.get(j);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,2,2,0,0,0.44,1,0
6940_28,28,28,String foreignKeyColumn = getForeignKeyColumn(columnPart);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,2,2,0,0,0.46,2,1
6940_29,29,29,ColumnConfig foreignKeyColumnConfig = tableColumns.get(foreignKeyColumn);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,2,2,0,1,0.5,3,2
6940_30,30,32,"if (foreignKeyColumnConfig == null) {
throw new BadRequestException(""No foreign key column found: "" + foreignKeyColumn);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,2,2,0,0,0.45,4,3
6940_31,31,31,"throw new BadRequestException(""No foreign key column found: "" + foreignKeyColumn);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,2,2,0,0,0.44,5,4
6940_33,33,33,String foreignKeyTable = foreignKeyColumnConfig.foreignKey;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,2,2,0,1,0.52,7,6
6940_34,34,36,"if (foreignKeyTable == null) {
throw new BadRequestException(""Column is not a foreign key: "" + foreignKeyColumn);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,7,2,2,0,1,0.5,8,6
6940_35,35,35,"throw new BadRequestException(""Column is not a foreign key: "" + foreignKeyColumn);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,2,2,0,0,0.44,9,7
6940_37,37,37,"tableColumns = getColumnConfigs(queryState, foreignKeyTable, false);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,2,2,0,1,0.52,11,9
6940_38,38,38,ColumnConfig foreignKeyTablePrimaryKey = findPrimaryKey(tableColumns.values());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,7,2,2,0,1,0.52,12,9
6940_40,40,40,"String foreignKeyAlias = toTableAlias(columnParts, j + 1);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,2,2,0,1,0.52,14,11
6940_41,41,41,joinedTableInfo = new JoinedTableInfo();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,2,2,0,2,0.6,15,11
6940_42,42,42,joinedTableInfo.joinedTableName = foreignKeyTable;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,2,2,0,2,0.63,16,12
6940_43,43,43,joinedTableInfo.joinedTablePrimaryKey = foreignKeyTablePrimaryKey;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,2,2,0,2,0.59,17,13
6940_44,44,44,joinedTableInfo.startTableAlias = tableAlias;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,2,2,0,3,0.67,18,14
6940_45,45,45,joinedTableInfo.startTableJoinColumn = foreignKeyColumn;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,2,2,0,3,0.7,19,15
6940_46,46,46,joinedTableInfo.beforeLimitRequired = beforeLimitRequired;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,2,2,0,2,0.54,20,16
6940_47,47,47,"queryState.aliasToJoinedTableInfo.put(foreignKeyAlias, joinedTableInfo);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,2,2,0,2,0.54,21,17
6940_48,48,48,tableAlias = foreignKeyAlias;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,2,2,0,1,0.49,22,18
6940_49,49,49,tableName = foreignKeyTable;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,2,0,1,0.57,23,19
6940_51,51,51,"return new TableNameAndAlias(tableName, tableAlias);",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,7,2,2,0,1,0.49,25,21
1453_1,1,1,"  private void updateUserAccessTiers(DbUser dbUser, Agent agent) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,1,0,4,0.74,8,4
1453_2,2,2,final List<DbAccessTier> previousAccessTiers = accessTierService.getAccessTiersForUser(dbUser);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,10,8,1,0,4,0.7,7,3
1453_4,4,4,final List<DbAccessTier> newAccessTiers = getUserAccessTiersList(dbUser);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,10,8,1,0,4,0.7,5,2
1453_5,5,8,"if (!newAccessTiers.equals(previousAccessTiers)) {
userServiceAuditor.fireUpdateAccessTiersAction(
dbUser, previousAccessTiers, newAccessTiers, agent);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,10,8,1,0,4,0.67,1,0
1453_6,6,7,"userServiceAuditor.fireUpdateAccessTiersAction(
dbUser, previousAccessTiers, newAccessTiers, agent);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,8,1,0,4,0.68,2,0
1453_10,10,10,"newAccessTiers.forEach(tier -> accessTierService.addUserToTier(dbUser, tier));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,10,8,1,0,5,0.81,0,0
1453_12,12,13,"final List<DbAccessTier> tiersForRemoval =
Lists.difference(accessTierService.getAllTiers(), newAccessTiers);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,10,8,1,0,3,0.57,2,1
1453_14,14,14,"tiersForRemoval.forEach(tier -> accessTierService.removeUserFromTier(dbUser, tier));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,8,1,0,4,0.69,4,2
1454_1,1,1,"  private void updateUserAccessTiers(DbUser dbUser, Agent agent) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,0,0,4,0.74,10,5
1454_2,2,2,final List<DbAccessTier> previousAccessTiers = accessTierService.getAccessTiersForUser(dbUser);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,10,9,0,0,4,0.71,9,4
1454_4,4,4,final List<DbAccessTier> newAccessTiers = getUserAccessTiersList(dbUser);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,10,9,0,0,4,0.7,7,3
1454_5,5,8,"if (!newAccessTiers.equals(previousAccessTiers)) {
userServiceAuditor.fireUpdateAccessTiersAction(
dbUser, previousAccessTiers, newAccessTiers, agent);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,1,0,1,10,9,0,0,4,0.68,3,1
1454_6,6,7,"userServiceAuditor.fireUpdateAccessTiersAction(
dbUser, previousAccessTiers, newAccessTiers, agent);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,9,0,0,4,0.7,4,1
1454_10,10,10,"newAccessTiers.forEach(tier -> accessTierService.addUserToTier(dbUser, tier));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,10,9,0,0,4,0.72,1,0
1454_12,12,13,"final List<DbAccessTier> tiersForRemoval =
Lists.difference(accessTierService.getAllTiers(), newAccessTiers);",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,10,9,0,0,4,0.65,0,0
1454_14,14,14,"tiersForRemoval.forEach(tier -> accessTierService.removeUserFromTier(dbUser, tier));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,9,0,0,5,0.85,2,1
1455_1,1,1,  private List<DbAccessTier> getUserAccessTiersList(DbUser dbUser) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,3,0.8,0,0
1455_2,2,5,"if (!shouldGrantUserTierAccess(
dbUser, requiredModulesForRegisteredTier, REGISTERED_TIER_SHORT_NAME)) {
return Collections.emptyList();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,5,4,0,0,3,0.71,0,0
1455_3,3,3,"dbUser, requiredModulesForRegisteredTier, REGISTERED_TIER_SHORT_NAME)) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.49,1,0
1455_4,4,4,return Collections.emptyList();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,0,0,0,0.22,2,1
1455_7,7,8,"List<DbAccessTier> userAccessTiers =
com.google.common.collect.Lists.newArrayList(accessTierService.getRegisteredTierOrThrow());",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,5,4,0,0,3,0.72,5,3
1455_10,10,11,"accessTierService
.getAccessTierByName(CONTROLLED_TIER_SHORT_NAME)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,4,0,0,2,0.66,8,4
1455_12,12,13,".ifPresent(
tier -> {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,4,0,0,1,0.22,10,5
1455_14,14,17,"if (shouldGrantUserTierAccess(
dbUser, requiredModulesForControlledTier, CONTROLLED_TIER_SHORT_NAME)) {
userAccessTiers.add(tier);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,5,4,0,0,3,0.78,12,6
1455_15,15,15,"dbUser, requiredModulesForControlledTier, CONTROLLED_TIER_SHORT_NAME)) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,2,0.51,13,6
1455_16,16,16,userAccessTiers.add(tier);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,3,0.86,14,7
1455_20,20,20,return userAccessTiers;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,4,0,0,3,0.87,18,9
1456_1,1,1,  private List<DbAccessTier> getUserAccessTiersList(DbUser dbUser) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.5,5,3
1456_2,2,5,"if (!shouldGrantUserTierAccess(
dbUser, requiredModulesForRegisteredTier, REGISTERED_TIER_SHORT_NAME)) {
return Collections.emptyList();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,4,4,0,0,1,0.49,1,0
1456_3,3,3,"dbUser, requiredModulesForRegisteredTier, REGISTERED_TIER_SHORT_NAME)) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.45,3,1
1456_4,4,4,return Collections.emptyList();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.3,2,0
1456_7,7,8,"List<DbAccessTier> userAccessTiers =
com.google.common.collect.Lists.newArrayList(accessTierService.getRegisteredTierOrThrow());",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,4,4,0,0,1,0.49,0,0
1456_10,10,11,"accessTierService
.getAccessTierByName(CONTROLLED_TIER_SHORT_NAME)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,4,0,0,0,0.31,3,1
1456_12,12,13,".ifPresent(
tier -> {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.41,5,2
1456_14,14,17,"if (shouldGrantUserTierAccess(
dbUser, requiredModulesForControlledTier, CONTROLLED_TIER_SHORT_NAME)) {
userAccessTiers.add(tier);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,4,4,0,0,1,0.51,7,3
1456_15,15,15,"dbUser, requiredModulesForControlledTier, CONTROLLED_TIER_SHORT_NAME)) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.42,8,3
1456_16,16,16,userAccessTiers.add(tier);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.56,9,4
1456_20,20,20,return userAccessTiers;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,4,0,0,1,0.54,13,6
1457_1,1,1,  private List<DbAccessTier> getUserAccessTiersList(DbUser dbUser) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,4,0.65,8,4
1457_2,2,5,"if (!shouldGrantUserTierAccess(
dbUser, requiredModulesForRegisteredTier, REGISTERED_TIER_SHORT_NAME)) {
return Collections.emptyList();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,1,10,6,1,0,4,0.56,4,1
1457_3,3,3,"dbUser, requiredModulesForRegisteredTier, REGISTERED_TIER_SHORT_NAME)) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,2,0.43,6,2
1457_4,4,4,return Collections.emptyList();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,6,1,0,1,0.4,5,1
1457_7,7,8,"List<DbAccessTier> userAccessTiers =
com.google.common.collect.Lists.newArrayList(accessTierService.getRegisteredTierOrThrow());",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,10,6,1,0,4,0.62,1,0
1457_10,10,11,"accessTierService
.getAccessTierByName(CONTROLLED_TIER_SHORT_NAME)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,10,6,1,0,3,0.54,0,0
1457_12,12,13,".ifPresent(
tier -> {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,6,1,0,1,0.3,2,1
1457_14,14,17,"if (shouldGrantUserTierAccess(
dbUser, requiredModulesForControlledTier, CONTROLLED_TIER_SHORT_NAME)) {
userAccessTiers.add(tier);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,10,6,1,0,5,0.7,4,2
1457_15,15,15,"dbUser, requiredModulesForControlledTier, CONTROLLED_TIER_SHORT_NAME)) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,3,0.55,5,2
1457_16,16,16,userAccessTiers.add(tier);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,6,1,0,4,0.77,6,3
1457_20,20,20,return userAccessTiers;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,10,6,1,0,3,0.59,10,5
1458_1,1,2,"  private boolean shouldGrantUserTierAccess(
DbUser user, List<AccessModuleName> requiredModules, String tierShortName) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,12,9,1,0,3,0.66,10,6
1458_3,3,5,"boolean allStandardRequiredModulesCompliant =
requiredModules.stream()
.allMatch(moduleName -> accessModuleService.isModuleCompliant(user, moduleName));",0,0,0,0,0,1,0,0,0,0,0,3,1,0,0,0,12,9,1,0,2,0.64,7,5
1458_6,6,7,"boolean eraCompliant =
accessModuleService.isModuleCompliant(user, AccessModuleName.ERA_COMMONS);",0,0,0,0,0,1,0,0,0,0,0,2,1,0,0,1,12,9,1,0,1,0.49,5,4
1458_9,9,9,boolean eRARequiredForTier = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,12,9,1,0,4,0.65,3,3
1458_10,10,10,boolean institutionalEmailValidForTier = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,12,9,1,0,2,0.34,2,2
1458_11,11,11,Optional<Institution> institution = institutionService.getByUser(user);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,9,1,0,2,0.47,1,1
1458_12,12,21,"if (institution.isPresent()) {
eRARequiredForTier =
!configProvider.get().access.enableRasLoginGovLinking
|| institutionService.eRaRequiredForTier(institution.get(), tierShortName);
institutionalEmailValidForTier =
institutionService.validateInstitutionalEmail(
institution.get(), user.getContactEmail(), tierShortName);
} else {
log.warning(String.format(""Institution not found for user %s"", user.getUsername()));
}",1,0,0,0,0,0,0,0,0,4,1,10,0,1,0,0,12,9,1,0,10,0.76,0,0
1458_13,13,15,"eRARequiredForTier =
!configProvider.get().access.enableRasLoginGovLinking
|| institutionService.eRaRequiredForTier(institution.get(), tierShortName);",0,0,0,0,0,0,0,0,0,0,0,3,1,1,0,0,12,9,1,0,9,0.8,0,0
1458_16,16,18,"institutionalEmailValidForTier =
institutionService.validateInstitutionalEmail(
institution.get(), user.getContactEmail(), tierShortName);",0,0,0,0,0,0,0,0,0,0,0,3,1,1,0,0,12,9,1,0,3,0.42,3,1
1458_19,19,19,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,0,0.19,6,2
1458_20,20,20,"log.warning(String.format(""Institution not found for user %s"", user.getUsername()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,1,0,2,0.51,7,2
1458_22,22,25,"return !user.getDisabled()
&& (!eRARequiredForTier || eraCompliant)
&& institutionalEmailValidForTier
&& allStandardRequiredModulesCompliant;",0,0,0,0,0,0,1,0,0,0,0,4,0,1,0,0,12,9,1,0,6,0.71,9,4
1459_1,1,12,"  @Override
public DbUser createUser(
String givenName,
String familyName,
String username,
String contactEmail,
String areaOfResearch,
String professionalUrl,
List<Degree> degrees,
DbAddress dbAddress,
DbDemographicSurvey dbDemographicSurvey,
DbVerifiedInstitutionalAffiliation dbVerifiedAffiliation) {",0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,3,2,1,0,2,0.67,16,14
1459_13,13,13,DbUser dbUser = new DbUser();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.61,15,13
1459_14,14,14,Timestamp now = new Timestamp(clock.instant().toEpochMilli());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.21,14,12
1459_15,15,15,dbUser.setCreationNonce(Math.abs(random.nextLong()));,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.45,13,11
1459_16,16,16,dbUser.setUsername(username);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.57,12,10
1459_17,17,17,dbUser.setContactEmail(contactEmail);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.5,11,9
1459_18,18,18,dbUser.setAreaOfResearch(areaOfResearch);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.53,10,8
1459_19,19,19,dbUser.setFamilyName(familyName);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.5,9,7
1459_20,20,20,dbUser.setGivenName(givenName);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.54,8,6
1459_21,21,21,dbUser.setProfessionalUrl(professionalUrl);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.55,7,5
1459_22,22,22,dbUser.setDisabled(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.53,6,4
1459_23,23,23,dbUser.setAddress(dbAddress);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,2,0.73,5,3
1459_24,24,26,"if (degrees != null) {
dbUser.setDegreesEnum(degrees);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,2,1,0,1,0.49,2,1
1459_25,25,25,dbUser.setDegreesEnum(degrees);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.49,3,1
1459_27,27,27,dbUser.setDemographicSurvey(dbDemographicSurvey);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,2,1,0,1,0.57,1,0
1459_29,29,31,"if (dbAddress != null) {
dbAddress.setUser(dbUser);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,1,0,3,2,1,0,2,0.73,0,0
1459_30,30,30,dbAddress.setUser(dbUser);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,2,0.73,1,0
1459_32,32,34,"if (dbDemographicSurvey != null) {
dbDemographicSurvey.setUser(dbUser);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,1,3,2,1,0,1,0.59,3,2
1459_33,33,33,dbDemographicSurvey.setUser(dbUser);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.62,4,2
1459_36,36,48,"try {
dbUser = userDao.save(dbUser);
dbVerifiedAffiliation.setUser(dbUser);
verifiedInstitutionalAffiliationDao.save(dbVerifiedAffiliation);
accessModuleService.updateCompletionTime(
dbUser, AccessModuleName.PUBLICATION_CONFIRMATION, now);
accessModuleService.updateCompletionTime(dbUser, AccessModuleName.PROFILE_CONFIRMATION, now);
} catch (DataIntegrityViolationException e) {
dbUser = userDao.findUserByUsername(username);
if (dbUser == null) {
throw e;
}
}",0,0,0,0,1,0,0,0,0,9,2,13,0,1,1,0,3,2,1,0,1,0.59,7,4
1459_37,37,37,dbUser = userDao.save(dbUser);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.61,8,4
1459_38,38,38,dbVerifiedAffiliation.setUser(dbUser);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.68,9,5
1459_39,39,39,verifiedInstitutionalAffiliationDao.save(dbVerifiedAffiliation);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.47,10,6
1459_40,40,41,"accessModuleService.updateCompletionTime(
dbUser, AccessModuleName.PUBLICATION_CONFIRMATION, now);",0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,3,2,1,0,1,0.47,11,7
1459_42,42,42,"accessModuleService.updateCompletionTime(dbUser, AccessModuleName.PROFILE_CONFIRMATION, now);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,1,0,1,0.48,13,9
1459_43,43,43,} catch (DataIntegrityViolationException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.32,14,9
1459_44,44,44,dbUser = userDao.findUserByUsername(username);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.62,15,10
1459_45,45,47,"if (dbUser == null) {
throw e;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,2,1,0,1,0.55,16,11
1459_46,46,46,throw e;,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,1,0,0,0.32,17,12
1459_49,49,49,return dbUser;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,3,2,1,0,1,0.57,20,14
1460_1,1,3,"  @Override
@Transactional
public void submitTermsOfService(DbUser dbUser, @Nonnull Integer tosVersion) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,7,2,2,0,2,0.6,1,0
1460_5,5,7,"if (tosVersion == null) {
throw new BadRequestException(""Terms of Service version is NULL"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,0,7,2,2,0,2,0.59,0,0
1460_6,6,6,"throw new BadRequestException(""Terms of Service version is NULL"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,2,2,0,1,0.51,1,0
1460_8,8,10,"if (tosVersion != CURRENT_TERMS_OF_SERVICE_VERSION) {
throw new BadRequestException(""Terms of Service version is not up to date"");
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,7,2,2,0,2,0.59,3,2
1460_9,9,9,"throw new BadRequestException(""Terms of Service version is not up to date"");",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,2,2,0,1,0.51,4,2
1460_12,12,12,DbUserTermsOfService userTermsOfService = new DbUserTermsOfService();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,2,2,0,0,0.37,7,4
1460_13,13,13,userTermsOfService.setTosVersion(tosVersion);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,2,2,0,2,0.62,8,4
1460_14,14,14,userTermsOfService.setUserId(dbUser.getUserId());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,2,2,0,0,0.36,9,5
1460_15,15,15,userTermsOfServiceDao.save(userTermsOfService);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,2,2,0,0,0.41,10,6
1460_16,16,16,"userServiceAuditor.fireAcknowledgeTermsOfService(dbUser, tosVersion);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,2,0,2,0.53,11,7
1461_1,1,2,"@Override
public DbUser syncComplianceTrainingStatusV2(DbUser dbUser, Agent agent)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,0,0,2,0.64,1,1
1461_3,3,3,"throws org.pmiops.workbench.moodle.ApiException, NotFoundException ",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,5,0,0,0,0.3,0,0
1461_4,4,6,"if (isServiceAccount(dbUser)) {
return dbUser;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,5,0,0,3,0.75,0,0
1461_5,5,5,return dbUser;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.54,1,0
1461_8,8,75,"try {
Timestamp now = new Timestamp(clock.instant().toEpochMilli());
Map<BadgeName, BadgeDetailsV2> userBadgesByName =
complianceService.getUserBadgesByBadgeName(dbUser.getUsername());

Function<AccessModuleName, Optional<Timestamp>> determineCompletionTime =
(moduleName) -> {
BadgeName badgeName = BADGE_BY_COMPLIANCE_MODULE.get(moduleName);
Optional<BadgeDetailsV2> badge =
Optional.ofNullable(userBadgesByName.get(badgeName))
.filter(BadgeDetailsV2::getValid);

if (!badge.isPresent()) {
return Optional.empty();
}

if (badge.get().getLastissued() == null) {
log.warning(
String.format(
""badge %s is indicated as valid by Moodle, but is missing the lastissued ""
+ ""time, this is unexpected - treating this as an incomplete training"",
badgeName));
return Optional.empty();
}
Instant badgeTime = Instant.ofEpochSecond(badge.get().getLastissued());
Instant dbCompletionTime =
accessModuleService
.getAccessModuleStatus(dbUser, moduleName)
.map(AccessModuleStatus::getCompletionEpochMillis)
.map(Instant::ofEpochMilli)
.orElse(Instant.EPOCH);

if (badgeTime.isAfter(dbCompletionTime)) {
return Optional.of(now);
}

return Optional.of(Timestamp.from(dbCompletionTime));
};

Map<AccessModuleName, Optional<Timestamp>> completionTimes =
BADGE_BY_COMPLIANCE_MODULE.keySet().stream()
.collect(Collectors.toMap(Function.identity(), determineCompletionTime));

return updateUserWithRetries(
u -> {
completionTimes.forEach(
(accessModuleName, timestamp) ->
accessModuleService.updateCompletionTime(
u, accessModuleName, timestamp.orElse(null)));
return u;
},
dbUser,
agent);
} catch (NumberFormatException e) {
log.severe(""Incorrect date expire format from Moodle"");
throw e;
} catch (org.pmiops.workbench.moodle.ApiException ex) {
if (ex.getCode() == HttpStatus.NOT_FOUND.value()) {
log.severe(
String.format(
""Error while querying Moodle for badges for %s: %s "",
dbUser.getUsername(), ex.getMessage()));
throw new NotFoundException(ex.getMessage());
} else {
log.severe(String.format(""Error while syncing compliance training: %s"", ex.getMessage()));
}
throw ex;
}",0,0,0,0,1,0,0,0,0,27,3,68,0,0,1,0,6,5,0,0,3,0.55,4,2
1461_9,9,9,Timestamp now = new Timestamp(clock.instant().toEpochMilli());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.27,5,2
1461_10,10,11,"Map<BadgeName, BadgeDetailsV2> userBadgesByName =
complianceService.getUserBadgesByBadgeName(dbUser.getUsername());",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,6,5,0,0,2,0.55,6,3
1461_13,13,45,"Function<AccessModuleName, Optional<Timestamp>> determineCompletionTime =
(moduleName) -> {
BadgeName badgeName = BADGE_BY_COMPLIANCE_MODULE.get(moduleName);
Optional<BadgeDetailsV2> badge =
Optional.ofNullable(userBadgesByName.get(badgeName))
.filter(BadgeDetailsV2::getValid);

if (!badge.isPresent()) {
return Optional.empty();
}

if (badge.get().getLastissued() == null) {
log.warning(
String.format(
""badge %s is indicated as valid by Moodle, but is missing the lastissued ""
+ ""time, this is unexpected - treating this as an incomplete training"",
badgeName));
return Optional.empty();
}
Instant badgeTime = Instant.ofEpochSecond(badge.get().getLastissued());
Instant dbCompletionTime =
accessModuleService
.getAccessModuleStatus(dbUser, moduleName)
.map(AccessModuleStatus::getCompletionEpochMillis)
.map(Instant::ofEpochMilli)
.orElse(Instant.EPOCH);

if (badgeTime.isAfter(dbCompletionTime)) {
return Optional.of(now);
}

return Optional.of(Timestamp.from(dbCompletionTime));
};",0,0,0,0,0,1,0,0,0,11,2,33,0,0,1,1,6,5,0,0,2,0.48,9,5
1461_15,15,15,BadgeName badgeName = BADGE_BY_COMPLIANCE_MODULE.get(moduleName);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,5,0,0,0,0.32,11,6
1461_16,16,18,"Optional<BadgeDetailsV2> badge =
Optional.ofNullable(userBadgesByName.get(badgeName))
.filter(BadgeDetailsV2::getValid);",0,0,0,0,0,1,0,0,0,0,0,3,1,1,0,1,6,5,0,0,1,0.42,12,6
1461_20,20,22,"if (!badge.isPresent()) {
return Optional.empty();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,5,0,0,0,0.29,16,8
1461_21,21,21,return Optional.empty();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.22,17,8
1461_24,24,31,"if (badge.get().getLastissued() == null) {
log.warning(
String.format(
""badge %s is indicated as valid by Moodle, but is missing the lastissued ""
+ ""time, this is unexpected - treating this as an incomplete training"",
badgeName));
return Optional.empty();
}",1,0,0,0,0,0,0,0,0,1,1,8,1,1,1,0,6,5,0,0,0,0.34,20,10
1461_30,30,30,return Optional.empty();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.22,26,11
1461_32,32,32,Instant badgeTime = Instant.ofEpochSecond(badge.get().getLastissued());,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,5,0,0,0,0.29,28,12
1461_33,33,38,"Instant dbCompletionTime =
accessModuleService
.getAccessModuleStatus(dbUser, moduleName)
.map(AccessModuleStatus::getCompletionEpochMillis)
.map(Instant::ofEpochMilli)
.orElse(Instant.EPOCH);",0,0,0,0,0,1,0,0,0,0,0,6,0,0,0,1,6,5,0,0,2,0.52,29,12
1461_40,40,42,"if (badgeTime.isAfter(dbCompletionTime)) {
return Optional.of(now);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,5,0,0,0,0.31,36,14
1461_41,41,41,return Optional.of(now);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.22,37,14
1461_44,44,44,return Optional.of(Timestamp.from(dbCompletionTime));,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,5,0,0,0,0.29,40,16
1461_47,47,49,"Map<AccessModuleName, Optional<Timestamp>> completionTimes =
BADGE_BY_COMPLIANCE_MODULE.keySet().stream()
.collect(Collectors.toMap(Function.identity(), determineCompletionTime));",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,6,5,0,0,0,0.36,43,17
1461_51,51,60,"return updateUserWithRetries(
u -> {
completionTimes.forEach(
(accessModuleName, timestamp) ->
accessModuleService.updateCompletionTime(
u, accessModuleName, timestamp.orElse(null)));
return u;
},
dbUser,
agent);",0,0,0,0,0,0,1,0,0,1,1,10,0,0,1,0,6,5,0,0,2,0.52,47,18
1461_57,57,57,return u;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.28,53,19
1461_61,61,61,} catch (NumberFormatException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.3,57,20
1461_62,62,62,"log.severe(""Incorrect date expire format from Moodle"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.29,58,20
1461_63,63,63,throw e;,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,5,0,0,0,0.26,59,21
1461_64,64,64,} catch (org.pmiops.workbench.moodle.ApiException ex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.32,60,22
1461_65,65,73,"if (ex.getCode() == HttpStatus.NOT_FOUND.value()) {
log.severe(
String.format(
""Error while querying Moodle for badges for %s: %s "",
dbUser.getUsername(), ex.getMessage()));
throw new NotFoundException(ex.getMessage());
} else {
log.severe(String.format(""Error while syncing compliance training: %s"", ex.getMessage()));
}",1,0,0,0,0,0,0,0,0,4,1,9,0,0,0,0,6,5,0,0,2,0.49,61,23
1461_66,66,69,"log.severe(
String.format(
""Error while querying Moodle for badges for %s: %s "",
dbUser.getUsername(), ex.getMessage()));",0,0,0,0,0,0,0,0,0,0,0,4,1,0,0,0,6,5,0,0,1,0.44,62,24
1461_70,70,70,throw new NotFoundException(ex.getMessage());,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,6,5,0,0,0,0.32,66,26
1461_71,71,71,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.2,67,26
1461_72,72,72,"log.severe(String.format(""Error while syncing compliance training: %s"", ex.getMessage()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.42,68,27
1461_74,74,74,throw ex;,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,5,0,0,0,0.33,70,29
2046_1,1,1,  public void remediateEgressEvent(long egressEventId) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.38,20,7
2046_2,2,8,"DbEgressEvent event =
egressEventDao
.findById(egressEventId)
.orElseThrow(
() ->
new NotFoundException(
String.format(""egress event %d does not exist"", egressEventId)));",0,0,0,0,0,1,0,0,0,0,0,7,1,1,0,0,6,4,0,0,0,0.41,13,6
2046_9,9,13,"if (!DbEgressEventStatus.PENDING.equals(event.getStatus())) {
log.warning(
String.format(""ignoring non-PENDING egress event %d, nothing to do"", egressEventId));
return;
}",1,0,0,0,0,0,0,0,0,2,1,5,1,1,0,1,6,4,0,0,0,0.39,8,3
2046_10,10,11,"log.warning(
String.format(""ignoring non-PENDING egress event %d, nothing to do"", egressEventId));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,0,0,0,0.38,10,4
2046_12,12,12,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.23,9,3
2046_15,15,15,DbUser user = event.getUser();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,0,0,0,0.35,6,2
2046_16,16,20,"if (user == null) {
throw new FailedPreconditionException(
String.format(
""egress event %d has no associated user, please investigate"", egressEventId));
}",1,0,0,0,0,0,0,0,0,1,1,5,0,1,0,1,6,4,0,0,0,0.5,1,0
2046_17,17,19,"throw new FailedPreconditionException(
String.format(
""egress event %d has no associated user, please investigate"", egressEventId));",0,0,0,0,0,0,0,0,1,0,0,3,0,0,0,0,6,4,0,0,0,0.51,2,0
2046_22,22,22,int egressIncidentCount = getEgressIncidentCountForUser(user);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,0,0,1,0.59,0,0
2046_24,24,25,"EgressAlertRemediationPolicy egressPolicy =
workbenchConfigProvider.get().egressAlertRemediationPolicy;",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,6,4,0,0,1,0.53,2,1
2046_26,26,26,"Optional<Escalation> escalation = matchEscalation(egressPolicy, egressIncidentCount);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,6,4,0,0,1,0.6,4,2
2046_28,28,29,"escalation.ifPresent(
e -> {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,6,4,0,0,0,0.34,6,3
2046_30,30,30,EgressRemediationAction action;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.28,8,4
2046_31,31,39,"if (e.disableUser != null) {
disableUser(user);
action = EgressRemediationAction.DISABLE_USER;
} else if (e.suspendCompute != null) {
suspendUserCompute(user, Duration.ofMinutes(e.suspendCompute.durationMinutes));
action = EgressRemediationAction.SUSPEND_COMPUTE;
} else {
throw new ServerErrorException(""egress alert policy is invalid: "" + e);
}",1,0,0,0,0,0,0,0,0,7,1,9,0,1,0,1,6,4,0,0,1,0.5,9,4
2046_32,32,32,disableUser(user);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.31,10,5
2046_33,33,33,action = EgressRemediationAction.DISABLE_USER;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.32,11,6
2046_34,34,34,} else if (e.suspendCompute != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.4,12,7
2046_35,35,35,"suspendUserCompute(user, Duration.ofMinutes(e.suspendCompute.durationMinutes));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.47,13,8
2046_36,36,36,action = EgressRemediationAction.SUSPEND_COMPUTE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.41,14,9
2046_37,37,37,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.3,15,10
2046_38,38,38,"throw new ServerErrorException(""egress alert policy is invalid: "" + e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,4,0,0,1,0.47,16,11
2046_41,41,47,"if (egressPolicy != null && egressPolicy.enableJiraTicketing) {
try {
logEventToJira(event, action);
} catch (ApiException ex) {
throw new ServerErrorException(""failed to log event to Jira"", ex);
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,1,6,4,0,0,0,0.45,19,13
2046_42,42,46,"try {
logEventToJira(event, action);
} catch (ApiException ex) {
throw new ServerErrorException(""failed to log event to Jira"", ex);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,6,4,0,0,0,0.44,20,13
2046_43,43,43,"logEventToJira(event, action);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.3,21,14
2046_44,44,44,} catch (ApiException ex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.5,22,15
2046_45,45,45,"throw new ServerErrorException(""failed to log event to Jira"", ex);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,4,0,0,0,0.43,23,16
2046_49,49,55,"if (shouldNotifyForEvent(event)) {
try {
mailService.sendEgressRemediationEmail(user, action);
} catch (MessagingException ex) {
throw new ServerErrorException(""failed to send egress remediation email"", ex);
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,6,4,0,0,0,0.43,27,18
2046_50,50,54,"try {
mailService.sendEgressRemediationEmail(user, action);
} catch (MessagingException ex) {
throw new ServerErrorException(""failed to send egress remediation email"", ex);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,6,4,0,0,0,0.43,28,18
2046_51,51,51,"mailService.sendEgressRemediationEmail(user, action);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.36,29,19
2046_52,52,52,} catch (MessagingException ex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.46,30,20
2046_53,53,53,"throw new ServerErrorException(""failed to send egress remediation email"", ex);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,4,0,0,0,0.44,31,21
2046_58,58,58,egressEventDao.save(event.setStatus(DbEgressEventStatus.REMEDIATED));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,0,0,0,0.4,36,23
2046_60,60,60,"egressEventAuditor.fireRemediateEgressEvent(event, escalation.orElse(null));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,0,0,0,0.37,38,24
2047_1,1,1,  public void remediateEgressEvent(long egressEventId) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.29,22,8
2047_2,2,8,"DbEgressEvent event =
egressEventDao
.findById(egressEventId)
.orElseThrow(
() ->
new NotFoundException(
String.format(""egress event %d does not exist"", egressEventId)));",0,0,0,0,0,1,0,0,0,0,0,7,1,1,0,0,4,2,0,0,0,0.26,15,7
2047_9,9,13,"if (!DbEgressEventStatus.PENDING.equals(event.getStatus())) {
log.warning(
String.format(""ignoring non-PENDING egress event %d, nothing to do"", egressEventId));
return;
}",1,0,0,0,0,0,0,0,0,2,1,5,1,1,0,1,4,2,0,0,0,0.33,10,4
2047_10,10,11,"log.warning(
String.format(""ignoring non-PENDING egress event %d, nothing to do"", egressEventId));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,0,0,0,0.31,12,5
2047_12,12,12,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.14,11,4
2047_15,15,15,DbUser user = event.getUser();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,0,0,0,0.29,8,3
2047_16,16,20,"if (user == null) {
throw new FailedPreconditionException(
String.format(
""egress event %d has no associated user, please investigate"", egressEventId));
}",1,0,0,0,0,0,0,0,0,1,1,5,0,1,0,1,4,2,0,0,0,0.3,3,1
2047_17,17,19,"throw new FailedPreconditionException(
String.format(
""egress event %d has no associated user, please investigate"", egressEventId));",0,0,0,0,0,0,0,0,1,0,0,3,0,0,0,0,4,2,0,0,0,0.3,4,1
2047_22,22,22,int egressIncidentCount = getEgressIncidentCountForUser(user);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.36,1,0
2047_24,24,25,"EgressAlertRemediationPolicy egressPolicy =
workbenchConfigProvider.get().egressAlertRemediationPolicy;",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,4,2,0,0,1,0.26,0,0
2047_26,26,26,"Optional<Escalation> escalation = matchEscalation(egressPolicy, egressIncidentCount);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,4,2,0,0,1,0.35,2,1
2047_28,28,29,"escalation.ifPresent(
e -> {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,2,0,0,1,0.19,4,2
2047_30,30,30,EgressRemediationAction action;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,2,0.82,6,3
2047_31,31,39,"if (e.disableUser != null) {
disableUser(user);
action = EgressRemediationAction.DISABLE_USER;
} else if (e.suspendCompute != null) {
suspendUserCompute(user, Duration.ofMinutes(e.suspendCompute.durationMinutes));
action = EgressRemediationAction.SUSPEND_COMPUTE;
} else {
throw new ServerErrorException(""egress alert policy is invalid: "" + e);
}",1,0,0,0,0,0,0,0,0,7,1,9,0,1,0,1,4,2,0,0,2,0.52,7,3
2047_32,32,32,disableUser(user);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.21,8,4
2047_33,33,33,action = EgressRemediationAction.DISABLE_USER;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.63,9,5
2047_34,34,34,} else if (e.suspendCompute != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.29,10,6
2047_35,35,35,"suspendUserCompute(user, Duration.ofMinutes(e.suspendCompute.durationMinutes));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.32,11,7
2047_36,36,36,action = EgressRemediationAction.SUSPEND_COMPUTE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.69,12,8
2047_37,37,37,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.2,13,9
2047_38,38,38,"throw new ServerErrorException(""egress alert policy is invalid: "" + e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,0,0,0,0.24,14,10
2047_41,41,47,"if (egressPolicy != null && egressPolicy.enableJiraTicketing) {
try {
logEventToJira(event, action);
} catch (ApiException ex) {
throw new ServerErrorException(""failed to log event to Jira"", ex);
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,1,4,2,0,0,1,0.47,17,12
2047_42,42,46,"try {
logEventToJira(event, action);
} catch (ApiException ex) {
throw new ServerErrorException(""failed to log event to Jira"", ex);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,4,2,0,0,1,0.47,18,12
2047_43,43,43,"logEventToJira(event, action);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.56,19,13
2047_44,44,44,} catch (ApiException ex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.27,20,14
2047_45,45,45,"throw new ServerErrorException(""failed to log event to Jira"", ex);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,0,0,0,0.28,21,15
2047_49,49,55,"if (shouldNotifyForEvent(event)) {
try {
mailService.sendEgressRemediationEmail(user, action);
} catch (MessagingException ex) {
throw new ServerErrorException(""failed to send egress remediation email"", ex);
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,4,2,0,0,2,0.49,25,17
2047_50,50,54,"try {
mailService.sendEgressRemediationEmail(user, action);
} catch (MessagingException ex) {
throw new ServerErrorException(""failed to send egress remediation email"", ex);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,4,2,0,0,2,0.49,26,17
2047_51,51,51,"mailService.sendEgressRemediationEmail(user, action);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.54,27,18
2047_52,52,52,} catch (MessagingException ex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.31,28,19
2047_53,53,53,"throw new ServerErrorException(""failed to send egress remediation email"", ex);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,0,0,1,0.31,29,20
2047_58,58,58,egressEventDao.save(event.setStatus(DbEgressEventStatus.REMEDIATED));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,1,0.29,34,22
2047_60,60,60,"egressEventAuditor.fireRemediateEgressEvent(event, escalation.orElse(null));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,0,0,2,0.33,36,23
2048_1,1,1,  public void remediateEgressEvent(long egressEventId) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.34,26,10
2048_2,2,8,"DbEgressEvent event =
egressEventDao
.findById(egressEventId)
.orElseThrow(
() ->
new NotFoundException(
String.format(""egress event %d does not exist"", egressEventId)));",0,0,0,0,0,1,0,0,0,0,0,7,1,1,0,0,2,1,0,0,0,0.3,19,9
2048_9,9,13,"if (!DbEgressEventStatus.PENDING.equals(event.getStatus())) {
log.warning(
String.format(""ignoring non-PENDING egress event %d, nothing to do"", egressEventId));
return;
}",1,0,0,0,0,0,0,0,0,2,1,5,1,1,0,1,2,1,0,0,0,0.32,14,6
2048_10,10,11,"log.warning(
String.format(""ignoring non-PENDING egress event %d, nothing to do"", egressEventId));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,0,0.3,16,7
2048_12,12,12,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.11,15,6
2048_15,15,15,DbUser user = event.getUser();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,1,0,0,0,0.29,12,5
2048_16,16,20,"if (user == null) {
throw new FailedPreconditionException(
String.format(
""egress event %d has no associated user, please investigate"", egressEventId));
}",1,0,0,0,0,0,0,0,0,1,1,5,0,1,0,1,2,1,0,0,0,0.33,7,3
2048_17,17,19,"throw new FailedPreconditionException(
String.format(
""egress event %d has no associated user, please investigate"", egressEventId));",0,0,0,0,0,0,0,0,1,0,0,3,0,0,0,0,2,1,0,0,0,0.34,8,3
2048_22,22,22,int egressIncidentCount = getEgressIncidentCountForUser(user);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,1,0,0,0,0.3,5,2
2048_24,24,25,"EgressAlertRemediationPolicy egressPolicy =
workbenchConfigProvider.get().egressAlertRemediationPolicy;",0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,2,1,0,0,0,0.31,2,1
2048_26,26,26,"Optional<Escalation> escalation = matchEscalation(egressPolicy, egressIncidentCount);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,2,1,0,0,0,0.31,1,0
2048_28,28,29,"escalation.ifPresent(
e -> {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,2,1,0,0,0,0.1,0,0
2048_30,30,30,EgressRemediationAction action;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,1,0.83,2,1
2048_31,31,39,"if (e.disableUser != null) {
disableUser(user);
action = EgressRemediationAction.DISABLE_USER;
} else if (e.suspendCompute != null) {
suspendUserCompute(user, Duration.ofMinutes(e.suspendCompute.durationMinutes));
action = EgressRemediationAction.SUSPEND_COMPUTE;
} else {
throw new ServerErrorException(""egress alert policy is invalid: "" + e);
}",1,0,0,0,0,0,0,0,0,7,1,9,0,1,0,1,2,1,0,0,1,0.52,3,1
2048_32,32,32,disableUser(user);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.21,4,2
2048_33,33,33,action = EgressRemediationAction.DISABLE_USER;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.63,5,3
2048_34,34,34,} else if (e.suspendCompute != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.27,6,4
2048_35,35,35,"suspendUserCompute(user, Duration.ofMinutes(e.suspendCompute.durationMinutes));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.3,7,5
2048_36,36,36,action = EgressRemediationAction.SUSPEND_COMPUTE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.68,8,6
2048_37,37,37,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.2,9,7
2048_38,38,38,"throw new ServerErrorException(""egress alert policy is invalid: "" + e);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,1,0,0,0,0.31,10,8
2048_41,41,47,"if (egressPolicy != null && egressPolicy.enableJiraTicketing) {
try {
logEventToJira(event, action);
} catch (ApiException ex) {
throw new ServerErrorException(""failed to log event to Jira"", ex);
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,1,2,1,0,0,1,0.51,13,10
2048_42,42,46,"try {
logEventToJira(event, action);
} catch (ApiException ex) {
throw new ServerErrorException(""failed to log event to Jira"", ex);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,2,1,0,0,1,0.52,14,10
2048_43,43,43,"logEventToJira(event, action);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.57,15,11
2048_44,44,44,} catch (ApiException ex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.34,16,12
2048_45,45,45,"throw new ServerErrorException(""failed to log event to Jira"", ex);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,1,0,0,0,0.32,17,13
2048_49,49,55,"if (shouldNotifyForEvent(event)) {
try {
mailService.sendEgressRemediationEmail(user, action);
} catch (MessagingException ex) {
throw new ServerErrorException(""failed to send egress remediation email"", ex);
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,2,1,0,0,1,0.51,21,15
2048_50,50,54,"try {
mailService.sendEgressRemediationEmail(user, action);
} catch (MessagingException ex) {
throw new ServerErrorException(""failed to send egress remediation email"", ex);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,2,1,0,0,1,0.51,22,15
2048_51,51,51,"mailService.sendEgressRemediationEmail(user, action);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,1,0.54,23,16
2048_52,52,52,} catch (MessagingException ex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.33,24,17
2048_53,53,53,"throw new ServerErrorException(""failed to send egress remediation email"", ex);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,2,1,0,0,0,0.35,25,18
2048_58,58,58,egressEventDao.save(event.setStatus(DbEgressEventStatus.REMEDIATED));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,1,0,0,0,0.31,30,20
2048_60,60,60,"egressEventAuditor.fireRemediateEgressEvent(event, escalation.orElse(null));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,1,0,0,0,0.34,32,21
2049_1,1,1,private int getEgressIncidentCountForUser(DbUser user) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,2,0.51,3,1
2049_2,2,3,"List<DbEgressEvent> events =
egressEventDao.findAllByUserAndStatusNot(user, DbEgressEventStatus.VERIFIED_FALSE_POSITIVE);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,9,6,1,0,1,0.45,1,0
2049_5,5,5,int incidentCount = (int) events.stream().filter(e -> e.getWorkspace() == null).count();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,9,6,1,0,2,0.58,0,0
2049_7,7,11,"Collection<List<DbEgressEvent>> eventsByWorkspace =
events.stream()
.filter(e -> e.getWorkspace() != null)
.collect(Collectors.groupingBy(e -> e.getWorkspace().getWorkspaceId()))
.values();",0,0,0,0,0,1,0,0,0,0,0,5,0,0,1,1,9,6,1,0,2,0.58,2,1
2049_13,13,29,"for (List<DbEgressEvent> partition : eventsByWorkspace) {
List<Instant> sortedEventCreationTimes =
partition.stream()
.map(e -> e.getCreationTime().toInstant())
.sorted()
.collect(Collectors.toList());

Instant lastGroupStart = sortedEventCreationTimes.get(0);
incidentCount++;

for (Instant eventCreationTime : sortedEventCreationTimes) {
if (eventCreationTime.isAfter(lastGroupStart.plus(EGRESS_INCIDENT_MERGE_WINDOW))) {
incidentCount++;
lastGroupStart = eventCreationTime;
}
}
}",0,0,0,1,0,0,0,0,0,7,3,17,0,0,1,1,9,6,1,0,3,0.57,8,2
2049_14,14,18,"List<Instant> sortedEventCreationTimes =
partition.stream()
.map(e -> e.getCreationTime().toInstant())
.sorted()
.collect(Collectors.toList());",0,0,0,0,0,1,0,0,0,0,0,5,0,0,0,1,9,6,1,0,0,0.51,9,2
2049_20,20,20,Instant lastGroupStart = sortedEventCreationTimes.get(0);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,9,6,1,0,0,0.43,15,4
2049_21,21,21,incidentCount++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,6,1,0,1,0.62,16,4
2049_23,23,28,"for (Instant eventCreationTime : sortedEventCreationTimes) {
if (eventCreationTime.isAfter(lastGroupStart.plus(EGRESS_INCIDENT_MERGE_WINDOW))) {
incidentCount++;
lastGroupStart = eventCreationTime;
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,0,1,0,9,6,1,0,2,0.52,18,6
2049_24,24,27,"if (eventCreationTime.isAfter(lastGroupStart.plus(EGRESS_INCIDENT_MERGE_WINDOW))) {
incidentCount++;
lastGroupStart = eventCreationTime;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,9,6,1,0,2,0.53,19,6
2049_25,25,25,incidentCount++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,1,0.62,20,7
2049_26,26,26,lastGroupStart = eventCreationTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.38,21,8
2049_31,31,31,return incidentCount;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,9,6,1,0,1,0.56,26,10
2050_1,1,1,private int getEgressIncidentCountForUser(DbUser user) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,0,0,1,0.52,5,2
2050_2,2,3,"List<DbEgressEvent> events =
egressEventDao.findAllByUserAndStatusNot(user, DbEgressEventStatus.VERIFIED_FALSE_POSITIVE);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,1,9,8,0,0,1,0.52,3,1
2050_5,5,5,int incidentCount = (int) events.stream().filter(e -> e.getWorkspace() == null).count();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,9,8,0,0,3,0.65,1,0
2050_7,7,11,"Collection<List<DbEgressEvent>> eventsByWorkspace =
events.stream()
.filter(e -> e.getWorkspace() != null)
.collect(Collectors.groupingBy(e -> e.getWorkspace().getWorkspaceId()))
.values();",0,0,0,0,0,1,0,0,0,0,0,5,0,0,1,1,9,8,0,0,3,0.7,0,0
2050_13,13,29,"for (List<DbEgressEvent> partition : eventsByWorkspace) {
List<Instant> sortedEventCreationTimes =
partition.stream()
.map(e -> e.getCreationTime().toInstant())
.sorted()
.collect(Collectors.toList());

Instant lastGroupStart = sortedEventCreationTimes.get(0);
incidentCount++;

for (Instant eventCreationTime : sortedEventCreationTimes) {
if (eventCreationTime.isAfter(lastGroupStart.plus(EGRESS_INCIDENT_MERGE_WINDOW))) {
incidentCount++;
lastGroupStart = eventCreationTime;
}
}
}",0,0,0,1,0,0,0,0,0,7,3,17,0,0,1,1,9,8,0,0,3,0.65,6,1
2050_14,14,18,"List<Instant> sortedEventCreationTimes =
partition.stream()
.map(e -> e.getCreationTime().toInstant())
.sorted()
.collect(Collectors.toList());",0,0,0,0,0,1,0,0,0,0,0,5,0,0,0,1,9,8,0,0,1,0.55,7,1
2050_20,20,20,Instant lastGroupStart = sortedEventCreationTimes.get(0);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,9,8,0,0,1,0.5,13,3
2050_21,21,21,incidentCount++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,9,8,0,0,1,0.62,14,3
2050_23,23,28,"for (Instant eventCreationTime : sortedEventCreationTimes) {
if (eventCreationTime.isAfter(lastGroupStart.plus(EGRESS_INCIDENT_MERGE_WINDOW))) {
incidentCount++;
lastGroupStart = eventCreationTime;
}
}",0,0,0,1,0,0,0,0,0,3,2,6,0,0,1,0,9,8,0,0,2,0.59,16,5
2050_24,24,27,"if (eventCreationTime.isAfter(lastGroupStart.plus(EGRESS_INCIDENT_MERGE_WINDOW))) {
incidentCount++;
lastGroupStart = eventCreationTime;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,9,8,0,0,2,0.59,17,5
2050_25,25,25,incidentCount++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,0,0,1,0.62,18,6
2050_26,26,26,lastGroupStart = eventCreationTime;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,0,0,1,0.46,19,7
2050_31,31,31,return incidentCount;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,9,8,0,0,1,0.56,24,9
2051_1,1,2,"  private static Optional<Escalation> matchEscalation(
@Nullable EgressAlertRemediationPolicy policy, int incidentCount) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,15,9,0,0,4,0.62,8,4
2051_3,3,5,"if (policy == null) {
return Optional.empty();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,15,9,0,0,0,0.33,5,2
2051_4,4,4,return Optional.empty();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,15,9,0,0,0,0.32,6,2
2051_6,6,9,"List<Escalation> descendingEscalations =
policy.escalations.stream()
.sorted(Comparator.comparingInt((Escalation e) -> e.afterIncidentCount).reversed())
.collect(Collectors.toList());",0,0,0,0,0,1,0,0,0,0,0,4,0,1,0,0,15,9,0,0,4,0.6,1,1
2051_10,10,14,"for (Escalation e : descendingEscalations) {
if (e.afterIncidentCount <= incidentCount) {
return Optional.of(e);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,1,0,0,15,9,0,0,3,0.6,0,0
2051_11,11,13,"if (e.afterIncidentCount <= incidentCount) {
return Optional.of(e);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,15,9,0,0,2,0.62,0,0
2051_12,12,12,return Optional.of(e);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,15,9,0,0,0,0.33,1,0
2051_15,15,15,return Optional.empty();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,15,9,0,0,0,0.32,4,2
2052_1,1,1,"  private void suspendUserCompute(DbUser user, Duration duration) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.68,3,2
2052_2,2,2,Timestamp suspendUntil = Timestamp.from(clock.instant().plus(duration));,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.42,2,1
2052_3,3,4,"userService.updateUserWithRetries(
u -> {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,1,0.56,0,0
2052_5,5,5,u.setComputeSecuritySuspendedUntil(suspendUntil);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.58,0,0
2052_6,6,6,return u;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.35,1,0
2052_7,7,9,"},
user,
Agent.asSystem());",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,5,5,0,0,1,0.6,2,1
2052_11,11,11,stopUserRuntimes(user.getUsername());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,1,0.55,6,3
2053_1,1,1,  private void disableUser(DbUser user) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,1,0,1,0.58,8,4
2053_2,2,3,"userService.updateUserWithRetries(
u -> {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,10,4,1,0,1,0.57,6,3
2053_4,4,4,u.setDisabled(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,1,0,0,0.35,5,2
2053_5,5,5,return u;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,4,1,0,0,0.29,4,1
2053_6,6,8,"},
user,
Agent.asSystem());",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,10,4,1,0,1,0.57,1,0
2053_10,10,10,stopUserRuntimes(user.getUsername());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,10,4,1,0,2,0.61,0,0
615_1,1,2,"  @Override
public Set<BlobId> getExistingBlobIdsIn(List<BlobId> ids) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,5,0,0,2,0.62,5,3
615_3,3,5,"if (ids.isEmpty()) {
return ImmutableSet.of();
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,7,5,0,0,1,0.48,2,1
615_4,4,4,return ImmutableSet.of();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,5,0,0,0,0.36,3,1
615_6,6,9,"return storageProvider.get().get(ids).stream()
.filter(Objects::nonNull)
.map(b -> BlobId.of(b.getBucket(), b.getName()))
.collect(Collectors.toSet());",0,0,0,0,0,0,1,0,0,0,0,4,1,0,0,0,7,5,0,0,2,0.51,0,0
6943_1,1,2,"private static void describeRuntime(
String apiUrl, String workbenchProjectId, String workbenchServiceAccount, String runtimeId)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,17,10,3,0,2,0.54,11,7
6943_3,3,3,"throws IOException, ApiException ",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,17,10,3,0,1,0.54,10,6
6943_4,4,4,"String[] parts = runtimeId.split(""/"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,17,10,3,0,1,0.46,9,5
6943_5,5,10,"if (parts.length != 2) {
System.err.println(
String.format(
""given runtime ID '%s' is invalid, wanted format 'project/runtimeName'"", runtimeId));
return;
}",1,0,0,0,0,0,0,0,0,2,1,6,0,1,0,0,17,10,3,0,1,0.48,3,2
6943_6,6,8,"System.err.println(
String.format(
""given runtime ID '%s' is invalid, wanted format 'project/runtimeName'"", runtimeId));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,17,10,3,0,1,0.5,5,3
6943_9,9,9,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,17,10,3,0,0,0.17,4,2
6943_11,11,11,String runtimeProject = parts[0];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,17,10,3,0,1,0.46,2,1
6943_12,12,12,String runtimeName = parts[1];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,17,10,3,0,1,0.44,1,0
6943_14,14,14,RuntimesApi client = newApiClient(apiUrl);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,17,10,3,0,2,0.57,0,0
6943_15,15,20,"com.squareup.okhttp.Call call =
client.getRuntimeCall(
runtimeProject,
runtimeName,
null,
null);",0,0,0,0,0,1,0,0,0,0,0,6,0,1,0,0,17,10,3,0,2,0.59,1,0
6943_21,21,21,"ApiResponse<Object> resp = client.getApiClient().execute(call, Object.class);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,17,10,3,0,2,0.53,7,2
6943_23,23,24,"LeonardoGetRuntimeResponse runtime =
PRETTY_GSON.fromJson(PRETTY_GSON.toJson(resp.getData()), LeonardoGetRuntimeResponse.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,17,10,3,0,2,0.61,9,3
6943_26,26,26,System.out.println(PRETTY_GSON.toJson(resp.getData()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,17,10,3,0,1,0.52,12,4
6943_27,27,27,"System.out.printf(""\n\nTo inspect logs in cloud storage, run the following:\n\n"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,17,10,3,0,0,0.44,13,4
6943_29,29,31,"System.out.printf(
""    gsutil -i %s ls gs://%s/**\n"",
workbenchServiceAccount, runtime.getAsyncRuntimeFields().getStagingBucket());",0,0,0,0,0,0,0,0,0,0,0,3,1,0,1,0,17,10,3,0,2,0.62,15,6
6943_32,32,33,"System.out.printf(
""    gsutil -i %s cat ... # inspect or copy logs\n\n"", workbenchServiceAccount);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,17,10,3,0,0,0.44,18,7
6944_1,1,2,"private static void describeRuntime(
String apiUrl, String workbenchProjectId, String workbenchServiceAccount, String runtimeId)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,3,0,0,0,0.45,20,10
6944_3,3,3,"throws IOException, ApiException ",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,7,3,0,0,0,0.45,19,9
6944_4,4,4,"String[] parts = runtimeId.split(""/"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,0,0,0,0.37,18,8
6944_5,5,10,"if (parts.length != 2) {
System.err.println(
String.format(
""given runtime ID '%s' is invalid, wanted format 'project/runtimeName'"", runtimeId));
return;
}",1,0,0,0,0,0,0,0,0,2,1,6,0,1,0,0,7,3,0,0,0,0.45,12,5
6944_6,6,8,"System.err.println(
String.format(
""given runtime ID '%s' is invalid, wanted format 'project/runtimeName'"", runtimeId));",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,7,3,0,0,0,0.46,14,6
6944_9,9,9,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,3,0,0,0,0.23,13,5
6944_11,11,11,String runtimeProject = parts[0];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,0,0,0,0.39,11,4
6944_12,12,12,String runtimeName = parts[1];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,7,3,0,0,0,0.35,10,3
6944_14,14,14,RuntimesApi client = newApiClient(apiUrl);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,3,0,0,0,0.38,8,2
6944_15,15,20,"com.squareup.okhttp.Call call =
client.getRuntimeCall(
runtimeProject,
runtimeName,
null,
null);",0,0,0,0,0,1,0,0,0,0,0,6,0,1,0,0,7,3,0,0,0,0.4,2,1
6944_21,21,21,"ApiResponse<Object> resp = client.getApiClient().execute(call, Object.class);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,7,3,0,0,1,0.49,1,0
6944_23,23,24,"LeonardoGetRuntimeResponse runtime =
PRETTY_GSON.fromJson(PRETTY_GSON.toJson(resp.getData()), LeonardoGetRuntimeResponse.class);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,7,3,0,0,1,0.53,0,0
6944_26,26,26,System.out.println(PRETTY_GSON.toJson(resp.getData()));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,3,0,0,0,0.52,3,1
6944_27,27,27,"System.out.printf(""\n\nTo inspect logs in cloud storage, run the following:\n\n"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,3,0,0,1,0.5,4,1
6944_29,29,31,"System.out.printf(
""    gsutil -i %s ls gs://%s/**\n"",
workbenchServiceAccount, runtime.getAsyncRuntimeFields().getStagingBucket());",0,0,0,0,0,0,0,0,0,0,0,3,1,0,1,0,7,3,0,0,1,0.48,6,3
6944_32,32,33,"System.out.printf(
""    gsutil -i %s cat ... # inspect or copy logs\n\n"", workbenchServiceAccount);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,7,3,0,0,1,0.49,9,4
6945_1,1,6,"@Override
public ResponseEntity<CohortAnnotationDefinition> createCohortAnnotationDefinition(
String workspaceNamespace,
String workspaceId,
Long cohortId,
CohortAnnotationDefinition cohortAnnotationDefinition) {",0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,5,3,0,0,0,0.45,0,0
6945_7,7,9,"DbWorkspace dbWorkspace =
workspaceAuthService.getWorkspaceEnforceAccessLevelAndSetCdrVersion(
workspaceNamespace, workspaceId, WorkspaceAccessLevel.WRITER);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,1,5,3,0,0,2,0.61,0,0
6945_11,11,11,validateColumnName(cohortAnnotationDefinition.getColumnName());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,0,0,0,0.38,4,1
6945_12,12,12,"validateCohortExist(dbWorkspace, cohortId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.38,5,1
6945_13,13,13,"validateDefinitionExists(cohortId, cohortAnnotationDefinition.getColumnName());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,0,0,0,0.38,6,2
6945_15,15,15,cohortAnnotationDefinition.setCohortId(cohortId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,0,0,0,0.36,8,4
6945_16,16,16,cohortAnnotationDefinition.etag(Etags.fromVersion(0));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.4,9,4
6945_17,17,17,CohortAnnotationDefinition response = save(cohortAnnotationDefinition);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.41,10,5
6945_18,18,18,return ResponseEntity.ok(response);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,3,0,0,0,0.35,11,6
6946_1,1,3,"  @Override
public ResponseEntity<EmptyResponse> deleteCohortAnnotationDefinition(
String workspaceNamespace, String workspaceId, Long cohortId, Long annotationDefinitionId) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,5,3,0,0,0,0.43,0,0
6946_4,4,6,"DbWorkspace dbWorkspace =
workspaceAuthService.getWorkspaceEnforceAccessLevelAndSetCdrVersion(
workspaceNamespace, workspaceId, WorkspaceAccessLevel.WRITER);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,1,5,3,0,0,2,0.61,0,0
6946_8,8,8,"validateCohortExist(dbWorkspace, cohortId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,0,0,0,0.38,4,1
6946_9,9,9,"findCohortAnnotationDefinition(cohortId, annotationDefinitionId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,0,0,0,0.39,5,1
6946_11,11,11,cohortAnnotationDefinitionService.delete(annotationDefinitionId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,0,0,0,0.39,7,3
6946_12,12,12,return ResponseEntity.ok(new EmptyResponse());,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.35,8,3
6947_1,1,3,"  @Override
public ResponseEntity<EmptyResponse> deleteCohortAnnotationDefinition(
String workspaceNamespace, String workspaceId, Long cohortId, Long annotationDefinitionId) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,5,3,1,0,3,0.59,5,2
6947_4,4,6,"DbWorkspace dbWorkspace =
workspaceAuthService.getWorkspaceEnforceAccessLevelAndSetCdrVersion(
workspaceNamespace, workspaceId, WorkspaceAccessLevel.WRITER);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,1,5,3,1,0,0,0.4,2,1
6947_8,8,8,"validateCohortExist(dbWorkspace, cohortId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,3,0.67,0,0
6947_9,9,9,"findCohortAnnotationDefinition(cohortId, annotationDefinitionId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,1,0,3,0.73,0,0
6947_11,11,11,cohortAnnotationDefinitionService.delete(annotationDefinitionId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,1,0,3,0.72,2,1
6947_12,12,12,return ResponseEntity.ok(new EmptyResponse());,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.37,3,1
6948_1,1,3,"  @Override
public ResponseEntity<CohortAnnotationDefinition> getCohortAnnotationDefinition(
String workspaceNamespace, String workspaceId, Long cohortId, Long annotationDefinitionId) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,5,3,0,0,0,0.44,0,0
6948_4,4,6,"DbWorkspace dbWorkspace =
workspaceAuthService.getWorkspaceEnforceAccessLevelAndSetCdrVersion(
workspaceNamespace, workspaceId, WorkspaceAccessLevel.READER);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,1,5,3,0,0,2,0.61,0,0
6948_8,8,8,"validateCohortExist(dbWorkspace, cohortId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,3,0,0,0,0.38,4,1
6948_10,10,10,"return ResponseEntity.ok(findCohortAnnotationDefinition(cohortId, annotationDefinitionId));",0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,3,0,0,0,0.39,6,2
6949_1,1,3,"  @Override
public ResponseEntity<CohortAnnotationDefinitionListResponse> getCohortAnnotationDefinitions(
String workspaceNamespace, String workspaceId, Long cohortId) {",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,5,3,0,0,0,0.44,0,0
6949_4,4,6,"DbWorkspace dbWorkspace =
workspaceAuthService.getWorkspaceEnforceAccessLevelAndSetCdrVersion(
workspaceNamespace, workspaceId, WorkspaceAccessLevel.READER);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,1,5,3,0,0,2,0.61,0,0
6949_8,8,8,"validateCohortExist(dbWorkspace, cohortId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,3,0,0,0,0.38,4,1
6949_10,10,11,"List<CohortAnnotationDefinition> defs =
cohortAnnotationDefinitionService.findByCohortId(cohortId);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,5,3,0,0,0,0.4,6,2
6949_13,13,13,return ResponseEntity.ok(new CohortAnnotationDefinitionListResponse().items(defs));,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,3,0,0,0,0.41,9,3
6950_1,1,7,"  @Override
public ResponseEntity<CohortAnnotationDefinition> updateCohortAnnotationDefinition(
String workspaceNamespace,
String workspaceId,
Long cohortId,
Long annotationDefinitionId,
CohortAnnotationDefinition cohortAnnotationDefinitionRequest) {",0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,5,3,0,0,0,0.44,2,1
6950_8,8,8,String columnName = cohortAnnotationDefinitionRequest.getColumnName();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,3,0,0,0,0.36,1,0
6950_10,10,12,"DbWorkspace dbWorkspace =
workspaceAuthService.getWorkspaceEnforceAccessLevelAndSetCdrVersion(
workspaceNamespace, workspaceId, WorkspaceAccessLevel.WRITER);",0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,1,5,3,0,0,2,0.61,0,0
6950_14,14,14,validateColumnName(columnName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,0,0,0,0.32,4,1
6950_15,15,15,"validateCohortExist(dbWorkspace, cohortId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,0,0,0,0.38,5,1
6950_17,17,18,"CohortAnnotationDefinition cohortAnnotationDefinition =
findCohortAnnotationDefinition(cohortId, annotationDefinitionId).columnName(columnName);",0,0,0,0,0,1,0,0,0,0,0,2,0,0,1,1,5,3,0,0,0,0.39,7,3
6950_20,20,20,"validateEtag(cohortAnnotationDefinitionRequest.getEtag(), cohortAnnotationDefinition);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,3,0,0,0,0.4,10,4
6950_21,21,21,"validateDefinitionExists(cohortId, columnName);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,0,0,0,0.35,11,4
6950_23,23,23,return ResponseEntity.ok(save(cohortAnnotationDefinition));,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,3,0,0,0,0.4,13,6
7245_1,1,1,public ArrayList<Token> get(final String input) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,2,0.53,7,6
7245_2,2,2,ArrayList<Token> tokens = new ArrayList<Token>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,1,0,2,0.65,6,5
7245_3,3,5,"if (!mHasChinaCollator || TextUtils.isEmpty(input)) {
return tokens;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,8,4,1,0,2,0.54,3,3
7245_4,4,4,return tokens;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,4,1,0,1,0.55,4,3
7245_6,6,6,final int inputLength = input.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,4,1,0,1,0.51,2,2
7245_7,7,7,final StringBuilder sb = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,4,1,0,1,0.43,1,1
7245_8,8,8,int tokenType = Token.LATIN;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,1,0,2,0.72,0,0
7245_9,9,37,"for (int i = 0; i < inputLength; i++) {
final char character = input.charAt(i);
if (character == ' ') {
if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
} else if (character < 256) {
if (tokenType != Token.LATIN && sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokenType = Token.LATIN;
sb.append(character);
} else {
Token t = getToken(character);
if (t.type == Token.PINYIN) {
if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokens.add(t);
tokenType = Token.PINYIN;
} else {
if (tokenType != t.type && sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokenType = t.type;
sb.append(character);
}
}
}",0,0,1,0,0,0,0,0,0,21,4,29,1,1,0,0,8,4,1,0,3,0.72,0,0
7245_10,10,10,final char character = input.charAt(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,1,0,1,0.52,1,0
7245_11,11,36,"if (character == ' ') {
if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
} else if (character < 256) {
if (tokenType != Token.LATIN && sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokenType = Token.LATIN;
sb.append(character);
} else {
Token t = getToken(character);
if (t.type == Token.PINYIN) {
if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokens.add(t);
tokenType = Token.PINYIN;
} else {
if (tokenType != t.type && sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokenType = t.type;
sb.append(character);
}
}",1,0,0,0,0,0,0,0,0,19,3,26,0,1,0,0,8,4,1,0,2,0.69,2,1
7245_12,12,14,"if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,8,4,1,0,2,0.64,3,2
7245_13,13,13,"addToken(sb, tokens, tokenType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,2,0.7,4,3
7245_15,15,15,} else if (character < 256) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,0,0.35,6,5
7245_16,16,18,"if (tokenType != Token.LATIN && sb.length() > 0) {
addToken(sb, tokens, tokenType);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,8,4,1,0,2,0.68,7,5
7245_17,17,17,"addToken(sb, tokens, tokenType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,2,0.7,8,6
7245_19,19,19,tokenType = Token.LATIN;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,1,0,2,0.79,10,8
7245_20,20,20,sb.append(character);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,0,0.43,11,8
7245_21,21,21,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,0,0.19,12,9
7245_22,22,22,Token t = getToken(character);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,1,0,1,0.59,13,10
7245_23,23,35,"if (t.type == Token.PINYIN) {
if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokens.add(t);
tokenType = Token.PINYIN;
} else {
if (tokenType != t.type && sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokenType = t.type;
sb.append(character);
}",1,0,0,0,0,0,0,0,0,9,2,13,0,1,0,0,8,4,1,0,2,0.71,14,11
7245_24,24,26,"if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,8,4,1,0,2,0.64,15,12
7245_25,25,25,"addToken(sb, tokens, tokenType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,2,0.7,16,13
7245_27,27,27,tokens.add(t);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,1,0,1,0.58,18,15
7245_28,28,28,tokenType = Token.PINYIN;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,2,0.8,19,15
7245_29,29,29,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,0,0.19,20,16
7245_30,30,32,"if (tokenType != t.type && sb.length() > 0) {
addToken(sb, tokens, tokenType);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,8,4,1,0,2,0.68,21,17
7245_31,31,31,"addToken(sb, tokens, tokenType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,2,0.7,22,18
7245_33,33,33,tokenType = t.type;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,1,0,2,0.79,24,20
7245_34,34,34,sb.append(character);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,0,0.43,25,20
7245_38,38,40,"if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,8,4,1,0,2,0.64,29,22
7245_39,39,39,"addToken(sb, tokens, tokenType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,1,0,2,0.7,30,22
7245_41,41,41,return tokens;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,8,4,1,0,1,0.55,32,24
7246_1,1,1,public ArrayList<Token> get(final String input) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,2,0,3,0.61,7,6
7246_2,2,2,ArrayList<Token> tokens = new ArrayList<Token>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,4,2,0,2,0.64,6,5
7246_3,3,5,"if (!mHasChinaCollator || TextUtils.isEmpty(input)) {
return tokens;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,10,4,2,0,2,0.52,3,3
7246_4,4,4,return tokens;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,10,4,2,0,1,0.53,4,3
7246_6,6,6,final int inputLength = input.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,4,2,0,1,0.52,2,2
7246_7,7,7,final StringBuilder sb = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,4,2,0,1,0.5,1,1
7246_8,8,8,int tokenType = Token.LATIN;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,4,2,0,1,0.59,0,0
7246_9,9,37,"for (int i = 0; i < inputLength; i++) {
final char character = input.charAt(i);
if (character == ' ') {
if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
} else if (character < 256) {
if (tokenType != Token.LATIN && sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokenType = Token.LATIN;
sb.append(character);
} else {
Token t = getToken(character);
if (t.type == Token.PINYIN) {
if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokens.add(t);
tokenType = Token.PINYIN;
} else {
if (tokenType != t.type && sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokenType = t.type;
sb.append(character);
}
}
}",0,0,1,0,0,0,0,0,0,21,4,29,1,1,0,0,10,4,2,0,4,0.72,0,0
7246_10,10,10,final char character = input.charAt(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,4,2,0,1,0.56,1,0
7246_11,11,36,"if (character == ' ') {
if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
} else if (character < 256) {
if (tokenType != Token.LATIN && sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokenType = Token.LATIN;
sb.append(character);
} else {
Token t = getToken(character);
if (t.type == Token.PINYIN) {
if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokens.add(t);
tokenType = Token.PINYIN;
} else {
if (tokenType != t.type && sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokenType = t.type;
sb.append(character);
}
}",1,0,0,0,0,0,0,0,0,19,3,26,0,1,0,0,10,4,2,0,3,0.7,2,1
7246_12,12,14,"if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,10,4,2,0,1,0.57,3,2
7246_13,13,13,"addToken(sb, tokens, tokenType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,2,0,1,0.61,4,3
7246_15,15,15,} else if (character < 256) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,2,0,0,0.45,6,5
7246_16,16,18,"if (tokenType != Token.LATIN && sb.length() > 0) {
addToken(sb, tokens, tokenType);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,10,4,2,0,1,0.59,7,5
7246_17,17,17,"addToken(sb, tokens, tokenType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,2,0,1,0.61,8,6
7246_19,19,19,tokenType = Token.LATIN;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,4,2,0,1,0.64,10,8
7246_20,20,20,sb.append(character);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,2,0,0,0.51,11,8
7246_21,21,21,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,2,0,0,0.27,12,9
7246_22,22,22,Token t = getToken(character);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,4,2,0,2,0.73,13,10
7246_23,23,35,"if (t.type == Token.PINYIN) {
if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokens.add(t);
tokenType = Token.PINYIN;
} else {
if (tokenType != t.type && sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokenType = t.type;
sb.append(character);
}",1,0,0,0,0,0,0,0,0,9,2,13,0,1,0,0,10,4,2,0,2,0.66,14,11
7246_24,24,26,"if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,10,4,2,0,1,0.57,15,12
7246_25,25,25,"addToken(sb, tokens, tokenType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,2,0,1,0.61,16,13
7246_27,27,27,tokens.add(t);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,4,2,0,1,0.56,18,15
7246_28,28,28,tokenType = Token.PINYIN;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,2,0,2,0.76,19,15
7246_29,29,29,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,2,0,0,0.27,20,16
7246_30,30,32,"if (tokenType != t.type && sb.length() > 0) {
addToken(sb, tokens, tokenType);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,10,4,2,0,1,0.57,21,17
7246_31,31,31,"addToken(sb, tokens, tokenType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,2,0,1,0.61,22,18
7246_33,33,33,tokenType = t.type;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,4,2,0,1,0.56,24,20
7246_34,34,34,sb.append(character);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,2,0,0,0.51,25,20
7246_38,38,40,"if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,10,4,2,0,1,0.57,29,22
7246_39,39,39,"addToken(sb, tokens, tokenType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,4,2,0,1,0.61,30,22
7246_41,41,41,return tokens;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,10,4,2,0,1,0.53,32,24
7247_1,1,1,public ArrayList<Token> get(final String input) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,2,0.5,7,6
7247_2,2,2,ArrayList<Token> tokens = new ArrayList<Token>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,4,1,0,2,0.61,6,5
7247_3,3,5,"if (!mHasChinaCollator || TextUtils.isEmpty(input)) {
return tokens;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,9,4,1,0,2,0.5,3,3
7247_4,4,4,return tokens;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,9,4,1,0,1,0.51,4,3
7247_6,6,6,final int inputLength = input.length();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,9,4,1,0,1,0.54,2,2
7247_7,7,7,final StringBuilder sb = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,9,4,1,0,1,0.53,1,1
7247_8,8,8,int tokenType = Token.LATIN;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,4,1,0,1,0.56,0,0
7247_9,9,37,"for (int i = 0; i < inputLength; i++) {
final char character = input.charAt(i);
if (character == ' ') {
if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
} else if (character < 256) {
if (tokenType != Token.LATIN && sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokenType = Token.LATIN;
sb.append(character);
} else {
Token t = getToken(character);
if (t.type == Token.PINYIN) {
if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokens.add(t);
tokenType = Token.PINYIN;
} else {
if (tokenType != t.type && sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokenType = t.type;
sb.append(character);
}
}
}",0,0,1,0,0,0,0,0,0,21,4,29,1,1,0,0,9,4,1,0,3,0.69,0,0
7247_10,10,10,final char character = input.charAt(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,4,1,0,2,0.66,1,0
7247_11,11,36,"if (character == ' ') {
if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
} else if (character < 256) {
if (tokenType != Token.LATIN && sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokenType = Token.LATIN;
sb.append(character);
} else {
Token t = getToken(character);
if (t.type == Token.PINYIN) {
if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokens.add(t);
tokenType = Token.PINYIN;
} else {
if (tokenType != t.type && sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokenType = t.type;
sb.append(character);
}
}",1,0,0,0,0,0,0,0,0,19,3,26,0,1,0,0,9,4,1,0,2,0.66,2,1
7247_12,12,14,"if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,9,4,1,0,1,0.59,3,2
7247_13,13,13,"addToken(sb, tokens, tokenType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,1,0.61,4,3
7247_15,15,15,} else if (character < 256) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,1,0.5,6,5
7247_16,16,18,"if (tokenType != Token.LATIN && sb.length() > 0) {
addToken(sb, tokens, tokenType);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,9,4,1,0,1,0.6,7,5
7247_17,17,17,"addToken(sb, tokens, tokenType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,1,0.61,8,6
7247_19,19,19,tokenType = Token.LATIN;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,1,0,1,0.61,10,8
7247_20,20,20,sb.append(character);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,1,0.59,11,8
7247_21,21,21,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,0,0.28,12,9
7247_22,22,22,Token t = getToken(character);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,4,1,0,2,0.66,13,10
7247_23,23,35,"if (t.type == Token.PINYIN) {
if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokens.add(t);
tokenType = Token.PINYIN;
} else {
if (tokenType != t.type && sb.length() > 0) {
addToken(sb, tokens, tokenType);
}
tokenType = t.type;
sb.append(character);
}",1,0,0,0,0,0,0,0,0,9,2,13,0,1,0,0,9,4,1,0,2,0.65,14,11
7247_24,24,26,"if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,9,4,1,0,1,0.59,15,12
7247_25,25,25,"addToken(sb, tokens, tokenType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,1,0.61,16,13
7247_27,27,27,tokens.add(t);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,1,0,1,0.54,18,15
7247_28,28,28,tokenType = Token.PINYIN;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,1,0.66,19,15
7247_29,29,29,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,0,0.28,20,16
7247_30,30,32,"if (tokenType != t.type && sb.length() > 0) {
addToken(sb, tokens, tokenType);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,9,4,1,0,1,0.58,21,17
7247_31,31,31,"addToken(sb, tokens, tokenType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,1,0.61,22,18
7247_33,33,33,tokenType = t.type;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,4,1,0,1,0.51,24,20
7247_34,34,34,sb.append(character);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,1,0.59,25,20
7247_38,38,40,"if (sb.length() > 0) {
addToken(sb, tokens, tokenType);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,9,4,1,0,1,0.59,29,22
7247_39,39,39,"addToken(sb, tokens, tokenType);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,4,1,0,1,0.61,30,22
7247_41,41,41,return tokens;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,9,4,1,0,1,0.51,32,24
7248_1,1,2,"        @Override
public void onResult(Bundle bundle) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,7,0,0,0,0.35,2,2
7248_3,3,3,Intent intent = bundle.getParcelable(KEY_INTENT);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,7,0,0,1,0.51,1,1
7248_4,4,14,"if (intent != null && mActivity != null) {
mActivity.startActivity(intent);
} else if (bundle.getBoolean(""retry"")) {
try {
doWork();
} catch (RemoteException e) {
throw new RuntimeException(e);
}
} else {
set(bundle);
}",1,0,0,0,0,0,0,0,0,8,2,11,0,1,0,0,8,7,0,0,3,0.59,0,0
7248_5,5,5,mActivity.startActivity(intent);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,3,0.76,0,0
7248_6,6,6,"} else if (bundle.getBoolean(""retry"")) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,0,0.34,1,0
7248_7,7,11,"try {
doWork();
} catch (RemoteException e) {
throw new RuntimeException(e);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,8,7,0,0,0,0.38,2,1
7248_8,8,8,doWork();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,0,0.26,3,2
7248_9,9,9,} catch (RemoteException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,0,0.4,4,3
7248_10,10,10,throw new RuntimeException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,8,7,0,0,0,0.34,5,4
7248_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,0,0.2,7,6
7248_13,13,13,set(bundle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,7,0,0,0,0.24,8,6
7191_1,1,1,"public List<R> queryIntent(Intent intent, String resolvedType, boolean defaultOnly, int userId) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,1,0,2,0.57,9,6
7191_2,2,2,String scheme = intent.getScheme();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,10,8,1,0,1,0.47,8,5
7191_4,4,4,ArrayList<R> finalList = new ArrayList<R>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,10,8,1,0,0,0.32,6,4
7191_5,5,5,F[] firstTypeCut = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,8,1,0,1,0.54,5,3
7191_6,6,6,F[] secondTypeCut = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,8,1,0,1,0.53,4,2
7191_7,7,7,F[] thirdTypeCut = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,10,8,1,0,1,0.58,3,1
7191_8,8,8,F[] schemeCut = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,10,8,1,0,0,0.42,2,0
7191_10,10,27,"if (resolvedType != null) {
int slashpos = resolvedType.indexOf('/');
if (slashpos > 0) {
final String baseType = resolvedType.substring(0, slashpos);
if (!baseType.equals(""*"")) {
if (resolvedType.length() != slashpos + 2 || resolvedType.charAt(slashpos + 1) != '*') {
firstTypeCut = mTypeToFilter.get(resolvedType);
secondTypeCut = mWildTypeToFilter.get(baseType);
} else {
firstTypeCut = mBaseTypeToFilter.get(baseType);
secondTypeCut = mWildTypeToFilter.get(baseType);
}
thirdTypeCut = mWildTypeToFilter.get(""*"");
} else if (intent.getAction() != null) {
firstTypeCut = mTypedActionToFilter.get(intent.getAction());
}
}
}",1,0,0,0,0,0,0,0,0,13,4,18,0,0,1,1,10,8,1,0,3,0.66,0,0
7191_11,11,11,int slashpos = resolvedType.indexOf('/');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,8,1,0,1,0.56,1,0
7191_12,12,26,"if (slashpos > 0) {
final String baseType = resolvedType.substring(0, slashpos);
if (!baseType.equals(""*"")) {
if (resolvedType.length() != slashpos + 2 || resolvedType.charAt(slashpos + 1) != '*') {
firstTypeCut = mTypeToFilter.get(resolvedType);
secondTypeCut = mWildTypeToFilter.get(baseType);
} else {
firstTypeCut = mBaseTypeToFilter.get(baseType);
secondTypeCut = mWildTypeToFilter.get(baseType);
}
thirdTypeCut = mWildTypeToFilter.get(""*"");
} else if (intent.getAction() != null) {
firstTypeCut = mTypedActionToFilter.get(intent.getAction());
}
}",1,0,0,0,0,0,0,0,0,11,3,15,0,1,0,0,10,8,1,0,3,0.66,2,1
7191_13,13,13,"final String baseType = resolvedType.substring(0, slashpos);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,10,8,1,0,1,0.56,3,2
7191_14,14,25,"if (!baseType.equals(""*"")) {
if (resolvedType.length() != slashpos + 2 || resolvedType.charAt(slashpos + 1) != '*') {
firstTypeCut = mTypeToFilter.get(resolvedType);
secondTypeCut = mWildTypeToFilter.get(baseType);
} else {
firstTypeCut = mBaseTypeToFilter.get(baseType);
secondTypeCut = mWildTypeToFilter.get(baseType);
}
thirdTypeCut = mWildTypeToFilter.get(""*"");
} else if (intent.getAction() != null) {
firstTypeCut = mTypedActionToFilter.get(intent.getAction());
}",1,0,0,0,0,0,0,0,0,9,2,12,0,1,0,0,10,8,1,0,3,0.66,4,3
7191_15,15,21,"if (resolvedType.length() != slashpos + 2 || resolvedType.charAt(slashpos + 1) != '*') {
firstTypeCut = mTypeToFilter.get(resolvedType);
secondTypeCut = mWildTypeToFilter.get(baseType);
} else {
firstTypeCut = mBaseTypeToFilter.get(baseType);
secondTypeCut = mWildTypeToFilter.get(baseType);
}",1,0,0,0,0,0,0,0,0,5,1,7,1,0,0,0,10,8,1,0,2,0.62,5,4
7191_16,16,16,firstTypeCut = mTypeToFilter.get(resolvedType);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,8,1,0,2,0.65,6,5
7191_17,17,17,secondTypeCut = mWildTypeToFilter.get(baseType);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,8,1,0,2,0.64,7,6
7191_18,18,18,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,1,0,0,0.28,8,7
7191_19,19,19,firstTypeCut = mBaseTypeToFilter.get(baseType);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,10,8,1,0,2,0.62,9,8
7191_20,20,20,secondTypeCut = mWildTypeToFilter.get(baseType);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,10,8,1,0,2,0.64,10,9
7191_22,22,22,"thirdTypeCut = mWildTypeToFilter.get(""*"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,10,8,1,0,2,0.67,12,11
7191_23,23,23,} else if (intent.getAction() != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,1,0,1,0.42,13,11
7191_24,24,24,firstTypeCut = mTypedActionToFilter.get(intent.getAction());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,1,0,3,0.64,14,12
7191_29,29,31,"if (scheme != null) {
schemeCut = mSchemeToFilter.get(scheme);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,10,8,1,0,1,0.47,19,14
7191_30,30,30,schemeCut = mSchemeToFilter.get(scheme);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,1,0,1,0.48,20,14
7191_33,33,35,"if (resolvedType == null && scheme == null && intent.getAction() != null) {
firstTypeCut = mActionToFilter.get(intent.getAction());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,10,8,1,0,3,0.6,23,16
7191_34,34,34,firstTypeCut = mActionToFilter.get(intent.getAction());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,1,0,3,0.62,24,16
7191_37,37,37,FastImmutableArraySet<String> categories = getFastIntentCategories(intent);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,10,8,1,0,1,0.55,27,18
7191_38,38,40,"if (firstTypeCut != null) {
buildResolveList(intent, categories, defaultOnly, resolvedType, scheme, firstTypeCut, finalList, userId);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,10,8,1,0,2,0.57,28,18
7191_39,39,39,"buildResolveList(intent, categories, defaultOnly, resolvedType, scheme, firstTypeCut, finalList, userId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,1,0,2,0.57,29,19
7191_41,41,43,"if (secondTypeCut != null) {
buildResolveList(intent, categories, defaultOnly, resolvedType, scheme, secondTypeCut, finalList, userId);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,10,8,1,0,2,0.56,31,21
7191_42,42,42,"buildResolveList(intent, categories, defaultOnly, resolvedType, scheme, secondTypeCut, finalList, userId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,1,0,2,0.56,32,21
7191_44,44,46,"if (thirdTypeCut != null) {
buildResolveList(intent, categories, defaultOnly, resolvedType, scheme, thirdTypeCut, finalList, userId);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,10,8,1,0,2,0.59,34,23
7191_45,45,45,"buildResolveList(intent, categories, defaultOnly, resolvedType, scheme, thirdTypeCut, finalList, userId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,1,0,2,0.58,35,23
7191_47,47,49,"if (schemeCut != null) {
buildResolveList(intent, categories, defaultOnly, resolvedType, scheme, schemeCut, finalList, userId);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,10,8,1,0,2,0.55,37,25
7191_48,48,48,"buildResolveList(intent, categories, defaultOnly, resolvedType, scheme, schemeCut, finalList, userId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,8,1,0,2,0.55,38,25
7191_50,50,50,sortResults(finalList);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,10,8,1,0,0,0.34,40,27
7191_51,51,51,return finalList;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,10,8,1,0,0,0.29,41,27
7192_1,1,1,"public List<R> queryIntent(Intent intent, String resolvedType, boolean defaultOnly, int userId) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.4,18,15
7192_2,2,2,String scheme = intent.getScheme();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.27,17,14
7192_4,4,4,ArrayList<R> finalList = new ArrayList<R>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,4,0,0,0,0.19,15,13
7192_5,5,5,F[] firstTypeCut = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.5,14,12
7192_6,6,6,F[] secondTypeCut = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.5,13,11
7192_7,7,7,F[] thirdTypeCut = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.51,12,10
7192_8,8,8,F[] schemeCut = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.35,11,9
7192_10,10,27,"if (resolvedType != null) {
int slashpos = resolvedType.indexOf('/');
if (slashpos > 0) {
final String baseType = resolvedType.substring(0, slashpos);
if (!baseType.equals(""*"")) {
if (resolvedType.length() != slashpos + 2 || resolvedType.charAt(slashpos + 1) != '*') {
firstTypeCut = mTypeToFilter.get(resolvedType);
secondTypeCut = mWildTypeToFilter.get(baseType);
} else {
firstTypeCut = mBaseTypeToFilter.get(baseType);
secondTypeCut = mWildTypeToFilter.get(baseType);
}
thirdTypeCut = mWildTypeToFilter.get(""*"");
} else if (intent.getAction() != null) {
firstTypeCut = mTypedActionToFilter.get(intent.getAction());
}
}
}",1,0,0,0,0,0,0,0,0,13,4,18,0,0,1,1,4,4,0,0,2,0.62,0,0
7192_11,11,11,int slashpos = resolvedType.indexOf('/');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.48,8,7
7192_12,12,26,"if (slashpos > 0) {
final String baseType = resolvedType.substring(0, slashpos);
if (!baseType.equals(""*"")) {
if (resolvedType.length() != slashpos + 2 || resolvedType.charAt(slashpos + 1) != '*') {
firstTypeCut = mTypeToFilter.get(resolvedType);
secondTypeCut = mWildTypeToFilter.get(baseType);
} else {
firstTypeCut = mBaseTypeToFilter.get(baseType);
secondTypeCut = mWildTypeToFilter.get(baseType);
}
thirdTypeCut = mWildTypeToFilter.get(""*"");
} else if (intent.getAction() != null) {
firstTypeCut = mTypedActionToFilter.get(intent.getAction());
}
}",1,0,0,0,0,0,0,0,0,11,3,15,0,1,0,0,4,4,0,0,2,0.63,0,0
7192_13,13,13,"final String baseType = resolvedType.substring(0, slashpos);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,2,0.6,6,5
7192_14,14,25,"if (!baseType.equals(""*"")) {
if (resolvedType.length() != slashpos + 2 || resolvedType.charAt(slashpos + 1) != '*') {
firstTypeCut = mTypeToFilter.get(resolvedType);
secondTypeCut = mWildTypeToFilter.get(baseType);
} else {
firstTypeCut = mBaseTypeToFilter.get(baseType);
secondTypeCut = mWildTypeToFilter.get(baseType);
}
thirdTypeCut = mWildTypeToFilter.get(""*"");
} else if (intent.getAction() != null) {
firstTypeCut = mTypedActionToFilter.get(intent.getAction());
}",1,0,0,0,0,0,0,0,0,9,2,12,0,1,0,0,4,4,0,0,2,0.63,0,0
7192_15,15,21,"if (resolvedType.length() != slashpos + 2 || resolvedType.charAt(slashpos + 1) != '*') {
firstTypeCut = mTypeToFilter.get(resolvedType);
secondTypeCut = mWildTypeToFilter.get(baseType);
} else {
firstTypeCut = mBaseTypeToFilter.get(baseType);
secondTypeCut = mWildTypeToFilter.get(baseType);
}",1,0,0,0,0,0,0,0,0,5,1,7,1,0,0,0,4,4,0,0,2,0.64,0,0
7192_16,16,16,firstTypeCut = mTypeToFilter.get(resolvedType);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,1,0.54,3,2
7192_17,17,17,secondTypeCut = mWildTypeToFilter.get(baseType);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,2,0.65,2,1
7192_18,18,18,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.29,1,0
7192_19,19,19,firstTypeCut = mBaseTypeToFilter.get(baseType);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,2,0.67,0,0
7192_20,20,20,secondTypeCut = mWildTypeToFilter.get(baseType);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,4,0,0,2,0.65,1,0
7192_22,22,22,"thirdTypeCut = mWildTypeToFilter.get(""*"");",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,1,0.52,3,2
7192_23,23,23,} else if (intent.getAction() != null) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.31,4,2
7192_24,24,24,firstTypeCut = mTypedActionToFilter.get(intent.getAction());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.46,5,3
7192_29,29,31,"if (scheme != null) {
schemeCut = mSchemeToFilter.get(scheme);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,4,0,0,0,0.34,10,5
7192_30,30,30,schemeCut = mSchemeToFilter.get(scheme);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.32,11,5
7192_33,33,35,"if (resolvedType == null && scheme == null && intent.getAction() != null) {
firstTypeCut = mActionToFilter.get(intent.getAction());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,4,0,0,1,0.45,14,7
7192_34,34,34,firstTypeCut = mActionToFilter.get(intent.getAction());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.43,15,7
7192_37,37,37,FastImmutableArraySet<String> categories = getFastIntentCategories(intent);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,4,0,0,0,0.36,18,9
7192_38,38,40,"if (firstTypeCut != null) {
buildResolveList(intent, categories, defaultOnly, resolvedType, scheme, firstTypeCut, finalList, userId);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,4,0,0,1,0.46,19,9
7192_39,39,39,"buildResolveList(intent, categories, defaultOnly, resolvedType, scheme, firstTypeCut, finalList, userId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.44,20,10
7192_41,41,43,"if (secondTypeCut != null) {
buildResolveList(intent, categories, defaultOnly, resolvedType, scheme, secondTypeCut, finalList, userId);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,4,0,0,1,0.46,22,12
7192_42,42,42,"buildResolveList(intent, categories, defaultOnly, resolvedType, scheme, secondTypeCut, finalList, userId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.44,23,12
7192_44,44,46,"if (thirdTypeCut != null) {
buildResolveList(intent, categories, defaultOnly, resolvedType, scheme, thirdTypeCut, finalList, userId);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,4,0,0,1,0.47,25,14
7192_45,45,45,"buildResolveList(intent, categories, defaultOnly, resolvedType, scheme, thirdTypeCut, finalList, userId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.45,26,14
7192_47,47,49,"if (schemeCut != null) {
buildResolveList(intent, categories, defaultOnly, resolvedType, scheme, schemeCut, finalList, userId);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,4,0,0,1,0.43,28,16
7192_48,48,48,"buildResolveList(intent, categories, defaultOnly, resolvedType, scheme, schemeCut, finalList, userId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.42,29,16
7192_50,50,50,sortResults(finalList);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.33,31,18
7192_51,51,51,return finalList;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.24,32,18
7193_1,1,2,"private void buildResolveList(Intent intent, FastImmutableArraySet<String> categories,
boolean defaultOnly, String resolvedType, String scheme, F[] src, List<R> dest, int userId) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,3,0,0,0,0.45,12,9
7193_3,3,3,final String action = intent.getAction();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.32,11,8
7193_4,4,4,final Uri data = intent.getData();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.35,10,7
7193_5,5,5,final String packageName = intent.getPackage();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,3,0,0,1,0.51,9,6
7193_7,7,7,final int N = src != null ? src.length : 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,3,0,0,0,0.45,7,5
7193_8,8,8,boolean hasNonDefaults = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.35,6,4
7193_9,9,9,int i;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.32,5,3
7193_10,10,10,F filter;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.55,4,2
7193_11,11,32,"for (i = 0; i < N && (filter = src[i]) != null; i++) {
int match;

if (packageName != null && !isPackageForFilter(packageName, filter)) {
continue;
}
if (!allowFilterResult(filter, dest)) {
continue;
}

match = filter.filter.match(action, resolvedType, scheme, data, categories, TAG);
if (match >= 0) {
if (!defaultOnly || filter.filter.hasCategory(Intent.CATEGORY_DEFAULT)) {
final R oneResult = newResult(filter, match, userId);
if (oneResult != null) {
dest.add(oneResult);
}
} else {
hasNonDefaults = true;
}
}
}",0,0,1,0,0,0,0,0,0,13,4,22,0,1,0,1,6,3,0,0,2,0.59,0,0
7193_12,12,12,int match;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,3,0,0,0,0.41,2,0
7193_14,14,16,"if (packageName != null && !isPackageForFilter(packageName, filter)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,6,3,0,0,2,0.65,0,0
7193_15,15,15,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.27,1,0
7193_17,17,19,"if (!allowFilterResult(filter, dest)) {
continue;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,6,3,0,0,1,0.52,3,2
7193_18,18,18,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.27,4,2
7193_21,21,21,"match = filter.filter.match(action, resolvedType, scheme, data, categories, TAG);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,3,0,0,1,0.49,7,4
7193_22,22,31,"if (match >= 0) {
if (!defaultOnly || filter.filter.hasCategory(Intent.CATEGORY_DEFAULT)) {
final R oneResult = newResult(filter, match, userId);
if (oneResult != null) {
dest.add(oneResult);
}
} else {
hasNonDefaults = true;
}
}",1,0,0,0,0,0,0,0,0,6,3,10,0,1,0,0,6,3,0,0,1,0.48,8,4
7193_23,23,30,"if (!defaultOnly || filter.filter.hasCategory(Intent.CATEGORY_DEFAULT)) {
final R oneResult = newResult(filter, match, userId);
if (oneResult != null) {
dest.add(oneResult);
}
} else {
hasNonDefaults = true;
}",1,0,0,0,0,0,0,0,0,5,2,8,0,0,0,0,6,3,0,0,1,0.47,9,5
7193_24,24,24,"final R oneResult = newResult(filter, match, userId);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,0,0,1,0.44,10,6
7193_25,25,27,"if (oneResult != null) {
dest.add(oneResult);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,3,0,0,0,0.34,11,7
7193_26,26,26,dest.add(oneResult);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.34,12,8
7193_28,28,28,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.28,14,10
7193_29,29,29,hasNonDefaults = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.32,15,10
7193_34,34,40,"if (hasNonDefaults) {
if (dest.size() == 0) {
VLog.w(TAG, ""resolveIntent failed: found match, but none with CATEGORY_DEFAULT"");
} else if (dest.size() > 1) {
VLog.w(TAG, ""resolveIntent: multiple matches, only some with CATEGORY_DEFAULT"");
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,1,0,6,3,0,0,0,0.43,20,12
7193_35,35,39,"if (dest.size() == 0) {
VLog.w(TAG, ""resolveIntent failed: found match, but none with CATEGORY_DEFAULT"");
} else if (dest.size() > 1) {
VLog.w(TAG, ""resolveIntent: multiple matches, only some with CATEGORY_DEFAULT"");
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,0,0,6,3,0,0,0,0.43,21,12
7193_36,36,36,"VLog.w(TAG, ""resolveIntent failed: found match, but none with CATEGORY_DEFAULT"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.42,22,13
7193_37,37,37,} else if (dest.size() > 1) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.38,23,14
7193_38,38,38,"VLog.w(TAG, ""resolveIntent: multiple matches, only some with CATEGORY_DEFAULT"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,0,0,0,0.4,24,15
7249_1,1,1,    private VUserInfo getUserInfoLocked(int userId) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.49,1,1
7249_2,2,2,VUserInfo ui = mUsers.get(userId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.5,0,0
7249_3,3,6,"if (ui != null && ui.partial && !mRemovingUserIds.contains(userId)) {
VLog.w(LOG_TAG, ""getUserInfo: unknown user #"" + userId);
return null;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,6,3,1,0,5,0.73,0,0
7249_4,4,4,"VLog.w(LOG_TAG, ""getUserInfo: unknown user #"" + userId);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,2,0.55,1,0
7249_5,5,5,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.55,2,1
7249_7,7,7,return ui;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.49,4,3
7250_1,1,2,"@Override
public void setGuestEnabled(boolean enable) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,1,0,0,1,0.42,4,4
7250_3,3,3,"checkManageUsersPermission(""enable guest users"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,0,2,0.62,3,3
7250_4,4,4,synchronized (mPackagesLock) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,0,0,0.27,2,2
7250_5,5,19,"if (mGuestEnabled != enable) {
mGuestEnabled = enable;
for (int i = 0; i < mUsers.size(); i++) {
VUserInfo user = mUsers.valueAt(i);
if (!user.partial && user.isGuest()) {
if (!enable) {
removeUser(user.id);
}
return;
}
}
if (enable) {
createUser(""Guest"", VUserInfo.FLAG_GUEST);
}
}",1,0,0,0,0,0,0,0,0,9,4,15,0,0,0,0,5,1,0,0,2,0.59,0,0
7250_6,6,6,mGuestEnabled = enable;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,0,1,0.5,0,0
7250_7,7,15,"for (int i = 0; i < mUsers.size(); i++) {
VUserInfo user = mUsers.valueAt(i);
if (!user.partial && user.isGuest()) {
if (!enable) {
removeUser(user.id);
}
return;
}
}",0,0,1,0,0,0,0,0,0,5,3,9,0,0,0,0,5,1,0,0,2,0.59,0,0
7250_8,8,8,VUserInfo user = mUsers.valueAt(i);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,1,0,0,1,0.58,1,0
7250_9,9,14,"if (!user.partial && user.isGuest()) {
if (!enable) {
removeUser(user.id);
}
return;
}",1,0,0,0,0,0,0,0,0,3,2,6,0,1,0,0,5,1,0,0,2,0.6,2,1
7250_10,10,12,"if (!enable) {
removeUser(user.id);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,1,0,0,1,0.52,3,2
7250_11,11,11,removeUser(user.id);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,0,1,0.56,4,3
7250_13,13,13,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,1,0,0,0,0.2,6,5
7250_16,16,18,"if (enable) {
createUser(""Guest"", VUserInfo.FLAG_GUEST);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,1,0,0,2,0.62,9,6
7250_17,17,17,"createUser(""Guest"", VUserInfo.FLAG_GUEST);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,0,2,0.64,10,6
7251_1,1,1,private void upgradeIfNecessary() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.35,2,2
7251_2,2,2,int userVersion = mUserVersion;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.36,1,1
7251_3,3,10,"if (userVersion < 1) {
VUserInfo user = mUsers.get(VUserHandle.USER_OWNER);
if (""Primary"".equals(user.name)) {
user.name = ""Admin"";
writeUserLocked(user);
}
userVersion = 1;
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,1,6,4,0,0,2,0.52,0,0
7251_4,4,4,VUserInfo user = mUsers.get(VUserHandle.USER_OWNER);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,1,0.46,0,0
7251_5,5,8,"if (""Primary"".equals(user.name)) {
user.name = ""Admin"";
writeUserLocked(user);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,6,4,0,0,1,0.51,1,0
7251_6,6,6,"user.name = ""Admin"";",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,1,0.56,2,1
7251_7,7,7,writeUserLocked(user);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.32,3,2
7251_9,9,9,userVersion = 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.3,5,4
7251_12,12,18,"if (userVersion < USER_VERSION) {
VLog.w(LOG_TAG, ""User version "" + mUserVersion + "" didn't upgrade as expected to ""
+ USER_VERSION);
} else {
mUserVersion = userVersion;
writeUserListLocked();
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,1,0,6,4,0,0,0,0.38,8,5
7251_13,13,14,"VLog.w(LOG_TAG, ""User version "" + mUserVersion + "" didn't upgrade as expected to ""
+ USER_VERSION);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,0,0,0,0.38,9,5
7251_15,15,15,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.29,11,7
7251_16,16,16,mUserVersion = userVersion;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.34,12,7
7251_17,17,17,writeUserListLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.3,13,8
7252_1,1,1,    void finishRemoveUser(final int userHandle) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,5,2,0,2,0.56,1,1
7252_2,2,2,"if (DBG) VLog.i(LOG_TAG, ""finishRemoveUser "" + userHandle);",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,5,2,0,2,0.56,0,0
7252_3,3,3,long identity = Binder.clearCallingIdentity();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,14,5,2,0,0,0.38,0,0
7252_4,4,31,"try {
Intent addedIntent = new Intent(Constants.ACTION_USER_REMOVED);
addedIntent.putExtra(Constants.EXTRA_USER_HANDLE, userHandle);
VActivityManagerService.get().sendOrderedBroadcastAsUser(addedIntent, VUserHandle.ALL,
null,
new BroadcastReceiver() {
@Override
public void onReceive(Context context, Intent intent) {
if (DBG) {
VLog.i(LOG_TAG,
""USER_REMOVED broadcast sent, cleaning up user data ""
+ userHandle);
}
new Thread() {
public void run() {
synchronized (mInstallLock) {
synchronized (mPackagesLock) {
removeUserStateLocked(userHandle);
}
}
}
}.start();
}
},
null, Activity.RESULT_OK, null, null);
} finally {
Binder.restoreCallingIdentity(identity);
}",0,0,0,0,1,0,0,0,0,15,7,28,0,1,0,0,14,5,2,0,6,0.62,1,0
7252_5,5,5,Intent addedIntent = new Intent(Constants.ACTION_USER_REMOVED);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,14,5,2,0,2,0.51,2,1
7252_6,6,6,"addedIntent.putExtra(Constants.EXTRA_USER_HANDLE, userHandle);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,14,5,2,0,1,0.48,3,2
7252_7,7,9,"VActivityManagerService.get().sendOrderedBroadcastAsUser(addedIntent, VUserHandle.ALL,
null,
new BroadcastReceiver() {",0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,14,5,2,0,3,0.54,4,3
7252_10,10,11,"@Override
public void onReceive(Context context, Intent intent) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,14,5,2,0,0,0.34,7,5
7252_12,12,16,"if (DBG) {
VLog.i(LOG_TAG,
""USER_REMOVED broadcast sent, cleaning up user data ""
+ userHandle);
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,14,5,2,0,3,0.6,9,6
7252_13,13,15,"VLog.i(LOG_TAG,
""USER_REMOVED broadcast sent, cleaning up user data ""
+ userHandle);",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,14,5,2,0,3,0.58,10,6
7252_17,17,17,new Thread() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,5,2,0,0,0.3,14,8
7252_18,18,18,public void run() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,5,2,0,0,0.36,15,8
7252_19,19,19,synchronized (mInstallLock) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,5,2,0,0,0.42,16,9
7252_20,20,20,synchronized (mPackagesLock) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,5,2,0,0,0.43,17,10
7252_21,21,21,removeUserStateLocked(userHandle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,5,2,0,3,0.68,18,11
7252_25,25,25,}.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,5,2,0,0,0.23,22,13
7252_27,27,28,"},
null, Activity.RESULT_OK, null, null);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,14,5,2,0,1,0.34,24,14
7252_29,29,29,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,5,2,0,0,0.19,26,15
7252_30,30,30,Binder.restoreCallingIdentity(identity);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,5,2,0,0,0.38,27,15
7253_1,1,1,    private void removeUserStateLocked(int userHandle) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.34,0,0
7253_2,2,2,mPm.cleanUpUser(userHandle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,4,0,0,0,0.37,0,0
7253_4,4,4,mUsers.remove(userHandle);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,4,4,0,0,0,0.32,2,1
7253_5,5,5,mRemovingUserIds.remove(userHandle);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.33,3,1
7253_6,6,6,"AtomicFile userFile = new AtomicFile(new File(mUsersDir, userHandle + "".xml""));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.35,4,2
7253_7,7,7,userFile.delete();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.3,5,3
7253_8,8,8,writeUserListLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.32,6,4
7253_9,9,9,updateUserIdsLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.33,7,5
7253_10,10,10,removeDirectoryRecursive(VEnvironment.getUserSystemDirectory(userHandle));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.37,8,6
7254_1,1,1,    private void removeUserStateLocked(int userHandle) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.63,2,1
7254_2,2,2,mPm.cleanUpUser(userHandle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,1,0.6,1,0
7254_4,4,4,mUsers.remove(userHandle);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,2,0,0,2,0.79,0,0
7254_5,5,5,mRemovingUserIds.remove(userHandle);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,2,0.76,1,0
7254_6,6,6,"AtomicFile userFile = new AtomicFile(new File(mUsersDir, userHandle + "".xml""));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.48,2,1
7254_7,7,7,userFile.delete();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.56,3,2
7254_8,8,8,writeUserListLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.69,4,3
7254_9,9,9,updateUserIdsLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.46,5,4
7254_10,10,10,removeDirectoryRecursive(VEnvironment.getUserSystemDirectory(userHandle));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.64,6,5
7255_1,1,1,    private void removeUserStateLocked(int userHandle) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,2,0.66,4,3
7255_2,2,2,mPm.cleanUpUser(userHandle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,1,0,1,0.61,3,2
7255_4,4,4,mUsers.remove(userHandle);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,2,1,0,2,0.77,1,1
7255_5,5,5,mRemovingUserIds.remove(userHandle);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,1,0,2,0.75,0,0
7255_6,6,6,"AtomicFile userFile = new AtomicFile(new File(mUsersDir, userHandle + "".xml""));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,2,0.72,0,0
7255_7,7,7,userFile.delete();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,1,0,2,0.82,1,0
7255_8,8,8,writeUserListLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.49,2,1
7255_9,9,9,updateUserIdsLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.47,3,2
7255_10,10,10,removeDirectoryRecursive(VEnvironment.getUserSystemDirectory(userHandle));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,2,0.66,4,3
7256_1,1,1,    private void removeUserStateLocked(int userHandle) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.51,6,5
7256_2,2,2,mPm.cleanUpUser(userHandle);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,1,0.54,5,4
7256_4,4,4,mUsers.remove(userHandle);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,3,2,0,0,1,0.57,3,3
7256_5,5,5,mRemovingUserIds.remove(userHandle);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,1,0.52,2,2
7256_6,6,6,"AtomicFile userFile = new AtomicFile(new File(mUsersDir, userHandle + "".xml""));",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.52,1,1
7256_7,7,7,userFile.delete();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.48,0,0
7256_8,8,8,writeUserListLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.68,0,0
7256_9,9,9,updateUserIdsLocked();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,2,0.69,1,0
7256_10,10,10,removeDirectoryRecursive(VEnvironment.getUserSystemDirectory(userHandle));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.47,2,1
7197_1,1,1,"public static void addApp(AppInfoLite info, UpdateListener refreshListener) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.34,25,19
7197_2,2,2,class AddResult {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.23,24,18
7197_3,3,3,private PackageAppData appData;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.32,23,17
7197_4,4,4,private int userId;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.44,22,16
7197_5,5,5,private boolean justEnableHidden;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.38,21,15
7197_7,7,7,AddResult addResult = new AddResult();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.26,19,14
7197_8,8,8,VUiKit.defer().when(() -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.28,18,13
7197_9,9,9,"InstalledAppInfo installedAppInfo = VirtualCore.get().getInstalledAppInfo(info.packageName, 0);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.33,17,12
7197_10,10,10,addResult.justEnableHidden = installedAppInfo != null;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.35,16,11
7197_12,12,14,"if (info.disableMultiVersion) {
addResult.justEnableHidden = false;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,4,2,1,0,0,0.35,12,9
7197_13,13,13,addResult.justEnableHidden = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.34,13,9
7197_15,15,61,"if (addResult.justEnableHidden) {
int[] userIds = installedAppInfo.getInstalledUsers();
int nextUserId = userIds.length;
for (int i = 0; i < userIds.length; i++) {
if (userIds[i] != i) {
nextUserId = i;
break;
}
}
addResult.userId = nextUserId;

if (VUserManager.get().getUserInfo(nextUserId) == null) {
String nextUserName = ""Space "" + (nextUserId + 1);
VUserInfo newUserInfo = VUserManager.get().createUser(nextUserName, VUserInfo.FLAG_ADMIN);
if (newUserInfo == null) {
throw new IllegalStateException();
}
}
boolean success = VirtualCore.get().installPackageAsUser(nextUserId, info.packageName);
if (!success) {
throw new IllegalStateException();
}
} else {
PackageInfo pkgInfo = null;
try {
pkgInfo = XApp.getApp().getPackageManager().getPackageArchiveInfo(info.path, 0);
pkgInfo.applicationInfo.sourceDir = info.path;
pkgInfo.applicationInfo.publicSourceDir = info.path;
} catch (Exception e) {
}
if(pkgInfo != null) {
PackageAppData data = PackageAppDataStorage.get().acquire(pkgInfo.applicationInfo);
addResult.appData = data;
data.isInstalling = true;
data.isFirstOpen = false;
if (refreshListener != null) {
refreshListener.update(data);
}
}

InstallResult res = addVirtualApp(info);
if (!res.isSuccess) {
if (addResult.appData != null) {
}
throw new IllegalStateException(res.error);
}
}",1,0,0,0,0,0,0,0,0,33,3,47,0,1,0,0,4,2,1,0,2,0.55,0,0
7197_16,16,16,int[] userIds = installedAppInfo.getInstalledUsers();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.44,10,7
7197_17,17,17,int nextUserId = userIds.length;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.43,9,6
7197_18,18,23,"for (int i = 0; i < userIds.length; i++) {
if (userIds[i] != i) {
nextUserId = i;
break;
}
}",0,0,1,0,0,0,0,0,0,3,2,6,0,1,0,0,4,2,1,0,1,0.43,3,2
7197_19,19,22,"if (userIds[i] != i) {
nextUserId = i;
break;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,4,2,1,0,1,0.46,4,2
7197_20,20,20,nextUserId = i;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.45,6,3
7197_21,21,21,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,2,1,0,0,0.15,5,2
7197_24,24,24,addResult.userId = nextUserId;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,1,0.44,2,1
7197_26,26,32,"if (VUserManager.get().getUserInfo(nextUserId) == null) {
String nextUserName = ""Space "" + (nextUserId + 1);
VUserInfo newUserInfo = VUserManager.get().createUser(nextUserName, VUserInfo.FLAG_ADMIN);
if (newUserInfo == null) {
throw new IllegalStateException();
}
}",1,0,0,0,0,0,0,0,0,4,2,7,1,1,1,0,4,2,1,0,2,0.59,0,0
7197_27,27,27,"String nextUserName = ""Space "" + (nextUserId + 1);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.4,0,0
7197_28,28,28,"VUserInfo newUserInfo = VUserManager.get().createUser(nextUserName, VUserInfo.FLAG_ADMIN);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.59,1,0
7197_29,29,31,"if (newUserInfo == null) {
throw new IllegalStateException();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,2,1,0,1,0.52,2,1
7197_30,30,30,throw new IllegalStateException();,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,1,0,0,0.39,3,2
7197_33,33,33,"boolean success = VirtualCore.get().installPackageAsUser(nextUserId, info.packageName);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,2,1,0,1,0.46,6,4
7197_34,34,36,"if (!success) {
throw new IllegalStateException();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,2,1,0,0,0.4,7,4
7197_35,35,35,throw new IllegalStateException();,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,1,0,0,0.39,8,5
7197_37,37,37,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.15,10,7
7197_38,38,38,PackageInfo pkgInfo = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.29,11,7
7197_39,39,44,"try {
pkgInfo = XApp.getApp().getPackageManager().getPackageArchiveInfo(info.path, 0);
pkgInfo.applicationInfo.sourceDir = info.path;
pkgInfo.applicationInfo.publicSourceDir = info.path;
} catch (Exception e) {
}",0,0,0,0,1,0,0,0,0,4,1,6,0,1,0,0,4,2,1,0,0,0.36,12,8
7197_40,40,40,"pkgInfo = XApp.getApp().getPackageManager().getPackageArchiveInfo(info.path, 0);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.36,13,9
7197_41,41,41,pkgInfo.applicationInfo.sourceDir = info.path;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.29,14,10
7197_42,42,42,pkgInfo.applicationInfo.publicSourceDir = info.path;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.29,15,11
7197_43,43,43,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.28,16,12
7197_45,45,53,"if(pkgInfo != null) {
PackageAppData data = PackageAppDataStorage.get().acquire(pkgInfo.applicationInfo);
addResult.appData = data;
data.isInstalling = true;
data.isFirstOpen = false;
if (refreshListener != null) {
refreshListener.update(data);
}
}",1,0,0,0,0,0,0,0,0,6,2,9,0,1,0,1,4,2,1,0,0,0.36,18,14
7197_46,46,46,PackageAppData data = PackageAppDataStorage.get().acquire(pkgInfo.applicationInfo);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.36,19,14
7197_47,47,47,addResult.appData = data;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.29,20,15
7197_48,48,48,data.isInstalling = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.27,21,16
7197_49,49,49,data.isFirstOpen = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.27,22,17
7197_50,50,52,"if (refreshListener != null) {
refreshListener.update(data);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,2,1,0,0,0.33,23,18
7197_51,51,51,refreshListener.update(data);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.31,24,19
7197_55,55,55,InstallResult res = addVirtualApp(info);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,2,1,0,0,0.29,28,21
7197_56,56,60,"if (!res.isSuccess) {
if (addResult.appData != null) {
}
throw new IllegalStateException(res.error);
}",1,0,0,0,0,0,0,0,0,2,2,5,0,1,0,0,4,2,1,0,0,0.4,29,21
7197_57,57,58,"if (addResult.appData != null) {
}",1,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,4,2,1,0,0,0.31,30,22
7197_59,59,59,throw new IllegalStateException(res.error);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,2,1,0,0,0.4,32,24
7197_62,62,62,}).then((res) -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.3,35,25
7197_63,63,65,"if (addResult.appData == null) {
addResult.appData = PackageAppDataStorage.get().acquire(info.packageName);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,2,1,0,0,0.35,36,25
7197_64,64,64,addResult.appData = PackageAppDataStorage.get().acquire(info.packageName);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.35,37,26
7197_66,66,66,}).done(res -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.33,39,28
7197_67,67,67,boolean multipleVersion = addResult.justEnableHidden && addResult.userId != 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.43,40,28
7197_68,68,86,"if (!multipleVersion) {
PackageAppData data = addResult.appData;
data.isInstalling = false;
data.isLoading = true;

if (refreshListener != null) {
refreshListener.update(data);
}
handleOptApp(data, info.packageName, true, refreshListener);
} else {
MultiplePackageAppData data = new MultiplePackageAppData(addResult.appData, addResult.userId);
data.isInstalling = false;
data.isLoading = true;

if (refreshListener != null) {
refreshListener.update(data);
}
handleOptApp(data, info.packageName, false, refreshListener);
}",1,0,0,0,0,0,0,0,0,13,2,19,0,1,0,0,4,2,1,0,1,0.45,41,29
7197_69,69,69,PackageAppData data = addResult.appData;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.3,42,30
7197_70,70,70,data.isInstalling = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.27,43,31
7197_71,71,71,data.isLoading = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.25,44,32
7197_73,73,75,"if (refreshListener != null) {
refreshListener.update(data);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,4,2,1,0,0,0.33,46,34
7197_74,74,74,refreshListener.update(data);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.31,47,34
7197_76,76,76,"handleOptApp(data, info.packageName, true, refreshListener);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.36,49,36
7197_77,77,77,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.15,50,36
7197_78,78,78,"MultiplePackageAppData data = new MultiplePackageAppData(addResult.appData, addResult.userId);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.44,51,37
7197_79,79,79,data.isInstalling = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.27,52,38
7197_80,80,80,data.isLoading = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,1,0,0,0.25,53,39
7197_82,82,84,"if (refreshListener != null) {
refreshListener.update(data);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,1,0,4,2,1,0,0,0.33,55,41
7197_83,83,83,refreshListener.update(data);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.31,56,41
7197_85,85,85,"handleOptApp(data, info.packageName, false, refreshListener);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.36,58,43
7197_87,87,87,}).fail(result -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.24,60,44
7197_88,88,91,"if (refreshListener != null) {
refreshListener.fail(result.getMessage());

}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,0,0,4,2,1,0,0,0.32,61,44
7197_89,89,89,refreshListener.fail(result.getMessage());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,0,0.3,62,45
1770_1,1,2,"@Override
public Object call(Object who, Method method, Object... args) throws Throwable {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,20,10,3,0,0,0.35,4,3
1770_3,3,3,ActivityManager.TaskDescription td = (ActivityManager.TaskDescription) args[1];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,20,10,3,0,1,0.45,3,2
1770_4,4,4,String label = td.getLabel();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,20,10,3,0,1,0.52,2,1
1770_5,5,5,Bitmap icon = td.getIcon();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,20,10,3,0,1,0.55,1,0
1770_7,7,25,"if (label == null || icon == null) {
Application app = VClientImpl.get().getCurrentApplication();
if (app != null) {
try {
if (label == null) {
label = app.getApplicationInfo().loadLabel(app.getPackageManager()).toString();
}
if (icon == null) {
Drawable drawable = app.getApplicationInfo().loadIcon(app.getPackageManager());
if (drawable != null) {
icon = DrawableUtils.drawableToBitMap(drawable);
}
}
td = new ActivityManager.TaskDescription(label, icon, td.getPrimaryColor());
} catch (Throwable e) {
e.printStackTrace();
}
}
}",1,0,0,0,0,0,0,0,0,12,5,19,0,0,1,1,20,10,3,0,7,0.67,0,0
1770_8,8,8,Application app = VClientImpl.get().getCurrentApplication();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,20,10,3,0,3,0.58,1,0
1770_9,9,24,"if (app != null) {
try {
if (label == null) {
label = app.getApplicationInfo().loadLabel(app.getPackageManager()).toString();
}
if (icon == null) {
Drawable drawable = app.getApplicationInfo().loadIcon(app.getPackageManager());
if (drawable != null) {
icon = DrawableUtils.drawableToBitMap(drawable);
}
}
td = new ActivityManager.TaskDescription(label, icon, td.getPrimaryColor());
} catch (Throwable e) {
e.printStackTrace();
}
}",1,0,0,0,0,0,0,0,0,10,4,16,0,1,0,0,20,10,3,0,6,0.65,2,1
1770_10,10,23,"try {
if (label == null) {
label = app.getApplicationInfo().loadLabel(app.getPackageManager()).toString();
}
if (icon == null) {
Drawable drawable = app.getApplicationInfo().loadIcon(app.getPackageManager());
if (drawable != null) {
icon = DrawableUtils.drawableToBitMap(drawable);
}
}
td = new ActivityManager.TaskDescription(label, icon, td.getPrimaryColor());
} catch (Throwable e) {
e.printStackTrace();
}",0,0,0,0,1,0,0,0,0,9,3,14,0,0,0,0,20,10,3,0,6,0.65,3,2
1770_11,11,13,"if (label == null) {
label = app.getApplicationInfo().loadLabel(app.getPackageManager()).toString();
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,20,10,3,0,4,0.63,4,3
1770_12,12,12,label = app.getApplicationInfo().loadLabel(app.getPackageManager()).toString();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,10,3,0,4,0.62,5,4
1770_14,14,19,"if (icon == null) {
Drawable drawable = app.getApplicationInfo().loadIcon(app.getPackageManager());
if (drawable != null) {
icon = DrawableUtils.drawableToBitMap(drawable);
}
}",1,0,0,0,0,0,0,0,0,3,2,6,1,1,0,0,20,10,3,0,4,0.61,7,6
1770_15,15,15,Drawable drawable = app.getApplicationInfo().loadIcon(app.getPackageManager());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,20,10,3,0,4,0.63,8,6
1770_16,16,18,"if (drawable != null) {
icon = DrawableUtils.drawableToBitMap(drawable);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,20,10,3,0,1,0.48,9,7
1770_17,17,17,icon = DrawableUtils.drawableToBitMap(drawable);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,10,3,0,1,0.49,10,8
1770_20,20,20,"td = new ActivityManager.TaskDescription(label, icon, td.getPrimaryColor());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,20,10,3,0,3,0.56,13,10
1770_21,21,21,} catch (Throwable e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,10,3,0,0,0.33,14,10
1770_22,22,22,e.printStackTrace();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,10,3,0,0,0.39,15,11
1770_27,27,27,TaskDescriptionDelegate descriptionDelegate = VirtualCore.get().getTaskDescriptionDelegate();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,20,10,3,0,0,0.41,20,13
1770_28,28,30,"if (descriptionDelegate != null) {
td = descriptionDelegate.getTaskDescription(td);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,20,10,3,0,0,0.4,21,13
1770_29,29,29,td = descriptionDelegate.getTaskDescription(td);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,10,3,0,0,0.4,22,14
1770_32,32,32,args[1] = td;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,20,10,3,0,0,0.37,25,16
1770_33,33,33,"return method.invoke(who, args);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,20,10,3,0,0,0.36,26,16
1771_1,1,1,        private Intent handleIntent(final Intent intent) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.63,13,9
1771_2,2,2,final String action = intent.getAction();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,4,1,0,2,0.63,12,8
1771_3,3,18,"if (""android.intent.action.CREATE_SHORTCUT"".equals(action)
|| ""com.android.launcher.action.INSTALL_SHORTCUT"".equals(action)) {

return VASettings.ENABLE_INNER_SHORTCUT ? handleInstallShortcutIntent(intent) : null;

} else if (""com.android.launcher.action.UNINSTALL_SHORTCUT"".equals(action)) {

handleUninstallShortcutIntent(intent);

} else if (BadgerManager.handleBadger(intent)) {
return null;
} else if (Intent.ACTION_MEDIA_SCANNER_SCAN_FILE.equals(action)) {
return handleMediaScannerIntent(intent);
} else {
return ComponentUtils.redirectBroadcastIntent(intent, VUserHandle.myUserId());
}",1,0,0,0,0,0,0,0,0,10,1,16,0,1,0,0,7,4,1,0,2,0.63,0,0
1771_4,4,4,"|| ""com.android.launcher.action.INSTALL_SHORTCUT"".equals(action)) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.58,10,6
1771_6,6,6,return VASettings.ENABLE_INNER_SHORTCUT ? handleInstallShortcutIntent(intent) : null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,7,4,1,0,1,0.52,8,5
1771_8,8,8,"} else if (""com.android.launcher.action.UNINSTALL_SHORTCUT"".equals(action)) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.57,6,4
1771_10,10,10,handleUninstallShortcutIntent(intent);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,4,1,0,1,0.62,4,3
1771_12,12,12,} else if (BadgerManager.handleBadger(intent)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.53,2,2
1771_13,13,13,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.21,1,1
1771_14,14,14,} else if (Intent.ACTION_MEDIA_SCANNER_SCAN_FILE.equals(action)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,2,0.6,0,0
1771_15,15,15,return handleMediaScannerIntent(intent);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.57,0,0
1771_16,16,16,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.17,1,0
1771_17,17,17,"return ComponentUtils.redirectBroadcastIntent(intent, VUserHandle.myUserId());",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.57,2,1
1771_19,19,19,return intent;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,4,1,0,1,0.55,4,3
665_1,1,1,"    public synchronized StoredContractDetails getSnapshot(InternalVmType vm, byte[] key, byte[] storageRoot) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,2,0.59,3,2
665_2,2,2,Optional<byte[]> rawDetails = detailsSrc.get(key);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,3,0,0,2,0.66,2,1
665_4,4,17,"if (rawDetails.isPresent()) {
RLPContractDetails rlpDetails = fromEncoding(rawDetails.get());
ByteArrayKeyValueStore storage = createStorageSource(rlpDetails.address);
if (vm == InternalVmType.AVM) {
ByteArrayKeyValueStore graph = createGraphSource(rlpDetails.address);
return AvmContractDetails.decodeAtRoot(rlpDetails, storage, graph, storageRoot);
} else if (vm == InternalVmType.FVM) {
return FvmContractDetails.decodeAtRoot(rlpDetails, storage, storageRoot);
} else {
return null;
}
} else {
return null;
}",1,0,0,0,0,0,0,0,0,11,2,14,0,0,1,0,5,3,0,0,4,0.72,0,0
665_5,5,5,RLPContractDetails rlpDetails = fromEncoding(rawDetails.get());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,2,0.73,0,0
665_6,6,6,ByteArrayKeyValueStore storage = createStorageSource(rlpDetails.address);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.46,1,0
665_7,7,14,"if (vm == InternalVmType.AVM) {
ByteArrayKeyValueStore graph = createGraphSource(rlpDetails.address);
return AvmContractDetails.decodeAtRoot(rlpDetails, storage, graph, storageRoot);
} else if (vm == InternalVmType.FVM) {
return FvmContractDetails.decodeAtRoot(rlpDetails, storage, storageRoot);
} else {
return null;
}",1,0,0,0,0,0,0,0,0,6,1,8,0,1,0,0,5,3,0,0,3,0.65,2,1
665_8,8,8,ByteArrayKeyValueStore graph = createGraphSource(rlpDetails.address);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,0,0,1,0.48,3,2
665_9,9,9,"return AvmContractDetails.decodeAtRoot(rlpDetails, storage, graph, storageRoot);",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,3,0,0,3,0.69,4,3
665_10,10,10,} else if (vm == InternalVmType.FVM) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.38,5,4
665_11,11,11,"return FvmContractDetails.decodeAtRoot(rlpDetails, storage, storageRoot);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,3,0.7,6,5
665_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.3,7,6
665_13,13,13,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.55,8,7
665_15,15,15,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,0,0,0,0.3,10,9
665_16,16,16,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,0,0,1,0.55,11,9
666_1,1,1,"public synchronized void update(AionAddress key, StoredContractDetails contractDetails) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.33,0,0
666_2,2,2,byte[] rawDetails = contractDetails.getEncoded();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.32,0,0
666_3,3,3,"detailsSrc.put(key.toByteArray(), rawDetails);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.54,1,0
666_4,4,4,detailsSrc.commit();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.33,2,1
666_5,5,5,contractDetails.syncStorage();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.32,3,2
7650_1,1,1,public synchronized TxResponse addTransactionFromApiServer(AionTransaction tx) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.55,7,4
7650_3,3,3,TxResponse response = validateTx(tx);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,7,0,0,0,0.47,5,3
7650_4,4,7,"if (response.isFail()) {
LOGGER_TX.warn(""tx is not valid - status: {} tx: {}"", response.name(), tx);
return response;
}",1,0,0,0,0,0,0,0,0,2,2,4,0,1,0,1,7,7,0,0,1,0.51,1,0
7650_5,5,5,"LOGGER_TX.warn(""tx is not valid - status: {} tx: {}"", response.name(), tx);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,7,0,0,1,0.53,3,1
7650_6,6,6,return response;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,7,7,0,0,0,0.26,2,0
7650_9,9,12,"if (isSeedMode || !closeToNetworkBest) {
transactionBroadcastCallback.broadcastTransactions(Collections.singletonList(tx));
return TxResponse.SUCCESS;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,7,7,0,0,5,0.75,0,0
7650_10,10,10,transactionBroadcastCallback.broadcastTransactions(Collections.singletonList(tx));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,2,0.65,1,0
7650_11,11,11,return TxResponse.SUCCESS;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.45,2,1
7650_14,14,14,return addPendingTransactions(Collections.singletonList(tx)).get(0);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,7,0,0,1,0.48,5,3
7651_1,1,1,    public synchronized void addTransactionsFromNetwork(List<AionTransaction> transactions) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,2,0.61,8,4
7651_2,2,2,List<AionTransaction> validTransactions = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,7,0,0,1,0.44,7,3
7651_4,4,8,"for (AionTransaction tx : transactions) {
if (!TXValidator.isInCache(ByteArrayWrapper.wrap(tx.getTransactionHash())) && !validateTx(tx).isFail()) {
validTransactions.add(tx);
}
}",0,0,0,1,0,0,0,0,0,2,2,5,0,0,1,1,7,7,0,0,1,0.54,1,0
7651_5,5,7,"if (!TXValidator.isInCache(ByteArrayWrapper.wrap(tx.getTransactionHash())) && !validateTx(tx).isFail()) {
validTransactions.add(tx);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,7,7,0,0,1,0.51,2,0
7651_6,6,6,validTransactions.add(tx);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.52,3,0
7651_10,10,14,"if (isSeedMode || !closeToNetworkBest) {
transactionBroadcastCallback.broadcastTransactions(validTransactions);
} else {
addPendingTransactions(validTransactions);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,7,7,0,0,5,0.76,0,0
7651_11,11,11,transactionBroadcastCallback.broadcastTransactions(validTransactions);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,2,0.67,1,0
7651_12,12,12,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,0,0.21,2,1
7651_13,13,13,addPendingTransactions(validTransactions);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,7,0,0,1,0.51,3,2
7652_1,1,1,private TxResponse addPendingTransactionInner(final AionTransaction tx) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.25,2,1
7652_3,3,40,"if (txPool.isContained(tx.getSenderAddress(), tx.getNonceBI())) {
PooledTransaction poolTx = txPool.getPoolTx(tx.getSenderAddress(), tx.getNonceBI());
BigInteger repayValidPrice = BigInteger.valueOf(poolTx.tx.getEnergyPrice()).multiply(BigInteger.TWO);
if (BigInteger.valueOf(tx.getEnergyPrice()).compareTo(repayValidPrice) >= 0) {
if (repayTransaction.size() < (txPool.maxPoolSize / 4)) {
repayTransaction.add(tx);
return TxResponse.REPAID;
} else {
fireDroppedTx(tx, TxResponse.REPAYTX_BUFFER_FULL.getMessage());
return TxResponse.DROPPED;
}
} else {
fireDroppedTx(tx, TxResponse.REPAYTX_LOWPRICE.getMessage());
return TxResponse.REPAYTX_LOWPRICE;
}
} else {
AionTxExecSummary txSum = executeTx(tx);
if (txSum.isRejected()) {
LOGGER_TX.debug(
""addPendingTransactionImpl tx: {} is rejected due to: {}"",
Hex.toHexString(tx.getTransactionHash()),
txSum.getReceipt().getError());

fireTxUpdate(txSum.getReceipt(), PendingTransactionState.DROPPED, currentBestBlock.get());
return TxResponse.DROPPED;
} else {
PooledTransaction pendingTx = new PooledTransaction(tx, txSum.getReceipt().getEnergyUsed());
LOGGER_TX.debug(""addPendingTransactionImpl validTx: {}"", tx);

PooledTransaction rtn = this.txPool.add(pendingTx);
if (rtn == null|| rtn != pendingTx) {
throw new IllegalStateException(""The pool data has broken, missing the tx: "" + pendingTx);
} else {
fireTxUpdate(txSum.getReceipt(), PendingTransactionState.NEW_PENDING, currentBestBlock.get());
return TxResponse.SUCCESS;
}
}
}",1,0,0,0,0,0,0,0,0,27,3,38,0,0,1,0,3,3,0,0,1,0.41,0,0
7652_4,4,4,"PooledTransaction poolTx = txPool.getPoolTx(tx.getSenderAddress(), tx.getNonceBI());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.43,0,0
7652_5,5,5,BigInteger repayValidPrice = BigInteger.valueOf(poolTx.tx.getEnergyPrice()).multiply(BigInteger.TWO);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,3,0,0,1,0.46,1,0
7652_6,6,17,"if (BigInteger.valueOf(tx.getEnergyPrice()).compareTo(repayValidPrice) >= 0) {
if (repayTransaction.size() < (txPool.maxPoolSize / 4)) {
repayTransaction.add(tx);
return TxResponse.REPAID;
} else {
fireDroppedTx(tx, TxResponse.REPAYTX_BUFFER_FULL.getMessage());
return TxResponse.DROPPED;
}
} else {
fireDroppedTx(tx, TxResponse.REPAYTX_LOWPRICE.getMessage());
return TxResponse.REPAYTX_LOWPRICE;
}",1,0,0,0,0,0,0,0,0,9,2,12,1,1,0,0,3,3,0,0,1,0.4,2,1
7652_7,7,13,"if (repayTransaction.size() < (txPool.maxPoolSize / 4)) {
repayTransaction.add(tx);
return TxResponse.REPAID;
} else {
fireDroppedTx(tx, TxResponse.REPAYTX_BUFFER_FULL.getMessage());
return TxResponse.DROPPED;
}",1,0,0,0,0,0,0,0,0,5,1,7,0,0,0,0,3,3,0,0,0,0.39,3,2
7652_8,8,8,repayTransaction.add(tx);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.25,4,3
7652_9,9,9,return TxResponse.REPAID;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.26,5,4
7652_10,10,10,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.1,6,5
7652_11,11,11,"fireDroppedTx(tx, TxResponse.REPAYTX_BUFFER_FULL.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.28,7,6
7652_12,12,12,return TxResponse.DROPPED;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.24,8,7
7652_14,14,14,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.1,10,9
7652_15,15,15,"fireDroppedTx(tx, TxResponse.REPAYTX_LOWPRICE.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.28,11,9
7652_16,16,16,return TxResponse.REPAYTX_LOWPRICE;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.26,12,10
7652_18,18,18,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.1,14,12
7652_19,19,19,AionTxExecSummary txSum = executeTx(tx);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.36,15,12
7652_20,20,39,"if (txSum.isRejected()) {
LOGGER_TX.debug(
""addPendingTransactionImpl tx: {} is rejected due to: {}"",
Hex.toHexString(tx.getTransactionHash()),
txSum.getReceipt().getError());

fireTxUpdate(txSum.getReceipt(), PendingTransactionState.DROPPED, currentBestBlock.get());
return TxResponse.DROPPED;
} else {
PooledTransaction pendingTx = new PooledTransaction(tx, txSum.getReceipt().getEnergyUsed());
LOGGER_TX.debug(""addPendingTransactionImpl validTx: {}"", tx);

PooledTransaction rtn = this.txPool.add(pendingTx);
if (rtn == null|| rtn != pendingTx) {
throw new IllegalStateException(""The pool data has broken, missing the tx: "" + pendingTx);
} else {
fireTxUpdate(txSum.getReceipt(), PendingTransactionState.NEW_PENDING, currentBestBlock.get());
return TxResponse.SUCCESS;
}
}",1,0,0,0,0,0,0,0,0,12,2,20,0,1,0,0,3,3,0,0,1,0.4,16,13
7652_21,21,24,"LOGGER_TX.debug(
""addPendingTransactionImpl tx: {} is rejected due to: {}"",
Hex.toHexString(tx.getTransactionHash()),
txSum.getReceipt().getError());",0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,1,3,3,0,0,0,0.37,17,14
7652_26,26,26,"fireTxUpdate(txSum.getReceipt(), PendingTransactionState.DROPPED, currentBestBlock.get());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.35,22,16
7652_27,27,27,return TxResponse.DROPPED;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.24,23,16
7652_28,28,28,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.1,24,17
7652_29,29,29,"PooledTransaction pendingTx = new PooledTransaction(tx, txSum.getReceipt().getEnergyUsed());",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.4,25,18
7652_30,30,30,"LOGGER_TX.debug(""addPendingTransactionImpl validTx: {}"", tx);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,3,0,0,0,0.4,26,19
7652_32,32,32,PooledTransaction rtn = this.txPool.add(pendingTx);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,3,0,0,0,0.41,28,21
7652_33,33,38,"if (rtn == null|| rtn != pendingTx) {
throw new IllegalStateException(""The pool data has broken, missing the tx: "" + pendingTx);
} else {
fireTxUpdate(txSum.getReceipt(), PendingTransactionState.NEW_PENDING, currentBestBlock.get());
return TxResponse.SUCCESS;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,0,3,3,0,0,0,0.39,29,21
7652_34,34,34,"throw new IllegalStateException(""The pool data has broken, missing the tx: "" + pendingTx);",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,3,0,0,0,0.39,30,22
7652_35,35,35,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.1,31,23
7652_36,36,36,"fireTxUpdate(txSum.getReceipt(), PendingTransactionState.NEW_PENDING, currentBestBlock.get());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.35,32,24
7652_37,37,37,return TxResponse.SUCCESS;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.28,33,25
7653_1,1,2,"    @Override
public synchronized void applyBlockUpdate(Block newBlock, List<AionTxReceipt> receipts) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,1,0,1,0.44,2,1
7653_4,4,6,"if (isSeedMode) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,6,4,1,0,2,0.61,0,0
7653_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.09,0,0
7653_8,8,23,"if (currentBestBlock.get().isParentOf(newBlock)) {
LOGGER_TX.info(""PendingStateImpl.processBest: {}"", newBlock.getShortDescr());
processBestInternal(newBlock, receipts);
} else {
Block commonAncestor = findCommonAncestor(currentBestBlock.get(), newBlock);

LOGGER_TX.info(
""New best block from another fork: {}, old best: {}, ancestor: {}"",
newBlock.getShortDescr(),
currentBestBlock.get().getShortDescr(),
commonAncestor.getShortDescr());

processRollbackTransactions(commonAncestor);

processMainChainBlocks(commonAncestor, newBlock);
}",1,0,0,0,0,0,0,0,0,7,2,16,0,0,1,1,6,4,1,0,2,0.47,3,1
7653_9,9,9,"LOGGER_TX.info(""PendingStateImpl.processBest: {}"", newBlock.getShortDescr());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,2,0.51,4,1
7653_10,10,10,"processBestInternal(newBlock, receipts);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.25,5,2
7653_11,11,11,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.24,6,3
7653_12,12,12,"Block commonAncestor = findCommonAncestor(currentBestBlock.get(), newBlock);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.29,7,4
7653_14,14,18,"LOGGER_TX.info(
""New best block from another fork: {}, old best: {}, ancestor: {}"",
newBlock.getShortDescr(),
currentBestBlock.get().getShortDescr(),
commonAncestor.getShortDescr());",0,0,0,0,0,0,0,0,0,0,0,5,0,0,1,1,6,4,1,0,0,0.38,9,6
7653_20,20,20,processRollbackTransactions(commonAncestor);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,1,0,0,0.34,15,7
7653_22,22,22,"processMainChainBlocks(commonAncestor, newBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,1,0,0,0.28,17,8
7653_25,25,25,currentBestBlock.set(newBlock);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,1,0,0,0.3,20,9
7653_26,26,26,txPool.updateBlkNrgLimit(currentBestBlock.get().getNrgLimit());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,1,0,1,0.49,21,9
7653_28,28,28,checkNetworkFullSynced();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,1,0,0,0.29,23,11
7653_29,29,29,checkCloseToNetworkBest();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.29,24,11
7653_31,31,31,pendingState = blockchain.getRepository().startTracking();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,1,0,2,0.54,26,13
7653_32,32,32,rerunTxsInPool(currentBestBlock.get());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.38,27,13
7653_34,34,34,flushCachedTx();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,1,0,0,0.38,29,15
7653_35,35,35,backupPendingTx();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,1,0,1,0.53,30,15
7653_37,37,37,dumpPool();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,1,0,0,0.4,32,17
7654_1,1,2,"    @Override
public synchronized void applyBlockUpdate(Block newBlock, List<AionTxReceipt> receipts) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,4,1,0,2,0.61,28,14
7654_4,4,6,"if (isSeedMode) {
return;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,7,4,1,0,0,0.37,24,12
7654_5,5,5,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.17,25,12
7654_8,8,23,"if (currentBestBlock.get().isParentOf(newBlock)) {
LOGGER_TX.info(""PendingStateImpl.processBest: {}"", newBlock.getShortDescr());
processBestInternal(newBlock, receipts);
} else {
Block commonAncestor = findCommonAncestor(currentBestBlock.get(), newBlock);

LOGGER_TX.info(
""New best block from another fork: {}, old best: {}, ancestor: {}"",
newBlock.getShortDescr(),
currentBestBlock.get().getShortDescr(),
commonAncestor.getShortDescr());

processRollbackTransactions(commonAncestor);

processMainChainBlocks(commonAncestor, newBlock);
}",1,0,0,0,0,0,0,0,0,7,2,16,0,0,1,1,7,4,1,0,4,0.62,7,4
7654_9,9,9,"LOGGER_TX.info(""PendingStateImpl.processBest: {}"", newBlock.getShortDescr());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,3,0.63,21,10
7654_10,10,10,"processBestInternal(newBlock, receipts);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.34,20,9
7654_11,11,11,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,4,1,0,0,0.22,19,8
7654_12,12,12,"Block commonAncestor = findCommonAncestor(currentBestBlock.get(), newBlock);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,4,1,0,0,0.41,18,7
7654_14,14,18,"LOGGER_TX.info(
""New best block from another fork: {}, old best: {}, ancestor: {}"",
newBlock.getShortDescr(),
currentBestBlock.get().getShortDescr(),
commonAncestor.getShortDescr());",0,0,0,0,0,0,0,0,0,0,0,5,0,0,1,1,7,4,1,0,1,0.52,12,6
7654_20,20,20,processRollbackTransactions(commonAncestor);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,7,4,1,0,1,0.59,10,5
7654_22,22,22,"processMainChainBlocks(commonAncestor, newBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,4,1,0,0,0.39,8,4
7654_25,25,25,currentBestBlock.set(newBlock);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,4,1,0,0,0.35,5,3
7654_26,26,26,txPool.updateBlkNrgLimit(currentBestBlock.get().getNrgLimit());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,4,1,0,3,0.64,4,2
7654_28,28,28,checkNetworkFullSynced();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,4,1,0,0,0.36,2,1
7654_29,29,29,checkCloseToNetworkBest();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,4,1,0,0,0.4,1,0
7654_31,31,31,pendingState = blockchain.getRepository().startTracking();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,4,1,0,2,0.59,0,0
7654_32,32,32,rerunTxsInPool(currentBestBlock.get());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,4,1,0,2,0.61,1,0
7654_34,34,34,flushCachedTx();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,4,1,0,1,0.58,3,2
7654_35,35,35,backupPendingTx();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,4,1,0,2,0.71,4,2
7654_37,37,37,dumpPool();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,4,1,0,1,0.6,6,4
7655_1,1,1,"    private void processMainChainBlocks(Block commonAncestor, Block mainChainBest) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,3,0.74,8,6
7655_2,2,2,Block mainChainBlock = mainChainBest;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.56,7,5
7655_3,3,3,Stack<Block> stack = new Stack<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,0,0,2,0.66,6,4
7655_4,4,8,"while (!mainChainBlock.isEqual(commonAncestor)) {
LOGGER_TX.debug(""mainChain: {}"", mainChainBlock.getShortDescr());
stack.push(mainChainBlock);
mainChainBlock = blockchain.getBlockByHash(mainChainBlock.getParentHash());
}",0,1,0,0,0,0,0,0,0,3,2,5,0,1,0,1,5,4,0,0,2,0.6,1,0
7655_5,5,5,"LOGGER_TX.debug(""mainChain: {}"", mainChainBlock.getShortDescr());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.5,4,2
7655_6,6,6,stack.push(mainChainBlock);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.51,3,1
7655_7,7,7,mainChainBlock = blockchain.getBlockByHash(mainChainBlock.getParentHash());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,0,0,1,0.54,2,0
7655_10,10,12,"while (!stack.isEmpty()) {
processBestInternal(stack.pop(), null);
}",0,1,0,0,0,0,0,0,0,1,1,3,0,0,1,0,5,4,0,0,1,0.44,0,0
7655_11,11,11,"processBestInternal(stack.pop(), null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,0,0,1,0.46,1,0
7656_1,1,1,    private void processRollbackTransactions(Block commonAncestor) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,2,0.58,1,0
7656_3,3,3,Block rollback = currentBestBlock.get();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,2,1,0,1,0.56,0,0
7656_4,4,4,Stack<List<AionTransaction>> stack = new Stack<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,1,0,1,0.47,1,0
7656_5,5,9,"while (!rollback.isEqual(commonAncestor)) {
LOGGER_TX.debug(""Rollback: {}"", rollback.getShortDescr());
stack.push(rollback.getTransactionsList());
rollback = blockchain.getBlockByHash(rollback.getParentHash());
}",0,1,0,0,0,0,0,0,0,3,2,5,0,1,0,1,6,2,1,0,2,0.57,2,1
7656_6,6,6,"LOGGER_TX.debug(""Rollback: {}"", rollback.getShortDescr());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,1,0,0,0.49,3,2
7656_7,7,7,stack.push(rollback.getTransactionsList());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,1,0,1,0.48,4,3
7656_8,8,8,rollback = blockchain.getBlockByHash(rollback.getParentHash());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,1,0,1,0.51,5,4
7656_11,11,16,"while (!stack.isEmpty()) {
List<AionTransaction> transactions = stack.pop();
for (AionTransaction tx : transactions) {
txPool.add(new PooledTransaction(tx, tx.getEnergyLimit()));
}
}",0,1,0,0,0,0,0,0,0,3,2,6,0,0,1,0,6,2,1,0,1,0.56,8,6
7656_12,12,12,List<AionTransaction> transactions = stack.pop();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,1,0,1,0.55,9,6
7656_13,13,15,"for (AionTransaction tx : transactions) {
txPool.add(new PooledTransaction(tx, tx.getEnergyLimit()));
}",0,0,0,1,0,0,0,0,0,1,1,3,0,1,0,0,6,2,1,0,1,0.55,10,7
7656_14,14,14,"txPool.add(new PooledTransaction(tx, tx.getEnergyLimit()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.51,11,8
7657_1,1,1,private AionTxExecSummary executeTx(AionTransaction tx) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.28,12,9
7657_3,3,3,Block bestBlk = currentBestBlock.get();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,3,1,0,0,0.29,10,8
7657_4,4,4,"LOGGER_TX.debug(""executeTx: {}"", Hex.toHexString(tx.getTransactionHash()));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,1,0,0,0.3,9,7
7657_6,6,38,"try {
boolean isLocalCall = false;
boolean incrementSenderNonce = true;
boolean checkBlockEnergyLimit = false;

byte[] difficulty = bestBlk.getDifficulty();
long currentBlockNumber = bestBlk.getNumber() + 1;
long timestamp = bestBlk.getTimestamp() + 1;
long blockNrgLimit = Long.MAX_VALUE;
AionAddress miner = bestBlk.getCoinbase();

return BulkExecutor.executeTransactionWithNoPostExecutionWork(
difficulty,
currentBlockNumber,
timestamp,
blockNrgLimit,
miner,
tx,
pendingState,
isLocalCall,
incrementSenderNonce,
blockchain.forkUtility.is040ForkActive(currentBlockNumber),
checkBlockEnergyLimit,
LOGGER_VM,
BlockCachingContext.PENDING,
bestBlk.getNumber(),
blockchain.forkUtility.isUnityForkActive(currentBlockNumber),
blockchain.forkUtility.isSignatureSwapForkActive(currentBlockNumber));
} catch (VmFatalException e) {
LOGGER_VM.error(""Shutdown due to a VM fatal error."", e);
System.exit(SystemExitCodes.FATAL_VM_ERROR);
return null;
}",0,0,0,0,1,0,0,0,0,13,1,33,0,0,1,0,4,3,1,0,2,0.56,0,0
7657_7,7,7,boolean isLocalCall = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.26,6,5
7657_8,8,8,boolean incrementSenderNonce = true;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.31,5,4
7657_9,9,9,boolean checkBlockEnergyLimit = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,1,0,2,0.65,4,3
7657_11,11,11,byte[] difficulty = bestBlk.getDifficulty();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,3,1,0,0,0.34,2,2
7657_12,12,12,long currentBlockNumber = bestBlk.getNumber() + 1;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.31,1,1
7657_13,13,13,long timestamp = bestBlk.getTimestamp() + 1;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.3,0,0
7657_14,14,14,long blockNrgLimit = Long.MAX_VALUE;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.51,0,0
7657_15,15,15,AionAddress miner = bestBlk.getCoinbase();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,1,0,0,0.26,1,0
7657_17,17,33,"return BulkExecutor.executeTransactionWithNoPostExecutionWork(
difficulty,
currentBlockNumber,
timestamp,
blockNrgLimit,
miner,
tx,
pendingState,
isLocalCall,
incrementSenderNonce,
blockchain.forkUtility.is040ForkActive(currentBlockNumber),
checkBlockEnergyLimit,
LOGGER_VM,
BlockCachingContext.PENDING,
bestBlk.getNumber(),
blockchain.forkUtility.isUnityForkActive(currentBlockNumber),
blockchain.forkUtility.isSignatureSwapForkActive(currentBlockNumber));",0,0,0,0,0,0,1,0,0,0,0,17,0,0,1,0,4,3,1,0,2,0.56,3,2
7657_34,34,34,} catch (VmFatalException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.23,20,3
7657_35,35,35,"LOGGER_VM.error(""Shutdown due to a VM fatal error."", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.29,21,3
7657_36,36,36,System.exit(SystemExitCodes.FATAL_VM_ERROR);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.27,22,4
7657_37,37,37,return null;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.25,23,5
7644_1,1,2,"@Override
public void run() {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,7,0,0,0,0.31,4,4
7644_3,3,14,"while (go) {
IEvent e = ees.take();
if (e.getEventType() == IHandler.TYPE.BLOCK0.getValue()
&& e.getCallbackType() == EventBlock.CALLBACK.ONBEST0.getValue()) {
createNewBlockTemplate();
} else if (e.getEventType() == IHandler.TYPE.CONSENSUS.getValue()
&& e.getCallbackType() == EventConsensus.CALLBACK.ON_SOLUTION.getValue()) {
processSolution((AionPowSolution) e.getFuncArgs().get(0));
} else if (e.getEventType() == IHandler.TYPE.POISONPILL.getValue()) {
go = false;
}
}",0,1,0,0,0,0,0,0,0,9,2,12,0,0,0,0,9,7,0,0,4,0.58,0,0
7644_4,4,4,IEvent e = ees.take();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,7,0,0,0,0.33,2,2
7644_5,5,13,"if (e.getEventType() == IHandler.TYPE.BLOCK0.getValue()
&& e.getCallbackType() == EventBlock.CALLBACK.ONBEST0.getValue()) {
createNewBlockTemplate();
} else if (e.getEventType() == IHandler.TYPE.CONSENSUS.getValue()
&& e.getCallbackType() == EventConsensus.CALLBACK.ON_SOLUTION.getValue()) {
processSolution((AionPowSolution) e.getFuncArgs().get(0));
} else if (e.getEventType() == IHandler.TYPE.POISONPILL.getValue()) {
go = false;
}",1,0,0,0,0,0,0,0,0,7,1,9,0,1,0,0,9,7,0,0,4,0.58,0,0
7644_6,6,6,&& e.getCallbackType() == EventBlock.CALLBACK.ONBEST0.getValue()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,1,0.46,0,0
7644_7,7,7,createNewBlockTemplate();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,4,0.85,0,0
7644_8,8,8,} else if (e.getEventType() == IHandler.TYPE.CONSENSUS.getValue(),0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,9,7,0,0,0,0.34,1,0
7644_9,9,9,&& e.getCallbackType() == EventConsensus.CALLBACK.ON_SOLUTION.getValue()) {,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,9,7,0,0,0,0.34,2,1
7644_10,10,10,processSolution((AionPowSolution) e.getFuncArgs().get(0));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.37,3,2
7644_11,11,11,} else if (e.getEventType() == IHandler.TYPE.POISONPILL.getValue()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.34,4,3
7644_12,12,12,go = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,7,0,0,0,0.22,5,4
7645_1,1,1,"public void init(IAionBlockchain blockchain, IPendingState pendingState, IEventMgr eventMgr, SyncMgr syncMgr) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,8,0,0,0,0.41,8,6
7645_2,2,41,"if (initialized.compareAndSet(false, true)) {
this.blockchain = blockchain;
this.pendingState = pendingState;
this.pendingState.setNewPendingReceiveForMining(newPendingTxReceived.get());

this.eventMgr = eventMgr;
this.syncMgr = syncMgr;

if (!config.getConsensus().getMining()) return;

setupHandler();
ees = new EventExecuteService(100_000, ""EpPow"", Thread.NORM_PRIORITY, LOG);
ees.setFilter(setEvtFilter());

registerCallback();
ees.start(new EpPOW());

new Thread(
() -> {
while (!shutDown.get()) {
try {
Thread.sleep(100);

long now = System.currentTimeMillis();
if ((now - lastUpdate.get() > 3000 && newPendingTxReceived.compareAndSet(true, false))
|| now - lastUpdate.get() > 10000) {
createNewBlockTemplate();
} else {
if (TimeUnit.MILLISECONDS.toSeconds(now) == latestBlockTemplate.getTimestamp() + 1) {
createNewBlockTemplate();
}
}
} catch (InterruptedException e) {
break;
}
}
},
""pow"")
.start();
}",1,0,0,0,0,0,0,0,0,26,6,40,0,0,0,0,13,8,0,0,5,0.61,0,0
7645_3,3,3,this.blockchain = blockchain;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,8,0,0,0,0.0,6,4
7645_4,4,4,this.pendingState = pendingState;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,8,0,0,0,0.33,5,3
7645_5,5,5,this.pendingState.setNewPendingReceiveForMining(newPendingTxReceived.get());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,13,8,0,0,2,0.48,4,2
7645_7,7,7,this.eventMgr = eventMgr;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,13,8,0,0,0,0.31,2,1
7645_8,8,8,this.syncMgr = syncMgr;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,13,8,0,0,0,0.34,1,0
7645_10,10,10,if (!config.getConsensus().getMining()) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,13,8,0,0,2,0.53,0,0
7645_12,12,12,setupHandler();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,13,8,0,0,0,0.3,2,1
7645_13,13,13,"ees = new EventExecuteService(100_000, ""EpPow"", Thread.NORM_PRIORITY, LOG);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,8,0,0,1,0.42,3,1
7645_14,14,14,ees.setFilter(setEvtFilter());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,13,8,0,0,0,0.27,4,2
7645_16,16,16,registerCallback();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,13,8,0,0,0,0.3,6,4
7645_17,17,17,ees.start(new EpPOW());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,13,8,0,0,1,0.45,7,4
7645_19,19,20,"new Thread(
() -> {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,13,8,0,0,1,0.49,9,6
7645_21,21,37,"while (!shutDown.get()) {
try {
Thread.sleep(100);

long now = System.currentTimeMillis();
if ((now - lastUpdate.get() > 3000 && newPendingTxReceived.compareAndSet(true, false))
|| now - lastUpdate.get() > 10000) {
createNewBlockTemplate();
} else {
if (TimeUnit.MILLISECONDS.toSeconds(now) == latestBlockTemplate.getTimestamp() + 1) {
createNewBlockTemplate();
}
}
} catch (InterruptedException e) {
break;
}
}",0,1,0,0,0,0,0,0,0,11,4,17,0,0,0,0,13,8,0,0,3,0.58,11,7
7645_22,22,36,"try {
Thread.sleep(100);

long now = System.currentTimeMillis();
if ((now - lastUpdate.get() > 3000 && newPendingTxReceived.compareAndSet(true, false))
|| now - lastUpdate.get() > 10000) {
createNewBlockTemplate();
} else {
if (TimeUnit.MILLISECONDS.toSeconds(now) == latestBlockTemplate.getTimestamp() + 1) {
createNewBlockTemplate();
}
}
} catch (InterruptedException e) {
break;
}",0,0,0,0,1,0,0,0,0,10,3,15,0,0,0,0,13,8,0,0,3,0.58,12,7
7645_23,23,23,Thread.sleep(100);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,13,8,0,0,0,0.37,13,8
7645_25,25,25,long now = System.currentTimeMillis();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,13,8,0,0,0,0.33,15,10
7645_26,26,33,"if ((now - lastUpdate.get() > 3000 && newPendingTxReceived.compareAndSet(true, false))
|| now - lastUpdate.get() > 10000) {
createNewBlockTemplate();
} else {
if (TimeUnit.MILLISECONDS.toSeconds(now) == latestBlockTemplate.getTimestamp() + 1) {
createNewBlockTemplate();
}
}",1,0,0,0,0,0,0,0,0,5,2,8,0,1,0,0,13,8,0,0,3,0.59,16,10
7645_27,27,27,|| now - lastUpdate.get() > 10000) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,8,0,0,0,0.31,17,11
7645_28,28,28,createNewBlockTemplate();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,8,0,0,3,0.68,18,12
7645_29,29,29,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,8,0,0,0,0.31,19,13
7645_30,30,32,"if (TimeUnit.MILLISECONDS.toSeconds(now) == latestBlockTemplate.getTimestamp() + 1) {
createNewBlockTemplate();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,13,8,0,0,3,0.57,20,14
7645_31,31,31,createNewBlockTemplate();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,8,0,0,3,0.68,21,15
7645_34,34,34,} catch (InterruptedException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,8,0,0,0,0.38,24,17
7645_35,35,35,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,13,8,0,0,0,0.37,25,17
7645_38,38,39,"},
""pow"")",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,13,8,0,0,0,0.0,28,19
7645_40,40,40,.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,8,0,0,0,0.21,30,20
7646_1,1,1,private synchronized void processSolution(AionPowSolution solution) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,1,0.18,14,8
7646_2,2,51,"if (!shutDown.get()) {
if (LOG.isDebugEnabled()) {
LOG.debug(""Best block num [{}]"", blockchain.getBestBlock().getNumber());
LOG.debug(
""Best block hash [{}]"",
Hex.toHexString(blockchain.getBestBlock().getHash()));
}

MiningBlock block = solution.getBlock();
if (!Arrays.equals(block.getHeader().getNonce(), new byte[32])
&& !(block.getHeader().getNonce().length == 0)) {
return;
}

try {
block.seal(solution.getNonce(), solution.getSolution());
} catch (Exception e) {
LOG.error(""seal block failed!"", e);
return;
}

ImportResult importResult = AionImpl.inst().addNewBlock(block);

if (importResult.isSuccessful()) {
if (importResult == IMPORTED_BEST) {
LOG.info(
""block sealed <num={}, hash={}, diff={}, tx={}>"",
block.getNumber(),
block.getShortHash(),
block.getHeader().getDifficultyBI().toString(),
block.getTransactionsList().size());
} else {
LOG.debug(
""block sealed <num={}, hash={}, diff={}, td={}, tx={}, result={}>"",
block.getNumber(),
block.getShortHash(),
block.getHeader().getDifficultyBI().toString(),
blockchain.getTotalDifficulty(),
block.getTransactionsList().size(),
importResult);
}
} else {
LOG.info(
""Unable to import a new mined block; restarting mining.\n""
+ ""Mined block import result is ""
+ importResult
+ "" : ""
+ block.getShortHash());
}
}",1,0,0,0,0,0,0,0,0,20,4,50,0,0,0,0,3,1,2,0,2,0.26,0,0
7646_3,3,8,"if (LOG.isDebugEnabled()) {
LOG.debug(""Best block num [{}]"", blockchain.getBestBlock().getNumber());
LOG.debug(
""Best block hash [{}]"",
Hex.toHexString(blockchain.getBestBlock().getHash()));
}",1,0,0,0,0,0,0,0,0,2,2,6,0,0,0,1,3,1,2,0,0,0.26,7,4
7646_4,4,4,"LOG.debug(""Best block num [{}]"", blockchain.getBestBlock().getNumber());",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,1,2,0,0,0.22,11,5
7646_5,5,7,"LOG.debug(
""Best block hash [{}]"",
Hex.toHexString(blockchain.getBestBlock().getHash()));",0,0,0,0,0,0,0,0,0,0,0,3,1,0,0,0,3,1,2,0,0,0.22,8,4
7646_10,10,10,MiningBlock block = solution.getBlock();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,3,1,2,0,1,0.2,5,3
7646_11,11,14,"if (!Arrays.equals(block.getHeader().getNonce(), new byte[32])
&& !(block.getHeader().getNonce().length == 0)) {
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,3,1,2,0,1,0.19,1,0
7646_12,12,12,&& !(block.getHeader().getNonce().length == 0)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,1,0.19,3,1
7646_13,13,13,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,2,0,0,-0.09,2,0
7646_16,16,21,"try {
block.seal(solution.getNonce(), solution.getSolution());
} catch (Exception e) {
LOG.error(""seal block failed!"", e);
return;
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,1,1,3,1,2,0,2,0.18,0,0
7646_17,17,17,"block.seal(solution.getNonce(), solution.getSolution());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,2,0.23,1,0
7646_18,18,18,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.11,2,1
7646_19,19,19,"LOG.error(""seal block failed!"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.19,3,2
7646_20,20,20,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,1,2,0,0,-0.09,4,3
7646_23,23,23,ImportResult importResult = AionImpl.inst().addNewBlock(block);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,3,1,2,0,0,0.23,7,5
7646_25,25,50,"if (importResult.isSuccessful()) {
if (importResult == IMPORTED_BEST) {
LOG.info(
""block sealed <num={}, hash={}, diff={}, tx={}>"",
block.getNumber(),
block.getShortHash(),
block.getHeader().getDifficultyBI().toString(),
block.getTransactionsList().size());
} else {
LOG.debug(
""block sealed <num={}, hash={}, diff={}, td={}, tx={}, result={}>"",
block.getNumber(),
block.getShortHash(),
block.getHeader().getDifficultyBI().toString(),
blockchain.getTotalDifficulty(),
block.getTransactionsList().size(),
importResult);
}
} else {
LOG.info(
""Unable to import a new mined block; restarting mining.\n""
+ ""Mined block import result is ""
+ importResult
+ "" : ""
+ block.getShortHash());
}",1,0,0,0,0,0,0,0,0,6,3,26,0,0,1,0,3,1,2,0,0,0.26,9,6
7646_26,26,42,"if (importResult == IMPORTED_BEST) {
LOG.info(
""block sealed <num={}, hash={}, diff={}, tx={}>"",
block.getNumber(),
block.getShortHash(),
block.getHeader().getDifficultyBI().toString(),
block.getTransactionsList().size());
} else {
LOG.debug(
""block sealed <num={}, hash={}, diff={}, td={}, tx={}, result={}>"",
block.getNumber(),
block.getShortHash(),
block.getHeader().getDifficultyBI().toString(),
blockchain.getTotalDifficulty(),
block.getTransactionsList().size(),
importResult);
}",1,0,0,0,0,0,0,0,0,3,2,17,0,0,0,0,3,1,2,0,0,0.27,10,6
7646_27,27,32,"LOG.info(
""block sealed <num={}, hash={}, diff={}, tx={}>"",
block.getNumber(),
block.getShortHash(),
block.getHeader().getDifficultyBI().toString(),
block.getTransactionsList().size());",0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,3,1,2,0,0,0.27,11,7
7646_33,33,33,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.09,17,9
7646_34,34,41,"LOG.debug(
""block sealed <num={}, hash={}, diff={}, td={}, tx={}, result={}>"",
block.getNumber(),
block.getShortHash(),
block.getHeader().getDifficultyBI().toString(),
blockchain.getTotalDifficulty(),
block.getTransactionsList().size(),
importResult);",0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,3,1,2,0,0,0.27,18,9
7646_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,2,0,0,0.09,27,11
7646_44,44,49,"LOG.info(
""Unable to import a new mined block; restarting mining.\n""
+ ""Mined block import result is ""
+ importResult
+ "" : ""
+ block.getShortHash());",0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,3,1,2,0,0,0.22,28,11
7647_1,1,1,private synchronized void processSolution(AionPowSolution solution) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.34,23,14
7647_2,2,51,"if (!shutDown.get()) {
if (LOG.isDebugEnabled()) {
LOG.debug(""Best block num [{}]"", blockchain.getBestBlock().getNumber());
LOG.debug(
""Best block hash [{}]"",
Hex.toHexString(blockchain.getBestBlock().getHash()));
}

MiningBlock block = solution.getBlock();
if (!Arrays.equals(block.getHeader().getNonce(), new byte[32])
&& !(block.getHeader().getNonce().length == 0)) {
return;
}

try {
block.seal(solution.getNonce(), solution.getSolution());
} catch (Exception e) {
LOG.error(""seal block failed!"", e);
return;
}

ImportResult importResult = AionImpl.inst().addNewBlock(block);

if (importResult.isSuccessful()) {
if (importResult == IMPORTED_BEST) {
LOG.info(
""block sealed <num={}, hash={}, diff={}, tx={}>"",
block.getNumber(),
block.getShortHash(),
block.getHeader().getDifficultyBI().toString(),
block.getTransactionsList().size());
} else {
LOG.debug(
""block sealed <num={}, hash={}, diff={}, td={}, tx={}, result={}>"",
block.getNumber(),
block.getShortHash(),
block.getHeader().getDifficultyBI().toString(),
blockchain.getTotalDifficulty(),
block.getTransactionsList().size(),
importResult);
}
} else {
LOG.info(
""Unable to import a new mined block; restarting mining.\n""
+ ""Mined block import result is ""
+ importResult
+ "" : ""
+ block.getShortHash());
}
}",1,0,0,0,0,0,0,0,0,20,4,50,0,0,0,0,5,3,1,0,3,0.62,0,0
7647_3,3,8,"if (LOG.isDebugEnabled()) {
LOG.debug(""Best block num [{}]"", blockchain.getBestBlock().getNumber());
LOG.debug(
""Best block hash [{}]"",
Hex.toHexString(blockchain.getBestBlock().getHash()));
}",1,0,0,0,0,0,0,0,0,2,2,6,0,0,0,1,5,3,1,0,1,0.46,16,10
7647_4,4,4,"LOG.debug(""Best block num [{}]"", blockchain.getBestBlock().getNumber());",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,3,1,0,1,0.47,20,11
7647_5,5,7,"LOG.debug(
""Best block hash [{}]"",
Hex.toHexString(blockchain.getBestBlock().getHash()));",0,0,0,0,0,0,0,0,0,0,0,3,1,0,0,0,5,3,1,0,1,0.45,17,10
7647_10,10,10,MiningBlock block = solution.getBlock();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,3,1,0,1,0.54,14,9
7647_11,11,14,"if (!Arrays.equals(block.getHeader().getNonce(), new byte[32])
&& !(block.getHeader().getNonce().length == 0)) {
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,1,5,3,1,0,2,0.51,10,6
7647_12,12,12,&& !(block.getHeader().getNonce().length == 0)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.43,12,7
7647_13,13,13,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.16,11,6
7647_16,16,21,"try {
block.seal(solution.getNonce(), solution.getSolution());
} catch (Exception e) {
LOG.error(""seal block failed!"", e);
return;
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,1,1,5,3,1,0,1,0.46,3,1
7647_17,17,17,"block.seal(solution.getNonce(), solution.getSolution());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.43,7,4
7647_18,18,18,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.32,6,3
7647_19,19,19,"LOG.error(""seal block failed!"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.47,5,2
7647_20,20,20,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.16,4,1
7647_23,23,23,ImportResult importResult = AionImpl.inst().addNewBlock(block);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,3,1,0,2,0.62,1,0
7647_25,25,50,"if (importResult.isSuccessful()) {
if (importResult == IMPORTED_BEST) {
LOG.info(
""block sealed <num={}, hash={}, diff={}, tx={}>"",
block.getNumber(),
block.getShortHash(),
block.getHeader().getDifficultyBI().toString(),
block.getTransactionsList().size());
} else {
LOG.debug(
""block sealed <num={}, hash={}, diff={}, td={}, tx={}, result={}>"",
block.getNumber(),
block.getShortHash(),
block.getHeader().getDifficultyBI().toString(),
blockchain.getTotalDifficulty(),
block.getTransactionsList().size(),
importResult);
}
} else {
LOG.info(
""Unable to import a new mined block; restarting mining.\n""
+ ""Mined block import result is ""
+ importResult
+ "" : ""
+ block.getShortHash());
}",1,0,0,0,0,0,0,0,0,6,3,26,0,0,1,0,5,3,1,0,3,0.62,0,0
7647_26,26,42,"if (importResult == IMPORTED_BEST) {
LOG.info(
""block sealed <num={}, hash={}, diff={}, tx={}>"",
block.getNumber(),
block.getShortHash(),
block.getHeader().getDifficultyBI().toString(),
block.getTransactionsList().size());
} else {
LOG.debug(
""block sealed <num={}, hash={}, diff={}, td={}, tx={}, result={}>"",
block.getNumber(),
block.getShortHash(),
block.getHeader().getDifficultyBI().toString(),
blockchain.getTotalDifficulty(),
block.getTransactionsList().size(),
importResult);
}",1,0,0,0,0,0,0,0,0,3,2,17,0,0,0,0,5,3,1,0,1,0.5,1,0
7647_27,27,32,"LOG.info(
""block sealed <num={}, hash={}, diff={}, tx={}>"",
block.getNumber(),
block.getShortHash(),
block.getHeader().getDifficultyBI().toString(),
block.getTransactionsList().size());",0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,5,3,1,0,1,0.51,2,1
7647_33,33,33,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.22,8,3
7647_34,34,41,"LOG.debug(
""block sealed <num={}, hash={}, diff={}, td={}, tx={}, result={}>"",
block.getNumber(),
block.getShortHash(),
block.getHeader().getDifficultyBI().toString(),
blockchain.getTotalDifficulty(),
block.getTransactionsList().size(),
importResult);",0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,5,3,1,0,1,0.5,9,3
7647_43,43,43,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.22,18,5
7647_44,44,49,"LOG.info(
""Unable to import a new mined block; restarting mining.\n""
+ ""Mined block import result is ""
+ importResult
+ "" : ""
+ block.getShortHash());",0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,5,3,1,0,2,0.57,19,5
3034_1,1,1,"private void sendHeadersRequestsInternal(long currentBestBlock, BigInteger currentTotalDifficulty, IP2pMgr p2pManager, SyncStats syncStatistics) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,4,0.56,4,2
3034_2,2,2,long startTime = System.nanoTime();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,6,0,0,0,0.38,3,1
3034_4,4,4,int count = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,8,6,0,0,0,0.39,1,0
3034_6,6,9,"Map<Integer, INode> currentNodes =
p2pManager.getActiveNodes().values().stream()
.filter(node -> isAdequateTotalDifficulty(node, currentTotalDifficulty))
.collect(Collectors.toMap(node -> node.getIdHash(), node -> node));",0,0,0,0,0,1,0,0,0,0,0,4,0,0,1,1,8,6,0,0,7,0.78,0,0
3034_11,11,11,updateActiveNodes(currentNodes);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,8,6,0,0,2,0.67,5,1
3034_13,13,13,List<RequestState> statesForRequest;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,6,0,0,0,0.26,7,2
3034_14,14,19,"if (requestHeight > localHeight + MAX_BLOCK_DIFF) {
syncLog.debug(""<get-headers near top of chain>"");
statesForRequest = updateStatesForRequests(false, currentBestBlock);
} else {
statesForRequest = updateStatesForRequests(true, currentBestBlock);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,1,8,6,0,0,0,0.37,8,2
3034_15,15,15,"syncLog.debug(""<get-headers near top of chain>"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.31,9,3
3034_16,16,16,"statesForRequest = updateStatesForRequests(false, currentBestBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.31,10,4
3034_17,17,17,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.25,11,5
3034_18,18,18,"statesForRequest = updateStatesForRequests(true, currentBestBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.31,12,6
3034_21,21,47,"for (RequestState requestState : statesForRequest) {
String peerAlias = requestState.alias;
long from = requestState.from;
int take = requestState.size;

if (from <= requestState.lastBestBlock || requestState.lastBestBlock == 0) {
p2pManager.send(requestState.id, peerAlias, new ReqBlocksHeaders(from, take));
requestHeight = Math.max(requestHeight, from + take);

requestState.saveRequestTime(System.nanoTime());
availablePeerStates.remove(requestState.id);
bookedPeerStates.put(requestState.id, requestState);

syncLog.debug(
""<get-headers mode={} from-num={} size={} node={}>"",
requestState.mode,
from,
take,
peerAlias);

syncStatistics.updateTotalRequestsToPeer(peerAlias, RequestType.STATUS);
syncStatistics.updateRequestTime(peerAlias, System.nanoTime(), RequestType.HEADERS);
count++;
} else {
requestState.from = 0;
}
}",0,0,0,1,0,0,0,0,0,15,3,27,0,0,1,1,8,6,0,0,4,0.55,15,8
3034_22,22,22,String peerAlias = requestState.alias;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,6,0,0,0,0.31,16,8
3034_23,23,23,long from = requestState.from;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,6,0,0,0,0.32,17,9
3034_24,24,24,int take = requestState.size;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,8,6,0,0,0,0.35,18,10
3034_26,26,46,"if (from <= requestState.lastBestBlock || requestState.lastBestBlock == 0) {
p2pManager.send(requestState.id, peerAlias, new ReqBlocksHeaders(from, take));
requestHeight = Math.max(requestHeight, from + take);

requestState.saveRequestTime(System.nanoTime());
availablePeerStates.remove(requestState.id);
bookedPeerStates.put(requestState.id, requestState);

syncLog.debug(
""<get-headers mode={} from-num={} size={} node={}>"",
requestState.mode,
from,
take,
peerAlias);

syncStatistics.updateTotalRequestsToPeer(peerAlias, RequestType.STATUS);
syncStatistics.updateRequestTime(peerAlias, System.nanoTime(), RequestType.HEADERS);
count++;
} else {
requestState.from = 0;
}",1,0,0,0,0,0,0,0,0,11,2,21,0,0,1,0,8,6,0,0,4,0.55,20,12
3034_27,27,27,"p2pManager.send(requestState.id, peerAlias, new ReqBlocksHeaders(from, take));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,0,0,2,0.44,21,12
3034_28,28,28,"requestHeight = Math.max(requestHeight, from + take);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,8,6,0,0,0,0.33,22,13
3034_30,30,30,requestState.saveRequestTime(System.nanoTime());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,8,6,0,0,0,0.37,24,15
3034_31,31,31,availablePeerStates.remove(requestState.id);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,0,0,0,0.33,25,15
3034_32,32,32,"bookedPeerStates.put(requestState.id, requestState);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,8,6,0,0,0,0.35,26,16
3034_34,34,39,"syncLog.debug(
""<get-headers mode={} from-num={} size={} node={}>"",
requestState.mode,
from,
take,
peerAlias);",0,0,0,0,0,0,0,0,0,0,0,6,0,0,1,1,8,6,0,0,1,0.46,28,18
3034_41,41,41,"syncStatistics.updateTotalRequestsToPeer(peerAlias, RequestType.STATUS);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,8,6,0,0,1,0.42,35,19
3034_42,42,42,"syncStatistics.updateRequestTime(peerAlias, System.nanoTime(), RequestType.HEADERS);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,6,0,0,0,0.36,36,19
3034_43,43,43,count++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.3,37,20
3034_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.25,38,21
3034_45,45,45,requestState.from = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,6,0,0,0,0.34,39,22
3034_49,49,49,long duration = System.nanoTime() - startTime;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,8,6,0,0,0,0.41,43,24
3034_50,50,54,"surveyLog.debug(
""Request Stage 2: made {} header request{}, duration = {} ns."",
count,
(count == 1 ? """" : ""s""),
duration);",0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,0,8,6,0,0,0,0.4,44,24
3035_1,1,1,"private void sendHeadersRequestsInternal(long currentBestBlock, BigInteger currentTotalDifficulty, IP2pMgr p2pManager, SyncStats syncStatistics) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,1,0.46,9,3
3035_2,2,2,long startTime = System.nanoTime();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,6,1,0,0,0.42,8,2
3035_4,4,4,int count = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,9,6,1,0,0,0.26,6,1
3035_6,6,9,"Map<Integer, INode> currentNodes =
p2pManager.getActiveNodes().values().stream()
.filter(node -> isAdequateTotalDifficulty(node, currentTotalDifficulty))
.collect(Collectors.toMap(node -> node.getIdHash(), node -> node));",0,0,0,0,0,1,0,0,0,0,0,4,0,0,1,1,9,6,1,0,0,0.38,1,0
3035_11,11,11,updateActiveNodes(currentNodes);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,9,6,1,0,1,0.4,0,0
3035_13,13,13,List<RequestState> statesForRequest;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,6,1,0,1,0.41,2,1
3035_14,14,19,"if (requestHeight > localHeight + MAX_BLOCK_DIFF) {
syncLog.debug(""<get-headers near top of chain>"");
statesForRequest = updateStatesForRequests(false, currentBestBlock);
} else {
statesForRequest = updateStatesForRequests(true, currentBestBlock);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,1,9,6,1,0,1,0.45,3,1
3035_15,15,15,"syncLog.debug(""<get-headers near top of chain>"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.34,4,2
3035_16,16,16,"statesForRequest = updateStatesForRequests(false, currentBestBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,1,0.41,5,3
3035_17,17,17,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.21,6,4
3035_18,18,18,"statesForRequest = updateStatesForRequests(true, currentBestBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,1,0.41,7,5
3035_21,21,47,"for (RequestState requestState : statesForRequest) {
String peerAlias = requestState.alias;
long from = requestState.from;
int take = requestState.size;

if (from <= requestState.lastBestBlock || requestState.lastBestBlock == 0) {
p2pManager.send(requestState.id, peerAlias, new ReqBlocksHeaders(from, take));
requestHeight = Math.max(requestHeight, from + take);

requestState.saveRequestTime(System.nanoTime());
availablePeerStates.remove(requestState.id);
bookedPeerStates.put(requestState.id, requestState);

syncLog.debug(
""<get-headers mode={} from-num={} size={} node={}>"",
requestState.mode,
from,
take,
peerAlias);

syncStatistics.updateTotalRequestsToPeer(peerAlias, RequestType.STATUS);
syncStatistics.updateRequestTime(peerAlias, System.nanoTime(), RequestType.HEADERS);
count++;
} else {
requestState.from = 0;
}
}",0,0,0,1,0,0,0,0,0,15,3,27,0,0,1,1,9,6,1,0,3,0.53,10,7
3035_22,22,22,String peerAlias = requestState.alias;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,6,1,0,1,0.48,11,7
3035_23,23,23,long from = requestState.from;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,6,1,0,0,0.32,12,8
3035_24,24,24,int take = requestState.size;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,9,6,1,0,0,0.34,13,9
3035_26,26,46,"if (from <= requestState.lastBestBlock || requestState.lastBestBlock == 0) {
p2pManager.send(requestState.id, peerAlias, new ReqBlocksHeaders(from, take));
requestHeight = Math.max(requestHeight, from + take);

requestState.saveRequestTime(System.nanoTime());
availablePeerStates.remove(requestState.id);
bookedPeerStates.put(requestState.id, requestState);

syncLog.debug(
""<get-headers mode={} from-num={} size={} node={}>"",
requestState.mode,
from,
take,
peerAlias);

syncStatistics.updateTotalRequestsToPeer(peerAlias, RequestType.STATUS);
syncStatistics.updateRequestTime(peerAlias, System.nanoTime(), RequestType.HEADERS);
count++;
} else {
requestState.from = 0;
}",1,0,0,0,0,0,0,0,0,11,2,21,0,0,1,0,9,6,1,0,3,0.53,15,11
3035_27,27,27,"p2pManager.send(requestState.id, peerAlias, new ReqBlocksHeaders(from, take));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,6,1,0,1,0.45,16,11
3035_28,28,28,"requestHeight = Math.max(requestHeight, from + take);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,9,6,1,0,0,0.37,17,12
3035_30,30,30,requestState.saveRequestTime(System.nanoTime());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,9,6,1,0,0,0.4,19,14
3035_31,31,31,availablePeerStates.remove(requestState.id);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,6,1,0,2,0.51,20,14
3035_32,32,32,"bookedPeerStates.put(requestState.id, requestState);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,9,6,1,0,1,0.44,21,15
3035_34,34,39,"syncLog.debug(
""<get-headers mode={} from-num={} size={} node={}>"",
requestState.mode,
from,
take,
peerAlias);",0,0,0,0,0,0,0,0,0,0,0,6,0,0,1,1,9,6,1,0,1,0.43,23,17
3035_41,41,41,"syncStatistics.updateTotalRequestsToPeer(peerAlias, RequestType.STATUS);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,9,6,1,0,2,0.54,30,18
3035_42,42,42,"syncStatistics.updateRequestTime(peerAlias, System.nanoTime(), RequestType.HEADERS);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,6,1,0,2,0.54,31,18
3035_43,43,43,count++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.24,32,19
3035_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.21,33,20
3035_45,45,45,requestState.from = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,6,1,0,0,0.28,34,21
3035_49,49,49,long duration = System.nanoTime() - startTime;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,9,6,1,0,0,0.41,38,23
3035_50,50,54,"surveyLog.debug(
""Request Stage 2: made {} header request{}, duration = {} ns."",
count,
(count == 1 ? """" : ""s""),
duration);",0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,0,9,6,1,0,0,0.38,39,23
3036_1,1,1,"private void sendHeadersRequestsInternal(long currentBestBlock, BigInteger currentTotalDifficulty, IP2pMgr p2pManager, SyncStats syncStatistics) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.5,11,4
3036_2,2,2,long startTime = System.nanoTime();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,5,0,0,0,0.32,10,3
3036_4,4,4,int count = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,5,5,0,0,0,0.25,8,2
3036_6,6,9,"Map<Integer, INode> currentNodes =
p2pManager.getActiveNodes().values().stream()
.filter(node -> isAdequateTotalDifficulty(node, currentTotalDifficulty))
.collect(Collectors.toMap(node -> node.getIdHash(), node -> node));",0,0,0,0,0,1,0,0,0,0,0,4,0,0,1,1,5,5,0,0,0,0.37,3,1
3036_11,11,11,updateActiveNodes(currentNodes);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,5,0,0,0,0.27,1,0
3036_13,13,13,List<RequestState> statesForRequest;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,1,0.52,0,0
3036_14,14,19,"if (requestHeight > localHeight + MAX_BLOCK_DIFF) {
syncLog.debug(""<get-headers near top of chain>"");
statesForRequest = updateStatesForRequests(false, currentBestBlock);
} else {
statesForRequest = updateStatesForRequests(true, currentBestBlock);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,1,5,5,0,0,1,0.52,1,0
3036_15,15,15,"syncLog.debug(""<get-headers near top of chain>"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.34,2,1
3036_16,16,16,"statesForRequest = updateStatesForRequests(false, currentBestBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.51,3,2
3036_17,17,17,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.16,4,3
3036_18,18,18,"statesForRequest = updateStatesForRequests(true, currentBestBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.51,5,4
3036_21,21,47,"for (RequestState requestState : statesForRequest) {
String peerAlias = requestState.alias;
long from = requestState.from;
int take = requestState.size;

if (from <= requestState.lastBestBlock || requestState.lastBestBlock == 0) {
p2pManager.send(requestState.id, peerAlias, new ReqBlocksHeaders(from, take));
requestHeight = Math.max(requestHeight, from + take);

requestState.saveRequestTime(System.nanoTime());
availablePeerStates.remove(requestState.id);
bookedPeerStates.put(requestState.id, requestState);

syncLog.debug(
""<get-headers mode={} from-num={} size={} node={}>"",
requestState.mode,
from,
take,
peerAlias);

syncStatistics.updateTotalRequestsToPeer(peerAlias, RequestType.STATUS);
syncStatistics.updateRequestTime(peerAlias, System.nanoTime(), RequestType.HEADERS);
count++;
} else {
requestState.from = 0;
}
}",0,0,0,1,0,0,0,0,0,15,3,27,0,0,1,1,5,5,0,0,3,0.71,8,6
3036_22,22,22,String peerAlias = requestState.alias;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.69,9,6
3036_23,23,23,long from = requestState.from;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.44,10,7
3036_24,24,24,int take = requestState.size;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,5,5,0,0,1,0.45,11,8
3036_26,26,46,"if (from <= requestState.lastBestBlock || requestState.lastBestBlock == 0) {
p2pManager.send(requestState.id, peerAlias, new ReqBlocksHeaders(from, take));
requestHeight = Math.max(requestHeight, from + take);

requestState.saveRequestTime(System.nanoTime());
availablePeerStates.remove(requestState.id);
bookedPeerStates.put(requestState.id, requestState);

syncLog.debug(
""<get-headers mode={} from-num={} size={} node={}>"",
requestState.mode,
from,
take,
peerAlias);

syncStatistics.updateTotalRequestsToPeer(peerAlias, RequestType.STATUS);
syncStatistics.updateRequestTime(peerAlias, System.nanoTime(), RequestType.HEADERS);
count++;
} else {
requestState.from = 0;
}",1,0,0,0,0,0,0,0,0,11,2,21,0,0,1,0,5,5,0,0,3,0.71,13,10
3036_27,27,27,"p2pManager.send(requestState.id, peerAlias, new ReqBlocksHeaders(from, take));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.62,14,10
3036_28,28,28,"requestHeight = Math.max(requestHeight, from + take);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,1,0.55,15,11
3036_30,30,30,requestState.saveRequestTime(System.nanoTime());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,5,5,0,0,1,0.53,17,13
3036_31,31,31,availablePeerStates.remove(requestState.id);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,3,0.72,18,13
3036_32,32,32,"bookedPeerStates.put(requestState.id, requestState);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,2,0.63,19,14
3036_34,34,39,"syncLog.debug(
""<get-headers mode={} from-num={} size={} node={}>"",
requestState.mode,
from,
take,
peerAlias);",0,0,0,0,0,0,0,0,0,0,0,6,0,0,1,1,5,5,0,0,2,0.6,21,16
3036_41,41,41,"syncStatistics.updateTotalRequestsToPeer(peerAlias, RequestType.STATUS);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,5,5,0,0,2,0.69,28,17
3036_42,42,42,"syncStatistics.updateRequestTime(peerAlias, System.nanoTime(), RequestType.HEADERS);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.65,29,17
3036_43,43,43,count++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.23,30,18
3036_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.16,31,19
3036_45,45,45,requestState.from = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.45,32,20
3036_49,49,49,long duration = System.nanoTime() - startTime;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,0,0.33,36,22
3036_50,50,54,"surveyLog.debug(
""Request Stage 2: made {} header request{}, duration = {} ns."",
count,
(count == 1 ? """" : ""s""),
duration);",0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,0,5,5,0,0,1,0.5,37,22
3037_1,1,1,"private void sendHeadersRequestsInternal(long currentBestBlock, BigInteger currentTotalDifficulty, IP2pMgr p2pManager, SyncStats syncStatistics) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,2,0.67,25,15
3037_2,2,2,long startTime = System.nanoTime();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.28,24,14
3037_4,4,4,int count = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.16,22,13
3037_6,6,9,"Map<Integer, INode> currentNodes =
p2pManager.getActiveNodes().values().stream()
.filter(node -> isAdequateTotalDifficulty(node, currentTotalDifficulty))
.collect(Collectors.toMap(node -> node.getIdHash(), node -> node));",0,0,0,0,0,1,0,0,0,0,0,4,0,0,1,1,2,2,0,0,0,0.27,17,12
3037_11,11,11,updateActiveNodes(currentNodes);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.19,15,11
3037_13,13,13,List<RequestState> statesForRequest;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,1,0.56,13,10
3037_14,14,19,"if (requestHeight > localHeight + MAX_BLOCK_DIFF) {
syncLog.debug(""<get-headers near top of chain>"");
statesForRequest = updateStatesForRequests(false, currentBestBlock);
} else {
statesForRequest = updateStatesForRequests(true, currentBestBlock);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,1,2,2,0,0,1,0.53,7,5
3037_15,15,15,"syncLog.debug(""<get-headers near top of chain>"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.35,11,8
3037_16,16,16,"statesForRequest = updateStatesForRequests(false, currentBestBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.49,10,7
3037_17,17,17,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.09,9,6
3037_18,18,18,"statesForRequest = updateStatesForRequests(true, currentBestBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.49,8,5
3037_21,21,47,"for (RequestState requestState : statesForRequest) {
String peerAlias = requestState.alias;
long from = requestState.from;
int take = requestState.size;

if (from <= requestState.lastBestBlock || requestState.lastBestBlock == 0) {
p2pManager.send(requestState.id, peerAlias, new ReqBlocksHeaders(from, take));
requestHeight = Math.max(requestHeight, from + take);

requestState.saveRequestTime(System.nanoTime());
availablePeerStates.remove(requestState.id);
bookedPeerStates.put(requestState.id, requestState);

syncLog.debug(
""<get-headers mode={} from-num={} size={} node={}>"",
requestState.mode,
from,
take,
peerAlias);

syncStatistics.updateTotalRequestsToPeer(peerAlias, RequestType.STATUS);
syncStatistics.updateRequestTime(peerAlias, System.nanoTime(), RequestType.HEADERS);
count++;
} else {
requestState.from = 0;
}
}",0,0,0,1,0,0,0,0,0,15,3,27,0,0,1,1,2,2,0,0,2,0.69,0,0
3037_22,22,22,String peerAlias = requestState.alias;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.49,4,3
3037_23,23,23,long from = requestState.from;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.55,3,2
3037_24,24,24,int take = requestState.size;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,2,2,0,0,1,0.51,2,1
3037_26,26,46,"if (from <= requestState.lastBestBlock || requestState.lastBestBlock == 0) {
p2pManager.send(requestState.id, peerAlias, new ReqBlocksHeaders(from, take));
requestHeight = Math.max(requestHeight, from + take);

requestState.saveRequestTime(System.nanoTime());
availablePeerStates.remove(requestState.id);
bookedPeerStates.put(requestState.id, requestState);

syncLog.debug(
""<get-headers mode={} from-num={} size={} node={}>"",
requestState.mode,
from,
take,
peerAlias);

syncStatistics.updateTotalRequestsToPeer(peerAlias, RequestType.STATUS);
syncStatistics.updateRequestTime(peerAlias, System.nanoTime(), RequestType.HEADERS);
count++;
} else {
requestState.from = 0;
}",1,0,0,0,0,0,0,0,0,11,2,21,0,0,1,0,2,2,0,0,2,0.69,0,0
3037_27,27,27,"p2pManager.send(requestState.id, peerAlias, new ReqBlocksHeaders(from, take));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,2,0.7,0,0
3037_28,28,28,"requestHeight = Math.max(requestHeight, from + take);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,1,0.56,1,0
3037_30,30,30,requestState.saveRequestTime(System.nanoTime());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,2,0,0,1,0.56,3,2
3037_31,31,31,availablePeerStates.remove(requestState.id);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.53,4,2
3037_32,32,32,"bookedPeerStates.put(requestState.id, requestState);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,1,0.56,5,3
3037_34,34,39,"syncLog.debug(
""<get-headers mode={} from-num={} size={} node={}>"",
requestState.mode,
from,
take,
peerAlias);",0,0,0,0,0,0,0,0,0,0,0,6,0,0,1,1,2,2,0,0,1,0.51,7,5
3037_41,41,41,"syncStatistics.updateTotalRequestsToPeer(peerAlias, RequestType.STATUS);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,2,0,0,1,0.52,14,6
3037_42,42,42,"syncStatistics.updateRequestTime(peerAlias, System.nanoTime(), RequestType.HEADERS);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.52,15,6
3037_43,43,43,count++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.17,16,7
3037_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.09,17,8
3037_45,45,45,requestState.from = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.51,18,9
3037_49,49,49,long duration = System.nanoTime() - startTime;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.28,22,11
3037_50,50,54,"surveyLog.debug(
""Request Stage 2: made {} header request{}, duration = {} ns."",
count,
(count == 1 ? """" : ""s""),
duration);",0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,0,2,2,0,0,1,0.55,23,11
3038_1,1,1,"private void sendHeadersRequestsInternal(long currentBestBlock, BigInteger currentTotalDifficulty, IP2pMgr p2pManager, SyncStats syncStatistics) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,2,0.58,26,16
3038_2,2,2,long startTime = System.nanoTime();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,3,1,0,0,0.32,25,15
3038_4,4,4,int count = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,3,1,0,0,0.27,23,14
3038_6,6,9,"Map<Integer, INode> currentNodes =
p2pManager.getActiveNodes().values().stream()
.filter(node -> isAdequateTotalDifficulty(node, currentTotalDifficulty))
.collect(Collectors.toMap(node -> node.getIdHash(), node -> node));",0,0,0,0,0,1,0,0,0,0,0,4,0,0,1,1,6,3,1,0,1,0.37,18,13
3038_11,11,11,updateActiveNodes(currentNodes);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,3,1,0,2,0.53,16,12
3038_13,13,13,List<RequestState> statesForRequest;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,1,0,1,0.58,14,11
3038_14,14,19,"if (requestHeight > localHeight + MAX_BLOCK_DIFF) {
syncLog.debug(""<get-headers near top of chain>"");
statesForRequest = updateStatesForRequests(false, currentBestBlock);
} else {
statesForRequest = updateStatesForRequests(true, currentBestBlock);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,1,6,3,1,0,4,0.72,8,6
3038_15,15,15,"syncLog.debug(""<get-headers near top of chain>"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.32,12,9
3038_16,16,16,"statesForRequest = updateStatesForRequests(false, currentBestBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,3,0.75,11,8
3038_17,17,17,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.13,10,7
3038_18,18,18,"statesForRequest = updateStatesForRequests(true, currentBestBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,3,0.74,9,6
3038_21,21,47,"for (RequestState requestState : statesForRequest) {
String peerAlias = requestState.alias;
long from = requestState.from;
int take = requestState.size;

if (from <= requestState.lastBestBlock || requestState.lastBestBlock == 0) {
p2pManager.send(requestState.id, peerAlias, new ReqBlocksHeaders(from, take));
requestHeight = Math.max(requestHeight, from + take);

requestState.saveRequestTime(System.nanoTime());
availablePeerStates.remove(requestState.id);
bookedPeerStates.put(requestState.id, requestState);

syncLog.debug(
""<get-headers mode={} from-num={} size={} node={}>"",
requestState.mode,
from,
take,
peerAlias);

syncStatistics.updateTotalRequestsToPeer(peerAlias, RequestType.STATUS);
syncStatistics.updateRequestTime(peerAlias, System.nanoTime(), RequestType.HEADERS);
count++;
} else {
requestState.from = 0;
}
}",0,0,0,1,0,0,0,0,0,15,3,27,0,0,1,1,6,3,1,0,3,0.65,0,0
3038_22,22,22,String peerAlias = requestState.alias;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.54,5,4
3038_23,23,23,long from = requestState.from;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.55,4,3
3038_24,24,24,int take = requestState.size;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,6,3,1,0,1,0.57,3,2
3038_26,26,46,"if (from <= requestState.lastBestBlock || requestState.lastBestBlock == 0) {
p2pManager.send(requestState.id, peerAlias, new ReqBlocksHeaders(from, take));
requestHeight = Math.max(requestHeight, from + take);

requestState.saveRequestTime(System.nanoTime());
availablePeerStates.remove(requestState.id);
bookedPeerStates.put(requestState.id, requestState);

syncLog.debug(
""<get-headers mode={} from-num={} size={} node={}>"",
requestState.mode,
from,
take,
peerAlias);

syncStatistics.updateTotalRequestsToPeer(peerAlias, RequestType.STATUS);
syncStatistics.updateRequestTime(peerAlias, System.nanoTime(), RequestType.HEADERS);
count++;
} else {
requestState.from = 0;
}",1,0,0,0,0,0,0,0,0,11,2,21,0,0,1,0,6,3,1,0,3,0.64,0,0
3038_27,27,27,"p2pManager.send(requestState.id, peerAlias, new ReqBlocksHeaders(from, take));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.5,0,0
3038_28,28,28,"requestHeight = Math.max(requestHeight, from + take);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,3,1,0,2,0.71,0,0
3038_30,30,30,requestState.saveRequestTime(System.nanoTime());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,3,1,0,1,0.54,2,1
3038_31,31,31,availablePeerStates.remove(requestState.id);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,1,0.52,3,1
3038_32,32,32,"bookedPeerStates.put(requestState.id, requestState);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,3,1,0,1,0.53,4,2
3038_34,34,39,"syncLog.debug(
""<get-headers mode={} from-num={} size={} node={}>"",
requestState.mode,
from,
take,
peerAlias);",0,0,0,0,0,0,0,0,0,0,0,6,0,0,1,1,6,3,1,0,1,0.5,6,4
3038_41,41,41,"syncStatistics.updateTotalRequestsToPeer(peerAlias, RequestType.STATUS);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,3,1,0,2,0.63,13,5
3038_42,42,42,"syncStatistics.updateRequestTime(peerAlias, System.nanoTime(), RequestType.HEADERS);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,1,0,2,0.61,14,5
3038_43,43,43,count++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.17,15,6
3038_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,0,0.13,16,7
3038_45,45,45,requestState.from = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,1,0,1,0.56,17,8
3038_49,49,49,long duration = System.nanoTime() - startTime;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,1,0,0,0.32,21,10
3038_50,50,54,"surveyLog.debug(
""Request Stage 2: made {} header request{}, duration = {} ns."",
count,
(count == 1 ? """" : ""s""),
duration);",0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,0,6,3,1,0,1,0.48,22,10
3039_1,1,1,"private void sendHeadersRequestsInternal(long currentBestBlock, BigInteger currentTotalDifficulty, IP2pMgr p2pManager, SyncStats syncStatistics) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.5,28,17
3039_2,2,2,long startTime = System.nanoTime();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,1,0,0,0.37,27,16
3039_4,4,4,int count = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,1,0,0,0.24,25,15
3039_6,6,9,"Map<Integer, INode> currentNodes =
p2pManager.getActiveNodes().values().stream()
.filter(node -> isAdequateTotalDifficulty(node, currentTotalDifficulty))
.collect(Collectors.toMap(node -> node.getIdHash(), node -> node));",0,0,0,0,0,1,0,0,0,0,0,4,0,0,1,1,6,4,1,0,0,0.38,20,14
3039_11,11,11,updateActiveNodes(currentNodes);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,1,0,0,0.33,18,13
3039_13,13,13,List<RequestState> statesForRequest;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,1,0,1,0.49,16,12
3039_14,14,19,"if (requestHeight > localHeight + MAX_BLOCK_DIFF) {
syncLog.debug(""<get-headers near top of chain>"");
statesForRequest = updateStatesForRequests(false, currentBestBlock);
} else {
statesForRequest = updateStatesForRequests(true, currentBestBlock);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,1,6,4,1,0,1,0.5,10,7
3039_15,15,15,"syncLog.debug(""<get-headers near top of chain>"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.38,14,10
3039_16,16,16,"statesForRequest = updateStatesForRequests(false, currentBestBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.46,13,9
3039_17,17,17,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.18,12,8
3039_18,18,18,"statesForRequest = updateStatesForRequests(true, currentBestBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.46,11,7
3039_21,21,47,"for (RequestState requestState : statesForRequest) {
String peerAlias = requestState.alias;
long from = requestState.from;
int take = requestState.size;

if (from <= requestState.lastBestBlock || requestState.lastBestBlock == 0) {
p2pManager.send(requestState.id, peerAlias, new ReqBlocksHeaders(from, take));
requestHeight = Math.max(requestHeight, from + take);

requestState.saveRequestTime(System.nanoTime());
availablePeerStates.remove(requestState.id);
bookedPeerStates.put(requestState.id, requestState);

syncLog.debug(
""<get-headers mode={} from-num={} size={} node={}>"",
requestState.mode,
from,
take,
peerAlias);

syncStatistics.updateTotalRequestsToPeer(peerAlias, RequestType.STATUS);
syncStatistics.updateRequestTime(peerAlias, System.nanoTime(), RequestType.HEADERS);
count++;
} else {
requestState.from = 0;
}
}",0,0,0,1,0,0,0,0,0,15,3,27,0,0,1,1,6,4,1,0,2,0.58,0,0
3039_22,22,22,String peerAlias = requestState.alias;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.49,7,5
3039_23,23,23,long from = requestState.from;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.48,6,4
3039_24,24,24,int take = requestState.size;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,6,4,1,0,1,0.45,5,3
3039_26,26,46,"if (from <= requestState.lastBestBlock || requestState.lastBestBlock == 0) {
p2pManager.send(requestState.id, peerAlias, new ReqBlocksHeaders(from, take));
requestHeight = Math.max(requestHeight, from + take);

requestState.saveRequestTime(System.nanoTime());
availablePeerStates.remove(requestState.id);
bookedPeerStates.put(requestState.id, requestState);

syncLog.debug(
""<get-headers mode={} from-num={} size={} node={}>"",
requestState.mode,
from,
take,
peerAlias);

syncStatistics.updateTotalRequestsToPeer(peerAlias, RequestType.STATUS);
syncStatistics.updateRequestTime(peerAlias, System.nanoTime(), RequestType.HEADERS);
count++;
} else {
requestState.from = 0;
}",1,0,0,0,0,0,0,0,0,11,2,21,0,0,1,0,6,4,1,0,2,0.58,0,0
3039_27,27,27,"p2pManager.send(requestState.id, peerAlias, new ReqBlocksHeaders(from, take));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.47,2,1
3039_28,28,28,"requestHeight = Math.max(requestHeight, from + take);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,4,1,0,1,0.5,1,0
3039_30,30,30,requestState.saveRequestTime(System.nanoTime());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,4,1,0,1,0.52,0,0
3039_31,31,31,availablePeerStates.remove(requestState.id);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,2,0.58,1,0
3039_32,32,32,"bookedPeerStates.put(requestState.id, requestState);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,4,1,0,1,0.52,2,1
3039_34,34,39,"syncLog.debug(
""<get-headers mode={} from-num={} size={} node={}>"",
requestState.mode,
from,
take,
peerAlias);",0,0,0,0,0,0,0,0,0,0,0,6,0,0,1,1,6,4,1,0,1,0.49,4,3
3039_41,41,41,"syncStatistics.updateTotalRequestsToPeer(peerAlias, RequestType.STATUS);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,4,1,0,1,0.51,11,4
3039_42,42,42,"syncStatistics.updateRequestTime(peerAlias, System.nanoTime(), RequestType.HEADERS);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.51,12,4
3039_43,43,43,count++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.21,13,5
3039_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.18,14,6
3039_45,45,45,requestState.from = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.45,15,7
3039_49,49,49,long duration = System.nanoTime() - startTime;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,1,0,0,0.38,19,9
3039_50,50,54,"surveyLog.debug(
""Request Stage 2: made {} header request{}, duration = {} ns."",
count,
(count == 1 ? """" : ""s""),
duration);",0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,0,6,4,1,0,2,0.56,20,9
3040_1,1,1,"private void sendHeadersRequestsInternal(long currentBestBlock, BigInteger currentTotalDifficulty, IP2pMgr p2pManager, SyncStats syncStatistics) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.52,39,21
3040_2,2,2,long startTime = System.nanoTime();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.33,38,20
3040_4,4,4,int count = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.32,36,19
3040_6,6,9,"Map<Integer, INode> currentNodes =
p2pManager.getActiveNodes().values().stream()
.filter(node -> isAdequateTotalDifficulty(node, currentTotalDifficulty))
.collect(Collectors.toMap(node -> node.getIdHash(), node -> node));",0,0,0,0,0,1,0,0,0,0,0,4,0,0,1,1,2,2,0,0,0,0.44,31,18
3040_11,11,11,updateActiveNodes(currentNodes);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.33,29,17
3040_13,13,13,List<RequestState> statesForRequest;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.14,27,16
3040_14,14,19,"if (requestHeight > localHeight + MAX_BLOCK_DIFF) {
syncLog.debug(""<get-headers near top of chain>"");
statesForRequest = updateStatesForRequests(false, currentBestBlock);
} else {
statesForRequest = updateStatesForRequests(true, currentBestBlock);
}",1,0,0,0,0,0,0,0,0,4,1,6,0,1,0,1,2,2,0,0,0,0.35,21,11
3040_15,15,15,"syncLog.debug(""<get-headers near top of chain>"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,25,14
3040_16,16,16,"statesForRequest = updateStatesForRequests(false, currentBestBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,24,13
3040_17,17,17,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.19,23,12
3040_18,18,18,"statesForRequest = updateStatesForRequests(true, currentBestBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.23,22,11
3040_21,21,47,"for (RequestState requestState : statesForRequest) {
String peerAlias = requestState.alias;
long from = requestState.from;
int take = requestState.size;

if (from <= requestState.lastBestBlock || requestState.lastBestBlock == 0) {
p2pManager.send(requestState.id, peerAlias, new ReqBlocksHeaders(from, take));
requestHeight = Math.max(requestHeight, from + take);

requestState.saveRequestTime(System.nanoTime());
availablePeerStates.remove(requestState.id);
bookedPeerStates.put(requestState.id, requestState);

syncLog.debug(
""<get-headers mode={} from-num={} size={} node={}>"",
requestState.mode,
from,
take,
peerAlias);

syncStatistics.updateTotalRequestsToPeer(peerAlias, RequestType.STATUS);
syncStatistics.updateRequestTime(peerAlias, System.nanoTime(), RequestType.HEADERS);
count++;
} else {
requestState.from = 0;
}
}",0,0,0,1,0,0,0,0,0,15,3,27,0,0,1,1,2,2,0,0,0,0.37,0,0
3040_22,22,22,String peerAlias = requestState.alias;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.3,18,9
3040_23,23,23,long from = requestState.from;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.26,17,8
3040_24,24,24,int take = requestState.size;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.28,16,7
3040_26,26,46,"if (from <= requestState.lastBestBlock || requestState.lastBestBlock == 0) {
p2pManager.send(requestState.id, peerAlias, new ReqBlocksHeaders(from, take));
requestHeight = Math.max(requestHeight, from + take);

requestState.saveRequestTime(System.nanoTime());
availablePeerStates.remove(requestState.id);
bookedPeerStates.put(requestState.id, requestState);

syncLog.debug(
""<get-headers mode={} from-num={} size={} node={}>"",
requestState.mode,
from,
take,
peerAlias);

syncStatistics.updateTotalRequestsToPeer(peerAlias, RequestType.STATUS);
syncStatistics.updateRequestTime(peerAlias, System.nanoTime(), RequestType.HEADERS);
count++;
} else {
requestState.from = 0;
}",1,0,0,0,0,0,0,0,0,11,2,21,0,0,1,0,2,2,0,0,0,0.37,0,0
3040_27,27,27,"p2pManager.send(requestState.id, peerAlias, new ReqBlocksHeaders(from, take));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.34,13,5
3040_28,28,28,"requestHeight = Math.max(requestHeight, from + take);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.26,12,4
3040_30,30,30,requestState.saveRequestTime(System.nanoTime());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.3,10,3
3040_31,31,31,availablePeerStates.remove(requestState.id);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.32,9,2
3040_32,32,32,"bookedPeerStates.put(requestState.id, requestState);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.39,8,1
3040_34,34,39,"syncLog.debug(
""<get-headers mode={} from-num={} size={} node={}>"",
requestState.mode,
from,
take,
peerAlias);",0,0,0,0,0,0,0,0,0,0,0,6,0,0,1,1,2,2,0,0,0,0.33,1,0
3040_41,41,41,"syncStatistics.updateTotalRequestsToPeer(peerAlias, RequestType.STATUS);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.35,0,0
3040_42,42,42,"syncStatistics.updateRequestTime(peerAlias, System.nanoTime(), RequestType.HEADERS);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.33,1,0
3040_43,43,43,count++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.35,2,1
3040_44,44,44,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.19,3,2
3040_45,45,45,requestState.from = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.18,4,3
3040_49,49,49,long duration = System.nanoTime() - startTime;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.33,8,5
3040_50,50,54,"surveyLog.debug(
""Request Stage 2: made {} header request{}, duration = {} ns."",
count,
(count == 1 ? """" : ""s""),
duration);",0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,0,2,2,0,0,0,0.38,9,5
3041_1,1,1,"    private void updateActiveNodes(Map<Integer, INode> current) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,2,3,0,4,0.69,0,0
3041_2,2,5,"Set<Integer> dropped =
knownActiveNodes.stream()
.filter(node -> !current.containsKey(node))
.collect(Collectors.toSet());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,8,2,3,0,5,0.75,0,0
3041_7,7,11,"for (Integer id : dropped) {
storedHeaders.remove(id);
bookedPeerStates.remove(id);
availablePeerStates.remove(id);
}",0,0,0,1,0,0,0,0,0,3,1,5,0,0,1,1,8,2,3,0,0,0.37,5,1
3041_8,8,8,storedHeaders.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,2,3,0,0,0.3,6,1
3041_9,9,9,bookedPeerStates.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,2,3,0,0,0.39,7,2
3041_10,10,10,availablePeerStates.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,2,3,0,0,0.35,8,3
3041_13,13,25,"for (INode node : current.values()) {
Integer id = node.getIdHash();
if (bookedPeerStates.containsKey(id)) {
bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else if (availablePeerStates.containsKey(id)) {
availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else {
availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));
}

networkHeight = Math.max(networkHeight, node.getBestBlockNumber());
}",0,0,0,1,0,0,0,0,0,8,2,13,0,0,1,1,8,2,3,0,2,0.54,11,5
3041_14,14,14,Integer id = node.getIdHash();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,2,3,0,1,0.49,12,5
3041_15,15,22,"if (bookedPeerStates.containsKey(id)) {
bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else if (availablePeerStates.containsKey(id)) {
availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else {
availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));
}",1,0,0,0,0,0,0,0,0,5,1,8,0,1,0,1,8,2,3,0,1,0.47,13,6
3041_16,16,16,bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,2,3,0,1,0.49,14,7
3041_17,17,17,} else if (availablePeerStates.containsKey(id)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,2,3,0,0,0.34,15,8
3041_18,18,18,availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,2,3,0,1,0.46,16,9
3041_19,19,19,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,2,3,0,0,0.19,17,10
3041_20,20,21,"availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,2,3,0,1,0.46,18,11
3041_24,24,24,"networkHeight = Math.max(networkHeight, node.getBestBlockNumber());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,2,3,0,1,0.41,22,13
3041_27,27,27,knownActiveNodes.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,2,3,0,3,0.67,25,14
3041_28,28,28,knownActiveNodes.addAll(current.keySet());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,2,3,0,5,0.78,26,14
3041_30,30,39,"if (!bookedPeerStates.isEmpty()) {
Iterator<RequestState> states = bookedPeerStates.values().iterator();
while (states.hasNext()) {
RequestState currentState = states.next();
if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}
}
}",1,0,0,0,0,0,0,0,0,6,3,10,0,0,1,0,8,2,3,0,1,0.45,28,16
3041_31,31,31,Iterator<RequestState> states = bookedPeerStates.values().iterator();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,2,3,0,0,0.37,29,16
3041_32,32,38,"while (states.hasNext()) {
RequestState currentState = states.next();
if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}
}",0,1,0,0,0,0,0,0,0,4,2,7,0,1,0,0,8,2,3,0,1,0.45,30,17
3041_33,33,33,RequestState currentState = states.next();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,2,3,0,1,0.4,31,18
3041_34,34,37,"if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,8,2,3,0,1,0.46,32,19
3041_35,35,35,"availablePeerStates.put(currentState.id, currentState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,2,3,0,1,0.48,33,20
3041_36,36,36,states.remove();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,2,3,0,0,0.3,34,21
3042_1,1,1,"    private void updateActiveNodes(Map<Integer, INode> current) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,5,1
3042_2,2,5,"Set<Integer> dropped =
knownActiveNodes.stream()
.filter(node -> !current.containsKey(node))
.collect(Collectors.toSet());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,3,2,0,0,1,0.46,1,0
3042_7,7,11,"for (Integer id : dropped) {
storedHeaders.remove(id);
bookedPeerStates.remove(id);
availablePeerStates.remove(id);
}",0,0,0,1,0,0,0,0,0,3,1,5,0,0,1,1,3,2,0,0,2,0.61,0,0
3042_8,8,8,storedHeaders.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,1,0.42,1,0
3042_9,9,9,bookedPeerStates.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,1,0.48,2,1
3042_10,10,10,availablePeerStates.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,1,0.49,3,2
3042_13,13,25,"for (INode node : current.values()) {
Integer id = node.getIdHash();
if (bookedPeerStates.containsKey(id)) {
bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else if (availablePeerStates.containsKey(id)) {
availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else {
availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));
}

networkHeight = Math.max(networkHeight, node.getBestBlockNumber());
}",0,0,0,1,0,0,0,0,0,8,2,13,0,0,1,1,3,2,0,0,0,0.39,6,4
3042_14,14,14,Integer id = node.getIdHash();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.28,7,4
3042_15,15,22,"if (bookedPeerStates.containsKey(id)) {
bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else if (availablePeerStates.containsKey(id)) {
availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else {
availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));
}",1,0,0,0,0,0,0,0,0,5,1,8,0,1,0,1,3,2,0,0,0,0.33,8,5
3042_16,16,16,bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.32,9,6
3042_17,17,17,} else if (availablePeerStates.containsKey(id)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.29,10,7
3042_18,18,18,availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.33,11,8
3042_19,19,19,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.17,12,9
3042_20,20,21,"availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.32,13,10
3042_24,24,24,"networkHeight = Math.max(networkHeight, node.getBestBlockNumber());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.45,17,12
3042_27,27,27,knownActiveNodes.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,2,0,0,0,0.31,20,13
3042_28,28,28,knownActiveNodes.addAll(current.keySet());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.29,21,13
3042_30,30,39,"if (!bookedPeerStates.isEmpty()) {
Iterator<RequestState> states = bookedPeerStates.values().iterator();
while (states.hasNext()) {
RequestState currentState = states.next();
if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}
}
}",1,0,0,0,0,0,0,0,0,6,3,10,0,0,1,0,3,2,0,0,1,0.43,23,15
3042_31,31,31,Iterator<RequestState> states = bookedPeerStates.values().iterator();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.3,24,15
3042_32,32,38,"while (states.hasNext()) {
RequestState currentState = states.next();
if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}
}",0,1,0,0,0,0,0,0,0,4,2,7,0,1,0,0,3,2,0,0,1,0.42,25,16
3042_33,33,33,RequestState currentState = states.next();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.27,26,17
3042_34,34,37,"if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,3,2,0,0,1,0.42,27,18
3042_35,35,35,"availablePeerStates.put(currentState.id, currentState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.28,28,19
3042_36,36,36,states.remove();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.58,29,20
3043_1,1,1,"    private void updateActiveNodes(Map<Integer, INode> current) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,1,0.46,11,5
3043_2,2,5,"Set<Integer> dropped =
knownActiveNodes.stream()
.filter(node -> !current.containsKey(node))
.collect(Collectors.toSet());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,8,3,2,0,1,0.47,7,4
3043_7,7,11,"for (Integer id : dropped) {
storedHeaders.remove(id);
bookedPeerStates.remove(id);
availablePeerStates.remove(id);
}",0,0,0,1,0,0,0,0,0,3,1,5,0,0,1,1,8,3,2,0,1,0.49,1,0
3043_8,8,8,storedHeaders.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,3,2,0,0,0.33,4,2
3043_9,9,9,bookedPeerStates.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,3,2,0,1,0.54,3,1
3043_10,10,10,availablePeerStates.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,8,3,2,0,1,0.51,2,0
3043_13,13,25,"for (INode node : current.values()) {
Integer id = node.getIdHash();
if (bookedPeerStates.containsKey(id)) {
bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else if (availablePeerStates.containsKey(id)) {
availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else {
availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));
}

networkHeight = Math.max(networkHeight, node.getBestBlockNumber());
}",0,0,0,1,0,0,0,0,0,8,2,13,0,0,1,1,8,3,2,0,4,0.66,0,0
3043_14,14,14,Integer id = node.getIdHash();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,3,2,0,0,0.39,1,0
3043_15,15,22,"if (bookedPeerStates.containsKey(id)) {
bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else if (availablePeerStates.containsKey(id)) {
availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else {
availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));
}",1,0,0,0,0,0,0,0,0,5,1,8,0,1,0,1,8,3,2,0,4,0.67,2,1
3043_16,16,16,bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,3,0.67,3,2
3043_17,17,17,} else if (availablePeerStates.containsKey(id)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,1,0.48,4,3
3043_18,18,18,availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,3,0.66,5,4
3043_19,19,19,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.25,6,5
3043_20,20,21,"availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,3,2,0,4,0.65,7,6
3043_24,24,24,"networkHeight = Math.max(networkHeight, node.getBestBlockNumber());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,3,2,0,2,0.56,11,8
3043_27,27,27,knownActiveNodes.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,8,3,2,0,1,0.49,14,9
3043_28,28,28,knownActiveNodes.addAll(current.keySet());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,8,3,2,0,2,0.53,15,9
3043_30,30,39,"if (!bookedPeerStates.isEmpty()) {
Iterator<RequestState> states = bookedPeerStates.values().iterator();
while (states.hasNext()) {
RequestState currentState = states.next();
if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}
}
}",1,0,0,0,0,0,0,0,0,6,3,10,0,0,1,0,8,3,2,0,1,0.49,17,11
3043_31,31,31,Iterator<RequestState> states = bookedPeerStates.values().iterator();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,3,2,0,1,0.5,18,11
3043_32,32,38,"while (states.hasNext()) {
RequestState currentState = states.next();
if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}
}",0,1,0,0,0,0,0,0,0,4,2,7,0,1,0,0,8,3,2,0,1,0.46,19,12
3043_33,33,33,RequestState currentState = states.next();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,3,2,0,0,0.32,20,13
3043_34,34,37,"if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,8,3,2,0,1,0.46,21,14
3043_35,35,35,"availablePeerStates.put(currentState.id, currentState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,1,0.48,22,15
3043_36,36,36,states.remove();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,3,2,0,0,0.3,23,16
3044_1,1,1,"    private void updateActiveNodes(Map<Integer, INode> current) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.39,18,12
3044_2,2,5,"Set<Integer> dropped =
knownActiveNodes.stream()
.filter(node -> !current.containsKey(node))
.collect(Collectors.toSet());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,2,1,1,0,0,0.44,14,11
3044_7,7,11,"for (Integer id : dropped) {
storedHeaders.remove(id);
bookedPeerStates.remove(id);
availablePeerStates.remove(id);
}",0,0,0,1,0,0,0,0,0,3,1,5,0,0,1,1,2,1,1,0,1,0.58,8,7
3044_8,8,8,storedHeaders.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,1,1,0,0,0.37,11,9
3044_9,9,9,bookedPeerStates.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,1,1,0,1,0.62,10,8
3044_10,10,10,availablePeerStates.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,1,1,0,1,0.6,9,7
3044_13,13,25,"for (INode node : current.values()) {
Integer id = node.getIdHash();
if (bookedPeerStates.containsKey(id)) {
bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else if (availablePeerStates.containsKey(id)) {
availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else {
availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));
}

networkHeight = Math.max(networkHeight, node.getBestBlockNumber());
}",0,0,0,1,0,0,0,0,0,8,2,13,0,0,1,1,2,1,1,0,1,0.57,0,0
3044_14,14,14,Integer id = node.getIdHash();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.43,5,5
3044_15,15,22,"if (bookedPeerStates.containsKey(id)) {
bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else if (availablePeerStates.containsKey(id)) {
availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else {
availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));
}",1,0,0,0,0,0,0,0,0,5,1,8,0,1,0,1,2,1,1,0,1,0.58,0,0
3044_16,16,16,bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.59,3,3
3044_17,17,17,} else if (availablePeerStates.containsKey(id)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.57,2,2
3044_18,18,18,availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.58,1,1
3044_19,19,19,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.2,0,0
3044_20,20,21,"availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,1,0,1,0.57,0,0
3044_24,24,24,"networkHeight = Math.max(networkHeight, node.getBestBlockNumber());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,1,1,0,0,0.45,4,1
3044_27,27,27,knownActiveNodes.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,1,1,0,0,0.39,7,2
3044_28,28,28,knownActiveNodes.addAll(current.keySet());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,1,0,1,0.58,8,2
3044_30,30,39,"if (!bookedPeerStates.isEmpty()) {
Iterator<RequestState> states = bookedPeerStates.values().iterator();
while (states.hasNext()) {
RequestState currentState = states.next();
if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}
}
}",1,0,0,0,0,0,0,0,0,6,3,10,0,0,1,0,2,1,1,0,1,0.56,10,4
3044_31,31,31,Iterator<RequestState> states = bookedPeerStates.values().iterator();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,1,0.57,11,4
3044_32,32,38,"while (states.hasNext()) {
RequestState currentState = states.next();
if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}
}",0,1,0,0,0,0,0,0,0,4,2,7,0,1,0,0,2,1,1,0,1,0.54,12,5
3044_33,33,33,RequestState currentState = states.next();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,1,0,0,0.3,13,6
3044_34,34,37,"if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,2,1,1,0,1,0.54,14,7
3044_35,35,35,"availablePeerStates.put(currentState.id, currentState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,1,0.56,15,8
3044_36,36,36,states.remove();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0.31,16,9
3045_1,1,1,"    private void updateActiveNodes(Map<Integer, INode> current) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.41,22,13
3045_2,2,5,"Set<Integer> dropped =
knownActiveNodes.stream()
.filter(node -> !current.containsKey(node))
.collect(Collectors.toSet());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,4,2,1,0,1,0.46,18,12
3045_7,7,11,"for (Integer id : dropped) {
storedHeaders.remove(id);
bookedPeerStates.remove(id);
availablePeerStates.remove(id);
}",0,0,0,1,0,0,0,0,0,3,1,5,0,0,1,1,4,2,1,0,0,0.4,12,8
3045_8,8,8,storedHeaders.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.28,15,10
3045_9,9,9,bookedPeerStates.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.39,14,9
3045_10,10,10,availablePeerStates.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.4,13,8
3045_13,13,25,"for (INode node : current.values()) {
Integer id = node.getIdHash();
if (bookedPeerStates.containsKey(id)) {
bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else if (availablePeerStates.containsKey(id)) {
availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else {
availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));
}

networkHeight = Math.max(networkHeight, node.getBestBlockNumber());
}",0,0,0,1,0,0,0,0,0,8,2,13,0,0,1,1,4,2,1,0,2,0.54,0,0
3045_14,14,14,Integer id = node.getIdHash();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.31,9,6
3045_15,15,22,"if (bookedPeerStates.containsKey(id)) {
bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else if (availablePeerStates.containsKey(id)) {
availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else {
availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));
}",1,0,0,0,0,0,0,0,0,5,1,8,0,1,0,1,4,2,1,0,0,0.41,1,0
3045_16,16,16,bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.42,7,4
3045_17,17,17,} else if (availablePeerStates.containsKey(id)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.36,6,3
3045_18,18,18,availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.43,5,2
3045_19,19,19,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.13,4,1
3045_20,20,21,"availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,0,0.4,2,0
3045_24,24,24,"networkHeight = Math.max(networkHeight, node.getBestBlockNumber());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,2,0.65,0,0
3045_27,27,27,knownActiveNodes.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,1,0.43,3,1
3045_28,28,28,knownActiveNodes.addAll(current.keySet());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,1,0.39,4,1
3045_30,30,39,"if (!bookedPeerStates.isEmpty()) {
Iterator<RequestState> states = bookedPeerStates.values().iterator();
while (states.hasNext()) {
RequestState currentState = states.next();
if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}
}
}",1,0,0,0,0,0,0,0,0,6,3,10,0,0,1,0,4,2,1,0,0,0.39,6,3
3045_31,31,31,Iterator<RequestState> states = bookedPeerStates.values().iterator();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.37,7,3
3045_32,32,38,"while (states.hasNext()) {
RequestState currentState = states.next();
if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}
}",0,1,0,0,0,0,0,0,0,4,2,7,0,1,0,0,4,2,1,0,0,0.38,8,4
3045_33,33,33,RequestState currentState = states.next();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.3,9,5
3045_34,34,37,"if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,4,2,1,0,0,0.38,10,6
3045_35,35,35,"availablePeerStates.put(currentState.id, currentState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.38,11,7
3045_36,36,36,states.remove();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.31,12,8
3046_1,1,1,"    private void updateActiveNodes(Map<Integer, INode> current) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,3,0.74,25,14
3046_2,2,5,"Set<Integer> dropped =
knownActiveNodes.stream()
.filter(node -> !current.containsKey(node))
.collect(Collectors.toSet());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,4,2,1,0,3,0.68,21,13
3046_7,7,11,"for (Integer id : dropped) {
storedHeaders.remove(id);
bookedPeerStates.remove(id);
availablePeerStates.remove(id);
}",0,0,0,1,0,0,0,0,0,3,1,5,0,0,1,1,4,2,1,0,0,0.36,15,9
3046_8,8,8,storedHeaders.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.31,18,11
3046_9,9,9,bookedPeerStates.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.38,17,10
3046_10,10,10,availablePeerStates.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,2,1,0,0,0.36,16,9
3046_13,13,25,"for (INode node : current.values()) {
Integer id = node.getIdHash();
if (bookedPeerStates.containsKey(id)) {
bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else if (availablePeerStates.containsKey(id)) {
availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else {
availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));
}

networkHeight = Math.max(networkHeight, node.getBestBlockNumber());
}",0,0,0,1,0,0,0,0,0,8,2,13,0,0,1,1,4,2,1,0,1,0.46,1,0
3046_14,14,14,Integer id = node.getIdHash();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.46,12,7
3046_15,15,22,"if (bookedPeerStates.containsKey(id)) {
bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else if (availablePeerStates.containsKey(id)) {
availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else {
availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));
}",1,0,0,0,0,0,0,0,0,5,1,8,0,1,0,1,4,2,1,0,1,0.45,4,1
3046_16,16,16,bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.47,10,5
3046_17,17,17,} else if (availablePeerStates.containsKey(id)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.33,9,4
3046_18,18,18,availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.46,8,3
3046_19,19,19,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.21,7,2
3046_20,20,21,"availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,1,0.46,5,1
3046_24,24,24,"networkHeight = Math.max(networkHeight, node.getBestBlockNumber());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,1,0.4,2,0
3046_27,27,27,knownActiveNodes.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,2,1,0,3,0.82,0,0
3046_28,28,28,knownActiveNodes.addAll(current.keySet());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,2,1,0,3,0.7,1,0
3046_30,30,39,"if (!bookedPeerStates.isEmpty()) {
Iterator<RequestState> states = bookedPeerStates.values().iterator();
while (states.hasNext()) {
RequestState currentState = states.next();
if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}
}
}",1,0,0,0,0,0,0,0,0,6,3,10,0,0,1,0,4,2,1,0,0,0.36,3,2
3046_31,31,31,Iterator<RequestState> states = bookedPeerStates.values().iterator();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.36,4,2
3046_32,32,38,"while (states.hasNext()) {
RequestState currentState = states.next();
if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}
}",0,1,0,0,0,0,0,0,0,4,2,7,0,1,0,0,4,2,1,0,0,0.35,5,3
3046_33,33,33,RequestState currentState = states.next();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.33,6,4
3046_34,34,37,"if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,4,2,1,0,0,0.34,7,5
3046_35,35,35,"availablePeerStates.put(currentState.id, currentState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.34,8,6
3046_36,36,36,states.remove();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.36,9,7
3047_1,1,1,"    private void updateActiveNodes(Map<Integer, INode> current) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.37,28,16
3047_2,2,5,"Set<Integer> dropped =
knownActiveNodes.stream()
.filter(node -> !current.containsKey(node))
.collect(Collectors.toSet());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,4,3,1,0,0,0.41,24,15
3047_7,7,11,"for (Integer id : dropped) {
storedHeaders.remove(id);
bookedPeerStates.remove(id);
availablePeerStates.remove(id);
}",0,0,0,1,0,0,0,0,0,3,1,5,0,0,1,1,4,3,1,0,3,0.68,18,11
3047_8,8,8,storedHeaders.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,1,0,0,0.29,21,13
3047_9,9,9,bookedPeerStates.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,1,0,2,0.66,20,12
3047_10,10,10,availablePeerStates.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,1,0,2,0.68,19,11
3047_13,13,25,"for (INode node : current.values()) {
Integer id = node.getIdHash();
if (bookedPeerStates.containsKey(id)) {
bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else if (availablePeerStates.containsKey(id)) {
availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else {
availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));
}

networkHeight = Math.max(networkHeight, node.getBestBlockNumber());
}",0,0,0,1,0,0,0,0,0,8,2,13,0,0,1,1,4,3,1,0,3,0.65,4,2
3047_14,14,14,Integer id = node.getIdHash();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,0,0.37,15,9
3047_15,15,22,"if (bookedPeerStates.containsKey(id)) {
bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else if (availablePeerStates.containsKey(id)) {
availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else {
availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));
}",1,0,0,0,0,0,0,0,0,5,1,8,0,1,0,1,4,3,1,0,3,0.66,7,3
3047_16,16,16,bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.57,13,7
3047_17,17,17,} else if (availablePeerStates.containsKey(id)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.64,12,6
3047_18,18,18,availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.6,11,5
3047_19,19,19,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,0,0.22,10,4
3047_20,20,21,"availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,1,0,2,0.6,8,3
3047_24,24,24,"networkHeight = Math.max(networkHeight, node.getBestBlockNumber());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,1,0,0,0.39,5,2
3047_27,27,27,knownActiveNodes.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,3,1,0,0,0.33,2,1
3047_28,28,28,knownActiveNodes.addAll(current.keySet());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,3,1,0,0,0.33,1,0
3047_30,30,39,"if (!bookedPeerStates.isEmpty()) {
Iterator<RequestState> states = bookedPeerStates.values().iterator();
while (states.hasNext()) {
RequestState currentState = states.next();
if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}
}
}",1,0,0,0,0,0,0,0,0,6,3,10,0,0,1,0,4,3,1,0,3,0.73,0,0
3047_31,31,31,Iterator<RequestState> states = bookedPeerStates.values().iterator();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,2,0.65,1,0
3047_32,32,38,"while (states.hasNext()) {
RequestState currentState = states.next();
if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}
}",0,1,0,0,0,0,0,0,0,4,2,7,0,1,0,0,4,3,1,0,2,0.67,2,1
3047_33,33,33,RequestState currentState = states.next();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,1,0,1,0.51,3,2
3047_34,34,37,"if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,4,3,1,0,2,0.68,4,3
3047_35,35,35,"availablePeerStates.put(currentState.id, currentState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,2,0.69,5,4
3047_36,36,36,states.remove();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.51,6,5
3048_1,1,1,"    private void updateActiveNodes(Map<Integer, INode> current) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.36,29,17
3048_2,2,5,"Set<Integer> dropped =
knownActiveNodes.stream()
.filter(node -> !current.containsKey(node))
.collect(Collectors.toSet());",0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,1,5,5,0,0,0,0.41,25,16
3048_7,7,11,"for (Integer id : dropped) {
storedHeaders.remove(id);
bookedPeerStates.remove(id);
availablePeerStates.remove(id);
}",0,0,0,1,0,0,0,0,0,3,1,5,0,0,1,1,5,5,0,0,3,0.63,19,12
3048_8,8,8,storedHeaders.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,5,0,0,0,0.26,22,14
3048_9,9,9,bookedPeerStates.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,5,0,0,2,0.63,21,13
3048_10,10,10,availablePeerStates.remove(id);,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,5,0,0,2,0.64,20,12
3048_13,13,25,"for (INode node : current.values()) {
Integer id = node.getIdHash();
if (bookedPeerStates.containsKey(id)) {
bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else if (availablePeerStates.containsKey(id)) {
availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else {
availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));
}

networkHeight = Math.max(networkHeight, node.getBestBlockNumber());
}",0,0,0,1,0,0,0,0,0,8,2,13,0,0,1,1,5,5,0,0,3,0.62,5,3
3048_14,14,14,Integer id = node.getIdHash();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.37,16,10
3048_15,15,22,"if (bookedPeerStates.containsKey(id)) {
bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else if (availablePeerStates.containsKey(id)) {
availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();
} else {
availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));
}",1,0,0,0,0,0,0,0,0,5,1,8,0,1,0,1,5,5,0,0,3,0.63,8,4
3048_16,16,16,bookedPeerStates.get(id).lastBestBlock = node.getBestBlockNumber();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.56,14,8
3048_17,17,17,} else if (availablePeerStates.containsKey(id)) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.61,13,7
3048_18,18,18,availablePeerStates.get(id).lastBestBlock = node.getBestBlockNumber();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.58,12,6
3048_19,19,19,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.25,11,5
3048_20,20,21,"availablePeerStates.put(
id, new RequestState(id, node.getIdShort(), node.getBestBlockNumber()));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,2,0.58,9,4
3048_24,24,24,"networkHeight = Math.max(networkHeight, node.getBestBlockNumber());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,0,0.4,6,3
3048_27,27,27,knownActiveNodes.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,0,0.33,3,2
3048_28,28,28,knownActiveNodes.addAll(current.keySet());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,5,0,0,0,0.34,2,1
3048_30,30,39,"if (!bookedPeerStates.isEmpty()) {
Iterator<RequestState> states = bookedPeerStates.values().iterator();
while (states.hasNext()) {
RequestState currentState = states.next();
if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}
}
}",1,0,0,0,0,0,0,0,0,6,3,10,0,0,1,0,5,5,0,0,3,0.7,0,0
3048_31,31,31,Iterator<RequestState> states = bookedPeerStates.values().iterator();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.63,0,0
3048_32,32,38,"while (states.hasNext()) {
RequestState currentState = states.next();
if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}
}",0,1,0,0,0,0,0,0,0,4,2,7,0,1,0,0,5,5,0,0,2,0.65,1,0
3048_33,33,33,RequestState currentState = states.next();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.53,2,1
3048_34,34,37,"if (currentState.tryMakeAvailable()) {
availablePeerStates.put(currentState.id, currentState);
states.remove();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,5,5,0,0,2,0.64,3,2
3048_35,35,35,"availablePeerStates.put(currentState.id, currentState);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.66,4,3
3048_36,36,36,states.remove();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.49,5,4
3049_1,1,1,"private List<RequestState> updateStatesForRequests(boolean distantFuture, long currentBestBlock) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,1,0.5,0,0
3049_2,2,2,"localHeight = Math.max(localHeight, currentBestBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,1,1,0,2,0.68,0,0
3049_4,4,4,long nextFrom;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,1,1,0,0,0.21,2,1
3049_5,5,5,SyncMode nextMode;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,1,1,0,0,0.22,3,1
3049_7,7,11,"if (networkHeight >= currentBestBlock + SWITCH_OVERLAPPING_BLOCKS_RANGE) {
nextFrom = Math.max(1, currentBestBlock - FAR_OVERLAPPING_BLOCKS);
} else {
nextFrom = Math.max(1, currentBestBlock - CLOSE_OVERLAPPING_BLOCKS);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,4,1,1,0,1,0.45,5,3
3049_8,8,8,"nextFrom = Math.max(1, currentBestBlock - FAR_OVERLAPPING_BLOCKS);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.43,6,3
3049_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.18,7,4
3049_10,10,10,"nextFrom = Math.max(1, currentBestBlock - CLOSE_OVERLAPPING_BLOCKS);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.41,8,5
3049_12,12,12,nextMode = SyncMode.NORMAL;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,4,1,1,0,0,0.25,10,7
3049_14,14,14,List<RequestState> availableSet = new ArrayList<>(availablePeerStates.values());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,1,1,0,0,0.35,12,8
3049_15,15,17,"if (availableSet.isEmpty()){
return Collections.emptyList();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,4,1,1,0,0,0.38,13,8
3049_16,16,16,return Collections.emptyList();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.35,14,9
3049_19,19,23,"if (!distantFuture) {
RequestState singleRequest = availableSet.get(random.nextInt(availableSet.size()));
availableSet.clear();
availableSet.add(singleRequest);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,1,1,0,0,0.35,17,11
3049_20,20,20,RequestState singleRequest = availableSet.get(random.nextInt(availableSet.size()));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.36,18,11
3049_21,21,21,availableSet.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.29,19,12
3049_22,22,22,availableSet.add(singleRequest);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.29,20,13
3049_25,25,25,List<RequestState> requestStates = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,4,1,1,0,0,0.29,23,15
3049_26,26,51,"for (RequestState state : availableSet) {
int nextSize = state.size - 2;
if (nextSize < MIN_REQUEST_SIZE) {
nextSize = MAX_REQUEST_SIZE;
}

if (state.mode == BACKWARD) {
state.from = Math.max(1, state.from - BACKWARD_SYNC_STEP);
state.size = nextSize;
} else if (state.mode == FORWARD) {
state.from = state.from + state.size;
state.size = nextSize;
} else {
if (state.from == nextFrom) {
nextFrom = nextFrom + state.size;
}

state.from = nextFrom;
state.mode = nextMode;
state.size = nextSize;

nextFrom = Math.max(requestHeight, nextFrom + nextSize);
}

requestStates.add(state);
}",0,0,0,1,0,0,0,0,0,17,3,26,0,1,0,1,4,1,1,0,1,0.47,24,15
3049_27,27,27,int nextSize = state.size - 2;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.39,25,16
3049_28,28,30,"if (nextSize < MIN_REQUEST_SIZE) {
nextSize = MAX_REQUEST_SIZE;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,4,1,1,0,0,0.39,26,17
3049_29,29,29,nextSize = MAX_REQUEST_SIZE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.38,27,18
3049_32,32,48,"if (state.mode == BACKWARD) {
state.from = Math.max(1, state.from - BACKWARD_SYNC_STEP);
state.size = nextSize;
} else if (state.mode == FORWARD) {
state.from = state.from + state.size;
state.size = nextSize;
} else {
if (state.from == nextFrom) {
nextFrom = nextFrom + state.size;
}

state.from = nextFrom;
state.mode = nextMode;
state.size = nextSize;

nextFrom = Math.max(requestHeight, nextFrom + nextSize);
}",1,0,0,0,0,0,0,0,0,12,2,17,0,0,1,1,4,1,1,0,1,0.47,30,20
3049_33,33,33,"state.from = Math.max(1, state.from - BACKWARD_SYNC_STEP);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.45,31,20
3049_34,34,34,state.size = nextSize;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.39,32,21
3049_35,35,35,} else if (state.mode == FORWARD) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.29,33,22
3049_36,36,36,state.from = state.from + state.size;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.39,34,23
3049_37,37,37,state.size = nextSize;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.39,35,24
3049_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.18,36,25
3049_39,39,41,"if (state.from == nextFrom) {
nextFrom = nextFrom + state.size;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,4,1,1,0,0,0.34,37,26
3049_40,40,40,nextFrom = nextFrom + state.size;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,1,0,0,0.35,38,27
3049_43,43,43,state.from = nextFrom;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,1,1,0,0,0.24,41,29
3049_44,44,44,state.mode = nextMode;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,1,0,0,0.22,42,29
3049_45,45,45,state.size = nextSize;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,1,1,0,0,0.39,43,30
3049_47,47,47,"nextFrom = Math.max(requestHeight, nextFrom + nextSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,1,1,0,1,0.45,45,32
3049_50,50,50,requestStates.add(state);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,1,1,0,0,0.29,48,33
3049_53,53,53,return requestStates;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,1,1,0,0,0.29,51,34
3050_1,1,1,"private List<RequestState> updateStatesForRequests(boolean distantFuture, long currentBestBlock) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,2,0.6,5,3
3050_2,2,2,"localHeight = Math.max(localHeight, currentBestBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,2,0,0,0.32,4,2
3050_4,4,4,long nextFrom;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,6,3,2,0,0,0.31,2,1
3050_5,5,5,SyncMode nextMode;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,3,2,0,0,0.3,1,0
3050_7,7,11,"if (networkHeight >= currentBestBlock + SWITCH_OVERLAPPING_BLOCKS_RANGE) {
nextFrom = Math.max(1, currentBestBlock - FAR_OVERLAPPING_BLOCKS);
} else {
nextFrom = Math.max(1, currentBestBlock - CLOSE_OVERLAPPING_BLOCKS);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,6,3,2,0,0,0.34,0,0
3050_8,8,8,"nextFrom = Math.max(1, currentBestBlock - FAR_OVERLAPPING_BLOCKS);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.32,1,0
3050_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.3,2,1
3050_10,10,10,"nextFrom = Math.max(1, currentBestBlock - CLOSE_OVERLAPPING_BLOCKS);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.3,3,2
3050_12,12,12,nextMode = SyncMode.NORMAL;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,3,2,0,0,0.28,5,4
3050_14,14,14,List<RequestState> availableSet = new ArrayList<>(availablePeerStates.values());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,2,0,2,0.62,7,5
3050_15,15,17,"if (availableSet.isEmpty()){
return Collections.emptyList();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,6,3,2,0,1,0.39,8,5
3050_16,16,16,return Collections.emptyList();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.44,9,6
3050_19,19,23,"if (!distantFuture) {
RequestState singleRequest = availableSet.get(random.nextInt(availableSet.size()));
availableSet.clear();
availableSet.add(singleRequest);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,6,3,2,0,2,0.55,12,8
3050_20,20,20,RequestState singleRequest = availableSet.get(random.nextInt(availableSet.size()));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,2,0,1,0.47,13,8
3050_21,21,21,availableSet.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.24,14,9
3050_22,22,22,availableSet.add(singleRequest);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,2,0.59,15,10
3050_25,25,25,List<RequestState> requestStates = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,3,2,0,2,0.69,18,12
3050_26,26,51,"for (RequestState state : availableSet) {
int nextSize = state.size - 2;
if (nextSize < MIN_REQUEST_SIZE) {
nextSize = MAX_REQUEST_SIZE;
}

if (state.mode == BACKWARD) {
state.from = Math.max(1, state.from - BACKWARD_SYNC_STEP);
state.size = nextSize;
} else if (state.mode == FORWARD) {
state.from = state.from + state.size;
state.size = nextSize;
} else {
if (state.from == nextFrom) {
nextFrom = nextFrom + state.size;
}

state.from = nextFrom;
state.mode = nextMode;
state.size = nextSize;

nextFrom = Math.max(requestHeight, nextFrom + nextSize);
}

requestStates.add(state);
}",0,0,0,1,0,0,0,0,0,17,3,26,0,1,0,1,6,3,2,0,2,0.56,19,12
3050_27,27,27,int nextSize = state.size - 2;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.31,20,13
3050_28,28,30,"if (nextSize < MIN_REQUEST_SIZE) {
nextSize = MAX_REQUEST_SIZE;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,6,3,2,0,1,0.49,21,14
3050_29,29,29,nextSize = MAX_REQUEST_SIZE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,1,0.49,22,15
3050_32,32,48,"if (state.mode == BACKWARD) {
state.from = Math.max(1, state.from - BACKWARD_SYNC_STEP);
state.size = nextSize;
} else if (state.mode == FORWARD) {
state.from = state.from + state.size;
state.size = nextSize;
} else {
if (state.from == nextFrom) {
nextFrom = nextFrom + state.size;
}

state.from = nextFrom;
state.mode = nextMode;
state.size = nextSize;

nextFrom = Math.max(requestHeight, nextFrom + nextSize);
}",1,0,0,0,0,0,0,0,0,12,2,17,0,0,1,1,6,3,2,0,1,0.47,25,17
3050_33,33,33,"state.from = Math.max(1, state.from - BACKWARD_SYNC_STEP);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.32,26,17
3050_34,34,34,state.size = nextSize;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.29,27,18
3050_35,35,35,} else if (state.mode == FORWARD) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.35,28,19
3050_36,36,36,state.from = state.from + state.size;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.28,29,20
3050_37,37,37,state.size = nextSize;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.29,30,21
3050_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.3,31,22
3050_39,39,41,"if (state.from == nextFrom) {
nextFrom = nextFrom + state.size;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,6,3,2,0,0,0.28,32,23
3050_40,40,40,nextFrom = nextFrom + state.size;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,3,2,0,0,0.28,33,24
3050_43,43,43,state.from = nextFrom;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,3,2,0,0,0.26,36,26
3050_44,44,44,state.mode = nextMode;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,3,2,0,0,0.26,37,26
3050_45,45,45,state.size = nextSize;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,3,2,0,0,0.29,38,27
3050_47,47,47,"nextFrom = Math.max(requestHeight, nextFrom + nextSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,2,0,1,0.46,40,29
3050_50,50,50,requestStates.add(state);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,3,2,0,2,0.64,43,30
3050_53,53,53,return requestStates;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,3,2,0,1,0.51,46,31
3051_1,1,1,"private List<RequestState> updateStatesForRequests(boolean distantFuture, long currentBestBlock) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,3,0.58,18,12
3051_2,2,2,"localHeight = Math.max(localHeight, currentBestBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,4,1,0,0,0.33,17,11
3051_4,4,4,long nextFrom;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,4,1,0,0,0.27,15,10
3051_5,5,5,SyncMode nextMode;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,5,4,1,0,0,0.33,14,9
3051_7,7,11,"if (networkHeight >= currentBestBlock + SWITCH_OVERLAPPING_BLOCKS_RANGE) {
nextFrom = Math.max(1, currentBestBlock - FAR_OVERLAPPING_BLOCKS);
} else {
nextFrom = Math.max(1, currentBestBlock - CLOSE_OVERLAPPING_BLOCKS);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,5,4,1,0,0,0.35,8,5
3051_8,8,8,"nextFrom = Math.max(1, currentBestBlock - FAR_OVERLAPPING_BLOCKS);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.34,11,7
3051_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.31,10,6
3051_10,10,10,"nextFrom = Math.max(1, currentBestBlock - CLOSE_OVERLAPPING_BLOCKS);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.33,9,5
3051_12,12,12,nextMode = SyncMode.NORMAL;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,4,1,0,0,0.32,7,4
3051_14,14,14,List<RequestState> availableSet = new ArrayList<>(availablePeerStates.values());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,1,0,1,0.44,5,3
3051_15,15,17,"if (availableSet.isEmpty()){
return Collections.emptyList();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,5,4,1,0,0,0.32,2,1
3051_16,16,16,return Collections.emptyList();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.34,3,1
3051_19,19,23,"if (!distantFuture) {
RequestState singleRequest = availableSet.get(random.nextInt(availableSet.size()));
availableSet.clear();
availableSet.add(singleRequest);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,5,4,1,0,4,0.64,0,0
3051_20,20,20,RequestState singleRequest = availableSet.get(random.nextInt(availableSet.size()));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,2,0.54,0,0
3051_21,21,21,availableSet.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.24,1,0
3051_22,22,22,availableSet.add(singleRequest);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,2,0.58,2,1
3051_25,25,25,List<RequestState> requestStates = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,4,1,0,1,0.49,5,3
3051_26,26,51,"for (RequestState state : availableSet) {
int nextSize = state.size - 2;
if (nextSize < MIN_REQUEST_SIZE) {
nextSize = MAX_REQUEST_SIZE;
}

if (state.mode == BACKWARD) {
state.from = Math.max(1, state.from - BACKWARD_SYNC_STEP);
state.size = nextSize;
} else if (state.mode == FORWARD) {
state.from = state.from + state.size;
state.size = nextSize;
} else {
if (state.from == nextFrom) {
nextFrom = nextFrom + state.size;
}

state.from = nextFrom;
state.mode = nextMode;
state.size = nextSize;

nextFrom = Math.max(requestHeight, nextFrom + nextSize);
}

requestStates.add(state);
}",0,0,0,1,0,0,0,0,0,17,3,26,0,1,0,1,5,4,1,0,1,0.45,6,3
3051_27,27,27,int nextSize = state.size - 2;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.29,7,4
3051_28,28,30,"if (nextSize < MIN_REQUEST_SIZE) {
nextSize = MAX_REQUEST_SIZE;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,5,4,1,0,1,0.47,8,5
3051_29,29,29,nextSize = MAX_REQUEST_SIZE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,1,0.47,9,6
3051_32,32,48,"if (state.mode == BACKWARD) {
state.from = Math.max(1, state.from - BACKWARD_SYNC_STEP);
state.size = nextSize;
} else if (state.mode == FORWARD) {
state.from = state.from + state.size;
state.size = nextSize;
} else {
if (state.from == nextFrom) {
nextFrom = nextFrom + state.size;
}

state.from = nextFrom;
state.mode = nextMode;
state.size = nextSize;

nextFrom = Math.max(requestHeight, nextFrom + nextSize);
}",1,0,0,0,0,0,0,0,0,12,2,17,0,0,1,1,5,4,1,0,1,0.44,12,8
3051_33,33,33,"state.from = Math.max(1, state.from - BACKWARD_SYNC_STEP);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.3,13,8
3051_34,34,34,state.size = nextSize;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.29,14,9
3051_35,35,35,} else if (state.mode == FORWARD) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.35,15,10
3051_36,36,36,state.from = state.from + state.size;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.22,16,11
3051_37,37,37,state.size = nextSize;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.29,17,12
3051_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.31,18,13
3051_39,39,41,"if (state.from == nextFrom) {
nextFrom = nextFrom + state.size;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,5,4,1,0,0,0.31,19,14
3051_40,40,40,nextFrom = nextFrom + state.size;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,4,1,0,0,0.31,20,15
3051_43,43,43,state.from = nextFrom;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,5,4,1,0,0,0.3,23,17
3051_44,44,44,state.mode = nextMode;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,4,1,0,0,0.32,24,17
3051_45,45,45,state.size = nextSize;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,4,1,0,0,0.29,25,18
3051_47,47,47,"nextFrom = Math.max(requestHeight, nextFrom + nextSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,1,0,1,0.47,27,20
3051_50,50,50,requestStates.add(state);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,4,1,0,1,0.44,30,21
3051_53,53,53,return requestStates;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,4,1,0,1,0.5,33,22
3052_1,1,1,"private List<RequestState> updateStatesForRequests(boolean distantFuture, long currentBestBlock) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,25,17,3,0,2,0.54,25,17
3052_2,2,2,"localHeight = Math.max(localHeight, currentBestBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,25,17,3,0,2,0.59,24,16
3052_4,4,4,long nextFrom;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,25,17,3,0,0,0.33,22,15
3052_5,5,5,SyncMode nextMode;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,25,17,3,0,0,0.3,21,14
3052_7,7,11,"if (networkHeight >= currentBestBlock + SWITCH_OVERLAPPING_BLOCKS_RANGE) {
nextFrom = Math.max(1, currentBestBlock - FAR_OVERLAPPING_BLOCKS);
} else {
nextFrom = Math.max(1, currentBestBlock - CLOSE_OVERLAPPING_BLOCKS);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,25,17,3,0,6,0.71,15,10
3052_8,8,8,"nextFrom = Math.max(1, currentBestBlock - FAR_OVERLAPPING_BLOCKS);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,25,17,3,0,4,0.69,18,12
3052_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,25,17,3,0,0,0.33,17,11
3052_10,10,10,"nextFrom = Math.max(1, currentBestBlock - CLOSE_OVERLAPPING_BLOCKS);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,25,17,3,0,4,0.69,16,10
3052_12,12,12,nextMode = SyncMode.NORMAL;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,25,17,3,0,0,0.35,14,9
3052_14,14,14,List<RequestState> availableSet = new ArrayList<>(availablePeerStates.values());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,25,17,3,0,2,0.5,12,8
3052_15,15,17,"if (availableSet.isEmpty()){
return Collections.emptyList();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,25,17,3,0,1,0.4,9,6
3052_16,16,16,return Collections.emptyList();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,25,17,3,0,0,0.32,10,6
3052_19,19,23,"if (!distantFuture) {
RequestState singleRequest = availableSet.get(random.nextInt(availableSet.size()));
availableSet.clear();
availableSet.add(singleRequest);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,25,17,3,0,3,0.57,3,2
3052_20,20,20,RequestState singleRequest = availableSet.get(random.nextInt(availableSet.size()));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,25,17,3,0,3,0.58,6,4
3052_21,21,21,availableSet.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,25,17,3,0,1,0.42,5,3
3052_22,22,22,availableSet.add(singleRequest);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,25,17,3,0,2,0.49,4,2
3052_25,25,25,List<RequestState> requestStates = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,25,17,3,0,1,0.47,1,1
3052_26,26,51,"for (RequestState state : availableSet) {
int nextSize = state.size - 2;
if (nextSize < MIN_REQUEST_SIZE) {
nextSize = MAX_REQUEST_SIZE;
}

if (state.mode == BACKWARD) {
state.from = Math.max(1, state.from - BACKWARD_SYNC_STEP);
state.size = nextSize;
} else if (state.mode == FORWARD) {
state.from = state.from + state.size;
state.size = nextSize;
} else {
if (state.from == nextFrom) {
nextFrom = nextFrom + state.size;
}

state.from = nextFrom;
state.mode = nextMode;
state.size = nextSize;

nextFrom = Math.max(requestHeight, nextFrom + nextSize);
}

requestStates.add(state);
}",0,0,0,1,0,0,0,0,0,17,3,26,0,1,0,1,25,17,3,0,5,0.61,0,0
3052_27,27,27,int nextSize = state.size - 2;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,25,17,3,0,1,0.51,0,0
3052_28,28,30,"if (nextSize < MIN_REQUEST_SIZE) {
nextSize = MAX_REQUEST_SIZE;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,25,17,3,0,4,0.7,1,0
3052_29,29,29,nextSize = MAX_REQUEST_SIZE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,25,17,3,0,3,0.68,2,1
3052_32,32,48,"if (state.mode == BACKWARD) {
state.from = Math.max(1, state.from - BACKWARD_SYNC_STEP);
state.size = nextSize;
} else if (state.mode == FORWARD) {
state.from = state.from + state.size;
state.size = nextSize;
} else {
if (state.from == nextFrom) {
nextFrom = nextFrom + state.size;
}

state.from = nextFrom;
state.mode = nextMode;
state.size = nextSize;

nextFrom = Math.max(requestHeight, nextFrom + nextSize);
}",1,0,0,0,0,0,0,0,0,12,2,17,0,0,1,1,25,17,3,0,3,0.57,5,3
3052_33,33,33,"state.from = Math.max(1, state.from - BACKWARD_SYNC_STEP);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,25,17,3,0,1,0.51,6,3
3052_34,34,34,state.size = nextSize;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,25,17,3,0,1,0.52,7,4
3052_35,35,35,} else if (state.mode == FORWARD) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,25,17,3,0,0,0.34,8,5
3052_36,36,36,state.from = state.from + state.size;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,25,17,3,0,1,0.43,9,6
3052_37,37,37,state.size = nextSize;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,25,17,3,0,1,0.52,10,7
3052_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,25,17,3,0,0,0.33,11,8
3052_39,39,41,"if (state.from == nextFrom) {
nextFrom = nextFrom + state.size;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,25,17,3,0,1,0.4,12,9
3052_40,40,40,nextFrom = nextFrom + state.size;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,25,17,3,0,1,0.43,13,10
3052_43,43,43,state.from = nextFrom;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,25,17,3,0,0,0.27,16,12
3052_44,44,44,state.mode = nextMode;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,25,17,3,0,0,0.28,17,12
3052_45,45,45,state.size = nextSize;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,25,17,3,0,1,0.52,18,13
3052_47,47,47,"nextFrom = Math.max(requestHeight, nextFrom + nextSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,25,17,3,0,3,0.63,20,15
3052_50,50,50,requestStates.add(state);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,25,17,3,0,1,0.38,23,16
3052_53,53,53,return requestStates;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,25,17,3,0,1,0.42,26,17
3053_1,1,1,"private List<RequestState> updateStatesForRequests(boolean distantFuture, long currentBestBlock) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,1,0.47,37,27
3053_2,2,2,"localHeight = Math.max(localHeight, currentBestBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,3,1,0,0,0.42,36,26
3053_4,4,4,long nextFrom;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,7,3,1,0,0,0.3,34,25
3053_5,5,5,SyncMode nextMode;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,7,3,1,0,0,0.34,33,24
3053_7,7,11,"if (networkHeight >= currentBestBlock + SWITCH_OVERLAPPING_BLOCKS_RANGE) {
nextFrom = Math.max(1, currentBestBlock - FAR_OVERLAPPING_BLOCKS);
} else {
nextFrom = Math.max(1, currentBestBlock - CLOSE_OVERLAPPING_BLOCKS);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,7,3,1,0,0,0.41,27,20
3053_8,8,8,"nextFrom = Math.max(1, currentBestBlock - FAR_OVERLAPPING_BLOCKS);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.4,30,22
3053_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.21,29,21
3053_10,10,10,"nextFrom = Math.max(1, currentBestBlock - CLOSE_OVERLAPPING_BLOCKS);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.39,28,20
3053_12,12,12,nextMode = SyncMode.NORMAL;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,7,3,1,0,0,0.35,26,19
3053_14,14,14,List<RequestState> availableSet = new ArrayList<>(availablePeerStates.values());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,3,1,0,2,0.5,24,18
3053_15,15,17,"if (availableSet.isEmpty()){
return Collections.emptyList();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,7,3,1,0,0,0.31,21,16
3053_16,16,16,return Collections.emptyList();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.28,22,16
3053_19,19,23,"if (!distantFuture) {
RequestState singleRequest = availableSet.get(random.nextInt(availableSet.size()));
availableSet.clear();
availableSet.add(singleRequest);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,7,3,1,0,1,0.48,15,12
3053_20,20,20,RequestState singleRequest = availableSet.get(random.nextInt(availableSet.size()));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,1,0,1,0.48,18,14
3053_21,21,21,availableSet.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,1,0,0,0.31,17,13
3053_22,22,22,availableSet.add(singleRequest);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,1,0,1,0.46,16,12
3053_25,25,25,List<RequestState> requestStates = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,7,3,1,0,1,0.46,13,11
3053_26,26,51,"for (RequestState state : availableSet) {
int nextSize = state.size - 2;
if (nextSize < MIN_REQUEST_SIZE) {
nextSize = MAX_REQUEST_SIZE;
}

if (state.mode == BACKWARD) {
state.from = Math.max(1, state.from - BACKWARD_SYNC_STEP);
state.size = nextSize;
} else if (state.mode == FORWARD) {
state.from = state.from + state.size;
state.size = nextSize;
} else {
if (state.from == nextFrom) {
nextFrom = nextFrom + state.size;
}

state.from = nextFrom;
state.mode = nextMode;
state.size = nextSize;

nextFrom = Math.max(requestHeight, nextFrom + nextSize);
}

requestStates.add(state);
}",0,0,0,1,0,0,0,0,0,17,3,26,0,1,0,1,7,3,1,0,1,0.49,0,0
3053_27,27,27,int nextSize = state.size - 2;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,7,3,1,0,0,0.36,11,9
3053_28,28,30,"if (nextSize < MIN_REQUEST_SIZE) {
nextSize = MAX_REQUEST_SIZE;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,7,3,1,0,1,0.48,8,7
3053_29,29,29,nextSize = MAX_REQUEST_SIZE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,1,0.49,9,7
3053_32,32,48,"if (state.mode == BACKWARD) {
state.from = Math.max(1, state.from - BACKWARD_SYNC_STEP);
state.size = nextSize;
} else if (state.mode == FORWARD) {
state.from = state.from + state.size;
state.size = nextSize;
} else {
if (state.from == nextFrom) {
nextFrom = nextFrom + state.size;
}

state.from = nextFrom;
state.mode = nextMode;
state.size = nextSize;

nextFrom = Math.max(requestHeight, nextFrom + nextSize);
}",1,0,0,0,0,0,0,0,0,12,2,17,0,0,1,1,7,3,1,0,1,0.47,0,0
3053_33,33,33,"state.from = Math.max(1, state.from - BACKWARD_SYNC_STEP);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,1,0,0,0.43,5,5
3053_34,34,34,state.size = nextSize;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,1,0,0,0.35,4,4
3053_35,35,35,} else if (state.mode == FORWARD) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.36,3,3
3053_36,36,36,state.from = state.from + state.size;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,1,0,0,0.33,2,2
3053_37,37,37,state.size = nextSize;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,1,0,0,0.35,1,1
3053_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.21,0,0
3053_39,39,41,"if (state.from == nextFrom) {
nextFrom = nextFrom + state.size;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,7,3,1,0,0,0.33,0,0
3053_40,40,40,nextFrom = nextFrom + state.size;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,3,1,0,0,0.34,1,0
3053_43,43,43,state.from = nextFrom;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,7,3,1,0,0,0.31,4,2
3053_44,44,44,state.mode = nextMode;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,7,3,1,0,0,0.31,5,2
3053_45,45,45,state.size = nextSize;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,7,3,1,0,0,0.35,6,3
3053_47,47,47,"nextFrom = Math.max(requestHeight, nextFrom + nextSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,3,1,0,1,0.48,8,5
3053_50,50,50,requestStates.add(state);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,7,3,1,0,1,0.46,11,6
3053_53,53,53,return requestStates;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,7,3,1,0,1,0.46,14,7
3054_1,1,1,"private List<RequestState> updateStatesForRequests(boolean distantFuture, long currentBestBlock) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,3,0,3,0.47,45,32
3054_2,2,2,"localHeight = Math.max(localHeight, currentBestBlock);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,12,5,3,0,0,0.34,44,31
3054_4,4,4,long nextFrom;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,12,5,3,0,1,0.47,42,30
3054_5,5,5,SyncMode nextMode;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,12,5,3,0,1,0.42,41,29
3054_7,7,11,"if (networkHeight >= currentBestBlock + SWITCH_OVERLAPPING_BLOCKS_RANGE) {
nextFrom = Math.max(1, currentBestBlock - FAR_OVERLAPPING_BLOCKS);
} else {
nextFrom = Math.max(1, currentBestBlock - CLOSE_OVERLAPPING_BLOCKS);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,0,12,5,3,0,1,0.43,35,25
3054_8,8,8,"nextFrom = Math.max(1, currentBestBlock - FAR_OVERLAPPING_BLOCKS);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,3,0,1,0.41,38,27
3054_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,3,0,0,0.35,37,26
3054_10,10,10,"nextFrom = Math.max(1, currentBestBlock - CLOSE_OVERLAPPING_BLOCKS);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,3,0,1,0.39,36,25
3054_12,12,12,nextMode = SyncMode.NORMAL;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,12,5,3,0,1,0.41,34,24
3054_14,14,14,List<RequestState> availableSet = new ArrayList<>(availablePeerStates.values());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,12,5,3,0,3,0.51,32,23
3054_15,15,17,"if (availableSet.isEmpty()){
return Collections.emptyList();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,12,5,3,0,1,0.42,29,21
3054_16,16,16,return Collections.emptyList();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,12,5,3,0,0,0.31,30,21
3054_19,19,23,"if (!distantFuture) {
RequestState singleRequest = availableSet.get(random.nextInt(availableSet.size()));
availableSet.clear();
availableSet.add(singleRequest);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,12,5,3,0,5,0.61,23,17
3054_20,20,20,RequestState singleRequest = availableSet.get(random.nextInt(availableSet.size()));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,5,3,0,3,0.57,26,19
3054_21,21,21,availableSet.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,5,3,0,1,0.44,25,18
3054_22,22,22,availableSet.add(singleRequest);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,5,3,0,2,0.55,24,17
3054_25,25,25,List<RequestState> requestStates = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,12,5,3,0,1,0.42,21,16
3054_26,26,51,"for (RequestState state : availableSet) {
int nextSize = state.size - 2;
if (nextSize < MIN_REQUEST_SIZE) {
nextSize = MAX_REQUEST_SIZE;
}

if (state.mode == BACKWARD) {
state.from = Math.max(1, state.from - BACKWARD_SYNC_STEP);
state.size = nextSize;
} else if (state.mode == FORWARD) {
state.from = state.from + state.size;
state.size = nextSize;
} else {
if (state.from == nextFrom) {
nextFrom = nextFrom + state.size;
}

state.from = nextFrom;
state.mode = nextMode;
state.size = nextSize;

nextFrom = Math.max(requestHeight, nextFrom + nextSize);
}

requestStates.add(state);
}",0,0,0,1,0,0,0,0,0,17,3,26,0,1,0,1,12,5,3,0,3,0.55,0,0
3054_27,27,27,int nextSize = state.size - 2;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,5,3,0,1,0.39,19,14
3054_28,28,30,"if (nextSize < MIN_REQUEST_SIZE) {
nextSize = MAX_REQUEST_SIZE;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,1,12,5,3,0,2,0.5,16,12
3054_29,29,29,nextSize = MAX_REQUEST_SIZE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,3,0,2,0.5,17,12
3054_32,32,48,"if (state.mode == BACKWARD) {
state.from = Math.max(1, state.from - BACKWARD_SYNC_STEP);
state.size = nextSize;
} else if (state.mode == FORWARD) {
state.from = state.from + state.size;
state.size = nextSize;
} else {
if (state.from == nextFrom) {
nextFrom = nextFrom + state.size;
}

state.from = nextFrom;
state.mode = nextMode;
state.size = nextSize;

nextFrom = Math.max(requestHeight, nextFrom + nextSize);
}",1,0,0,0,0,0,0,0,0,12,2,17,0,0,1,1,12,5,3,0,2,0.5,0,0
3054_33,33,33,"state.from = Math.max(1, state.from - BACKWARD_SYNC_STEP);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,5,3,0,0,0.33,13,10
3054_34,34,34,state.size = nextSize;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,5,3,0,1,0.41,12,9
3054_35,35,35,} else if (state.mode == FORWARD) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,3,0,0,0.38,11,8
3054_36,36,36,state.from = state.from + state.size;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,5,3,0,0,0.26,10,7
3054_37,37,37,state.size = nextSize;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,5,3,0,1,0.41,9,6
3054_38,38,38,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,3,0,0,0.35,8,5
3054_39,39,41,"if (state.from == nextFrom) {
nextFrom = nextFrom + state.size;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,1,12,5,3,0,1,0.49,5,3
3054_40,40,40,nextFrom = nextFrom + state.size;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,5,3,0,1,0.49,6,3
3054_43,43,43,state.from = nextFrom;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,12,5,3,0,1,0.46,3,2
3054_44,44,44,state.mode = nextMode;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,12,5,3,0,1,0.4,2,1
3054_45,45,45,state.size = nextSize;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,12,5,3,0,1,0.41,1,0
3054_47,47,47,"nextFrom = Math.max(requestHeight, nextFrom + nextSize);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,12,5,3,0,2,0.55,0,0
3054_50,50,50,requestStates.add(state);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,12,5,3,0,1,0.42,3,1
3054_53,53,53,return requestStates;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,12,5,3,0,1,0.45,6,2
3055_1,1,1,"    private void storeHeadersInternal(int peerId, List<BlockHeader> headers) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,2,0.58,2,1
3055_2,2,2,Objects.requireNonNull(headers);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,5,0,0,1,0.42,1,0
3055_4,4,4,int size = headers.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,5,0,0,1,0.43,0,0
3055_5,5,20,"if (storedHeaders.containsKey(peerId)) {
Map<Integer, LinkedList<List<BlockHeader>>> peerList = storedHeaders.get(peerId);
if (peerList.containsKey(size)) {
peerList.get(size).addLast(headers);
} else {
LinkedList<List<BlockHeader>> headersList = new LinkedList<>();
headersList.addLast(headers);
peerList.put(size, headersList);
}
} else {
Map<Integer, LinkedList<List<BlockHeader>>> peerHeaders = new HashMap<>();
LinkedList<List<BlockHeader>> headersList = new LinkedList<>();
headersList.addLast(headers);
peerHeaders.put(size, headersList);
storedHeaders.put(peerId, peerHeaders);
}",1,0,0,0,0,0,0,0,0,13,2,16,0,1,0,1,6,5,0,0,2,0.54,1,0
3055_6,6,6,"Map<Integer, LinkedList<List<BlockHeader>>> peerList = storedHeaders.get(peerId);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,5,0,0,2,0.52,2,1
3055_7,7,13,"if (peerList.containsKey(size)) {
peerList.get(size).addLast(headers);
} else {
LinkedList<List<BlockHeader>> headersList = new LinkedList<>();
headersList.addLast(headers);
peerList.put(size, headersList);
}",1,0,0,0,0,0,0,0,0,5,1,7,1,1,0,0,6,5,0,0,1,0.48,3,2
3055_8,8,8,peerList.get(size).addLast(headers);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.43,4,3
3055_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.28,5,4
3055_10,10,10,LinkedList<List<BlockHeader>> headersList = new LinkedList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.44,6,5
3055_11,11,11,headersList.addLast(headers);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.49,7,6
3055_12,12,12,"peerList.put(size, headersList);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.49,8,7
3055_14,14,14,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.28,10,9
3055_15,15,15,"Map<Integer, LinkedList<List<BlockHeader>>> peerHeaders = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.46,11,9
3055_16,16,16,LinkedList<List<BlockHeader>> headersList = new LinkedList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.44,12,10
3055_17,17,17,headersList.addLast(headers);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.49,13,11
3055_18,18,18,"peerHeaders.put(size, headersList);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,5,0,0,1,0.54,14,12
3055_19,19,19,"storedHeaders.put(peerId, peerHeaders);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,6,5,0,0,2,0.61,15,13
3055_22,22,25,"if (bookedPeerStates.containsKey(peerId)
&& bookedPeerStates.get(peerId).tryMakeAvailable()) {
availablePeerStates.put(peerId, bookedPeerStates.remove(peerId));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,6,5,0,0,0,0.36,18,15
3055_23,23,23,&& bookedPeerStates.get(peerId).tryMakeAvailable()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.33,19,15
3055_24,24,24,"availablePeerStates.put(peerId, bookedPeerStates.remove(peerId));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.37,20,16
3055_27,27,27,"syncLog.debug(""<save-headers nodeId={} size={} object={}>"", peerId, headers.size(), printHeaders(headers));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,5,0,0,1,0.49,23,18
3056_1,1,1,"    private void storeHeadersInternal(int peerId, List<BlockHeader> headers) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.61,20,16
3056_2,2,2,Objects.requireNonNull(headers);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,5,0,0,1,0.45,19,15
3056_4,4,4,int size = headers.size();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,5,5,0,0,1,0.48,17,14
3056_5,5,20,"if (storedHeaders.containsKey(peerId)) {
Map<Integer, LinkedList<List<BlockHeader>>> peerList = storedHeaders.get(peerId);
if (peerList.containsKey(size)) {
peerList.get(size).addLast(headers);
} else {
LinkedList<List<BlockHeader>> headersList = new LinkedList<>();
headersList.addLast(headers);
peerList.put(size, headersList);
}
} else {
Map<Integer, LinkedList<List<BlockHeader>>> peerHeaders = new HashMap<>();
LinkedList<List<BlockHeader>> headersList = new LinkedList<>();
headersList.addLast(headers);
peerHeaders.put(size, headersList);
storedHeaders.put(peerId, peerHeaders);
}",1,0,0,0,0,0,0,0,0,13,2,16,0,1,0,1,5,5,0,0,2,0.59,1,0
3056_6,6,6,"Map<Integer, LinkedList<List<BlockHeader>>> peerList = storedHeaders.get(peerId);",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,5,5,0,0,2,0.59,15,12
3056_7,7,13,"if (peerList.containsKey(size)) {
peerList.get(size).addLast(headers);
} else {
LinkedList<List<BlockHeader>> headersList = new LinkedList<>();
headersList.addLast(headers);
peerList.put(size, headersList);
}",1,0,0,0,0,0,0,0,0,5,1,7,1,1,0,0,5,5,0,0,2,0.58,8,6
3056_8,8,8,peerList.get(size).addLast(headers);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.6,13,10
3056_9,9,9,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.18,12,9
3056_10,10,10,LinkedList<List<BlockHeader>> headersList = new LinkedList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.47,11,8
3056_11,11,11,headersList.addLast(headers);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.54,10,7
3056_12,12,12,"peerList.put(size, headersList);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.6,9,6
3056_14,14,14,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.18,7,5
3056_15,15,15,"Map<Integer, LinkedList<List<BlockHeader>>> peerHeaders = new HashMap<>();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.56,6,4
3056_16,16,16,LinkedList<List<BlockHeader>> headersList = new LinkedList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.47,5,3
3056_17,17,17,headersList.addLast(headers);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.54,4,2
3056_18,18,18,"peerHeaders.put(size, headersList);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,5,0,0,2,0.65,3,1
3056_19,19,19,"storedHeaders.put(peerId, peerHeaders);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,5,5,0,0,2,0.67,2,0
3056_22,22,25,"if (bookedPeerStates.containsKey(peerId)
&& bookedPeerStates.get(peerId).tryMakeAvailable()) {
availablePeerStates.put(peerId, bookedPeerStates.remove(peerId));
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,1,5,5,0,0,2,0.61,0,0
3056_23,23,23,&& bookedPeerStates.get(peerId).tryMakeAvailable()) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.6,1,0
3056_24,24,24,"availablePeerStates.put(peerId, bookedPeerStates.remove(peerId));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.63,2,1
3056_27,27,27,"syncLog.debug(""<save-headers nodeId={} size={} object={}>"", peerId, headers.size(), printHeaders(headers));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,5,0,0,2,0.58,5,3
3057_1,1,1,"    private void runInModeInternal(int peerId, SyncMode mode) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.48,0,0
3057_2,2,2,RequestState state = bookedPeerStates.get(peerId);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,3,3,0,0,1,0.53,0,0
3057_3,3,5,"if (state == null) {
state = availablePeerStates.get(peerId);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,1,3,3,0,0,1,0.52,1,0
3057_4,4,4,state = availablePeerStates.get(peerId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.55,2,1
3057_7,7,15,"if (state != null) {
syncLog.debug(
""<mode-update: node={}, nodeId={}, from_mode={}, to_mode={}>"",
state.alias,
peerId,
state.mode,
mode);
state.mode = mode;
}",1,0,0,0,0,0,0,0,0,2,2,9,0,0,1,0,3,3,0,0,1,0.45,5,3
3057_8,8,13,"syncLog.debug(
""<mode-update: node={}, nodeId={}, from_mode={}, to_mode={}>"",
state.alias,
peerId,
state.mode,
mode);",0,0,0,0,0,0,0,0,0,0,0,6,0,1,0,0,3,3,0,0,1,0.46,6,3
3057_14,14,14,state.mode = mode;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.28,12,5
3058_1,1,1,"    private void runInModeInternal(int peerId, SyncMode mode) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,2,0,1,0.47,5,3
3058_2,2,2,RequestState state = bookedPeerStates.get(peerId);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,1,2,0,1,0.53,4,2
3058_3,3,5,"if (state == null) {
state = availablePeerStates.get(peerId);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,1,4,1,2,0,1,0.51,1,0
3058_4,4,4,state = availablePeerStates.get(peerId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,2,0,1,0.54,2,0
3058_7,7,15,"if (state != null) {
syncLog.debug(
""<mode-update: node={}, nodeId={}, from_mode={}, to_mode={}>"",
state.alias,
peerId,
state.mode,
mode);
state.mode = mode;
}",1,0,0,0,0,0,0,0,0,2,2,9,0,0,1,0,4,1,2,0,2,0.56,0,0
3058_8,8,13,"syncLog.debug(
""<mode-update: node={}, nodeId={}, from_mode={}, to_mode={}>"",
state.alias,
peerId,
state.mode,
mode);",0,0,0,0,0,0,0,0,0,0,0,6,0,1,0,0,4,1,2,0,2,0.57,1,0
3058_14,14,14,state.mode = mode;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,1,2,0,0,0.3,7,2
3059_1,1,1,public boolean tryMakeAvailable() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,5,1,0,1,0.4,9,8
3059_2,2,14,"if (headerRequests.size() < MAX_REQUESTS_PER_SECOND) {
return true;
} else {
long now = System.nanoTime();
long first = headerRequests.first();

if ((now - first) <= ONE_SECOND) {
return false;
} else {
headerRequests.remove(first);
return true;
}
}",1,0,0,0,0,0,0,0,0,9,2,13,0,0,0,0,14,5,1,0,5,0.65,0,0
3059_3,3,3,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,14,5,1,0,0,0.23,7,6
3059_4,4,4,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,5,1,0,0,0.27,6,5
3059_5,5,5,long now = System.nanoTime();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,14,5,1,0,0,0.47,5,4
3059_6,6,6,long first = headerRequests.first();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,14,5,1,0,2,0.61,4,3
3059_8,8,13,"if ((now - first) <= ONE_SECOND) {
return false;
} else {
headerRequests.remove(first);
return true;
}",1,0,0,0,0,0,0,0,0,4,1,6,0,0,1,0,14,5,1,0,4,0.59,0,0
3059_9,9,9,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,14,5,1,0,0,0.22,1,1
3059_10,10,10,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,5,1,0,0,0.27,0,0
3059_11,11,11,headerRequests.remove(first);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,14,5,1,0,3,0.67,0,0
3059_12,12,12,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,14,5,1,0,0,0.23,1,0
983_1,1,1,private void broadcastTx() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.48,5,3
983_3,3,3,List<AionTransaction> transactions;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,5,0,0,0,0.44,3,2
983_4,4,4,broadcastLock.lock();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.33,2,1
983_5,5,17,"try {

if (transactionQueue.isEmpty()) return;

transactions = new ArrayList<>(transactionQueue.size());
transactionQueue.drainTo(transactions);

for (AionTransaction a : transactions) {
queueSizeBytes.addAndGet(a.getEncoded().length * -1);
}
} finally {
broadcastLock.unlock();
}",0,0,0,0,1,0,0,0,0,7,2,13,0,0,0,1,5,5,0,0,2,0.58,0,0
983_7,7,7,if (transactionQueue.isEmpty()) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,5,0,0,2,0.7,0,0
983_9,9,9,transactions = new ArrayList<>(transactionQueue.size());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,5,5,0,0,1,0.49,2,1
983_10,10,10,transactionQueue.drainTo(transactions);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,1,0.62,3,1
983_12,12,14,"for (AionTransaction a : transactions) {
queueSizeBytes.addAndGet(a.getEncoded().length * -1);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,1,0,5,5,0,0,1,0.45,5,3
983_13,13,13,queueSizeBytes.addAndGet(a.getEncoded().length * -1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.39,6,3
983_15,15,15,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.19,8,5
983_16,16,16,broadcastLock.unlock();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.44,9,5
983_19,19,19,this.lastBroadcast.set(System.currentTimeMillis());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,5,5,0,0,0,0.32,12,7
983_21,21,28,"if (!transactions.isEmpty()) {
if (LOG.isTraceEnabled()) {
LOG.trace(""TxCollector.broadcastTransactions Tx#{}"", transactions.size());
}

txBroadcaster.submitTransaction(
new A0TxTask(transactions, this.p2p, new BroadcastTx(transactions)));
}",1,0,0,0,0,0,0,0,0,3,3,8,0,0,1,0,5,5,0,0,2,0.6,14,8
983_22,22,24,"if (LOG.isTraceEnabled()) {
LOG.trace(""TxCollector.broadcastTransactions Tx#{}"", transactions.size());
}",1,0,0,0,0,0,0,0,0,1,2,3,0,0,0,1,5,5,0,0,1,0.52,15,8
983_23,23,23,"LOG.trace(""TxCollector.broadcastTransactions Tx#{}"", transactions.size());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.54,16,9
983_26,26,27,"txBroadcaster.submitTransaction(
new A0TxTask(transactions, this.p2p, new BroadcastTx(transactions)));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,5,5,0,0,1,0.54,19,11
984_1,1,1,private void broadcastTx() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.37,7,4
984_3,3,3,List<AionTransaction> transactions;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.26,5,3
984_4,4,4,broadcastLock.lock();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.34,4,2
984_5,5,17,"try {

if (transactionQueue.isEmpty()) return;

transactions = new ArrayList<>(transactionQueue.size());
transactionQueue.drainTo(transactions);

for (AionTransaction a : transactions) {
queueSizeBytes.addAndGet(a.getEncoded().length * -1);
}
} finally {
broadcastLock.unlock();
}",0,0,0,0,1,0,0,0,0,7,2,13,0,0,0,1,3,3,0,0,1,0.51,0,0
984_7,7,7,if (transactionQueue.isEmpty()) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,1,0.47,1,0
984_9,9,9,transactions = new ArrayList<>(transactionQueue.size());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,3,3,0,0,1,0.46,0,0
984_10,10,10,transactionQueue.drainTo(transactions);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,1,0.54,1,0
984_12,12,14,"for (AionTransaction a : transactions) {
queueSizeBytes.addAndGet(a.getEncoded().length * -1);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,1,0,3,3,0,0,1,0.47,3,2
984_13,13,13,queueSizeBytes.addAndGet(a.getEncoded().length * -1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.47,4,2
984_15,15,15,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.27,6,4
984_16,16,16,broadcastLock.unlock();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.47,7,4
984_19,19,19,this.lastBroadcast.set(System.currentTimeMillis());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,3,0,0,0,0.31,10,6
984_21,21,28,"if (!transactions.isEmpty()) {
if (LOG.isTraceEnabled()) {
LOG.trace(""TxCollector.broadcastTransactions Tx#{}"", transactions.size());
}

txBroadcaster.submitTransaction(
new A0TxTask(transactions, this.p2p, new BroadcastTx(transactions)));
}",1,0,0,0,0,0,0,0,0,3,3,8,0,0,1,0,3,3,0,0,0,0.45,12,7
984_22,22,24,"if (LOG.isTraceEnabled()) {
LOG.trace(""TxCollector.broadcastTransactions Tx#{}"", transactions.size());
}",1,0,0,0,0,0,0,0,0,1,2,3,0,0,0,1,3,3,0,0,0,0.45,13,7
984_23,23,23,"LOG.trace(""TxCollector.broadcastTransactions Tx#{}"", transactions.size());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.45,14,8
984_26,26,27,"txBroadcaster.submitTransaction(
new A0TxTask(transactions, this.p2p, new BroadcastTx(transactions)));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,3,3,0,0,0,0.41,17,10
985_1,1,1,private void broadcastTx() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.31,10,6
985_3,3,3,List<AionTransaction> transactions;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,2,2,0,0,0,0.17,8,5
985_4,4,4,broadcastLock.lock();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.25,7,4
985_5,5,17,"try {

if (transactionQueue.isEmpty()) return;

transactions = new ArrayList<>(transactionQueue.size());
transactionQueue.drainTo(transactions);

for (AionTransaction a : transactions) {
queueSizeBytes.addAndGet(a.getEncoded().length * -1);
}
} finally {
broadcastLock.unlock();
}",0,0,0,0,1,0,0,0,0,7,2,13,0,0,0,1,2,2,0,0,0,0.39,0,0
985_7,7,7,if (transactionQueue.isEmpty()) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.22,4,2
985_9,9,9,transactions = new ArrayList<>(transactionQueue.size());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.27,2,1
985_10,10,10,transactionQueue.drainTo(transactions);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,0,0,0,0.3,1,0
985_12,12,14,"for (AionTransaction a : transactions) {
queueSizeBytes.addAndGet(a.getEncoded().length * -1);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,1,0,2,2,0,0,0,0.38,0,0
985_13,13,13,queueSizeBytes.addAndGet(a.getEncoded().length * -1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.39,1,0
985_15,15,15,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.26,3,2
985_16,16,16,broadcastLock.unlock();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.43,4,2
985_19,19,19,this.lastBroadcast.set(System.currentTimeMillis());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,2,2,0,0,0,0.33,7,4
985_21,21,28,"if (!transactions.isEmpty()) {
if (LOG.isTraceEnabled()) {
LOG.trace(""TxCollector.broadcastTransactions Tx#{}"", transactions.size());
}

txBroadcaster.submitTransaction(
new A0TxTask(transactions, this.p2p, new BroadcastTx(transactions)));
}",1,0,0,0,0,0,0,0,0,3,3,8,0,0,1,0,2,2,0,0,0,0.37,9,5
985_22,22,24,"if (LOG.isTraceEnabled()) {
LOG.trace(""TxCollector.broadcastTransactions Tx#{}"", transactions.size());
}",1,0,0,0,0,0,0,0,0,1,2,3,0,0,0,1,2,2,0,0,0,0.36,10,5
985_23,23,23,"LOG.trace(""TxCollector.broadcastTransactions Tx#{}"", transactions.size());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.37,11,6
985_26,26,27,"txBroadcaster.submitTransaction(
new A0TxTask(transactions, this.p2p, new BroadcastTx(transactions)));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,2,2,0,0,0,0.38,14,8
986_1,1,1,private void broadcastTx() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.45,17,10
986_3,3,3,List<AionTransaction> transactions;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.24,15,9
986_4,4,4,broadcastLock.lock();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.54,14,8
986_5,5,17,"try {

if (transactionQueue.isEmpty()) return;

transactions = new ArrayList<>(transactionQueue.size());
transactionQueue.drainTo(transactions);

for (AionTransaction a : transactions) {
queueSizeBytes.addAndGet(a.getEncoded().length * -1);
}
} finally {
broadcastLock.unlock();
}",0,0,0,0,1,0,0,0,0,7,2,13,0,0,0,1,4,2,0,0,1,0.45,1,0
986_7,7,7,if (transactionQueue.isEmpty()) return;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,0,0.29,11,6
986_9,9,9,transactions = new ArrayList<>(transactionQueue.size());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,4,2,0,0,0,0.27,9,5
986_10,10,10,transactionQueue.drainTo(transactions);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,4,2,0,0,0,0.34,8,4
986_12,12,14,"for (AionTransaction a : transactions) {
queueSizeBytes.addAndGet(a.getEncoded().length * -1);
}",0,0,0,1,0,0,0,0,0,1,1,3,0,0,1,0,4,2,0,0,0,0.31,4,2
986_13,13,13,queueSizeBytes.addAndGet(a.getEncoded().length * -1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.29,5,2
986_15,15,15,} finally {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.19,3,1
986_16,16,16,broadcastLock.unlock();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.62,2,0
986_19,19,19,this.lastBroadcast.set(System.currentTimeMillis());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,4,2,0,0,3,0.75,0,0
986_21,21,28,"if (!transactions.isEmpty()) {
if (LOG.isTraceEnabled()) {
LOG.trace(""TxCollector.broadcastTransactions Tx#{}"", transactions.size());
}

txBroadcaster.submitTransaction(
new A0TxTask(transactions, this.p2p, new BroadcastTx(transactions)));
}",1,0,0,0,0,0,0,0,0,3,3,8,0,0,1,0,4,2,0,0,1,0.42,2,1
986_22,22,24,"if (LOG.isTraceEnabled()) {
LOG.trace(""TxCollector.broadcastTransactions Tx#{}"", transactions.size());
}",1,0,0,0,0,0,0,0,0,1,2,3,0,0,0,1,4,2,0,0,1,0.4,3,1
986_23,23,23,"LOG.trace(""TxCollector.broadcastTransactions Tx#{}"", transactions.size());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.42,4,2
986_26,26,27,"txBroadcaster.submitTransaction(
new A0TxTask(transactions, this.p2p, new BroadcastTx(transactions)));",0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,4,2,0,0,1,0.44,7,4
7648_1,1,2,"@Override
public void addStorageValue(AionAddress address, IPrecompiledDataWord key, IPrecompiledDataWord value) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,7,0,0,3,0.62,0,0
7648_3,3,3,byte[] valueBytes = (value instanceof PrecompiledDataWord) ? dropLeadingZeroes(value.copyOfData()) : value.copyOfData();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,9,7,0,0,7,0.93,0,0
7648_4,4,4,"this.repository.addStorageRow(address, ByteArrayWrapper.wrap(key.copyOfData()), ByteArrayWrapper.wrap(valueBytes));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,9,7,0,0,3,0.64,1,0
1752_1,1,1,public static void handleArguments(String[] args) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.36,32,25
1752_2,2,2,CommandLine cl = getArgs(args);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.29,31,24
1752_3,3,7,"if (cl.hasOption('h')) {
HelpFormatter hf = new HelpFormatter();
hf.printHelp(""java -jar ripme.jar [OPTIONS]"", getOptions());
System.exit(0);
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,0,1,1,0,0,1,0.62,26,20
1752_4,4,4,HelpFormatter hf = new HelpFormatter();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.24,29,22
1752_5,5,5,"hf.printHelp(""java -jar ripme.jar [OPTIONS]"", getOptions());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.26,28,21
1752_6,6,6,System.exit(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,0.7,27,20
1752_8,8,10,"if (cl.hasOption('w')) {
Utils.setConfigBoolean(""file.overwrite"", true);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,1,1,0,0,0,0.26,23,18
1752_9,9,9,"Utils.setConfigBoolean(""file.overwrite"", true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.25,24,18
1752_11,11,13,"if (cl.hasOption('t')) {
Utils.setConfigInteger(""threads.size"", Integer.parseInt(cl.getOptionValue('t')));
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,1,1,0,0,0,0.24,20,16
1752_12,12,12,"Utils.setConfigInteger(""threads.size"", Integer.parseInt(cl.getOptionValue('t')));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.23,21,16
1752_14,14,16,"if (cl.hasOption('4')) {
Utils.setConfigBoolean(""errors.skip404"", true);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,1,1,0,0,0,0.31,17,14
1752_15,15,15,"Utils.setConfigBoolean(""errors.skip404"", true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.31,18,14
1752_17,17,35,"if (cl.hasOption('r')) {
List<String> history = Utils.getConfigList(""download.history"");
for (String urlString : history) {
try {
URL url = new URL(urlString.trim());
rip(url);
} catch (Exception e) {
logger.error(""[!] Failed to rip URL "" + urlString, e);
continue;
}
try {
Thread.sleep(500);
} catch (InterruptedException e) {
logger.warn(""[!] Interrupted while re-ripping history"");
System.exit(-1);
}
}
System.exit(0);
}",1,0,0,0,0,0,0,0,0,14,3,19,1,1,0,0,1,1,0,0,1,0.6,0,0
1752_18,18,18,"List<String> history = Utils.getConfigList(""download.history"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.17,15,12
1752_19,19,33,"for (String urlString : history) {
try {
URL url = new URL(urlString.trim());
rip(url);
} catch (Exception e) {
logger.error(""[!] Failed to rip URL "" + urlString, e);
continue;
}
try {
Thread.sleep(500);
} catch (InterruptedException e) {
logger.warn(""[!] Interrupted while re-ripping history"");
System.exit(-1);
}
}",0,0,0,1,0,0,0,0,0,11,2,15,1,1,0,0,1,1,0,0,1,0.61,0,0
1752_20,20,26,"try {
URL url = new URL(urlString.trim());
rip(url);
} catch (Exception e) {
logger.error(""[!] Failed to rip URL "" + urlString, e);
continue;
}",0,0,0,0,1,0,0,0,0,5,1,7,0,0,0,0,1,1,0,0,0,0.32,7,5
1752_21,21,21,URL url = new URL(urlString.trim());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.08,12,9
1752_22,22,22,rip(url);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.02,11,8
1752_23,23,23,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.31,10,7
1752_24,24,24,"logger.error(""[!] Failed to rip URL "" + urlString, e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.36,9,6
1752_25,25,25,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.13,8,5
1752_27,27,32,"try {
Thread.sleep(500);
} catch (InterruptedException e) {
logger.warn(""[!] Interrupted while re-ripping history"");
System.exit(-1);
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,0,0,1,1,0,0,1,0.68,1,0
1752_28,28,28,Thread.sleep(500);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.38,5,3
1752_29,29,29,} catch (InterruptedException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.39,4,2
1752_30,30,30,"logger.warn(""[!] Interrupted while re-ripping history"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.45,3,1
1752_31,31,31,System.exit(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,0.7,2,0
1752_34,34,34,System.exit(0);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,1,0.7,0,0
1752_36,36,66,"if (cl.hasOption('R')) {
loadHistory();
if (HISTORY.toList().size() == 0) {
System.err.println(""There are no history entries to re-rip. Rip some albums first"");
System.exit(-1);
}
int added = 0;
for (HistoryEntry entry : HISTORY.toList()) {
if (entry.selected) {
added++;
try {
URL url = new URL(entry.url);
rip(url);
} catch (Exception e) {
logger.error(""[!] Failed to rip URL "" + entry.url, e);
continue;
}
try {
Thread.sleep(500);
} catch (InterruptedException e) {
logger.warn(""[!] Interrupted while re-ripping history"");
System.exit(-1);
}
}
}
if (added == 0) {
System.err.println(""No history entries have been 'Checked'\n"" +
""Check an entry by clicking the checkbox to the right of the URL or Right-click a URL to check/uncheck all items"");
System.exit(-1);
}
}",1,0,0,0,0,0,0,0,0,22,4,31,1,1,0,0,1,1,0,0,1,0.6,2,1
1752_37,37,37,loadHistory();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.11,3,1
1752_38,38,41,"if (HISTORY.toList().size() == 0) {
System.err.println(""There are no history entries to re-rip. Rip some albums first"");
System.exit(-1);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,1,1,0,0,1,0.6,4,2
1752_39,39,39,"System.err.println(""There are no history entries to re-rip. Rip some albums first"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.29,5,3
1752_40,40,40,System.exit(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,0.7,6,4
1752_42,42,42,int added = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.16,8,6
1752_43,43,60,"for (HistoryEntry entry : HISTORY.toList()) {
if (entry.selected) {
added++;
try {
URL url = new URL(entry.url);
rip(url);
} catch (Exception e) {
logger.error(""[!] Failed to rip URL "" + entry.url, e);
continue;
}
try {
Thread.sleep(500);
} catch (InterruptedException e) {
logger.warn(""[!] Interrupted while re-ripping history"");
System.exit(-1);
}
}
}",0,0,0,1,0,0,0,0,0,13,3,18,1,1,0,0,1,1,0,0,1,0.61,9,6
1752_44,44,59,"if (entry.selected) {
added++;
try {
URL url = new URL(entry.url);
rip(url);
} catch (Exception e) {
logger.error(""[!] Failed to rip URL "" + entry.url, e);
continue;
}
try {
Thread.sleep(500);
} catch (InterruptedException e) {
logger.warn(""[!] Interrupted while re-ripping history"");
System.exit(-1);
}
}",1,0,0,0,0,0,0,0,0,12,2,16,0,0,0,0,1,1,0,0,1,0.62,10,7
1752_45,45,45,added++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.09,11,8
1752_46,46,52,"try {
URL url = new URL(entry.url);
rip(url);
} catch (Exception e) {
logger.error(""[!] Failed to rip URL "" + entry.url, e);
continue;
}",0,0,0,0,1,0,0,0,0,5,1,7,0,0,0,0,1,1,0,0,0,0.33,12,9
1752_47,47,47,URL url = new URL(entry.url);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.08,13,10
1752_48,48,48,rip(url);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.02,14,11
1752_49,49,49,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.31,15,12
1752_50,50,50,"logger.error(""[!] Failed to rip URL "" + entry.url, e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.36,16,13
1752_51,51,51,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.13,17,14
1752_53,53,58,"try {
Thread.sleep(500);
} catch (InterruptedException e) {
logger.warn(""[!] Interrupted while re-ripping history"");
System.exit(-1);
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,0,0,1,1,0,0,1,0.68,19,16
1752_54,54,54,Thread.sleep(500);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.38,20,16
1752_55,55,55,} catch (InterruptedException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.39,21,17
1752_56,56,56,"logger.warn(""[!] Interrupted while re-ripping history"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.45,22,18
1752_57,57,57,System.exit(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,0.7,23,19
1752_61,61,65,"if (added == 0) {
System.err.println(""No history entries have been 'Checked'\n"" +
""Check an entry by clicking the checkbox to the right of the URL or Right-click a URL to check/uncheck all items"");
System.exit(-1);
}",1,0,0,0,0,0,0,0,0,2,1,5,1,1,0,0,1,1,0,0,1,0.59,27,21
1752_62,62,63,"System.err.println(""No history entries have been 'Checked'\n"" +
""Check an entry by clicking the checkbox to the right of the URL or Right-click a URL to check/uncheck all items"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,1,1,0,0,0,0.3,28,21
1752_64,64,64,System.exit(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,0.7,30,23
1752_67,67,69,"if (cl.hasOption('d')) {
Utils.setConfigBoolean(""download.save_order"", true);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,1,1,0,0,0,0.26,33,24
1752_68,68,68,"Utils.setConfigBoolean(""download.save_order"", true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.26,34,24
1752_70,70,72,"if (cl.hasOption('D')) {
Utils.setConfigBoolean(""download.save_order"", false);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,1,1,0,0,0,0.25,36,26
1752_71,71,71,"Utils.setConfigBoolean(""download.save_order"", false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.25,37,26
1752_73,73,76,"if ((cl.hasOption('d'))&&(cl.hasOption('D'))) {
System.err.println(""\nCannot specify '-d' and '-D' simultaneously"");
System.exit(-1);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,1,1,0,0,1,0.63,39,28
1752_74,74,74,"System.err.println(""\nCannot specify '-d' and '-D' simultaneously"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.4,40,28
1752_75,75,75,System.exit(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,0.7,41,29
1752_77,77,79,"if (cl.hasOption('l')) {
Utils.setConfigString(""rips.directory"", cl.getOptionValue('l'));
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,1,1,0,0,0,0.23,43,31
1752_78,78,78,"Utils.setConfigString(""rips.directory"", cl.getOptionValue('l'));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.22,44,31
1752_80,80,93,"if (cl.hasOption('f')) {
String filename = cl.getOptionValue('f');
try {
String url;
BufferedReader br = new BufferedReader(new FileReader(filename));
while ((url = br.readLine()) != null) {
ripURL(url.trim(), cl.hasOption(""n""));
}
} catch (FileNotFoundException fne) {
logger.error(""[!] File containing list of URLs not found. Cannot continue."");
} catch (IOException ioe) {
logger.error(""[!] Failed reading file containing list of URLs. Cannot continue."");
}
}",1,0,0,0,0,0,0,0,0,10,3,14,1,1,0,0,1,1,0,0,0,0.33,46,33
1752_81,81,81,String filename = cl.getOptionValue('f');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.19,47,33
1752_82,82,92,"try {
String url;
BufferedReader br = new BufferedReader(new FileReader(filename));
while ((url = br.readLine()) != null) {
ripURL(url.trim(), cl.hasOption(""n""));
}
} catch (FileNotFoundException fne) {
logger.error(""[!] File containing list of URLs not found. Cannot continue."");
} catch (IOException ioe) {
logger.error(""[!] Failed reading file containing list of URLs. Cannot continue."");
}",0,0,0,0,1,0,0,0,0,8,2,11,0,1,0,0,1,1,0,0,0,0.33,48,34
1752_83,83,83,String url;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.05,49,35
1752_84,84,84,BufferedReader br = new BufferedReader(new FileReader(filename));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.2,50,36
1752_85,85,87,"while ((url = br.readLine()) != null) {
ripURL(url.trim(), cl.hasOption(""n""));
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,0,1,1,0,0,0,0.17,51,37
1752_86,86,86,"ripURL(url.trim(), cl.hasOption(""n""));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.18,52,38
1752_88,88,88,} catch (FileNotFoundException fne) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.25,54,40
1752_89,89,89,"logger.error(""[!] File containing list of URLs not found. Cannot continue."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.35,55,40
1752_90,90,90,} catch (IOException ioe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.33,56,41
1752_91,91,91,"logger.error(""[!] Failed reading file containing list of URLs. Cannot continue."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0.36,57,42
1752_94,94,97,"if (cl.hasOption('u')) {
String url = cl.getOptionValue('u').trim();
ripURL(url, cl.hasOption(""n""));
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,1,1,0,0,0,0.2,60,44
1752_95,95,95,String url = cl.getOptionValue('u').trim();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.2,61,44
1752_96,96,96,"ripURL(url, cl.hasOption(""n""));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0.18,62,45
1753_1,1,1,public static void handleArguments(String[] args) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.26,76,57
1753_2,2,2,CommandLine cl = getArgs(args);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.14,75,56
1753_3,3,7,"if (cl.hasOption('h')) {
HelpFormatter hf = new HelpFormatter();
hf.printHelp(""java -jar ripme.jar [OPTIONS]"", getOptions());
System.exit(0);
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,0,4,4,0,0,0,0.3,70,52
1753_4,4,4,HelpFormatter hf = new HelpFormatter();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.26,73,54
1753_5,5,5,"hf.printHelp(""java -jar ripme.jar [OPTIONS]"", getOptions());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.3,72,53
1753_6,6,6,System.exit(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.2,71,52
1753_8,8,10,"if (cl.hasOption('w')) {
Utils.setConfigBoolean(""file.overwrite"", true);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,4,0,0,0,0.35,67,50
1753_9,9,9,"Utils.setConfigBoolean(""file.overwrite"", true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.37,68,50
1753_11,11,13,"if (cl.hasOption('t')) {
Utils.setConfigInteger(""threads.size"", Integer.parseInt(cl.getOptionValue('t')));
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,4,0,0,0,0.26,64,48
1753_12,12,12,"Utils.setConfigInteger(""threads.size"", Integer.parseInt(cl.getOptionValue('t')));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.26,65,48
1753_14,14,16,"if (cl.hasOption('4')) {
Utils.setConfigBoolean(""errors.skip404"", true);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,4,0,0,0,0.34,61,46
1753_15,15,15,"Utils.setConfigBoolean(""errors.skip404"", true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.33,62,46
1753_17,17,35,"if (cl.hasOption('r')) {
List<String> history = Utils.getConfigList(""download.history"");
for (String urlString : history) {
try {
URL url = new URL(urlString.trim());
rip(url);
} catch (Exception e) {
logger.error(""[!] Failed to rip URL "" + urlString, e);
continue;
}
try {
Thread.sleep(500);
} catch (InterruptedException e) {
logger.warn(""[!] Interrupted while re-ripping history"");
System.exit(-1);
}
}
System.exit(0);
}",1,0,0,0,0,0,0,0,0,14,3,19,1,1,0,0,4,4,0,0,1,0.3,42,31
1753_18,18,18,"List<String> history = Utils.getConfigList(""download.history"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.26,59,44
1753_19,19,33,"for (String urlString : history) {
try {
URL url = new URL(urlString.trim());
rip(url);
} catch (Exception e) {
logger.error(""[!] Failed to rip URL "" + urlString, e);
continue;
}
try {
Thread.sleep(500);
} catch (InterruptedException e) {
logger.warn(""[!] Interrupted while re-ripping history"");
System.exit(-1);
}
}",0,0,0,1,0,0,0,0,0,11,2,15,1,1,0,0,4,4,0,0,1,0.31,44,32
1753_20,20,26,"try {
URL url = new URL(urlString.trim());
rip(url);
} catch (Exception e) {
logger.error(""[!] Failed to rip URL "" + urlString, e);
continue;
}",0,0,0,0,1,0,0,0,0,5,1,7,0,0,0,0,4,4,0,0,1,0.33,51,37
1753_21,21,21,URL url = new URL(urlString.trim());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.33,56,41
1753_22,22,22,rip(url);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.34,55,40
1753_23,23,23,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.29,54,39
1753_24,24,24,"logger.error(""[!] Failed to rip URL "" + urlString, e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.33,53,38
1753_25,25,25,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.15,52,37
1753_27,27,32,"try {
Thread.sleep(500);
} catch (InterruptedException e) {
logger.warn(""[!] Interrupted while re-ripping history"");
System.exit(-1);
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,0,0,4,4,0,0,1,0.28,45,32
1753_28,28,28,Thread.sleep(500);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.25,49,35
1753_29,29,29,} catch (InterruptedException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.28,48,34
1753_30,30,30,"logger.warn(""[!] Interrupted while re-ripping history"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.25,47,33
1753_31,31,31,System.exit(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.2,46,32
1753_34,34,34,System.exit(0);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,0,0.2,43,31
1753_36,36,66,"if (cl.hasOption('R')) {
loadHistory();
if (HISTORY.toList().size() == 0) {
System.err.println(""There are no history entries to re-rip. Rip some albums first"");
System.exit(-1);
}
int added = 0;
for (HistoryEntry entry : HISTORY.toList()) {
if (entry.selected) {
added++;
try {
URL url = new URL(entry.url);
rip(url);
} catch (Exception e) {
logger.error(""[!] Failed to rip URL "" + entry.url, e);
continue;
}
try {
Thread.sleep(500);
} catch (InterruptedException e) {
logger.warn(""[!] Interrupted while re-ripping history"");
System.exit(-1);
}
}
}
if (added == 0) {
System.err.println(""No history entries have been 'Checked'\n"" +
""Check an entry by clicking the checkbox to the right of the URL or Right-click a URL to check/uncheck all items"");
System.exit(-1);
}
}",1,0,0,0,0,0,0,0,0,22,4,31,1,1,0,0,4,4,0,0,1,0.31,11,8
1753_37,37,37,loadHistory();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.23,40,29
1753_38,38,41,"if (HISTORY.toList().size() == 0) {
System.err.println(""There are no history entries to re-rip. Rip some albums first"");
System.exit(-1);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,4,4,0,0,1,0.29,36,26
1753_39,39,39,"System.err.println(""There are no history entries to re-rip. Rip some albums first"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.31,38,27
1753_40,40,40,System.exit(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.2,37,26
1753_42,42,42,int added = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.23,35,25
1753_43,43,60,"for (HistoryEntry entry : HISTORY.toList()) {
if (entry.selected) {
added++;
try {
URL url = new URL(entry.url);
rip(url);
} catch (Exception e) {
logger.error(""[!] Failed to rip URL "" + entry.url, e);
continue;
}
try {
Thread.sleep(500);
} catch (InterruptedException e) {
logger.warn(""[!] Interrupted while re-ripping history"");
System.exit(-1);
}
}
}",0,0,0,1,0,0,0,0,0,13,3,18,1,1,0,0,4,4,0,0,1,0.31,17,11
1753_44,44,59,"if (entry.selected) {
added++;
try {
URL url = new URL(entry.url);
rip(url);
} catch (Exception e) {
logger.error(""[!] Failed to rip URL "" + entry.url, e);
continue;
}
try {
Thread.sleep(500);
} catch (InterruptedException e) {
logger.warn(""[!] Interrupted while re-ripping history"");
System.exit(-1);
}
}",1,0,0,0,0,0,0,0,0,12,2,16,0,0,0,0,4,4,0,0,1,0.32,18,11
1753_45,45,45,added++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.32,32,22
1753_46,46,52,"try {
URL url = new URL(entry.url);
rip(url);
} catch (Exception e) {
logger.error(""[!] Failed to rip URL "" + entry.url, e);
continue;
}",0,0,0,0,1,0,0,0,0,5,1,7,0,0,0,0,4,4,0,0,1,0.33,25,16
1753_47,47,47,URL url = new URL(entry.url);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.34,30,20
1753_48,48,48,rip(url);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.34,29,19
1753_49,49,49,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.29,28,18
1753_50,50,50,"logger.error(""[!] Failed to rip URL "" + entry.url, e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.33,27,17
1753_51,51,51,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.15,26,16
1753_53,53,58,"try {
Thread.sleep(500);
} catch (InterruptedException e) {
logger.warn(""[!] Interrupted while re-ripping history"");
System.exit(-1);
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,0,0,4,4,0,0,1,0.28,19,11
1753_54,54,54,Thread.sleep(500);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.25,23,14
1753_55,55,55,} catch (InterruptedException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.28,22,13
1753_56,56,56,"logger.warn(""[!] Interrupted while re-ripping history"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.25,21,12
1753_57,57,57,System.exit(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.2,20,11
1753_61,61,65,"if (added == 0) {
System.err.println(""No history entries have been 'Checked'\n"" +
""Check an entry by clicking the checkbox to the right of the URL or Right-click a URL to check/uncheck all items"");
System.exit(-1);
}",1,0,0,0,0,0,0,0,0,2,1,5,1,1,0,0,4,4,0,0,0,0.3,12,8
1753_62,62,63,"System.err.println(""No history entries have been 'Checked'\n"" +
""Check an entry by clicking the checkbox to the right of the URL or Right-click a URL to check/uncheck all items"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.31,14,9
1753_64,64,64,System.exit(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.2,13,8
1753_67,67,69,"if (cl.hasOption('d')) {
Utils.setConfigBoolean(""download.save_order"", true);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,4,0,0,0,0.33,8,6
1753_68,68,68,"Utils.setConfigBoolean(""download.save_order"", true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.33,9,6
1753_70,70,72,"if (cl.hasOption('D')) {
Utils.setConfigBoolean(""download.save_order"", false);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,4,0,0,0,0.32,5,4
1753_71,71,71,"Utils.setConfigBoolean(""download.save_order"", false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.32,6,4
1753_73,73,76,"if ((cl.hasOption('d'))&&(cl.hasOption('D'))) {
System.err.println(""\nCannot specify '-d' and '-D' simultaneously"");
System.exit(-1);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,4,4,0,0,0,0.29,1,1
1753_74,74,74,"System.err.println(""\nCannot specify '-d' and '-D' simultaneously"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.29,3,2
1753_75,75,75,System.exit(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.2,2,1
1753_77,77,79,"if (cl.hasOption('l')) {
Utils.setConfigString(""rips.directory"", cl.getOptionValue('l'));
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,4,4,0,0,2,0.42,0,0
1753_78,78,78,"Utils.setConfigString(""rips.directory"", cl.getOptionValue('l'));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.43,0,0
1753_80,80,93,"if (cl.hasOption('f')) {
String filename = cl.getOptionValue('f');
try {
String url;
BufferedReader br = new BufferedReader(new FileReader(filename));
while ((url = br.readLine()) != null) {
ripURL(url.trim(), cl.hasOption(""n""));
}
} catch (FileNotFoundException fne) {
logger.error(""[!] File containing list of URLs not found. Cannot continue."");
} catch (IOException ioe) {
logger.error(""[!] Failed reading file containing list of URLs. Cannot continue."");
}
}",1,0,0,0,0,0,0,0,0,10,3,14,1,1,0,0,4,4,0,0,1,0.34,2,1
1753_81,81,81,String filename = cl.getOptionValue('f');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.35,3,1
1753_82,82,92,"try {
String url;
BufferedReader br = new BufferedReader(new FileReader(filename));
while ((url = br.readLine()) != null) {
ripURL(url.trim(), cl.hasOption(""n""));
}
} catch (FileNotFoundException fne) {
logger.error(""[!] File containing list of URLs not found. Cannot continue."");
} catch (IOException ioe) {
logger.error(""[!] Failed reading file containing list of URLs. Cannot continue."");
}",0,0,0,0,1,0,0,0,0,8,2,11,0,1,0,0,4,4,0,0,1,0.34,4,2
1753_83,83,83,String url;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.33,5,3
1753_84,84,84,BufferedReader br = new BufferedReader(new FileReader(filename));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.31,6,4
1753_85,85,87,"while ((url = br.readLine()) != null) {
ripURL(url.trim(), cl.hasOption(""n""));
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,0,4,4,0,0,1,0.29,7,5
1753_86,86,86,"ripURL(url.trim(), cl.hasOption(""n""));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,1,0.3,8,6
1753_88,88,88,} catch (FileNotFoundException fne) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.29,10,8
1753_89,89,89,"logger.error(""[!] File containing list of URLs not found. Cannot continue."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.3,11,8
1753_90,90,90,} catch (IOException ioe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.25,12,9
1753_91,91,91,"logger.error(""[!] Failed reading file containing list of URLs. Cannot continue."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,0,0.3,13,10
1753_94,94,97,"if (cl.hasOption('u')) {
String url = cl.getOptionValue('u').trim();
ripURL(url, cl.hasOption(""n""));
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,4,4,0,0,1,0.32,16,12
1753_95,95,95,String url = cl.getOptionValue('u').trim();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,0,0.32,17,12
1753_96,96,96,"ripURL(url, cl.hasOption(""n""));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,4,0,0,1,0.31,18,13
1754_1,1,1,public static void handleArguments(String[] args) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.36,84,64
1754_2,2,2,CommandLine cl = getArgs(args);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.33,83,63
1754_3,3,7,"if (cl.hasOption('h')) {
HelpFormatter hf = new HelpFormatter();
hf.printHelp(""java -jar ripme.jar [OPTIONS]"", getOptions());
System.exit(0);
}",1,0,0,0,0,0,0,0,0,3,1,5,1,1,0,0,6,5,0,0,0,0.38,78,59
1754_4,4,4,HelpFormatter hf = new HelpFormatter();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.36,81,61
1754_5,5,5,"hf.printHelp(""java -jar ripme.jar [OPTIONS]"", getOptions());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.38,80,60
1754_6,6,6,System.exit(0);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.26,79,59
1754_8,8,10,"if (cl.hasOption('w')) {
Utils.setConfigBoolean(""file.overwrite"", true);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,6,5,0,0,1,0.42,75,57
1754_9,9,9,"Utils.setConfigBoolean(""file.overwrite"", true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.43,76,57
1754_11,11,13,"if (cl.hasOption('t')) {
Utils.setConfigInteger(""threads.size"", Integer.parseInt(cl.getOptionValue('t')));
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,6,5,0,0,0,0.3,72,55
1754_12,12,12,"Utils.setConfigInteger(""threads.size"", Integer.parseInt(cl.getOptionValue('t')));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.3,73,55
1754_14,14,16,"if (cl.hasOption('4')) {
Utils.setConfigBoolean(""errors.skip404"", true);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,6,5,0,0,0,0.29,69,53
1754_15,15,15,"Utils.setConfigBoolean(""errors.skip404"", true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.27,70,53
1754_17,17,35,"if (cl.hasOption('r')) {
List<String> history = Utils.getConfigList(""download.history"");
for (String urlString : history) {
try {
URL url = new URL(urlString.trim());
rip(url);
} catch (Exception e) {
logger.error(""[!] Failed to rip URL "" + urlString, e);
continue;
}
try {
Thread.sleep(500);
} catch (InterruptedException e) {
logger.warn(""[!] Interrupted while re-ripping history"");
System.exit(-1);
}
}
System.exit(0);
}",1,0,0,0,0,0,0,0,0,14,3,19,1,1,0,0,6,5,0,0,1,0.57,50,38
1754_18,18,18,"List<String> history = Utils.getConfigList(""download.history"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.36,67,51
1754_19,19,33,"for (String urlString : history) {
try {
URL url = new URL(urlString.trim());
rip(url);
} catch (Exception e) {
logger.error(""[!] Failed to rip URL "" + urlString, e);
continue;
}
try {
Thread.sleep(500);
} catch (InterruptedException e) {
logger.warn(""[!] Interrupted while re-ripping history"");
System.exit(-1);
}
}",0,0,0,1,0,0,0,0,0,11,2,15,1,1,0,0,6,5,0,0,1,0.59,52,39
1754_20,20,26,"try {
URL url = new URL(urlString.trim());
rip(url);
} catch (Exception e) {
logger.error(""[!] Failed to rip URL "" + urlString, e);
continue;
}",0,0,0,0,1,0,0,0,0,5,1,7,0,0,0,0,6,5,0,0,1,0.63,59,44
1754_21,21,21,URL url = new URL(urlString.trim());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.69,64,48
1754_22,22,22,rip(url);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.77,63,47
1754_23,23,23,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.34,62,46
1754_24,24,24,"logger.error(""[!] Failed to rip URL "" + urlString, e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.59,61,45
1754_25,25,25,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.28,60,44
1754_27,27,32,"try {
Thread.sleep(500);
} catch (InterruptedException e) {
logger.warn(""[!] Interrupted while re-ripping history"");
System.exit(-1);
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,0,0,6,5,0,0,0,0.33,53,39
1754_28,28,28,Thread.sleep(500);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.33,57,42
1754_29,29,29,} catch (InterruptedException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.35,56,41
1754_30,30,30,"logger.warn(""[!] Interrupted while re-ripping history"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.31,55,40
1754_31,31,31,System.exit(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.22,54,39
1754_34,34,34,System.exit(0);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,5,0,0,0,0.26,51,38
1754_36,36,66,"if (cl.hasOption('R')) {
loadHistory();
if (HISTORY.toList().size() == 0) {
System.err.println(""There are no history entries to re-rip. Rip some albums first"");
System.exit(-1);
}
int added = 0;
for (HistoryEntry entry : HISTORY.toList()) {
if (entry.selected) {
added++;
try {
URL url = new URL(entry.url);
rip(url);
} catch (Exception e) {
logger.error(""[!] Failed to rip URL "" + entry.url, e);
continue;
}
try {
Thread.sleep(500);
} catch (InterruptedException e) {
logger.warn(""[!] Interrupted while re-ripping history"");
System.exit(-1);
}
}
}
if (added == 0) {
System.err.println(""No history entries have been 'Checked'\n"" +
""Check an entry by clicking the checkbox to the right of the URL or Right-click a URL to check/uncheck all items"");
System.exit(-1);
}
}",1,0,0,0,0,0,0,0,0,22,4,31,1,1,0,0,6,5,0,0,1,0.52,19,15
1754_37,37,37,loadHistory();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.29,48,36
1754_38,38,41,"if (HISTORY.toList().size() == 0) {
System.err.println(""There are no history entries to re-rip. Rip some albums first"");
System.exit(-1);
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,0,0,6,5,0,0,0,0.31,44,33
1754_39,39,39,"System.err.println(""There are no history entries to re-rip. Rip some albums first"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.31,46,34
1754_40,40,40,System.exit(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.22,45,33
1754_42,42,42,int added = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.24,43,32
1754_43,43,60,"for (HistoryEntry entry : HISTORY.toList()) {
if (entry.selected) {
added++;
try {
URL url = new URL(entry.url);
rip(url);
} catch (Exception e) {
logger.error(""[!] Failed to rip URL "" + entry.url, e);
continue;
}
try {
Thread.sleep(500);
} catch (InterruptedException e) {
logger.warn(""[!] Interrupted while re-ripping history"");
System.exit(-1);
}
}
}",0,0,0,1,0,0,0,0,0,13,3,18,1,1,0,0,6,5,0,0,1,0.56,25,18
1754_44,44,59,"if (entry.selected) {
added++;
try {
URL url = new URL(entry.url);
rip(url);
} catch (Exception e) {
logger.error(""[!] Failed to rip URL "" + entry.url, e);
continue;
}
try {
Thread.sleep(500);
} catch (InterruptedException e) {
logger.warn(""[!] Interrupted while re-ripping history"");
System.exit(-1);
}
}",1,0,0,0,0,0,0,0,0,12,2,16,0,0,0,0,6,5,0,0,1,0.57,26,18
1754_45,45,45,added++;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.25,40,29
1754_46,46,52,"try {
URL url = new URL(entry.url);
rip(url);
} catch (Exception e) {
logger.error(""[!] Failed to rip URL "" + entry.url, e);
continue;
}",0,0,0,0,1,0,0,0,0,5,1,7,0,0,0,0,6,5,0,0,1,0.63,33,23
1754_47,47,47,URL url = new URL(entry.url);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.7,38,27
1754_48,48,48,rip(url);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.77,37,26
1754_49,49,49,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.34,36,25
1754_50,50,50,"logger.error(""[!] Failed to rip URL "" + entry.url, e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.57,35,24
1754_51,51,51,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.28,34,23
1754_53,53,58,"try {
Thread.sleep(500);
} catch (InterruptedException e) {
logger.warn(""[!] Interrupted while re-ripping history"");
System.exit(-1);
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,0,0,6,5,0,0,0,0.33,27,18
1754_54,54,54,Thread.sleep(500);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.33,31,21
1754_55,55,55,} catch (InterruptedException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.35,30,20
1754_56,56,56,"logger.warn(""[!] Interrupted while re-ripping history"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.31,29,19
1754_57,57,57,System.exit(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.22,28,18
1754_61,61,65,"if (added == 0) {
System.err.println(""No history entries have been 'Checked'\n"" +
""Check an entry by clicking the checkbox to the right of the URL or Right-click a URL to check/uncheck all items"");
System.exit(-1);
}",1,0,0,0,0,0,0,0,0,2,1,5,1,1,0,0,6,5,0,0,1,0.48,20,15
1754_62,62,63,"System.err.println(""No history entries have been 'Checked'\n"" +
""Check an entry by clicking the checkbox to the right of the URL or Right-click a URL to check/uncheck all items"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,5,0,0,1,0.49,22,16
1754_64,64,64,System.exit(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.22,21,15
1754_67,67,69,"if (cl.hasOption('d')) {
Utils.setConfigBoolean(""download.save_order"", true);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,6,5,0,0,0,0.32,16,13
1754_68,68,68,"Utils.setConfigBoolean(""download.save_order"", true);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.32,17,13
1754_70,70,72,"if (cl.hasOption('D')) {
Utils.setConfigBoolean(""download.save_order"", false);
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,6,5,0,0,0,0.32,13,11
1754_71,71,71,"Utils.setConfigBoolean(""download.save_order"", false);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.33,14,11
1754_73,73,76,"if ((cl.hasOption('d'))&&(cl.hasOption('D'))) {
System.err.println(""\nCannot specify '-d' and '-D' simultaneously"");
System.exit(-1);
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,6,5,0,0,0,0.31,9,8
1754_74,74,74,"System.err.println(""\nCannot specify '-d' and '-D' simultaneously"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.33,11,9
1754_75,75,75,System.exit(-1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.22,10,8
1754_77,77,79,"if (cl.hasOption('l')) {
Utils.setConfigString(""rips.directory"", cl.getOptionValue('l'));
}",1,0,0,0,0,0,0,0,0,1,1,3,1,1,0,0,6,5,0,0,0,0.35,6,6
1754_78,78,78,"Utils.setConfigString(""rips.directory"", cl.getOptionValue('l'));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.36,7,6
1754_80,80,93,"if (cl.hasOption('f')) {
String filename = cl.getOptionValue('f');
try {
String url;
BufferedReader br = new BufferedReader(new FileReader(filename));
while ((url = br.readLine()) != null) {
ripURL(url.trim(), cl.hasOption(""n""));
}
} catch (FileNotFoundException fne) {
logger.error(""[!] File containing list of URLs not found. Cannot continue."");
} catch (IOException ioe) {
logger.error(""[!] Failed reading file containing list of URLs. Cannot continue."");
}
}",1,0,0,0,0,0,0,0,0,10,3,14,1,1,0,0,6,5,0,0,2,0.65,0,0
1754_81,81,81,String filename = cl.getOptionValue('f');,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,0,0.4,4,4
1754_82,82,92,"try {
String url;
BufferedReader br = new BufferedReader(new FileReader(filename));
while ((url = br.readLine()) != null) {
ripURL(url.trim(), cl.hasOption(""n""));
}
} catch (FileNotFoundException fne) {
logger.error(""[!] File containing list of URLs not found. Cannot continue."");
} catch (IOException ioe) {
logger.error(""[!] Failed reading file containing list of URLs. Cannot continue."");
}",0,0,0,0,1,0,0,0,0,8,2,11,0,1,0,0,6,5,0,0,2,0.66,0,0
1754_83,83,83,String url;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.63,2,2
1754_84,84,84,BufferedReader br = new BufferedReader(new FileReader(filename));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.47,1,1
1754_85,85,87,"while ((url = br.readLine()) != null) {
ripURL(url.trim(), cl.hasOption(""n""));
}",0,1,0,0,0,0,0,0,0,1,1,3,0,1,0,0,6,5,0,0,1,0.56,0,0
1754_86,86,86,"ripURL(url.trim(), cl.hasOption(""n""));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.57,0,0
1754_88,88,88,} catch (FileNotFoundException fne) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.51,2,1
1754_89,89,89,"logger.error(""[!] File containing list of URLs not found. Cannot continue."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.49,3,1
1754_90,90,90,} catch (IOException ioe) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.4,4,2
1754_91,91,91,"logger.error(""[!] Failed reading file containing list of URLs. Cannot continue."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.49,5,3
1754_94,94,97,"if (cl.hasOption('u')) {
String url = cl.getOptionValue('u').trim();
ripURL(url, cl.hasOption(""n""));
}",1,0,0,0,0,0,0,0,0,2,1,4,1,1,0,0,6,5,0,0,1,0.53,8,5
1754_95,95,95,String url = cl.getOptionValue('u').trim();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.51,9,5
1754_96,96,96,"ripURL(url, cl.hasOption(""n""));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,5,0,0,1,0.59,10,6
1755_1,1,1,private static void loadHistory() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.57,18,13
1755_2,2,2,"File historyFile = new File(""history.json"");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.41,17,12
1755_3,3,3,HISTORY.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.38,16,11
1755_4,4,35,"if (historyFile.exists()) {
try {
logger.info(""Loading history from history.json"");
HISTORY.fromFile(""history.json"");
} catch (IOException e) {
logger.error(""Failed to load history from file "" + historyFile, e);
System.out.println(
""RipMe failed to load the history file at "" + historyFile.getAbsolutePath() + ""\n\n"" +
""Error: "" + e.getMessage() + ""\n\n"" +
""Closing RipMe will automatically overwrite the contents of this file,\n"" +
""so you may want to back the file up before closing RipMe!"");
}
} else {
logger.info(""Loading history from configuration"");
HISTORY.fromList(Utils.getConfigList(""download.history""));
if (HISTORY.toList().size() == 0) {
String[] dirs = Utils.getWorkingDirectory().list(new FilenameFilter() {
@Override
public boolean accept(File dir, String file) {
return new File(dir.getAbsolutePath() + File.separator + file).isDirectory();
}
});
for (String dir : dirs) {
String url = RipUtils.urlFromDirectoryName(dir);
if (url != null) {
HistoryEntry entry = new HistoryEntry();
entry.url = url;
HISTORY.add(entry);
}
}
}
}",1,0,0,0,0,0,0,0,0,18,4,32,0,0,0,0,4,2,1,0,3,0.64,0,0
1755_5,5,15,"try {
logger.info(""Loading history from history.json"");
HISTORY.fromFile(""history.json"");
} catch (IOException e) {
logger.error(""Failed to load history from file "" + historyFile, e);
System.out.println(
""RipMe failed to load the history file at "" + historyFile.getAbsolutePath() + ""\n\n"" +
""Error: "" + e.getMessage() + ""\n\n"" +
""Closing RipMe will automatically overwrite the contents of this file,\n"" +
""so you may want to back the file up before closing RipMe!"");
}",0,0,0,0,1,0,0,0,0,5,1,11,0,0,0,0,4,2,1,0,1,0.48,4,4
1755_6,6,6,"logger.info(""Loading history from history.json"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.56,13,8
1755_7,7,7,"HISTORY.fromFile(""history.json"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.44,12,7
1755_8,8,8,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.28,11,6
1755_9,9,9,"logger.error(""Failed to load history from file "" + historyFile, e);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.51,10,5
1755_10,10,14,"System.out.println(
""RipMe failed to load the history file at "" + historyFile.getAbsolutePath() + ""\n\n"" +
""Error: "" + e.getMessage() + ""\n\n"" +
""Closing RipMe will automatically overwrite the contents of this file,\n"" +
""so you may want to back the file up before closing RipMe!"");",0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,0,4,2,1,0,1,0.46,5,4
1755_16,16,16,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.19,3,3
1755_17,17,17,"logger.info(""Loading history from configuration"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.55,2,2
1755_18,18,18,"HISTORY.fromList(Utils.getConfigList(""download.history""));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.51,1,1
1755_19,19,34,"if (HISTORY.toList().size() == 0) {
String[] dirs = Utils.getWorkingDirectory().list(new FilenameFilter() {
@Override
public boolean accept(File dir, String file) {
return new File(dir.getAbsolutePath() + File.separator + file).isDirectory();
}
});
for (String dir : dirs) {
String url = RipUtils.urlFromDirectoryName(dir);
if (url != null) {
HistoryEntry entry = new HistoryEntry();
entry.url = url;
HISTORY.add(entry);
}
}
}",1,0,0,0,0,0,0,0,0,8,3,16,0,0,0,0,4,2,1,0,1,0.51,0,0
1755_20,20,25,"String[] dirs = Utils.getWorkingDirectory().list(new FilenameFilter() {
@Override
public boolean accept(File dir, String file) {
return new File(dir.getAbsolutePath() + File.separator + file).isDirectory();
}
});",0,0,0,0,0,1,0,0,0,1,2,6,0,1,0,0,4,2,1,0,0,0.37,0,0
1755_23,23,23,return new File(dir.getAbsolutePath() + File.separator + file).isDirectory();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.34,3,1
1755_26,26,33,"for (String dir : dirs) {
String url = RipUtils.urlFromDirectoryName(dir);
if (url != null) {
HistoryEntry entry = new HistoryEntry();
entry.url = url;
HISTORY.add(entry);
}
}",0,0,0,1,0,0,0,0,0,5,2,8,0,1,0,0,4,2,1,0,1,0.55,6,2
1755_27,27,27,String url = RipUtils.urlFromDirectoryName(dir);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.32,7,2
1755_28,28,32,"if (url != null) {
HistoryEntry entry = new HistoryEntry();
entry.url = url;
HISTORY.add(entry);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,4,2,1,0,1,0.59,8,3
1755_29,29,29,HistoryEntry entry = new HistoryEntry();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.64,9,4
1755_30,30,30,entry.url = url;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.49,10,5
1755_31,31,31,HISTORY.add(entry);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.6,11,6
1756_1,1,1,private static void loadHistory() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.52,18,13
1756_2,2,2,"File historyFile = new File(""history.json"");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.56,17,12
1756_3,3,3,HISTORY.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.55,16,11
1756_4,4,35,"if (historyFile.exists()) {
try {
logger.info(""Loading history from history.json"");
HISTORY.fromFile(""history.json"");
} catch (IOException e) {
logger.error(""Failed to load history from file "" + historyFile, e);
System.out.println(
""RipMe failed to load the history file at "" + historyFile.getAbsolutePath() + ""\n\n"" +
""Error: "" + e.getMessage() + ""\n\n"" +
""Closing RipMe will automatically overwrite the contents of this file,\n"" +
""so you may want to back the file up before closing RipMe!"");
}
} else {
logger.info(""Loading history from configuration"");
HISTORY.fromList(Utils.getConfigList(""download.history""));
if (HISTORY.toList().size() == 0) {
String[] dirs = Utils.getWorkingDirectory().list(new FilenameFilter() {
@Override
public boolean accept(File dir, String file) {
return new File(dir.getAbsolutePath() + File.separator + file).isDirectory();
}
});
for (String dir : dirs) {
String url = RipUtils.urlFromDirectoryName(dir);
if (url != null) {
HistoryEntry entry = new HistoryEntry();
entry.url = url;
HISTORY.add(entry);
}
}
}
}",1,0,0,0,0,0,0,0,0,18,4,32,0,0,0,0,6,6,0,0,2,0.57,0,0
1756_5,5,15,"try {
logger.info(""Loading history from history.json"");
HISTORY.fromFile(""history.json"");
} catch (IOException e) {
logger.error(""Failed to load history from file "" + historyFile, e);
System.out.println(
""RipMe failed to load the history file at "" + historyFile.getAbsolutePath() + ""\n\n"" +
""Error: "" + e.getMessage() + ""\n\n"" +
""Closing RipMe will automatically overwrite the contents of this file,\n"" +
""so you may want to back the file up before closing RipMe!"");
}",0,0,0,0,1,0,0,0,0,5,1,11,0,0,0,0,6,6,0,0,2,0.55,4,4
1756_6,6,6,"logger.info(""Loading history from history.json"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.58,13,8
1756_7,7,7,"HISTORY.fromFile(""history.json"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.62,12,7
1756_8,8,8,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.29,11,6
1756_9,9,9,"logger.error(""Failed to load history from file "" + historyFile, e);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,6,0,0,1,0.53,10,5
1756_10,10,14,"System.out.println(
""RipMe failed to load the history file at "" + historyFile.getAbsolutePath() + ""\n\n"" +
""Error: "" + e.getMessage() + ""\n\n"" +
""Closing RipMe will automatically overwrite the contents of this file,\n"" +
""so you may want to back the file up before closing RipMe!"");",0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,0,6,6,0,0,2,0.52,5,4
1756_16,16,16,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.22,3,3
1756_17,17,17,"logger.info(""Loading history from configuration"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.52,2,2
1756_18,18,18,"HISTORY.fromList(Utils.getConfigList(""download.history""));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.51,1,1
1756_19,19,34,"if (HISTORY.toList().size() == 0) {
String[] dirs = Utils.getWorkingDirectory().list(new FilenameFilter() {
@Override
public boolean accept(File dir, String file) {
return new File(dir.getAbsolutePath() + File.separator + file).isDirectory();
}
});
for (String dir : dirs) {
String url = RipUtils.urlFromDirectoryName(dir);
if (url != null) {
HistoryEntry entry = new HistoryEntry();
entry.url = url;
HISTORY.add(entry);
}
}
}",1,0,0,0,0,0,0,0,0,8,3,16,0,0,0,0,6,6,0,0,2,0.55,0,0
1756_20,20,25,"String[] dirs = Utils.getWorkingDirectory().list(new FilenameFilter() {
@Override
public boolean accept(File dir, String file) {
return new File(dir.getAbsolutePath() + File.separator + file).isDirectory();
}
});",0,0,0,0,0,1,0,0,0,1,2,6,0,1,0,0,6,6,0,0,0,0.45,0,0
1756_23,23,23,return new File(dir.getAbsolutePath() + File.separator + file).isDirectory();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.43,3,1
1756_26,26,33,"for (String dir : dirs) {
String url = RipUtils.urlFromDirectoryName(dir);
if (url != null) {
HistoryEntry entry = new HistoryEntry();
entry.url = url;
HISTORY.add(entry);
}
}",0,0,0,1,0,0,0,0,0,5,2,8,0,1,0,0,6,6,0,0,2,0.51,6,2
1756_27,27,27,String url = RipUtils.urlFromDirectoryName(dir);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,1,0.39,7,2
1756_28,28,32,"if (url != null) {
HistoryEntry entry = new HistoryEntry();
entry.url = url;
HISTORY.add(entry);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,6,6,0,0,1,0.47,8,3
1756_29,29,29,HistoryEntry entry = new HistoryEntry();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,1,0.5,9,4
1756_30,30,30,entry.url = url;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,6,0,0,0,0.28,10,5
1756_31,31,31,HISTORY.add(entry);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,6,0,0,1,0.53,11,6
1757_1,1,1,private static void loadHistory() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.46,27,18
1757_2,2,2,"File historyFile = new File(""history.json"");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.5,26,17
1757_3,3,3,HISTORY.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.5,25,16
1757_4,4,35,"if (historyFile.exists()) {
try {
logger.info(""Loading history from history.json"");
HISTORY.fromFile(""history.json"");
} catch (IOException e) {
logger.error(""Failed to load history from file "" + historyFile, e);
System.out.println(
""RipMe failed to load the history file at "" + historyFile.getAbsolutePath() + ""\n\n"" +
""Error: "" + e.getMessage() + ""\n\n"" +
""Closing RipMe will automatically overwrite the contents of this file,\n"" +
""so you may want to back the file up before closing RipMe!"");
}
} else {
logger.info(""Loading history from configuration"");
HISTORY.fromList(Utils.getConfigList(""download.history""));
if (HISTORY.toList().size() == 0) {
String[] dirs = Utils.getWorkingDirectory().list(new FilenameFilter() {
@Override
public boolean accept(File dir, String file) {
return new File(dir.getAbsolutePath() + File.separator + file).isDirectory();
}
});
for (String dir : dirs) {
String url = RipUtils.urlFromDirectoryName(dir);
if (url != null) {
HistoryEntry entry = new HistoryEntry();
entry.url = url;
HISTORY.add(entry);
}
}
}
}",1,0,0,0,0,0,0,0,0,18,4,32,0,0,0,0,4,2,1,0,2,0.56,0,0
1757_5,5,15,"try {
logger.info(""Loading history from history.json"");
HISTORY.fromFile(""history.json"");
} catch (IOException e) {
logger.error(""Failed to load history from file "" + historyFile, e);
System.out.println(
""RipMe failed to load the history file at "" + historyFile.getAbsolutePath() + ""\n\n"" +
""Error: "" + e.getMessage() + ""\n\n"" +
""Closing RipMe will automatically overwrite the contents of this file,\n"" +
""so you may want to back the file up before closing RipMe!"");
}",0,0,0,0,1,0,0,0,0,5,1,11,0,0,0,0,4,2,1,0,1,0.47,13,9
1757_6,6,6,"logger.info(""Loading history from history.json"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.54,22,13
1757_7,7,7,"HISTORY.fromFile(""history.json"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.57,21,12
1757_8,8,8,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.31,20,11
1757_9,9,9,"logger.error(""Failed to load history from file "" + historyFile, e);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.49,19,10
1757_10,10,14,"System.out.println(
""RipMe failed to load the history file at "" + historyFile.getAbsolutePath() + ""\n\n"" +
""Error: "" + e.getMessage() + ""\n\n"" +
""Closing RipMe will automatically overwrite the contents of this file,\n"" +
""so you may want to back the file up before closing RipMe!"");",0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,0,4,2,1,0,1,0.42,14,9
1757_16,16,16,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.22,12,8
1757_17,17,17,"logger.info(""Loading history from configuration"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.47,11,7
1757_18,18,18,"HISTORY.fromList(Utils.getConfigList(""download.history""));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.5,10,6
1757_19,19,34,"if (HISTORY.toList().size() == 0) {
String[] dirs = Utils.getWorkingDirectory().list(new FilenameFilter() {
@Override
public boolean accept(File dir, String file) {
return new File(dir.getAbsolutePath() + File.separator + file).isDirectory();
}
});
for (String dir : dirs) {
String url = RipUtils.urlFromDirectoryName(dir);
if (url != null) {
HistoryEntry entry = new HistoryEntry();
entry.url = url;
HISTORY.add(entry);
}
}
}",1,0,0,0,0,0,0,0,0,8,3,16,0,0,0,0,4,2,1,0,2,0.55,0,0
1757_20,20,25,"String[] dirs = Utils.getWorkingDirectory().list(new FilenameFilter() {
@Override
public boolean accept(File dir, String file) {
return new File(dir.getAbsolutePath() + File.separator + file).isDirectory();
}
});",0,0,0,0,0,1,0,0,0,1,2,6,0,1,0,0,4,2,1,0,0,0.37,3,3
1757_23,23,23,return new File(dir.getAbsolutePath() + File.separator + file).isDirectory();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.34,5,3
1757_26,26,33,"for (String dir : dirs) {
String url = RipUtils.urlFromDirectoryName(dir);
if (url != null) {
HistoryEntry entry = new HistoryEntry();
entry.url = url;
HISTORY.add(entry);
}
}",0,0,0,1,0,0,0,0,0,5,2,8,0,1,0,0,4,2,1,0,2,0.57,0,0
1757_27,27,27,String url = RipUtils.urlFromDirectoryName(dir);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.33,1,1
1757_28,28,32,"if (url != null) {
HistoryEntry entry = new HistoryEntry();
entry.url = url;
HISTORY.add(entry);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,4,2,1,0,2,0.61,0,0
1757_29,29,29,HistoryEntry entry = new HistoryEntry();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.56,0,0
1757_30,30,30,entry.url = url;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.33,1,0
1757_31,31,31,HISTORY.add(entry);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.74,2,1
22_1,1,1,public void cleanup() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.37,1,1
22_2,2,8,"if (this.workingDir.list().length == 0) {
logger.info(""Deleting empty directory "" + this.workingDir);
boolean deleteResult = this.workingDir.delete();
if (!deleteResult) {
logger.error(""Unable to delete empty directory "" +  this.workingDir);
}
}",1,0,0,0,0,0,0,0,0,4,2,7,0,0,0,0,3,3,0,0,2,0.72,0,0
22_3,3,3,"logger.info(""Deleting empty directory "" + this.workingDir);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.72,0,0
22_4,4,4,boolean deleteResult = this.workingDir.delete();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,2,0.77,1,0
22_5,5,7,"if (!deleteResult) {
logger.error(""Unable to delete empty directory "" +  this.workingDir);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,3,0,0,2,0.72,2,1
22_6,6,6,"logger.error(""Unable to delete empty directory "" +  this.workingDir);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.72,3,2
7680_1,1,2,"    @Override
public void downloadURL(URL url, int index) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,1,0,1,0.5,0,0
7680_3,3,3,"addURLToDownload(url, getPrefix(index), """", this.url.toExternalForm(), null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.46,0,0
7681_1,1,2,"@Override
public String getAlbumTitle(URL url) throws MalformedURLException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,2,0.58,1,1
7681_3,3,11,"try {
String title = getFirstPage().title();
Pattern p = Pattern.compile(""^Porn pics of (.*) \\(Page 1\\)$"");
Matcher m = p.matcher(title);
if (m.matches()) {
return getHost() + ""_"" + m.group(1);
}
} catch (IOException e) {
}",0,0,0,0,1,0,0,0,0,6,2,9,0,0,0,0,5,5,0,0,1,0.49,0,0
7681_4,4,4,String title = getFirstPage().title();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.51,0,0
7681_5,5,5,"Pattern p = Pattern.compile(""^Porn pics of (.*) \\(Page 1\\)$"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.35,1,0
7681_6,6,6,Matcher m = p.matcher(title);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.52,2,1
7681_7,7,9,"if (m.matches()) {
return getHost() + ""_"" + m.group(1);
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,5,5,0,0,0,0.34,3,2
7681_8,8,8,"return getHost() + ""_"" + m.group(1);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.36,4,3
7681_10,10,10,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.29,6,5
7681_12,12,12,return super.getAlbumTitle(url);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.59,8,6
2920_1,1,2,"@Override
public String getAlbumTitle(URL url) throws MalformedURLException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,2,0.58,1,1
2920_3,3,10,"try {
if (albumDoc == null) {
albumDoc = Http.url(url).get();
}
String title = albumDoc.select(""h2"").first().text().trim();
return ""nfsfw_"" + Utils.filesystemSafe(title);
} catch (Exception e) {
}",0,0,0,0,1,0,0,0,0,5,2,8,0,0,0,0,5,5,0,0,2,0.56,0,0
2920_4,4,6,"if (albumDoc == null) {
albumDoc = Http.url(url).get();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,5,0,0,1,0.5,0,0
2920_5,5,5,albumDoc = Http.url(url).get();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.49,1,0
2920_7,7,7,"String title = albumDoc.select(""h2"").first().text().trim();",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,2,0.55,3,2
2920_8,8,8,"return ""nfsfw_"" + Utils.filesystemSafe(title);",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.47,4,2
2920_9,9,9,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.28,5,3
2920_11,11,11,return super.getAlbumTitle(url);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.59,7,5
2921_1,1,2,"@Override
public void rip() throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,1,1,0,0,0.25,45,35
2921_3,3,3,List<Pair> subAlbums = new ArrayList<Pair>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.29,44,34
2921_4,4,4,int index = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.31,43,33
2921_5,5,5,"subAlbums.add(new Pair(this.url.toExternalForm(), """"));",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,1,0,0,0.31,42,32
2921_6,6,59,"while (subAlbums.size() > 0) {
if (isStopped()) {
break;
}
Pair nextAlbum = subAlbums.remove(0);
String nextURL = nextAlbum.first;
String nextSubalbum = nextAlbum.second;
sendUpdate(STATUS.LOADING_RESOURCE, nextURL);
logger.info(""    Retrieving "" + nextURL);
if (albumDoc == null) {
albumDoc = Http.url(nextURL).get();
}
for (Element suba : albumDoc.select(""td.IMG > a"")) {
if (isStopped() || isThisATest()) {
break;
}
String subURL = ""http://nfsfw.com"" + suba.attr(""href"");
String subdir = subURL;
while (subdir.endsWith(""/"")) {
subdir = subdir.substring(0, subdir.length() - 1);
}
subdir = subdir.substring(subdir.lastIndexOf(""/"") + 1);
subAlbums.add(new Pair(subURL, subdir));
}
for (Element thumb : albumDoc.select(""td.giItemCell > div > a"")) {
if (isStopped()) {
break;
}
String imagePage = ""http://nfsfw.com"" + thumb.attr(""href"");
try {
NfsfwImageThread t = new NfsfwImageThread(new URL(imagePage), nextSubalbum, ++index);
nfsfwThreadPool.addThread(t);
if (isThisATest()) {
break;
}
} catch (MalformedURLException mue) {
logger.warn(""Invalid URL: "" + imagePage);
}
}
if (isThisATest()) {
break;
}
for (Element a : albumDoc.select(""a.next"")) {
subAlbums.add(0, new Pair(""http://nfsfw.com"" + a.attr(""href""), """"));
break;
}
albumDoc = null;
try {
Thread.sleep(1000);
} catch (InterruptedException e) {
logger.error(""Interrupted while waiting to load next page"", e);
throw new IOException(e);
}
}",0,1,0,0,0,0,0,0,0,40,4,54,1,1,0,0,3,1,1,0,3,0.68,0,0
2921_7,7,9,"if (isStopped()) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,1,1,0,0,0.28,38,29
2921_8,8,8,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,1,1,0,0,0.29,39,29
2921_10,10,10,Pair nextAlbum = subAlbums.remove(0);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,1,0.5,37,28
2921_11,11,11,String nextURL = nextAlbum.first;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,1,0.54,36,27
2921_12,12,12,String nextSubalbum = nextAlbum.second;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,1,0.56,35,26
2921_13,13,13,"sendUpdate(STATUS.LOADING_RESOURCE, nextURL);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,1,0.48,34,25
2921_14,14,14,"logger.info(""    Retrieving "" + nextURL);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,1,0.53,33,24
2921_15,15,17,"if (albumDoc == null) {
albumDoc = Http.url(nextURL).get();
}",1,0,0,0,0,0,0,0,0,1,1,3,0,1,0,0,3,1,1,0,2,0.64,30,22
2921_16,16,16,albumDoc = Http.url(nextURL).get();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,2,0.67,31,22
2921_18,18,29,"for (Element suba : albumDoc.select(""td.IMG > a"")) {
if (isStopped() || isThisATest()) {
break;
}
String subURL = ""http://nfsfw.com"" + suba.attr(""href"");
String subdir = subURL;
while (subdir.endsWith(""/"")) {
subdir = subdir.substring(0, subdir.length() - 1);
}
subdir = subdir.substring(subdir.lastIndexOf(""/"") + 1);
subAlbums.add(new Pair(subURL, subdir));
}",0,0,0,1,0,0,0,0,0,8,2,12,1,0,0,0,3,1,1,0,0,0.38,18,13
2921_19,19,21,"if (isStopped() || isThisATest()) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,1,1,0,0,0.25,26,19
2921_20,20,20,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,1,1,0,0,0.29,27,19
2921_22,22,22,"String subURL = ""http://nfsfw.com"" + suba.attr(""href"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,0,0.33,25,18
2921_23,23,23,String subdir = subURL;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,0,0.35,24,17
2921_24,24,26,"while (subdir.endsWith(""/"")) {
subdir = subdir.substring(0, subdir.length() - 1);
}",0,1,0,0,0,0,0,0,0,1,1,3,1,1,0,0,3,1,1,0,0,0.36,21,15
2921_25,25,25,"subdir = subdir.substring(0, subdir.length() - 1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.36,22,15
2921_27,27,27,"subdir = subdir.substring(subdir.lastIndexOf(""/"") + 1);",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,1,1,0,0,0.39,20,14
2921_28,28,28,"subAlbums.add(new Pair(subURL, subdir));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,0,0.34,19,13
2921_30,30,44,"for (Element thumb : albumDoc.select(""td.giItemCell > div > a"")) {
if (isStopped()) {
break;
}
String imagePage = ""http://nfsfw.com"" + thumb.attr(""href"");
try {
NfsfwImageThread t = new NfsfwImageThread(new URL(imagePage), nextSubalbum, ++index);
nfsfwThreadPool.addThread(t);
if (isThisATest()) {
break;
}
} catch (MalformedURLException mue) {
logger.warn(""Invalid URL: "" + imagePage);
}
}",0,0,0,1,0,0,0,0,0,10,3,15,1,0,0,0,3,1,1,0,2,0.58,3,2
2921_31,31,33,"if (isStopped()) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,1,1,0,0,0.28,14,10
2921_32,32,32,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,1,1,0,0,0.29,15,10
2921_34,34,34,"String imagePage = ""http://nfsfw.com"" + thumb.attr(""href"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,1,0.48,13,9
2921_35,35,43,"try {
NfsfwImageThread t = new NfsfwImageThread(new URL(imagePage), nextSubalbum, ++index);
nfsfwThreadPool.addThread(t);
if (isThisATest()) {
break;
}
} catch (MalformedURLException mue) {
logger.warn(""Invalid URL: "" + imagePage);
}",0,0,0,0,1,0,0,0,0,6,2,9,0,1,0,0,3,1,1,0,2,0.58,4,2
2921_36,36,36,"NfsfwImageThread t = new NfsfwImageThread(new URL(imagePage), nextSubalbum, ++index);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,1,1,0,2,0.6,11,7
2921_37,37,37,nfsfwThreadPool.addThread(t);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,1,1,0,0,0.32,10,6
2921_38,38,40,"if (isThisATest()) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,1,1,0,0,0.24,7,4
2921_39,39,39,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,1,1,0,0,0.29,8,4
2921_41,41,41,} catch (MalformedURLException mue) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.31,6,3
2921_42,42,42,"logger.warn(""Invalid URL: "" + imagePage);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,1,0.5,5,2
2921_45,45,47,"if (isThisATest()) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,1,0,0,0,3,1,1,0,0,0.24,0,0
2921_46,46,46,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,1,1,0,0,0.29,1,0
2921_48,48,51,"for (Element a : albumDoc.select(""a.next"")) {
subAlbums.add(0, new Pair(""http://nfsfw.com"" + a.attr(""href""), """"));
break;
}",0,0,0,1,0,0,0,0,0,2,1,4,0,0,0,0,3,1,1,0,1,0.48,0,0
2921_49,49,49,"subAlbums.add(0, new Pair(""http://nfsfw.com"" + a.attr(""href""), """"));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.34,1,0
2921_50,50,50,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,1,1,0,0,0.29,2,1
2921_52,52,52,albumDoc = null;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.29,4,3
2921_53,53,58,"try {
Thread.sleep(1000);
} catch (InterruptedException e) {
logger.error(""Interrupted while waiting to load next page"", e);
throw new IOException(e);
}",0,0,0,0,1,0,0,0,0,4,1,6,0,0,0,0,3,1,1,0,2,0.59,5,3
2921_54,54,54,Thread.sleep(1000);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.3,6,4
2921_55,55,55,} catch (InterruptedException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,0,0.29,7,5
2921_56,56,56,"logger.error(""Interrupted while waiting to load next page"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,1,0,2,0.66,8,6
2921_57,57,57,throw new IOException(e);,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,1,1,0,0,0.29,9,7
2921_60,60,60,nfsfwThreadPool.waitForThreads();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,1,1,0,0,0.29,12,9
2921_61,61,61,waitForThreads();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,1,1,0,0,0.18,13,9
7682_1,1,1,private void loadHistory() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.49,21,13
7682_2,2,2,"File historyFile = new File(""history.json"");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.56,20,12
7682_3,3,3,HISTORY.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.55,19,11
7682_4,4,38,"if (historyFile.exists()) {
try {
logger.info(""Loading history from history.json"");
HISTORY.fromFile(""history.json"");
} catch (IOException e) {
logger.error(""Failed to load history from file "" + historyFile, e);
JOptionPane.showMessageDialog(null,
""RipMe failed to load the history file at "" + historyFile.getAbsolutePath() + ""\n\n"" +
""Error: "" + e.getMessage() + ""\n\n"" +
""Closing RipMe will automatically overwrite the contents of this file,\n"" +
""so you may want to back the file up before closing RipMe!"",
""RipMe - history load failure"",
JOptionPane.ERROR_MESSAGE);
}
}
else {
logger.info(""Loading history from configuration"");
HISTORY.fromList(Utils.getConfigList(""download.history""));
if (HISTORY.toList().size() == 0) {
String[] dirs = Utils.getWorkingDirectory().list(new FilenameFilter() {
@Override
public boolean accept(File dir, String file) {
return new File(dir.getAbsolutePath() + File.separator + file).isDirectory();
}
});
for (String dir : dirs) {
String url = RipUtils.urlFromDirectoryName(dir);
if (url != null) {
HistoryEntry entry = new HistoryEntry();
entry.url = url;
HISTORY.add(entry);
}
}
}
}",1,0,0,0,0,0,0,0,0,18,4,35,0,0,0,0,6,6,0,0,2,0.56,0,0
7682_5,5,17,"try {
logger.info(""Loading history from history.json"");
HISTORY.fromFile(""history.json"");
} catch (IOException e) {
logger.error(""Failed to load history from file "" + historyFile, e);
JOptionPane.showMessageDialog(null,
""RipMe failed to load the history file at "" + historyFile.getAbsolutePath() + ""\n\n"" +
""Error: "" + e.getMessage() + ""\n\n"" +
""Closing RipMe will automatically overwrite the contents of this file,\n"" +
""so you may want to back the file up before closing RipMe!"",
""RipMe - history load failure"",
JOptionPane.ERROR_MESSAGE);
}",0,0,0,0,1,0,0,0,0,5,1,13,0,0,0,0,6,6,0,0,2,0.55,5,4
7682_6,6,6,"logger.info(""Loading history from history.json"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.58,16,8
7682_7,7,7,"HISTORY.fromFile(""history.json"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.62,15,7
7682_8,8,8,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.29,14,6
7682_9,9,9,"logger.error(""Failed to load history from file "" + historyFile, e);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,6,0,0,1,0.53,13,5
7682_10,10,16,"JOptionPane.showMessageDialog(null,
""RipMe failed to load the history file at "" + historyFile.getAbsolutePath() + ""\n\n"" +
""Error: "" + e.getMessage() + ""\n\n"" +
""Closing RipMe will automatically overwrite the contents of this file,\n"" +
""so you may want to back the file up before closing RipMe!"",
""RipMe - history load failure"",
JOptionPane.ERROR_MESSAGE);",0,0,0,0,0,0,0,0,0,0,0,7,0,1,0,0,6,6,0,0,2,0.52,6,4
7682_19,19,19,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.22,3,3
7682_20,20,20,"logger.info(""Loading history from configuration"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.52,2,2
7682_21,21,21,"HISTORY.fromList(Utils.getConfigList(""download.history""));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.51,1,1
7682_22,22,37,"if (HISTORY.toList().size() == 0) {
String[] dirs = Utils.getWorkingDirectory().list(new FilenameFilter() {
@Override
public boolean accept(File dir, String file) {
return new File(dir.getAbsolutePath() + File.separator + file).isDirectory();
}
});
for (String dir : dirs) {
String url = RipUtils.urlFromDirectoryName(dir);
if (url != null) {
HistoryEntry entry = new HistoryEntry();
entry.url = url;
HISTORY.add(entry);
}
}
}",1,0,0,0,0,0,0,0,0,8,3,16,0,0,0,0,6,6,0,0,2,0.55,0,0
7682_23,23,28,"String[] dirs = Utils.getWorkingDirectory().list(new FilenameFilter() {
@Override
public boolean accept(File dir, String file) {
return new File(dir.getAbsolutePath() + File.separator + file).isDirectory();
}
});",0,0,0,0,0,1,0,0,0,1,2,6,0,1,0,0,6,6,0,0,0,0.45,0,0
7682_26,26,26,return new File(dir.getAbsolutePath() + File.separator + file).isDirectory();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.43,3,1
7682_29,29,36,"for (String dir : dirs) {
String url = RipUtils.urlFromDirectoryName(dir);
if (url != null) {
HistoryEntry entry = new HistoryEntry();
entry.url = url;
HISTORY.add(entry);
}
}",0,0,0,1,0,0,0,0,0,5,2,8,0,1,0,0,6,6,0,0,2,0.51,6,2
7682_30,30,30,String url = RipUtils.urlFromDirectoryName(dir);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,1,0.39,7,2
7682_31,31,35,"if (url != null) {
HistoryEntry entry = new HistoryEntry();
entry.url = url;
HISTORY.add(entry);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,6,6,0,0,1,0.47,8,3
7682_32,32,32,HistoryEntry entry = new HistoryEntry();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,6,0,0,1,0.5,9,4
7682_33,33,33,entry.url = url;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,6,0,0,0,0.28,10,5
7682_34,34,34,HISTORY.add(entry);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,6,0,0,1,0.53,11,6
7683_1,1,1,private void loadHistory() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.47,30,18
7683_2,2,2,"File historyFile = new File(""history.json"");",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.5,29,17
7683_3,3,3,HISTORY.clear();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.5,28,16
7683_4,4,38,"if (historyFile.exists()) {
try {
logger.info(""Loading history from history.json"");
HISTORY.fromFile(""history.json"");
} catch (IOException e) {
logger.error(""Failed to load history from file "" + historyFile, e);
JOptionPane.showMessageDialog(null,
""RipMe failed to load the history file at "" + historyFile.getAbsolutePath() + ""\n\n"" +
""Error: "" + e.getMessage() + ""\n\n"" +
""Closing RipMe will automatically overwrite the contents of this file,\n"" +
""so you may want to back the file up before closing RipMe!"",
""RipMe - history load failure"",
JOptionPane.ERROR_MESSAGE);
}
}
else {
logger.info(""Loading history from configuration"");
HISTORY.fromList(Utils.getConfigList(""download.history""));
if (HISTORY.toList().size() == 0) {
String[] dirs = Utils.getWorkingDirectory().list(new FilenameFilter() {
@Override
public boolean accept(File dir, String file) {
return new File(dir.getAbsolutePath() + File.separator + file).isDirectory();
}
});
for (String dir : dirs) {
String url = RipUtils.urlFromDirectoryName(dir);
if (url != null) {
HistoryEntry entry = new HistoryEntry();
entry.url = url;
HISTORY.add(entry);
}
}
}
}",1,0,0,0,0,0,0,0,0,18,4,35,0,0,0,0,4,2,1,0,2,0.56,0,0
7683_5,5,17,"try {
logger.info(""Loading history from history.json"");
HISTORY.fromFile(""history.json"");
} catch (IOException e) {
logger.error(""Failed to load history from file "" + historyFile, e);
JOptionPane.showMessageDialog(null,
""RipMe failed to load the history file at "" + historyFile.getAbsolutePath() + ""\n\n"" +
""Error: "" + e.getMessage() + ""\n\n"" +
""Closing RipMe will automatically overwrite the contents of this file,\n"" +
""so you may want to back the file up before closing RipMe!"",
""RipMe - history load failure"",
JOptionPane.ERROR_MESSAGE);
}",0,0,0,0,1,0,0,0,0,5,1,13,0,0,0,0,4,2,1,0,1,0.48,14,9
7683_6,6,6,"logger.info(""Loading history from history.json"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.54,25,13
7683_7,7,7,"HISTORY.fromFile(""history.json"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.57,24,12
7683_8,8,8,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.31,23,11
7683_9,9,9,"logger.error(""Failed to load history from file "" + historyFile, e);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.49,22,10
7683_10,10,16,"JOptionPane.showMessageDialog(null,
""RipMe failed to load the history file at "" + historyFile.getAbsolutePath() + ""\n\n"" +
""Error: "" + e.getMessage() + ""\n\n"" +
""Closing RipMe will automatically overwrite the contents of this file,\n"" +
""so you may want to back the file up before closing RipMe!"",
""RipMe - history load failure"",
JOptionPane.ERROR_MESSAGE);",0,0,0,0,0,0,0,0,0,0,0,7,0,1,0,0,4,2,1,0,1,0.45,15,9
7683_19,19,19,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.22,12,8
7683_20,20,20,"logger.info(""Loading history from configuration"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.47,11,7
7683_21,21,21,"HISTORY.fromList(Utils.getConfigList(""download.history""));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.5,10,6
7683_22,22,37,"if (HISTORY.toList().size() == 0) {
String[] dirs = Utils.getWorkingDirectory().list(new FilenameFilter() {
@Override
public boolean accept(File dir, String file) {
return new File(dir.getAbsolutePath() + File.separator + file).isDirectory();
}
});
for (String dir : dirs) {
String url = RipUtils.urlFromDirectoryName(dir);
if (url != null) {
HistoryEntry entry = new HistoryEntry();
entry.url = url;
HISTORY.add(entry);
}
}
}",1,0,0,0,0,0,0,0,0,8,3,16,0,0,0,0,4,2,1,0,2,0.55,0,0
7683_23,23,28,"String[] dirs = Utils.getWorkingDirectory().list(new FilenameFilter() {
@Override
public boolean accept(File dir, String file) {
return new File(dir.getAbsolutePath() + File.separator + file).isDirectory();
}
});",0,0,0,0,0,1,0,0,0,1,2,6,0,1,0,0,4,2,1,0,0,0.37,3,3
7683_26,26,26,return new File(dir.getAbsolutePath() + File.separator + file).isDirectory();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.34,5,3
7683_29,29,36,"for (String dir : dirs) {
String url = RipUtils.urlFromDirectoryName(dir);
if (url != null) {
HistoryEntry entry = new HistoryEntry();
entry.url = url;
HISTORY.add(entry);
}
}",0,0,0,1,0,0,0,0,0,5,2,8,0,1,0,0,4,2,1,0,2,0.57,0,0
7683_30,30,30,String url = RipUtils.urlFromDirectoryName(dir);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.33,1,1
7683_31,31,35,"if (url != null) {
HistoryEntry entry = new HistoryEntry();
entry.url = url;
HISTORY.add(entry);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,1,0,0,4,2,1,0,2,0.61,0,0
7683_32,32,32,HistoryEntry entry = new HistoryEntry();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,1,0.56,0,0
7683_33,33,33,entry.url = url;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.33,1,0
7683_34,34,34,HISTORY.add(entry);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.74,2,1
7684_1,1,1,"@SuppressWarnings(""unchecked"")",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.34,2,2
7684_2,2,2,private void ripNextAlbum() {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.28,1,1
7684_3,3,3,isRipping = true;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.23,0,0
7684_4,4,4,"Utils.setConfigList(""queue"", (Enumeration<Object>) queueListModel.elements());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,3,1,0,1,0.42,0,0
7684_6,6,9,"if (queueListModel.isEmpty()) {
isRipping = false;
return;
}",1,0,0,0,0,0,0,0,0,2,1,4,0,0,1,0,5,3,1,0,1,0.41,2,1
7684_7,7,7,isRipping = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.24,3,1
7684_8,8,8,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.14,4,2
7684_10,10,10,String nextAlbum = (String) queueListModel.remove(0);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.37,6,4
7684_11,11,16,"if (queueListModel.isEmpty()) {
optionQueue.setText(""Queue"");
}
else {
optionQueue.setText(""Queue ("" + queueListModel.size() + "")"");
}",1,0,0,0,0,0,0,0,0,3,1,6,0,0,0,0,5,3,1,0,1,0.47,7,4
7684_12,12,12,"optionQueue.setText(""Queue"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.49,8,5
7684_14,14,14,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.21,10,7
7684_15,15,15,"optionQueue.setText(""Queue ("" + queueListModel.size() + "")"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,1,0.47,11,7
7684_17,17,17,Thread t = ripAlbum(nextAlbum);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,3,1,0,0,0.25,13,9
7684_18,18,28,"if (t == null) {
try {
Thread.sleep(500);
} catch (InterruptedException ie) {
logger.error(""Interrupted while waiting to rip next album"", ie);
}
ripNextAlbum();
}
else {
t.start();
}",1,0,0,0,0,0,0,0,0,7,2,11,0,1,0,0,5,3,1,0,0,0.37,14,9
7684_19,19,23,"try {
Thread.sleep(500);
} catch (InterruptedException ie) {
logger.error(""Interrupted while waiting to rip next album"", ie);
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,5,3,1,0,0,0.4,15,10
7684_20,20,20,Thread.sleep(500);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.42,16,11
7684_21,21,21,} catch (InterruptedException ie) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.37,17,12
7684_22,22,22,"logger.error(""Interrupted while waiting to rip next album"", ie);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.38,18,13
7684_24,24,24,ripNextAlbum();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.19,20,15
7684_26,26,26,else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.21,22,16
7684_27,27,27,t.start();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,3,1,0,0,0.16,23,16
516_1,1,2,"@Override
public void rip() throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,0,0,0,0.18,8,7
516_3,3,3,int index = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.34,7,6
516_4,4,4,int textindex = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.37,6,5
516_5,5,5,"logger.info(""Retrieving "" + this.url);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.29,5,4
516_6,6,6,"sendUpdate(STATUS.LOADING_RESOURCE, this.url.toExternalForm());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.28,4,3
516_7,7,7,Document doc = getFirstPage();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,3,2,0,0,0,0.38,3,2
516_9,9,72,"while (doc != null) {
List<String> imageURLs = getURLsFromPage(doc);
if (isThisATest()) {
while (imageURLs.size() > 1) {
imageURLs.remove(1);
}
}

if (imageURLs.size() == 0) {
throw new IOException(""No images found at "" + doc.location());
}

for (String imageURL : imageURLs) {
index += 1;
logger.debug(""Found image url #"" + index + "": "" + imageURL);
downloadURL(new URL(imageURL), index);
if (isStopped()) {
break;
}
}
if (hasDescriptionSupport() && Utils.getConfigBoolean(""descriptions.save"", false)) {
logger.debug(""Fetching description(s) from "" + doc.location());
List<String> textURLs = getDescriptionsFromPage(doc);
if (textURLs.size() > 0) {
logger.debug(""Found description link(s) from "" + doc.location());
for (String textURL : textURLs) {
if (isStopped()) {
break;
}
textindex += 1;
logger.debug(""Getting description from "" + textURL);
String[] tempDesc = getDescription(textURL,doc);
if (tempDesc != null) {
if (Utils.getConfigBoolean(""file.overwrite"", false) || !(new File(
workingDir.getCanonicalPath()
+ """"
+ File.separator
+ getPrefix(index)
+ (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL)))
+ "".txt"").exists())) {
logger.debug(""Got description from "" + textURL);
saveText(new URL(textURL), """", tempDesc[0], textindex, (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL))));
sleep(descSleepTime());
} else {
logger.debug(""Description from "" + textURL + "" already exists."");
}
}

}
}
}

if (isStopped() || isThisATest()) {
break;
}

try {
sendUpdate(STATUS.LOADING_RESOURCE, ""next page"");
doc = getNextPage(doc);
} catch (IOException e) {
logger.info(""Can't get next page: "" + e.getMessage());
break;
}
}",0,1,0,0,0,0,0,0,0,42,6,64,0,0,1,1,3,2,0,0,3,0.68,0,0
516_10,10,10,List<String> imageURLs = getURLsFromPage(doc);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.51,0,0
516_11,11,15,"if (isThisATest()) {
while (imageURLs.size() > 1) {
imageURLs.remove(1);
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,1,0,1,3,2,0,0,3,0.83,0,0
516_12,12,14,"while (imageURLs.size() > 1) {
imageURLs.remove(1);
}",0,1,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,3,0.86,1,0
516_13,13,13,imageURLs.remove(1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,3,0.89,2,1
516_17,17,19,"if (imageURLs.size() == 0) {
throw new IOException(""No images found at "" + doc.location());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,1,0.54,6,3
516_18,18,18,"throw new IOException(""No images found at "" + doc.location());",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,2,0,0,1,0.41,7,3
516_21,21,28,"for (String imageURL : imageURLs) {
index += 1;
logger.debug(""Found image url #"" + index + "": "" + imageURL);
downloadURL(new URL(imageURL), index);
if (isStopped()) {
break;
}
}",0,0,0,1,0,0,0,0,0,5,2,8,1,1,1,0,3,2,0,0,2,0.65,10,5
516_22,22,22,index += 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.55,11,5
516_23,23,23,"logger.debug(""Found image url #"" + index + "": "" + imageURL);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.47,12,6
516_24,24,24,"downloadURL(new URL(imageURL), index);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.44,13,7
516_25,25,27,"if (isStopped()) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,0,0.2,14,8
516_26,26,26,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,0,0,0,0.2,15,9
516_29,29,59,"if (hasDescriptionSupport() && Utils.getConfigBoolean(""descriptions.save"", false)) {
logger.debug(""Fetching description(s) from "" + doc.location());
List<String> textURLs = getDescriptionsFromPage(doc);
if (textURLs.size() > 0) {
logger.debug(""Found description link(s) from "" + doc.location());
for (String textURL : textURLs) {
if (isStopped()) {
break;
}
textindex += 1;
logger.debug(""Getting description from "" + textURL);
String[] tempDesc = getDescription(textURL,doc);
if (tempDesc != null) {
if (Utils.getConfigBoolean(""file.overwrite"", false) || !(new File(
workingDir.getCanonicalPath()
+ """"
+ File.separator
+ getPrefix(index)
+ (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL)))
+ "".txt"").exists())) {
logger.debug(""Got description from "" + textURL);
saveText(new URL(textURL), """", tempDesc[0], textindex, (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL))));
sleep(descSleepTime());
} else {
logger.debug(""Description from "" + textURL + "" already exists."");
}
}

}
}
}",1,0,0,0,0,0,0,0,0,21,5,31,1,1,0,1,3,2,0,0,1,0.5,18,11
516_30,30,30,"logger.debug(""Fetching description(s) from "" + doc.location());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.29,19,11
516_31,31,31,List<String> textURLs = getDescriptionsFromPage(doc);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.36,20,12
516_32,32,58,"if (textURLs.size() > 0) {
logger.debug(""Found description link(s) from "" + doc.location());
for (String textURL : textURLs) {
if (isStopped()) {
break;
}
textindex += 1;
logger.debug(""Getting description from "" + textURL);
String[] tempDesc = getDescription(textURL,doc);
if (tempDesc != null) {
if (Utils.getConfigBoolean(""file.overwrite"", false) || !(new File(
workingDir.getCanonicalPath()
+ """"
+ File.separator
+ getPrefix(index)
+ (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL)))
+ "".txt"").exists())) {
logger.debug(""Got description from "" + textURL);
saveText(new URL(textURL), """", tempDesc[0], textindex, (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL))));
sleep(descSleepTime());
} else {
logger.debug(""Description from "" + textURL + "" already exists."");
}
}

}
}",1,0,0,0,0,0,0,0,0,18,4,27,0,1,0,0,3,2,0,0,1,0.51,21,13
516_33,33,33,"logger.debug(""Found description link(s) from "" + doc.location());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,3,2,0,0,0,0.28,22,14
516_34,34,57,"for (String textURL : textURLs) {
if (isStopped()) {
break;
}
textindex += 1;
logger.debug(""Getting description from "" + textURL);
String[] tempDesc = getDescription(textURL,doc);
if (tempDesc != null) {
if (Utils.getConfigBoolean(""file.overwrite"", false) || !(new File(
workingDir.getCanonicalPath()
+ """"
+ File.separator
+ getPrefix(index)
+ (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL)))
+ "".txt"").exists())) {
logger.debug(""Got description from "" + textURL);
saveText(new URL(textURL), """", tempDesc[0], textindex, (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL))));
sleep(descSleepTime());
} else {
logger.debug(""Description from "" + textURL + "" already exists."");
}
}

}",0,0,0,1,0,0,0,0,0,16,3,24,1,1,0,0,3,2,0,0,1,0.51,23,15
516_35,35,37,"if (isStopped()) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,3,2,0,0,0,0.2,24,16
516_36,36,36,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,0,0,0,0.2,25,17
516_38,38,38,textindex += 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.73,27,19
516_39,39,39,"logger.debug(""Getting description from "" + textURL);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.23,28,19
516_40,40,40,"String[] tempDesc = getDescription(textURL,doc);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.33,29,20
516_41,41,55,"if (tempDesc != null) {
if (Utils.getConfigBoolean(""file.overwrite"", false) || !(new File(
workingDir.getCanonicalPath()
+ """"
+ File.separator
+ getPrefix(index)
+ (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL)))
+ "".txt"").exists())) {
logger.debug(""Got description from "" + textURL);
saveText(new URL(textURL), """", tempDesc[0], textindex, (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL))));
sleep(descSleepTime());
} else {
logger.debug(""Description from "" + textURL + "" already exists."");
}
}",1,0,0,0,0,0,0,0,0,10,2,15,0,1,0,1,3,2,0,0,1,0.51,30,21
516_42,42,54,"if (Utils.getConfigBoolean(""file.overwrite"", false) || !(new File(
workingDir.getCanonicalPath()
+ """"
+ File.separator
+ getPrefix(index)
+ (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL)))
+ "".txt"").exists())) {
logger.debug(""Got description from "" + textURL);
saveText(new URL(textURL), """", tempDesc[0], textindex, (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL))));
sleep(descSleepTime());
} else {
logger.debug(""Description from "" + textURL + "" already exists."");
}",1,0,0,0,0,0,0,0,0,9,1,13,0,0,0,0,3,2,0,0,1,0.51,31,22
516_43,43,43,workingDir.getCanonicalPath(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.37,32,23
516_44,44,46,"+ """"
+ File.separator
+ getPrefix(index)",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,3,2,0,0,0,0.28,33,24
516_47,47,47,+ (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL))),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,1,0.53,36,26
516_48,48,48,"+ "".txt"").exists())) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,37,26
516_49,49,49,"logger.debug(""Got description from "" + textURL);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,0,0.24,38,27
516_50,50,50,"saveText(new URL(textURL), """", tempDesc[0], textindex, (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL))));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,3,2,0,0,1,0.51,39,28
516_51,51,51,sleep(descSleepTime());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,40,29
516_52,52,52,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.11,41,30
516_53,53,53,"logger.debug(""Description from "" + textURL + "" already exists."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.24,42,31
516_61,61,63,"if (isStopped() || isThisATest()) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,3,2,0,0,0,0.17,50,33
516_62,62,62,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,0,0,0,0.2,51,33
516_65,65,71,"try {
sendUpdate(STATUS.LOADING_RESOURCE, ""next page"");
doc = getNextPage(doc);
} catch (IOException e) {
logger.info(""Can't get next page: "" + e.getMessage());
break;
}",0,0,0,0,1,0,0,0,0,5,1,7,0,0,1,0,3,2,0,0,0,0.34,54,35
516_66,66,66,"sendUpdate(STATUS.LOADING_RESOURCE, ""next page"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.32,55,35
516_67,67,67,doc = getNextPage(doc);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.38,56,36
516_68,68,68,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.22,57,37
516_69,69,69,"logger.info(""Can't get next page: "" + e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,0,0,0,0.3,58,38
516_70,70,70,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,0,0,0,0.2,59,39
516_74,74,77,"if (getThreadPool() != null) {
logger.debug(""Waiting for threadpool "" + getThreadPool().getClass().getName());
getThreadPool().waitForThreads();
}",1,0,0,0,0,0,0,0,0,2,1,4,1,0,1,0,3,2,0,0,0,0.24,63,41
516_75,75,75,"logger.debug(""Waiting for threadpool "" + getThreadPool().getClass().getName());",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,0,0.23,64,41
516_76,76,76,getThreadPool().waitForThreads();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,0,0.24,65,42
516_78,78,78,waitForThreads();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,2,0,0,0,0.14,67,44
517_1,1,2,"@Override
public void rip() throws IOException {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.48,71,48
517_3,3,3,int index = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.3,70,47
517_4,4,4,int textindex = 0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.26,69,46
517_5,5,5,"logger.info(""Retrieving "" + this.url);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.37,68,45
517_6,6,6,"sendUpdate(STATUS.LOADING_RESOURCE, this.url.toExternalForm());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.38,67,44
517_7,7,7,Document doc = getFirstPage();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,3,0,0,0,0.25,66,43
517_9,9,72,"while (doc != null) {
List<String> imageURLs = getURLsFromPage(doc);
if (isThisATest()) {
while (imageURLs.size() > 1) {
imageURLs.remove(1);
}
}

if (imageURLs.size() == 0) {
throw new IOException(""No images found at "" + doc.location());
}

for (String imageURL : imageURLs) {
index += 1;
logger.debug(""Found image url #"" + index + "": "" + imageURL);
downloadURL(new URL(imageURL), index);
if (isStopped()) {
break;
}
}
if (hasDescriptionSupport() && Utils.getConfigBoolean(""descriptions.save"", false)) {
logger.debug(""Fetching description(s) from "" + doc.location());
List<String> textURLs = getDescriptionsFromPage(doc);
if (textURLs.size() > 0) {
logger.debug(""Found description link(s) from "" + doc.location());
for (String textURL : textURLs) {
if (isStopped()) {
break;
}
textindex += 1;
logger.debug(""Getting description from "" + textURL);
String[] tempDesc = getDescription(textURL,doc);
if (tempDesc != null) {
if (Utils.getConfigBoolean(""file.overwrite"", false) || !(new File(
workingDir.getCanonicalPath()
+ """"
+ File.separator
+ getPrefix(index)
+ (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL)))
+ "".txt"").exists())) {
logger.debug(""Got description from "" + textURL);
saveText(new URL(textURL), """", tempDesc[0], textindex, (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL))));
sleep(descSleepTime());
} else {
logger.debug(""Description from "" + textURL + "" already exists."");
}
}

}
}
}

if (isStopped() || isThisATest()) {
break;
}

try {
sendUpdate(STATUS.LOADING_RESOURCE, ""next page"");
doc = getNextPage(doc);
} catch (IOException e) {
logger.info(""Can't get next page: "" + e.getMessage());
break;
}
}",0,1,0,0,0,0,0,0,0,42,6,64,0,0,1,1,4,3,0,0,0,0.46,1,0
517_10,10,10,List<String> imageURLs = getURLsFromPage(doc);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.31,63,41
517_11,11,15,"if (isThisATest()) {
while (imageURLs.size() > 1) {
imageURLs.remove(1);
}
}",1,0,0,0,0,0,0,0,0,2,2,5,0,1,0,1,4,3,0,0,0,0.32,58,38
517_12,12,14,"while (imageURLs.size() > 1) {
imageURLs.remove(1);
}",0,1,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,0,0.31,59,38
517_13,13,13,imageURLs.remove(1);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,60,38
517_17,17,19,"if (imageURLs.size() == 0) {
throw new IOException(""No images found at "" + doc.location());
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,0,0.38,54,36
517_18,18,18,"throw new IOException(""No images found at "" + doc.location());",0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,3,0,0,0,0.39,55,36
517_21,21,28,"for (String imageURL : imageURLs) {
index += 1;
logger.debug(""Found image url #"" + index + "": "" + imageURL);
downloadURL(new URL(imageURL), index);
if (isStopped()) {
break;
}
}",0,0,0,1,0,0,0,0,0,5,2,8,1,1,1,0,4,3,0,0,0,0.39,45,30
517_22,22,22,index += 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.29,51,34
517_23,23,23,"logger.debug(""Found image url #"" + index + "": "" + imageURL);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.38,50,33
517_24,24,24,"downloadURL(new URL(imageURL), index);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.37,49,32
517_25,25,27,"if (isStopped()) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,0,0.36,46,30
517_26,26,26,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,47,30
517_29,29,59,"if (hasDescriptionSupport() && Utils.getConfigBoolean(""descriptions.save"", false)) {
logger.debug(""Fetching description(s) from "" + doc.location());
List<String> textURLs = getDescriptionsFromPage(doc);
if (textURLs.size() > 0) {
logger.debug(""Found description link(s) from "" + doc.location());
for (String textURL : textURLs) {
if (isStopped()) {
break;
}
textindex += 1;
logger.debug(""Getting description from "" + textURL);
String[] tempDesc = getDescription(textURL,doc);
if (tempDesc != null) {
if (Utils.getConfigBoolean(""file.overwrite"", false) || !(new File(
workingDir.getCanonicalPath()
+ """"
+ File.separator
+ getPrefix(index)
+ (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL)))
+ "".txt"").exists())) {
logger.debug(""Got description from "" + textURL);
saveText(new URL(textURL), """", tempDesc[0], textindex, (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL))));
sleep(descSleepTime());
} else {
logger.debug(""Description from "" + textURL + "" already exists."");
}
}

}
}
}",1,0,0,0,0,0,0,0,0,21,5,31,1,1,0,1,4,3,0,0,0,0.46,14,8
517_30,30,30,"logger.debug(""Fetching description(s) from "" + doc.location());",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.37,43,28
517_31,31,31,List<String> textURLs = getDescriptionsFromPage(doc);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.29,42,27
517_32,32,58,"if (textURLs.size() > 0) {
logger.debug(""Found description link(s) from "" + doc.location());
for (String textURL : textURLs) {
if (isStopped()) {
break;
}
textindex += 1;
logger.debug(""Getting description from "" + textURL);
String[] tempDesc = getDescription(textURL,doc);
if (tempDesc != null) {
if (Utils.getConfigBoolean(""file.overwrite"", false) || !(new File(
workingDir.getCanonicalPath()
+ """"
+ File.separator
+ getPrefix(index)
+ (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL)))
+ "".txt"").exists())) {
logger.debug(""Got description from "" + textURL);
saveText(new URL(textURL), """", tempDesc[0], textindex, (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL))));
sleep(descSleepTime());
} else {
logger.debug(""Description from "" + textURL + "" already exists."");
}
}

}
}",1,0,0,0,0,0,0,0,0,18,4,27,0,1,0,0,4,3,0,0,0,0.46,15,8
517_33,33,33,"logger.debug(""Found description link(s) from "" + doc.location());",0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,3,0,0,0,0.36,40,25
517_34,34,57,"for (String textURL : textURLs) {
if (isStopped()) {
break;
}
textindex += 1;
logger.debug(""Getting description from "" + textURL);
String[] tempDesc = getDescription(textURL,doc);
if (tempDesc != null) {
if (Utils.getConfigBoolean(""file.overwrite"", false) || !(new File(
workingDir.getCanonicalPath()
+ """"
+ File.separator
+ getPrefix(index)
+ (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL)))
+ "".txt"").exists())) {
logger.debug(""Got description from "" + textURL);
saveText(new URL(textURL), """", tempDesc[0], textindex, (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL))));
sleep(descSleepTime());
} else {
logger.debug(""Description from "" + textURL + "" already exists."");
}
}

}",0,0,0,1,0,0,0,0,0,16,3,24,1,1,0,0,4,3,0,0,0,0.47,16,8
517_35,35,37,"if (isStopped()) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,4,3,0,0,0,0.36,36,22
517_36,36,36,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,37,22
517_38,38,38,textindex += 1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.17,35,21
517_39,39,39,"logger.debug(""Getting description from "" + textURL);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.38,34,20
517_40,40,40,"String[] tempDesc = getDescription(textURL,doc);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.35,33,19
517_41,41,55,"if (tempDesc != null) {
if (Utils.getConfigBoolean(""file.overwrite"", false) || !(new File(
workingDir.getCanonicalPath()
+ """"
+ File.separator
+ getPrefix(index)
+ (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL)))
+ "".txt"").exists())) {
logger.debug(""Got description from "" + textURL);
saveText(new URL(textURL), """", tempDesc[0], textindex, (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL))));
sleep(descSleepTime());
} else {
logger.debug(""Description from "" + textURL + "" already exists."");
}
}",1,0,0,0,0,0,0,0,0,10,2,15,0,1,0,1,4,3,0,0,0,0.47,18,8
517_42,42,54,"if (Utils.getConfigBoolean(""file.overwrite"", false) || !(new File(
workingDir.getCanonicalPath()
+ """"
+ File.separator
+ getPrefix(index)
+ (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL)))
+ "".txt"").exists())) {
logger.debug(""Got description from "" + textURL);
saveText(new URL(textURL), """", tempDesc[0], textindex, (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL))));
sleep(descSleepTime());
} else {
logger.debug(""Description from "" + textURL + "" already exists."");
}",1,0,0,0,0,0,0,0,0,9,1,13,0,0,0,0,4,3,0,0,0,0.47,19,8
517_43,43,43,workingDir.getCanonicalPath(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.42,30,16
517_44,44,46,"+ """"
+ File.separator
+ getPrefix(index)",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,4,3,0,0,0,0.36,27,15
517_47,47,47,+ (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL))),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.37,26,14
517_48,48,48,"+ "".txt"").exists())) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.4,25,13
517_49,49,49,"logger.debug(""Got description from "" + textURL);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.41,24,12
517_50,50,50,"saveText(new URL(textURL), """", tempDesc[0], textindex, (tempDesc.length > 1 ? tempDesc[1] : fileNameFromURL(new URL(textURL))));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.36,23,11
517_51,51,51,sleep(descSleepTime());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.55,22,10
517_52,52,52,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.28,21,9
517_53,53,53,"logger.debug(""Description from "" + textURL + "" already exists."");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.4,20,8
517_61,61,63,"if (isStopped() || isThisATest()) {
break;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,1,1,4,3,0,0,0,0.37,10,6
517_62,62,62,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,11,6
517_65,65,71,"try {
sendUpdate(STATUS.LOADING_RESOURCE, ""next page"");
doc = getNextPage(doc);
} catch (IOException e) {
logger.info(""Can't get next page: "" + e.getMessage());
break;
}",0,0,0,0,1,0,0,0,0,5,1,7,0,0,1,0,4,3,0,0,0,0.4,2,0
517_66,66,66,"sendUpdate(STATUS.LOADING_RESOURCE, ""next page"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.33,7,4
517_67,67,67,doc = getNextPage(doc);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.27,6,3
517_68,68,68,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.41,5,2
517_69,69,69,"logger.info(""Can't get next page: "" + e.getMessage());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.39,4,1
517_70,70,70,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,3,0,0,0,0.31,3,0
517_74,74,77,"if (getThreadPool() != null) {
logger.debug(""Waiting for threadpool "" + getThreadPool().getClass().getName());
getThreadPool().waitForThreads();
}",1,0,0,0,0,0,0,0,0,2,1,4,1,0,1,0,4,3,0,0,3,0.75,0,0
517_75,75,75,"logger.debug(""Waiting for threadpool "" + getThreadPool().getClass().getName());",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,3,0.68,1,0
517_76,76,76,getThreadPool().waitForThreads();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,3,0.83,2,1
517_78,78,78,waitForThreads();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,2,0.84,4,3
518_1,1,1,"    public boolean saveText(URL url, String subdirectory, String text, int index, String fileName) {",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.48,17,11
518_2,2,6,"try {
stopCheck();
} catch (IOException e) {
return false;
}",0,0,0,0,1,0,0,0,0,3,1,5,0,0,0,0,2,2,0,0,0,0.3,12,7
518_3,3,3,stopCheck();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.15,15,9
518_4,4,4,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,14,8
518_5,5,5,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.24,13,7
518_7,7,7,File saveFileAs;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.67,11,6
518_8,8,25,"try {
if (!subdirectory.equals("""")) {
subdirectory = File.separator + subdirectory;
}
saveFileAs = new File(
workingDir.getCanonicalPath()
+ subdirectory
+ File.separator
+ getPrefix(index)
+ fileName
+ "".txt"");
FileOutputStream out = (new FileOutputStream(saveFileAs));
out.write(text.getBytes());
out.close();
} catch (IOException e) {
logger.error(""[!] Error creating save file path for description '"" + url + ""':"", e);
return false;
}",0,0,0,0,1,0,0,0,0,11,2,18,0,1,0,0,2,2,0,0,2,0.72,0,0
518_9,9,11,"if (!subdirectory.equals("""")) {
subdirectory = File.separator + subdirectory;
}",1,0,0,0,0,0,0,0,0,1,1,3,0,0,0,0,2,2,0,0,1,0.59,7,3
518_10,10,10,subdirectory = File.separator + subdirectory;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.64,8,3
518_12,12,13,"saveFileAs = new File(
workingDir.getCanonicalPath()",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,1,0.58,5,2
518_14,14,16,"+ subdirectory
+ File.separator
+ getPrefix(index)",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,2,2,0,0,1,0.54,2,1
518_17,17,18,"+ fileName
+ "".txt"");",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,1,0.6,0,0
518_19,19,19,FileOutputStream out = (new FileOutputStream(saveFileAs));,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.64,0,0
518_20,20,20,out.write(text.getBytes());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.53,1,0
518_21,21,21,out.close();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.22,2,1
518_22,22,22,} catch (IOException e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.33,3,2
518_23,23,23,"logger.error(""[!] Error creating save file path for description '"" + url + ""':"", e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.49,4,3
518_24,24,24,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.24,5,4
518_26,26,26,"logger.debug(""Downloading "" + url + ""'s description to "" + saveFileAs);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.5,7,6
518_27,27,30,"if (!saveFileAs.getParentFile().exists()) {
logger.info(""[+] Creating directory: "" + Utils.removeCWD(saveFileAs.getParent()));
saveFileAs.getParentFile().mkdirs();
}",1,0,0,0,0,0,0,0,0,2,1,4,0,1,0,0,2,2,0,0,1,0.53,8,6
518_28,28,28,"logger.info(""[+] Creating directory: "" + Utils.removeCWD(saveFileAs.getParent()));",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.47,9,7
518_29,29,29,saveFileAs.getParentFile().mkdirs();,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.58,10,8
518_31,31,31,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.22,12,10
457_1,1,1,throws MalformedURLException ,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,5,5,0,0,0,0.34,1,1
457_2,2,8,"try {
Document doc = getFirstPage();
Elements elems = doc.select("".albumName"");
return getHost() + ""_"" + elems.first().text();
} catch (Exception e) {
logger.warn(""Failed to get album title from "" + url, e);
}",0,0,0,0,1,0,0,0,0,5,1,7,0,0,0,0,5,5,0,0,2,0.56,0,0
457_3,3,3,Document doc = getFirstPage();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.25,0,0
457_4,4,4,"Elements elems = doc.select("".albumName"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.48,1,0
457_5,5,5,"return getHost() + ""_"" + elems.first().text();",0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.36,2,1
457_6,6,6,} catch (Exception e) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.28,3,2
457_7,7,7,"logger.warn(""Failed to get album title from "" + url, e);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.63,4,3
457_9,9,9,return super.getAlbumTitle(url);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.59,6,5
458_1,1,2,"    @Override
public void downloadURL(URL url, int index) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,1,0,1,0.5,0,0
458_3,3,3,"addURLToDownload(url, getPrefix(index), """", this.url.toExternalForm(), null);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,1,0,1,0.46,0,0
1143_1,1,1,"public String getOperationResult(Token token, int precision)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.56,2,0
1143_3,3,15,"if (hasInput())
{
decodeTransactionInput(token.getWallet());
String value = transactionInput.getOperationValue(token, this);
boolean isSendOrReceive = !from.equalsIgnoreCase(to) && transactionInput.isSendOrReceive(this);
String prefix = (value.length() == 0 || (value.startsWith(""#"") || !isSendOrReceive)) ? """" :
(token.getIsSent(this) ? ""- "" : ""+ "");
return prefix + value;
}
else
{
return token.getTransactionValue(this, precision);
}",1,0,0,0,0,0,0,0,0,7,1,13,0,0,0,0,5,5,0,0,1,0.54,0,0
1143_5,5,5,decodeTransactionInput(token.getWallet());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.47,2,1
1143_6,6,6,"String value = transactionInput.getOperationValue(token, this);",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.41,3,1
1143_7,7,7,boolean isSendOrReceive = !from.equalsIgnoreCase(to) && transactionInput.isSendOrReceive(this);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.37,4,2
1143_8,8,9,"String prefix = (value.length() == 0 || (value.startsWith(""#"") || !isSendOrReceive)) ? """" :
(token.getIsSent(this) ? ""- "" : ""+ "");",0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,5,5,0,0,1,0.49,5,3
1143_10,10,10,return prefix + value;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.32,7,5
1143_12,12,13,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,0,0.43,9,6
1143_14,14,14,"return token.getTransactionValue(this, precision);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.58,11,7
1466_1,1,1,private String sanitiseString(String str),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,10,1,0,0,0.39,16,7
1466_3,3,3,StringBuilder sb = new StringBuilder();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,11,10,1,0,0,0.31,14,6
1466_4,4,14,"for (char ch : str.toCharArray())
{
if (Character.isAlphabetic(ch) || Character.isDigit(ch) || Character.isIdeographic(ch) || ch < 65530)
{
sb.append(ch);
}
else
{
sb.append(""*"");
}
}",0,0,0,1,0,0,0,0,0,4,2,11,0,1,0,1,11,10,1,0,0,0.39,3,1
1466_6,6,13,"if (Character.isAlphabetic(ch) || Character.isDigit(ch) || Character.isIdeographic(ch) || ch < 65530)
{
sb.append(ch);
}
else
{
sb.append(""*"");
}",1,0,0,0,0,0,0,0,0,3,1,8,0,0,0,0,11,10,1,0,0,0.37,4,1
1466_8,8,8,sb.append(ch);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,10,1,0,0,0.36,9,3
1466_10,10,11,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,11,10,1,0,0,0.2,6,2
1466_12,12,12,"sb.append(""*"");",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,10,1,0,0,0.27,5,1
1466_16,16,16,str = sb.toString();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,11,10,1,0,0,0.35,1,0
1466_18,18,32,"if (str.toLowerCase().contains(""<a href=""))
{
return str;
}
else
{
if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N)
{
return Html.fromHtml(str, FROM_HTML_MODE_COMPACT).toString();
}
else
{
return Html.fromHtml(str).toString();
}
}",1,0,0,0,0,0,0,0,0,6,2,15,0,0,1,0,11,10,1,0,2,0.51,0,0
1466_20,20,20,return str;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,10,1,0,0,0.35,2,1
1466_22,22,23,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,11,10,1,0,0,0.2,4,2
1466_24,24,31,"if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N)
{
return Html.fromHtml(str, FROM_HTML_MODE_COMPACT).toString();
}
else
{
return Html.fromHtml(str).toString();
}",1,0,0,0,0,0,0,0,0,3,1,8,0,0,0,0,11,10,1,0,1,0.47,6,3
1466_26,26,26,"return Html.fromHtml(str, FROM_HTML_MODE_COMPACT).toString();",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,10,1,0,1,0.48,8,4
1466_28,28,29,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,11,10,1,0,0,0.2,10,5
1466_30,30,30,return Html.fromHtml(str).toString();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,11,10,1,0,1,0.5,12,6
1467_1,1,1,public int getContractType(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.69,7,3
1467_3,3,3,switch (contractType),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.75,5,2
1467_5,5,6,"case ERC20:
return R.string.erc20;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.33,2,1
1467_7,7,8,"case ETHEREUM:
return 0;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,1,0.17,0,0
1467_9,9,10,"default:
return 0;",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.19,0,0
1468_1,1,1,    public boolean checkRealmBalanceChange(RealmToken realmToken),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.36,5,4
1468_3,3,3,if (contractType == null || contractType.ordinal() != realmToken.getInterfaceSpec()) return true;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.4,3,3
1468_4,4,4,String currentState = realmToken.getBalance();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,0,0,0,0.36,2,2
1468_5,5,5,if (currentState == null) return true;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,5,0,0,0,0.32,1,1
1468_6,6,6,if (tokenInfo.name != null && realmToken.getName() == null) return true;,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,5,0,0,1,0.45,0,0
1468_7,7,7,if (tokenInfo.name == null && realmToken.getName() != null) return true;,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,5,0,0,1,0.45,0,0
1468_8,8,8,if (tokenInfo.symbol == null && realmToken.getSymbol() != null) return true;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,0,0.37,1,0
1468_9,9,9,if (tokenInfo.name != null && realmToken.getName() != null) return true;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,5,0,0,1,0.45,2,1
1468_10,10,10,if (tokenInfo.symbol != null && realmToken.getSymbol() == null) return true;,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,5,0,0,0,0.37,3,2
1468_11,11,11,if (tokenInfo.name != null && (!tokenInfo.name.equals(realmToken.getName()) || !tokenInfo.symbol.equals(realmToken.getSymbol()))) return true;,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,9,5,0,0,1,0.46,4,3
1468_12,12,12,String currentBalance = getFullBalance();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,5,0,0,0,0.32,5,4
1468_13,13,13,return !currentState.equals(currentBalance);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,9,5,0,0,0,0.35,6,5
1469_1,1,1,"    public String getTokenName(AssetDefinitionService assetService, int count)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.51,1,0
1469_3,3,11,"if (assetService.hasDefinition(tokenInfo.chainId, tokenInfo.address))
{
if (tokenInfo.name != null) return tokenInfo.name;
else return assetService.getAssetDefinition(tokenInfo.chainId, getAddress()).getTokenName(count);
}
else
{
return tokenInfo.name;
}",1,0,0,0,0,0,0,0,0,4,1,9,0,0,0,0,4,2,1,0,1,0.53,0,0
1469_5,5,6,"if (tokenInfo.name != null) return tokenInfo.name;
else return assetService.getAssetDefinition(tokenInfo.chainId, getAddress()).getTokenName(count);",1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,4,2,1,0,1,0.53,2,1
1469_6,6,6,"else return assetService.getAssetDefinition(tokenInfo.chainId, getAddress()).getTokenName(count);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.52,3,1
1469_8,8,9,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,0,0.23,5,3
1469_10,10,10,return tokenInfo.name;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,1,0,1,0.52,7,4
1470_1,1,1,public NFTAsset fetchTokenMetadata(BigInteger tokenId),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,6,1,0,1,0.5,1,0
1470_3,3,3,"String responseValue = callSmartContractFunction(tokenInfo.chainId, getTokenURI(tokenId), getAddress(), getWallet());",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,12,6,1,0,3,0.66,0,0
1470_4,4,4,"if (responseValue == null) responseValue = callSmartContractFunction(tokenInfo.chainId, getTokenURI2(tokenId), getAddress(), getWallet());",1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,12,6,1,0,2,0.55,1,0
1470_5,5,5,String metaData = loadMetaData(responseValue);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,12,6,1,0,0,0.29,2,1
1470_6,6,13,"if (!TextUtils.isEmpty(metaData))
{
return new NFTAsset(metaData);
}
else
{
return new NFTAsset();
}",1,0,0,0,0,0,0,0,0,3,1,8,0,1,0,0,12,6,1,0,0,0.37,3,2
1470_8,8,8,return new NFTAsset(metaData);,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,12,6,1,0,0,0.35,5,4
1470_10,10,11,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,12,6,1,0,0,0.22,7,5
1470_12,12,12,return new NFTAsset();,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,12,6,1,0,0,0.35,9,6
7708_1,1,2,"@Override
public Single<Token[]> checkInterface(Token[] tokens, Wallet wallet)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,1,0,0,0,0.24,44,16
7708_4,4,53,"return Single.fromCallable(() -> {
for (int i = 0; i < tokens.length; i++)
{
Token t = tokens[i];
if (t.getInterfaceSpec() == ContractType.ERC721_UNDETERMINED || t.getInterfaceSpec() == ContractType.MAYBE_ERC20 || !t.checkBalanceType())
{
ContractType type = determineCommonType(t.tokenInfo).blockingGet();
TokenInfo tInfo = t.tokenInfo;
switch (type)
{
case OTHER:
if (t.getInterfaceSpec() == ContractType.MAYBE_ERC20)
{
type = ContractType.ERC20;
break;
}
continue;
case ERC20:
if (t.getInterfaceSpec() != ContractType.MAYBE_ERC20)
{
type = ContractType.ERC721;
}
break;
case ERC1155:
break;
case ERC721:
case ERC721_LEGACY:
Map<BigInteger, NFTAsset> NFTBalance = t.getTokenAssets();
t.balance = checkUint256Balance(wallet, tInfo.chainId, tInfo.address);
if (TextUtils.isEmpty(tInfo.name + tInfo.symbol)) tInfo = new TokenInfo(tInfo.address, "" "", "" "", tInfo.decimals, tInfo.isEnabled, tInfo.chainId);
t = new ERC721Token(tInfo, NFTBalance, t.balance, System.currentTimeMillis(), t.getNetworkName(), type);
t.lastTxTime = tokens[i].lastTxTime;
tokens[i] = t;
break;
case ERC721_TICKET:
List<BigInteger> balanceFromOpenSea = t.getArrayBalance();
t = new ERC721Ticket(t.tokenInfo, balanceFromOpenSea, System.currentTimeMillis(), t.getNetworkName(), ContractType.ERC721_TICKET);
tokens[i] = t;
break;
default:
type = ContractType.ERC721;
}

updateTokenType(t, wallet, type);
TokensService.setInterfaceSpec(t.tokenInfo.chainId, t.tokenInfo.address, type);
}
}

return tokens;
}).flatMap(this::checkTokenData);",0,0,0,0,0,0,1,0,0,16,5,50,0,0,0,0,2,1,0,0,1,0.51,0,0
7708_5,5,50,"for (int i = 0; i < tokens.length; i++)
{
Token t = tokens[i];
if (t.getInterfaceSpec() == ContractType.ERC721_UNDETERMINED || t.getInterfaceSpec() == ContractType.MAYBE_ERC20 || !t.checkBalanceType())
{
ContractType type = determineCommonType(t.tokenInfo).blockingGet();
TokenInfo tInfo = t.tokenInfo;
switch (type)
{
case OTHER:
if (t.getInterfaceSpec() == ContractType.MAYBE_ERC20)
{
type = ContractType.ERC20;
break;
}
continue;
case ERC20:
if (t.getInterfaceSpec() != ContractType.MAYBE_ERC20)
{
type = ContractType.ERC721;
}
break;
case ERC1155:
break;
case ERC721:
case ERC721_LEGACY:
Map<BigInteger, NFTAsset> NFTBalance = t.getTokenAssets();
t.balance = checkUint256Balance(wallet, tInfo.chainId, tInfo.address);
if (TextUtils.isEmpty(tInfo.name + tInfo.symbol)) tInfo = new TokenInfo(tInfo.address, "" "", "" "", tInfo.decimals, tInfo.isEnabled, tInfo.chainId);
t = new ERC721Token(tInfo, NFTBalance, t.balance, System.currentTimeMillis(), t.getNetworkName(), type);
t.lastTxTime = tokens[i].lastTxTime;
tokens[i] = t;
break;
case ERC721_TICKET:
List<BigInteger> balanceFromOpenSea = t.getArrayBalance();
t = new ERC721Ticket(t.tokenInfo, balanceFromOpenSea, System.currentTimeMillis(), t.getNetworkName(), ContractType.ERC721_TICKET);
tokens[i] = t;
break;
default:
type = ContractType.ERC721;
}

updateTokenType(t, wallet, type);
TokensService.setInterfaceSpec(t.tokenInfo.chainId, t.tokenInfo.address, type);
}
}",0,0,1,0,0,0,0,0,0,14,4,46,0,0,0,1,2,1,0,0,1,0.52,0,0
7708_7,7,7,Token t = tokens[i];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.18,39,13
7708_8,8,49,"if (t.getInterfaceSpec() == ContractType.ERC721_UNDETERMINED || t.getInterfaceSpec() == ContractType.MAYBE_ERC20 || !t.checkBalanceType())
{
ContractType type = determineCommonType(t.tokenInfo).blockingGet();
TokenInfo tInfo = t.tokenInfo;
switch (type)
{
case OTHER:
if (t.getInterfaceSpec() == ContractType.MAYBE_ERC20)
{
type = ContractType.ERC20;
break;
}
continue;
case ERC20:
if (t.getInterfaceSpec() != ContractType.MAYBE_ERC20)
{
type = ContractType.ERC721;
}
break;
case ERC1155:
break;
case ERC721:
case ERC721_LEGACY:
Map<BigInteger, NFTAsset> NFTBalance = t.getTokenAssets();
t.balance = checkUint256Balance(wallet, tInfo.chainId, tInfo.address);
if (TextUtils.isEmpty(tInfo.name + tInfo.symbol)) tInfo = new TokenInfo(tInfo.address, "" "", "" "", tInfo.decimals, tInfo.isEnabled, tInfo.chainId);
t = new ERC721Token(tInfo, NFTBalance, t.balance, System.currentTimeMillis(), t.getNetworkName(), type);
t.lastTxTime = tokens[i].lastTxTime;
tokens[i] = t;
break;
case ERC721_TICKET:
List<BigInteger> balanceFromOpenSea = t.getArrayBalance();
t = new ERC721Ticket(t.tokenInfo, balanceFromOpenSea, System.currentTimeMillis(), t.getNetworkName(), ContractType.ERC721_TICKET);
tokens[i] = t;
break;
default:
type = ContractType.ERC721;
}

updateTokenType(t, wallet, type);
TokensService.setInterfaceSpec(t.tokenInfo.chainId, t.tokenInfo.address, type);
}",1,0,0,0,0,0,0,0,0,12,3,42,0,1,0,0,2,1,0,0,1,0.52,0,0
7708_10,10,10,ContractType type = determineCommonType(t.tokenInfo).blockingGet();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.36,36,11
7708_11,11,11,TokenInfo tInfo = t.tokenInfo;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,1,0,0,0,0.27,35,10
7708_15,15,19,"if (t.getInterfaceSpec() == ContractType.MAYBE_ERC20)
{
type = ContractType.ERC20;
break;
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,2,1,0,0,0,0.37,27,8
7708_18,18,18,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,1,0,0,0,0.15,28,8
7708_22,22,25,"if (t.getInterfaceSpec() != ContractType.MAYBE_ERC20)
{
type = ContractType.ERC721;
}",1,0,0,0,0,0,0,0,0,0,1,4,0,0,0,0,2,1,0,0,0,0.38,21,7
7708_26,26,26,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,1,0,0,0,0.15,20,6
7708_28,28,28,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,1,0,0,0,0.15,18,5
7708_31,31,31,"Map<BigInteger, NFTAsset> NFTBalance = t.getTokenAssets();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.31,15,4
7708_33,33,33,"if (TextUtils.isEmpty(tInfo.name + tInfo.symbol)) tInfo = new TokenInfo(tInfo.address, "" "", "" "", tInfo.decimals, tInfo.isEnabled, tInfo.chainId);",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.28,13,3
7708_37,37,37,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,1,0,0,0,0.15,9,2
7708_39,39,39,List<BigInteger> balanceFromOpenSea = t.getArrayBalance();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,0,0,0,0.31,7,1
7708_42,42,42,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,1,0,0,0,0.15,4,0
7708_52,52,52,return tokens;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,2,1,0,0,0,0.16,5,0
7709_1,1,2,"@Override
public Single<Token[]> checkInterface(Token[] tokens, Wallet wallet)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,2,1,0,0,0.29,29,12
7709_4,4,53,"return Single.fromCallable(() -> {
for (int i = 0; i < tokens.length; i++)
{
Token t = tokens[i];
if (t.getInterfaceSpec() == ContractType.ERC721_UNDETERMINED || t.getInterfaceSpec() == ContractType.MAYBE_ERC20 || !t.checkBalanceType())
{
ContractType type = determineCommonType(t.tokenInfo).blockingGet();
TokenInfo tInfo = t.tokenInfo;
switch (type)
{
case OTHER:
if (t.getInterfaceSpec() == ContractType.MAYBE_ERC20)
{
type = ContractType.ERC20;
break;
}
continue;
case ERC20:
if (t.getInterfaceSpec() != ContractType.MAYBE_ERC20)
{
type = ContractType.ERC721;
}
break;
case ERC1155:
break;
case ERC721:
case ERC721_LEGACY:
Map<BigInteger, NFTAsset> NFTBalance = t.getTokenAssets();
t.balance = checkUint256Balance(wallet, tInfo.chainId, tInfo.address);
if (TextUtils.isEmpty(tInfo.name + tInfo.symbol)) tInfo = new TokenInfo(tInfo.address, "" "", "" "", tInfo.decimals, tInfo.isEnabled, tInfo.chainId);
t = new ERC721Token(tInfo, NFTBalance, t.balance, System.currentTimeMillis(), t.getNetworkName(), type);
t.lastTxTime = tokens[i].lastTxTime;
tokens[i] = t;
break;
case ERC721_TICKET:
List<BigInteger> balanceFromOpenSea = t.getArrayBalance();
t = new ERC721Ticket(t.tokenInfo, balanceFromOpenSea, System.currentTimeMillis(), t.getNetworkName(), ContractType.ERC721_TICKET);
tokens[i] = t;
break;
default:
type = ContractType.ERC721;
}

updateTokenType(t, wallet, type);
TokensService.setInterfaceSpec(t.tokenInfo.chainId, t.tokenInfo.address, type);
}
}

return tokens;
}).flatMap(this::checkTokenData);",0,0,0,0,0,0,1,0,0,16,5,50,0,0,0,0,3,2,1,0,1,0.5,0,0
7709_5,5,50,"for (int i = 0; i < tokens.length; i++)
{
Token t = tokens[i];
if (t.getInterfaceSpec() == ContractType.ERC721_UNDETERMINED || t.getInterfaceSpec() == ContractType.MAYBE_ERC20 || !t.checkBalanceType())
{
ContractType type = determineCommonType(t.tokenInfo).blockingGet();
TokenInfo tInfo = t.tokenInfo;
switch (type)
{
case OTHER:
if (t.getInterfaceSpec() == ContractType.MAYBE_ERC20)
{
type = ContractType.ERC20;
break;
}
continue;
case ERC20:
if (t.getInterfaceSpec() != ContractType.MAYBE_ERC20)
{
type = ContractType.ERC721;
}
break;
case ERC1155:
break;
case ERC721:
case ERC721_LEGACY:
Map<BigInteger, NFTAsset> NFTBalance = t.getTokenAssets();
t.balance = checkUint256Balance(wallet, tInfo.chainId, tInfo.address);
if (TextUtils.isEmpty(tInfo.name + tInfo.symbol)) tInfo = new TokenInfo(tInfo.address, "" "", "" "", tInfo.decimals, tInfo.isEnabled, tInfo.chainId);
t = new ERC721Token(tInfo, NFTBalance, t.balance, System.currentTimeMillis(), t.getNetworkName(), type);
t.lastTxTime = tokens[i].lastTxTime;
tokens[i] = t;
break;
case ERC721_TICKET:
List<BigInteger> balanceFromOpenSea = t.getArrayBalance();
t = new ERC721Ticket(t.tokenInfo, balanceFromOpenSea, System.currentTimeMillis(), t.getNetworkName(), ContractType.ERC721_TICKET);
tokens[i] = t;
break;
default:
type = ContractType.ERC721;
}

updateTokenType(t, wallet, type);
TokensService.setInterfaceSpec(t.tokenInfo.chainId, t.tokenInfo.address, type);
}
}",0,0,1,0,0,0,0,0,0,14,4,46,0,0,0,1,3,2,1,0,1,0.5,0,0
7709_7,7,7,Token t = tokens[i];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.24,24,9
7709_8,8,49,"if (t.getInterfaceSpec() == ContractType.ERC721_UNDETERMINED || t.getInterfaceSpec() == ContractType.MAYBE_ERC20 || !t.checkBalanceType())
{
ContractType type = determineCommonType(t.tokenInfo).blockingGet();
TokenInfo tInfo = t.tokenInfo;
switch (type)
{
case OTHER:
if (t.getInterfaceSpec() == ContractType.MAYBE_ERC20)
{
type = ContractType.ERC20;
break;
}
continue;
case ERC20:
if (t.getInterfaceSpec() != ContractType.MAYBE_ERC20)
{
type = ContractType.ERC721;
}
break;
case ERC1155:
break;
case ERC721:
case ERC721_LEGACY:
Map<BigInteger, NFTAsset> NFTBalance = t.getTokenAssets();
t.balance = checkUint256Balance(wallet, tInfo.chainId, tInfo.address);
if (TextUtils.isEmpty(tInfo.name + tInfo.symbol)) tInfo = new TokenInfo(tInfo.address, "" "", "" "", tInfo.decimals, tInfo.isEnabled, tInfo.chainId);
t = new ERC721Token(tInfo, NFTBalance, t.balance, System.currentTimeMillis(), t.getNetworkName(), type);
t.lastTxTime = tokens[i].lastTxTime;
tokens[i] = t;
break;
case ERC721_TICKET:
List<BigInteger> balanceFromOpenSea = t.getArrayBalance();
t = new ERC721Ticket(t.tokenInfo, balanceFromOpenSea, System.currentTimeMillis(), t.getNetworkName(), ContractType.ERC721_TICKET);
tokens[i] = t;
break;
default:
type = ContractType.ERC721;
}

updateTokenType(t, wallet, type);
TokensService.setInterfaceSpec(t.tokenInfo.chainId, t.tokenInfo.address, type);
}",1,0,0,0,0,0,0,0,0,12,3,42,0,1,0,0,3,2,1,0,1,0.5,0,0
7709_10,10,10,ContractType type = determineCommonType(t.tokenInfo).blockingGet();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.3,21,7
7709_11,11,11,TokenInfo tInfo = t.tokenInfo;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,2,1,0,0,0.22,20,6
7709_15,15,19,"if (t.getInterfaceSpec() == ContractType.MAYBE_ERC20)
{
type = ContractType.ERC20;
break;
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,3,2,1,0,0,0.29,12,4
7709_18,18,18,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,1,0,0,0.23,13,4
7709_22,22,25,"if (t.getInterfaceSpec() != ContractType.MAYBE_ERC20)
{
type = ContractType.ERC721;
}",1,0,0,0,0,0,0,0,0,0,1,4,0,0,0,0,3,2,1,0,0,0.29,6,3
7709_26,26,26,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,1,0,0,0.23,5,2
7709_28,28,28,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,1,0,0,0.23,3,1
7709_31,31,31,"Map<BigInteger, NFTAsset> NFTBalance = t.getTokenAssets();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.58,0,0
7709_33,33,33,"if (TextUtils.isEmpty(tInfo.name + tInfo.symbol)) tInfo = new TokenInfo(tInfo.address, "" "", "" "", tInfo.decimals, tInfo.isEnabled, tInfo.chainId);",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,0,0.32,1,0
7709_37,37,37,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,1,0,0,0.23,5,1
7709_39,39,39,List<BigInteger> balanceFromOpenSea = t.getArrayBalance();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.56,7,2
7709_42,42,42,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,2,1,0,0,0.23,10,3
7709_52,52,52,return tokens;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,2,1,0,0,0.22,20,4
7710_1,1,2,"@Override
public Single<Token[]> checkInterface(Token[] tokens, Wallet wallet)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,1,0,1,0.35,30,12
7710_4,4,53,"return Single.fromCallable(() -> {
for (int i = 0; i < tokens.length; i++)
{
Token t = tokens[i];
if (t.getInterfaceSpec() == ContractType.ERC721_UNDETERMINED || t.getInterfaceSpec() == ContractType.MAYBE_ERC20 || !t.checkBalanceType())
{
ContractType type = determineCommonType(t.tokenInfo).blockingGet();
TokenInfo tInfo = t.tokenInfo;
switch (type)
{
case OTHER:
if (t.getInterfaceSpec() == ContractType.MAYBE_ERC20)
{
type = ContractType.ERC20;
break;
}
continue;
case ERC20:
if (t.getInterfaceSpec() != ContractType.MAYBE_ERC20)
{
type = ContractType.ERC721;
}
break;
case ERC1155:
break;
case ERC721:
case ERC721_LEGACY:
Map<BigInteger, NFTAsset> NFTBalance = t.getTokenAssets();
t.balance = checkUint256Balance(wallet, tInfo.chainId, tInfo.address);
if (TextUtils.isEmpty(tInfo.name + tInfo.symbol)) tInfo = new TokenInfo(tInfo.address, "" "", "" "", tInfo.decimals, tInfo.isEnabled, tInfo.chainId);
t = new ERC721Token(tInfo, NFTBalance, t.balance, System.currentTimeMillis(), t.getNetworkName(), type);
t.lastTxTime = tokens[i].lastTxTime;
tokens[i] = t;
break;
case ERC721_TICKET:
List<BigInteger> balanceFromOpenSea = t.getArrayBalance();
t = new ERC721Ticket(t.tokenInfo, balanceFromOpenSea, System.currentTimeMillis(), t.getNetworkName(), ContractType.ERC721_TICKET);
tokens[i] = t;
break;
default:
type = ContractType.ERC721;
}

updateTokenType(t, wallet, type);
TokensService.setInterfaceSpec(t.tokenInfo.chainId, t.tokenInfo.address, type);
}
}

return tokens;
}).flatMap(this::checkTokenData);",0,0,0,0,0,0,1,0,0,16,5,50,0,0,0,0,4,2,1,0,4,0.71,0,0
7710_5,5,50,"for (int i = 0; i < tokens.length; i++)
{
Token t = tokens[i];
if (t.getInterfaceSpec() == ContractType.ERC721_UNDETERMINED || t.getInterfaceSpec() == ContractType.MAYBE_ERC20 || !t.checkBalanceType())
{
ContractType type = determineCommonType(t.tokenInfo).blockingGet();
TokenInfo tInfo = t.tokenInfo;
switch (type)
{
case OTHER:
if (t.getInterfaceSpec() == ContractType.MAYBE_ERC20)
{
type = ContractType.ERC20;
break;
}
continue;
case ERC20:
if (t.getInterfaceSpec() != ContractType.MAYBE_ERC20)
{
type = ContractType.ERC721;
}
break;
case ERC1155:
break;
case ERC721:
case ERC721_LEGACY:
Map<BigInteger, NFTAsset> NFTBalance = t.getTokenAssets();
t.balance = checkUint256Balance(wallet, tInfo.chainId, tInfo.address);
if (TextUtils.isEmpty(tInfo.name + tInfo.symbol)) tInfo = new TokenInfo(tInfo.address, "" "", "" "", tInfo.decimals, tInfo.isEnabled, tInfo.chainId);
t = new ERC721Token(tInfo, NFTBalance, t.balance, System.currentTimeMillis(), t.getNetworkName(), type);
t.lastTxTime = tokens[i].lastTxTime;
tokens[i] = t;
break;
case ERC721_TICKET:
List<BigInteger> balanceFromOpenSea = t.getArrayBalance();
t = new ERC721Ticket(t.tokenInfo, balanceFromOpenSea, System.currentTimeMillis(), t.getNetworkName(), ContractType.ERC721_TICKET);
tokens[i] = t;
break;
default:
type = ContractType.ERC721;
}

updateTokenType(t, wallet, type);
TokensService.setInterfaceSpec(t.tokenInfo.chainId, t.tokenInfo.address, type);
}
}",0,0,1,0,0,0,0,0,0,14,4,46,0,0,0,1,4,2,1,0,4,0.71,0,0
7710_7,7,7,Token t = tokens[i];,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.24,25,9
7710_8,8,49,"if (t.getInterfaceSpec() == ContractType.ERC721_UNDETERMINED || t.getInterfaceSpec() == ContractType.MAYBE_ERC20 || !t.checkBalanceType())
{
ContractType type = determineCommonType(t.tokenInfo).blockingGet();
TokenInfo tInfo = t.tokenInfo;
switch (type)
{
case OTHER:
if (t.getInterfaceSpec() == ContractType.MAYBE_ERC20)
{
type = ContractType.ERC20;
break;
}
continue;
case ERC20:
if (t.getInterfaceSpec() != ContractType.MAYBE_ERC20)
{
type = ContractType.ERC721;
}
break;
case ERC1155:
break;
case ERC721:
case ERC721_LEGACY:
Map<BigInteger, NFTAsset> NFTBalance = t.getTokenAssets();
t.balance = checkUint256Balance(wallet, tInfo.chainId, tInfo.address);
if (TextUtils.isEmpty(tInfo.name + tInfo.symbol)) tInfo = new TokenInfo(tInfo.address, "" "", "" "", tInfo.decimals, tInfo.isEnabled, tInfo.chainId);
t = new ERC721Token(tInfo, NFTBalance, t.balance, System.currentTimeMillis(), t.getNetworkName(), type);
t.lastTxTime = tokens[i].lastTxTime;
tokens[i] = t;
break;
case ERC721_TICKET:
List<BigInteger> balanceFromOpenSea = t.getArrayBalance();
t = new ERC721Ticket(t.tokenInfo, balanceFromOpenSea, System.currentTimeMillis(), t.getNetworkName(), ContractType.ERC721_TICKET);
tokens[i] = t;
break;
default:
type = ContractType.ERC721;
}

updateTokenType(t, wallet, type);
TokensService.setInterfaceSpec(t.tokenInfo.chainId, t.tokenInfo.address, type);
}",1,0,0,0,0,0,0,0,0,12,3,42,0,1,0,0,4,2,1,0,4,0.71,0,0
7710_10,10,10,ContractType type = determineCommonType(t.tokenInfo).blockingGet();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,2,0.64,22,7
7710_11,11,11,TokenInfo tInfo = t.tokenInfo;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,1,0,0,0.26,21,6
7710_15,15,19,"if (t.getInterfaceSpec() == ContractType.MAYBE_ERC20)
{
type = ContractType.ERC20;
break;
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,4,2,1,0,2,0.68,13,4
7710_18,18,18,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,2,1,0,0,0.25,14,4
7710_22,22,25,"if (t.getInterfaceSpec() != ContractType.MAYBE_ERC20)
{
type = ContractType.ERC721;
}",1,0,0,0,0,0,0,0,0,0,1,4,0,0,0,0,4,2,1,0,2,0.69,7,3
7710_26,26,26,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,2,1,0,0,0.25,6,2
7710_28,28,28,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,2,1,0,0,0.25,4,1
7710_31,31,31,"Map<BigInteger, NFTAsset> NFTBalance = t.getTokenAssets();",0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.69,1,0
7710_33,33,33,"if (TextUtils.isEmpty(tInfo.name + tInfo.symbol)) tInfo = new TokenInfo(tInfo.address, "" "", "" "", tInfo.decimals, tInfo.isEnabled, tInfo.chainId);",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,1,0,0,0.4,0,0
7710_37,37,37,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,2,1,0,0,0.25,4,1
7710_39,39,39,List<BigInteger> balanceFromOpenSea = t.getArrayBalance();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,1,0,2,0.73,6,2
7710_42,42,42,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,2,1,0,0,0.25,9,3
7710_52,52,52,return tokens;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,1,0,0,0.22,19,4
7711_1,1,2,"    @Override
public TokenCardMeta[] fetchTokenMetasForUpdate(Wallet wallet, List<Long> networkFilters)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,2,0.54,2,1
7711_4,4,4,if (networkFilters == null) networkFilters = Collections.emptyList();,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.81,0,0
7711_5,5,5,"return localSource.fetchTokenMetasForUpdate(wallet, networkFilters);",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.69,0,0
7712_1,1,3,"    @Override
public Single<TokenCardMeta[]> fetchTokenMetas(Wallet wallet, List<Long> networkFilters,
AssetDefinitionService svs)",0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,4,3,0,0,2,0.52,2,1
7712_5,5,5,if (networkFilters == null) networkFilters = Collections.emptyList();,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.81,0,0
7712_6,6,7,"return localSource
.fetchTokenMetas(wallet, networkFilters, svs);",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,4,3,0,0,3,0.68,0,0
7713_1,1,2,"    @Override
public Single<TokenCardMeta[]> fetchAllTokenMetas(Wallet wallet, List<Long> networkFilters, String searchTerm) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,2,0.54,1,1
7713_3,3,3,if (networkFilters == null) networkFilters = Collections.emptyList();,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.81,0,0
7713_4,4,5,"return localSource
.fetchAllTokenMetas(wallet, networkFilters, searchTerm);",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,4,3,0,0,3,0.7,0,0
7714_1,1,2,"    @Override
public Single<Token[]> fetchTokensThatMayNeedUpdating(String walletAddress, List<Long> networkFilters) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,2,0.52,1,1
7714_3,3,3,if (networkFilters == null) networkFilters = Collections.emptyList();,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.81,0,0
7714_4,4,5,"return localSource
.fetchAllTokensWithNameIssue(walletAddress, networkFilters);",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,4,3,0,0,3,0.69,0,0
7715_1,1,2,"    @Override
public Single<ContractAddress[]> fetchAllTokensWithBlankName(String walletAddress, List<Long> networkFilters) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,2,0.53,1,1
7715_3,3,3,if (networkFilters == null) networkFilters = Collections.emptyList();,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,3,0.81,0,0
7715_4,4,5,"return localSource
.fetchAllTokensWithBlankName(walletAddress, networkFilters);",0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,4,3,0,0,3,0.7,0,0
7716_1,1,1,"private Single<BigDecimal> updateBalance(final Wallet wallet, final Token token)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,2,0.56,21,6
7716_3,3,57,"return Single.fromCallable(() -> {
BigDecimal balance = BigDecimal.valueOf(-1);
try
{
List<BigInteger> balanceArray = null;

switch (token.getInterfaceSpec())
{
case ETHEREUM:
balance = getEthBalance(wallet, token.tokenInfo.chainId);
break;
case ERC875:
case ERC875_LEGACY:
balanceArray = getBalanceArray875(wallet, token.tokenInfo.chainId, token.getAddress());
balance = BigDecimal.valueOf(balanceArray.size());
break;
case ERC721_LEGACY:
case ERC721:
case ERC20:
case DYNAMIC_CONTRACT:
balance = checkUint256Balance(wallet, token.tokenInfo.chainId, token.getAddress());
break;
case MAYBE_ERC20:
balance = wrappedCheckUint256Balance(wallet, token.tokenInfo, token);
break;
case ERC1155:
balance = token.updateBalance(getRealmInstance(wallet));
break;
case ERC721_TICKET:
balanceArray = getBalanceArray721Ticket(wallet, token.tokenInfo.chainId, token.getAddress());
balance = BigDecimal.valueOf(balanceArray.size());
break;
case NOT_SET:
case OTHER:
break;
default:
break;
}

if (!balance.equals(BigDecimal.valueOf(-1)) || balanceArray != null)
{
localSource.updateTokenBalance(wallet, token, balance, balanceArray);
}
else
{
balance = token.balance;
}
}
catch (Exception e)
{
if (LOG_CONTRACT_EXCEPTION_EVENTS) e.printStackTrace();
}

return balance;
});",0,0,0,0,0,0,1,0,0,14,3,55,0,0,0,0,6,4,1,0,3,0.64,0,0
7716_4,4,4,BigDecimal balance = BigDecimal.valueOf(-1);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,4,1,0,1,0.46,18,4
7716_5,5,54,"try
{
List<BigInteger> balanceArray = null;

switch (token.getInterfaceSpec())
{
case ETHEREUM:
balance = getEthBalance(wallet, token.tokenInfo.chainId);
break;
case ERC875:
case ERC875_LEGACY:
balanceArray = getBalanceArray875(wallet, token.tokenInfo.chainId, token.getAddress());
balance = BigDecimal.valueOf(balanceArray.size());
break;
case ERC721_LEGACY:
case ERC721:
case ERC20:
case DYNAMIC_CONTRACT:
balance = checkUint256Balance(wallet, token.tokenInfo.chainId, token.getAddress());
break;
case MAYBE_ERC20:
balance = wrappedCheckUint256Balance(wallet, token.tokenInfo, token);
break;
case ERC1155:
balance = token.updateBalance(getRealmInstance(wallet));
break;
case ERC721_TICKET:
balanceArray = getBalanceArray721Ticket(wallet, token.tokenInfo.chainId, token.getAddress());
balance = BigDecimal.valueOf(balanceArray.size());
break;
case NOT_SET:
case OTHER:
break;
default:
break;
}

if (!balance.equals(BigDecimal.valueOf(-1)) || balanceArray != null)
{
localSource.updateTokenBalance(wallet, token, balance, balanceArray);
}
else
{
balance = token.balance;
}
}
catch (Exception e)
{
if (LOG_CONTRACT_EXCEPTION_EVENTS) e.printStackTrace();
}",0,0,0,0,1,0,0,0,0,11,2,50,1,1,0,1,6,4,1,0,3,0.64,0,0
7716_7,7,7,List<BigInteger> balanceArray = null;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,1,0,1,0.47,15,2
7716_13,13,13,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,4,1,0,0,0.23,9,1
7716_18,18,18,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,4,1,0,0,0.23,4,0
7716_24,24,24,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,4,1,0,0,0.23,1,0
7716_27,27,27,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,4,1,0,0,0.23,4,1
7716_30,30,30,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,4,1,0,0,0.23,7,2
7716_34,34,34,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,4,1,0,0,0.23,11,3
7716_37,37,37,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,4,1,0,0,0.23,14,4
7716_39,39,39,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,4,1,0,0,0.23,16,5
7716_42,42,49,"if (!balance.equals(BigDecimal.valueOf(-1)) || balanceArray != null)
{
localSource.updateTokenBalance(wallet, token, balance, balanceArray);
}
else
{
balance = token.balance;
}",1,0,0,0,0,0,0,0,0,0,1,8,0,0,1,0,6,4,1,0,2,0.62,19,6
7716_53,53,53,if (LOG_CONTRACT_EXCEPTION_EVENTS) e.printStackTrace();,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.4,30,7
7716_56,56,56,return balance;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,4,1,0,1,0.56,33,8
7717_1,1,1,"private Single<Token[]> updateBalances(Wallet wallet, Token[] tokens)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,2,0.73,4,2
7717_3,3,9,"return Single.fromCallable(() -> {
for (Token t : tokens)
{
if (t.isERC721() || t.isERC20()) t.balance = checkUint256Balance(wallet, t.tokenInfo.chainId, t.getAddress());
}
return tokens;
});",0,0,0,0,0,0,1,0,0,3,2,7,0,0,0,0,3,2,1,0,3,0.78,0,0
7717_4,4,7,"for (Token t : tokens)
{
if (t.isERC721() || t.isERC20()) t.balance = checkUint256Balance(wallet, t.tokenInfo.chainId, t.getAddress());
}",0,0,0,1,0,0,0,0,0,1,1,4,0,0,0,0,3,2,1,0,3,0.82,0,0
7717_6,6,6,"if (t.isERC721() || t.isERC20()) t.balance = checkUint256Balance(wallet, t.tokenInfo.chainId, t.getAddress());",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,2,1,0,3,0.77,0,0
7717_8,8,8,return tokens;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,3,2,1,0,1,0.53,2,1
7718_1,1,1,"private BigDecimal wrappedCheckUint256Balance(@NonNull Wallet wallet, @NonNull TokenInfo tokenInfo, @Nullable Token token)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,4,0.79,17,10
7718_3,3,3,BigDecimal balance = BigDecimal.ZERO;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.31,15,9
7718_4,4,41,"try
{
Function function = balanceOf(wallet.address);
NetworkInfo network = ethereumNetworkRepository.getNetworkByChain(tokenInfo.chainId);
String responseValue = callSmartContractFunction(function, tokenInfo.address, network, wallet);

if (token != null && TextUtils.isEmpty(responseValue))
{
balance = token.balance;
}
else
{
List<Type> response = FunctionReturnDecoder.decode(responseValue, function.getOutputParameters());
if (response.size() > 0) balance = new BigDecimal(((Uint256) response.get(0)).getValue());

if (token != null && tokenInfo.decimals == 18 && balance.compareTo(BigDecimal.ZERO) > 0 && balance.compareTo(BigDecimal.valueOf(10)) < 0)
{
List<BigInteger> testBalance = getBalanceArray721Ticket(wallet, tokenInfo);
if (testBalance != null && testBalance.size() > 0)
{
addToken(wallet, tokenInfo, ContractType.ERC721_TICKET)
.subscribe(this::updateInService).isDisposed();
balance = token.balance;
}
}
else if (token != null && balance.equals(BigDecimal.valueOf(32)) && responseValue.length() > 66)
{
determineCommonType(tokenInfo)
.flatMap(tType -> addToken(wallet, tokenInfo, tType))
.subscribe(this::updateInService).isDisposed();
balance = token.balance;
}
}
}
catch (Exception e)
{
if (token != null) balance = token.balance;
}",0,0,0,0,1,0,0,0,0,21,4,38,0,1,0,1,5,5,0,0,2,0.55,0,0
7718_6,6,6,Function function = balanceOf(wallet.address);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.27,12,7
7718_7,7,7,NetworkInfo network = ethereumNetworkRepository.getNetworkByChain(tokenInfo.chainId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.37,11,6
7718_8,8,8,"String responseValue = callSmartContractFunction(function, tokenInfo.address, network, wallet);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,5,5,0,0,1,0.41,10,5
7718_10,10,36,"if (token != null && TextUtils.isEmpty(responseValue))
{
balance = token.balance;
}
else
{
List<Type> response = FunctionReturnDecoder.decode(responseValue, function.getOutputParameters());
if (response.size() > 0) balance = new BigDecimal(((Uint256) response.get(0)).getValue());

if (token != null && tokenInfo.decimals == 18 && balance.compareTo(BigDecimal.ZERO) > 0 && balance.compareTo(BigDecimal.valueOf(10)) < 0)
{
List<BigInteger> testBalance = getBalanceArray721Ticket(wallet, tokenInfo);
if (testBalance != null && testBalance.size() > 0)
{
addToken(wallet, tokenInfo, ContractType.ERC721_TICKET)
.subscribe(this::updateInService).isDisposed();
balance = token.balance;
}
}
else if (token != null && balance.equals(BigDecimal.valueOf(32)) && responseValue.length() > 66)
{
determineCommonType(tokenInfo)
.flatMap(tType -> addToken(wallet, tokenInfo, tType))
.subscribe(this::updateInService).isDisposed();
balance = token.balance;
}
}",1,0,0,0,0,0,0,0,0,15,3,27,0,0,1,0,5,5,0,0,2,0.56,0,0
7718_12,12,12,balance = token.balance;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.45,6,3
7718_14,14,15,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,0,0,0,0.23,3,2
7718_16,16,16,"List<Type> response = FunctionReturnDecoder.decode(responseValue, function.getOutputParameters());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,0,0.38,2,1
7718_17,17,17,if (response.size() > 0) balance = new BigDecimal(((Uint256) response.get(0)).getValue());,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,5,5,0,0,0,0.3,1,0
7718_19,19,35,"if (token != null && tokenInfo.decimals == 18 && balance.compareTo(BigDecimal.ZERO) > 0 && balance.compareTo(BigDecimal.valueOf(10)) < 0)
{
List<BigInteger> testBalance = getBalanceArray721Ticket(wallet, tokenInfo);
if (testBalance != null && testBalance.size() > 0)
{
addToken(wallet, tokenInfo, ContractType.ERC721_TICKET)
.subscribe(this::updateInService).isDisposed();
balance = token.balance;
}
}
else if (token != null && balance.equals(BigDecimal.valueOf(32)) && responseValue.length() > 66)
{
determineCommonType(tokenInfo)
.flatMap(tType -> addToken(wallet, tokenInfo, tType))
.subscribe(this::updateInService).isDisposed();
balance = token.balance;
}",1,0,0,0,0,0,0,0,0,10,2,17,0,0,1,0,5,5,0,0,2,0.57,0,0
7718_21,21,21,"List<BigInteger> testBalance = getBalanceArray721Ticket(wallet, tokenInfo);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,5,0,0,1,0.42,2,1
7718_22,22,27,"if (testBalance != null && testBalance.size() > 0)
{
addToken(wallet, tokenInfo, ContractType.ERC721_TICKET)
.subscribe(this::updateInService).isDisposed();
balance = token.balance;
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,0,5,5,0,0,2,0.57,3,1
7718_24,24,24,"addToken(wallet, tokenInfo, ContractType.ERC721_TICKET)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.52,5,3
7718_25,25,25,.subscribe(this::updateInService).isDisposed();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.35,6,3
7718_26,26,26,balance = token.balance;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.45,7,4
7718_29,29,29,else if (token != null && balance.equals(BigDecimal.valueOf(32)) && responseValue.length() > 66),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.52,10,6
7718_31,31,31,determineCommonType(tokenInfo),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.5,12,7
7718_32,32,32,".flatMap(tType -> addToken(wallet, tokenInfo, tType))",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.48,13,7
7718_33,33,33,.subscribe(this::updateInService).isDisposed();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.35,14,8
7718_34,34,34,balance = token.balance;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,1,0.45,15,9
7718_38,38,38,catch (Exception e),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,0,0.28,19,11
7718_40,40,40,if (token != null) balance = token.balance;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,5,0,0,2,0.63,21,12
7718_43,43,43,return balance;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,5,5,0,0,0,0.33,24,13
7719_1,1,1,"private BigDecimal wrappedCheckUint256Balance(@NonNull Wallet wallet, @NonNull TokenInfo tokenInfo, @Nullable Token token)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.52,31,19
7719_3,3,3,BigDecimal balance = BigDecimal.ZERO;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,0,0.3,29,18
7719_4,4,41,"try
{
Function function = balanceOf(wallet.address);
NetworkInfo network = ethereumNetworkRepository.getNetworkByChain(tokenInfo.chainId);
String responseValue = callSmartContractFunction(function, tokenInfo.address, network, wallet);

if (token != null && TextUtils.isEmpty(responseValue))
{
balance = token.balance;
}
else
{
List<Type> response = FunctionReturnDecoder.decode(responseValue, function.getOutputParameters());
if (response.size() > 0) balance = new BigDecimal(((Uint256) response.get(0)).getValue());

if (token != null && tokenInfo.decimals == 18 && balance.compareTo(BigDecimal.ZERO) > 0 && balance.compareTo(BigDecimal.valueOf(10)) < 0)
{
List<BigInteger> testBalance = getBalanceArray721Ticket(wallet, tokenInfo);
if (testBalance != null && testBalance.size() > 0)
{
addToken(wallet, tokenInfo, ContractType.ERC721_TICKET)
.subscribe(this::updateInService).isDisposed();
balance = token.balance;
}
}
else if (token != null && balance.equals(BigDecimal.valueOf(32)) && responseValue.length() > 66)
{
determineCommonType(tokenInfo)
.flatMap(tType -> addToken(wallet, tokenInfo, tType))
.subscribe(this::updateInService).isDisposed();
balance = token.balance;
}
}
}
catch (Exception e)
{
if (token != null) balance = token.balance;
}",0,0,0,0,1,0,0,0,0,21,4,38,0,1,0,1,3,3,0,0,2,0.59,0,0
7719_6,6,6,Function function = balanceOf(wallet.address);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.21,26,16
7719_7,7,7,NetworkInfo network = ethereumNetworkRepository.getNetworkByChain(tokenInfo.chainId);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.44,25,15
7719_8,8,8,"String responseValue = callSmartContractFunction(function, tokenInfo.address, network, wallet);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,3,3,0,0,1,0.45,24,14
7719_10,10,36,"if (token != null && TextUtils.isEmpty(responseValue))
{
balance = token.balance;
}
else
{
List<Type> response = FunctionReturnDecoder.decode(responseValue, function.getOutputParameters());
if (response.size() > 0) balance = new BigDecimal(((Uint256) response.get(0)).getValue());

if (token != null && tokenInfo.decimals == 18 && balance.compareTo(BigDecimal.ZERO) > 0 && balance.compareTo(BigDecimal.valueOf(10)) < 0)
{
List<BigInteger> testBalance = getBalanceArray721Ticket(wallet, tokenInfo);
if (testBalance != null && testBalance.size() > 0)
{
addToken(wallet, tokenInfo, ContractType.ERC721_TICKET)
.subscribe(this::updateInService).isDisposed();
balance = token.balance;
}
}
else if (token != null && balance.equals(BigDecimal.valueOf(32)) && responseValue.length() > 66)
{
determineCommonType(tokenInfo)
.flatMap(tType -> addToken(wallet, tokenInfo, tType))
.subscribe(this::updateInService).isDisposed();
balance = token.balance;
}
}",1,0,0,0,0,0,0,0,0,15,3,27,0,0,1,0,3,3,0,0,2,0.59,0,0
7719_12,12,12,balance = token.balance;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.51,20,12
7719_14,14,15,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,3,3,0,0,0,0.15,17,11
7719_16,16,16,"List<Type> response = FunctionReturnDecoder.decode(responseValue, function.getOutputParameters());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.41,16,10
7719_17,17,17,if (response.size() > 0) balance = new BigDecimal(((Uint256) response.get(0)).getValue());,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,0,0,0,0.25,15,9
7719_19,19,35,"if (token != null && tokenInfo.decimals == 18 && balance.compareTo(BigDecimal.ZERO) > 0 && balance.compareTo(BigDecimal.valueOf(10)) < 0)
{
List<BigInteger> testBalance = getBalanceArray721Ticket(wallet, tokenInfo);
if (testBalance != null && testBalance.size() > 0)
{
addToken(wallet, tokenInfo, ContractType.ERC721_TICKET)
.subscribe(this::updateInService).isDisposed();
balance = token.balance;
}
}
else if (token != null && balance.equals(BigDecimal.valueOf(32)) && responseValue.length() > 66)
{
determineCommonType(tokenInfo)
.flatMap(tType -> addToken(wallet, tokenInfo, tType))
.subscribe(this::updateInService).isDisposed();
balance = token.balance;
}",1,0,0,0,0,0,0,0,0,10,2,17,0,0,1,0,3,3,0,0,2,0.61,0,0
7719_21,21,21,"List<BigInteger> testBalance = getBalanceArray721Ticket(wallet, tokenInfo);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,3,3,0,0,1,0.42,11,7
7719_22,22,27,"if (testBalance != null && testBalance.size() > 0)
{
addToken(wallet, tokenInfo, ContractType.ERC721_TICKET)
.subscribe(this::updateInService).isDisposed();
balance = token.balance;
}",1,0,0,0,0,0,0,0,0,3,1,6,0,1,0,0,3,3,0,0,2,0.61,5,3
7719_24,24,24,"addToken(wallet, tokenInfo, ContractType.ERC721_TICKET)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.71,8,5
7719_25,25,25,.subscribe(this::updateInService).isDisposed();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.36,7,4
7719_26,26,26,balance = token.balance;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.51,6,3
7719_29,29,29,else if (token != null && balance.equals(BigDecimal.valueOf(32)) && responseValue.length() > 66),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.46,3,2
7719_31,31,31,determineCommonType(tokenInfo),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.66,1,1
7719_32,32,32,".flatMap(tType -> addToken(wallet, tokenInfo, tType))",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,2,0.7,0,0
7719_33,33,33,.subscribe(this::updateInService).isDisposed();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.36,0,0
7719_34,34,34,balance = token.balance;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.51,1,0
7719_38,38,38,catch (Exception e),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0.2,5,2
7719_40,40,40,if (token != null) balance = token.balance;,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,1,0.54,7,3
7719_43,43,43,return balance;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,3,3,0,0,0,0.16,10,4
737_1,1,1,"public Single<Wallet[]> populateWalletData(Wallet[] wallets, KeyService keyService)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.24,18,7
737_3,3,66,"return Single.fromCallable(() -> {
List<Wallet> walletList;
try (Realm realm = realmManager.getWalletDataRealmInstance())
{
walletList = loadOrCreateKeyRealmDB(wallets);
for (Wallet wallet : walletList)
{
RealmWalletData data = realm.where(RealmWalletData.class)
.equalTo(""address"", wallet.address, Case.INSENSITIVE)
.findFirst();

composeWallet(wallet, data);
}

List<Wallet> oldWalletList = loadOrCreateKeyRealmDB(wallets);
if (keyService.detectWalletIssues(walletList))
{
for (Wallet w : walletList) storeKeyData(w);

for (Wallet o : oldWalletList)
{
boolean found = false;
for (Wallet w : walletList)
{
if (w.address.equalsIgnoreCase(o.address))
{
found = true;
break;
}
}

if (!found)
{
Wallet gone = deleteWallet(o).subscribeOn(Schedulers.io()).blockingGet();
System.out.println(""DELETED WALLET: "" + gone.address);
}
}
}

realm.executeTransaction(r -> {
RealmResults<RealmWalletData> items = r.where(RealmWalletData.class).findAll();
for (RealmWalletData rwd : items)
{
boolean found = false;
for (Wallet w : walletList)
{
if (rwd.getAddress().equalsIgnoreCase(w.address))
{
found = true;
break;
}
}

if (!found)
{
rwd.deleteFromRealm();
}
}
});
}

if (BuildConfig.DEBUG) Log.d(""RealmDebug"", ""populate "" + walletList.size());
return walletList.toArray(new Wallet[0]);
});",0,0,0,0,0,0,1,0,0,23,6,64,0,0,0,0,2,2,0,0,0,0.3,0,0
737_4,4,4,List<Wallet> walletList;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.06,15,5
737_5,5,62,"try (Realm realm = realmManager.getWalletDataRealmInstance())
{
walletList = loadOrCreateKeyRealmDB(wallets);
for (Wallet wallet : walletList)
{
RealmWalletData data = realm.where(RealmWalletData.class)
.equalTo(""address"", wallet.address, Case.INSENSITIVE)
.findFirst();

composeWallet(wallet, data);
}

List<Wallet> oldWalletList = loadOrCreateKeyRealmDB(wallets);
if (keyService.detectWalletIssues(walletList))
{
for (Wallet w : walletList) storeKeyData(w);

for (Wallet o : oldWalletList)
{
boolean found = false;
for (Wallet w : walletList)
{
if (w.address.equalsIgnoreCase(o.address))
{
found = true;
break;
}
}

if (!found)
{
Wallet gone = deleteWallet(o).subscribeOn(Schedulers.io()).blockingGet();
System.out.println(""DELETED WALLET: "" + gone.address);
}
}
}

realm.executeTransaction(r -> {
RealmResults<RealmWalletData> items = r.where(RealmWalletData.class).findAll();
for (RealmWalletData rwd : items)
{
boolean found = false;
for (Wallet w : walletList)
{
if (rwd.getAddress().equalsIgnoreCase(w.address))
{
found = true;
break;
}
}

if (!found)
{
rwd.deleteFromRealm();
}
}
});
}",0,0,0,0,1,0,0,0,0,19,5,58,0,1,0,1,2,2,0,0,0,0.29,0,0
737_8,8,15,"for (Wallet wallet : walletList)
{
RealmWalletData data = realm.where(RealmWalletData.class)
.equalTo(""address"", wallet.address, Case.INSENSITIVE)
.findFirst();

composeWallet(wallet, data);
}",0,0,0,1,0,0,0,0,0,1,1,8,0,0,0,1,2,2,0,0,0,0.24,4,2
737_10,10,12,"RealmWalletData data = realm.where(RealmWalletData.class)
.equalTo(""address"", wallet.address, Case.INSENSITIVE)
.findFirst();",0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,1,2,2,0,0,0,0.24,7,2
737_17,17,17,List<Wallet> oldWalletList = loadOrCreateKeyRealmDB(wallets);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.26,2,1
737_18,18,40,"if (keyService.detectWalletIssues(walletList))
{
for (Wallet w : walletList) storeKeyData(w);

for (Wallet o : oldWalletList)
{
boolean found = false;
for (Wallet w : walletList)
{
if (w.address.equalsIgnoreCase(o.address))
{
found = true;
break;
}
}

if (!found)
{
Wallet gone = deleteWallet(o).subscribeOn(Schedulers.io()).blockingGet();
System.out.println(""DELETED WALLET: "" + gone.address);
}
}
}",1,0,0,0,0,0,0,0,0,8,4,23,0,1,0,1,2,2,0,0,0,0.28,0,0
737_20,20,20,for (Wallet w : walletList) storeKeyData(w);,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.25,0,0
737_22,22,39,"for (Wallet o : oldWalletList)
{
boolean found = false;
for (Wallet w : walletList)
{
if (w.address.equalsIgnoreCase(o.address))
{
found = true;
break;
}
}

if (!found)
{
Wallet gone = deleteWallet(o).subscribeOn(Schedulers.io()).blockingGet();
System.out.println(""DELETED WALLET: "" + gone.address);
}
}",0,0,0,1,0,0,0,0,0,6,3,18,0,0,1,0,2,2,0,0,0,0.28,2,1
737_24,24,24,boolean found = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.29,4,2
737_25,25,32,"for (Wallet w : walletList)
{
if (w.address.equalsIgnoreCase(o.address))
{
found = true;
break;
}
}",0,0,0,1,0,0,0,0,0,2,2,8,0,1,0,1,2,2,0,0,0,0.22,5,2
737_27,27,31,"if (w.address.equalsIgnoreCase(o.address))
{
found = true;
break;
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,2,2,0,0,0,0.22,7,4
737_30,30,30,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,2,0,0,0,0.05,10,5
737_34,34,38,"if (!found)
{
Wallet gone = deleteWallet(o).subscribeOn(Schedulers.io()).blockingGet();
System.out.println(""DELETED WALLET: "" + gone.address);
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,1,0,2,2,0,0,0,0.29,14,6
737_36,36,36,Wallet gone = deleteWallet(o).subscribeOn(Schedulers.io()).blockingGet();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.3,16,7
737_43,43,43,RealmResults<RealmWalletData> items = r.where(RealmWalletData.class).findAll();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.26,23,8
737_44,44,60,"for (RealmWalletData rwd : items)
{
boolean found = false;
for (Wallet w : walletList)
{
if (rwd.getAddress().equalsIgnoreCase(w.address))
{
found = true;
break;
}
}

if (!found)
{
rwd.deleteFromRealm();
}
}",0,0,0,1,0,0,0,0,0,5,3,17,0,1,0,0,2,2,0,0,0,0.29,24,8
737_46,46,46,boolean found = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.29,26,10
737_47,47,54,"for (Wallet w : walletList)
{
if (rwd.getAddress().equalsIgnoreCase(w.address))
{
found = true;
break;
}
}",0,0,0,1,0,0,0,0,0,2,2,8,0,1,0,1,2,2,0,0,0,0.23,27,10
737_49,49,53,"if (rwd.getAddress().equalsIgnoreCase(w.address))
{
found = true;
break;
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,2,2,0,0,0,0.23,29,12
737_52,52,52,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,2,0,0,0,0.05,32,13
737_56,56,59,"if (!found)
{
rwd.deleteFromRealm();
}",1,0,0,0,0,0,0,0,0,0,1,4,0,0,1,0,2,2,0,0,0,0.3,36,14
737_64,64,64,"if (BuildConfig.DEBUG) Log.d(""RealmDebug"", ""populate "" + walletList.size());",1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,2,0,0,0,0.27,44,15
737_65,65,65,return walletList.toArray(new Wallet[0]);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.13,45,15
738_1,1,1,"public Single<Wallet[]> populateWalletData(Wallet[] wallets, KeyService keyService)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.38,34,14
738_3,3,66,"return Single.fromCallable(() -> {
List<Wallet> walletList;
try (Realm realm = realmManager.getWalletDataRealmInstance())
{
walletList = loadOrCreateKeyRealmDB(wallets);
for (Wallet wallet : walletList)
{
RealmWalletData data = realm.where(RealmWalletData.class)
.equalTo(""address"", wallet.address, Case.INSENSITIVE)
.findFirst();

composeWallet(wallet, data);
}

List<Wallet> oldWalletList = loadOrCreateKeyRealmDB(wallets);
if (keyService.detectWalletIssues(walletList))
{
for (Wallet w : walletList) storeKeyData(w);

for (Wallet o : oldWalletList)
{
boolean found = false;
for (Wallet w : walletList)
{
if (w.address.equalsIgnoreCase(o.address))
{
found = true;
break;
}
}

if (!found)
{
Wallet gone = deleteWallet(o).subscribeOn(Schedulers.io()).blockingGet();
System.out.println(""DELETED WALLET: "" + gone.address);
}
}
}

realm.executeTransaction(r -> {
RealmResults<RealmWalletData> items = r.where(RealmWalletData.class).findAll();
for (RealmWalletData rwd : items)
{
boolean found = false;
for (Wallet w : walletList)
{
if (rwd.getAddress().equalsIgnoreCase(w.address))
{
found = true;
break;
}
}

if (!found)
{
rwd.deleteFromRealm();
}
}
});
}

if (BuildConfig.DEBUG) Log.d(""RealmDebug"", ""populate "" + walletList.size());
return walletList.toArray(new Wallet[0]);
});",0,0,0,0,0,0,1,0,0,23,6,64,0,0,0,0,2,2,0,0,1,0.56,0,0
738_4,4,4,List<Wallet> walletList;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.29,31,12
738_5,5,62,"try (Realm realm = realmManager.getWalletDataRealmInstance())
{
walletList = loadOrCreateKeyRealmDB(wallets);
for (Wallet wallet : walletList)
{
RealmWalletData data = realm.where(RealmWalletData.class)
.equalTo(""address"", wallet.address, Case.INSENSITIVE)
.findFirst();

composeWallet(wallet, data);
}

List<Wallet> oldWalletList = loadOrCreateKeyRealmDB(wallets);
if (keyService.detectWalletIssues(walletList))
{
for (Wallet w : walletList) storeKeyData(w);

for (Wallet o : oldWalletList)
{
boolean found = false;
for (Wallet w : walletList)
{
if (w.address.equalsIgnoreCase(o.address))
{
found = true;
break;
}
}

if (!found)
{
Wallet gone = deleteWallet(o).subscribeOn(Schedulers.io()).blockingGet();
System.out.println(""DELETED WALLET: "" + gone.address);
}
}
}

realm.executeTransaction(r -> {
RealmResults<RealmWalletData> items = r.where(RealmWalletData.class).findAll();
for (RealmWalletData rwd : items)
{
boolean found = false;
for (Wallet w : walletList)
{
if (rwd.getAddress().equalsIgnoreCase(w.address))
{
found = true;
break;
}
}

if (!found)
{
rwd.deleteFromRealm();
}
}
});
}",0,0,0,0,1,0,0,0,0,19,5,58,0,1,0,1,2,2,0,0,1,0.56,0,0
738_8,8,15,"for (Wallet wallet : walletList)
{
RealmWalletData data = realm.where(RealmWalletData.class)
.equalTo(""address"", wallet.address, Case.INSENSITIVE)
.findFirst();

composeWallet(wallet, data);
}",0,0,0,1,0,0,0,0,0,1,1,8,0,0,0,1,2,2,0,0,1,0.56,20,9
738_10,10,12,"RealmWalletData data = realm.where(RealmWalletData.class)
.equalTo(""address"", wallet.address, Case.INSENSITIVE)
.findFirst();",0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,1,2,2,0,0,1,0.57,23,9
738_17,17,17,List<Wallet> oldWalletList = loadOrCreateKeyRealmDB(wallets);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,2,2,0,0,1,0.56,18,8
738_18,18,40,"if (keyService.detectWalletIssues(walletList))
{
for (Wallet w : walletList) storeKeyData(w);

for (Wallet o : oldWalletList)
{
boolean found = false;
for (Wallet w : walletList)
{
if (w.address.equalsIgnoreCase(o.address))
{
found = true;
break;
}
}

if (!found)
{
Wallet gone = deleteWallet(o).subscribeOn(Schedulers.io()).blockingGet();
System.out.println(""DELETED WALLET: "" + gone.address);
}
}
}",1,0,0,0,0,0,0,0,0,8,4,23,0,1,0,1,2,2,0,0,0,0.41,0,0
738_20,20,20,for (Wallet w : walletList) storeKeyData(w);,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,2,2,0,0,0,0.35,15,6
738_22,22,39,"for (Wallet o : oldWalletList)
{
boolean found = false;
for (Wallet w : walletList)
{
if (w.address.equalsIgnoreCase(o.address))
{
found = true;
break;
}
}

if (!found)
{
Wallet gone = deleteWallet(o).subscribeOn(Schedulers.io()).blockingGet();
System.out.println(""DELETED WALLET: "" + gone.address);
}
}",0,0,0,1,0,0,0,0,0,6,3,18,0,0,1,0,2,2,0,0,0,0.41,0,0
738_24,24,24,boolean found = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.2,11,4
738_25,25,32,"for (Wallet w : walletList)
{
if (w.address.equalsIgnoreCase(o.address))
{
found = true;
break;
}
}",0,0,0,1,0,0,0,0,0,2,2,8,0,1,0,1,2,2,0,0,0,0.3,3,1
738_27,27,31,"if (w.address.equalsIgnoreCase(o.address))
{
found = true;
break;
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,2,2,0,0,0,0.27,4,1
738_30,30,30,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,2,0,0,0,0.17,5,1
738_34,34,38,"if (!found)
{
Wallet gone = deleteWallet(o).subscribeOn(Schedulers.io()).blockingGet();
System.out.println(""DELETED WALLET: "" + gone.address);
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,1,0,2,2,0,0,0,0.43,0,0
738_36,36,36,Wallet gone = deleteWallet(o).subscribeOn(Schedulers.io()).blockingGet();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.43,0,0
738_43,43,43,RealmResults<RealmWalletData> items = r.where(RealmWalletData.class).findAll();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,1,0.58,7,1
738_44,44,60,"for (RealmWalletData rwd : items)
{
boolean found = false;
for (Wallet w : walletList)
{
if (rwd.getAddress().equalsIgnoreCase(w.address))
{
found = true;
break;
}
}

if (!found)
{
rwd.deleteFromRealm();
}
}",0,0,0,1,0,0,0,0,0,5,3,17,0,1,0,0,2,2,0,0,1,0.53,8,1
738_46,46,46,boolean found = false;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.2,10,3
738_47,47,54,"for (Wallet w : walletList)
{
if (rwd.getAddress().equalsIgnoreCase(w.address))
{
found = true;
break;
}
}",0,0,0,1,0,0,0,0,0,2,2,8,0,1,0,1,2,2,0,0,0,0.3,11,3
738_49,49,53,"if (rwd.getAddress().equalsIgnoreCase(w.address))
{
found = true;
break;
}",1,0,0,0,0,0,0,0,0,1,1,5,0,0,0,0,2,2,0,0,0,0.28,13,5
738_52,52,52,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,2,2,0,0,0,0.17,16,6
738_56,56,59,"if (!found)
{
rwd.deleteFromRealm();
}",1,0,0,0,0,0,0,0,0,0,1,4,0,0,1,0,2,2,0,0,1,0.65,20,7
738_64,64,64,"if (BuildConfig.DEBUG) Log.d(""RealmDebug"", ""populate "" + walletList.size());",1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,2,2,0,0,1,0.54,28,8
738_65,65,65,return walletList.toArray(new Wallet[0]);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,2,2,0,0,0,0.31,29,8
739_1,1,1,private List<Wallet> loadOrCreateKeyRealmDB(Wallet[] wallets),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,0,0,2,0.43,13,6
739_3,3,3,List<Wallet> walletList = new ArrayList<>();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,9,8,0,0,1,0.25,11,5
739_4,4,4,List<String> keyStoreList = walletArrayToAddressList(wallets);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,9,8,0,0,1,0.27,10,4
739_6,6,43,"try (Realm realmType = realmManager.getWalletTypeRealmInstance())
{
realmType.refresh();
RealmResults<RealmKeyType> realmKeyTypes = realmType.where(RealmKeyType.class)
.sort(""dateAdded"", Sort.ASCENDING)
.findAll();

if (realmKeyTypes.size() > 0)
{
for (RealmKeyType walletTypeData : realmKeyTypes)
{
Wallet w = composeKeyType(walletTypeData);
if (w == null || (w.type == WalletType.KEYSTORE || w.type == WalletType.KEYSTORE_LEGACY) &&
!keyStoreList.contains(walletTypeData.getAddress().toLowerCase()))
{
continue;
}

walletList.add(w);
}
}
else
{
realmType.executeTransaction(r -> {
for (Wallet wallet : wallets)
{
RealmKeyType realmKey = r.createObject(RealmKeyType.class, wallet.address);
wallet.authLevel = KeyService.AuthenticationLevel.TEE_NO_AUTHENTICATION;
wallet.type = WalletType.KEYSTORE_LEGACY;
realmKey.setType(wallet.type);
realmKey.setLastBackup(System.currentTimeMillis());
realmKey.setDateAdded(wallet.walletCreationTime);
realmKey.setAuthLevel(wallet.authLevel);
walletList.add(wallet);
}
});
}
}",0,0,0,0,1,0,0,0,0,20,4,38,0,0,1,1,9,8,0,0,6,0.69,0,0
739_8,8,8,realmType.refresh();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,0,0,1,0.53,6,2
739_9,9,11,"RealmResults<RealmKeyType> realmKeyTypes = realmType.where(RealmKeyType.class)
.sort(""dateAdded"", Sort.ASCENDING)
.findAll();",0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,1,9,8,0,0,1,0.52,3,1
739_13,13,42,"if (realmKeyTypes.size() > 0)
{
for (RealmKeyType walletTypeData : realmKeyTypes)
{
Wallet w = composeKeyType(walletTypeData);
if (w == null || (w.type == WalletType.KEYSTORE || w.type == WalletType.KEYSTORE_LEGACY) &&
!keyStoreList.contains(walletTypeData.getAddress().toLowerCase()))
{
continue;
}

walletList.add(w);
}
}
else
{
realmType.executeTransaction(r -> {
for (Wallet wallet : wallets)
{
RealmKeyType realmKey = r.createObject(RealmKeyType.class, wallet.address);
wallet.authLevel = KeyService.AuthenticationLevel.TEE_NO_AUTHENTICATION;
wallet.type = WalletType.KEYSTORE_LEGACY;
realmKey.setType(wallet.type);
realmKey.setLastBackup(System.currentTimeMillis());
realmKey.setDateAdded(wallet.walletCreationTime);
realmKey.setAuthLevel(wallet.authLevel);
walletList.add(wallet);
}
});
}",1,0,0,0,0,0,0,0,0,17,3,30,0,0,1,0,9,8,0,0,6,0.69,0,0
739_15,15,25,"for (RealmKeyType walletTypeData : realmKeyTypes)
{
Wallet w = composeKeyType(walletTypeData);
if (w == null || (w.type == WalletType.KEYSTORE || w.type == WalletType.KEYSTORE_LEGACY) &&
!keyStoreList.contains(walletTypeData.getAddress().toLowerCase()))
{
continue;
}

walletList.add(w);
}",0,0,0,1,0,0,0,0,0,5,2,11,0,0,0,0,9,8,0,0,3,0.58,0,0
739_17,17,17,Wallet w = composeKeyType(walletTypeData);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,8,0,0,3,0.56,2,1
739_18,18,22,"if (w == null || (w.type == WalletType.KEYSTORE || w.type == WalletType.KEYSTORE_LEGACY) &&
!keyStoreList.contains(walletTypeData.getAddress().toLowerCase()))
{
continue;
}",1,0,0,0,0,0,0,0,0,2,1,5,0,1,0,1,9,8,0,0,3,0.56,3,1
739_19,19,19,!keyStoreList.contains(walletTypeData.getAddress().toLowerCase())),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,0,0,3,0.49,4,2
739_21,21,21,continue;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,0,0,0,0.3,6,4
739_24,24,24,walletList.add(w);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,9,8,0,0,1,0.25,9,5
739_27,27,28,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,8,0,0,0,0.18,12,6
739_29,29,29,realmType.executeTransaction(r -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,9,8,0,0,1,0.47,14,7
739_30,30,40,"for (Wallet wallet : wallets)
{
RealmKeyType realmKey = r.createObject(RealmKeyType.class, wallet.address);
wallet.authLevel = KeyService.AuthenticationLevel.TEE_NO_AUTHENTICATION;
wallet.type = WalletType.KEYSTORE_LEGACY;
realmKey.setType(wallet.type);
realmKey.setLastBackup(System.currentTimeMillis());
realmKey.setDateAdded(wallet.walletCreationTime);
realmKey.setAuthLevel(wallet.authLevel);
walletList.add(wallet);
}",0,0,0,1,0,0,0,0,0,8,1,11,0,0,0,0,9,8,0,0,5,0.64,15,7
739_32,32,32,"RealmKeyType realmKey = r.createObject(RealmKeyType.class, wallet.address);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,9,8,0,0,2,0.45,17,9
739_33,33,33,wallet.authLevel = KeyService.AuthenticationLevel.TEE_NO_AUTHENTICATION;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,8,0,0,1,0.41,18,9
739_34,34,34,wallet.type = WalletType.KEYSTORE_LEGACY;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,8,0,0,2,0.63,19,10
739_35,35,35,realmKey.setType(wallet.type);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,8,0,0,2,0.52,20,11
739_36,36,36,realmKey.setLastBackup(System.currentTimeMillis());,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,8,0,0,2,0.57,21,12
739_37,37,37,realmKey.setDateAdded(wallet.walletCreationTime);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,8,0,0,3,0.54,22,13
739_38,38,38,realmKey.setAuthLevel(wallet.authLevel);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,8,0,0,1,0.41,23,14
739_39,39,39,walletList.add(wallet);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,9,8,0,0,1,0.21,24,15
739_45,45,45,"if (BuildConfig.DEBUG) Log.d(""RealmDebug"", ""loadorcreate "" + walletList.size());",1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,9,8,0,0,1,0.34,30,17
739_46,46,46,return walletList;,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,9,8,0,0,1,0.16,31,17
577_1,1,1,private void finishAndLaunchSend(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.19,3,1
577_3,3,21,"if (currentResult.getFunction().length() > 0)
{
Token token = viewModel.getToken(currentResult.chainId, currentResult.getAddress());
if (token == null)
{
showProgress(true);
viewModel.fetchToken(currentResult.chainId, currentResult.getAddress());
}
else
{
viewModel.showSend(this, currentResult, token);
finish();
}
}
else
{
viewModel.showSend(this, currentResult, viewModel.getToken(currentResult.chainId, viewModel.wallet().getValue().address));
finish();
}",1,0,0,0,0,0,0,0,0,10,2,19,0,0,0,0,2,2,0,0,1,0.47,0,0
577_5,5,5,"Token token = viewModel.getToken(currentResult.chainId, currentResult.getAddress());",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,2,2,0,0,1,0.52,0,0
577_6,6,15,"if (token == null)
{
showProgress(true);
viewModel.fetchToken(currentResult.chainId, currentResult.getAddress());
}
else
{
viewModel.showSend(this, currentResult, token);
finish();
}",1,0,0,0,0,0,0,0,0,5,1,10,1,1,0,0,2,2,0,0,1,0.47,1,0
577_8,8,8,showProgress(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.07,3,2
577_9,9,9,"viewModel.fetchToken(currentResult.chainId, currentResult.getAddress());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.47,4,2
577_11,11,12,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.08,6,4
577_13,13,13,"viewModel.showSend(this, currentResult, token);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.48,8,5
577_14,14,14,finish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.14,9,5
577_17,17,18,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0.08,12,7
577_19,19,19,"viewModel.showSend(this, currentResult, viewModel.getToken(currentResult.chainId, viewModel.wallet().getValue().address));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,1,0.45,14,8
577_20,20,20,finish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,0.14,15,8
578_1,1,1,private void finishAndLaunchSend(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.32,7,4
578_3,3,21,"if (currentResult.getFunction().length() > 0)
{
Token token = viewModel.getToken(currentResult.chainId, currentResult.getAddress());
if (token == null)
{
showProgress(true);
viewModel.fetchToken(currentResult.chainId, currentResult.getAddress());
}
else
{
viewModel.showSend(this, currentResult, token);
finish();
}
}
else
{
viewModel.showSend(this, currentResult, viewModel.getToken(currentResult.chainId, viewModel.wallet().getValue().address));
finish();
}",1,0,0,0,0,0,0,0,0,10,2,19,0,0,0,0,6,6,0,0,1,0.46,0,0
578_5,5,5,"Token token = viewModel.getToken(currentResult.chainId, currentResult.getAddress());",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,6,0,0,1,0.49,3,2
578_6,6,15,"if (token == null)
{
showProgress(true);
viewModel.fetchToken(currentResult.chainId, currentResult.getAddress());
}
else
{
viewModel.showSend(this, currentResult, token);
finish();
}",1,0,0,0,0,0,0,0,0,5,1,10,1,1,0,0,6,6,0,0,1,0.46,0,0
578_8,8,8,showProgress(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.24,0,0
578_9,9,9,"viewModel.fetchToken(currentResult.chainId, currentResult.getAddress());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.44,0,0
578_11,11,12,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,6,0,0,0,0.19,2,1
578_13,13,13,"viewModel.showSend(this, currentResult, token);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.48,4,2
578_14,14,14,finish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.21,5,2
578_17,17,18,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,6,0,0,0,0.19,8,4
578_19,19,19,"viewModel.showSend(this, currentResult, viewModel.getToken(currentResult.chainId, viewModel.wallet().getValue().address));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,1,0.44,10,5
578_20,20,20,finish();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,6,0,0,0,0.21,11,5
579_1,1,1,    private void userAddingZeroBalanceToken(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,4,0.78,1,0
579_3,3,3,aDialog = new AWalletAlertDialog(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.31,0,0
579_4,4,4,aDialog.setTitle(R.string.zero_balance_tokens_off);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,3,0.63,1,0
579_5,5,5,aDialog.setIcon(AWalletAlertDialog.WARNING);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,1,0.42,2,1
579_6,6,6,aDialog.setMessage(R.string.zero_balance_tokens_are_switched_off);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,4,0.7,3,2
579_7,7,7,aDialog.setButtonText(R.string.dialog_switch_zero_balance_tokens_on);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,4,0.69,4,3
579_8,8,8,aDialog.setButtonListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.37,5,4
579_9,9,9,aDialog.dismiss();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.4,6,5
579_10,10,10,viewModel.hideZeroBalanceTokens();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,3,0.66,7,6
579_11,11,11,inputAddressView.getAddress();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.32,8,7
579_13,13,13,aDialog.setSecondaryButtonText(R.string.action_cancel);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.38,10,9
579_14,14,14,aDialog.setSecondaryButtonListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.39,11,9
579_15,15,15,aDialog.dismiss();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.4,12,10
579_16,16,16,inputAddressView.getAddress();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.32,13,11
579_18,18,18,aDialog.show();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,5,0,0,0,0.29,15,13
449_1,1,2,"@Override
protected void onCreate(@Nullable Bundle savedInstanceState) {",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,2,1,0,0,0.41,40,31
449_3,3,3,AndroidInjection.inject(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.32,39,30
449_4,4,4,super.onCreate(savedInstanceState);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,1,0,0,0.41,38,29
449_6,6,6,setContentView(R.layout.activity_gas_settings);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,1,0.49,36,28
449_7,7,7,toolbar();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.49,35,27
449_8,8,8,setTitle(R.string.set_speed_title);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,1,0,0,0.42,34,26
449_10,10,10,gasSliderView = findViewById(R.id.gasSliderView);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,5,2,1,0,1,0.5,32,25
449_11,11,11,recyclerView = findViewById(R.id.list);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,2,1,0,0,0.33,31,24
449_12,12,12,gasWarning = findViewById(R.id.gas_warning_bubble);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,2,1,0,1,0.54,30,23
449_13,13,13,insufficientWarning = findViewById(R.id.insufficient_bubble);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,2,1,0,0,0.47,29,22
449_14,14,14,recyclerView.setLayoutManager(new LinearLayoutManager(this));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,1,0,0,0.44,28,21
449_16,16,16,"viewModel = new ViewModelProvider(this, viewModelFactory)",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,0,0.38,26,20
449_17,17,17,.get(GasSettingsViewModel.class);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,1,0,1,0.52,25,19
449_19,19,19,"minGasPrice = getIntent().getLongExtra(C.EXTRA_MIN_GAS_PRICE, -1);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,2,0.58,23,18
449_20,20,25,"if (minGasPrice > 0)
{
gasSliderView.setupResendSettings(minGasPrice);
FrameLayout resendNote = findViewById(R.id.layout_resend_note);
resendNote.setVisibility(View.VISIBLE);
}",1,0,0,0,0,0,0,0,0,3,1,6,0,0,0,1,5,2,1,0,2,0.58,17,14
449_22,22,22,gasSliderView.setupResendSettings(minGasPrice);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,2,0.64,20,16
449_23,23,23,FrameLayout resendNote = findViewById(R.id.layout_resend_note);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.41,19,15
449_24,24,24,resendNote.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,5,2,1,0,0,0.36,18,14
449_27,27,27,"currentGasSpeedIndex = getIntent().getIntExtra(C.EXTRA_SINGLE_ITEM, -1);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,5,2,1,0,1,0.47,15,13
449_28,28,28,"chainId = getIntent().getLongExtra(C.EXTRA_CHAIN_ID, MAINNET_ID);",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,2,1,0,0,0.32,14,12
449_29,29,29,customGasLimit = new BigDecimal(getIntent().getStringExtra(C.EXTRA_CUSTOM_GAS_LIMIT));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,2,1,0,1,0.51,13,11
449_30,30,30,presetGasLimit = new BigDecimal(getIntent().getStringExtra(C.EXTRA_GAS_LIMIT_PRESET));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,2,1,0,1,0.51,12,10
449_31,31,31,availableBalance = new BigDecimal(getIntent().getStringExtra(C.EXTRA_TOKEN_BALANCE));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,2,1,0,0,0.41,11,9
449_32,32,32,sendAmount = new BigDecimal(getIntent().getStringExtra(C.EXTRA_AMOUNT));,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,2,1,0,0,0.43,10,8
449_33,33,33,"gasSliderView.setNonce(getIntent().getLongExtra(C.EXTRA_NONCE, -1));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,5,2,1,0,1,0.47,9,7
449_34,34,34,gasSliderView.initGasLimit(customGasLimit.toBigInteger());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.59,8,6
449_35,35,35,customGasPriceFromWidget = new BigInteger(getIntent().getStringExtra(C.EXTRA_GAS_PRICE));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,1,0,2,0.57,7,5
449_37,37,37,gasSliderView.initGasPrice(customGasPriceFromWidget);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,2,0.68,5,4
449_38,38,38,adapter = new CustomAdapter(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.35,4,3
449_39,39,39,recyclerView.setAdapter(adapter);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.37,3,2
449_40,40,40,recyclerView.addItemDecoration(new ListDivider(this));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,0,0.4,2,1
449_41,41,41,gasSliderView.setCallback(this);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,5,2,1,0,1,0.51,1,0
449_43,43,43,setupGasSpeeds();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,5,2,1,0,1,0.63,0,0
449_44,44,44,startGasListener();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,3,0.9,1,0
449_45,45,45,gasWarningShown = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,2,1,0,1,0.51,2,1
450_1,1,2,"@Override
public void onBindViewHolder(CustomAdapter.CustomViewHolder holder, int p)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,0,0,1,0.47,37,23
450_4,4,4,BigDecimal useGasLimit = presetGasLimit;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.5,35,22
450_5,5,5,int position = holder.getAbsoluteAdapterPosition();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.45,34,21
450_6,6,6,GasSpeed gs = gasSpeeds.get(position);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,1,0.59,33,20
450_7,7,7,holder.speedName.setText(gs.speed);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,6,4,0,0,1,0.49,32,19
450_9,9,9,holder.speedName.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,6,4,0,0,1,0.44,30,18
450_10,10,10,holder.warning.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,6,4,0,0,0,0.35,29,17
450_12,12,12,holder.checkbox.setSelected(position == currentGasSpeedIndex);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,0,0,1,0.47,27,16
450_13,13,13,holder.itemLayout.setOnClickListener(v -> {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.35,26,15
450_14,14,22,"if (position == customIndex && currentGasSpeedIndex != customIndex)
{
gasSliderView.initGasLimit(customGasLimit.toBigInteger());
gasSliderView.reportPosition();
}
else if (position != customIndex && currentGasSpeedIndex == customIndex)
{
hideGasWarning();
}",1,0,0,0,0,0,0,0,0,4,1,9,0,0,0,0,6,4,0,0,2,0.61,17,10
450_16,16,16,gasSliderView.initGasLimit(customGasLimit.toBigInteger());,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.59,23,13
450_17,17,17,gasSliderView.reportPosition();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.46,22,12
450_19,19,19,else if (position != customIndex && currentGasSpeedIndex == customIndex),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,2,0.6,20,11
450_21,21,21,hideGasWarning();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.45,18,10
450_23,23,23,notifyItemChanged(currentGasSpeedIndex);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.51,16,9
450_24,24,24,currentGasSpeedIndex = position;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,1,0.54,15,8
450_25,25,25,notifyItemChanged(position);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.4,14,7
450_28,28,28,String speedGwei = BalanceUtils.weiToGweiBI(gs.gasPrice).toBigInteger().toString();,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,0,0,1,0.54,11,6
450_30,30,64,"if (position == customIndex)
{
if (gs.seconds == 0)
{
blankCustomHolder(holder);
setCustomGasDetails(position);
return;
}
else
{
gs.seconds = getExpectedTransactionTime(gs.gasPrice);
speedGwei = context.getString(R.string.bracketed, context.getString(R.string.set_your_speed));
useGasLimit = customGasLimit;
}

holder.speedName.setVisibility(View.GONE);
holder.warning.setVisibility(View.VISIBLE);

switch (warningType)
{
case OFF:
holder.warning.setVisibility(View.GONE);
holder.speedName.setVisibility(View.VISIBLE);
break;
case LOW:
holder.warningText.setText(R.string.speed_too_low);
break;
case HIGH:
holder.warningText.setText(R.string.speed_high_gas);
break;
case INSUFFICIENT:
holder.warningText.setText(R.string.insufficient_gas);
break;
}
}",1,0,0,0,0,0,0,0,0,20,2,35,0,0,1,1,6,4,0,0,3,0.6,0,0
450_32,32,43,"if (gs.seconds == 0)
{
blankCustomHolder(holder);
setCustomGasDetails(position);
return;
}
else
{
gs.seconds = getExpectedTransactionTime(gs.gasPrice);
speedGwei = context.getString(R.string.bracketed, context.getString(R.string.set_your_speed));
useGasLimit = customGasLimit;
}",1,0,0,0,0,0,0,0,0,7,1,12,0,0,0,1,6,4,0,0,3,0.63,0,0
450_34,34,34,blankCustomHolder(holder);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.47,5,3
450_35,35,35,setCustomGasDetails(position);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.58,4,2
450_36,36,36,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.14,3,1
450_38,38,39,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,0,0,0,0.25,0,0
450_40,40,40,gs.seconds = getExpectedTransactionTime(gs.gasPrice);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.59,0,0
450_41,41,41,"speedGwei = context.getString(R.string.bracketed, context.getString(R.string.set_your_speed));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.43,1,0
450_42,42,42,useGasLimit = customGasLimit;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.58,2,1
450_45,45,45,holder.speedName.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,6,4,0,0,1,0.46,5,3
450_46,46,46,holder.warning.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,6,4,0,0,0,0.31,6,3
450_48,48,48,switch (warningType),0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,0,0,0,0.35,8,5
450_50,50,51,"case OFF:
holder.warning.setVisibility(View.GONE);",0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,6,4,0,0,0,0.35,10,6
450_52,52,52,holder.speedName.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,4,0,0,1,0.44,12,7
450_53,53,53,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,4,0,0,0,0.33,13,7
450_54,54,55,"case LOW:
holder.warningText.setText(R.string.speed_too_low);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,0,0,1,0.45,14,8
450_56,56,56,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,4,0,0,0,0.33,16,10
450_57,57,58,"case HIGH:
holder.warningText.setText(R.string.speed_high_gas);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,0,0,1,0.45,17,10
450_59,59,59,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,4,0,0,0,0.33,19,12
450_60,60,61,"case INSUFFICIENT:
holder.warningText.setText(R.string.insufficient_gas);",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,0,0,0,0.42,20,12
450_62,62,62,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,4,0,0,0,0.33,22,14
450_66,66,66,BigDecimal gasFee = new BigDecimal(gs.gasPrice).multiply(useGasLimit);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,0,0,0,0.58,26,15
450_68,68,68,"String gasAmountInBase = BalanceUtils.getScaledValueScientific(gasFee, baseCurrency.tokenInfo.decimals, GAS_PRECISION);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,0,0,0,0.51,28,16
450_69,69,69,"if (gasAmountInBase.equals(""0"")) gasAmountInBase = ""0.00001"";",1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.48,29,16
450_70,70,70,"String displayStr = context.getString(R.string.gas_amount, gasAmountInBase, baseCurrency.getSymbol());",0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,4,0,0,0,0.46,30,17
450_71,71,72,"String displayTime = context.getString(R.string.gas_time_suffix,
Utils.shortConvertTimePeriodInSeconds(gs.seconds, context));",0,0,0,0,0,1,0,0,0,0,0,2,1,0,0,0,6,4,0,0,1,0.54,31,18
450_73,73,73,String fiatStr = getGasCost(gasAmountInBase);,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,4,0,0,0,0.51,33,20
450_75,75,75,"holder.speedGwei.setText(context.getString(R.string.gas_price_widget, speedGwei));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,6,4,0,0,1,0.49,35,21
450_76,76,76,"holder.speedCostEth.setText(context.getString(R.string.gas_fiat_suffix, gasAmountInBase, baseCurrency.getSymbol()));",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,4,0,0,1,0.52,36,21
450_77,77,77,holder.speedTime.setText(displayTime);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,6,4,0,0,2,0.57,37,22
450_79,79,87,"if (fiatStr.length() > 0)
{
holder.speedCostFiat.setVisibility(View.VISIBLE);
holder.speedCostFiat.setText(fiatStr);
}
else
{
holder.speedCostFiat.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,4,1,9,0,0,1,1,6,4,0,0,1,0.48,39,24
450_81,81,81,holder.speedCostFiat.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.46,41,25
450_82,82,82,holder.speedCostFiat.setText(fiatStr);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.49,42,25
450_84,84,85,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,0,0,0,0.25,44,27
450_86,86,86,holder.speedCostFiat.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,1,0.48,46,28
450_89,89,89,setCustomGasDetails(position);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,6,4,0,0,1,0.58,49,29
450_91,91,100,"if(minGasPrice > 0)
{
if(!gs.isCustom && gs.gasPrice.longValue() < minGasPrice)
{
ViewGroup.LayoutParams params = holder.itemLayout.getLayoutParams();
params.height = 0;
holder.itemLayout.setLayoutParams(params);
holder.itemLayout.requestLayout();
}
}",1,0,0,0,0,0,0,0,0,5,2,10,0,0,1,1,6,4,0,0,1,0.55,51,30
450_93,93,99,"if(!gs.isCustom && gs.gasPrice.longValue() < minGasPrice)
{
ViewGroup.LayoutParams params = holder.itemLayout.getLayoutParams();
params.height = 0;
holder.itemLayout.setLayoutParams(params);
holder.itemLayout.requestLayout();
}",1,0,0,0,0,0,0,0,0,4,1,7,0,0,0,0,6,4,0,0,1,0.54,53,31
450_95,95,95,ViewGroup.LayoutParams params = holder.itemLayout.getLayoutParams();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.33,55,32
450_96,96,96,params.height = 0;,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.38,56,32
450_97,97,97,holder.itemLayout.setLayoutParams(params);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.3,57,33
450_98,98,98,holder.itemLayout.requestLayout();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,0,0,0,0.31,58,34
450_102,102,102,BigDecimal txCost = gasFee.add(sendAmount);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,0,0,0,0.54,62,36
450_103,103,103,checkInsufficientGas(txCost);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,0,0,0,0.52,63,36
451_1,1,1,public long getExpectedTransactionTime(BigInteger customGasPriceBI),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.59,5,3
451_3,3,3,long expectedTime = gasSpeeds.get(0).seconds;,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,2,0,0,0,0.46,3,2
451_4,4,51,"if (gasSpeeds.size() > 2)
{
double dGasPrice = customGasPriceBI.doubleValue();
for (int index = 0; index < gasSpeeds.size() - 2; index++)
{
GasSpeed ug = gasSpeeds.get(index);
GasSpeed lg = gasSpeeds.get(index + 1);
double lowerBound = lg.gasPrice.doubleValue();
double upperBound = ug.gasPrice.doubleValue();
if (lowerBound <= dGasPrice && (upperBound >= dGasPrice))
{
double timeDiff = lg.seconds - ug.seconds;
double extrapolateFactor = (dGasPrice - lowerBound) / (upperBound - lowerBound);
expectedTime = (long) ((double) lg.seconds - extrapolateFactor * timeDiff);
break;
}
else if (lg.speed.equals(getString(R.string.speed_slow))) {
double dangerAmount = lowerBound / 2.0;
long dangerTime = 12 * DateUtils.HOUR_IN_MILLIS / 1000;

if (dGasPrice < (lowerBound*0.95))
{
showGasWarning(false);
}

if (dGasPrice < dangerAmount) {
expectedTime = -1;
} else {
expectedTime = extrapolateTime(dangerTime, lg.seconds, dGasPrice, dangerAmount, lowerBound);
}

return expectedTime;
}
else if (ug.speed.equals(getString(R.string.speed_rapid)) && dGasPrice >= upperBound)
{
if (dGasPrice > 1.4 * upperBound)
{
showGasWarning(true);
}
else
{
hideGasWarning();
}
return expectedTime;
}
}
hideGasWarning();
}",1,0,0,0,0,0,0,0,0,28,4,48,1,1,0,1,4,2,0,0,2,0.62,0,0
451_6,6,6,double dGasPrice = customGasPriceBI.doubleValue();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,2,0,0,1,0.62,0,0
451_7,7,49,"for (int index = 0; index < gasSpeeds.size() - 2; index++)
{
GasSpeed ug = gasSpeeds.get(index);
GasSpeed lg = gasSpeeds.get(index + 1);
double lowerBound = lg.gasPrice.doubleValue();
double upperBound = ug.gasPrice.doubleValue();
if (lowerBound <= dGasPrice && (upperBound >= dGasPrice))
{
double timeDiff = lg.seconds - ug.seconds;
double extrapolateFactor = (dGasPrice - lowerBound) / (upperBound - lowerBound);
expectedTime = (long) ((double) lg.seconds - extrapolateFactor * timeDiff);
break;
}
else if (lg.speed.equals(getString(R.string.speed_slow))) {
double dangerAmount = lowerBound / 2.0;
long dangerTime = 12 * DateUtils.HOUR_IN_MILLIS / 1000;

if (dGasPrice < (lowerBound*0.95))
{
showGasWarning(false);
}

if (dGasPrice < dangerAmount) {
expectedTime = -1;
} else {
expectedTime = extrapolateTime(dangerTime, lg.seconds, dGasPrice, dangerAmount, lowerBound);
}

return expectedTime;
}
else if (ug.speed.equals(getString(R.string.speed_rapid)) && dGasPrice >= upperBound)
{
if (dGasPrice > 1.4 * upperBound)
{
showGasWarning(true);
}
else
{
hideGasWarning();
}
return expectedTime;
}
}",0,0,1,0,0,0,0,0,0,25,3,43,1,1,0,0,4,2,0,0,2,0.61,0,0
451_9,9,9,GasSpeed ug = gasSpeeds.get(index);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,2,0,0,0,0.52,2,1
451_10,10,10,GasSpeed lg = gasSpeeds.get(index + 1);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,2,0,0,0,0.49,3,1
451_11,11,11,double lowerBound = lg.gasPrice.doubleValue();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,2,0,0,1,0.6,4,2
451_12,12,12,double upperBound = ug.gasPrice.doubleValue();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,4,2,0,0,1,0.6,5,3
451_13,13,48,"if (lowerBound <= dGasPrice && (upperBound >= dGasPrice))
{
double timeDiff = lg.seconds - ug.seconds;
double extrapolateFactor = (dGasPrice - lowerBound) / (upperBound - lowerBound);
expectedTime = (long) ((double) lg.seconds - extrapolateFactor * timeDiff);
break;
}
else if (lg.speed.equals(getString(R.string.speed_slow))) {
double dangerAmount = lowerBound / 2.0;
long dangerTime = 12 * DateUtils.HOUR_IN_MILLIS / 1000;

if (dGasPrice < (lowerBound*0.95))
{
showGasWarning(false);
}

if (dGasPrice < dangerAmount) {
expectedTime = -1;
} else {
expectedTime = extrapolateTime(dangerTime, lg.seconds, dGasPrice, dangerAmount, lowerBound);
}

return expectedTime;
}
else if (ug.speed.equals(getString(R.string.speed_rapid)) && dGasPrice >= upperBound)
{
if (dGasPrice > 1.4 * upperBound)
{
showGasWarning(true);
}
else
{
hideGasWarning();
}
return expectedTime;
}",1,0,0,0,0,0,0,0,0,20,2,36,0,1,0,0,4,2,0,0,2,0.61,6,4
451_15,15,15,double timeDiff = lg.seconds - ug.seconds;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.43,8,6
451_16,16,16,double extrapolateFactor = (dGasPrice - lowerBound) / (upperBound - lowerBound);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,2,0,0,2,0.63,9,6
451_17,17,17,expectedTime = (long) ((double) lg.seconds - extrapolateFactor * timeDiff);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,4,2,0,0,1,0.48,10,7
451_18,18,18,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,4,2,0,0,0,0.37,11,8
451_20,20,20,else if (lg.speed.equals(getString(R.string.speed_slow))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.48,13,10
451_21,21,21,double dangerAmount = lowerBound / 2.0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.5,14,10
451_22,22,22,long dangerTime = 12 * DateUtils.HOUR_IN_MILLIS / 1000;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,4,2,0,0,0,0.5,15,11
451_24,24,27,"if (dGasPrice < (lowerBound*0.95))
{
showGasWarning(false);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,1,1,4,2,0,0,1,0.57,17,13
451_26,26,26,showGasWarning(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.42,19,14
451_29,29,33,"if (dGasPrice < dangerAmount) {
expectedTime = -1;
} else {
expectedTime = extrapolateTime(dangerTime, lg.seconds, dGasPrice, dangerAmount, lowerBound);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,4,2,0,0,2,0.62,22,15
451_30,30,30,expectedTime = -1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.23,23,15
451_31,31,31,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.25,24,16
451_32,32,32,"expectedTime = extrapolateTime(dangerTime, lg.seconds, dGasPrice, dangerAmount, lowerBound);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,2,0.62,25,17
451_35,35,35,return expectedTime;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.22,28,19
451_37,37,37,else if (ug.speed.equals(getString(R.string.speed_rapid)) && dGasPrice >= upperBound),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,1,0.57,30,20
451_39,39,46,"if (dGasPrice > 1.4 * upperBound)
{
showGasWarning(true);
}
else
{
hideGasWarning();
}",1,0,0,0,0,0,0,0,0,3,1,8,0,0,0,0,4,2,0,0,1,0.56,32,21
451_41,41,41,showGasWarning(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.43,34,22
451_43,43,44,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,2,0,0,0,0.25,36,23
451_45,45,45,hideGasWarning();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.46,38,24
451_47,47,47,return expectedTime;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,2,0,0,0,0.22,40,25
451_50,50,50,hideGasWarning();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,2,0,0,0,0.46,43,26
451_53,53,53,return expectedTime;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,4,2,0,0,0,0.22,46,27
452_1,1,1,public long getExpectedTransactionTime(BigInteger customGasPriceBI),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.62,23,17
452_3,3,3,long expectedTime = gasSpeeds.get(0).seconds;,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,2,1,0,1,0.64,21,16
452_4,4,51,"if (gasSpeeds.size() > 2)
{
double dGasPrice = customGasPriceBI.doubleValue();
for (int index = 0; index < gasSpeeds.size() - 2; index++)
{
GasSpeed ug = gasSpeeds.get(index);
GasSpeed lg = gasSpeeds.get(index + 1);
double lowerBound = lg.gasPrice.doubleValue();
double upperBound = ug.gasPrice.doubleValue();
if (lowerBound <= dGasPrice && (upperBound >= dGasPrice))
{
double timeDiff = lg.seconds - ug.seconds;
double extrapolateFactor = (dGasPrice - lowerBound) / (upperBound - lowerBound);
expectedTime = (long) ((double) lg.seconds - extrapolateFactor * timeDiff);
break;
}
else if (lg.speed.equals(getString(R.string.speed_slow))) {
double dangerAmount = lowerBound / 2.0;
long dangerTime = 12 * DateUtils.HOUR_IN_MILLIS / 1000;

if (dGasPrice < (lowerBound*0.95))
{
showGasWarning(false);
}

if (dGasPrice < dangerAmount) {
expectedTime = -1;
} else {
expectedTime = extrapolateTime(dangerTime, lg.seconds, dGasPrice, dangerAmount, lowerBound);
}

return expectedTime;
}
else if (ug.speed.equals(getString(R.string.speed_rapid)) && dGasPrice >= upperBound)
{
if (dGasPrice > 1.4 * upperBound)
{
showGasWarning(true);
}
else
{
hideGasWarning();
}
return expectedTime;
}
}
hideGasWarning();
}",1,0,0,0,0,0,0,0,0,28,4,48,1,1,0,1,6,2,1,0,5,0.78,0,0
452_6,6,6,double dGasPrice = customGasPriceBI.doubleValue();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,2,1,0,1,0.59,18,14
452_7,7,49,"for (int index = 0; index < gasSpeeds.size() - 2; index++)
{
GasSpeed ug = gasSpeeds.get(index);
GasSpeed lg = gasSpeeds.get(index + 1);
double lowerBound = lg.gasPrice.doubleValue();
double upperBound = ug.gasPrice.doubleValue();
if (lowerBound <= dGasPrice && (upperBound >= dGasPrice))
{
double timeDiff = lg.seconds - ug.seconds;
double extrapolateFactor = (dGasPrice - lowerBound) / (upperBound - lowerBound);
expectedTime = (long) ((double) lg.seconds - extrapolateFactor * timeDiff);
break;
}
else if (lg.speed.equals(getString(R.string.speed_slow))) {
double dangerAmount = lowerBound / 2.0;
long dangerTime = 12 * DateUtils.HOUR_IN_MILLIS / 1000;

if (dGasPrice < (lowerBound*0.95))
{
showGasWarning(false);
}

if (dGasPrice < dangerAmount) {
expectedTime = -1;
} else {
expectedTime = extrapolateTime(dangerTime, lg.seconds, dGasPrice, dangerAmount, lowerBound);
}

return expectedTime;
}
else if (ug.speed.equals(getString(R.string.speed_rapid)) && dGasPrice >= upperBound)
{
if (dGasPrice > 1.4 * upperBound)
{
showGasWarning(true);
}
else
{
hideGasWarning();
}
return expectedTime;
}
}",0,0,1,0,0,0,0,0,0,25,3,43,1,1,0,0,6,2,1,0,5,0.78,0,0
452_9,9,9,GasSpeed ug = gasSpeeds.get(index);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,2,1,0,1,0.6,15,12
452_10,10,10,GasSpeed lg = gasSpeeds.get(index + 1);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,2,1,0,1,0.58,14,11
452_11,11,11,double lowerBound = lg.gasPrice.doubleValue();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,2,1,0,1,0.56,13,10
452_12,12,12,double upperBound = ug.gasPrice.doubleValue();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,6,2,1,0,1,0.57,12,9
452_13,13,48,"if (lowerBound <= dGasPrice && (upperBound >= dGasPrice))
{
double timeDiff = lg.seconds - ug.seconds;
double extrapolateFactor = (dGasPrice - lowerBound) / (upperBound - lowerBound);
expectedTime = (long) ((double) lg.seconds - extrapolateFactor * timeDiff);
break;
}
else if (lg.speed.equals(getString(R.string.speed_slow))) {
double dangerAmount = lowerBound / 2.0;
long dangerTime = 12 * DateUtils.HOUR_IN_MILLIS / 1000;

if (dGasPrice < (lowerBound*0.95))
{
showGasWarning(false);
}

if (dGasPrice < dangerAmount) {
expectedTime = -1;
} else {
expectedTime = extrapolateTime(dangerTime, lg.seconds, dGasPrice, dangerAmount, lowerBound);
}

return expectedTime;
}
else if (ug.speed.equals(getString(R.string.speed_rapid)) && dGasPrice >= upperBound)
{
if (dGasPrice > 1.4 * upperBound)
{
showGasWarning(true);
}
else
{
hideGasWarning();
}
return expectedTime;
}",1,0,0,0,0,0,0,0,0,20,2,36,0,1,0,0,6,2,1,0,5,0.78,0,0
452_15,15,15,double timeDiff = lg.seconds - ug.seconds;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.54,9,7
452_16,16,16,double extrapolateFactor = (dGasPrice - lowerBound) / (upperBound - lowerBound);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,2,1,0,1,0.57,8,6
452_17,17,17,expectedTime = (long) ((double) lg.seconds - extrapolateFactor * timeDiff);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,2,1,0,0,0.63,7,5
452_18,18,18,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,6,2,1,0,0,0.37,6,4
452_20,20,20,else if (lg.speed.equals(getString(R.string.speed_slow))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.55,4,3
452_21,21,21,double dangerAmount = lowerBound / 2.0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.49,3,2
452_22,22,22,long dangerTime = 12 * DateUtils.HOUR_IN_MILLIS / 1000;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,6,2,1,0,0,0.53,2,1
452_24,24,27,"if (dGasPrice < (lowerBound*0.95))
{
showGasWarning(false);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,1,1,6,2,1,0,4,0.76,0,0
452_26,26,26,showGasWarning(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,3,0.79,1,0
452_29,29,33,"if (dGasPrice < dangerAmount) {
expectedTime = -1;
} else {
expectedTime = extrapolateTime(dangerTime, lg.seconds, dGasPrice, dangerAmount, lowerBound);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,6,2,1,0,1,0.63,4,1
452_30,30,30,expectedTime = -1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.51,5,1
452_31,31,31,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.3,6,2
452_32,32,32,"expectedTime = extrapolateTime(dangerTime, lg.seconds, dGasPrice, dangerAmount, lowerBound);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.63,7,3
452_35,35,35,return expectedTime;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,2,1,0,0,0.5,10,5
452_37,37,37,else if (ug.speed.equals(getString(R.string.speed_rapid)) && dGasPrice >= upperBound),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,1,0.55,12,6
452_39,39,46,"if (dGasPrice > 1.4 * upperBound)
{
showGasWarning(true);
}
else
{
hideGasWarning();
}",1,0,0,0,0,0,0,0,0,3,1,8,0,0,0,0,6,2,1,0,3,0.76,14,7
452_41,41,41,showGasWarning(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,3,0.8,16,8
452_43,43,44,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,2,1,0,0,0.3,18,9
452_45,45,45,hideGasWarning();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,2,1,0,2,0.79,20,10
452_47,47,47,return expectedTime;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,6,2,1,0,0,0.5,22,11
452_50,50,50,hideGasWarning();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,6,2,1,0,2,0.79,25,12
452_53,53,53,return expectedTime;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,6,2,1,0,0,0.5,28,13
453_1,1,1,public long getExpectedTransactionTime(BigInteger customGasPriceBI),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,1,0.58,40,26
453_3,3,3,long expectedTime = gasSpeeds.get(0).seconds;,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,8,4,2,0,1,0.6,38,25
453_4,4,51,"if (gasSpeeds.size() > 2)
{
double dGasPrice = customGasPriceBI.doubleValue();
for (int index = 0; index < gasSpeeds.size() - 2; index++)
{
GasSpeed ug = gasSpeeds.get(index);
GasSpeed lg = gasSpeeds.get(index + 1);
double lowerBound = lg.gasPrice.doubleValue();
double upperBound = ug.gasPrice.doubleValue();
if (lowerBound <= dGasPrice && (upperBound >= dGasPrice))
{
double timeDiff = lg.seconds - ug.seconds;
double extrapolateFactor = (dGasPrice - lowerBound) / (upperBound - lowerBound);
expectedTime = (long) ((double) lg.seconds - extrapolateFactor * timeDiff);
break;
}
else if (lg.speed.equals(getString(R.string.speed_slow))) {
double dangerAmount = lowerBound / 2.0;
long dangerTime = 12 * DateUtils.HOUR_IN_MILLIS / 1000;

if (dGasPrice < (lowerBound*0.95))
{
showGasWarning(false);
}

if (dGasPrice < dangerAmount) {
expectedTime = -1;
} else {
expectedTime = extrapolateTime(dangerTime, lg.seconds, dGasPrice, dangerAmount, lowerBound);
}

return expectedTime;
}
else if (ug.speed.equals(getString(R.string.speed_rapid)) && dGasPrice >= upperBound)
{
if (dGasPrice > 1.4 * upperBound)
{
showGasWarning(true);
}
else
{
hideGasWarning();
}
return expectedTime;
}
}
hideGasWarning();
}",1,0,0,0,0,0,0,0,0,28,4,48,1,1,0,1,8,4,2,0,3,0.72,0,0
453_6,6,6,double dGasPrice = customGasPriceBI.doubleValue();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,8,4,2,0,1,0.62,35,23
453_7,7,49,"for (int index = 0; index < gasSpeeds.size() - 2; index++)
{
GasSpeed ug = gasSpeeds.get(index);
GasSpeed lg = gasSpeeds.get(index + 1);
double lowerBound = lg.gasPrice.doubleValue();
double upperBound = ug.gasPrice.doubleValue();
if (lowerBound <= dGasPrice && (upperBound >= dGasPrice))
{
double timeDiff = lg.seconds - ug.seconds;
double extrapolateFactor = (dGasPrice - lowerBound) / (upperBound - lowerBound);
expectedTime = (long) ((double) lg.seconds - extrapolateFactor * timeDiff);
break;
}
else if (lg.speed.equals(getString(R.string.speed_slow))) {
double dangerAmount = lowerBound / 2.0;
long dangerTime = 12 * DateUtils.HOUR_IN_MILLIS / 1000;

if (dGasPrice < (lowerBound*0.95))
{
showGasWarning(false);
}

if (dGasPrice < dangerAmount) {
expectedTime = -1;
} else {
expectedTime = extrapolateTime(dangerTime, lg.seconds, dGasPrice, dangerAmount, lowerBound);
}

return expectedTime;
}
else if (ug.speed.equals(getString(R.string.speed_rapid)) && dGasPrice >= upperBound)
{
if (dGasPrice > 1.4 * upperBound)
{
showGasWarning(true);
}
else
{
hideGasWarning();
}
return expectedTime;
}
}",0,0,1,0,0,0,0,0,0,25,3,43,1,1,0,0,8,4,2,0,3,0.71,0,0
453_9,9,9,GasSpeed ug = gasSpeeds.get(index);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,8,4,2,0,1,0.65,32,21
453_10,10,10,GasSpeed lg = gasSpeeds.get(index + 1);,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,8,4,2,0,1,0.62,31,20
453_11,11,11,double lowerBound = lg.gasPrice.doubleValue();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,8,4,2,0,1,0.6,30,19
453_12,12,12,double upperBound = ug.gasPrice.doubleValue();,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,8,4,2,0,1,0.63,29,18
453_13,13,48,"if (lowerBound <= dGasPrice && (upperBound >= dGasPrice))
{
double timeDiff = lg.seconds - ug.seconds;
double extrapolateFactor = (dGasPrice - lowerBound) / (upperBound - lowerBound);
expectedTime = (long) ((double) lg.seconds - extrapolateFactor * timeDiff);
break;
}
else if (lg.speed.equals(getString(R.string.speed_slow))) {
double dangerAmount = lowerBound / 2.0;
long dangerTime = 12 * DateUtils.HOUR_IN_MILLIS / 1000;

if (dGasPrice < (lowerBound*0.95))
{
showGasWarning(false);
}

if (dGasPrice < dangerAmount) {
expectedTime = -1;
} else {
expectedTime = extrapolateTime(dangerTime, lg.seconds, dGasPrice, dangerAmount, lowerBound);
}

return expectedTime;
}
else if (ug.speed.equals(getString(R.string.speed_rapid)) && dGasPrice >= upperBound)
{
if (dGasPrice > 1.4 * upperBound)
{
showGasWarning(true);
}
else
{
hideGasWarning();
}
return expectedTime;
}",1,0,0,0,0,0,0,0,0,20,2,36,0,1,0,0,8,4,2,0,3,0.7,0,0
453_15,15,15,double timeDiff = lg.seconds - ug.seconds;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.46,26,16
453_16,16,16,double extrapolateFactor = (dGasPrice - lowerBound) / (upperBound - lowerBound);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,8,4,2,0,1,0.63,25,15
453_17,17,17,expectedTime = (long) ((double) lg.seconds - extrapolateFactor * timeDiff);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,8,4,2,0,0,0.56,24,14
453_18,18,18,break;,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,8,4,2,0,0,0.38,23,13
453_20,20,20,else if (lg.speed.equals(getString(R.string.speed_slow))) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.5,21,12
453_21,21,21,double dangerAmount = lowerBound / 2.0;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.51,20,11
453_22,22,22,long dangerTime = 12 * DateUtils.HOUR_IN_MILLIS / 1000;,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,8,4,2,0,0,0.46,19,10
453_24,24,27,"if (dGasPrice < (lowerBound*0.95))
{
showGasWarning(false);
}",1,0,0,0,0,0,0,0,0,1,1,4,0,0,1,1,8,4,2,0,3,0.75,14,8
453_26,26,26,showGasWarning(false);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,3,0.78,15,8
453_29,29,33,"if (dGasPrice < dangerAmount) {
expectedTime = -1;
} else {
expectedTime = extrapolateTime(dangerTime, lg.seconds, dGasPrice, dangerAmount, lowerBound);
}",1,0,0,0,0,0,0,0,0,3,1,5,0,0,1,1,8,4,2,0,1,0.6,8,4
453_30,30,30,expectedTime = -1;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.39,11,6
453_31,31,31,} else {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.26,10,5
453_32,32,32,"expectedTime = extrapolateTime(dangerTime, lg.seconds, dGasPrice, dangerAmount, lowerBound);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,1,0.59,9,4
453_35,35,35,return expectedTime;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,8,4,2,0,0,0.39,6,3
453_37,37,37,else if (ug.speed.equals(getString(R.string.speed_rapid)) && dGasPrice >= upperBound),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,1,0.59,4,2
453_39,39,46,"if (dGasPrice > 1.4 * upperBound)
{
showGasWarning(true);
}
else
{
hideGasWarning();
}",1,0,0,0,0,0,0,0,0,3,1,8,0,0,0,0,8,4,2,0,3,0.75,0,0
453_41,41,41,showGasWarning(true);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,3,0.78,0,0
453_43,43,44,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,4,2,0,0,0.26,1,0
453_45,45,45,hideGasWarning();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,8,4,2,0,2,0.79,3,1
453_47,47,47,return expectedTime;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,8,4,2,0,0,0.39,5,2
453_50,50,50,hideGasWarning();,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,8,4,2,0,2,0.79,8,3
453_53,53,53,return expectedTime;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,8,4,2,0,0,0.39,11,4
1655_1,1,2,"    @Override
public boolean areItemsTheSame(SortedItem other)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,1,0.46,9,5
1655_4,4,23,"try
{
if (viewType == other.viewType)
{
TransactionMeta oldTx = (TransactionMeta) other.value;
return value.hash.equals(oldTx.hash);
}
else if (other.viewType == EventHolder.VIEW_TYPE || other.viewType == TransferHolder.VIEW_TYPE)
{
return true;
}
else
{
return false;
}
}
catch (Exception e)
{
return false;
}",0,0,0,0,1,0,0,0,0,9,2,20,0,0,0,0,4,3,0,0,2,0.51,0,0
1655_6,6,18,"if (viewType == other.viewType)
{
TransactionMeta oldTx = (TransactionMeta) other.value;
return value.hash.equals(oldTx.hash);
}
else if (other.viewType == EventHolder.VIEW_TYPE || other.viewType == TransferHolder.VIEW_TYPE)
{
return true;
}
else
{
return false;
}",1,0,0,0,0,0,0,0,0,6,1,13,0,0,0,0,4,3,0,0,2,0.51,0,0
1655_8,8,8,TransactionMeta oldTx = (TransactionMeta) other.value;,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.32,3,2
1655_9,9,9,return value.hash.equals(oldTx.hash);,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,4,3,0,0,0,0.31,2,1
1655_11,11,11,else if (other.viewType == EventHolder.VIEW_TYPE || other.viewType == TransferHolder.VIEW_TYPE),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,2,0.52,0,0
1655_13,13,13,return true;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.3,1,0
1655_15,15,16,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,3,0,0,0,0.18,3,1
1655_17,17,17,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.3,5,2
1655_20,20,20,catch (Exception e),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.27,8,3
1655_22,22,22,return false;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4,3,0,0,0,0.3,10,4
1441_1,1,2,"@Override
public void bind(@Nullable TokenCardMeta data, @NonNull Bundle addition)",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,13,6,4,0,0,0.43,19,11
1441_4,4,39,"try
{
token = tokensService.getToken(data.getChain(), data.getAddress());
if (token == null)
{
fillEmpty();
return;
}
else if (data.nameWeight < 1000 && !token.isEthereum())
{
Token backupChain = tokensService.getToken(data.getChain(), ""eth"");
if (backupChain != null) token = backupChain;
}

tokenLayout.setBackgroundResource(R.drawable.background_marketplace_event);
if (EthereumNetworkRepository.isPriorityToken(token)) extendedInfo.setVisibility(View.GONE);
contractSeparator.setVisibility(View.GONE);

String nameValue = token.getStringBalance() + "" "" + token.getFullName(assetDefinition, token.getTokenCount());
balanceEth.setText(nameValue);

primaryElement = false;

tokenIcon.bindData(token, assetDefinition);
tokenIcon.setOnTokenClickListener(onTokenClickListener);


populateTicker();

setContractType();

setPendingAmount();

} catch (Exception ex) {
fillEmpty();
}",0,0,0,0,1,0,0,0,0,20,2,36,0,0,0,0,13,6,4,0,4,0.57,0,0
1441_6,6,6,"token = tokensService.getToken(data.getChain(), data.getAddress());",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,13,6,4,0,0,0.38,15,9
1441_7,7,16,"if (token == null)
{
fillEmpty();
return;
}
else if (data.nameWeight < 1000 && !token.isEthereum())
{
Token backupChain = tokensService.getToken(data.getChain(), ""eth"");
if (backupChain != null) token = backupChain;
}",1,0,0,0,0,0,0,0,0,5,1,10,1,0,0,1,13,6,4,0,1,0.46,5,3
1441_9,9,9,fillEmpty();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,4,0,0,0.32,12,7
1441_10,10,10,return;,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,13,6,4,0,0,0.2,11,6
1441_12,12,12,else if (data.nameWeight < 1000 && !token.isEthereum()),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,4,0,1,0.5,9,5
1441_14,14,14,"Token backupChain = tokensService.getToken(data.getChain(), ""eth"");",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,13,6,4,0,0,0.4,7,4
1441_15,15,15,if (backupChain != null) token = backupChain;,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,13,6,4,0,0,0.38,6,3
1441_18,18,18,tokenLayout.setBackgroundResource(R.drawable.background_marketplace_event);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,13,6,4,0,0,0.45,3,2
1441_19,19,19,if (EthereumNetworkRepository.isPriorityToken(token)) extendedInfo.setVisibility(View.GONE);,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,13,6,4,0,0,0.43,2,1
1441_20,20,20,contractSeparator.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,13,6,4,0,0,0.44,1,0
1441_22,22,22,"String nameValue = token.getStringBalance() + "" "" + token.getFullName(assetDefinition, token.getTokenCount());",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,13,6,4,0,3,0.56,0,0
1441_23,23,23,balanceEth.setText(nameValue);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,13,6,4,0,3,0.67,1,0
1441_25,25,25,primaryElement = false;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,13,6,4,0,0,0.34,3,2
1441_27,27,27,"tokenIcon.bindData(token, assetDefinition);",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,13,6,4,0,0,0.43,5,3
1441_28,28,28,tokenIcon.setOnTokenClickListener(onTokenClickListener);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,13,6,4,0,0,0.4,6,3
1441_31,31,31,populateTicker();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,13,6,4,0,0,0.27,9,5
1441_33,33,33,setContractType();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,13,6,4,0,0,0.38,11,6
1441_35,35,35,setPendingAmount();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,13,6,4,0,0,0.4,13,7
1441_37,37,37,} catch (Exception ex) {,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,4,0,0,0.42,15,8
1441_38,38,38,fillEmpty();,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,6,4,0,0,0.32,16,8
1442_1,1,1,private void setContractType(),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.64,1,0
1442_3,3,3,int contractStringId = token.getContractType();,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,4,4,0,0,2,0.61,0,0
1442_4,4,13,"if (contractStringId > 0)
{
contractType.setText(contractStringId);
contractType.setVisibility(View.VISIBLE);
if (primaryElement) contractSeparator.setVisibility(View.VISIBLE);
}
else
{
contractType.setVisibility(View.GONE);
}",1,0,0,0,0,0,0,0,0,5,1,10,0,1,0,0,4,4,0,0,2,0.59,1,0
1442_6,6,6,contractType.setText(contractStringId);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.65,3,2
1442_7,7,7,contractType.setVisibility(View.VISIBLE);,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,2,0.6,4,2
1442_8,8,8,if (primaryElement) contractSeparator.setVisibility(View.VISIBLE);,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,4,0,0,1,0.43,5,3
1442_10,10,11,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,4,0,0,0,0.23,7,5
1442_12,12,12,contractType.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,4,0,0,2,0.63,9,6
1443_1,1,1,private void setTickerInfo(TokenTicker ticker),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.5,19,11
1443_3,3,3,BigDecimal correctedBalance = token.getCorrectedBalance(18);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.47,17,10
1443_4,4,4,"BigDecimal fiatBalance = correctedBalance.multiply(new BigDecimal(ticker.price)).setScale(18, RoundingMode.DOWN);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.64,16,9
1443_5,5,5,String converted = TickerService.getCurrencyString(fiatBalance.doubleValue());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,6,4,1,0,1,0.5,15,8
1443_7,7,7,"String lbl = getString(R.string.token_balance, """", converted);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,1,0,0,0.35,13,7
1443_8,8,8,"lbl += "" "" + ticker.priceSymbol;",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.54,12,6
1443_9,9,16,"if (correctedBalance.compareTo(BigDecimal.ZERO) > 0)
{
issuer.setVisibility(View.GONE);
}
else
{
lbl = EMPTY_BALANCE;
}",1,0,0,0,0,0,0,0,0,3,1,8,0,1,0,1,6,4,1,0,1,0.56,4,2
1443_11,11,11,issuer.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.57,9,4
1443_13,13,14,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,1,0,0,0.28,6,3
1443_15,15,15,lbl = EMPTY_BALANCE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.37,5,2
1443_18,18,18,balanceCurrency.setText(lbl);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,1,0,1,0.58,2,1
1443_19,19,19,balanceCurrency.setTextColor(getContext().getColor(R.color.text_dark_gray));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,1,0,1,0.51,1,0
1443_21,21,27,"try {
double percentage = Double.parseDouble(ticker.percentChange24h);
String formattedPercents = (percentage < 0 ? ""("" : ""(+"") + ticker.percentChange24h + ""%)"";
text24Hours.setText(formattedPercents);
text24Hours.setTextColor(ContextCompat.getColor(getContext(), percentage < 0 ? R.color.red : R.color.green));
} catch (Exception ex)
{  }",0,0,0,0,1,0,0,0,0,5,1,7,0,0,1,1,6,4,1,0,2,0.61,0,0
1443_22,22,22,double percentage = Double.parseDouble(ticker.percentChange24h);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.54,1,0
1443_23,23,23,"String formattedPercents = (percentage < 0 ? ""("" : ""(+"") + ticker.percentChange24h + ""%)"";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.53,2,1
1443_24,24,24,text24Hours.setText(formattedPercents);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.58,3,2
1443_25,25,25,"text24Hours.setTextColor(ContextCompat.getColor(getContext(), percentage < 0 ? R.color.red : R.color.green));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,2,0.6,4,3
1443_26,26,26,} catch (Exception ex),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.37,5,4
1443_29,29,29,String formattedValue = TickerService.getCurrencyString(new BigDecimal(ticker.price).doubleValue());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,1,0,1,0.55,8,6
1443_31,31,31,"lbl = getString(R.string.token_balance, """", formattedValue);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,4,1,0,1,0.49,10,7
1443_32,32,32,textAppreciation.setText(lbl);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.52,11,7
1443_33,33,33,textAppreciation.setTextColor(getContext().getColor(R.color.text_dark_gray));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,1,0,1,0.48,12,8
1443_35,35,35,"tokensService.addTokenValue(token.tokenInfo.chainId, token.getAddress(), fiatBalance.floatValue());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,1,0,1,0.5,14,10
1444_1,1,1,private void setTickerInfo(TokenTicker ticker),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.5,27,17
1444_3,3,3,BigDecimal correctedBalance = token.getCorrectedBalance(18);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.53,25,16
1444_4,4,4,"BigDecimal fiatBalance = correctedBalance.multiply(new BigDecimal(ticker.price)).setScale(18, RoundingMode.DOWN);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,2,0.7,24,15
1444_5,5,5,String converted = TickerService.getCurrencyString(fiatBalance.doubleValue());,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,6,4,1,0,1,0.53,23,14
1444_7,7,7,"String lbl = getString(R.string.token_balance, """", converted);",0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,6,4,1,0,0,0.4,21,13
1444_8,8,8,"lbl += "" "" + ticker.priceSymbol;",0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.7,20,12
1444_9,9,16,"if (correctedBalance.compareTo(BigDecimal.ZERO) > 0)
{
issuer.setVisibility(View.GONE);
}
else
{
lbl = EMPTY_BALANCE;
}",1,0,0,0,0,0,0,0,0,3,1,8,0,1,0,1,6,4,1,0,1,0.64,12,8
1444_11,11,11,issuer.setVisibility(View.GONE);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.61,17,10
1444_13,13,14,"else
{",0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,6,4,1,0,0,0.39,14,9
1444_15,15,15,lbl = EMPTY_BALANCE;,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.46,13,8
1444_18,18,18,balanceCurrency.setText(lbl);,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,1,0,1,0.62,10,7
1444_19,19,19,balanceCurrency.setTextColor(getContext().getColor(R.color.text_dark_gray));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,1,0,1,0.55,9,6
1444_21,21,27,"try {
double percentage = Double.parseDouble(ticker.percentChange24h);
String formattedPercents = (percentage < 0 ? ""("" : ""(+"") + ticker.percentChange24h + ""%)"";
text24Hours.setText(formattedPercents);
text24Hours.setTextColor(ContextCompat.getColor(getContext(), percentage < 0 ? R.color.red : R.color.green));
} catch (Exception ex)
{  }",0,0,0,0,1,0,0,0,0,5,1,7,0,0,1,1,6,4,1,0,1,0.64,1,0
1444_22,22,22,double percentage = Double.parseDouble(ticker.percentChange24h);,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.56,6,4
1444_23,23,23,"String formattedPercents = (percentage < 0 ? ""("" : ""(+"") + ticker.percentChange24h + ""%)"";",0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,6,4,1,0,0,0.57,5,3
1444_24,24,24,text24Hours.setText(formattedPercents);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.65,4,2
1444_25,25,25,"text24Hours.setTextColor(ContextCompat.getColor(getContext(), percentage < 0 ? R.color.red : R.color.green));",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,1,0.63,3,1
1444_26,26,26,} catch (Exception ex),0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,4,1,0,0,0.44,2,0
1444_29,29,29,String formattedValue = TickerService.getCurrencyString(new BigDecimal(ticker.price).doubleValue());,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,6,4,1,0,2,0.64,0,0
1444_31,31,31,"lbl = getString(R.string.token_balance, """", formattedValue);",0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,6,4,1,0,1,0.51,2,1
1444_32,32,32,textAppreciation.setText(lbl);,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,6,4,1,0,1,0.58,3,1
1444_33,33,33,textAppreciation.setTextColor(getContext().getColor(R.color.text_dark_gray));,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,6,4,1,0,1,0.52,4,2
1444_35,35,35,"tokensService.addTokenValue(token.tokenInfo.chainId, token.getAddress(), fiatBalance.floatValue());",0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,6,4,1,0,1,0.52,6,4
